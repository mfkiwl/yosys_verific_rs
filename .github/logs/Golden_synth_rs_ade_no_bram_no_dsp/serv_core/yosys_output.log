
 /----------------------------------------------------------------------------\
 |                                                                            |
 |  yosys -- Yosys Open SYnthesis Suite                                       |
 |                                                                            |
 |  Copyright (C) 2012 - 2020  Claire Xenia Wolf <claire@yosyshq.com>         |
 |                                                                            |
 |  Permission to use, copy, modify, and/or distribute this software for any  |
 |  purpose with or without fee is hereby granted, provided that the above    |
 |  copyright notice and this permission notice appear in all copies.         |
 |                                                                            |
 |  THE SOFTWARE IS PROVIDED "AS IS" AND THE AUTHOR DISCLAIMS ALL WARRANTIES  |
 |  WITH REGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF          |
 |  MERCHANTABILITY AND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR   |
 |  ANY SPECIAL, DIRECT, INDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES    |
 |  WHATSOEVER RESULTING FROM LOSS OF USE, DATA OR PROFITS, WHETHER IN AN     |
 |  ACTION OF CONTRACT, NEGLIGENCE OR OTHER TORTIOUS ACTION, ARISING OUT OF   |
 |  OR IN CONNECTION WITH THE USE OR PERFORMANCE OF THIS SOFTWARE.            |
 |                                                                            |
 \----------------------------------------------------------------------------/

 Yosys-Verific 0.0.92
 Yosys 0.18+10 (git sha1 7361c89db, gcc 9.4.0-1ubuntu1~20.04.1 -fPIC -Os)


-- Executing script file `yosys.ys' --
echo on

yosys> plugin -i synth-rs

yosys> read -verific

yosys> read -incdir .

yosys> verific -vlog-incdir .

1. Executing VERIFIC (loading SystemVerilog and VHDL designs using Verific).
Built with Verific May22_SW_Release, released at Wed Jun  1 05:39:28 2022.

yosys> verilog_defaults -add -I.

yosys> read -vlog2k serv_immdec.v serv_rf_ram_if.v serv_mem_if.v serv_ctrl.v serv_decode.v serv_rf_ram.v serv_top.v serv_csr.v serv_alu.v serv_rf_if.v serv_state.v serv_bufreg2.v serv_synth_wrapper.v serv_rf_top.v serv_bufreg.v

yosys> verific -vlog2k serv_immdec.v serv_rf_ram_if.v serv_mem_if.v serv_ctrl.v serv_decode.v serv_rf_ram.v serv_top.v serv_csr.v serv_alu.v serv_rf_if.v serv_state.v serv_bufreg2.v serv_synth_wrapper.v serv_rf_top.v serv_bufreg.v

2. Executing VERIFIC (loading SystemVerilog and VHDL designs using Verific).
Built with Verific May22_SW_Release, released at Wed Jun  1 05:39:28 2022.
VERIFIC-COMMENT [VERI-1482] Analyzing Verilog file 'serv_immdec.v'
VERIFIC-COMMENT [VERI-1482] Analyzing Verilog file 'serv_rf_ram_if.v'
VERIFIC-COMMENT [VERI-1482] Analyzing Verilog file 'serv_mem_if.v'
VERIFIC-COMMENT [VERI-1482] Analyzing Verilog file 'serv_ctrl.v'
VERIFIC-COMMENT [VERI-1482] Analyzing Verilog file 'serv_decode.v'
VERIFIC-COMMENT [VERI-1482] Analyzing Verilog file 'serv_rf_ram.v'
VERIFIC-COMMENT [VERI-1482] Analyzing Verilog file 'serv_top.v'
VERIFIC-COMMENT [VERI-1482] Analyzing Verilog file 'serv_csr.v'
VERIFIC-COMMENT [VERI-1482] Analyzing Verilog file 'serv_alu.v'
VERIFIC-COMMENT [VERI-1482] Analyzing Verilog file 'serv_rf_if.v'
VERIFIC-COMMENT [VERI-1482] Analyzing Verilog file 'serv_state.v'
VERIFIC-COMMENT [VERI-1482] Analyzing Verilog file 'serv_bufreg2.v'
VERIFIC-COMMENT [VERI-1482] Analyzing Verilog file 'serv_synth_wrapper.v'
VERIFIC-COMMENT [VERI-1482] Analyzing Verilog file 'serv_rf_top.v'
VERIFIC-COMMENT [VERI-1482] Analyzing Verilog file 'serv_bufreg.v'

yosys> synth_rs -top serv_synth_wrapper -tech genesis -goal area -de -no_dsp -no_bram -verilog synthesized.v

3. Executing synth_rs pass: v0.4.79

yosys> read_verilog -lib -specify -nomem2reg +/rapidsilicon/common/cells_sim.v +/rapidsilicon/genesis/cells_sim.v +/rapidsilicon/genesis/dsp_sim.v

3.1. Executing Verilog-2005 frontend: /nfs_scratch/scratch/Vorak/aram/Workspace/Raptor/yosys_verific_rs/yosys/install/bin/../share/yosys/rapidsilicon/common/cells_sim.v
Parsing Verilog input from `/nfs_scratch/scratch/Vorak/aram/Workspace/Raptor/yosys_verific_rs/yosys/install/bin/../share/yosys/rapidsilicon/common/cells_sim.v' to AST representation.
Generating RTLIL representation for module `\inv'.
Generating RTLIL representation for module `\buff'.
Generating RTLIL representation for module `\logic_0'.
Generating RTLIL representation for module `\logic_1'.
Generating RTLIL representation for module `\gclkbuff'.
Successfully finished Verilog frontend.

3.2. Executing Verilog-2005 frontend: /nfs_scratch/scratch/Vorak/aram/Workspace/Raptor/yosys_verific_rs/yosys/install/bin/../share/yosys/rapidsilicon/genesis/cells_sim.v
Parsing Verilog input from `/nfs_scratch/scratch/Vorak/aram/Workspace/Raptor/yosys_verific_rs/yosys/install/bin/../share/yosys/rapidsilicon/genesis/cells_sim.v' to AST representation.
Generating RTLIL representation for module `\dffsre'.
Generating RTLIL representation for module `\dffnsre'.
Generating RTLIL representation for module `\latchsre'.
Generating RTLIL representation for module `\latchnsre'.
Generating RTLIL representation for module `\io_scff'.
Generating RTLIL representation for module `\scff'.
Generating RTLIL representation for module `\sh_dff'.
Generating RTLIL representation for module `\adder_carry'.
Generating RTLIL representation for module `\sdffr'.
Generating RTLIL representation for module `\sdffs'.
Generating RTLIL representation for module `\TDP_BRAM18'.
Generating RTLIL representation for module `\TDP36K'.
Generating RTLIL representation for module `\BRAM2x18_TDP'.
Generating RTLIL representation for module `\BRAM2x18_SDP'.
Generating RTLIL representation for module `\_$_mem_v2_asymmetric'.
Successfully finished Verilog frontend.

3.3. Executing Verilog-2005 frontend: /nfs_scratch/scratch/Vorak/aram/Workspace/Raptor/yosys_verific_rs/yosys/install/bin/../share/yosys/rapidsilicon/genesis/dsp_sim.v
Parsing Verilog input from `/nfs_scratch/scratch/Vorak/aram/Workspace/Raptor/yosys_verific_rs/yosys/install/bin/../share/yosys/rapidsilicon/genesis/dsp_sim.v' to AST representation.
Generating RTLIL representation for module `\RS_DSP1'.
Generating RTLIL representation for module `\RS_DSP2'.
Generating RTLIL representation for module `\RS_DSP2_MULT'.
Generating RTLIL representation for module `\RS_DSP2_MULT_REGIN'.
Generating RTLIL representation for module `\RS_DSP2_MULT_REGOUT'.
Generating RTLIL representation for module `\RS_DSP2_MULT_REGIN_REGOUT'.
Generating RTLIL representation for module `\RS_DSP2_MULTADD'.
Generating RTLIL representation for module `\RS_DSP2_MULTADD_REGIN'.
Generating RTLIL representation for module `\RS_DSP2_MULTADD_REGOUT'.
Generating RTLIL representation for module `\RS_DSP2_MULTADD_REGIN_REGOUT'.
Generating RTLIL representation for module `\RS_DSP2_MULTACC'.
Generating RTLIL representation for module `\RS_DSP2_MULTACC_REGIN'.
Generating RTLIL representation for module `\RS_DSP2_MULTACC_REGOUT'.
Generating RTLIL representation for module `\RS_DSP2_MULTACC_REGIN_REGOUT'.
Generating RTLIL representation for module `\dsp_t1_20x18x64_cfg_ports'.
Generating RTLIL representation for module `\dsp_t1_10x9x32_cfg_ports'.
Generating RTLIL representation for module `\dsp_t1_sim_cfg_ports'.
Generating RTLIL representation for module `\RS_DSP3'.
Generating RTLIL representation for module `\RS_DSP3_MULT'.
Generating RTLIL representation for module `\RS_DSP3_MULT_REGIN'.
Generating RTLIL representation for module `\RS_DSP3_MULT_REGOUT'.
Generating RTLIL representation for module `\RS_DSP3_MULT_REGIN_REGOUT'.
Generating RTLIL representation for module `\RS_DSP3_MULTADD'.
Generating RTLIL representation for module `\RS_DSP3_MULTADD_REGIN'.
Generating RTLIL representation for module `\RS_DSP3_MULTADD_REGOUT'.
Generating RTLIL representation for module `\RS_DSP3_MULTADD_REGIN_REGOUT'.
Generating RTLIL representation for module `\RS_DSP3_MULTACC'.
Generating RTLIL representation for module `\RS_DSP3_MULTACC_REGIN'.
Generating RTLIL representation for module `\RS_DSP3_MULTACC_REGOUT'.
Generating RTLIL representation for module `\RS_DSP3_MULTACC_REGIN_REGOUT'.
Generating RTLIL representation for module `\dsp_t1_20x18x64_cfg_params'.
Generating RTLIL representation for module `\dsp_t1_10x9x32_cfg_params'.
Generating RTLIL representation for module `\dsp_t1_sim_cfg_params'.
Successfully finished Verilog frontend.

yosys> hierarchy -check -top serv_synth_wrapper

3.4. Executing HIERARCHY pass (managing design hierarchy).
VERIFIC-INFO [VERI-1018] serv_synth_wrapper.v:3: compiling module 'serv_synth_wrapper'
VERIFIC-INFO [VERI-1018] serv_rf_ram_if.v:2: compiling module 'serv_rf_ram_if(width=2)'
VERIFIC-WARNING [VERI-1209] serv_rf_ram_if.v:80: expression size 32 truncated to fit in target size 5
VERIFIC-INFO [VERI-1018] serv_top.v:3: compiling module 'serv_top'
VERIFIC-INFO [VERI-1018] serv_state.v:1: compiling module 'serv_state(WITH_CSR=1'b1,MDU=1'b0)'
VERIFIC-INFO [VERI-1018] serv_decode.v:2: compiling module 'serv_decode(PRE_REGISTER=1'b1,MDU=1'b0)'
VERIFIC-INFO [VERI-1018] serv_immdec.v:2: compiling module 'serv_immdec'
VERIFIC-INFO [VERI-1018] serv_bufreg.v:1: compiling module 'serv_bufreg(MDU=1'b0)'
VERIFIC-INFO [VERI-1018] serv_bufreg2.v:1: compiling module 'serv_bufreg2'
VERIFIC-WARNING [VERI-1209] serv_bufreg2.v:43: expression size 32 truncated to fit in target size 6
VERIFIC-INFO [VERI-1018] serv_ctrl.v:2: compiling module 'serv_ctrl'
VERIFIC-INFO [VERI-1018] serv_alu.v:2: compiling module 'serv_alu'
VERIFIC-INFO [VERI-1018] serv_rf_if.v:2: compiling module 'serv_rf_if'
VERIFIC-INFO [VERI-1018] serv_mem_if.v:2: compiling module 'serv_mem_if(WITH_CSR=1'b1)'
VERIFIC-INFO [VERI-1018] serv_csr.v:2: compiling module 'serv_csr'
Importing module serv_synth_wrapper.
Importing module serv_rf_ram_if(width=2).
Importing module serv_top.
Importing module serv_alu.
Importing module serv_bufreg(MDU=1'b0).
Importing module serv_bufreg2.
Importing module serv_csr.
Importing module serv_ctrl.
Importing module serv_decode(PRE_REGISTER=1'b1,MDU=1'b0).
Importing module serv_immdec.
Importing module serv_mem_if(WITH_CSR=1'b1).
Importing module serv_rf_if.
Importing module serv_state(WITH_CSR=1'b1,MDU=1'b0).

3.4.1. Analyzing design hierarchy..
Top module:  \serv_synth_wrapper
Used module:     \serv_top
Used module:         \serv_csr
Used module:         \serv_mem_if(WITH_CSR=1'b1)
Used module:         \serv_rf_if
Used module:         \serv_alu
Used module:         \serv_ctrl
Used module:         \serv_bufreg2
Used module:         \serv_bufreg(MDU=1'b0)
Used module:         \serv_immdec
Used module:         \serv_decode(PRE_REGISTER=1'b1,MDU=1'b0)
Used module:         \serv_state(WITH_CSR=1'b1,MDU=1'b0)
Used module:     \serv_rf_ram_if(width=2)

3.4.2. Analyzing design hierarchy..
Top module:  \serv_synth_wrapper
Used module:     \serv_top
Used module:         \serv_csr
Used module:         \serv_mem_if(WITH_CSR=1'b1)
Used module:         \serv_rf_if
Used module:         \serv_alu
Used module:         \serv_ctrl
Used module:         \serv_bufreg2
Used module:         \serv_bufreg(MDU=1'b0)
Used module:         \serv_immdec
Used module:         \serv_decode(PRE_REGISTER=1'b1,MDU=1'b0)
Used module:         \serv_state(WITH_CSR=1'b1,MDU=1'b0)
Used module:     \serv_rf_ram_if(width=2)
Removed 0 unused modules.

yosys> proc

3.5. Executing PROC pass (convert processes to netlists).

yosys> proc_clean

3.5.1. Executing PROC_CLEAN pass (remove empty switches from decision trees).
Cleaned up 0 empty switches.

yosys> proc_rmdead

3.5.2. Executing PROC_RMDEAD pass (remove dead branches from decision trees).
Removed a total of 0 dead cases.

yosys> proc_prune

3.5.3. Executing PROC_PRUNE pass (remove redundant assignments in processes).
Removed 0 redundant assignments.
Promoted 0 assignments to connections.

yosys> proc_init

3.5.4. Executing PROC_INIT pass (extract init attributes).

yosys> proc_arst

3.5.5. Executing PROC_ARST pass (detect async resets in processes).

yosys> proc_rom

3.5.6. Executing PROC_ROM pass (convert switches to ROMs).
Converted 0 switches.

yosys> proc_mux

3.5.7. Executing PROC_MUX pass (convert decision trees to multiplexers).

yosys> proc_dlatch

3.5.8. Executing PROC_DLATCH pass (convert process syncs to latches).

yosys> proc_dff

3.5.9. Executing PROC_DFF pass (convert process syncs to FFs).

yosys> proc_memwr

3.5.10. Executing PROC_MEMWR pass (convert process memory writes to cells).

yosys> proc_clean

3.5.11. Executing PROC_CLEAN pass (remove empty switches from decision trees).
Cleaned up 0 empty switches.

yosys> opt_expr -keepdc

3.5.12. Executing OPT_EXPR pass (perform const folding).
Optimizing module serv_state(WITH_CSR=1'b1,MDU=1'b0).
<suppressed ~1 debug messages>
Optimizing module serv_rf_if.
Optimizing module serv_mem_if(WITH_CSR=1'b1).
<suppressed ~2 debug messages>
Optimizing module serv_immdec.
Optimizing module serv_decode(PRE_REGISTER=1'b1,MDU=1'b0).
<suppressed ~6 debug messages>
Optimizing module serv_ctrl.
Optimizing module serv_csr.
<suppressed ~1 debug messages>
Optimizing module serv_bufreg2.
<suppressed ~1 debug messages>
Optimizing module serv_bufreg(MDU=1'b0).
Optimizing module serv_alu.
Optimizing module serv_top.
Optimizing module serv_rf_ram_if(width=2).
<suppressed ~1 debug messages>
Optimizing module serv_synth_wrapper.

yosys> bmuxmap

3.6. Executing BMUXMAP pass.

yosys> demuxmap

3.7. Executing DEMUXMAP pass.

yosys> clean_zerowidth

yosys> flatten

3.8. Executing FLATTEN pass (flatten design).
Deleting now unused module serv_alu.
Deleting now unused module serv_bufreg(MDU=1'b0).
Deleting now unused module serv_bufreg2.
Deleting now unused module serv_csr.
Deleting now unused module serv_ctrl.
Deleting now unused module serv_decode(PRE_REGISTER=1'b1,MDU=1'b0).
Deleting now unused module serv_immdec.
Deleting now unused module serv_mem_if(WITH_CSR=1'b1).
Deleting now unused module serv_rf_if.
Deleting now unused module serv_rf_ram_if(width=2).
Deleting now unused module serv_state(WITH_CSR=1'b1,MDU=1'b0).
Deleting now unused module serv_top.
<suppressed ~12 debug messages>

yosys> bmuxmap

3.9. Executing BMUXMAP pass.

yosys> demuxmap

3.10. Executing DEMUXMAP pass.

yosys> clean_zerowidth

yosys> tribuf -logic -formal

3.11. Executing TRIBUF pass.

yosys> deminout

3.12. Executing DEMINOUT pass (demote inout ports to input or output).

yosys> opt_expr

3.13. Executing OPT_EXPR pass (perform const folding).
Optimizing module serv_synth_wrapper.

yosys> opt_clean

3.14. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \serv_synth_wrapper..
Removed 2 unused cells and 1026 unused wires.
<suppressed ~252 debug messages>

yosys> check

3.15. Executing CHECK pass (checking for obvious problems).
Checking module serv_synth_wrapper...
Found and reported 0 problems.

yosys> opt_expr

3.16. Executing OPT_EXPR pass (perform const folding).
Optimizing module serv_synth_wrapper.
<suppressed ~9 debug messages>

yosys> opt_merge -nomux

3.17. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\serv_synth_wrapper'.
<suppressed ~39 debug messages>
Removed a total of 13 cells.

yosys> opt_muxtree

3.18. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \serv_synth_wrapper..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Removed 0 multiplexer ports.
<suppressed ~57 debug messages>

yosys> opt_reduce

3.19. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \serv_synth_wrapper.
Performed a total of 0 changes.

yosys> opt_merge

3.20. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\serv_synth_wrapper'.
Removed a total of 0 cells.

yosys> opt_share

3.21. Executing OPT_SHARE pass.

yosys> opt_dff -nosdff -nodffe

3.22. Executing OPT_DFF pass (perform DFF optimizations).
Removing never-active async load on $flatten\rf_ram_if.$verific$wdata1_r_reg$serv_rf_ram_if.v:88$362 ($aldff) from module serv_synth_wrapper.
Removing never-active async load on $flatten\rf_ram_if.$verific$rdata0_reg$serv_rf_ram_if.v:146$389 ($aldff) from module serv_synth_wrapper.
Removing never-active async load on $flatten\rf_ram_if.$verific$rcnt_reg$serv_rf_ram_if.v:146$386 ($aldff) from module serv_synth_wrapper.
Removing never-active async load on $flatten\cpu.\state.$verific$o_cnt_reg$serv_state.v:179$2087 ($aldff) from module serv_synth_wrapper.
Removing never-active async load on $flatten\cpu.\state.$verific$o_cnt_r_reg$serv_state.v:179$2088 ($aldff) from module serv_synth_wrapper.
Removing never-active async load on $flatten\cpu.\immdec.$verific$imm30_25_reg$serv_immdec.v:59$1729 ($aldff) from module serv_synth_wrapper.
Removing never-active async load on $flatten\cpu.\immdec.$verific$imm24_20_reg$serv_immdec.v:59$1730 ($aldff) from module serv_synth_wrapper.
Removing never-active async load on $flatten\cpu.\immdec.$verific$imm19_12_20_reg$serv_immdec.v:59$1727 ($aldff) from module serv_synth_wrapper.
Removing never-active async load on $flatten\cpu.\immdec.$verific$imm11_7_reg$serv_immdec.v:59$1731 ($aldff) from module serv_synth_wrapper.
Removing never-active async load on $flatten\cpu.\genblk1.csr.$verific$mcause3_0_reg$serv_csr.v:140$1255 ($aldff) from module serv_synth_wrapper.
Removing never-active async load on $flatten\cpu.\decode.$verific$opcode_reg$serv_decode.v:248$1602 ($aldff) from module serv_synth_wrapper.
Removing never-active async load on $flatten\cpu.\decode.$verific$funct3_reg$serv_decode.v:248$1599 ($aldff) from module serv_synth_wrapper.
Removing never-active async load on $flatten\cpu.\ctrl.$verific$o_ibus_adr_reg$serv_ctrl.v:78$1322 ($aldff) from module serv_synth_wrapper.
Removing never-active async load on $flatten\cpu.\bufreg2.$verific$dat_reg$serv_bufreg2.v:63$1113 ($aldff) from module serv_synth_wrapper.
Removing never-active async load on $flatten\cpu.\bufreg.$verific$lsb_reg$serv_bufreg.v:44$1043 ($aldff) from module serv_synth_wrapper.
Removing never-active async load on $flatten\cpu.\bufreg.$verific$data_reg$serv_bufreg.v:44$1042 ($aldff) from module serv_synth_wrapper.

yosys> opt_clean

3.23. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \serv_synth_wrapper..
Removed 0 unused cells and 22 unused wires.
<suppressed ~1 debug messages>

yosys> opt_expr

3.24. Executing OPT_EXPR pass (perform const folding).
Optimizing module serv_synth_wrapper.
MAX OPT ITERATION = 1

yosys> fsm -encoding binary

3.25. Executing FSM pass (extract and optimize FSM).

yosys> fsm_detect

3.25.1. Executing FSM_DETECT pass (finding FSMs in design).

yosys> fsm_extract

3.25.2. Executing FSM_EXTRACT pass (extracting FSM from design).

yosys> fsm_opt

3.25.3. Executing FSM_OPT pass (simple optimizations of FSMs).

yosys> opt_clean

3.25.4. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \serv_synth_wrapper..

yosys> fsm_opt

3.25.5. Executing FSM_OPT pass (simple optimizations of FSMs).

yosys> fsm_recode -encoding binary

3.25.6. Executing FSM_RECODE pass (re-assigning FSM state encoding).

yosys> fsm_info

3.25.7. Executing FSM_INFO pass (dumping all available information on FSM cells).

yosys> fsm_map

3.25.8. Executing FSM_MAP pass (mapping FSMs to basic logic).

yosys> opt_expr

3.26. Executing OPT_EXPR pass (perform const folding).
Optimizing module serv_synth_wrapper.

yosys> opt_merge -nomux

3.27. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\serv_synth_wrapper'.
Removed a total of 0 cells.

yosys> opt_muxtree

3.28. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \serv_synth_wrapper..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Removed 0 multiplexer ports.
<suppressed ~57 debug messages>

yosys> opt_reduce

3.29. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \serv_synth_wrapper.
Performed a total of 0 changes.

yosys> opt_merge

3.30. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\serv_synth_wrapper'.
Removed a total of 0 cells.

yosys> opt_share

3.31. Executing OPT_SHARE pass.

yosys> opt_dff -nosdff -sat

3.32. Executing OPT_DFF pass (perform DFF optimizations).
Adding EN signal on $flatten\rf_ram_if.$verific$rdata1_reg[0]$serv_rf_ram_if.v:122$372 ($dff) from module serv_synth_wrapper (D = \i_rdata [1], Q = \rf_ram_if.rdata1).
Adding EN signal on $flatten\cpu.\state.$verific$o_ctrl_jump_reg$serv_state.v:179$2084 ($dff) from module serv_synth_wrapper (D = $flatten\cpu.\state.$verific$n135$1964, Q = \cpu.state.o_ctrl_jump).
Adding EN signal on $flatten\cpu.\state.$verific$init_done_reg$serv_state.v:179$2083 ($dff) from module serv_synth_wrapper (D = $flatten\cpu.\state.$verific$n134$1963, Q = \cpu.state.init_done).
Adding EN signal on $flatten\cpu.\state.$verific$ibus_cyc_reg$serv_state.v:179$2082 ($dff) from module serv_synth_wrapper (D = $flatten\cpu.\ctrl.$verific$n49$1277, Q = \cpu.state.ibus_cyc).
Adding EN signal on $flatten\cpu.\state.$verific$genblk1.misalign_trap_sync_r_reg$serv_state.v:198$2100 ($dff) from module serv_synth_wrapper (D = $flatten\cpu.\state.$verific$n169$1975, Q = \cpu.state.genblk1.misalign_trap_sync_r).
Adding EN signal on $flatten\cpu.\mem_if.$verific$signbit_reg$serv_mem_if.v:56$1808 ($dff) from module serv_synth_wrapper (D = \cpu.mem_if.i_bufreg2_q, Q = \cpu.mem_if.signbit).
Adding EN signal on $flatten\cpu.\immdec.$verific$imm7_reg$serv_immdec.v:59$1728 ($dff) from module serv_synth_wrapper (D = $flatten\cpu.\immdec.$verific$n63$1663, Q = \cpu.immdec.imm7).
Adding EN signal on $flatten\cpu.\immdec.$verific$imm31_reg$serv_immdec.v:59$1726 ($dff) from module serv_synth_wrapper (D = \i_ibus_rdt [31], Q = \cpu.immdec.imm31).
Adding EN signal on $flatten\cpu.\immdec.$verific$imm30_25_reg$serv_immdec.v:59$1729 ($dff) from module serv_synth_wrapper (D = $flatten\cpu.\immdec.$verific$n70$1679, Q = \cpu.immdec.imm30_25).
Adding EN signal on $flatten\cpu.\immdec.$verific$imm24_20_reg$serv_immdec.v:59$1730 ($dff) from module serv_synth_wrapper (D = $flatten\cpu.\immdec.$verific$n93$1682, Q = \cpu.immdec.imm24_20).
Adding EN signal on $flatten\cpu.\immdec.$verific$imm19_12_20_reg$serv_immdec.v:59$1727 ($dff) from module serv_synth_wrapper (D = $flatten\cpu.\immdec.$verific$n32$1676, Q = \cpu.immdec.imm19_12_20).
Adding EN signal on $flatten\cpu.\immdec.$verific$imm11_7_reg$serv_immdec.v:59$1731 ($dff) from module serv_synth_wrapper (D = $flatten\cpu.\immdec.$verific$n113$1685, Q = \cpu.immdec.imm11_7).
Adding EN signal on $flatten\cpu.\genblk1.csr.$verific$timer_irq_r_reg$serv_csr.v:140$1250 ($dff) from module serv_synth_wrapper (D = \cpu.genblk1.csr.timer_irq, Q = \cpu.genblk1.csr.timer_irq_r).
Adding EN signal on $flatten\cpu.\genblk1.csr.$verific$o_new_irq_reg$serv_csr.v:140$1251 ($dff) from module serv_synth_wrapper (D = $flatten\cpu.\genblk1.csr.$verific$n96$1172, Q = \cpu.genblk1.csr.o_new_irq).
Adding EN signal on $flatten\cpu.\genblk1.csr.$verific$mstatus_mpie_reg$serv_csr.v:140$1254 ($dff) from module serv_synth_wrapper (D = \cpu.genblk1.csr.mstatus_mie, Q = \cpu.genblk1.csr.mstatus_mpie).
Adding EN signal on $flatten\cpu.\genblk1.csr.$verific$mstatus_mie_reg$serv_csr.v:140$1253 ($dff) from module serv_synth_wrapper (D = $flatten\cpu.\genblk1.csr.$verific$n51$1156, Q = \cpu.genblk1.csr.mstatus_mie).
Adding EN signal on $flatten\cpu.\genblk1.csr.$verific$mie_mtie_reg$serv_csr.v:140$1252 ($dff) from module serv_synth_wrapper (D = $flatten\cpu.\genblk1.csr.$verific$n97$1173, Q = \cpu.genblk1.csr.mie_mtie).
Adding EN signal on $flatten\cpu.\genblk1.csr.$verific$mcause3_0_reg$serv_csr.v:140$1255 ($dff) from module serv_synth_wrapper (D = $flatten\cpu.\genblk1.csr.$verific$n109$1175, Q = \cpu.genblk1.csr.mcause3_0).
Adding EN signal on $flatten\cpu.\genblk1.csr.$verific$mcause31_reg$serv_csr.v:140$1256 ($dff) from module serv_synth_wrapper (D = $flatten\cpu.\genblk1.csr.$verific$n91$1168, Q = \cpu.genblk1.csr.mcause31).
Adding EN signal on $flatten\cpu.\decode.$verific$opcode_reg$serv_decode.v:248$1602 ($dff) from module serv_synth_wrapper (D = \i_ibus_rdt [6:2], Q = \cpu.decode.opcode).
Adding EN signal on $flatten\cpu.\decode.$verific$op26_reg$serv_decode.v:248$1606 ($dff) from module serv_synth_wrapper (D = \i_ibus_rdt [26], Q = \cpu.decode.op26).
Adding EN signal on $flatten\cpu.\decode.$verific$op22_reg$serv_decode.v:248$1605 ($dff) from module serv_synth_wrapper (D = \i_ibus_rdt [22], Q = \cpu.decode.op22).
Adding EN signal on $flatten\cpu.\decode.$verific$op21_reg$serv_decode.v:248$1604 ($dff) from module serv_synth_wrapper (D = \i_ibus_rdt [21], Q = \cpu.decode.op21).
Adding EN signal on $flatten\cpu.\decode.$verific$op20_reg$serv_decode.v:248$1603 ($dff) from module serv_synth_wrapper (D = \i_ibus_rdt [20], Q = \cpu.decode.op20).
Adding EN signal on $flatten\cpu.\decode.$verific$imm30_reg$serv_decode.v:248$1600 ($dff) from module serv_synth_wrapper (D = \i_ibus_rdt [30], Q = \cpu.decode.imm30).
Adding EN signal on $flatten\cpu.\decode.$verific$funct3_reg$serv_decode.v:248$1599 ($dff) from module serv_synth_wrapper (D = \i_ibus_rdt [14:12], Q = \cpu.decode.funct3).
Adding EN signal on $flatten\cpu.\ctrl.$verific$o_ibus_adr_reg$serv_ctrl.v:78$1322 ($dff) from module serv_synth_wrapper (D = $flatten\cpu.\ctrl.$verific$n50$1282, Q = \cpu.ctrl.o_ibus_adr).
Adding EN signal on $flatten\cpu.\bufreg2.$verific$dat_reg$serv_bufreg2.v:63$1113 ($dff) from module serv_synth_wrapper (D = $flatten\cpu.\bufreg2.$verific$n111$1074, Q = \cpu.bufreg2.dat).
Adding EN signal on $flatten\cpu.\bufreg.$verific$lsb_reg$serv_bufreg.v:44$1043 ($dff) from module serv_synth_wrapper (D = { $flatten\cpu.\bufreg.$verific$n89$1011 \cpu.bufreg.lsb [1] }, Q = \cpu.bufreg.lsb).
Adding EN signal on $flatten\cpu.\bufreg.$verific$data_reg$serv_bufreg.v:44$1042 ($dff) from module serv_synth_wrapper (D = { $flatten\cpu.\bufreg.$verific$n24$1008 \cpu.bufreg.data [29:1] }, Q = \cpu.bufreg.data).
Adding EN signal on $flatten\cpu.\alu.$verific$cmp_r_reg$serv_alu.v:66$996 ($dff) from module serv_synth_wrapper (D = \cpu.state.i_alu_cmp, Q = \cpu.alu.cmp_r).

yosys> opt_clean

3.33. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \serv_synth_wrapper..
Removed 26 unused cells and 26 unused wires.
<suppressed ~27 debug messages>

yosys> opt_expr

3.34. Executing OPT_EXPR pass (perform const folding).
Optimizing module serv_synth_wrapper.
<suppressed ~5 debug messages>

yosys> opt_muxtree

3.35. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \serv_synth_wrapper..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Removed 0 multiplexer ports.
<suppressed ~41 debug messages>

yosys> opt_reduce

3.36. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \serv_synth_wrapper.
Performed a total of 0 changes.

yosys> opt_merge

3.37. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\serv_synth_wrapper'.
<suppressed ~6 debug messages>
Removed a total of 2 cells.

yosys> opt_share

3.38. Executing OPT_SHARE pass.

yosys> opt_dff -nosdff -sat

3.39. Executing OPT_DFF pass (perform DFF optimizations).

yosys> opt_clean

3.40. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \serv_synth_wrapper..
Removed 0 unused cells and 2 unused wires.
<suppressed ~1 debug messages>

yosys> opt_expr

3.41. Executing OPT_EXPR pass (perform const folding).
Optimizing module serv_synth_wrapper.

yosys> opt_muxtree

3.42. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \serv_synth_wrapper..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Removed 0 multiplexer ports.
<suppressed ~41 debug messages>

yosys> opt_reduce

3.43. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \serv_synth_wrapper.
Performed a total of 0 changes.

yosys> opt_merge

3.44. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\serv_synth_wrapper'.
Removed a total of 0 cells.

yosys> opt_share

3.45. Executing OPT_SHARE pass.

yosys> opt_dff -nosdff -sat

3.46. Executing OPT_DFF pass (perform DFF optimizations).

yosys> opt_clean

3.47. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \serv_synth_wrapper..

yosys> opt_expr

3.48. Executing OPT_EXPR pass (perform const folding).
Optimizing module serv_synth_wrapper.
MAX OPT ITERATION = 3

yosys> wreduce -keepdc

3.49. Executing WREDUCE pass (reducing word size of cells).
Removed top 4 bits (of 5) from port B of cell serv_synth_wrapper.$flatten\rf_ram_if.$verific$add_43$serv_rf_ram_if.v:127$374 ($add).
Removed top 1 bits (of 6) from port A of cell serv_synth_wrapper.$flatten\rf_ram_if.$verific$sub_20$serv_rf_ram_if.v:80$354 ($sub).
Removed top 4 bits (of 6) from port B of cell serv_synth_wrapper.$flatten\rf_ram_if.$verific$sub_20$serv_rf_ram_if.v:80$354 ($sub).
Removed top 1 bits (of 6) from port Y of cell serv_synth_wrapper.$flatten\rf_ram_if.$verific$sub_20$serv_rf_ram_if.v:80$354 ($sub).
Removed top 1 bits (of 2) from port B of cell serv_synth_wrapper.$flatten\cpu.\alu.$verific$add_10$serv_alu.v:34$964 ($add).
Removed top 1 bits (of 2) from port B of cell serv_synth_wrapper.$flatten\cpu.\bufreg.$verific$add_10$serv_bufreg.v:33$1028 ($add).
Removed top 26 bits (of 32) from mux cell serv_synth_wrapper.$flatten\cpu.\bufreg2.$verific$mux_14$serv_bufreg2.v:47$1091 ($mux).
Removed top 1 bits (of 2) from port B of cell serv_synth_wrapper.$flatten\cpu.\bufreg2.$verific$equal_23$serv_bufreg2.v:55$1101 ($eq).
Removed top 1 bits (of 2) from port B of cell serv_synth_wrapper.$flatten\cpu.\ctrl.$verific$add_7$serv_ctrl.v:49$1291 ($add).
Removed top 1 bits (of 2) from port B of cell serv_synth_wrapper.$flatten\cpu.\ctrl.$verific$add_24$serv_ctrl.v:61$1308 ($add).
Removed top 1 bits (of 2) from port B of cell serv_synth_wrapper.$flatten\cpu.\decode.$verific$equal_192$serv_decode.v:227$1581 ($eq).
Removed top 1 bits (of 2) from port B of cell serv_synth_wrapper.$flatten\cpu.\decode.$verific$equal_183$serv_decode.v:222$1577 ($eq).
Removed top 1 bits (of 2) from port B of cell serv_synth_wrapper.$flatten\cpu.\genblk1.csr.$verific$equal_5$serv_csr.v:56$1184 ($eq).
Removed top 1 bits (of 2) from port A of cell serv_synth_wrapper.$flatten\cpu.\rf_if.$verific$or_36$serv_rf_if.v:115$1880 ($or).
Removed top 2 bits (of 3) from port B of cell serv_synth_wrapper.$flatten\cpu.\state.$verific$equal_26$serv_state.v:78$2005 ($eq).
Removed top 2 bits (of 3) from port B of cell serv_synth_wrapper.$flatten\cpu.\state.$verific$add_95$serv_state.v:167$2069 ($add).
Removed top 1 bits (of 7) from port A of cell serv_synth_wrapper.$flatten\cpu.\bufreg2.$verific$sub_10$serv_bufreg2.v:45$1087 ($sub).
Removed top 6 bits (of 7) from port B of cell serv_synth_wrapper.$flatten\cpu.\bufreg2.$verific$sub_10$serv_bufreg2.v:45$1087 ($sub).
Removed top 1 bits (of 7) from port Y of cell serv_synth_wrapper.$flatten\cpu.\bufreg2.$verific$sub_10$serv_bufreg2.v:45$1087 ($sub).
Removed top 1 bits (of 7) from wire serv_synth_wrapper.$flatten\cpu.\bufreg2.$verific$n11$1072.
Removed top 4 bits (of 6) from wire serv_synth_wrapper.wreg1.

yosys> peepopt

3.50. Executing PEEPOPT pass (run peephole optimizers).

yosys> opt_clean

3.51. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \serv_synth_wrapper..
Removed 0 unused cells and 4 unused wires.
<suppressed ~1 debug messages>

yosys> bmuxmap

3.52. Executing BMUXMAP pass.

yosys> demuxmap

3.53. Executing DEMUXMAP pass.

yosys> clean_zerowidth

yosys> alumacc

3.54. Executing ALUMACC pass (create $alu and $macc cells).
Extracting $alu and $macc cells in module serv_synth_wrapper:
  creating $macc model for $flatten\cpu.\alu.$verific$add_10$serv_alu.v:34$964 ($add).
  creating $macc model for $flatten\cpu.\alu.$verific$add_13$serv_alu.v:36$967 ($add).
  creating $macc model for $flatten\cpu.\alu.$verific$add_14$serv_alu.v:36$968 ($add).
  creating $macc model for $flatten\cpu.\alu.$verific$add_9$serv_alu.v:34$963 ($add).
  creating $macc model for $flatten\cpu.\bufreg.$verific$add_10$serv_bufreg.v:33$1028 ($add).
  creating $macc model for $flatten\cpu.\bufreg.$verific$add_9$serv_bufreg.v:33$1027 ($add).
  creating $macc model for $flatten\cpu.\bufreg2.$verific$sub_10$serv_bufreg2.v:45$1087 ($sub).
  creating $macc model for $flatten\cpu.\ctrl.$verific$add_23$serv_ctrl.v:61$1307 ($add).
  creating $macc model for $flatten\cpu.\ctrl.$verific$add_24$serv_ctrl.v:61$1308 ($add).
  creating $macc model for $flatten\cpu.\ctrl.$verific$add_6$serv_ctrl.v:49$1290 ($add).
  creating $macc model for $flatten\cpu.\ctrl.$verific$add_7$serv_ctrl.v:49$1291 ($add).
  creating $macc model for $flatten\cpu.\state.$verific$add_95$serv_state.v:167$2069 ($add).
  creating $macc model for $flatten\rf_ram_if.$verific$add_43$serv_rf_ram_if.v:127$374 ($add).
  creating $macc model for $flatten\rf_ram_if.$verific$sub_20$serv_rf_ram_if.v:80$354 ($sub).
  merging $macc model for $flatten\cpu.\ctrl.$verific$add_6$serv_ctrl.v:49$1290 into $flatten\cpu.\ctrl.$verific$add_7$serv_ctrl.v:49$1291.
  merging $macc model for $flatten\cpu.\ctrl.$verific$add_23$serv_ctrl.v:61$1307 into $flatten\cpu.\ctrl.$verific$add_24$serv_ctrl.v:61$1308.
  merging $macc model for $flatten\cpu.\bufreg.$verific$add_9$serv_bufreg.v:33$1027 into $flatten\cpu.\bufreg.$verific$add_10$serv_bufreg.v:33$1028.
  merging $macc model for $flatten\cpu.\alu.$verific$add_13$serv_alu.v:36$967 into $flatten\cpu.\alu.$verific$add_14$serv_alu.v:36$968.
  merging $macc model for $flatten\cpu.\alu.$verific$add_9$serv_alu.v:34$963 into $flatten\cpu.\alu.$verific$add_10$serv_alu.v:34$964.
  creating $alu model for $macc $flatten\cpu.\ctrl.$verific$add_24$serv_ctrl.v:61$1308.
  creating $alu model for $macc $flatten\cpu.\ctrl.$verific$add_7$serv_ctrl.v:49$1291.
  creating $alu model for $macc $flatten\cpu.\bufreg2.$verific$sub_10$serv_bufreg2.v:45$1087.
  creating $alu model for $macc $flatten\cpu.\state.$verific$add_95$serv_state.v:167$2069.
  creating $alu model for $macc $flatten\cpu.\bufreg.$verific$add_10$serv_bufreg.v:33$1028.
  creating $alu model for $macc $flatten\rf_ram_if.$verific$sub_20$serv_rf_ram_if.v:80$354.
  creating $alu model for $macc $flatten\cpu.\alu.$verific$add_14$serv_alu.v:36$968.
  creating $alu model for $macc $flatten\rf_ram_if.$verific$add_43$serv_rf_ram_if.v:127$374.
  creating $alu model for $macc $flatten\cpu.\alu.$verific$add_10$serv_alu.v:34$964.
  creating $alu cell for $flatten\cpu.\alu.$verific$add_10$serv_alu.v:34$964: $auto$alumacc.cc:485:replace_alu$2146
  creating $alu cell for $flatten\rf_ram_if.$verific$add_43$serv_rf_ram_if.v:127$374: $auto$alumacc.cc:485:replace_alu$2149
  creating $alu cell for $flatten\cpu.\alu.$verific$add_14$serv_alu.v:36$968: $auto$alumacc.cc:485:replace_alu$2152
  creating $alu cell for $flatten\rf_ram_if.$verific$sub_20$serv_rf_ram_if.v:80$354: $auto$alumacc.cc:485:replace_alu$2155
  creating $alu cell for $flatten\cpu.\bufreg.$verific$add_10$serv_bufreg.v:33$1028: $auto$alumacc.cc:485:replace_alu$2158
  creating $alu cell for $flatten\cpu.\state.$verific$add_95$serv_state.v:167$2069: $auto$alumacc.cc:485:replace_alu$2161
  creating $alu cell for $flatten\cpu.\bufreg2.$verific$sub_10$serv_bufreg2.v:45$1087: $auto$alumacc.cc:485:replace_alu$2164
  creating $alu cell for $flatten\cpu.\ctrl.$verific$add_7$serv_ctrl.v:49$1291: $auto$alumacc.cc:485:replace_alu$2167
  creating $alu cell for $flatten\cpu.\ctrl.$verific$add_24$serv_ctrl.v:61$1308: $auto$alumacc.cc:485:replace_alu$2170
  created 9 $alu and 0 $macc cells.

yosys> opt_expr

3.55. Executing OPT_EXPR pass (perform const folding).
Optimizing module serv_synth_wrapper.

yosys> opt_merge -nomux

3.56. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\serv_synth_wrapper'.
Removed a total of 0 cells.

yosys> opt_muxtree

3.57. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \serv_synth_wrapper..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Removed 0 multiplexer ports.
<suppressed ~41 debug messages>

yosys> opt_reduce

3.58. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \serv_synth_wrapper.
Performed a total of 0 changes.

yosys> opt_merge

3.59. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\serv_synth_wrapper'.
Removed a total of 0 cells.

yosys> opt_share

3.60. Executing OPT_SHARE pass.

yosys> opt_dff -nosdff -nodffe

3.61. Executing OPT_DFF pass (perform DFF optimizations).

yosys> opt_clean

3.62. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \serv_synth_wrapper..
Removed 5 unused cells and 9 unused wires.
<suppressed ~6 debug messages>

yosys> opt_expr

3.63. Executing OPT_EXPR pass (perform const folding).
Optimizing module serv_synth_wrapper.

yosys> opt_muxtree

3.64. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \serv_synth_wrapper..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Removed 0 multiplexer ports.
<suppressed ~41 debug messages>

yosys> opt_reduce

3.65. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \serv_synth_wrapper.
Performed a total of 0 changes.

yosys> opt_merge

3.66. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\serv_synth_wrapper'.
Removed a total of 0 cells.

yosys> opt_share

3.67. Executing OPT_SHARE pass.

yosys> opt_dff -nosdff -nodffe

3.68. Executing OPT_DFF pass (perform DFF optimizations).

yosys> opt_clean

3.69. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \serv_synth_wrapper..

yosys> opt_expr

3.70. Executing OPT_EXPR pass (perform const folding).
Optimizing module serv_synth_wrapper.
MAX OPT ITERATION = 2

yosys> stat

3.71. Printing statistics.

=== serv_synth_wrapper ===

   Number of wires:                828
   Number of wire bits:           1972
   Number of public wires:         546
   Number of public wire bits:    1527
   Number of memories:               0
   Number of memory bits:            0
   Number of processes:              0
   Number of cells:                427
     $alu                            9
     $and                          155
     $dff                           17
     $dffe                          31
     $eq                            13
     $logic_not                     10
     $mux                           60
     $not                           39
     $or                            84
     $reduce_bool                    3
     $reduce_or                      3
     $xor                            3


yosys> memory -nomap

3.72. Executing MEMORY pass.

yosys> opt_mem

3.72.1. Executing OPT_MEM pass (optimize memories).
Performed a total of 0 transformations.

yosys> opt_mem_priority

3.72.2. Executing OPT_MEM_PRIORITY pass (removing unnecessary memory write priority relations).
Performed a total of 0 transformations.

yosys> opt_mem_feedback

3.72.3. Executing OPT_MEM_FEEDBACK pass (finding memory read-to-write feedback paths).

yosys> memory_bmux2rom

3.72.4. Executing MEMORY_BMUX2ROM pass (converting muxes to ROMs).

yosys> memory_dff

3.72.5. Executing MEMORY_DFF pass (merging $dff cells to $memrd).

yosys> opt_clean

3.72.6. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \serv_synth_wrapper..

yosys> memory_share

3.72.7. Executing MEMORY_SHARE pass (consolidating $memrd/$memwr cells).

yosys> opt_mem_widen

3.72.8. Executing OPT_MEM_WIDEN pass (optimize memories where all ports are wide).
Performed a total of 0 transformations.

yosys> opt_clean

3.72.9. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \serv_synth_wrapper..

yosys> memory_collect

3.72.10. Executing MEMORY_COLLECT pass (generating $mem cells).

yosys> stat

3.73. Printing statistics.

=== serv_synth_wrapper ===

   Number of wires:                828
   Number of wire bits:           1972
   Number of public wires:         546
   Number of public wire bits:    1527
   Number of memories:               0
   Number of memory bits:            0
   Number of processes:              0
   Number of cells:                427
     $alu                            9
     $and                          155
     $dff                           17
     $dffe                          31
     $eq                            13
     $logic_not                     10
     $mux                           60
     $not                           39
     $or                            84
     $reduce_bool                    3
     $reduce_or                      3
     $xor                            3


yosys> muxpack

3.74. Executing MUXPACK pass ($mux cell cascades to $pmux).
Converting serv_synth_wrapper.$flatten\cpu.\genblk1.csr.$verific$i13$serv_csr.v:60$1191 ... serv_synth_wrapper.$flatten\cpu.\genblk1.csr.$verific$i15$serv_csr.v:60$1193 to a pmux with 3 cases.
Converted 3 (p)mux cells into 1 pmux cells.
<suppressed ~59 debug messages>

yosys> opt_clean

3.75. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \serv_synth_wrapper..
Removed 0 unused cells and 2 unused wires.
<suppressed ~1 debug messages>

yosys> pmuxtree

3.76. Executing PMUXTREE pass.

yosys> muxpack

3.77. Executing MUXPACK pass ($mux cell cascades to $pmux).
Converting serv_synth_wrapper.$auto$pmuxtree.cc:65:recursive_mux_generator$2173 ... serv_synth_wrapper.$auto$pmuxtree.cc:65:recursive_mux_generator$2175 to a pmux with 2 cases.
Converted 2 (p)mux cells into 1 pmux cells.
<suppressed ~58 debug messages>

yosys> memory_map

3.78. Executing MEMORY_MAP pass (converting memories to logic and flip-flops).

yosys> stat

3.79. Printing statistics.

=== serv_synth_wrapper ===

   Number of wires:                828
   Number of wire bits:           1972
   Number of public wires:         546
   Number of public wire bits:    1527
   Number of memories:               0
   Number of memory bits:            0
   Number of processes:              0
   Number of cells:                425
     $alu                            9
     $and                          155
     $dff                           17
     $dffe                          31
     $eq                            13
     $logic_not                     10
     $mux                           57
     $not                           39
     $or                            84
     $pmux                           1
     $reduce_bool                    3
     $reduce_or                      3
     $xor                            3


yosys> techmap -map +/techmap.v -map +/rapidsilicon/genesis/arith_map.v

3.80. Executing TECHMAP pass (map to technology primitives).

3.80.1. Executing Verilog-2005 frontend: /nfs_scratch/scratch/Vorak/aram/Workspace/Raptor/yosys_verific_rs/yosys/install/bin/../share/yosys/techmap.v
Parsing Verilog input from `/nfs_scratch/scratch/Vorak/aram/Workspace/Raptor/yosys_verific_rs/yosys/install/bin/../share/yosys/techmap.v' to AST representation.
Generating RTLIL representation for module `\_90_simplemap_bool_ops'.
Generating RTLIL representation for module `\_90_simplemap_reduce_ops'.
Generating RTLIL representation for module `\_90_simplemap_logic_ops'.
Generating RTLIL representation for module `\_90_simplemap_compare_ops'.
Generating RTLIL representation for module `\_90_simplemap_various'.
Generating RTLIL representation for module `\_90_simplemap_registers'.
Generating RTLIL representation for module `\_90_shift_ops_shr_shl_sshl_sshr'.
Generating RTLIL representation for module `\_90_shift_shiftx'.
Generating RTLIL representation for module `\_90_fa'.
Generating RTLIL representation for module `\_90_lcu'.
Generating RTLIL representation for module `\_90_alu'.
Generating RTLIL representation for module `\_90_macc'.
Generating RTLIL representation for module `\_90_alumacc'.
Generating RTLIL representation for module `\$__div_mod_u'.
Generating RTLIL representation for module `\$__div_mod_trunc'.
Generating RTLIL representation for module `\_90_div'.
Generating RTLIL representation for module `\_90_mod'.
Generating RTLIL representation for module `\$__div_mod_floor'.
Generating RTLIL representation for module `\_90_divfloor'.
Generating RTLIL representation for module `\_90_modfloor'.
Generating RTLIL representation for module `\_90_pow'.
Generating RTLIL representation for module `\_90_pmux'.
Generating RTLIL representation for module `\_90_demux'.
Generating RTLIL representation for module `\_90_lut'.
Successfully finished Verilog frontend.

3.80.2. Executing Verilog-2005 frontend: /nfs_scratch/scratch/Vorak/aram/Workspace/Raptor/yosys_verific_rs/yosys/install/bin/../share/yosys/rapidsilicon/genesis/arith_map.v
Parsing Verilog input from `/nfs_scratch/scratch/Vorak/aram/Workspace/Raptor/yosys_verific_rs/yosys/install/bin/../share/yosys/rapidsilicon/genesis/arith_map.v' to AST representation.
Generating RTLIL representation for module `\_80_rs_alu'.
Successfully finished Verilog frontend.

3.80.3. Continuing TECHMAP pass.
Using template $paramod$1d1e68f77481583066c6d429218f48ea9d5739b3\_90_alu for cells of type $alu.
/nfs_scratch/scratch/Vorak/aram/Workspace/Raptor/yosys_verific_rs/yosys/install/bin/../share/yosys/rapidsilicon/genesis/arith_map.v:80: Warning: Range [-1:-1] select out of bounds on signal `\C': Setting 1 LSB bits to undef.
/nfs_scratch/scratch/Vorak/aram/Workspace/Raptor/yosys_verific_rs/yosys/install/bin/../share/yosys/rapidsilicon/genesis/arith_map.v:88: Warning: Range [-1:-1] select out of bounds on signal `\Y': Setting 1 LSB bits to undef.
/nfs_scratch/scratch/Vorak/aram/Workspace/Raptor/yosys_verific_rs/yosys/install/bin/../share/yosys/rapidsilicon/genesis/arith_map.v:88: Warning: Range [-1:-1] select out of bounds on signal `\S': Setting 1 LSB bits to undef.
/nfs_scratch/scratch/Vorak/aram/Workspace/Raptor/yosys_verific_rs/yosys/install/bin/../share/yosys/rapidsilicon/genesis/arith_map.v:88: Warning: Ignoring assignment to constant bits:
    old assignment: 1'x = $xor$/nfs_scratch/scratch/Vorak/aram/Workspace/Raptor/yosys_verific_rs/yosys/install/bin/../share/yosys/rapidsilicon/genesis/arith_map.v:88$2276_Y
    new assignment: { } = { }.
/nfs_scratch/scratch/Vorak/aram/Workspace/Raptor/yosys_verific_rs/yosys/install/bin/../share/yosys/rapidsilicon/genesis/arith_map.v:89: Warning: Range [-1:-1] select out of bounds on signal `\S': Setting 1 LSB bits to undef.
/nfs_scratch/scratch/Vorak/aram/Workspace/Raptor/yosys_verific_rs/yosys/install/bin/../share/yosys/rapidsilicon/genesis/arith_map.v:89: Warning: Range [-1:-1] select out of bounds on signal `\AA': Setting 1 LSB bits to undef.
Using template $paramod$fc972a7a46956c1788f3cb5257b53c8f1df2d0cc\_90_alu for cells of type $alu.
Using extmapper simplemap for cells of type $and.
Using extmapper simplemap for cells of type $or.
Using extmapper simplemap for cells of type $mux.
Using extmapper simplemap for cells of type $not.
Using extmapper simplemap for cells of type $dff.
Using extmapper simplemap for cells of type $dffe.
Using extmapper simplemap for cells of type $reduce_bool.
Using template $paramod$c5c783b17ab1d780abfad8cfe6563a0a7b47a3b0\_90_pmux for cells of type $pmux.
Using extmapper simplemap for cells of type $xor.
Using template $paramod$eae5c6d909a05153739c7821f34da2cbc0422532\_90_alu for cells of type $alu.
Using template $paramod$672a140277c71df8314410f22acc08d55222c3c7\_90_alu for cells of type $alu.
Using template $paramod$3ef7d3dd227da7627a99c5e5a6a4deb817573e39\_90_alu for cells of type $alu.
Using extmapper simplemap for cells of type $logic_not.
Using extmapper simplemap for cells of type $eq.
Using extmapper simplemap for cells of type $reduce_or.
Using template $paramod$a04dd9d4d8b430140c4ff94b50470fb380fda2a0\_90_alu for cells of type $alu.
Using template $paramod\_90_lcu\WIDTH=32'00000000000000000000000000000010 for cells of type $lcu.
Using extmapper simplemap for cells of type $pos.
Using template $paramod\_90_lcu\WIDTH=32'00000000000000000000000000000110 for cells of type $lcu.
Using template $paramod\_90_lcu\WIDTH=32'00000000000000000000000000000001 for cells of type $lcu.
Using template $paramod\_90_lcu\WIDTH=32'00000000000000000000000000000101 for cells of type $lcu.
Using template $paramod\_90_lcu\WIDTH=32'00000000000000000000000000000011 for cells of type $lcu.
No more expansions possible.
<suppressed ~1768 debug messages>

yosys> stat

3.81. Printing statistics.

=== serv_synth_wrapper ===

   Number of wires:               1171
   Number of wire bits:          12421
   Number of public wires:         546
   Number of public wire bits:    1527
   Number of memories:               0
   Number of memory bits:            0
   Number of processes:              0
   Number of cells:                978
     $_AND_                        229
     $_DFFE_PP_                    153
     $_DFF_P_                       28
     $_MUX_                        205
     $_NOT_                         90
     $_OR_                         175
     $_XOR_                         98


yosys> opt_expr

3.82. Executing OPT_EXPR pass (perform const folding).
Optimizing module serv_synth_wrapper.
<suppressed ~175 debug messages>

yosys> opt_merge -nomux

3.83. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\serv_synth_wrapper'.
<suppressed ~114 debug messages>
Removed a total of 38 cells.

yosys> opt_muxtree

3.84. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \serv_synth_wrapper..
  Creating internal representation of mux trees.
  No muxes found in this module.
Removed 0 multiplexer ports.

yosys> opt_reduce

3.85. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \serv_synth_wrapper.
Performed a total of 0 changes.

yosys> opt_merge

3.86. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\serv_synth_wrapper'.
Removed a total of 0 cells.

yosys> opt_share

3.87. Executing OPT_SHARE pass.

yosys> opt_dff -nosdff -nodffe

3.88. Executing OPT_DFF pass (perform DFF optimizations).

yosys> opt_clean

3.89. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \serv_synth_wrapper..
Removed 23 unused cells and 342 unused wires.
<suppressed ~28 debug messages>

yosys> opt_expr

3.90. Executing OPT_EXPR pass (perform const folding).
Optimizing module serv_synth_wrapper.

yosys> opt_muxtree

3.91. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \serv_synth_wrapper..
  Creating internal representation of mux trees.
  No muxes found in this module.
Removed 0 multiplexer ports.

yosys> opt_reduce

3.92. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \serv_synth_wrapper.
Performed a total of 0 changes.

yosys> opt_merge

3.93. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\serv_synth_wrapper'.
Removed a total of 0 cells.

yosys> opt_share

3.94. Executing OPT_SHARE pass.

yosys> opt_dff -nosdff -nodffe

3.95. Executing OPT_DFF pass (perform DFF optimizations).

yosys> opt_clean

3.96. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \serv_synth_wrapper..

yosys> opt_expr

3.97. Executing OPT_EXPR pass (perform const folding).
Optimizing module serv_synth_wrapper.
MAX OPT ITERATION = 2

yosys> opt_expr -full

3.98. Executing OPT_EXPR pass (perform const folding).
Optimizing module serv_synth_wrapper.
<suppressed ~16 debug messages>

yosys> techmap -map +/techmap.v

3.99. Executing TECHMAP pass (map to technology primitives).

3.99.1. Executing Verilog-2005 frontend: /nfs_scratch/scratch/Vorak/aram/Workspace/Raptor/yosys_verific_rs/yosys/install/bin/../share/yosys/techmap.v
Parsing Verilog input from `/nfs_scratch/scratch/Vorak/aram/Workspace/Raptor/yosys_verific_rs/yosys/install/bin/../share/yosys/techmap.v' to AST representation.
Generating RTLIL representation for module `\_90_simplemap_bool_ops'.
Generating RTLIL representation for module `\_90_simplemap_reduce_ops'.
Generating RTLIL representation for module `\_90_simplemap_logic_ops'.
Generating RTLIL representation for module `\_90_simplemap_compare_ops'.
Generating RTLIL representation for module `\_90_simplemap_various'.
Generating RTLIL representation for module `\_90_simplemap_registers'.
Generating RTLIL representation for module `\_90_shift_ops_shr_shl_sshl_sshr'.
Generating RTLIL representation for module `\_90_shift_shiftx'.
Generating RTLIL representation for module `\_90_fa'.
Generating RTLIL representation for module `\_90_lcu'.
Generating RTLIL representation for module `\_90_alu'.
Generating RTLIL representation for module `\_90_macc'.
Generating RTLIL representation for module `\_90_alumacc'.
Generating RTLIL representation for module `\$__div_mod_u'.
Generating RTLIL representation for module `\$__div_mod_trunc'.
Generating RTLIL representation for module `\_90_div'.
Generating RTLIL representation for module `\_90_mod'.
Generating RTLIL representation for module `\$__div_mod_floor'.
Generating RTLIL representation for module `\_90_divfloor'.
Generating RTLIL representation for module `\_90_modfloor'.
Generating RTLIL representation for module `\_90_pow'.
Generating RTLIL representation for module `\_90_pmux'.
Generating RTLIL representation for module `\_90_demux'.
Generating RTLIL representation for module `\_90_lut'.
Successfully finished Verilog frontend.

3.99.2. Continuing TECHMAP pass.
No more expansions possible.
<suppressed ~71 debug messages>

yosys> opt_expr

3.100. Executing OPT_EXPR pass (perform const folding).
Optimizing module serv_synth_wrapper.

yosys> opt_merge -nomux

3.101. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\serv_synth_wrapper'.
Removed a total of 0 cells.

yosys> opt_muxtree

3.102. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \serv_synth_wrapper..
  Creating internal representation of mux trees.
  No muxes found in this module.
Removed 0 multiplexer ports.

yosys> opt_reduce

3.103. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \serv_synth_wrapper.
Performed a total of 0 changes.

yosys> opt_merge

3.104. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\serv_synth_wrapper'.
Removed a total of 0 cells.

yosys> opt_dff -nosdff -nodffe -sat

3.105. Executing OPT_DFF pass (perform DFF optimizations).

yosys> opt_clean

3.106. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \serv_synth_wrapper..
Removed 0 unused cells and 5 unused wires.
<suppressed ~1 debug messages>

yosys> opt_expr

3.107. Executing OPT_EXPR pass (perform const folding).
Optimizing module serv_synth_wrapper.
MAX OPT ITERATION = 1

yosys> abc -dff

3.108. Executing ABC pass (technology mapping using ABC).

3.108.1. Summary of detected clock domains:
  4 cells in clk=\clk, en=$flatten\cpu.\immdec.$verific$n62$1662, arst={ }, srst={ }
  11 cells in clk=\clk, en=$auto$opt_dff.cc:194:make_patterns_logic$2123, arst={ }, srst={ }
  6 cells in clk=\clk, en=\cpu.mem_if.dat_valid, arst={ }, srst={ }
  5 cells in clk=\clk, en=$flatten\cpu.\state.$verific$n82$1943, arst={ }, srst={ }
  3 cells in clk=\clk, en=$flatten\cpu.\genblk1.csr.$verific$n35$1140, arst={ }, srst={ }
  27 cells in clk=\clk, en=$flatten\cpu.\immdec.$verific$n112$1673, arst={ }, srst={ }
  39 cells in clk=\clk, en=$flatten\cpu.\immdec.$verific$n30$1660, arst={ }, srst={ }
  19 cells in clk=\clk, en=$flatten\cpu.\immdec.$verific$n92$1671, arst={ }, srst={ }
  15 cells in clk=\clk, en=$flatten\cpu.\immdec.$verific$n67$1667, arst={ }, srst={ }
  2 cells in clk=\clk, en=$flatten\cpu.\genblk1.csr.$verific$n90$1167, arst={ }, srst={ }
  18 cells in clk=\clk, en=$flatten\cpu.\genblk1.csr.$verific$n60$1162, arst={ }, srst={ }
  5 cells in clk=\clk, en=$auto$opt_dff.cc:194:make_patterns_logic$2128, arst={ }, srst={ }
  9 cells in clk=\clk, en=$flatten\cpu.\genblk1.csr.$verific$n48$1153, arst={ }, srst={ }
  3 cells in clk=\clk, en=$flatten\cpu.\genblk1.csr.$verific$n45$1150, arst={ }, srst={ }
  92 cells in clk=\clk, en=$flatten\cpu.\ctrl.$verific$n49$1277, arst={ }, srst={ }
  104 cells in clk=\clk, en=\i_ibus_ack, arst={ }, srst={ }
  116 cells in clk=\clk, en=$flatten\cpu.\bufreg2.$verific$n110$1071, arst={ }, srst={ }
  13 cells in clk=\clk, en=$flatten\cpu.\bufreg.$verific$n88$1010, arst={ }, srst={ }
  13 cells in clk=\clk, en=\cpu.alu.i_en, arst={ }, srst={ }
  46 cells in clk=\clk, en=\cpu.bufreg.i_en, arst={ }, srst={ }
  2 cells in clk=\clk, en=\rf_ram_if.rtrig1, arst={ }, srst={ }
  34 cells in clk=\clk, en=$auto$opt_dff.cc:194:make_patterns_logic$2105, arst={ }, srst={ }
  193 cells in clk=\clk, en={ }, arst={ }, srst={ }

3.108.2. Extracting gate netlist of module `\serv_synth_wrapper' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk, enabled by $flatten\cpu.\immdec.$verific$n62$1662
Extracted 4 gates and 10 wires to a netlist network with 6 inputs and 2 outputs.

3.108.2.1. Executing ABC.

3.108.3. Extracting gate netlist of module `\serv_synth_wrapper' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk, enabled by $auto$opt_dff.cc:194:make_patterns_logic$2123
Extracted 11 gates and 22 wires to a netlist network with 10 inputs and 7 outputs.

3.108.3.1. Executing ABC.

3.108.4. Extracting gate netlist of module `\serv_synth_wrapper' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk, enabled by \cpu.mem_if.dat_valid
Extracted 6 gates and 13 wires to a netlist network with 7 inputs and 3 outputs.

3.108.4.1. Executing ABC.

3.108.5. Extracting gate netlist of module `\serv_synth_wrapper' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk, enabled by $flatten\cpu.\state.$verific$n82$1943
Extracted 5 gates and 8 wires to a netlist network with 3 inputs and 3 outputs.

3.108.5.1. Executing ABC.

3.108.6. Extracting gate netlist of module `\serv_synth_wrapper' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk, enabled by $flatten\cpu.\genblk1.csr.$verific$n35$1140
Extracted 3 gates and 5 wires to a netlist network with 2 inputs and 2 outputs.

3.108.6.1. Executing ABC.

3.108.7. Extracting gate netlist of module `\serv_synth_wrapper' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk, enabled by $flatten\cpu.\immdec.$verific$n112$1673
Extracted 27 gates and 44 wires to a netlist network with 16 inputs and 9 outputs.

3.108.7.1. Executing ABC.

3.108.8. Extracting gate netlist of module `\serv_synth_wrapper' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk, enabled by $flatten\cpu.\immdec.$verific$n30$1660
Extracted 39 gates and 70 wires to a netlist network with 31 inputs and 9 outputs.

3.108.8.1. Executing ABC.

3.108.9. Extracting gate netlist of module `\serv_synth_wrapper' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk, enabled by $flatten\cpu.\immdec.$verific$n92$1671
Extracted 19 gates and 31 wires to a netlist network with 12 inputs and 8 outputs.

3.108.9.1. Executing ABC.

3.108.10. Extracting gate netlist of module `\serv_synth_wrapper' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk, enabled by $flatten\cpu.\immdec.$verific$n67$1667
Extracted 15 gates and 26 wires to a netlist network with 11 inputs and 2 outputs.

3.108.10.1. Executing ABC.

3.108.11. Extracting gate netlist of module `\serv_synth_wrapper' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk, enabled by $flatten\cpu.\genblk1.csr.$verific$n90$1167
Extracted 2 gates and 5 wires to a netlist network with 3 inputs and 2 outputs.

3.108.11.1. Executing ABC.

3.108.12. Extracting gate netlist of module `\serv_synth_wrapper' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk, enabled by $flatten\cpu.\genblk1.csr.$verific$n60$1162
Extracted 18 gates and 31 wires to a netlist network with 13 inputs and 3 outputs.

3.108.12.1. Executing ABC.

3.108.13. Extracting gate netlist of module `\serv_synth_wrapper' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk, enabled by $auto$opt_dff.cc:194:make_patterns_logic$2128
Extracted 5 gates and 11 wires to a netlist network with 5 inputs and 2 outputs.

3.108.13.1. Executing ABC.

3.108.14. Extracting gate netlist of module `\serv_synth_wrapper' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk, enabled by $flatten\cpu.\genblk1.csr.$verific$n48$1153
Extracted 9 gates and 17 wires to a netlist network with 8 inputs and 5 outputs.

3.108.14.1. Executing ABC.

3.108.15. Extracting gate netlist of module `\serv_synth_wrapper' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk, enabled by $flatten\cpu.\genblk1.csr.$verific$n45$1150
Extracted 3 gates and 7 wires to a netlist network with 4 inputs and 2 outputs.

3.108.15.1. Executing ABC.

3.108.16. Extracting gate netlist of module `\serv_synth_wrapper' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk, enabled by $abc$3644$flatten\cpu.\ctrl.$verific$n49$1277
Extracted 92 gates and 113 wires to a netlist network with 20 inputs and 39 outputs.

3.108.16.1. Executing ABC.

3.108.17. Extracting gate netlist of module `\serv_synth_wrapper' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk, enabled by \i_ibus_ack
Extracted 104 gates and 137 wires to a netlist network with 33 inputs and 69 outputs.

3.108.17.1. Executing ABC.

3.108.18. Extracting gate netlist of module `\serv_synth_wrapper' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk, enabled by $flatten\cpu.\bufreg2.$verific$n110$1071
Extracted 116 gates and 161 wires to a netlist network with 45 inputs and 42 outputs.

3.108.18.1. Executing ABC.

3.108.19. Extracting gate netlist of module `\serv_synth_wrapper' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk, enabled by $flatten\cpu.\bufreg.$verific$n88$1010
Extracted 13 gates and 21 wires to a netlist network with 8 inputs and 10 outputs.

3.108.19.1. Executing ABC.

3.108.20. Extracting gate netlist of module `\serv_synth_wrapper' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk, enabled by \cpu.alu.i_en
Extracted 13 gates and 24 wires to a netlist network with 11 inputs and 4 outputs.

3.108.20.1. Executing ABC.

3.108.21. Extracting gate netlist of module `\serv_synth_wrapper' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk, enabled by \cpu.bufreg.i_en
Extracted 46 gates and 61 wires to a netlist network with 15 inputs and 34 outputs.

3.108.21.1. Executing ABC.

3.108.22. Extracting gate netlist of module `\serv_synth_wrapper' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk, enabled by \rf_ram_if.rtrig1
Extracted 2 gates and 5 wires to a netlist network with 3 inputs and 1 outputs.

3.108.22.1. Executing ABC.

3.108.23. Extracting gate netlist of module `\serv_synth_wrapper' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk, enabled by $auto$opt_dff.cc:194:make_patterns_logic$2105
Extracted 34 gates and 57 wires to a netlist network with 22 inputs and 13 outputs.

3.108.23.1. Executing ABC.

3.108.24. Extracting gate netlist of module `\serv_synth_wrapper' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk
Extracted 193 gates and 259 wires to a netlist network with 64 inputs and 58 outputs.

3.108.24.1. Executing ABC.

yosys> abc -dff

3.109. Executing ABC pass (technology mapping using ABC).

3.109.1. Summary of detected clock domains:
  8 cells in clk=\clk, en=$abc$3781$auto$opt_dff.cc:194:make_patterns_logic$2128, arst={ }, srst={ }
  14 cells in clk=\clk, en=$abc$4183$cpu.alu.i_en, arst={ }, srst={ }
  4 cells in clk=\clk, en=$abc$3757$flatten\cpu.\genblk1.csr.$verific$n90$1167, arst={ }, srst={ }
  8 cells in clk=\clk, en=$abc$3788$flatten\cpu.\genblk1.csr.$verific$n48$1153, arst={ }, srst={ }
  17 cells in clk=\clk, en=$abc$3740$flatten\cpu.\immdec.$verific$n67$1667, arst={ }, srst={ }
  2 cells in clk=\clk, en=$abc$4335$lo09, arst={ }, srst={ }
  4 cells in clk=\clk, en=$abc$3619$flatten\cpu.\immdec.$verific$n62$1662, arst={ }, srst={ }
  5 cells in clk=\clk, en=$abc$4335$flatten\cpu.\genblk1.csr.$verific$n45$1150, arst={ }, srst={ }
  22 cells in clk=\clk, en=$abc$4304$auto$opt_dff.cc:194:make_patterns_logic$2105, arst={ }, srst={ }
  20 cells in clk=\clk, en=$abc$3762$flatten\cpu.\genblk1.csr.$verific$n60$1162, arst={ }, srst={ }
  19 cells in clk=\clk, en=$abc$4167$flatten\cpu.\bufreg.$verific$n88$1010, arst={ }, srst={ }
  88 cells in clk=\clk, en=\i_ibus_ack, arst={ }, srst={ }
  18 cells in clk=\clk, en=$abc$3720$flatten\cpu.\immdec.$verific$n92$1671, arst={ }, srst={ }
  36 cells in clk=\clk, en=$abc$3682$flatten\cpu.\immdec.$verific$n30$1660, arst={ }, srst={ }
  24 cells in clk=\clk, en=$abc$3655$flatten\cpu.\immdec.$verific$n112$1673, arst={ }, srst={ }
  9 cells in clk=\clk, en=$abc$3624$auto$opt_dff.cc:194:make_patterns_logic$2123, arst={ }, srst={ }
  6 cells in clk=\clk, en=$abc$3636$cpu.mem_if.dat_valid, arst={ }, srst={ }
  9 cells in clk=\clk, en=$abc$4335$flatten\cpu.\genblk1.csr.$verific$n35$1140, arst={ }, srst={ }
  4 cells in clk=\clk, en=$abc$3644$flatten\cpu.\state.$verific$n82$1943, arst={ }, srst={ }
  38 cells in clk=\clk, en=$abc$4197$cpu.bufreg.i_en, arst={ }, srst={ }
  89 cells in clk=\clk, en=$abc$3644$flatten\cpu.\ctrl.$verific$n49$1277, arst={ }, srst={ }
  97 cells in clk=\clk, en=$abc$4036$flatten\cpu.\bufreg2.$verific$n110$1071, arst={ }, srst={ }
  177 cells in clk=\clk, en={ }, arst={ }, srst={ }

3.109.2. Extracting gate netlist of module `\serv_synth_wrapper' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk, enabled by $abc$3781$auto$opt_dff.cc:194:make_patterns_logic$2128
Extracted 8 gates and 15 wires to a netlist network with 7 inputs and 3 outputs.

3.109.2.1. Executing ABC.

3.109.3. Extracting gate netlist of module `\serv_synth_wrapper' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk, enabled by $abc$4183$cpu.alu.i_en
Extracted 14 gates and 26 wires to a netlist network with 12 inputs and 5 outputs.

3.109.3.1. Executing ABC.

3.109.4. Extracting gate netlist of module `\serv_synth_wrapper' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk, enabled by $abc$3757$flatten\cpu.\genblk1.csr.$verific$n90$1167
Extracted 4 gates and 9 wires to a netlist network with 5 inputs and 2 outputs.

3.109.4.1. Executing ABC.

3.109.5. Extracting gate netlist of module `\serv_synth_wrapper' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk, enabled by $abc$3788$flatten\cpu.\genblk1.csr.$verific$n48$1153
Extracted 8 gates and 16 wires to a netlist network with 8 inputs and 4 outputs.

3.109.5.1. Executing ABC.

3.109.6. Extracting gate netlist of module `\serv_synth_wrapper' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk, enabled by $abc$3740$flatten\cpu.\immdec.$verific$n67$1667
Extracted 17 gates and 30 wires to a netlist network with 13 inputs and 3 outputs.

3.109.6.1. Executing ABC.

3.109.7. Extracting gate netlist of module `\serv_synth_wrapper' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk, enabled by $abc$4335$lo09
Extracted 2 gates and 5 wires to a netlist network with 3 inputs and 1 outputs.

3.109.7.1. Executing ABC.

3.109.8. Extracting gate netlist of module `\serv_synth_wrapper' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk, enabled by $abc$3619$flatten\cpu.\immdec.$verific$n62$1662
Extracted 4 gates and 10 wires to a netlist network with 6 inputs and 2 outputs.

3.109.8.1. Executing ABC.

3.109.9. Extracting gate netlist of module `\serv_synth_wrapper' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk, enabled by $abc$4335$flatten\cpu.\genblk1.csr.$verific$n45$1150
Extracted 5 gates and 11 wires to a netlist network with 6 inputs and 4 outputs.

3.109.9.1. Executing ABC.

3.109.10. Extracting gate netlist of module `\serv_synth_wrapper' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk, enabled by $abc$4304$auto$opt_dff.cc:194:make_patterns_logic$2105
Extracted 22 gates and 38 wires to a netlist network with 16 inputs and 9 outputs.

3.109.10.1. Executing ABC.

3.109.11. Extracting gate netlist of module `\serv_synth_wrapper' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk, enabled by $abc$3762$flatten\cpu.\genblk1.csr.$verific$n60$1162
Extracted 20 gates and 32 wires to a netlist network with 12 inputs and 3 outputs.

3.109.11.1. Executing ABC.

3.109.12. Extracting gate netlist of module `\serv_synth_wrapper' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk, enabled by $abc$4167$flatten\cpu.\bufreg.$verific$n88$1010
Extracted 19 gates and 32 wires to a netlist network with 13 inputs and 13 outputs.

3.109.12.1. Executing ABC.

3.109.13. Extracting gate netlist of module `\serv_synth_wrapper' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk, enabled by \i_ibus_ack
Extracted 88 gates and 119 wires to a netlist network with 31 inputs and 66 outputs.

3.109.13.1. Executing ABC.

3.109.14. Extracting gate netlist of module `\serv_synth_wrapper' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk, enabled by $abc$3720$flatten\cpu.\immdec.$verific$n92$1671
Extracted 18 gates and 30 wires to a netlist network with 12 inputs and 8 outputs.

3.109.14.1. Executing ABC.

3.109.15. Extracting gate netlist of module `\serv_synth_wrapper' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk, enabled by $abc$3682$flatten\cpu.\immdec.$verific$n30$1660
Extracted 36 gates and 67 wires to a netlist network with 31 inputs and 8 outputs.

3.109.15.1. Executing ABC.

3.109.16. Extracting gate netlist of module `\serv_synth_wrapper' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk, enabled by $abc$3655$flatten\cpu.\immdec.$verific$n112$1673
Extracted 24 gates and 39 wires to a netlist network with 15 inputs and 10 outputs.

3.109.16.1. Executing ABC.

3.109.17. Extracting gate netlist of module `\serv_synth_wrapper' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk, enabled by $abc$3624$auto$opt_dff.cc:194:make_patterns_logic$2123
Extracted 9 gates and 17 wires to a netlist network with 8 inputs and 6 outputs.

3.109.17.1. Executing ABC.

3.109.18. Extracting gate netlist of module `\serv_synth_wrapper' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk, enabled by $abc$3636$cpu.mem_if.dat_valid
Extracted 6 gates and 13 wires to a netlist network with 7 inputs and 4 outputs.

3.109.18.1. Executing ABC.

3.109.19. Extracting gate netlist of module `\serv_synth_wrapper' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk, enabled by $abc$4335$flatten\cpu.\genblk1.csr.$verific$n35$1140
Extracted 9 gates and 18 wires to a netlist network with 9 inputs and 3 outputs.

3.109.19.1. Executing ABC.

3.109.20. Extracting gate netlist of module `\serv_synth_wrapper' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk, enabled by $abc$3644$flatten\cpu.\state.$verific$n82$1943
Extracted 4 gates and 7 wires to a netlist network with 3 inputs and 2 outputs.

3.109.20.1. Executing ABC.

3.109.21. Extracting gate netlist of module `\serv_synth_wrapper' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk, enabled by $abc$4197$cpu.bufreg.i_en
Extracted 38 gates and 47 wires to a netlist network with 9 inputs and 31 outputs.

3.109.21.1. Executing ABC.

3.109.22. Extracting gate netlist of module `\serv_synth_wrapper' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk, enabled by $abc$3644$flatten\cpu.\ctrl.$verific$n49$1277
Extracted 89 gates and 110 wires to a netlist network with 21 inputs and 40 outputs.

3.109.22.1. Executing ABC.

3.109.23. Extracting gate netlist of module `\serv_synth_wrapper' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk, enabled by $abc$4036$flatten\cpu.\bufreg2.$verific$n110$1071
Extracted 97 gates and 144 wires to a netlist network with 47 inputs and 40 outputs.

3.109.23.1. Executing ABC.

3.109.24. Extracting gate netlist of module `\serv_synth_wrapper' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk
Extracted 177 gates and 241 wires to a netlist network with 64 inputs and 55 outputs.

3.109.24.1. Executing ABC.

yosys> abc -dff

3.110. Executing ABC pass (technology mapping using ABC).

3.110.1. Summary of detected clock domains:
  8 cells in clk=\clk, en=$abc$4524$abc$3781$auto$opt_dff.cc:194:make_patterns_logic$2128, arst={ }, srst={ }
  13 cells in clk=\clk, en=$abc$4533$abc$4183$cpu.alu.i_en, arst={ }, srst={ }
  4 cells in clk=\clk, en=$abc$4547$abc$3757$flatten\cpu.\genblk1.csr.$verific$n90$1167, arst={ }, srst={ }
  8 cells in clk=\clk, en=$abc$4552$abc$3788$flatten\cpu.\genblk1.csr.$verific$n48$1153, arst={ }, srst={ }
  2 cells in clk=\clk, en=$abc$5230$lo09, arst={ }, srst={ }
  4 cells in clk=\clk, en=$abc$4584$abc$3619$flatten\cpu.\immdec.$verific$n62$1662, arst={ }, srst={ }
  4 cells in clk=\clk, en=$abc$4589$abc$4335$flatten\cpu.\genblk1.csr.$verific$n45$1150, arst={ }, srst={ }
  17 cells in clk=\clk, en=$abc$4562$abc$3740$flatten\cpu.\immdec.$verific$n67$1667, arst={ }, srst={ }
  22 cells in clk=\clk, en=$abc$4596$abc$4304$auto$opt_dff.cc:194:make_patterns_logic$2105, arst={ }, srst={ }
  18 cells in clk=\clk, en=$abc$4638$abc$4167$flatten\cpu.\bufreg.$verific$n88$1010, arst={ }, srst={ }
  18 cells in clk=\clk, en=$abc$4619$abc$3762$flatten\cpu.\genblk1.csr.$verific$n60$1162, arst={ }, srst={ }
  86 cells in clk=\clk, en=\i_ibus_ack, arst={ }, srst={ }
  18 cells in clk=\clk, en=$abc$4764$abc$3720$flatten\cpu.\immdec.$verific$n92$1671, arst={ }, srst={ }
  24 cells in clk=\clk, en=$abc$4822$abc$3655$flatten\cpu.\immdec.$verific$n112$1673, arst={ }, srst={ }
  9 cells in clk=\clk, en=$abc$4848$abc$3624$auto$opt_dff.cc:194:make_patterns_logic$2123, arst={ }, srst={ }
  35 cells in clk=\clk, en=$abc$4785$abc$3682$flatten\cpu.\immdec.$verific$n30$1660, arst={ }, srst={ }
  6 cells in clk=\clk, en=$abc$4859$abc$3636$cpu.mem_if.dat_valid, arst={ }, srst={ }
  96 cells in clk=\clk, en=$abc$5101$abc$4036$flatten\cpu.\bufreg2.$verific$n110$1071, arst={ }, srst={ }
  9 cells in clk=\clk, en=$abc$4866$abc$4335$flatten\cpu.\genblk1.csr.$verific$n35$1140, arst={ }, srst={ }
  4 cells in clk=\clk, en=$abc$4877$abc$3644$flatten\cpu.\state.$verific$n82$1943, arst={ }, srst={ }
  38 cells in clk=\clk, en=$abc$4882$abc$4197$cpu.bufreg.i_en, arst={ }, srst={ }
  88 cells in clk=\clk, en=$abc$4980$abc$3644$flatten\cpu.\ctrl.$verific$n49$1277, arst={ }, srst={ }
  177 cells in clk=\clk, en={ }, arst={ }, srst={ }

3.110.2. Extracting gate netlist of module `\serv_synth_wrapper' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk, enabled by $abc$4524$abc$3781$auto$opt_dff.cc:194:make_patterns_logic$2128
Extracted 8 gates and 15 wires to a netlist network with 7 inputs and 3 outputs.

3.110.2.1. Executing ABC.

3.110.3. Extracting gate netlist of module `\serv_synth_wrapper' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk, enabled by $abc$4533$abc$4183$cpu.alu.i_en
Extracted 13 gates and 25 wires to a netlist network with 12 inputs and 5 outputs.

3.110.3.1. Executing ABC.

3.110.4. Extracting gate netlist of module `\serv_synth_wrapper' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk, enabled by $abc$4547$abc$3757$flatten\cpu.\genblk1.csr.$verific$n90$1167
Extracted 4 gates and 9 wires to a netlist network with 5 inputs and 2 outputs.

3.110.4.1. Executing ABC.

3.110.5. Extracting gate netlist of module `\serv_synth_wrapper' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk, enabled by $abc$4552$abc$3788$flatten\cpu.\genblk1.csr.$verific$n48$1153
Extracted 8 gates and 16 wires to a netlist network with 8 inputs and 4 outputs.

3.110.5.1. Executing ABC.

3.110.6. Extracting gate netlist of module `\serv_synth_wrapper' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk, enabled by $abc$5230$lo09
Extracted 2 gates and 5 wires to a netlist network with 3 inputs and 1 outputs.

3.110.6.1. Executing ABC.

3.110.7. Extracting gate netlist of module `\serv_synth_wrapper' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk, enabled by $abc$4584$abc$3619$flatten\cpu.\immdec.$verific$n62$1662
Extracted 4 gates and 10 wires to a netlist network with 6 inputs and 2 outputs.

3.110.7.1. Executing ABC.

3.110.8. Extracting gate netlist of module `\serv_synth_wrapper' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk, enabled by $abc$4589$abc$4335$flatten\cpu.\genblk1.csr.$verific$n45$1150
Extracted 4 gates and 10 wires to a netlist network with 6 inputs and 3 outputs.

3.110.8.1. Executing ABC.

3.110.9. Extracting gate netlist of module `\serv_synth_wrapper' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk, enabled by $abc$4562$abc$3740$flatten\cpu.\immdec.$verific$n67$1667
Extracted 17 gates and 30 wires to a netlist network with 13 inputs and 3 outputs.

3.110.9.1. Executing ABC.

3.110.10. Extracting gate netlist of module `\serv_synth_wrapper' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk, enabled by $abc$4596$abc$4304$auto$opt_dff.cc:194:make_patterns_logic$2105
Extracted 22 gates and 38 wires to a netlist network with 16 inputs and 9 outputs.

3.110.10.1. Executing ABC.

3.110.11. Extracting gate netlist of module `\serv_synth_wrapper' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk, enabled by $abc$4638$abc$4167$flatten\cpu.\bufreg.$verific$n88$1010
Extracted 18 gates and 29 wires to a netlist network with 11 inputs and 13 outputs.

3.110.11.1. Executing ABC.

3.110.12. Extracting gate netlist of module `\serv_synth_wrapper' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk, enabled by $abc$4619$abc$3762$flatten\cpu.\genblk1.csr.$verific$n60$1162
Extracted 18 gates and 30 wires to a netlist network with 12 inputs and 3 outputs.

3.110.12.1. Executing ABC.

3.110.13. Extracting gate netlist of module `\serv_synth_wrapper' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk, enabled by \i_ibus_ack
Extracted 86 gates and 119 wires to a netlist network with 33 inputs and 65 outputs.

3.110.13.1. Executing ABC.

3.110.14. Extracting gate netlist of module `\serv_synth_wrapper' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk, enabled by $abc$4764$abc$3720$flatten\cpu.\immdec.$verific$n92$1671
Extracted 18 gates and 30 wires to a netlist network with 12 inputs and 8 outputs.

3.110.14.1. Executing ABC.

3.110.15. Extracting gate netlist of module `\serv_synth_wrapper' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk, enabled by $abc$4822$abc$3655$flatten\cpu.\immdec.$verific$n112$1673
Extracted 24 gates and 39 wires to a netlist network with 15 inputs and 10 outputs.

3.110.15.1. Executing ABC.

3.110.16. Extracting gate netlist of module `\serv_synth_wrapper' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk, enabled by $abc$4848$abc$3624$auto$opt_dff.cc:194:make_patterns_logic$2123
Extracted 9 gates and 17 wires to a netlist network with 8 inputs and 6 outputs.

3.110.16.1. Executing ABC.

3.110.17. Extracting gate netlist of module `\serv_synth_wrapper' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk, enabled by $abc$4785$abc$3682$flatten\cpu.\immdec.$verific$n30$1660
Extracted 35 gates and 64 wires to a netlist network with 29 inputs and 8 outputs.

3.110.17.1. Executing ABC.

3.110.18. Extracting gate netlist of module `\serv_synth_wrapper' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk, enabled by $abc$4859$abc$3636$cpu.mem_if.dat_valid
Extracted 6 gates and 13 wires to a netlist network with 7 inputs and 4 outputs.

3.110.18.1. Executing ABC.

3.110.19. Extracting gate netlist of module `\serv_synth_wrapper' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk, enabled by $abc$5101$abc$4036$flatten\cpu.\bufreg2.$verific$n110$1071
Extracted 96 gates and 142 wires to a netlist network with 46 inputs and 39 outputs.

3.110.19.1. Executing ABC.

3.110.20. Extracting gate netlist of module `\serv_synth_wrapper' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk, enabled by $abc$4866$abc$4335$flatten\cpu.\genblk1.csr.$verific$n35$1140
Extracted 9 gates and 18 wires to a netlist network with 9 inputs and 3 outputs.

3.110.20.1. Executing ABC.

3.110.21. Extracting gate netlist of module `\serv_synth_wrapper' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk, enabled by $abc$4877$abc$3644$flatten\cpu.\state.$verific$n82$1943
Extracted 4 gates and 7 wires to a netlist network with 3 inputs and 2 outputs.

3.110.21.1. Executing ABC.

3.110.22. Extracting gate netlist of module `\serv_synth_wrapper' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk, enabled by $abc$4882$abc$4197$cpu.bufreg.i_en
Extracted 38 gates and 47 wires to a netlist network with 9 inputs and 31 outputs.

3.110.22.1. Executing ABC.

3.110.23. Extracting gate netlist of module `\serv_synth_wrapper' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk, enabled by $abc$4980$abc$3644$flatten\cpu.\ctrl.$verific$n49$1277
Extracted 88 gates and 109 wires to a netlist network with 21 inputs and 40 outputs.

3.110.23.1. Executing ABC.

3.110.24. Extracting gate netlist of module `\serv_synth_wrapper' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk
Extracted 177 gates and 240 wires to a netlist network with 63 inputs and 55 outputs.

3.110.24.1. Executing ABC.

yosys> abc -dff

3.111. Executing ABC pass (technology mapping using ABC).

3.111.1. Summary of detected clock domains:
  8 cells in clk=\clk, en=$abc$5421$abc$4524$abc$3781$auto$opt_dff.cc:194:make_patterns_logic$2128, arst={ }, srst={ }
  13 cells in clk=\clk, en=$abc$5430$abc$4533$abc$4183$cpu.alu.i_en, arst={ }, srst={ }
  4 cells in clk=\clk, en=$abc$5444$abc$4547$abc$3757$flatten\cpu.\genblk1.csr.$verific$n90$1167, arst={ }, srst={ }
  8 cells in clk=\clk, en=$abc$5449$abc$4552$abc$3788$flatten\cpu.\genblk1.csr.$verific$n48$1153, arst={ }, srst={ }
  2 cells in clk=\clk, en=$abc$6125$lo09, arst={ }, srst={ }
  4 cells in clk=\clk, en=$abc$5463$abc$4584$abc$3619$flatten\cpu.\immdec.$verific$n62$1662, arst={ }, srst={ }
  18 cells in clk=\clk, en=$abc$5468$abc$4589$abc$4335$flatten\cpu.\genblk1.csr.$verific$n45$1150, arst={ }, srst={ }
  17 cells in clk=\clk, en=$abc$5474$abc$4562$abc$3740$flatten\cpu.\immdec.$verific$n67$1667, arst={ }, srst={ }
  22 cells in clk=\clk, en=$abc$5492$abc$4596$abc$4304$auto$opt_dff.cc:194:make_patterns_logic$2105, arst={ }, srst={ }
  17 cells in clk=\clk, en=$abc$5515$abc$4638$abc$4167$flatten\cpu.\bufreg.$verific$n88$1010, arst={ }, srst={ }
  18 cells in clk=\clk, en=$abc$5536$abc$4619$abc$3762$flatten\cpu.\genblk1.csr.$verific$n60$1162, arst={ }, srst={ }
  85 cells in clk=\clk, en=\i_ibus_ack, arst={ }, srst={ }
  20 cells in clk=\clk, en=$abc$5659$abc$4764$abc$3720$flatten\cpu.\immdec.$verific$n92$1671, arst={ }, srst={ }
  22 cells in clk=\clk, en=$abc$5680$abc$4822$abc$3655$flatten\cpu.\immdec.$verific$n112$1673, arst={ }, srst={ }
  9 cells in clk=\clk, en=$abc$5706$abc$4848$abc$3624$auto$opt_dff.cc:194:make_patterns_logic$2123, arst={ }, srst={ }
  36 cells in clk=\clk, en=$abc$5717$abc$4785$abc$3682$flatten\cpu.\immdec.$verific$n30$1660, arst={ }, srst={ }
  6 cells in clk=\clk, en=$abc$5754$abc$4859$abc$3636$cpu.mem_if.dat_valid, arst={ }, srst={ }
  97 cells in clk=\clk, en=$abc$5761$abc$5101$abc$4036$flatten\cpu.\bufreg2.$verific$n110$1071, arst={ }, srst={ }
  9 cells in clk=\clk, en=$abc$5890$abc$4866$abc$4335$flatten\cpu.\genblk1.csr.$verific$n35$1140, arst={ }, srst={ }
  75 cells in clk=\clk, en=$abc$6004$abc$4980$abc$3644$flatten\cpu.\ctrl.$verific$n49$1277, arst={ }, srst={ }
  4 cells in clk=\clk, en=$abc$5901$abc$4877$abc$3644$flatten\cpu.\state.$verific$n82$1943, arst={ }, srst={ }
  37 cells in clk=\clk, en=$abc$5906$abc$4882$abc$4197$cpu.bufreg.i_en, arst={ }, srst={ }
  176 cells in clk=\clk, en={ }, arst={ }, srst={ }

3.111.2. Extracting gate netlist of module `\serv_synth_wrapper' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk, enabled by $abc$5421$abc$4524$abc$3781$auto$opt_dff.cc:194:make_patterns_logic$2128
Extracted 8 gates and 15 wires to a netlist network with 7 inputs and 3 outputs.

3.111.2.1. Executing ABC.

3.111.3. Extracting gate netlist of module `\serv_synth_wrapper' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk, enabled by $abc$5430$abc$4533$abc$4183$cpu.alu.i_en
Extracted 13 gates and 25 wires to a netlist network with 12 inputs and 5 outputs.

3.111.3.1. Executing ABC.

3.111.4. Extracting gate netlist of module `\serv_synth_wrapper' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk, enabled by $abc$5444$abc$4547$abc$3757$flatten\cpu.\genblk1.csr.$verific$n90$1167
Extracted 4 gates and 9 wires to a netlist network with 5 inputs and 2 outputs.

3.111.4.1. Executing ABC.

3.111.5. Extracting gate netlist of module `\serv_synth_wrapper' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk, enabled by $abc$5449$abc$4552$abc$3788$flatten\cpu.\genblk1.csr.$verific$n48$1153
Extracted 8 gates and 16 wires to a netlist network with 8 inputs and 4 outputs.

3.111.5.1. Executing ABC.

3.111.6. Extracting gate netlist of module `\serv_synth_wrapper' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk, enabled by $abc$6125$lo09
Extracted 2 gates and 5 wires to a netlist network with 3 inputs and 1 outputs.

3.111.6.1. Executing ABC.

3.111.7. Extracting gate netlist of module `\serv_synth_wrapper' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk, enabled by $abc$5463$abc$4584$abc$3619$flatten\cpu.\immdec.$verific$n62$1662
Extracted 4 gates and 10 wires to a netlist network with 6 inputs and 2 outputs.

3.111.7.1. Executing ABC.

3.111.8. Extracting gate netlist of module `\serv_synth_wrapper' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk, enabled by $abc$5468$abc$4589$abc$4335$flatten\cpu.\genblk1.csr.$verific$n45$1150
Extracted 18 gates and 35 wires to a netlist network with 17 inputs and 6 outputs.

3.111.8.1. Executing ABC.

3.111.9. Extracting gate netlist of module `\serv_synth_wrapper' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk, enabled by $abc$5474$abc$4562$abc$3740$flatten\cpu.\immdec.$verific$n67$1667
Extracted 17 gates and 30 wires to a netlist network with 13 inputs and 3 outputs.

3.111.9.1. Executing ABC.

3.111.10. Extracting gate netlist of module `\serv_synth_wrapper' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk, enabled by $abc$5492$abc$4596$abc$4304$auto$opt_dff.cc:194:make_patterns_logic$2105
Extracted 22 gates and 38 wires to a netlist network with 16 inputs and 9 outputs.

3.111.10.1. Executing ABC.

3.111.11. Extracting gate netlist of module `\serv_synth_wrapper' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk, enabled by $abc$5515$abc$4638$abc$4167$flatten\cpu.\bufreg.$verific$n88$1010
Extracted 17 gates and 28 wires to a netlist network with 11 inputs and 12 outputs.

3.111.11.1. Executing ABC.

3.111.12. Extracting gate netlist of module `\serv_synth_wrapper' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk, enabled by $abc$5536$abc$4619$abc$3762$flatten\cpu.\genblk1.csr.$verific$n60$1162
Extracted 18 gates and 30 wires to a netlist network with 12 inputs and 3 outputs.

3.111.12.1. Executing ABC.

3.111.13. Extracting gate netlist of module `\serv_synth_wrapper' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk, enabled by \i_ibus_ack
Extracted 85 gates and 117 wires to a netlist network with 32 inputs and 65 outputs.

3.111.13.1. Executing ABC.

3.111.14. Extracting gate netlist of module `\serv_synth_wrapper' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk, enabled by $abc$5659$abc$4764$abc$3720$flatten\cpu.\immdec.$verific$n92$1671
Extracted 20 gates and 35 wires to a netlist network with 15 inputs and 8 outputs.

3.111.14.1. Executing ABC.

3.111.15. Extracting gate netlist of module `\serv_synth_wrapper' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk, enabled by $abc$5680$abc$4822$abc$3655$flatten\cpu.\immdec.$verific$n112$1673
Extracted 22 gates and 34 wires to a netlist network with 12 inputs and 10 outputs.

3.111.15.1. Executing ABC.

3.111.16. Extracting gate netlist of module `\serv_synth_wrapper' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk, enabled by $abc$5706$abc$4848$abc$3624$auto$opt_dff.cc:194:make_patterns_logic$2123
Extracted 9 gates and 17 wires to a netlist network with 8 inputs and 6 outputs.

3.111.16.1. Executing ABC.

3.111.17. Extracting gate netlist of module `\serv_synth_wrapper' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk, enabled by $abc$5717$abc$4785$abc$3682$flatten\cpu.\immdec.$verific$n30$1660
Extracted 36 gates and 67 wires to a netlist network with 31 inputs and 8 outputs.

3.111.17.1. Executing ABC.

3.111.18. Extracting gate netlist of module `\serv_synth_wrapper' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk, enabled by $abc$5754$abc$4859$abc$3636$cpu.mem_if.dat_valid
Extracted 6 gates and 13 wires to a netlist network with 7 inputs and 4 outputs.

3.111.18.1. Executing ABC.

3.111.19. Extracting gate netlist of module `\serv_synth_wrapper' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk, enabled by $abc$5761$abc$5101$abc$4036$flatten\cpu.\bufreg2.$verific$n110$1071
Extracted 97 gates and 143 wires to a netlist network with 46 inputs and 39 outputs.

3.111.19.1. Executing ABC.

3.111.20. Extracting gate netlist of module `\serv_synth_wrapper' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk, enabled by $abc$5890$abc$4866$abc$4335$flatten\cpu.\genblk1.csr.$verific$n35$1140
Extracted 9 gates and 18 wires to a netlist network with 9 inputs and 3 outputs.

3.111.20.1. Executing ABC.

3.111.21. Extracting gate netlist of module `\serv_synth_wrapper' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk, enabled by $abc$6004$abc$4980$abc$3644$flatten\cpu.\ctrl.$verific$n49$1277
Extracted 75 gates and 87 wires to a netlist network with 12 inputs and 38 outputs.

3.111.21.1. Executing ABC.

3.111.22. Extracting gate netlist of module `\serv_synth_wrapper' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk, enabled by $abc$5901$abc$4877$abc$3644$flatten\cpu.\state.$verific$n82$1943
Extracted 4 gates and 7 wires to a netlist network with 3 inputs and 2 outputs.

3.111.22.1. Executing ABC.

3.111.23. Extracting gate netlist of module `\serv_synth_wrapper' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk, enabled by $abc$5906$abc$4882$abc$4197$cpu.bufreg.i_en
Extracted 37 gates and 46 wires to a netlist network with 9 inputs and 31 outputs.

3.111.23.1. Executing ABC.

3.111.24. Extracting gate netlist of module `\serv_synth_wrapper' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk
Extracted 176 gates and 239 wires to a netlist network with 63 inputs and 55 outputs.

3.111.24.1. Executing ABC.

yosys> opt_ffinv

3.112. Executing OPT_FFINV pass (push inverters through FFs).
Discovering LUTs.
Pushed 0 inverters.

yosys> opt_expr

3.113. Executing OPT_EXPR pass (perform const folding).
Optimizing module serv_synth_wrapper.

yosys> opt_merge -nomux

3.114. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\serv_synth_wrapper'.
<suppressed ~15 debug messages>
Removed a total of 5 cells.

yosys> opt_muxtree

3.115. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \serv_synth_wrapper..
  Creating internal representation of mux trees.
  No muxes found in this module.
Removed 0 multiplexer ports.

yosys> opt_reduce

3.116. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \serv_synth_wrapper.
Performed a total of 0 changes.

yosys> opt_merge

3.117. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\serv_synth_wrapper'.
Removed a total of 0 cells.

yosys> opt_share

3.118. Executing OPT_SHARE pass.
    Found cells that share an operand and can be merged by moving the $_MUX_ $abc$7018$auto$blifparse.cc:381:parse_blif$7116 in front of them:
        $abc$6588$auto$blifparse.cc:381:parse_blif$6600
        $abc$7018$auto$blifparse.cc:381:parse_blif$7115


yosys> opt_dff -nosdff -sat

3.119. Executing OPT_DFF pass (perform DFF optimizations).

yosys> opt_clean

3.120. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \serv_synth_wrapper..
Removed 0 unused cells and 4951 unused wires.
<suppressed ~228 debug messages>

yosys> opt_expr

3.121. Executing OPT_EXPR pass (perform const folding).
Optimizing module serv_synth_wrapper.
<suppressed ~1 debug messages>

yosys> opt_muxtree

3.122. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \serv_synth_wrapper..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Removed 0 multiplexer ports.
<suppressed ~1 debug messages>

yosys> opt_reduce

3.123. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \serv_synth_wrapper.
Performed a total of 0 changes.

yosys> opt_merge

3.124. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\serv_synth_wrapper'.
Removed a total of 0 cells.

yosys> opt_share

3.125. Executing OPT_SHARE pass.

yosys> opt_dff -nosdff -sat

3.126. Executing OPT_DFF pass (perform DFF optimizations).

yosys> opt_clean

3.127. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \serv_synth_wrapper..
Removed 0 unused cells and 1 unused wires.
<suppressed ~1 debug messages>

yosys> opt_expr

3.128. Executing OPT_EXPR pass (perform const folding).
Optimizing module serv_synth_wrapper.
MAX OPT ITERATION = 2

yosys> bmuxmap

3.129. Executing BMUXMAP pass.

yosys> demuxmap

3.130. Executing DEMUXMAP pass.

yosys> clean_zerowidth

yosys> abc -script /tmp/yosys_0YZYsR/abc_tmp_1.scr

3.131. Executing ABC pass (technology mapping using ABC).

3.131.1. Extracting gate netlist of module `\serv_synth_wrapper' to `<abc-temp-dir>/input.blif'..
Extracted 518 gates and 730 wires to a netlist network with 212 inputs and 175 outputs.

3.131.1.1. Executing ABC.
DE:   #PIs = 212  #Luts =   249  Max Lvl =   5  Avg Lvl =   1.80  [   0.13 sec. at Pass 0]{firstMap}
DE:   #PIs = 212  #Luts =   235  Max Lvl =  11  Avg Lvl =   2.47  [   0.98 sec. at Pass 1]{initMapFlow}
DE:   #PIs = 212  #Luts =   234  Max Lvl =  10  Avg Lvl =   2.35  [   0.21 sec. at Pass 2]{map}
DE:   #PIs = 212  #Luts =   234  Max Lvl =  10  Avg Lvl =   2.35  [   0.48 sec. at Pass 3]{postMap}
DE:   #PIs = 212  #Luts =   233  Max Lvl =  10  Avg Lvl =   2.42  [   0.23 sec. at Pass 4]{map}
DE:   #PIs = 212  #Luts =   233  Max Lvl =  10  Avg Lvl =   2.42  [   0.87 sec. at Pass 5]{postMap}
DE:   #PIs = 212  #Luts =   233  Max Lvl =  10  Avg Lvl =   2.42  [   0.73 sec. at Pass 6]{map}
DE:   #PIs = 212  #Luts =   233  Max Lvl =  10  Avg Lvl =   2.42  [   0.52 sec. at Pass 7]{postMap}
DE:   #PIs = 212  #Luts =   231  Max Lvl =   9  Avg Lvl =   2.29  [   1.85 sec. at Pass 8]{pushMap}
DE:   #PIs = 212  #Luts =   231  Max Lvl =   9  Avg Lvl =   2.29  [   0.69 sec. at Pass 9]{map}
DE:   #PIs = 212  #Luts =   231  Max Lvl =   9  Avg Lvl =   2.29  [   1.13 sec. at Pass 10]{postMap}
DE:   #PIs = 212  #Luts =   231  Max Lvl =   9  Avg Lvl =   2.29  [   0.65 sec. at Pass 11]{map}
DE:   #PIs = 212  #Luts =   231  Max Lvl =   9  Avg Lvl =   2.29  [   1.56 sec. at Pass 12]{pushMap}
DE:   #PIs = 212  #Luts =   231  Max Lvl =   9  Avg Lvl =   2.29  [   0.52 sec. at Pass 13]{finalMap}

yosys> opt_expr

3.132. Executing OPT_EXPR pass (perform const folding).
Optimizing module serv_synth_wrapper.

yosys> opt_merge -nomux

3.133. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\serv_synth_wrapper'.
Removed a total of 0 cells.

yosys> opt_muxtree

3.134. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \serv_synth_wrapper..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Removed 0 multiplexer ports.
<suppressed ~1 debug messages>

yosys> opt_reduce

3.135. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \serv_synth_wrapper.
Performed a total of 0 changes.

yosys> opt_merge

3.136. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\serv_synth_wrapper'.
Removed a total of 0 cells.

yosys> opt_share

3.137. Executing OPT_SHARE pass.

yosys> opt_dff -nosdff -nodffe

3.138. Executing OPT_DFF pass (perform DFF optimizations).

yosys> opt_clean

3.139. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \serv_synth_wrapper..
Removed 0 unused cells and 827 unused wires.
<suppressed ~153 debug messages>

yosys> opt_expr

3.140. Executing OPT_EXPR pass (perform const folding).
Optimizing module serv_synth_wrapper.
MAX OPT ITERATION = 1

yosys> opt_ffinv

3.141. Executing OPT_FFINV pass (push inverters through FFs).
Discovering LUTs.
Pushed 0 inverters.

yosys> stat

3.142. Printing statistics.

=== serv_synth_wrapper ===

   Number of wires:                437
   Number of wire bits:           1263
   Number of public wires:         163
   Number of public wire bits:     989
   Number of memories:               0
   Number of memory bits:            0
   Number of processes:              0
   Number of cells:                411
     $_DFFE_PP_                    153
     $_DFF_P_                       26
     $lut                          231
     $mux                            1


yosys> shregmap -minlen 8 -maxlen 20

3.143. Executing SHREGMAP pass (map shift registers).
Converted 0 dff cells into 0 shift registers.

yosys> dfflegalize -cell $_DFF_?_ 0 -cell $_DFF_???_ 0 -cell $_DFFE_????_ 0 -cell $_DFFSR_???_ 0 -cell $_DFFSRE_????_ 0 -cell $_DLATCHSR_PPP_ 0

3.144. Executing DFFLEGALIZE pass (convert FFs to types supported by the target).

yosys> stat

3.145. Printing statistics.

=== serv_synth_wrapper ===

   Number of wires:                437
   Number of wire bits:           1263
   Number of public wires:         163
   Number of public wire bits:     989
   Number of memories:               0
   Number of memory bits:            0
   Number of processes:              0
   Number of cells:                411
     $_DFFE_PP0P_                  153
     $_DFF_P_                       26
     $lut                          231
     $mux                            1


yosys> techmap -map +/techmap.v -map +/rapidsilicon/genesis/ffs_map.v

3.146. Executing TECHMAP pass (map to technology primitives).

3.146.1. Executing Verilog-2005 frontend: /nfs_scratch/scratch/Vorak/aram/Workspace/Raptor/yosys_verific_rs/yosys/install/bin/../share/yosys/techmap.v
Parsing Verilog input from `/nfs_scratch/scratch/Vorak/aram/Workspace/Raptor/yosys_verific_rs/yosys/install/bin/../share/yosys/techmap.v' to AST representation.
Generating RTLIL representation for module `\_90_simplemap_bool_ops'.
Generating RTLIL representation for module `\_90_simplemap_reduce_ops'.
Generating RTLIL representation for module `\_90_simplemap_logic_ops'.
Generating RTLIL representation for module `\_90_simplemap_compare_ops'.
Generating RTLIL representation for module `\_90_simplemap_various'.
Generating RTLIL representation for module `\_90_simplemap_registers'.
Generating RTLIL representation for module `\_90_shift_ops_shr_shl_sshl_sshr'.
Generating RTLIL representation for module `\_90_shift_shiftx'.
Generating RTLIL representation for module `\_90_fa'.
Generating RTLIL representation for module `\_90_lcu'.
Generating RTLIL representation for module `\_90_alu'.
Generating RTLIL representation for module `\_90_macc'.
Generating RTLIL representation for module `\_90_alumacc'.
Generating RTLIL representation for module `\$__div_mod_u'.
Generating RTLIL representation for module `\$__div_mod_trunc'.
Generating RTLIL representation for module `\_90_div'.
Generating RTLIL representation for module `\_90_mod'.
Generating RTLIL representation for module `\$__div_mod_floor'.
Generating RTLIL representation for module `\_90_divfloor'.
Generating RTLIL representation for module `\_90_modfloor'.
Generating RTLIL representation for module `\_90_pow'.
Generating RTLIL representation for module `\_90_pmux'.
Generating RTLIL representation for module `\_90_demux'.
Generating RTLIL representation for module `\_90_lut'.
Successfully finished Verilog frontend.

3.146.2. Executing Verilog-2005 frontend: /nfs_scratch/scratch/Vorak/aram/Workspace/Raptor/yosys_verific_rs/yosys/install/bin/../share/yosys/rapidsilicon/genesis/ffs_map.v
Parsing Verilog input from `/nfs_scratch/scratch/Vorak/aram/Workspace/Raptor/yosys_verific_rs/yosys/install/bin/../share/yosys/rapidsilicon/genesis/ffs_map.v' to AST representation.
Generating RTLIL representation for module `\$_DFF_P_'.
Generating RTLIL representation for module `\$_DFF_PP0_'.
Generating RTLIL representation for module `\$_DFF_PN0_'.
Generating RTLIL representation for module `\$_DFF_PP1_'.
Generating RTLIL representation for module `\$_DFF_PN1_'.
Generating RTLIL representation for module `\$_DFFE_PP_'.
Generating RTLIL representation for module `\$_DFFE_PN_'.
Generating RTLIL representation for module `\$_DFFE_PP0P_'.
Generating RTLIL representation for module `\$_DFFE_PP0N_'.
Generating RTLIL representation for module `\$_DFFE_PN0P_'.
Generating RTLIL representation for module `\$_DFFE_PN0N_'.
Generating RTLIL representation for module `\$_DFFE_PP1P_'.
Generating RTLIL representation for module `\$_DFFE_PP1N_'.
Generating RTLIL representation for module `\$_DFFE_PN1P_'.
Generating RTLIL representation for module `\$_DFFE_PN1N_'.
Generating RTLIL representation for module `\$_DFFSR_PPP_'.
Generating RTLIL representation for module `\$_DFFSR_PNP_'.
Generating RTLIL representation for module `\$_DFFSR_PNN_'.
Generating RTLIL representation for module `\$_DFFSR_PPN_'.
Generating RTLIL representation for module `\$_DFFSR_NPP_'.
Generating RTLIL representation for module `\$_DFFSR_NNP_'.
Generating RTLIL representation for module `\$_DFFSR_NNN_'.
Generating RTLIL representation for module `\$_DFFSR_NPN_'.
Generating RTLIL representation for module `\$_DFFSRE_PPPP_'.
Generating RTLIL representation for module `\$_DFFSRE_PNPP_'.
Generating RTLIL representation for module `\$_DFFSRE_PPNP_'.
Generating RTLIL representation for module `\$_DFFSRE_PNNP_'.
Generating RTLIL representation for module `\$_DFFSRE_PPPN_'.
Generating RTLIL representation for module `\$_DFFSRE_PNPN_'.
Generating RTLIL representation for module `\$_DFFSRE_PPNN_'.
Generating RTLIL representation for module `\$_DFFSRE_PNNN_'.
Generating RTLIL representation for module `\$_DLATCHSR_PPP_'.
Generating RTLIL representation for module `\$_DLATCHSR_NPP_'.
Generating RTLIL representation for module `\$_DFF_N_'.
Generating RTLIL representation for module `\$_DFF_NP0_'.
Generating RTLIL representation for module `\$_DFF_NN0_'.
Generating RTLIL representation for module `\$_DFF_NP1_'.
Generating RTLIL representation for module `\$_DFF_NN1_'.
Generating RTLIL representation for module `\$_DFFE_NP_'.
Generating RTLIL representation for module `\$_DFFE_NN_'.
Generating RTLIL representation for module `\$_DFFE_NP0P_'.
Generating RTLIL representation for module `\$_DFFE_NP0N_'.
Generating RTLIL representation for module `\$_DFFE_NN0P_'.
Generating RTLIL representation for module `\$_DFFE_NN0N_'.
Generating RTLIL representation for module `\$_DFFE_NP1P_'.
Generating RTLIL representation for module `\$_DFFE_NP1N_'.
Generating RTLIL representation for module `\$_DFFE_NN1P_'.
Generating RTLIL representation for module `\$_DFFE_NN1N_'.
Generating RTLIL representation for module `\$_DFFSRE_NPPP_'.
Generating RTLIL representation for module `\$_DFFSRE_NNPP_'.
Generating RTLIL representation for module `\$_DFFSRE_NPNP_'.
Generating RTLIL representation for module `\$_DFFSRE_NNNP_'.
Generating RTLIL representation for module `\$_DFFSRE_NPPN_'.
Generating RTLIL representation for module `\$_DFFSRE_NNPN_'.
Generating RTLIL representation for module `\$_DFFSRE_NPNN_'.
Generating RTLIL representation for module `\$_DFFSRE_NNNN_'.
Generating RTLIL representation for module `\$__SHREG_DFF_P_'.
Generating RTLIL representation for module `\$_SDFF_PP0_'.
Generating RTLIL representation for module `\$_SDFF_PN0_'.
Generating RTLIL representation for module `\$_SDFF_NP0_'.
Generating RTLIL representation for module `\$_SDFF_NN0_'.
Generating RTLIL representation for module `\$_SDFF_PP1_'.
Generating RTLIL representation for module `\$_SDFF_PN1_'.
Generating RTLIL representation for module `\$_SDFF_NP1_'.
Generating RTLIL representation for module `\$_SDFF_NN1_'.
Successfully finished Verilog frontend.

3.146.3. Continuing TECHMAP pass.
Using extmapper simplemap for cells of type $lut.
Using template \$_DFFE_PP0P_ for cells of type $_DFFE_PP0P_.
Using extmapper simplemap for cells of type $mux.
Using template \$_DFF_P_ for cells of type $_DFF_P_.
Using extmapper simplemap for cells of type $logic_not.
No more expansions possible.
<suppressed ~700 debug messages>

yosys> opt_expr -mux_undef

3.147. Executing OPT_EXPR pass (perform const folding).
Optimizing module serv_synth_wrapper.
<suppressed ~3834 debug messages>

yosys> simplemap

3.148. Executing SIMPLEMAP pass (map simple cells to gate primitives).

yosys> opt_expr

3.149. Executing OPT_EXPR pass (perform const folding).
Optimizing module serv_synth_wrapper.

yosys> opt_merge

3.150. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\serv_synth_wrapper'.
<suppressed ~921 debug messages>
Removed a total of 307 cells.

yosys> opt_dff -nodffe -nosdff

3.151. Executing OPT_DFF pass (perform DFF optimizations).

yosys> opt_clean

3.152. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \serv_synth_wrapper..
Removed 0 unused cells and 1497 unused wires.
<suppressed ~1 debug messages>

yosys> opt_expr

3.153. Executing OPT_EXPR pass (perform const folding).
Optimizing module serv_synth_wrapper.
<suppressed ~54 debug messages>

yosys> opt_merge -nomux

3.154. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\serv_synth_wrapper'.
Removed a total of 0 cells.

yosys> opt_muxtree

3.155. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \serv_synth_wrapper..
  Creating internal representation of mux trees.
  No muxes found in this module.
Removed 0 multiplexer ports.

yosys> opt_reduce

3.156. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \serv_synth_wrapper.
Performed a total of 0 changes.

yosys> opt_merge

3.157. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\serv_synth_wrapper'.
Removed a total of 0 cells.

yosys> opt_share

3.158. Executing OPT_SHARE pass.

yosys> opt_dff -nosdff -nodffe

3.159. Executing OPT_DFF pass (perform DFF optimizations).

yosys> opt_clean

3.160. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \serv_synth_wrapper..
Removed 0 unused cells and 20 unused wires.
<suppressed ~1 debug messages>

yosys> opt_expr

3.161. Executing OPT_EXPR pass (perform const folding).
Optimizing module serv_synth_wrapper.
MAX OPT ITERATION = 1

yosys> abc -script /tmp/yosys_0YZYsR/abc_tmp_2.scr

3.162. Executing ABC pass (technology mapping using ABC).

3.162.1. Extracting gate netlist of module `\serv_synth_wrapper' to `<abc-temp-dir>/input.blif'..
Extracted 652 gates and 865 wires to a netlist network with 211 inputs and 174 outputs.

3.162.1.1. Executing ABC.
DE:   #PIs = 211  #Luts =   234  Max Lvl =   6  Avg Lvl =   1.89  [   0.16 sec. at Pass 0]{firstMap}
DE:   #PIs = 211  #Luts =   233  Max Lvl =   9  Avg Lvl =   2.37  [   1.94 sec. at Pass 1]{initMapFlow}
DE:   #PIs = 211  #Luts =   232  Max Lvl =   9  Avg Lvl =   2.37  [   0.52 sec. at Pass 2]{map}
DE:   #PIs = 211  #Luts =   231  Max Lvl =   9  Avg Lvl =   2.35  [   0.51 sec. at Pass 3]{postMap}
DE:   #PIs = 211  #Luts =   231  Max Lvl =   9  Avg Lvl =   2.35  [   1.04 sec. at Pass 4]{map}
DE:   #PIs = 211  #Luts =   231  Max Lvl =   9  Avg Lvl =   2.35  [   1.12 sec. at Pass 5]{postMap}
DE:   #PIs = 211  #Luts =   231  Max Lvl =   9  Avg Lvl =   2.35  [   0.71 sec. at Pass 6]{map}
DE:   #PIs = 211  #Luts =   230  Max Lvl =   9  Avg Lvl =   2.30  [   1.72 sec. at Pass 7]{pushMap}
DE:   #PIs = 211  #Luts =   230  Max Lvl =   9  Avg Lvl =   2.30  [   1.18 sec. at Pass 8]{postMap}
DE:   #PIs = 211  #Luts =   230  Max Lvl =   9  Avg Lvl =   2.30  [   0.82 sec. at Pass 9]{map}
DE:   #PIs = 211  #Luts =   229  Max Lvl =   9  Avg Lvl =   2.25  [   1.34 sec. at Pass 10]{postMap}
DE:   #PIs = 211  #Luts =   229  Max Lvl =   9  Avg Lvl =   2.25  [   0.78 sec. at Pass 11]{map}
DE:   #PIs = 211  #Luts =   229  Max Lvl =   9  Avg Lvl =   2.25  [   0.96 sec. at Pass 12]{postMap}
DE:   #PIs = 211  #Luts =   229  Max Lvl =   9  Avg Lvl =   2.25  [   0.90 sec. at Pass 13]{map}
DE:   #PIs = 211  #Luts =   229  Max Lvl =   8  Avg Lvl =   2.20  [   1.32 sec. at Pass 14]{pushMap}
DE:   #PIs = 211  #Luts =   229  Max Lvl =   8  Avg Lvl =   2.20  [   1.03 sec. at Pass 15]{postMap}
DE:   #PIs = 211  #Luts =   228  Max Lvl =   9  Avg Lvl =   2.20  [   0.74 sec. at Pass 16]{map}
DE:   #PIs = 211  #Luts =   228  Max Lvl =   9  Avg Lvl =   2.20  [   0.81 sec. at Pass 17]{postMap}
DE:   #PIs = 211  #Luts =   228  Max Lvl =   8  Avg Lvl =   2.18  [   0.57 sec. at Pass 18]{map}
DE:   #PIs = 211  #Luts =   228  Max Lvl =   8  Avg Lvl =   2.18  [   0.71 sec. at Pass 19]{postMap}
DE:   #PIs = 211  #Luts =   228  Max Lvl =   8  Avg Lvl =   2.18  [   0.74 sec. at Pass 20]{map}
DE:   #PIs = 211  #Luts =   228  Max Lvl =   8  Avg Lvl =   2.18  [   1.11 sec. at Pass 21]{postMap}
DE:   #PIs = 211  #Luts =   228  Max Lvl =   8  Avg Lvl =   2.18  [   1.44 sec. at Pass 22]{pushMap}
DE:   #PIs = 211  #Luts =   228  Max Lvl =   8  Avg Lvl =   2.18  [   0.42 sec. at Pass 23]{finalMap}

yosys> opt_expr

3.163. Executing OPT_EXPR pass (perform const folding).
Optimizing module serv_synth_wrapper.

yosys> opt_merge -nomux

3.164. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\serv_synth_wrapper'.
Removed a total of 0 cells.

yosys> opt_muxtree

3.165. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \serv_synth_wrapper..
  Creating internal representation of mux trees.
  No muxes found in this module.
Removed 0 multiplexer ports.

yosys> opt_reduce

3.166. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \serv_synth_wrapper.
Performed a total of 0 changes.

yosys> opt_merge

3.167. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\serv_synth_wrapper'.
Removed a total of 0 cells.

yosys> opt_share

3.168. Executing OPT_SHARE pass.

yosys> opt_dff -nosdff -nodffe

3.169. Executing OPT_DFF pass (perform DFF optimizations).

yosys> opt_clean

3.170. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \serv_synth_wrapper..
Removed 0 unused cells and 766 unused wires.
<suppressed ~5 debug messages>

yosys> opt_expr

3.171. Executing OPT_EXPR pass (perform const folding).
Optimizing module serv_synth_wrapper.
MAX OPT ITERATION = 1

yosys> hierarchy -check

3.172. Executing HIERARCHY pass (managing design hierarchy).

3.172.1. Analyzing design hierarchy..
Top module:  \serv_synth_wrapper

3.172.2. Analyzing design hierarchy..
Top module:  \serv_synth_wrapper
Removed 0 unused modules.

yosys> stat

3.173. Printing statistics.

=== serv_synth_wrapper ===

   Number of wires:                430
   Number of wire bits:           1252
   Number of public wires:         159
   Number of public wire bits:     981
   Number of memories:               0
   Number of memory bits:            0
   Number of processes:              0
   Number of cells:                407
     $lut                          228
     dffsre                        179


yosys> opt_clean -purge

3.174. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \serv_synth_wrapper..
Removed 0 unused cells and 126 unused wires.
<suppressed ~126 debug messages>

yosys> write_verilog -noattr -nohex synthesized.v

3.175. Executing Verilog backend.
Dumping module `\serv_synth_wrapper'.

Warnings: 7 unique messages, 8 total
End of script. Logfile hash: 92d191ce54, CPU: user 2.58s system 0.10s, MEM: 48.89 MB peak
Yosys 0.18+10 (git sha1 7361c89db, gcc 9.4.0-1ubuntu1~20.04.1 -fPIC -Os)
Time spent: 97% 6x abc (99 sec), 0% 38x opt_expr (0 sec), ...
real 56.17
user 87.77
sys 13.66
