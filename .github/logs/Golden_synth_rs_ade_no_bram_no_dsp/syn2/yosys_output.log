
 /----------------------------------------------------------------------------\
 |                                                                            |
 |  yosys -- Yosys Open SYnthesis Suite                                       |
 |                                                                            |
 |  Copyright (C) 2012 - 2020  Claire Xenia Wolf <claire@yosyshq.com>         |
 |                                                                            |
 |  Permission to use, copy, modify, and/or distribute this software for any  |
 |  purpose with or without fee is hereby granted, provided that the above    |
 |  copyright notice and this permission notice appear in all copies.         |
 |                                                                            |
 |  THE SOFTWARE IS PROVIDED "AS IS" AND THE AUTHOR DISCLAIMS ALL WARRANTIES  |
 |  WITH REGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF          |
 |  MERCHANTABILITY AND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR   |
 |  ANY SPECIAL, DIRECT, INDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES    |
 |  WHATSOEVER RESULTING FROM LOSS OF USE, DATA OR PROFITS, WHETHER IN AN     |
 |  ACTION OF CONTRACT, NEGLIGENCE OR OTHER TORTIOUS ACTION, ARISING OUT OF   |
 |  OR IN CONNECTION WITH THE USE OR PERFORMANCE OF THIS SOFTWARE.            |
 |                                                                            |
 \----------------------------------------------------------------------------/

 Yosys-Verific 0.0.92
 Yosys 0.18+10 (git sha1 7361c89db, gcc 9.4.0-1ubuntu1~20.04.1 -fPIC -Os)


-- Executing script file `yosys.ys' --
echo on

yosys> plugin -i synth-rs

yosys> read -verific

yosys> read -incdir .

yosys> verific -vlog-incdir .

1. Executing VERIFIC (loading SystemVerilog and VHDL designs using Verific).
Built with Verific May22_SW_Release, released at Wed Jun  1 05:39:28 2022.

yosys> verilog_defaults -add -I.

yosys> read -vlog2k syn2.v

yosys> verific -vlog2k syn2.v

2. Executing VERIFIC (loading SystemVerilog and VHDL designs using Verific).
Built with Verific May22_SW_Release, released at Wed Jun  1 05:39:28 2022.
VERIFIC-COMMENT [VERI-1482] Analyzing Verilog file 'syn2.v'

yosys> synth_rs -top top -tech genesis -goal area -de -no_dsp -no_bram -verilog synthesized.v

3. Executing synth_rs pass: v0.4.79

yosys> read_verilog -lib -specify -nomem2reg +/rapidsilicon/common/cells_sim.v +/rapidsilicon/genesis/cells_sim.v +/rapidsilicon/genesis/dsp_sim.v

3.1. Executing Verilog-2005 frontend: /nfs_scratch/scratch/Vorak/aram/Workspace/Raptor/yosys_verific_rs/yosys/install/bin/../share/yosys/rapidsilicon/common/cells_sim.v
Parsing Verilog input from `/nfs_scratch/scratch/Vorak/aram/Workspace/Raptor/yosys_verific_rs/yosys/install/bin/../share/yosys/rapidsilicon/common/cells_sim.v' to AST representation.
Generating RTLIL representation for module `\inv'.
Generating RTLIL representation for module `\buff'.
Generating RTLIL representation for module `\logic_0'.
Generating RTLIL representation for module `\logic_1'.
Generating RTLIL representation for module `\gclkbuff'.
Successfully finished Verilog frontend.

3.2. Executing Verilog-2005 frontend: /nfs_scratch/scratch/Vorak/aram/Workspace/Raptor/yosys_verific_rs/yosys/install/bin/../share/yosys/rapidsilicon/genesis/cells_sim.v
Parsing Verilog input from `/nfs_scratch/scratch/Vorak/aram/Workspace/Raptor/yosys_verific_rs/yosys/install/bin/../share/yosys/rapidsilicon/genesis/cells_sim.v' to AST representation.
Generating RTLIL representation for module `\dffsre'.
Generating RTLIL representation for module `\dffnsre'.
Generating RTLIL representation for module `\latchsre'.
Generating RTLIL representation for module `\latchnsre'.
Generating RTLIL representation for module `\io_scff'.
Generating RTLIL representation for module `\scff'.
Generating RTLIL representation for module `\sh_dff'.
Generating RTLIL representation for module `\adder_carry'.
Generating RTLIL representation for module `\sdffr'.
Generating RTLIL representation for module `\sdffs'.
Generating RTLIL representation for module `\TDP_BRAM18'.
Generating RTLIL representation for module `\TDP36K'.
Generating RTLIL representation for module `\BRAM2x18_TDP'.
Generating RTLIL representation for module `\BRAM2x18_SDP'.
Generating RTLIL representation for module `\_$_mem_v2_asymmetric'.
Successfully finished Verilog frontend.

3.3. Executing Verilog-2005 frontend: /nfs_scratch/scratch/Vorak/aram/Workspace/Raptor/yosys_verific_rs/yosys/install/bin/../share/yosys/rapidsilicon/genesis/dsp_sim.v
Parsing Verilog input from `/nfs_scratch/scratch/Vorak/aram/Workspace/Raptor/yosys_verific_rs/yosys/install/bin/../share/yosys/rapidsilicon/genesis/dsp_sim.v' to AST representation.
Generating RTLIL representation for module `\RS_DSP1'.
Generating RTLIL representation for module `\RS_DSP2'.
Generating RTLIL representation for module `\RS_DSP2_MULT'.
Generating RTLIL representation for module `\RS_DSP2_MULT_REGIN'.
Generating RTLIL representation for module `\RS_DSP2_MULT_REGOUT'.
Generating RTLIL representation for module `\RS_DSP2_MULT_REGIN_REGOUT'.
Generating RTLIL representation for module `\RS_DSP2_MULTADD'.
Generating RTLIL representation for module `\RS_DSP2_MULTADD_REGIN'.
Generating RTLIL representation for module `\RS_DSP2_MULTADD_REGOUT'.
Generating RTLIL representation for module `\RS_DSP2_MULTADD_REGIN_REGOUT'.
Generating RTLIL representation for module `\RS_DSP2_MULTACC'.
Generating RTLIL representation for module `\RS_DSP2_MULTACC_REGIN'.
Generating RTLIL representation for module `\RS_DSP2_MULTACC_REGOUT'.
Generating RTLIL representation for module `\RS_DSP2_MULTACC_REGIN_REGOUT'.
Generating RTLIL representation for module `\dsp_t1_20x18x64_cfg_ports'.
Generating RTLIL representation for module `\dsp_t1_10x9x32_cfg_ports'.
Generating RTLIL representation for module `\dsp_t1_sim_cfg_ports'.
Generating RTLIL representation for module `\RS_DSP3'.
Generating RTLIL representation for module `\RS_DSP3_MULT'.
Generating RTLIL representation for module `\RS_DSP3_MULT_REGIN'.
Generating RTLIL representation for module `\RS_DSP3_MULT_REGOUT'.
Generating RTLIL representation for module `\RS_DSP3_MULT_REGIN_REGOUT'.
Generating RTLIL representation for module `\RS_DSP3_MULTADD'.
Generating RTLIL representation for module `\RS_DSP3_MULTADD_REGIN'.
Generating RTLIL representation for module `\RS_DSP3_MULTADD_REGOUT'.
Generating RTLIL representation for module `\RS_DSP3_MULTADD_REGIN_REGOUT'.
Generating RTLIL representation for module `\RS_DSP3_MULTACC'.
Generating RTLIL representation for module `\RS_DSP3_MULTACC_REGIN'.
Generating RTLIL representation for module `\RS_DSP3_MULTACC_REGOUT'.
Generating RTLIL representation for module `\RS_DSP3_MULTACC_REGIN_REGOUT'.
Generating RTLIL representation for module `\dsp_t1_20x18x64_cfg_params'.
Generating RTLIL representation for module `\dsp_t1_10x9x32_cfg_params'.
Generating RTLIL representation for module `\dsp_t1_sim_cfg_params'.
Successfully finished Verilog frontend.

yosys> hierarchy -check -top top

3.4. Executing HIERARCHY pass (managing design hierarchy).
VERIFIC-INFO [VERI-1018] syn2.v:4: compiling module 'top'
VERIFIC-INFO [VERI-1018] syn2.v:1679: compiling module 'fpu_add'
VERIFIC-INFO [VERI-1018] syn2.v:590: compiling module 'except'
VERIFIC-WARNING [VERI-1330] syn2.v:1799: actual bit length 32 differs from formal bit length 31 for port 'opa'
VERIFIC-WARNING [VERI-1330] syn2.v:1799: actual bit length 32 differs from formal bit length 31 for port 'opb'
VERIFIC-INFO [VERI-1018] syn2.v:2013: compiling module 'pre_norm'
VERIFIC-WARNING [VERI-2371] syn2.v:2099: delay control is not supported for synthesis
VERIFIC-INFO [VERI-1018] syn2.v:1461: compiling module 'b_right_shifter'
VERIFIC-WARNING [VERI-1221] syn2.v:1475: 'shift_in' should be on the sensitivity list
VERIFIC-WARNING [VERI-1221] syn2.v:1476: 'shift_in' should be on the sensitivity list
VERIFIC-WARNING [VERI-1221] syn2.v:1477: 'shift_in' should be on the sensitivity list
VERIFIC-WARNING [VERI-1221] syn2.v:1478: 'shift_in' should be on the sensitivity list
VERIFIC-WARNING [VERI-1221] syn2.v:1479: 'shift_in' should be on the sensitivity list
VERIFIC-WARNING [VERI-1221] syn2.v:1480: 'shift_in' should be on the sensitivity list
VERIFIC-WARNING [VERI-1221] syn2.v:1481: 'shift_in' should be on the sensitivity list
VERIFIC-WARNING [VERI-1221] syn2.v:1482: 'shift_in' should be on the sensitivity list
VERIFIC-WARNING [VERI-1221] syn2.v:1483: 'shift_in' should be on the sensitivity list
VERIFIC-WARNING [VERI-1221] syn2.v:1484: 'shift_in' should be on the sensitivity list
VERIFIC-WARNING [VERI-1221] syn2.v:1485: 'shift_in' should be on the sensitivity list
VERIFIC-WARNING [VERI-1221] syn2.v:1486: 'shift_in' should be on the sensitivity list
VERIFIC-WARNING [VERI-1221] syn2.v:1487: 'shift_in' should be on the sensitivity list
VERIFIC-WARNING [VERI-1221] syn2.v:1488: 'shift_in' should be on the sensitivity list
VERIFIC-WARNING [VERI-1221] syn2.v:1489: 'shift_in' should be on the sensitivity list
VERIFIC-WARNING [VERI-1221] syn2.v:1490: 'shift_in' should be on the sensitivity list
VERIFIC-WARNING [VERI-1221] syn2.v:1491: 'shift_in' should be on the sensitivity list
VERIFIC-WARNING [VERI-1221] syn2.v:1492: 'shift_in' should be on the sensitivity list
VERIFIC-WARNING [VERI-1221] syn2.v:1493: 'shift_in' should be on the sensitivity list
VERIFIC-WARNING [VERI-1221] syn2.v:1494: 'shift_in' should be on the sensitivity list
VERIFIC-WARNING [VERI-1221] syn2.v:1495: 'shift_in' should be on the sensitivity list
VERIFIC-WARNING [VERI-1221] syn2.v:1496: 'shift_in' should be on the sensitivity list
VERIFIC-WARNING [VERI-1221] syn2.v:1497: 'shift_in' should be on the sensitivity list
VERIFIC-WARNING [VERI-1221] syn2.v:1498: 'shift_in' should be on the sensitivity list
VERIFIC-WARNING [VERI-1221] syn2.v:1499: 'shift_in' should be on the sensitivity list
VERIFIC-WARNING [VERI-1221] syn2.v:1500: 'shift_in' should be on the sensitivity list
VERIFIC-WARNING [VERI-1221] syn2.v:1501: 'shift_in' should be on the sensitivity list
VERIFIC-WARNING [VERI-1221] syn2.v:1502: 'shift_in' should be on the sensitivity list
VERIFIC-WARNING [VERI-1221] syn2.v:1503: 'shift_in' should be on the sensitivity list
VERIFIC-WARNING [VERI-1221] syn2.v:1504: 'shift_in' should be on the sensitivity list
VERIFIC-WARNING [VERI-1221] syn2.v:1505: 'shift_in' should be on the sensitivity list
VERIFIC-WARNING [VERI-1221] syn2.v:1506: 'shift_in' should be on the sensitivity list
VERIFIC-WARNING [VERI-1221] syn2.v:1507: 'shift_in' should be on the sensitivity list
VERIFIC-WARNING [VERI-1221] syn2.v:1508: 'shift_in' should be on the sensitivity list
VERIFIC-WARNING [VERI-1221] syn2.v:1509: 'shift_in' should be on the sensitivity list
VERIFIC-WARNING [VERI-1221] syn2.v:1510: 'shift_in' should be on the sensitivity list
VERIFIC-WARNING [VERI-1221] syn2.v:1511: 'shift_in' should be on the sensitivity list
VERIFIC-WARNING [VERI-1221] syn2.v:1512: 'shift_in' should be on the sensitivity list
VERIFIC-WARNING [VERI-1221] syn2.v:1513: 'shift_in' should be on the sensitivity list
VERIFIC-WARNING [VERI-1221] syn2.v:1514: 'shift_in' should be on the sensitivity list
VERIFIC-WARNING [VERI-1221] syn2.v:1515: 'shift_in' should be on the sensitivity list
VERIFIC-WARNING [VERI-1221] syn2.v:1516: 'shift_in' should be on the sensitivity list
VERIFIC-WARNING [VERI-1221] syn2.v:1517: 'shift_in' should be on the sensitivity list
VERIFIC-WARNING [VERI-1221] syn2.v:1518: 'shift_in' should be on the sensitivity list
VERIFIC-WARNING [VERI-1221] syn2.v:1519: 'shift_in' should be on the sensitivity list
VERIFIC-WARNING [VERI-1221] syn2.v:1520: 'shift_in' should be on the sensitivity list
VERIFIC-WARNING [VERI-1221] syn2.v:1521: 'shift_in' should be on the sensitivity list
VERIFIC-WARNING [VERI-1221] syn2.v:1522: 'shift_in' should be on the sensitivity list
VERIFIC-WARNING [VERI-1221] syn2.v:1523: 'shift_in' should be on the sensitivity list
VERIFIC-WARNING [VERI-1959] syn2.v:1523: right shift count >= width of value
VERIFIC-WARNING [VERI-2580] syn2.v:1526: latch inferred for net 'shift_out[47]'
VERIFIC-WARNING [VERI-1330] syn2.v:2118: actual bit length 27 differs from formal bit length 48 for port 'shift_in'
VERIFIC-WARNING [VERI-1330] syn2.v:2119: actual bit length 5 differs from formal bit length 6 for port 'shift_value'
VERIFIC-WARNING [VERI-1330] syn2.v:2120: actual bit length 27 differs from formal bit length 48 for port 'shift_out'
VERIFIC-WARNING [VERI-1173] syn2.v:2133: synthesis - simulation differences may occur when using full_case directive
VERIFIC-WARNING [VERI-2371] syn2.v:2178: delay control is not supported for synthesis
VERIFIC-WARNING [VERI-2371] syn2.v:2181: delay control is not supported for synthesis
VERIFIC-WARNING [VERI-2371] syn2.v:2204: delay control is not supported for synthesis
VERIFIC-WARNING [VERI-2371] syn2.v:2208: delay control is not supported for synthesis
VERIFIC-WARNING [VERI-2371] syn2.v:2211: delay control is not supported for synthesis
VERIFIC-WARNING [VERI-2371] syn2.v:2214: delay control is not supported for synthesis
VERIFIC-WARNING [VERI-2371] syn2.v:2220: delay control is not supported for synthesis
VERIFIC-WARNING [VERI-2371] syn2.v:2224: delay control is not supported for synthesis
VERIFIC-WARNING [VERI-2371] syn2.v:2227: delay control is not supported for synthesis
VERIFIC-WARNING [VERI-2371] syn2.v:2232: delay control is not supported for synthesis
VERIFIC-WARNING [VERI-2371] syn2.v:2257: delay control is not supported for synthesis
VERIFIC-WARNING [VERI-2371] syn2.v:1839: delay control is not supported for synthesis
VERIFIC-INFO [VERI-1018] syn2.v:2319: compiling module 'add_sub27'
VERIFIC-WARNING [VERI-2371] syn2.v:1855: delay control is not supported for synthesis
VERIFIC-WARNING [VERI-2371] syn2.v:1874: delay control is not supported for synthesis
VERIFIC-WARNING [VERI-2371] syn2.v:1878: delay control is not supported for synthesis
VERIFIC-WARNING [VERI-2371] syn2.v:1885: delay control is not supported for synthesis
VERIFIC-WARNING [VERI-2371] syn2.v:1888: delay control is not supported for synthesis
VERIFIC-WARNING [VERI-2371] syn2.v:1893: delay control is not supported for synthesis
VERIFIC-INFO [VERI-1018] syn2.v:853: compiling module 'post_norm'
VERIFIC-INFO [VERI-1018] syn2.v:1348: compiling module 'pri_encoder'
VERIFIC-WARNING [VERI-2580] syn2.v:1456: latch inferred for net 'fi_ldz_r0[5]'
VERIFIC-INFO [VERI-1018] syn2.v:1533: compiling module 'b_left_shifter'
VERIFIC-WARNING [VERI-1221] syn2.v:1547: 'shift_in' should be on the sensitivity list
VERIFIC-WARNING [VERI-1221] syn2.v:1548: 'shift_in' should be on the sensitivity list
VERIFIC-WARNING [VERI-1221] syn2.v:1549: 'shift_in' should be on the sensitivity list
VERIFIC-WARNING [VERI-1221] syn2.v:1550: 'shift_in' should be on the sensitivity list
VERIFIC-WARNING [VERI-1221] syn2.v:1551: 'shift_in' should be on the sensitivity list
VERIFIC-WARNING [VERI-1221] syn2.v:1552: 'shift_in' should be on the sensitivity list
VERIFIC-WARNING [VERI-1221] syn2.v:1553: 'shift_in' should be on the sensitivity list
VERIFIC-WARNING [VERI-1221] syn2.v:1554: 'shift_in' should be on the sensitivity list
VERIFIC-WARNING [VERI-1221] syn2.v:1555: 'shift_in' should be on the sensitivity list
VERIFIC-WARNING [VERI-1221] syn2.v:1556: 'shift_in' should be on the sensitivity list
VERIFIC-WARNING [VERI-1221] syn2.v:1557: 'shift_in' should be on the sensitivity list
VERIFIC-WARNING [VERI-1221] syn2.v:1558: 'shift_in' should be on the sensitivity list
VERIFIC-WARNING [VERI-1221] syn2.v:1559: 'shift_in' should be on the sensitivity list
VERIFIC-WARNING [VERI-1221] syn2.v:1560: 'shift_in' should be on the sensitivity list
VERIFIC-WARNING [VERI-1221] syn2.v:1561: 'shift_in' should be on the sensitivity list
VERIFIC-WARNING [VERI-1221] syn2.v:1562: 'shift_in' should be on the sensitivity list
VERIFIC-WARNING [VERI-1221] syn2.v:1563: 'shift_in' should be on the sensitivity list
VERIFIC-WARNING [VERI-1221] syn2.v:1564: 'shift_in' should be on the sensitivity list
VERIFIC-WARNING [VERI-1221] syn2.v:1565: 'shift_in' should be on the sensitivity list
VERIFIC-WARNING [VERI-1221] syn2.v:1566: 'shift_in' should be on the sensitivity list
VERIFIC-WARNING [VERI-1221] syn2.v:1567: 'shift_in' should be on the sensitivity list
VERIFIC-WARNING [VERI-1221] syn2.v:1568: 'shift_in' should be on the sensitivity list
VERIFIC-WARNING [VERI-1221] syn2.v:1569: 'shift_in' should be on the sensitivity list
VERIFIC-WARNING [VERI-1221] syn2.v:1570: 'shift_in' should be on the sensitivity list
VERIFIC-WARNING [VERI-1221] syn2.v:1571: 'shift_in' should be on the sensitivity list
VERIFIC-WARNING [VERI-1221] syn2.v:1572: 'shift_in' should be on the sensitivity list
VERIFIC-WARNING [VERI-1221] syn2.v:1573: 'shift_in' should be on the sensitivity list
VERIFIC-WARNING [VERI-1221] syn2.v:1574: 'shift_in' should be on the sensitivity list
VERIFIC-WARNING [VERI-1221] syn2.v:1575: 'shift_in' should be on the sensitivity list
VERIFIC-WARNING [VERI-1221] syn2.v:1576: 'shift_in' should be on the sensitivity list
VERIFIC-WARNING [VERI-1221] syn2.v:1577: 'shift_in' should be on the sensitivity list
VERIFIC-WARNING [VERI-1221] syn2.v:1578: 'shift_in' should be on the sensitivity list
VERIFIC-WARNING [VERI-1221] syn2.v:1579: 'shift_in' should be on the sensitivity list
VERIFIC-WARNING [VERI-1221] syn2.v:1580: 'shift_in' should be on the sensitivity list
VERIFIC-WARNING [VERI-1221] syn2.v:1581: 'shift_in' should be on the sensitivity list
VERIFIC-WARNING [VERI-1221] syn2.v:1582: 'shift_in' should be on the sensitivity list
VERIFIC-WARNING [VERI-1221] syn2.v:1583: 'shift_in' should be on the sensitivity list
VERIFIC-WARNING [VERI-1221] syn2.v:1584: 'shift_in' should be on the sensitivity list
VERIFIC-WARNING [VERI-1221] syn2.v:1585: 'shift_in' should be on the sensitivity list
VERIFIC-WARNING [VERI-1221] syn2.v:1586: 'shift_in' should be on the sensitivity list
VERIFIC-WARNING [VERI-1221] syn2.v:1587: 'shift_in' should be on the sensitivity list
VERIFIC-WARNING [VERI-1221] syn2.v:1588: 'shift_in' should be on the sensitivity list
VERIFIC-WARNING [VERI-1221] syn2.v:1589: 'shift_in' should be on the sensitivity list
VERIFIC-WARNING [VERI-1221] syn2.v:1590: 'shift_in' should be on the sensitivity list
VERIFIC-WARNING [VERI-1221] syn2.v:1591: 'shift_in' should be on the sensitivity list
VERIFIC-WARNING [VERI-1221] syn2.v:1592: 'shift_in' should be on the sensitivity list
VERIFIC-WARNING [VERI-1221] syn2.v:1593: 'shift_in' should be on the sensitivity list
VERIFIC-WARNING [VERI-1221] syn2.v:1594: 'shift_in' should be on the sensitivity list
VERIFIC-WARNING [VERI-1221] syn2.v:1595: 'shift_in' should be on the sensitivity list
VERIFIC-WARNING [VERI-1959] syn2.v:1595: left shift count >= width of value
VERIFIC-WARNING [VERI-2580] syn2.v:1598: latch inferred for net 'shift_out[47]'
VERIFIC-WARNING [VERI-1330] syn2.v:1112: actual bit length 56 differs from formal bit length 48 for port 'shift_in'
VERIFIC-WARNING [VERI-1330] syn2.v:1114: actual bit length 56 differs from formal bit length 48 for port 'shift_out'
VERIFIC-WARNING [VERI-2371] syn2.v:1931: delay control is not supported for synthesis
VERIFIC-WARNING [VERI-2371] syn2.v:1934: delay control is not supported for synthesis
VERIFIC-WARNING [VERI-2371] syn2.v:1943: delay control is not supported for synthesis
VERIFIC-WARNING [VERI-2371] syn2.v:1951: delay control is not supported for synthesis
VERIFIC-WARNING [VERI-2371] syn2.v:1956: delay control is not supported for synthesis
VERIFIC-WARNING [VERI-2371] syn2.v:1962: delay control is not supported for synthesis
VERIFIC-WARNING [VERI-2371] syn2.v:1967: delay control is not supported for synthesis
VERIFIC-WARNING [VERI-2371] syn2.v:1970: delay control is not supported for synthesis
VERIFIC-WARNING [VERI-2371] syn2.v:1976: delay control is not supported for synthesis
VERIFIC-WARNING [VERI-2371] syn2.v:1979: delay control is not supported for synthesis
VERIFIC-WARNING [VERI-2371] syn2.v:1984: delay control is not supported for synthesis
VERIFIC-WARNING [VERI-2371] syn2.v:1987: delay control is not supported for synthesis
VERIFIC-WARNING [VERI-2371] syn2.v:1990: delay control is not supported for synthesis
VERIFIC-WARNING [VERI-2371] syn2.v:1995: delay control is not supported for synthesis
VERIFIC-WARNING [VERI-2371] syn2.v:1996: delay control is not supported for synthesis
VERIFIC-WARNING [VERI-2371] syn2.v:1997: delay control is not supported for synthesis
VERIFIC-WARNING [VERI-2371] syn2.v:1998: delay control is not supported for synthesis
VERIFIC-WARNING [VERI-2371] syn2.v:2000: delay control is not supported for synthesis
VERIFIC-WARNING [VERI-2371] syn2.v:2001: delay control is not supported for synthesis
VERIFIC-WARNING [VERI-2371] syn2.v:2002: delay control is not supported for synthesis
VERIFIC-WARNING [VERI-2371] syn2.v:2003: delay control is not supported for synthesis
VERIFIC-WARNING [VERI-2371] syn2.v:2004: delay control is not supported for synthesis
VERIFIC-INFO [VERI-1018] syn2.v:175: compiling module 'fpu_mul'
VERIFIC-INFO [VERI-1018] syn2.v:709: compiling module 'pre_norm_fmul'
VERIFIC-WARNING [VERI-2371] syn2.v:791: delay control is not supported for synthesis
VERIFIC-INFO [VERI-1018] syn2.v:833: compiling module 'mul_r2'
VERIFIC-WARNING [VERI-2371] syn2.v:841: delay control is not supported for synthesis
VERIFIC-WARNING [VERI-2371] syn2.v:844: delay control is not supported for synthesis
Importing module top.
Importing module fpu_add.
Importing module add_sub27.
Importing module except.
Importing module fpu_mul.
Importing module mul_r2.
Importing module post_norm.
Importing module b_left_shifter.
Importing module b_right_shifter.
Importing module pre_norm.
Importing module pre_norm_fmul.
Importing module pri_encoder.

3.4.1. Analyzing design hierarchy..
Top module:  \top
Used module:     \fpu_add
Used module:         \post_norm
Used module:             \b_left_shifter
Used module:             \b_right_shifter
Used module:             \pri_encoder
Used module:         \add_sub27
Used module:         \pre_norm
Used module:         \except
Used module:     \fpu_mul
Used module:         \mul_r2
Used module:         \pre_norm_fmul

3.4.2. Analyzing design hierarchy..
Top module:  \top
Used module:     \fpu_add
Used module:         \post_norm
Used module:             \b_left_shifter
Used module:             \b_right_shifter
Used module:             \pri_encoder
Used module:         \add_sub27
Used module:         \pre_norm
Used module:         \except
Used module:     \fpu_mul
Used module:         \mul_r2
Used module:         \pre_norm_fmul
Removed 0 unused modules.
Warning: Resizing cell port pre_norm.u7.shift_out from 27 bits to 48 bits.

yosys> proc

3.5. Executing PROC pass (convert processes to netlists).

yosys> proc_clean

3.5.1. Executing PROC_CLEAN pass (remove empty switches from decision trees).
Cleaned up 0 empty switches.

yosys> proc_rmdead

3.5.2. Executing PROC_RMDEAD pass (remove dead branches from decision trees).
Removed a total of 0 dead cases.

yosys> proc_prune

3.5.3. Executing PROC_PRUNE pass (remove redundant assignments in processes).
Removed 0 redundant assignments.
Promoted 0 assignments to connections.

yosys> proc_init

3.5.4. Executing PROC_INIT pass (extract init attributes).

yosys> proc_arst

3.5.5. Executing PROC_ARST pass (detect async resets in processes).

yosys> proc_rom

3.5.6. Executing PROC_ROM pass (convert switches to ROMs).
Converted 0 switches.

yosys> proc_mux

3.5.7. Executing PROC_MUX pass (convert decision trees to multiplexers).

yosys> proc_dlatch

3.5.8. Executing PROC_DLATCH pass (convert process syncs to latches).

yosys> proc_dff

3.5.9. Executing PROC_DFF pass (convert process syncs to FFs).

yosys> proc_memwr

3.5.10. Executing PROC_MEMWR pass (convert process memory writes to cells).

yosys> proc_clean

3.5.11. Executing PROC_CLEAN pass (remove empty switches from decision trees).
Cleaned up 0 empty switches.

yosys> opt_expr -keepdc

3.5.12. Executing OPT_EXPR pass (perform const folding).
Optimizing module pri_encoder.
<suppressed ~1 debug messages>
Optimizing module pre_norm_fmul.
Optimizing module pre_norm.
Optimizing module b_right_shifter.
<suppressed ~3 debug messages>
Optimizing module b_left_shifter.
<suppressed ~3 debug messages>
Optimizing module post_norm.
<suppressed ~3 debug messages>
Optimizing module mul_r2.
Optimizing module fpu_mul.
<suppressed ~10 debug messages>
Optimizing module except.
Optimizing module add_sub27.
Optimizing module fpu_add.
<suppressed ~6 debug messages>
Optimizing module top.

yosys> bmuxmap

3.6. Executing BMUXMAP pass.

yosys> demuxmap

3.7. Executing DEMUXMAP pass.

yosys> clean_zerowidth

yosys> flatten

3.8. Executing FLATTEN pass (flatten design).
Deleting now unused module add_sub27.
Deleting now unused module b_left_shifter.
Deleting now unused module b_right_shifter.
Deleting now unused module except.
Deleting now unused module fpu_add.
Deleting now unused module fpu_mul.
Deleting now unused module mul_r2.
Deleting now unused module post_norm.
Deleting now unused module pre_norm.
Deleting now unused module pre_norm_fmul.
Deleting now unused module pri_encoder.
<suppressed ~22 debug messages>

yosys> bmuxmap

3.9. Executing BMUXMAP pass.

yosys> demuxmap

3.10. Executing DEMUXMAP pass.

yosys> clean_zerowidth

yosys> tribuf -logic -formal

3.11. Executing TRIBUF pass.

yosys> deminout

3.12. Executing DEMINOUT pass (demote inout ports to input or output).

yosys> opt_expr

3.13. Executing OPT_EXPR pass (perform const folding).
Optimizing module top.
<suppressed ~2666 debug messages>

yosys> opt_clean

3.14. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \top..
Removed 2272 unused cells and 14704 unused wires.
<suppressed ~5090 debug messages>

yosys> check

3.15. Executing CHECK pass (checking for obvious problems).
Checking module top...
Found and reported 0 problems.

yosys> opt_expr

3.16. Executing OPT_EXPR pass (perform const folding).
Optimizing module top.
<suppressed ~581 debug messages>

yosys> opt_merge -nomux

3.17. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\top'.
<suppressed ~1404 debug messages>
Removed a total of 468 cells.

yosys> opt_muxtree

3.18. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \top..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Removed 0 multiplexer ports.
<suppressed ~338 debug messages>

yosys> opt_reduce

3.19. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \top.
    New input vector for $reduce_or cell $flatten\add2_add.\u1.$verific$reduce_or_101$syn2.v:2159$4328: \add2_add.u1.adj_op [21:0]
    New input vector for $reduce_or cell $flatten\add5_add.\u4.$verific$reduce_or_388$syn2.v:1182$3663: \add5_add.fract_out_q [3:0]
    New input vector for $reduce_or cell $flatten\add5_add.\u4.$verific$reduce_or_38$syn2.v:989$3073: \add5_add.fract_out_q
    New input vector for $reduce_or cell $flatten\add5_add.\u1.$verific$reduce_or_99$syn2.v:2158$4326: \add5_add.u1.adj_op [20:0]
    New input vector for $reduce_or cell $flatten\add5_add.\u1.$verific$reduce_or_97$syn2.v:2157$4324: \add5_add.u1.adj_op [19:0]
    New input vector for $reduce_or cell $flatten\add5_add.\u1.$verific$reduce_or_95$syn2.v:2156$4322: \add5_add.u1.adj_op [18:0]
    New input vector for $reduce_or cell $flatten\add5_add.\u1.$verific$reduce_or_93$syn2.v:2155$4320: \add5_add.u1.adj_op [17:0]
    New input vector for $reduce_or cell $flatten\add5_add.\u1.$verific$reduce_or_91$syn2.v:2154$4318: \add5_add.u1.adj_op [16:0]
    New input vector for $reduce_or cell $flatten\add5_add.\u1.$verific$reduce_or_89$syn2.v:2153$4316: \add5_add.u1.adj_op [15:0]
    New input vector for $reduce_or cell $flatten\add5_add.\u1.$verific$reduce_or_87$syn2.v:2152$4314: \add5_add.u1.adj_op [14:0]
    New input vector for $reduce_or cell $flatten\add5_add.\u1.$verific$reduce_or_85$syn2.v:2151$4312: \add5_add.u1.adj_op [13:0]
    New input vector for $reduce_or cell $flatten\add5_add.\u1.$verific$reduce_or_83$syn2.v:2150$4310: \add5_add.u1.adj_op [12:0]
    New input vector for $reduce_or cell $flatten\add5_add.\u1.$verific$reduce_or_81$syn2.v:2149$4308: \add5_add.u1.adj_op [11:0]
    New input vector for $reduce_or cell $flatten\add5_add.\u1.$verific$reduce_or_79$syn2.v:2148$4306: \add5_add.u1.adj_op [10:0]
    New input vector for $reduce_or cell $flatten\add5_add.\u1.$verific$reduce_or_77$syn2.v:2147$4304: \add5_add.u1.adj_op [9:0]
    New input vector for $reduce_or cell $flatten\add5_add.\u1.$verific$reduce_or_75$syn2.v:2146$4302: \add5_add.u1.adj_op [8:0]
    New input vector for $reduce_or cell $flatten\add5_add.\u1.$verific$reduce_or_73$syn2.v:2145$4300: \add5_add.u1.adj_op [7:0]
    New input vector for $reduce_or cell $flatten\add5_add.\u1.$verific$reduce_or_71$syn2.v:2144$4298: \add5_add.u1.adj_op [6:0]
    New input vector for $reduce_or cell $flatten\add5_add.\u1.$verific$reduce_or_69$syn2.v:2143$4296: \add5_add.u1.adj_op [5:0]
    New input vector for $reduce_or cell $flatten\add5_add.\u1.$verific$reduce_or_67$syn2.v:2142$4294: \add5_add.u1.adj_op [4:0]
    New input vector for $reduce_or cell $flatten\add5_add.\u1.$verific$reduce_or_65$syn2.v:2141$4292: \add5_add.u1.adj_op [3:0]
    New input vector for $reduce_or cell $flatten\add5_add.\u1.$verific$reduce_or_63$syn2.v:2140$4290: \add5_add.u1.adj_op [2:0]
    New input vector for $reduce_or cell $flatten\add5_add.\u1.$verific$reduce_or_61$syn2.v:2139$4288: \add5_add.u1.adj_op [1:0]
    New input vector for $reduce_or cell $flatten\add5_add.\u1.$verific$reduce_or_105$syn2.v:2161$4332: { \add5_add.u1.adj_op \add5_add.u1.temp1 }
    New input vector for $reduce_or cell $flatten\add5_add.\u1.$verific$reduce_or_103$syn2.v:2160$4330: \add5_add.u1.adj_op
    New input vector for $reduce_or cell $flatten\add5_add.\u1.$verific$reduce_or_101$syn2.v:2159$4328: \add5_add.u1.adj_op [21:0]
    New input vector for $reduce_or cell $flatten\add1_add.\u1.$verific$reduce_or_73$syn2.v:2145$4300: \add1_add.u1.adj_op [7:0]
    New input vector for $reduce_or cell $flatten\add1_add.\u1.$verific$reduce_or_75$syn2.v:2146$4302: \add1_add.u1.adj_op [8:0]
    New input vector for $reduce_or cell $flatten\add1_add.\u1.$verific$reduce_or_77$syn2.v:2147$4304: \add1_add.u1.adj_op [9:0]
    New input vector for $reduce_or cell $flatten\add1_add.\u1.$verific$reduce_or_79$syn2.v:2148$4306: \add1_add.u1.adj_op [10:0]
    New input vector for $reduce_or cell $flatten\add1_add.\u1.$verific$reduce_or_81$syn2.v:2149$4308: \add1_add.u1.adj_op [11:0]
    New input vector for $reduce_or cell $flatten\add1_add.\u1.$verific$reduce_or_83$syn2.v:2150$4310: \add1_add.u1.adj_op [12:0]
    New input vector for $reduce_or cell $flatten\add1_add.\u1.$verific$reduce_or_85$syn2.v:2151$4312: \add1_add.u1.adj_op [13:0]
    New input vector for $reduce_or cell $flatten\add1_add.\u1.$verific$reduce_or_87$syn2.v:2152$4314: \add1_add.u1.adj_op [14:0]
    New input vector for $reduce_or cell $flatten\add1_add.\u1.$verific$reduce_or_89$syn2.v:2153$4316: \add1_add.u1.adj_op [15:0]
    New input vector for $reduce_or cell $flatten\add1_add.\u1.$verific$reduce_or_91$syn2.v:2154$4318: \add1_add.u1.adj_op [16:0]
    New input vector for $reduce_or cell $flatten\add1_add.\u1.$verific$reduce_or_93$syn2.v:2155$4320: \add1_add.u1.adj_op [17:0]
    New input vector for $reduce_or cell $flatten\add1_add.\u1.$verific$reduce_or_95$syn2.v:2156$4322: \add1_add.u1.adj_op [18:0]
    New input vector for $reduce_or cell $flatten\add1_add.\u1.$verific$reduce_or_97$syn2.v:2157$4324: \add1_add.u1.adj_op [19:0]
    New input vector for $reduce_or cell $flatten\add1_add.\u1.$verific$reduce_or_99$syn2.v:2158$4326: \add1_add.u1.adj_op [20:0]
    New input vector for $reduce_or cell $flatten\add1_add.\u1.$verific$reduce_or_71$syn2.v:2144$4298: \add1_add.u1.adj_op [6:0]
    New input vector for $reduce_or cell $flatten\add1_add.\u1.$verific$reduce_or_69$syn2.v:2143$4296: \add1_add.u1.adj_op [5:0]
    New input vector for $reduce_or cell $flatten\add1_add.\u1.$verific$reduce_or_67$syn2.v:2142$4294: \add1_add.u1.adj_op [4:0]
    New input vector for $reduce_or cell $flatten\add1_add.\u1.$verific$reduce_or_65$syn2.v:2141$4292: \add1_add.u1.adj_op [3:0]
    New input vector for $reduce_or cell $flatten\add1_add.\u1.$verific$reduce_or_63$syn2.v:2140$4290: \add1_add.u1.adj_op [2:0]
    New input vector for $reduce_or cell $flatten\add1_add.\u1.$verific$reduce_or_61$syn2.v:2139$4288: \add1_add.u1.adj_op [1:0]
    New input vector for $reduce_or cell $flatten\add2_add.\u1.$verific$reduce_or_61$syn2.v:2139$4288: \add2_add.u1.adj_op [1:0]
    New input vector for $reduce_or cell $flatten\add1_add.\u1.$verific$reduce_or_105$syn2.v:2161$4332: { \add1_add.u1.adj_op \add1_add.u1.temp1 }
    New input vector for $reduce_or cell $flatten\add1_add.\u1.$verific$reduce_or_103$syn2.v:2160$4330: \add1_add.u1.adj_op
    New input vector for $reduce_or cell $flatten\add1_add.\u1.$verific$reduce_or_101$syn2.v:2159$4328: \add1_add.u1.adj_op [21:0]
    New input vector for $reduce_or cell $flatten\add4_add.\u4.$verific$reduce_or_388$syn2.v:1182$3663: \add4_add.fract_out_q [3:0]
    New input vector for $reduce_or cell $flatten\add4_add.\u4.$verific$reduce_or_38$syn2.v:989$3073: \add4_add.fract_out_q
    New input vector for $reduce_or cell $flatten\add4_add.\u1.$verific$reduce_or_99$syn2.v:2158$4326: \add4_add.u1.adj_op [20:0]
    New input vector for $reduce_or cell $flatten\add4_add.\u1.$verific$reduce_or_97$syn2.v:2157$4324: \add4_add.u1.adj_op [19:0]
    New input vector for $reduce_or cell $flatten\add4_add.\u1.$verific$reduce_or_95$syn2.v:2156$4322: \add4_add.u1.adj_op [18:0]
    New input vector for $reduce_or cell $flatten\add4_add.\u1.$verific$reduce_or_93$syn2.v:2155$4320: \add4_add.u1.adj_op [17:0]
    New input vector for $reduce_or cell $flatten\add4_add.\u1.$verific$reduce_or_91$syn2.v:2154$4318: \add4_add.u1.adj_op [16:0]
    New input vector for $reduce_or cell $flatten\add4_add.\u1.$verific$reduce_or_89$syn2.v:2153$4316: \add4_add.u1.adj_op [15:0]
    New input vector for $reduce_or cell $flatten\add4_add.\u1.$verific$reduce_or_87$syn2.v:2152$4314: \add4_add.u1.adj_op [14:0]
    New input vector for $reduce_or cell $flatten\add4_add.\u1.$verific$reduce_or_85$syn2.v:2151$4312: \add4_add.u1.adj_op [13:0]
    New input vector for $reduce_or cell $flatten\add4_add.\u1.$verific$reduce_or_83$syn2.v:2150$4310: \add4_add.u1.adj_op [12:0]
    New input vector for $reduce_or cell $flatten\add4_add.\u1.$verific$reduce_or_81$syn2.v:2149$4308: \add4_add.u1.adj_op [11:0]
    New input vector for $reduce_or cell $flatten\add4_add.\u1.$verific$reduce_or_79$syn2.v:2148$4306: \add4_add.u1.adj_op [10:0]
    New input vector for $reduce_or cell $flatten\add4_add.\u1.$verific$reduce_or_77$syn2.v:2147$4304: \add4_add.u1.adj_op [9:0]
    New input vector for $reduce_or cell $flatten\add4_add.\u1.$verific$reduce_or_75$syn2.v:2146$4302: \add4_add.u1.adj_op [8:0]
    New input vector for $reduce_or cell $flatten\add4_add.\u1.$verific$reduce_or_73$syn2.v:2145$4300: \add4_add.u1.adj_op [7:0]
    New input vector for $reduce_or cell $flatten\add4_add.\u1.$verific$reduce_or_71$syn2.v:2144$4298: \add4_add.u1.adj_op [6:0]
    New input vector for $reduce_or cell $flatten\add4_add.\u1.$verific$reduce_or_69$syn2.v:2143$4296: \add4_add.u1.adj_op [5:0]
    New input vector for $reduce_or cell $flatten\add4_add.\u1.$verific$reduce_or_67$syn2.v:2142$4294: \add4_add.u1.adj_op [4:0]
    New input vector for $reduce_or cell $flatten\add4_add.\u1.$verific$reduce_or_65$syn2.v:2141$4292: \add4_add.u1.adj_op [3:0]
    New input vector for $reduce_or cell $flatten\add4_add.\u1.$verific$reduce_or_63$syn2.v:2140$4290: \add4_add.u1.adj_op [2:0]
    New input vector for $reduce_or cell $flatten\add4_add.\u1.$verific$reduce_or_61$syn2.v:2139$4288: \add4_add.u1.adj_op [1:0]
    New input vector for $reduce_or cell $flatten\add4_add.\u1.$verific$reduce_or_105$syn2.v:2161$4332: { \add4_add.u1.adj_op \add4_add.u1.temp1 }
    New input vector for $reduce_or cell $flatten\add4_add.\u1.$verific$reduce_or_103$syn2.v:2160$4330: \add4_add.u1.adj_op
    New input vector for $reduce_or cell $flatten\add4_add.\u1.$verific$reduce_or_101$syn2.v:2159$4328: \add4_add.u1.adj_op [21:0]
    New input vector for $reduce_or cell $flatten\add3_add.\u4.$verific$reduce_or_388$syn2.v:1182$3663: \add3_add.fract_out_q [3:0]
    New input vector for $reduce_or cell $flatten\add3_add.\u4.$verific$reduce_or_38$syn2.v:989$3073: \add3_add.fract_out_q
    New input vector for $reduce_or cell $flatten\add3_add.\u1.$verific$reduce_or_99$syn2.v:2158$4326: \add3_add.u1.adj_op [20:0]
    New input vector for $reduce_or cell $flatten\add3_add.\u1.$verific$reduce_or_97$syn2.v:2157$4324: \add3_add.u1.adj_op [19:0]
    New input vector for $reduce_or cell $flatten\add3_add.\u1.$verific$reduce_or_95$syn2.v:2156$4322: \add3_add.u1.adj_op [18:0]
    New input vector for $reduce_or cell $flatten\add3_add.\u1.$verific$reduce_or_93$syn2.v:2155$4320: \add3_add.u1.adj_op [17:0]
    New input vector for $reduce_or cell $flatten\add3_add.\u1.$verific$reduce_or_91$syn2.v:2154$4318: \add3_add.u1.adj_op [16:0]
    New input vector for $reduce_or cell $flatten\add3_add.\u1.$verific$reduce_or_89$syn2.v:2153$4316: \add3_add.u1.adj_op [15:0]
    New input vector for $reduce_or cell $flatten\add3_add.\u1.$verific$reduce_or_87$syn2.v:2152$4314: \add3_add.u1.adj_op [14:0]
    New input vector for $reduce_or cell $flatten\add3_add.\u1.$verific$reduce_or_85$syn2.v:2151$4312: \add3_add.u1.adj_op [13:0]
    New input vector for $reduce_or cell $flatten\add3_add.\u1.$verific$reduce_or_83$syn2.v:2150$4310: \add3_add.u1.adj_op [12:0]
    New input vector for $reduce_or cell $flatten\add3_add.\u1.$verific$reduce_or_81$syn2.v:2149$4308: \add3_add.u1.adj_op [11:0]
    New input vector for $reduce_or cell $flatten\add3_add.\u1.$verific$reduce_or_79$syn2.v:2148$4306: \add3_add.u1.adj_op [10:0]
    New input vector for $reduce_or cell $flatten\add3_add.\u1.$verific$reduce_or_77$syn2.v:2147$4304: \add3_add.u1.adj_op [9:0]
    New input vector for $reduce_or cell $flatten\add3_add.\u1.$verific$reduce_or_75$syn2.v:2146$4302: \add3_add.u1.adj_op [8:0]
    New input vector for $reduce_or cell $flatten\add3_add.\u1.$verific$reduce_or_73$syn2.v:2145$4300: \add3_add.u1.adj_op [7:0]
    New input vector for $reduce_or cell $flatten\add3_add.\u1.$verific$reduce_or_71$syn2.v:2144$4298: \add3_add.u1.adj_op [6:0]
    New input vector for $reduce_or cell $flatten\add3_add.\u1.$verific$reduce_or_69$syn2.v:2143$4296: \add3_add.u1.adj_op [5:0]
    New input vector for $reduce_or cell $flatten\add3_add.\u1.$verific$reduce_or_67$syn2.v:2142$4294: \add3_add.u1.adj_op [4:0]
    New input vector for $reduce_or cell $flatten\add3_add.\u1.$verific$reduce_or_65$syn2.v:2141$4292: \add3_add.u1.adj_op [3:0]
    New input vector for $reduce_or cell $flatten\add3_add.\u1.$verific$reduce_or_63$syn2.v:2140$4290: \add3_add.u1.adj_op [2:0]
    New input vector for $reduce_or cell $flatten\add3_add.\u1.$verific$reduce_or_61$syn2.v:2139$4288: \add3_add.u1.adj_op [1:0]
    New input vector for $reduce_or cell $flatten\add3_add.\u1.$verific$reduce_or_105$syn2.v:2161$4332: { \add3_add.u1.adj_op \add3_add.u1.temp1 }
    New input vector for $reduce_or cell $flatten\add3_add.\u1.$verific$reduce_or_103$syn2.v:2160$4330: \add3_add.u1.adj_op
    New input vector for $reduce_or cell $flatten\add3_add.\u1.$verific$reduce_or_101$syn2.v:2159$4328: \add3_add.u1.adj_op [21:0]
    New input vector for $reduce_or cell $flatten\add1_add.\u4.$verific$reduce_or_38$syn2.v:989$3073: \add1_add.fract_out_q
    New input vector for $reduce_or cell $flatten\add1_add.\u4.$verific$reduce_or_388$syn2.v:1182$3663: \add1_add.fract_out_q [3:0]
    New input vector for $reduce_or cell $flatten\add2_add.\u1.$verific$reduce_or_105$syn2.v:2161$4332: { \add2_add.u1.adj_op \add2_add.u1.temp1 }
    New input vector for $reduce_or cell $flatten\add2_add.\u4.$verific$reduce_or_388$syn2.v:1182$3663: \add2_add.fract_out_q [3:0]
    New input vector for $reduce_or cell $flatten\add2_add.\u4.$verific$reduce_or_38$syn2.v:989$3073: \add2_add.fract_out_q
    New input vector for $reduce_or cell $flatten\add2_add.\u1.$verific$reduce_or_103$syn2.v:2160$4330: \add2_add.u1.adj_op
    New input vector for $reduce_or cell $flatten\add2_add.\u1.$verific$reduce_or_99$syn2.v:2158$4326: \add2_add.u1.adj_op [20:0]
    New input vector for $reduce_or cell $flatten\add2_add.\u1.$verific$reduce_or_97$syn2.v:2157$4324: \add2_add.u1.adj_op [19:0]
    New input vector for $reduce_or cell $flatten\add2_add.\u1.$verific$reduce_or_95$syn2.v:2156$4322: \add2_add.u1.adj_op [18:0]
    New input vector for $reduce_or cell $flatten\add2_add.\u1.$verific$reduce_or_93$syn2.v:2155$4320: \add2_add.u1.adj_op [17:0]
    New input vector for $reduce_or cell $flatten\add2_add.\u1.$verific$reduce_or_91$syn2.v:2154$4318: \add2_add.u1.adj_op [16:0]
    New input vector for $reduce_or cell $flatten\add2_add.\u1.$verific$reduce_or_89$syn2.v:2153$4316: \add2_add.u1.adj_op [15:0]
    New input vector for $reduce_or cell $flatten\add2_add.\u1.$verific$reduce_or_87$syn2.v:2152$4314: \add2_add.u1.adj_op [14:0]
    New input vector for $reduce_or cell $flatten\add2_add.\u1.$verific$reduce_or_85$syn2.v:2151$4312: \add2_add.u1.adj_op [13:0]
    New input vector for $reduce_or cell $flatten\add2_add.\u1.$verific$reduce_or_83$syn2.v:2150$4310: \add2_add.u1.adj_op [12:0]
    New input vector for $reduce_or cell $flatten\add2_add.\u1.$verific$reduce_or_81$syn2.v:2149$4308: \add2_add.u1.adj_op [11:0]
    New input vector for $reduce_or cell $flatten\add2_add.\u1.$verific$reduce_or_79$syn2.v:2148$4306: \add2_add.u1.adj_op [10:0]
    New input vector for $reduce_or cell $flatten\add2_add.\u1.$verific$reduce_or_77$syn2.v:2147$4304: \add2_add.u1.adj_op [9:0]
    New input vector for $reduce_or cell $flatten\add2_add.\u1.$verific$reduce_or_75$syn2.v:2146$4302: \add2_add.u1.adj_op [8:0]
    New input vector for $reduce_or cell $flatten\add2_add.\u1.$verific$reduce_or_73$syn2.v:2145$4300: \add2_add.u1.adj_op [7:0]
    New input vector for $reduce_or cell $flatten\add2_add.\u1.$verific$reduce_or_71$syn2.v:2144$4298: \add2_add.u1.adj_op [6:0]
    New input vector for $reduce_or cell $flatten\add2_add.\u1.$verific$reduce_or_69$syn2.v:2143$4296: \add2_add.u1.adj_op [5:0]
    New input vector for $reduce_or cell $flatten\add2_add.\u1.$verific$reduce_or_67$syn2.v:2142$4294: \add2_add.u1.adj_op [4:0]
    New input vector for $reduce_or cell $flatten\add2_add.\u1.$verific$reduce_or_65$syn2.v:2141$4292: \add2_add.u1.adj_op [3:0]
    New input vector for $reduce_or cell $flatten\add2_add.\u1.$verific$reduce_or_63$syn2.v:2140$4290: \add2_add.u1.adj_op [2:0]
  Optimizing cells in module \top.
Performed a total of 125 changes.

yosys> opt_merge

3.20. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\top'.
<suppressed ~66 debug messages>
Removed a total of 22 cells.

yosys> opt_share

3.21. Executing OPT_SHARE pass.
    Found cells that share an operand and can be merged by moving the $mux $flatten\add2_add.\u4.$verific$mux_326$syn2.v:1157$3617 in front of them:
        $flatten\add2_add.\u4.$verific$sub_210$syn2.v:1097$3418
        $flatten\add2_add.\u4.$verific$sub_212$syn2.v:1098$3420

    Found cells that share an operand and can be merged by moving the $mux $flatten\add3_add.\u4.$verific$mux_326$syn2.v:1157$3617 in front of them:
        $flatten\add3_add.\u4.$verific$sub_210$syn2.v:1097$3418
        $flatten\add3_add.\u4.$verific$sub_212$syn2.v:1098$3420

    Found cells that share an operand and can be merged by moving the $mux $flatten\add4_add.\u4.$verific$mux_326$syn2.v:1157$3617 in front of them:
        $flatten\add4_add.\u4.$verific$sub_210$syn2.v:1097$3418
        $flatten\add4_add.\u4.$verific$sub_212$syn2.v:1098$3420

    Found cells that share an operand and can be merged by moving the $mux $flatten\add5_add.\u4.$verific$mux_326$syn2.v:1157$3617 in front of them:
        $flatten\add5_add.\u4.$verific$sub_210$syn2.v:1097$3418
        $flatten\add5_add.\u4.$verific$sub_212$syn2.v:1098$3420

    Found cells that share an operand and can be merged by moving the $mux $flatten\x1_mul.\u2.$verific$mux_39$syn2.v:775$4512 in front of them:
        $flatten\x1_mul.\u2.$verific$add_37$syn2.v:775$4510
        $flatten\x1_mul.\u2.$verific$sub_38$syn2.v:775$4511

    Found cells that share an operand and can be merged by moving the $mux $flatten\x1_mul.\u2.$verific$mux_47$syn2.v:778$4520 in front of them:
        $flatten\x1_mul.\u2.$verific$add_45$syn2.v:778$4518
        $flatten\x1_mul.\u2.$verific$sub_46$syn2.v:778$4519

    Found cells that share an operand and can be merged by moving the $mux $flatten\x1_mul.\u4.$verific$mux_326$syn2.v:1157$3617 in front of them:
        $flatten\x1_mul.\u4.$verific$sub_210$syn2.v:1097$3418
        $flatten\x1_mul.\u4.$verific$sub_212$syn2.v:1098$3420

    Found cells that share an operand and can be merged by moving the $mux $flatten\x2_mul.\u2.$verific$mux_39$syn2.v:775$4512 in front of them:
        $flatten\x2_mul.\u2.$verific$add_37$syn2.v:775$4510
        $flatten\x2_mul.\u2.$verific$sub_38$syn2.v:775$4511

    Found cells that share an operand and can be merged by moving the $mux $flatten\x2_mul.\u2.$verific$mux_47$syn2.v:778$4520 in front of them:
        $flatten\x2_mul.\u2.$verific$add_45$syn2.v:778$4518
        $flatten\x2_mul.\u2.$verific$sub_46$syn2.v:778$4519

    Found cells that share an operand and can be merged by moving the $mux $flatten\add1_add.\u4.$verific$mux_326$syn2.v:1157$3617 in front of them:
        $flatten\add1_add.\u4.$verific$sub_210$syn2.v:1097$3418
        $flatten\add1_add.\u4.$verific$sub_212$syn2.v:1098$3420

    Found cells that share an operand and can be merged by moving the $mux $flatten\x2_mul.\u4.$verific$mux_326$syn2.v:1157$3617 in front of them:
        $flatten\x2_mul.\u4.$verific$sub_210$syn2.v:1097$3418
        $flatten\x2_mul.\u4.$verific$sub_212$syn2.v:1098$3420

    Found cells that share an operand and can be merged by moving the $mux $flatten\x3_mul.\u2.$verific$mux_39$syn2.v:775$4512 in front of them:
        $flatten\x3_mul.\u2.$verific$add_37$syn2.v:775$4510
        $flatten\x3_mul.\u2.$verific$sub_38$syn2.v:775$4511

    Found cells that share an operand and can be merged by moving the $mux $flatten\x3_mul.\u2.$verific$mux_47$syn2.v:778$4520 in front of them:
        $flatten\x3_mul.\u2.$verific$add_45$syn2.v:778$4518
        $flatten\x3_mul.\u2.$verific$sub_46$syn2.v:778$4519

    Found cells that share an operand and can be merged by moving the $mux $flatten\x3_mul.\u4.$verific$mux_326$syn2.v:1157$3617 in front of them:
        $flatten\x3_mul.\u4.$verific$sub_210$syn2.v:1097$3418
        $flatten\x3_mul.\u4.$verific$sub_212$syn2.v:1098$3420

    Found cells that share an operand and can be merged by moving the $mux $flatten\x4_mul.\u2.$verific$mux_39$syn2.v:775$4512 in front of them:
        $flatten\x4_mul.\u2.$verific$add_37$syn2.v:775$4510
        $flatten\x4_mul.\u2.$verific$sub_38$syn2.v:775$4511

    Found cells that share an operand and can be merged by moving the $mux $flatten\x4_mul.\u2.$verific$mux_47$syn2.v:778$4520 in front of them:
        $flatten\x4_mul.\u2.$verific$add_45$syn2.v:778$4518
        $flatten\x4_mul.\u2.$verific$sub_46$syn2.v:778$4519

    Found cells that share an operand and can be merged by moving the $mux $flatten\x4_mul.\u4.$verific$mux_326$syn2.v:1157$3617 in front of them:
        $flatten\x4_mul.\u4.$verific$sub_210$syn2.v:1097$3418
        $flatten\x4_mul.\u4.$verific$sub_212$syn2.v:1098$3420


yosys> opt_dff -nosdff -nodffe

3.22. Executing OPT_DFF pass (perform DFF optimizations).
Removing never-active async load on $verific$reg6_reg$syn2.v:170$971 ($aldff) from module top.
Removing never-active async load on $verific$reg5_reg$syn2.v:170$970 ($aldff) from module top.
Removing never-active async load on $verific$reg4_reg$syn2.v:170$969 ($aldff) from module top.
Removing never-active async load on $verific$reg3_reg$syn2.v:170$968 ($aldff) from module top.
Removing never-active async load on $verific$reg2_reg$syn2.v:170$967 ($aldff) from module top.
Removing never-active async load on $verific$reg1_reg$syn2.v:170$966 ($aldff) from module top.
Removing never-active async load on $flatten\x4_mul.\u5.$verific$prod_reg$syn2.v:844$2536 ($aldff) from module top.
Removing never-active async load on $flatten\x4_mul.\u5.$verific$prod1_reg$syn2.v:841$2534 ($aldff) from module top.
Removing never-active CLR on $flatten\x4_mul.\u4.\u7.$verific$shift_out_reg$syn2.v:1598$3944 ($dlatchsr) from module top.
Removing never-active ARST on $flatten\x4_mul.\u4.\u7.$verific$shift_out_reg$syn2.v:1598$3944 ($dlatchsr) from module top.
Removing never-active async load on $flatten\x4_mul.\u4.\u6.$verific$fi_ldz_r0_reg$syn2.v:1456$4874 ($dlatchsr) from module top.
Removing never-active CLR on $flatten\x4_mul.\u4.\u1.$verific$shift_out_reg$syn2.v:1526$4010 ($dlatchsr) from module top.
Removing never-active ARST on $flatten\x4_mul.\u4.\u1.$verific$shift_out_reg$syn2.v:1526$4010 ($dlatchsr) from module top.
Removing never-active async load on $flatten\add1_add.$verific$exp_r_reg$syn2.v:1874$1380 ($aldff) from module top.
Removing never-active async load on $flatten\x4_mul.\u2.$verific$exp_ovf_reg$syn2.v:791$4543 ($aldff) from module top.
Removing never-active async load on $flatten\x4_mul.\u2.$verific$exp_out_reg$syn2.v:782$4524 ($aldff) from module top.
Removing never-active async load on $flatten\x4_mul.$verific$out_reg$syn2.v:585$2516 ($aldff) from module top.
Removing never-active async load on $flatten\x4_mul.$verific$out_o1_reg$syn2.v:476$2402 ($aldff) from module top.
Removing never-active async load on $flatten\x4_mul.$verific$exp_r_reg$syn2.v:380$2230 ($aldff) from module top.
Removing never-active async load on $flatten\x4_mul.$verific$exp_ovf_r_reg$syn2.v:353$2131 ($aldff) from module top.
Removing never-active async load on $flatten\x3_mul.\u5.$verific$prod_reg$syn2.v:844$2536 ($aldff) from module top.
Removing never-active async load on $flatten\x3_mul.\u5.$verific$prod1_reg$syn2.v:841$2534 ($aldff) from module top.
Removing never-active CLR on $flatten\x3_mul.\u4.\u7.$verific$shift_out_reg$syn2.v:1598$3944 ($dlatchsr) from module top.
Removing never-active ARST on $flatten\x3_mul.\u4.\u7.$verific$shift_out_reg$syn2.v:1598$3944 ($dlatchsr) from module top.
Removing never-active async load on $flatten\x3_mul.\u4.\u6.$verific$fi_ldz_r0_reg$syn2.v:1456$4874 ($dlatchsr) from module top.
Removing never-active CLR on $flatten\x3_mul.\u4.\u1.$verific$shift_out_reg$syn2.v:1526$4010 ($dlatchsr) from module top.
Removing never-active ARST on $flatten\x3_mul.\u4.\u1.$verific$shift_out_reg$syn2.v:1526$4010 ($dlatchsr) from module top.
Removing never-active async load on $flatten\add1_add.$verific$fract_out_q_reg$syn2.v:1855$1378 ($aldff) from module top.
Removing never-active async load on $flatten\x3_mul.\u2.$verific$exp_ovf_reg$syn2.v:791$4543 ($aldff) from module top.
Removing never-active async load on $flatten\x3_mul.\u2.$verific$exp_out_reg$syn2.v:782$4524 ($aldff) from module top.
Removing never-active async load on $flatten\add2_add.\u1.$verific$fractb_out_reg$syn2.v:2181$4350 ($aldff) from module top.
Removing never-active async load on $flatten\add2_add.\u1.$verific$fracta_out_reg$syn2.v:2178$4348 ($aldff) from module top.
Removing never-active async load on $flatten\add2_add.\u1.$verific$exp_dn_out_reg$syn2.v:2099$4185 ($aldff) from module top.
Removing never-active async load on $flatten\x3_mul.$verific$out_reg$syn2.v:585$2516 ($aldff) from module top.
Removing never-active async load on $flatten\x3_mul.$verific$out_o1_reg$syn2.v:476$2402 ($aldff) from module top.
Removing never-active async load on $flatten\x3_mul.$verific$exp_r_reg$syn2.v:380$2230 ($aldff) from module top.
Removing never-active async load on $flatten\x3_mul.$verific$exp_ovf_r_reg$syn2.v:353$2131 ($aldff) from module top.
Removing never-active async load on $flatten\x2_mul.\u5.$verific$prod_reg$syn2.v:844$2536 ($aldff) from module top.
Removing never-active async load on $flatten\x2_mul.\u5.$verific$prod1_reg$syn2.v:841$2534 ($aldff) from module top.
Removing never-active CLR on $flatten\x2_mul.\u4.\u7.$verific$shift_out_reg$syn2.v:1598$3944 ($dlatchsr) from module top.
Removing never-active ARST on $flatten\x2_mul.\u4.\u7.$verific$shift_out_reg$syn2.v:1598$3944 ($dlatchsr) from module top.
Removing never-active async load on $flatten\x2_mul.\u4.\u6.$verific$fi_ldz_r0_reg$syn2.v:1456$4874 ($dlatchsr) from module top.
Removing never-active CLR on $flatten\x2_mul.\u4.\u1.$verific$shift_out_reg$syn2.v:1526$4010 ($dlatchsr) from module top.
Removing never-active ARST on $flatten\x2_mul.\u4.\u1.$verific$shift_out_reg$syn2.v:1526$4010 ($dlatchsr) from module top.
Removing never-active async load on $flatten\add1_add.\u4.\u6.$verific$fi_ldz_r0_reg$syn2.v:1456$4874 ($dlatchsr) from module top.
Removing never-active async load on $flatten\x2_mul.\u2.$verific$exp_ovf_reg$syn2.v:791$4543 ($aldff) from module top.
Removing never-active async load on $flatten\x2_mul.\u2.$verific$exp_out_reg$syn2.v:782$4524 ($aldff) from module top.
Removing never-active async load on $flatten\x2_mul.$verific$out_reg$syn2.v:585$2516 ($aldff) from module top.
Removing never-active async load on $flatten\x2_mul.$verific$out_o1_reg$syn2.v:476$2402 ($aldff) from module top.
Removing never-active async load on $flatten\x2_mul.$verific$opb_r_reg$syn2.v:268$1904 ($aldff) from module top.
Removing never-active async load on $flatten\x2_mul.$verific$opa_r_reg$syn2.v:265$1902 ($aldff) from module top.
Removing never-active async load on $flatten\x2_mul.$verific$exp_r_reg$syn2.v:380$2230 ($aldff) from module top.
Removing never-active async load on $flatten\x2_mul.$verific$exp_ovf_r_reg$syn2.v:353$2131 ($aldff) from module top.
Removing never-active async load on $flatten\x1_mul.\u5.$verific$prod_reg$syn2.v:844$2536 ($aldff) from module top.
Removing never-active async load on $flatten\x1_mul.\u5.$verific$prod1_reg$syn2.v:841$2534 ($aldff) from module top.
Removing never-active CLR on $flatten\x1_mul.\u4.\u7.$verific$shift_out_reg$syn2.v:1598$3944 ($dlatchsr) from module top.
Removing never-active ARST on $flatten\x1_mul.\u4.\u7.$verific$shift_out_reg$syn2.v:1598$3944 ($dlatchsr) from module top.
Removing never-active async load on $flatten\x1_mul.\u4.\u6.$verific$fi_ldz_r0_reg$syn2.v:1456$4874 ($dlatchsr) from module top.
Removing never-active CLR on $flatten\x1_mul.\u4.\u1.$verific$shift_out_reg$syn2.v:1526$4010 ($dlatchsr) from module top.
Removing never-active ARST on $flatten\x1_mul.\u4.\u1.$verific$shift_out_reg$syn2.v:1526$4010 ($dlatchsr) from module top.
Removing never-active async load on $flatten\add2_add.$verific$rmode_r3_reg$syn2.v:1778$1072 ($aldff) from module top.
Removing never-active async load on $flatten\x1_mul.\u2.$verific$exp_ovf_reg$syn2.v:791$4543 ($aldff) from module top.
Removing never-active async load on $flatten\x1_mul.\u2.$verific$exp_out_reg$syn2.v:782$4524 ($aldff) from module top.
Removing never-active async load on $flatten\add2_add.$verific$rmode_r2_reg$syn2.v:1775$1070 ($aldff) from module top.
Removing never-active async load on $flatten\add2_add.$verific$rmode_r1_reg$syn2.v:1772$1068 ($aldff) from module top.
Removing never-active async load on $flatten\add2_add.$verific$out_reg$syn2.v:2005$1578 ($aldff) from module top.
Removing never-active async load on $flatten\add2_add.$verific$out_o1_reg$syn2.v:1951$1522 ($aldff) from module top.
Removing never-active async load on $flatten\add2_add.$verific$opb_r_reg$syn2.v:1769$1066 ($aldff) from module top.
Removing never-active async load on $flatten\x1_mul.$verific$out_reg$syn2.v:585$2516 ($aldff) from module top.
Removing never-active async load on $flatten\x1_mul.$verific$out_o1_reg$syn2.v:476$2402 ($aldff) from module top.
Removing never-active async load on $flatten\x1_mul.$verific$opa_r_reg$syn2.v:265$1902 ($aldff) from module top.
Removing never-active async load on $flatten\x1_mul.$verific$fpu_op_reg$syn2.v:262$1900 ($aldff) from module top.
Removing never-active async load on $flatten\x1_mul.$verific$fpu_op_r3_reg$syn2.v:286$1916 ($aldff) from module top.
Removing never-active async load on $flatten\x1_mul.$verific$fpu_op_r2_reg$syn2.v:283$1914 ($aldff) from module top.
Removing never-active async load on $flatten\x1_mul.$verific$fpu_op_r1_reg$syn2.v:280$1912 ($aldff) from module top.
Removing never-active async load on $flatten\x1_mul.$verific$exp_r_reg$syn2.v:380$2230 ($aldff) from module top.
Removing never-active async load on $flatten\x1_mul.$verific$exp_ovf_r_reg$syn2.v:353$2131 ($aldff) from module top.
Removing never-active CLR on $flatten\add5_add.\u4.\u7.$verific$shift_out_reg$syn2.v:1598$3944 ($dlatchsr) from module top.
Removing never-active ARST on $flatten\add5_add.\u4.\u7.$verific$shift_out_reg$syn2.v:1598$3944 ($dlatchsr) from module top.
Removing never-active async load on $flatten\add2_add.$verific$opa_r_reg$syn2.v:1766$1064 ($aldff) from module top.
Removing never-active async load on $flatten\add5_add.\u4.\u6.$verific$fi_ldz_r0_reg$syn2.v:1456$4874 ($dlatchsr) from module top.
Removing never-active CLR on $flatten\add5_add.\u4.\u1.$verific$shift_out_reg$syn2.v:1526$4010 ($dlatchsr) from module top.
Removing never-active ARST on $flatten\add5_add.\u4.\u1.$verific$shift_out_reg$syn2.v:1526$4010 ($dlatchsr) from module top.
Removing never-active CLR on $flatten\add1_add.\u4.\u1.$verific$shift_out_reg$syn2.v:1526$4010 ($dlatchsr) from module top.
Removing never-active ARST on $flatten\add1_add.\u4.\u1.$verific$shift_out_reg$syn2.v:1526$4010 ($dlatchsr) from module top.
Removing never-active async load on $flatten\add2_add.$verific$fract_out_q_reg$syn2.v:1855$1378 ($aldff) from module top.
Removing never-active async load on $flatten\add2_add.$verific$fpu_op_reg$syn2.v:1759$1062 ($aldff) from module top.
Removing never-active async load on $flatten\add2_add.$verific$fpu_op_r3_reg$syn2.v:1787$1078 ($aldff) from module top.
Removing never-active async load on $flatten\add2_add.$verific$fpu_op_r2_reg$syn2.v:1784$1076 ($aldff) from module top.
Removing never-active async load on $flatten\add2_add.$verific$fpu_op_r1_reg$syn2.v:1781$1074 ($aldff) from module top.
Removing never-active async load on $flatten\add2_add.$verific$exp_r_reg$syn2.v:1874$1380 ($aldff) from module top.
Removing never-active CLR on $flatten\add1_add.\u4.\u7.$verific$shift_out_reg$syn2.v:1598$3944 ($dlatchsr) from module top.
Removing never-active ARST on $flatten\add1_add.\u4.\u7.$verific$shift_out_reg$syn2.v:1598$3944 ($dlatchsr) from module top.
Removing never-active CLR on $flatten\add5_add.\u1.\u7.$verific$shift_out_reg$syn2.v:1526$4010 ($dlatchsr) from module top.
Handling always-active async load on $flatten\add5_add.\u1.\u7.$verific$shift_out_reg$syn2.v:1526$4010 ($dlatchsr) from module top (changing to combinatorial circuit).
Removing never-active async load on $flatten\add1_add.$verific$out_o1_reg$syn2.v:1951$1522 ($aldff) from module top.
Removing never-active async load on $flatten\add1_add.$verific$out_reg$syn2.v:2005$1578 ($aldff) from module top.
Removing never-active async load on $flatten\add5_add.\u1.$verific$fractb_out_reg$syn2.v:2181$4350 ($aldff) from module top.
Removing never-active async load on $flatten\add5_add.\u1.$verific$fracta_out_reg$syn2.v:2178$4348 ($aldff) from module top.
Removing never-active async load on $flatten\add5_add.\u1.$verific$exp_dn_out_reg$syn2.v:2099$4185 ($aldff) from module top.
Removing never-active async load on $flatten\add5_add.$verific$out_reg$syn2.v:2005$1578 ($aldff) from module top.
Removing never-active async load on $flatten\add5_add.$verific$out_o1_reg$syn2.v:1951$1522 ($aldff) from module top.
Removing never-active async load on $flatten\add5_add.$verific$opb_r_reg$syn2.v:1769$1066 ($aldff) from module top.
Removing never-active async load on $flatten\add5_add.$verific$fract_out_q_reg$syn2.v:1855$1378 ($aldff) from module top.
Removing never-active async load on $flatten\add5_add.$verific$exp_r_reg$syn2.v:1874$1380 ($aldff) from module top.
Removing never-active CLR on $flatten\add4_add.\u4.\u7.$verific$shift_out_reg$syn2.v:1598$3944 ($dlatchsr) from module top.
Removing never-active ARST on $flatten\add4_add.\u4.\u7.$verific$shift_out_reg$syn2.v:1598$3944 ($dlatchsr) from module top.
Removing never-active async load on $flatten\add1_add.\u1.$verific$exp_dn_out_reg$syn2.v:2099$4185 ($aldff) from module top.
Removing never-active async load on $flatten\add4_add.\u4.\u6.$verific$fi_ldz_r0_reg$syn2.v:1456$4874 ($dlatchsr) from module top.
Removing never-active CLR on $flatten\add4_add.\u4.\u1.$verific$shift_out_reg$syn2.v:1526$4010 ($dlatchsr) from module top.
Removing never-active ARST on $flatten\add4_add.\u4.\u1.$verific$shift_out_reg$syn2.v:1526$4010 ($dlatchsr) from module top.
Removing never-active async load on $flatten\add1_add.\u1.$verific$fracta_out_reg$syn2.v:2178$4348 ($aldff) from module top.
Removing never-active async load on $flatten\add1_add.\u1.$verific$fractb_out_reg$syn2.v:2181$4350 ($aldff) from module top.
Removing never-active CLR on $flatten\add4_add.\u1.\u7.$verific$shift_out_reg$syn2.v:1526$4010 ($dlatchsr) from module top.
Handling always-active async load on $flatten\add4_add.\u1.\u7.$verific$shift_out_reg$syn2.v:1526$4010 ($dlatchsr) from module top (changing to combinatorial circuit).
Removing never-active async load on $flatten\add4_add.\u1.$verific$fractb_out_reg$syn2.v:2181$4350 ($aldff) from module top.
Removing never-active async load on $flatten\add4_add.\u1.$verific$fracta_out_reg$syn2.v:2178$4348 ($aldff) from module top.
Removing never-active async load on $flatten\add4_add.\u1.$verific$exp_dn_out_reg$syn2.v:2099$4185 ($aldff) from module top.
Removing never-active async load on $flatten\add4_add.$verific$out_reg$syn2.v:2005$1578 ($aldff) from module top.
Removing never-active async load on $flatten\add4_add.$verific$out_o1_reg$syn2.v:1951$1522 ($aldff) from module top.
Removing never-active async load on $flatten\add4_add.$verific$opb_r_reg$syn2.v:1769$1066 ($aldff) from module top.
Removing never-active async load on $flatten\add4_add.$verific$opa_r_reg$syn2.v:1766$1064 ($aldff) from module top.
Removing never-active async load on $flatten\add4_add.$verific$fract_out_q_reg$syn2.v:1855$1378 ($aldff) from module top.
Removing never-active async load on $flatten\add4_add.$verific$exp_r_reg$syn2.v:1874$1380 ($aldff) from module top.
Removing never-active CLR on $flatten\add3_add.\u4.\u7.$verific$shift_out_reg$syn2.v:1598$3944 ($dlatchsr) from module top.
Removing never-active ARST on $flatten\add3_add.\u4.\u7.$verific$shift_out_reg$syn2.v:1598$3944 ($dlatchsr) from module top.
Removing never-active CLR on $flatten\add1_add.\u1.\u7.$verific$shift_out_reg$syn2.v:1526$4010 ($dlatchsr) from module top.
Handling always-active async load on $flatten\add1_add.\u1.\u7.$verific$shift_out_reg$syn2.v:1526$4010 ($dlatchsr) from module top (changing to combinatorial circuit).
Removing never-active async load on $flatten\add3_add.\u4.\u6.$verific$fi_ldz_r0_reg$syn2.v:1456$4874 ($dlatchsr) from module top.
Removing never-active CLR on $flatten\add3_add.\u4.\u1.$verific$shift_out_reg$syn2.v:1526$4010 ($dlatchsr) from module top.
Removing never-active ARST on $flatten\add3_add.\u4.\u1.$verific$shift_out_reg$syn2.v:1526$4010 ($dlatchsr) from module top.
Removing never-active CLR on $flatten\add3_add.\u1.\u7.$verific$shift_out_reg$syn2.v:1526$4010 ($dlatchsr) from module top.
Handling always-active async load on $flatten\add3_add.\u1.\u7.$verific$shift_out_reg$syn2.v:1526$4010 ($dlatchsr) from module top (changing to combinatorial circuit).
Removing never-active async load on $flatten\add3_add.\u1.$verific$fractb_out_reg$syn2.v:2181$4350 ($aldff) from module top.
Removing never-active async load on $flatten\add3_add.\u1.$verific$fracta_out_reg$syn2.v:2178$4348 ($aldff) from module top.
Removing never-active async load on $flatten\add3_add.\u1.$verific$exp_dn_out_reg$syn2.v:2099$4185 ($aldff) from module top.
Removing never-active async load on $flatten\add3_add.$verific$out_reg$syn2.v:2005$1578 ($aldff) from module top.
Removing never-active async load on $flatten\add3_add.$verific$out_o1_reg$syn2.v:1951$1522 ($aldff) from module top.
Removing never-active async load on $flatten\add3_add.$verific$opb_r_reg$syn2.v:1769$1066 ($aldff) from module top.
Removing never-active async load on $flatten\add3_add.$verific$opa_r_reg$syn2.v:1766$1064 ($aldff) from module top.
Removing never-active async load on $flatten\add3_add.$verific$fract_out_q_reg$syn2.v:1855$1378 ($aldff) from module top.
Removing never-active async load on $flatten\add3_add.$verific$exp_r_reg$syn2.v:1874$1380 ($aldff) from module top.
Removing never-active CLR on $flatten\add2_add.\u4.\u7.$verific$shift_out_reg$syn2.v:1598$3944 ($dlatchsr) from module top.
Removing never-active ARST on $flatten\add2_add.\u4.\u7.$verific$shift_out_reg$syn2.v:1598$3944 ($dlatchsr) from module top.
Removing never-active async load on $flatten\add2_add.\u4.\u6.$verific$fi_ldz_r0_reg$syn2.v:1456$4874 ($dlatchsr) from module top.
Removing never-active CLR on $flatten\add2_add.\u4.\u1.$verific$shift_out_reg$syn2.v:1526$4010 ($dlatchsr) from module top.
Removing never-active ARST on $flatten\add2_add.\u4.\u1.$verific$shift_out_reg$syn2.v:1526$4010 ($dlatchsr) from module top.
Removing never-active CLR on $flatten\add2_add.\u1.\u7.$verific$shift_out_reg$syn2.v:1526$4010 ($dlatchsr) from module top.
Handling always-active async load on $flatten\add2_add.\u1.\u7.$verific$shift_out_reg$syn2.v:1526$4010 ($dlatchsr) from module top (changing to combinatorial circuit).
Setting constant 0-bit at position 0 on $flatten\add2_add.$verific$fpu_op_reg$syn2.v:1759$1062 ($dff) from module top.
Setting constant 0-bit at position 1 on $flatten\add2_add.$verific$fpu_op_reg$syn2.v:1759$1062 ($dff) from module top.
Setting constant 0-bit at position 2 on $flatten\add2_add.$verific$fpu_op_reg$syn2.v:1759$1062 ($dff) from module top.
Setting constant 0-bit at position 0 on $flatten\x1_mul.$verific$fpu_op_reg$syn2.v:262$1900 ($dff) from module top.
Setting constant 1-bit at position 1 on $flatten\x1_mul.$verific$fpu_op_reg$syn2.v:262$1900 ($dff) from module top.
Setting constant 0-bit at position 2 on $flatten\x1_mul.$verific$fpu_op_reg$syn2.v:262$1900 ($dff) from module top.
Setting constant 0-bit at position 0 on $flatten\add2_add.$verific$rmode_r1_reg$syn2.v:1772$1068 ($dff) from module top.
Setting constant 0-bit at position 1 on $flatten\add2_add.$verific$rmode_r1_reg$syn2.v:1772$1068 ($dff) from module top.

yosys> opt_clean

3.23. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \top..
Removed 0 unused cells and 649 unused wires.
<suppressed ~19 debug messages>

yosys> opt_expr

3.24. Executing OPT_EXPR pass (perform const folding).
Optimizing module top.
<suppressed ~30 debug messages>

yosys> opt_muxtree

3.25. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \top..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Removed 0 multiplexer ports.
<suppressed ~353 debug messages>

yosys> opt_reduce

3.26. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \top.
Performed a total of 0 changes.

yosys> opt_merge

3.27. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\top'.
<suppressed ~18 debug messages>
Removed a total of 6 cells.

yosys> opt_share

3.28. Executing OPT_SHARE pass.

yosys> opt_dff -nosdff -nodffe

3.29. Executing OPT_DFF pass (perform DFF optimizations).
Setting constant 0-bit at position 0 on $flatten\add2_add.$verific$fpu_op_r1_reg$syn2.v:1781$1074 ($dff) from module top.
Setting constant 0-bit at position 1 on $flatten\add2_add.$verific$fpu_op_r1_reg$syn2.v:1781$1074 ($dff) from module top.
Setting constant 0-bit at position 2 on $flatten\add2_add.$verific$fpu_op_r1_reg$syn2.v:1781$1074 ($dff) from module top.
Setting constant 0-bit at position 0 on $flatten\add2_add.$verific$rmode_r2_reg$syn2.v:1775$1070 ($dff) from module top.
Setting constant 0-bit at position 1 on $flatten\add2_add.$verific$rmode_r2_reg$syn2.v:1775$1070 ($dff) from module top.
Setting constant 0-bit at position 0 on $flatten\x1_mul.$verific$fpu_op_r1_reg$syn2.v:280$1912 ($dff) from module top.
Setting constant 1-bit at position 1 on $flatten\x1_mul.$verific$fpu_op_r1_reg$syn2.v:280$1912 ($dff) from module top.
Setting constant 0-bit at position 2 on $flatten\x1_mul.$verific$fpu_op_r1_reg$syn2.v:280$1912 ($dff) from module top.

yosys> opt_clean

3.30. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \top..
Removed 0 unused cells and 36 unused wires.
<suppressed ~1 debug messages>

yosys> opt_expr

3.31. Executing OPT_EXPR pass (perform const folding).
Optimizing module top.
<suppressed ~72 debug messages>

yosys> opt_muxtree

3.32. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \top..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
    dead port 1/2 on $mux $flatten\x1_mul.\u2.$verific$mux_135$syn2.v:784$4560.
    dead port 2/2 on $mux $flatten\x1_mul.\u2.$verific$mux_135$syn2.v:784$4560.
    dead port 1/2 on $mux $flatten\x1_mul.\u2.$verific$mux_56$syn2.v:784$4526.
    dead port 2/2 on $mux $flatten\x1_mul.\u2.$verific$mux_56$syn2.v:784$4526.
    dead port 1/2 on $mux $flatten\x2_mul.\u2.$verific$mux_135$syn2.v:784$4560.
    dead port 2/2 on $mux $flatten\x2_mul.\u2.$verific$mux_135$syn2.v:784$4560.
    dead port 1/2 on $mux $flatten\x2_mul.\u2.$verific$mux_56$syn2.v:784$4526.
    dead port 2/2 on $mux $flatten\x2_mul.\u2.$verific$mux_56$syn2.v:784$4526.
    dead port 1/2 on $mux $flatten\x3_mul.\u2.$verific$mux_135$syn2.v:784$4560.
    dead port 2/2 on $mux $flatten\x3_mul.\u2.$verific$mux_135$syn2.v:784$4560.
    dead port 1/2 on $mux $flatten\x3_mul.\u2.$verific$mux_56$syn2.v:784$4526.
    dead port 2/2 on $mux $flatten\x3_mul.\u2.$verific$mux_56$syn2.v:784$4526.
    dead port 1/2 on $mux $flatten\x4_mul.\u2.$verific$mux_135$syn2.v:784$4560.
    dead port 2/2 on $mux $flatten\x4_mul.\u2.$verific$mux_135$syn2.v:784$4560.
    dead port 1/2 on $mux $flatten\x4_mul.\u2.$verific$mux_56$syn2.v:784$4526.
    dead port 2/2 on $mux $flatten\x4_mul.\u2.$verific$mux_56$syn2.v:784$4526.
Removed 16 multiplexer ports.
<suppressed ~322 debug messages>

yosys> opt_reduce

3.33. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \top.
Performed a total of 0 changes.

yosys> opt_merge

3.34. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\top'.
<suppressed ~45 debug messages>
Removed a total of 15 cells.

yosys> opt_share

3.35. Executing OPT_SHARE pass.

yosys> opt_dff -nosdff -nodffe

3.36. Executing OPT_DFF pass (perform DFF optimizations).
Setting constant 0-bit at position 0 on $flatten\add2_add.$verific$fpu_op_r2_reg$syn2.v:1784$1076 ($dff) from module top.
Setting constant 0-bit at position 1 on $flatten\add2_add.$verific$fpu_op_r2_reg$syn2.v:1784$1076 ($dff) from module top.
Setting constant 0-bit at position 2 on $flatten\add2_add.$verific$fpu_op_r2_reg$syn2.v:1784$1076 ($dff) from module top.
Setting constant 0-bit at position 0 on $flatten\add2_add.$verific$rmode_r3_reg$syn2.v:1778$1072 ($dff) from module top.
Setting constant 0-bit at position 1 on $flatten\add2_add.$verific$rmode_r3_reg$syn2.v:1778$1072 ($dff) from module top.
Setting constant 1-bit at position 0 on $flatten\add2_add.\u1.$verific$add_r_reg$syn2.v:2214$4362 ($dff) from module top.
Setting constant 0-bit at position 0 on $flatten\x1_mul.$verific$fpu_op_r2_reg$syn2.v:283$1914 ($dff) from module top.
Setting constant 1-bit at position 1 on $flatten\x1_mul.$verific$fpu_op_r2_reg$syn2.v:283$1914 ($dff) from module top.
Setting constant 0-bit at position 2 on $flatten\x1_mul.$verific$fpu_op_r2_reg$syn2.v:283$1914 ($dff) from module top.

yosys> opt_clean

3.37. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \top..
Removed 42 unused cells and 117 unused wires.
<suppressed ~47 debug messages>

yosys> opt_expr

3.38. Executing OPT_EXPR pass (perform const folding).
Optimizing module top.
<suppressed ~347 debug messages>

yosys> opt_muxtree

3.39. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \top..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
    dead port 1/2 on $mux $flatten\add1_add.\u4.$verific$mux_323$syn2.v:1156$3614.
    dead port 2/2 on $mux $flatten\add1_add.\u4.$verific$mux_323$syn2.v:1156$3614.
    dead port 1/2 on $mux $flatten\add1_add.\u4.$verific$mux_331$syn2.v:1158$3621.
    dead port 2/2 on $mux $flatten\add1_add.\u4.$verific$mux_331$syn2.v:1158$3621.
    dead port 1/2 on $mux $flatten\add1_add.\u4.$verific$mux_334$syn2.v:1158$3623.
    dead port 2/2 on $mux $flatten\add1_add.\u4.$verific$mux_334$syn2.v:1158$3623.
    dead port 1/2 on $mux $flatten\add1_add.\u4.$verific$mux_335$syn2.v:1158$3624.
    dead port 2/2 on $mux $flatten\add1_add.\u4.$verific$mux_335$syn2.v:1158$3624.
    dead port 1/2 on $mux $flatten\add1_add.\u4.$verific$mux_406$syn2.v:1188$3679.
    dead port 2/2 on $mux $flatten\add1_add.\u4.$verific$mux_406$syn2.v:1188$3679.
    dead port 1/2 on $mux $flatten\add1_add.\u4.$verific$mux_415$syn2.v:1190$3685.
    dead port 2/2 on $mux $flatten\add1_add.\u4.$verific$mux_415$syn2.v:1190$3685.
    dead port 1/2 on $mux $flatten\add1_add.\u4.$verific$mux_420$syn2.v:1191$3688.
    dead port 2/2 on $mux $flatten\add1_add.\u4.$verific$mux_420$syn2.v:1191$3688.
    dead port 1/2 on $mux $flatten\add2_add.\u4.$verific$mux_323$syn2.v:1156$3614.
    dead port 2/2 on $mux $flatten\add2_add.\u4.$verific$mux_323$syn2.v:1156$3614.
    dead port 1/2 on $mux $flatten\add2_add.\u4.$verific$mux_331$syn2.v:1158$3621.
    dead port 2/2 on $mux $flatten\add2_add.\u4.$verific$mux_331$syn2.v:1158$3621.
    dead port 1/2 on $mux $flatten\add2_add.\u4.$verific$mux_334$syn2.v:1158$3623.
    dead port 2/2 on $mux $flatten\add2_add.\u4.$verific$mux_334$syn2.v:1158$3623.
    dead port 1/2 on $mux $flatten\add2_add.\u4.$verific$mux_335$syn2.v:1158$3624.
    dead port 2/2 on $mux $flatten\add2_add.\u4.$verific$mux_335$syn2.v:1158$3624.
    dead port 1/2 on $mux $flatten\add2_add.\u4.$verific$mux_406$syn2.v:1188$3679.
    dead port 2/2 on $mux $flatten\add2_add.\u4.$verific$mux_406$syn2.v:1188$3679.
    dead port 1/2 on $mux $flatten\add2_add.\u4.$verific$mux_415$syn2.v:1190$3685.
    dead port 2/2 on $mux $flatten\add2_add.\u4.$verific$mux_415$syn2.v:1190$3685.
    dead port 1/2 on $mux $flatten\add2_add.\u4.$verific$mux_420$syn2.v:1191$3688.
    dead port 2/2 on $mux $flatten\add2_add.\u4.$verific$mux_420$syn2.v:1191$3688.
    dead port 1/2 on $mux $flatten\add3_add.\u4.$verific$mux_323$syn2.v:1156$3614.
    dead port 2/2 on $mux $flatten\add3_add.\u4.$verific$mux_323$syn2.v:1156$3614.
    dead port 1/2 on $mux $flatten\add3_add.\u4.$verific$mux_331$syn2.v:1158$3621.
    dead port 2/2 on $mux $flatten\add3_add.\u4.$verific$mux_331$syn2.v:1158$3621.
    dead port 1/2 on $mux $flatten\add3_add.\u4.$verific$mux_334$syn2.v:1158$3623.
    dead port 2/2 on $mux $flatten\add3_add.\u4.$verific$mux_334$syn2.v:1158$3623.
    dead port 1/2 on $mux $flatten\add3_add.\u4.$verific$mux_335$syn2.v:1158$3624.
    dead port 2/2 on $mux $flatten\add3_add.\u4.$verific$mux_335$syn2.v:1158$3624.
    dead port 1/2 on $mux $flatten\add3_add.\u4.$verific$mux_406$syn2.v:1188$3679.
    dead port 2/2 on $mux $flatten\add3_add.\u4.$verific$mux_406$syn2.v:1188$3679.
    dead port 1/2 on $mux $flatten\add3_add.\u4.$verific$mux_415$syn2.v:1190$3685.
    dead port 2/2 on $mux $flatten\add3_add.\u4.$verific$mux_415$syn2.v:1190$3685.
    dead port 1/2 on $mux $flatten\add3_add.\u4.$verific$mux_420$syn2.v:1191$3688.
    dead port 2/2 on $mux $flatten\add3_add.\u4.$verific$mux_420$syn2.v:1191$3688.
    dead port 1/2 on $mux $flatten\add4_add.\u4.$verific$mux_323$syn2.v:1156$3614.
    dead port 2/2 on $mux $flatten\add4_add.\u4.$verific$mux_323$syn2.v:1156$3614.
    dead port 1/2 on $mux $flatten\add4_add.\u4.$verific$mux_331$syn2.v:1158$3621.
    dead port 2/2 on $mux $flatten\add4_add.\u4.$verific$mux_331$syn2.v:1158$3621.
    dead port 1/2 on $mux $flatten\add4_add.\u4.$verific$mux_334$syn2.v:1158$3623.
    dead port 2/2 on $mux $flatten\add4_add.\u4.$verific$mux_334$syn2.v:1158$3623.
    dead port 1/2 on $mux $flatten\add4_add.\u4.$verific$mux_335$syn2.v:1158$3624.
    dead port 2/2 on $mux $flatten\add4_add.\u4.$verific$mux_335$syn2.v:1158$3624.
    dead port 1/2 on $mux $flatten\add4_add.\u4.$verific$mux_406$syn2.v:1188$3679.
    dead port 2/2 on $mux $flatten\add4_add.\u4.$verific$mux_406$syn2.v:1188$3679.
    dead port 1/2 on $mux $flatten\add4_add.\u4.$verific$mux_415$syn2.v:1190$3685.
    dead port 2/2 on $mux $flatten\add4_add.\u4.$verific$mux_415$syn2.v:1190$3685.
    dead port 1/2 on $mux $flatten\add4_add.\u4.$verific$mux_420$syn2.v:1191$3688.
    dead port 2/2 on $mux $flatten\add4_add.\u4.$verific$mux_420$syn2.v:1191$3688.
    dead port 1/2 on $mux $flatten\add5_add.\u4.$verific$mux_323$syn2.v:1156$3614.
    dead port 2/2 on $mux $flatten\add5_add.\u4.$verific$mux_323$syn2.v:1156$3614.
    dead port 1/2 on $mux $flatten\add5_add.\u4.$verific$mux_331$syn2.v:1158$3621.
    dead port 2/2 on $mux $flatten\add5_add.\u4.$verific$mux_331$syn2.v:1158$3621.
    dead port 1/2 on $mux $flatten\add5_add.\u4.$verific$mux_334$syn2.v:1158$3623.
    dead port 2/2 on $mux $flatten\add5_add.\u4.$verific$mux_334$syn2.v:1158$3623.
    dead port 1/2 on $mux $flatten\add5_add.\u4.$verific$mux_335$syn2.v:1158$3624.
    dead port 2/2 on $mux $flatten\add5_add.\u4.$verific$mux_335$syn2.v:1158$3624.
    dead port 1/2 on $mux $flatten\add5_add.\u4.$verific$mux_406$syn2.v:1188$3679.
    dead port 2/2 on $mux $flatten\add5_add.\u4.$verific$mux_406$syn2.v:1188$3679.
    dead port 1/2 on $mux $flatten\add5_add.\u4.$verific$mux_415$syn2.v:1190$3685.
    dead port 2/2 on $mux $flatten\add5_add.\u4.$verific$mux_415$syn2.v:1190$3685.
    dead port 1/2 on $mux $flatten\add5_add.\u4.$verific$mux_420$syn2.v:1191$3688.
    dead port 2/2 on $mux $flatten\add5_add.\u4.$verific$mux_420$syn2.v:1191$3688.
    dead port 1/2 on $mux $flatten\x1_mul.\u4.$verific$mux_323$syn2.v:1156$3614.
    dead port 2/2 on $mux $flatten\x1_mul.\u4.$verific$mux_323$syn2.v:1156$3614.
    dead port 1/2 on $mux $flatten\x1_mul.\u4.$verific$mux_331$syn2.v:1158$3621.
    dead port 2/2 on $mux $flatten\x1_mul.\u4.$verific$mux_331$syn2.v:1158$3621.
    dead port 1/2 on $mux $flatten\x1_mul.\u4.$verific$mux_334$syn2.v:1158$3623.
    dead port 2/2 on $mux $flatten\x1_mul.\u4.$verific$mux_334$syn2.v:1158$3623.
    dead port 1/2 on $mux $flatten\x1_mul.\u4.$verific$mux_335$syn2.v:1158$3624.
    dead port 2/2 on $mux $flatten\x1_mul.\u4.$verific$mux_335$syn2.v:1158$3624.
    dead port 1/2 on $mux $flatten\x1_mul.\u4.$verific$mux_405$syn2.v:1188$3678.
    dead port 2/2 on $mux $flatten\x1_mul.\u4.$verific$mux_405$syn2.v:1188$3678.
    dead port 1/2 on $mux $flatten\x1_mul.\u4.$verific$mux_406$syn2.v:1188$3679.
    dead port 2/2 on $mux $flatten\x1_mul.\u4.$verific$mux_406$syn2.v:1188$3679.
    dead port 1/2 on $mux $flatten\x1_mul.\u4.$verific$mux_415$syn2.v:1190$3685.
    dead port 2/2 on $mux $flatten\x1_mul.\u4.$verific$mux_415$syn2.v:1190$3685.
    dead port 1/2 on $mux $flatten\x1_mul.\u4.$verific$mux_420$syn2.v:1191$3688.
    dead port 2/2 on $mux $flatten\x1_mul.\u4.$verific$mux_420$syn2.v:1191$3688.
    dead port 1/2 on $mux $flatten\x2_mul.\u4.$verific$mux_323$syn2.v:1156$3614.
    dead port 2/2 on $mux $flatten\x2_mul.\u4.$verific$mux_323$syn2.v:1156$3614.
    dead port 1/2 on $mux $flatten\x2_mul.\u4.$verific$mux_331$syn2.v:1158$3621.
    dead port 2/2 on $mux $flatten\x2_mul.\u4.$verific$mux_331$syn2.v:1158$3621.
    dead port 1/2 on $mux $flatten\x2_mul.\u4.$verific$mux_334$syn2.v:1158$3623.
    dead port 2/2 on $mux $flatten\x2_mul.\u4.$verific$mux_334$syn2.v:1158$3623.
    dead port 1/2 on $mux $flatten\x2_mul.\u4.$verific$mux_335$syn2.v:1158$3624.
    dead port 2/2 on $mux $flatten\x2_mul.\u4.$verific$mux_335$syn2.v:1158$3624.
    dead port 1/2 on $mux $flatten\x2_mul.\u4.$verific$mux_405$syn2.v:1188$3678.
    dead port 2/2 on $mux $flatten\x2_mul.\u4.$verific$mux_405$syn2.v:1188$3678.
    dead port 1/2 on $mux $flatten\x2_mul.\u4.$verific$mux_406$syn2.v:1188$3679.
    dead port 2/2 on $mux $flatten\x2_mul.\u4.$verific$mux_406$syn2.v:1188$3679.
    dead port 1/2 on $mux $flatten\x2_mul.\u4.$verific$mux_415$syn2.v:1190$3685.
    dead port 2/2 on $mux $flatten\x2_mul.\u4.$verific$mux_415$syn2.v:1190$3685.
    dead port 1/2 on $mux $flatten\x2_mul.\u4.$verific$mux_420$syn2.v:1191$3688.
    dead port 2/2 on $mux $flatten\x2_mul.\u4.$verific$mux_420$syn2.v:1191$3688.
    dead port 1/2 on $mux $flatten\x3_mul.\u4.$verific$mux_323$syn2.v:1156$3614.
    dead port 2/2 on $mux $flatten\x3_mul.\u4.$verific$mux_323$syn2.v:1156$3614.
    dead port 1/2 on $mux $flatten\x3_mul.\u4.$verific$mux_331$syn2.v:1158$3621.
    dead port 2/2 on $mux $flatten\x3_mul.\u4.$verific$mux_331$syn2.v:1158$3621.
    dead port 1/2 on $mux $flatten\x3_mul.\u4.$verific$mux_334$syn2.v:1158$3623.
    dead port 2/2 on $mux $flatten\x3_mul.\u4.$verific$mux_334$syn2.v:1158$3623.
    dead port 1/2 on $mux $flatten\x3_mul.\u4.$verific$mux_335$syn2.v:1158$3624.
    dead port 2/2 on $mux $flatten\x3_mul.\u4.$verific$mux_335$syn2.v:1158$3624.
    dead port 1/2 on $mux $flatten\x3_mul.\u4.$verific$mux_405$syn2.v:1188$3678.
    dead port 2/2 on $mux $flatten\x3_mul.\u4.$verific$mux_405$syn2.v:1188$3678.
    dead port 1/2 on $mux $flatten\x3_mul.\u4.$verific$mux_406$syn2.v:1188$3679.
    dead port 2/2 on $mux $flatten\x3_mul.\u4.$verific$mux_406$syn2.v:1188$3679.
    dead port 1/2 on $mux $flatten\x3_mul.\u4.$verific$mux_415$syn2.v:1190$3685.
    dead port 2/2 on $mux $flatten\x3_mul.\u4.$verific$mux_415$syn2.v:1190$3685.
    dead port 1/2 on $mux $flatten\x3_mul.\u4.$verific$mux_420$syn2.v:1191$3688.
    dead port 2/2 on $mux $flatten\x3_mul.\u4.$verific$mux_420$syn2.v:1191$3688.
    dead port 1/2 on $mux $flatten\x4_mul.\u4.$verific$mux_323$syn2.v:1156$3614.
    dead port 2/2 on $mux $flatten\x4_mul.\u4.$verific$mux_323$syn2.v:1156$3614.
    dead port 1/2 on $mux $flatten\x4_mul.\u4.$verific$mux_331$syn2.v:1158$3621.
    dead port 2/2 on $mux $flatten\x4_mul.\u4.$verific$mux_331$syn2.v:1158$3621.
    dead port 1/2 on $mux $flatten\x4_mul.\u4.$verific$mux_334$syn2.v:1158$3623.
    dead port 2/2 on $mux $flatten\x4_mul.\u4.$verific$mux_334$syn2.v:1158$3623.
    dead port 1/2 on $mux $flatten\x4_mul.\u4.$verific$mux_335$syn2.v:1158$3624.
    dead port 2/2 on $mux $flatten\x4_mul.\u4.$verific$mux_335$syn2.v:1158$3624.
    dead port 1/2 on $mux $flatten\x4_mul.\u4.$verific$mux_405$syn2.v:1188$3678.
    dead port 2/2 on $mux $flatten\x4_mul.\u4.$verific$mux_405$syn2.v:1188$3678.
    dead port 1/2 on $mux $flatten\x4_mul.\u4.$verific$mux_406$syn2.v:1188$3679.
    dead port 2/2 on $mux $flatten\x4_mul.\u4.$verific$mux_406$syn2.v:1188$3679.
    dead port 1/2 on $mux $flatten\x4_mul.\u4.$verific$mux_415$syn2.v:1190$3685.
    dead port 2/2 on $mux $flatten\x4_mul.\u4.$verific$mux_415$syn2.v:1190$3685.
    dead port 1/2 on $mux $flatten\x4_mul.\u4.$verific$mux_420$syn2.v:1191$3688.
    dead port 2/2 on $mux $flatten\x4_mul.\u4.$verific$mux_420$syn2.v:1191$3688.
Removed 134 multiplexer ports.
<suppressed ~322 debug messages>

yosys> opt_reduce

3.40. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \top.
Performed a total of 0 changes.

yosys> opt_merge

3.41. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\top'.
<suppressed ~15 debug messages>
Removed a total of 5 cells.

yosys> opt_share

3.42. Executing OPT_SHARE pass.

yosys> opt_dff -nosdff -nodffe

3.43. Executing OPT_DFF pass (perform DFF optimizations).
Setting constant 0-bit at position 0 on $flatten\add2_add.$verific$fpu_op_r3_reg$syn2.v:1787$1078 ($dff) from module top.
Setting constant 0-bit at position 1 on $flatten\add2_add.$verific$fpu_op_r3_reg$syn2.v:1787$1078 ($dff) from module top.
Setting constant 0-bit at position 2 on $flatten\add2_add.$verific$fpu_op_r3_reg$syn2.v:1787$1078 ($dff) from module top.
Setting constant 0-bit at position 0 on $flatten\x1_mul.$verific$fpu_op_r3_reg$syn2.v:286$1916 ($dff) from module top.
Setting constant 1-bit at position 1 on $flatten\x1_mul.$verific$fpu_op_r3_reg$syn2.v:286$1916 ($dff) from module top.
Setting constant 0-bit at position 2 on $flatten\x1_mul.$verific$fpu_op_r3_reg$syn2.v:286$1916 ($dff) from module top.

yosys> opt_clean

3.44. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \top..
Removed 832 unused cells and 1219 unused wires.
<suppressed ~1021 debug messages>

yosys> opt_expr

3.45. Executing OPT_EXPR pass (perform const folding).
Optimizing module top.
<suppressed ~317 debug messages>
MAX OPT ITERATION = 4

yosys> fsm -encoding binary

3.46. Executing FSM pass (extract and optimize FSM).

yosys> fsm_detect

3.46.1. Executing FSM_DETECT pass (finding FSMs in design).

yosys> fsm_extract

3.46.2. Executing FSM_EXTRACT pass (extracting FSM from design).

yosys> fsm_opt

3.46.3. Executing FSM_OPT pass (simple optimizations of FSMs).

yosys> opt_clean

3.46.4. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \top..
Removed 917 unused cells and 971 unused wires.
<suppressed ~1243 debug messages>

yosys> fsm_opt

3.46.5. Executing FSM_OPT pass (simple optimizations of FSMs).

yosys> fsm_recode -encoding binary

3.46.6. Executing FSM_RECODE pass (re-assigning FSM state encoding).

yosys> fsm_info

3.46.7. Executing FSM_INFO pass (dumping all available information on FSM cells).

yosys> fsm_map

3.46.8. Executing FSM_MAP pass (mapping FSMs to basic logic).

yosys> opt_expr

3.47. Executing OPT_EXPR pass (perform const folding).
Optimizing module top.

yosys> opt_merge -nomux

3.48. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\top'.
Removed a total of 0 cells.

yosys> opt_muxtree

3.49. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \top..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Removed 0 multiplexer ports.
<suppressed ~230 debug messages>

yosys> opt_reduce

3.50. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \top.
Performed a total of 0 changes.

yosys> opt_merge

3.51. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\top'.
Removed a total of 0 cells.

yosys> opt_share

3.52. Executing OPT_SHARE pass.

yosys> opt_dff -nosdff -sat

3.53. Executing OPT_DFF pass (perform DFF optimizations).

yosys> opt_clean

3.54. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \top..

yosys> opt_expr

3.55. Executing OPT_EXPR pass (perform const folding).
Optimizing module top.
MAX OPT ITERATION = 1

yosys> wreduce -keepdc

3.56. Executing WREDUCE pass (reducing word size of cells).
Removed top 1 bits (of 8) from port A of cell top.$flatten\x4_mul.\u2.$verific$sub_43$syn2.v:777$4516 ($sub).
Removed top 7 bits (of 8) from port B of cell top.$flatten\x4_mul.\u2.$verific$add_41$syn2.v:776$4514 ($add).
Removed top 3 bits (of 9) from port B of cell top.$flatten\x4_mul.\u4.$verific$sub_208$syn2.v:1095$3416 ($sub).
Removed top 1 bits (of 9) from port A of cell top.$flatten\x4_mul.\u4.$verific$sub_204$syn2.v:1092$3412 ($sub).
Removed top 8 bits (of 9) from port B of cell top.$flatten\x4_mul.\u4.$verific$sub_204$syn2.v:1092$3412 ($sub).
Removed top 5 bits (of 6) from port B of cell top.$flatten\x4_mul.\u4.$verific$sub_194$syn2.v:1087$3402 ($sub).
Removed top 22 bits (of 23) from port B of cell top.$flatten\x4_mul.\u4.$verific$add_58$syn2.v:1006$3093 ($add).
Removed top 7 bits (of 8) from port B of cell top.$flatten\x4_mul.\u4.$verific$add_202$syn2.v:1091$3410 ($add).
Removed top 7 bits (of 8) from port B of cell top.$flatten\x4_mul.\u4.$verific$add_198$syn2.v:1089$3406 ($add).
Removed top 6 bits (of 7) from port B of cell top.$flatten\x4_mul.\u4.\u6.$verific$equal_10$syn2.v:1370$4735 ($eq).
Removed top 7 bits (of 8) from port B of cell top.$flatten\x4_mul.\u4.\u6.$verific$equal_11$syn2.v:1372$4736 ($eq).
Removed top 8 bits (of 9) from port B of cell top.$flatten\x4_mul.\u4.\u6.$verific$equal_12$syn2.v:1374$4737 ($eq).
Removed top 9 bits (of 10) from port B of cell top.$flatten\x4_mul.\u4.\u6.$verific$equal_13$syn2.v:1376$4738 ($eq).
Removed top 10 bits (of 11) from port B of cell top.$flatten\x4_mul.\u4.\u6.$verific$equal_14$syn2.v:1378$4739 ($eq).
Removed top 11 bits (of 12) from port B of cell top.$flatten\x4_mul.\u4.\u6.$verific$equal_15$syn2.v:1380$4740 ($eq).
Removed top 12 bits (of 13) from port B of cell top.$flatten\x4_mul.\u4.\u6.$verific$equal_16$syn2.v:1382$4741 ($eq).
Removed top 13 bits (of 14) from port B of cell top.$flatten\x4_mul.\u4.\u6.$verific$equal_17$syn2.v:1384$4742 ($eq).
Removed top 14 bits (of 15) from port B of cell top.$flatten\x4_mul.\u4.\u6.$verific$equal_18$syn2.v:1386$4743 ($eq).
Removed top 15 bits (of 16) from port B of cell top.$flatten\x4_mul.\u4.\u6.$verific$equal_19$syn2.v:1388$4744 ($eq).
Removed top 16 bits (of 17) from port B of cell top.$flatten\x4_mul.\u4.\u6.$verific$equal_20$syn2.v:1390$4745 ($eq).
Removed top 17 bits (of 18) from port B of cell top.$flatten\x4_mul.\u4.\u6.$verific$equal_21$syn2.v:1392$4746 ($eq).
Removed top 18 bits (of 19) from port B of cell top.$flatten\x4_mul.\u4.\u6.$verific$equal_22$syn2.v:1394$4747 ($eq).
Removed top 19 bits (of 20) from port B of cell top.$flatten\x4_mul.\u4.\u6.$verific$equal_23$syn2.v:1396$4748 ($eq).
Removed top 20 bits (of 21) from port B of cell top.$flatten\x4_mul.\u4.\u6.$verific$equal_24$syn2.v:1398$4749 ($eq).
Removed top 21 bits (of 22) from port B of cell top.$flatten\x4_mul.\u4.\u6.$verific$equal_25$syn2.v:1400$4750 ($eq).
Removed top 22 bits (of 23) from port B of cell top.$flatten\x4_mul.\u4.\u6.$verific$equal_26$syn2.v:1402$4751 ($eq).
Removed top 23 bits (of 24) from port B of cell top.$flatten\x4_mul.\u4.\u6.$verific$equal_27$syn2.v:1404$4752 ($eq).
Removed top 24 bits (of 25) from port B of cell top.$flatten\x4_mul.\u4.\u6.$verific$equal_28$syn2.v:1406$4753 ($eq).
Removed top 25 bits (of 26) from port B of cell top.$flatten\x4_mul.\u4.\u6.$verific$equal_29$syn2.v:1408$4754 ($eq).
Removed top 26 bits (of 27) from port B of cell top.$flatten\x4_mul.\u4.\u6.$verific$equal_30$syn2.v:1410$4755 ($eq).
Removed top 27 bits (of 28) from port B of cell top.$flatten\x4_mul.\u4.\u6.$verific$equal_31$syn2.v:1412$4756 ($eq).
Removed top 28 bits (of 29) from port B of cell top.$flatten\x4_mul.\u4.\u6.$verific$equal_32$syn2.v:1414$4757 ($eq).
Removed top 29 bits (of 30) from port B of cell top.$flatten\x4_mul.\u4.\u6.$verific$equal_33$syn2.v:1416$4758 ($eq).
Removed top 30 bits (of 31) from port B of cell top.$flatten\x4_mul.\u4.\u6.$verific$equal_34$syn2.v:1418$4759 ($eq).
Removed top 31 bits (of 32) from port B of cell top.$flatten\x4_mul.\u4.\u6.$verific$equal_35$syn2.v:1420$4760 ($eq).
Removed top 32 bits (of 33) from port B of cell top.$flatten\x4_mul.\u4.\u6.$verific$equal_36$syn2.v:1422$4761 ($eq).
Removed top 33 bits (of 34) from port B of cell top.$flatten\x4_mul.\u4.\u6.$verific$equal_37$syn2.v:1424$4762 ($eq).
Removed top 34 bits (of 35) from port B of cell top.$flatten\x4_mul.\u4.\u6.$verific$equal_38$syn2.v:1426$4763 ($eq).
Removed top 35 bits (of 36) from port B of cell top.$flatten\x4_mul.\u4.\u6.$verific$equal_39$syn2.v:1428$4764 ($eq).
Removed top 36 bits (of 37) from port B of cell top.$flatten\x4_mul.\u4.\u6.$verific$equal_40$syn2.v:1430$4765 ($eq).
Removed top 37 bits (of 38) from port B of cell top.$flatten\x4_mul.\u4.\u6.$verific$equal_41$syn2.v:1432$4766 ($eq).
Removed top 38 bits (of 39) from port B of cell top.$flatten\x4_mul.\u4.\u6.$verific$equal_42$syn2.v:1434$4767 ($eq).
Removed top 39 bits (of 40) from port B of cell top.$flatten\x4_mul.\u4.\u6.$verific$equal_43$syn2.v:1436$4768 ($eq).
Removed top 40 bits (of 41) from port B of cell top.$flatten\x4_mul.\u4.\u6.$verific$equal_44$syn2.v:1438$4769 ($eq).
Removed top 41 bits (of 42) from port B of cell top.$flatten\x4_mul.\u4.\u6.$verific$equal_45$syn2.v:1440$4770 ($eq).
Removed top 42 bits (of 43) from port B of cell top.$flatten\x4_mul.\u4.\u6.$verific$equal_46$syn2.v:1442$4771 ($eq).
Removed top 43 bits (of 44) from port B of cell top.$flatten\x4_mul.\u4.\u6.$verific$equal_47$syn2.v:1444$4772 ($eq).
Removed top 44 bits (of 45) from port B of cell top.$flatten\x4_mul.\u4.\u6.$verific$equal_48$syn2.v:1446$4773 ($eq).
Removed top 45 bits (of 46) from port B of cell top.$flatten\x4_mul.\u4.\u6.$verific$equal_49$syn2.v:1448$4774 ($eq).
Removed top 1 bits (of 2) from port B of cell top.$flatten\x4_mul.\u4.\u6.$verific$equal_5$syn2.v:1360$4730 ($eq).
Removed top 46 bits (of 47) from port B of cell top.$flatten\x4_mul.\u4.\u6.$verific$equal_50$syn2.v:1450$4775 ($eq).
Removed top 47 bits (of 48) from port B of cell top.$flatten\x4_mul.\u4.\u6.$verific$equal_51$syn2.v:1452$4776 ($eq).
Removed top 2 bits (of 3) from port B of cell top.$flatten\x4_mul.\u4.\u6.$verific$equal_6$syn2.v:1362$4731 ($eq).
Removed top 3 bits (of 4) from port B of cell top.$flatten\x4_mul.\u4.\u6.$verific$equal_7$syn2.v:1364$4732 ($eq).
Removed top 4 bits (of 5) from port B of cell top.$flatten\x4_mul.\u4.\u6.$verific$equal_8$syn2.v:1366$4733 ($eq).
Removed top 5 bits (of 6) from port B of cell top.$flatten\x4_mul.\u4.\u6.$verific$equal_9$syn2.v:1368$4734 ($eq).
Removed top 2 bits (of 48) from mux cell top.$flatten\x4_mul.\u4.\u1.$auto$bmuxmap.cc:60:execute$5014 ($mux).
Removed top 4 bits (of 48) from mux cell top.$flatten\x4_mul.\u4.\u1.$auto$bmuxmap.cc:60:execute$5015 ($mux).
Removed top 6 bits (of 48) from mux cell top.$flatten\x4_mul.\u4.\u1.$auto$bmuxmap.cc:60:execute$5016 ($mux).
Removed top 8 bits (of 48) from mux cell top.$flatten\x4_mul.\u4.\u1.$auto$bmuxmap.cc:60:execute$5017 ($mux).
Removed top 10 bits (of 48) from mux cell top.$flatten\x4_mul.\u4.\u1.$auto$bmuxmap.cc:60:execute$5018 ($mux).
Removed top 12 bits (of 48) from mux cell top.$flatten\x4_mul.\u4.\u1.$auto$bmuxmap.cc:60:execute$5019 ($mux).
Removed top 14 bits (of 48) from mux cell top.$flatten\x4_mul.\u4.\u1.$auto$bmuxmap.cc:60:execute$5020 ($mux).
Removed top 16 bits (of 48) from mux cell top.$flatten\x4_mul.\u4.\u1.$auto$bmuxmap.cc:60:execute$5021 ($mux).
Removed top 18 bits (of 48) from mux cell top.$flatten\x4_mul.\u4.\u1.$auto$bmuxmap.cc:60:execute$5022 ($mux).
Removed top 20 bits (of 48) from mux cell top.$flatten\x4_mul.\u4.\u1.$auto$bmuxmap.cc:60:execute$5023 ($mux).
Removed top 22 bits (of 48) from mux cell top.$flatten\x4_mul.\u4.\u1.$auto$bmuxmap.cc:60:execute$5024 ($mux).
Removed top 24 bits (of 48) from mux cell top.$flatten\x4_mul.\u4.\u1.$auto$bmuxmap.cc:60:execute$5025 ($mux).
Removed top 26 bits (of 48) from mux cell top.$flatten\x4_mul.\u4.\u1.$auto$bmuxmap.cc:60:execute$5026 ($mux).
Removed top 28 bits (of 48) from mux cell top.$flatten\x4_mul.\u4.\u1.$auto$bmuxmap.cc:60:execute$5027 ($mux).
Removed top 30 bits (of 48) from mux cell top.$flatten\x4_mul.\u4.\u1.$auto$bmuxmap.cc:60:execute$5028 ($mux).
Removed top 32 bits (of 48) from mux cell top.$flatten\x4_mul.\u4.\u1.$auto$bmuxmap.cc:60:execute$5029 ($mux).
Removed top 34 bits (of 48) from mux cell top.$flatten\x4_mul.\u4.\u1.$auto$bmuxmap.cc:60:execute$5030 ($mux).
Removed top 36 bits (of 48) from mux cell top.$flatten\x4_mul.\u4.\u1.$auto$bmuxmap.cc:60:execute$5031 ($mux).
Removed top 38 bits (of 48) from mux cell top.$flatten\x4_mul.\u4.\u1.$auto$bmuxmap.cc:60:execute$5032 ($mux).
Removed top 40 bits (of 48) from mux cell top.$flatten\x4_mul.\u4.\u1.$auto$bmuxmap.cc:60:execute$5033 ($mux).
Removed top 42 bits (of 48) from mux cell top.$flatten\x4_mul.\u4.\u1.$auto$bmuxmap.cc:60:execute$5034 ($mux).
Removed top 44 bits (of 48) from mux cell top.$flatten\x4_mul.\u4.\u1.$auto$bmuxmap.cc:60:execute$5035 ($mux).
Removed top 46 bits (of 48) from mux cell top.$flatten\x4_mul.\u4.\u1.$auto$bmuxmap.cc:60:execute$5036 ($mux).
Removed top 4 bits (of 48) from mux cell top.$flatten\x4_mul.\u4.\u1.$auto$bmuxmap.cc:60:execute$5047 ($mux).
Removed top 8 bits (of 48) from mux cell top.$flatten\x4_mul.\u4.\u1.$auto$bmuxmap.cc:60:execute$5048 ($mux).
Removed top 12 bits (of 48) from mux cell top.$flatten\x4_mul.\u4.\u1.$auto$bmuxmap.cc:60:execute$5049 ($mux).
Removed top 16 bits (of 48) from mux cell top.$flatten\x4_mul.\u4.\u1.$auto$bmuxmap.cc:60:execute$5050 ($mux).
Removed top 20 bits (of 48) from mux cell top.$flatten\x4_mul.\u4.\u1.$auto$bmuxmap.cc:60:execute$5051 ($mux).
Removed top 24 bits (of 48) from mux cell top.$flatten\x4_mul.\u4.\u1.$auto$bmuxmap.cc:60:execute$5052 ($mux).
Removed top 28 bits (of 48) from mux cell top.$flatten\x4_mul.\u4.\u1.$auto$bmuxmap.cc:60:execute$5053 ($mux).
Removed top 32 bits (of 48) from mux cell top.$flatten\x4_mul.\u4.\u1.$auto$bmuxmap.cc:60:execute$5054 ($mux).
Removed top 36 bits (of 48) from mux cell top.$flatten\x4_mul.\u4.\u1.$auto$bmuxmap.cc:60:execute$5055 ($mux).
Removed top 40 bits (of 48) from mux cell top.$flatten\x4_mul.\u4.\u1.$auto$bmuxmap.cc:60:execute$5056 ($mux).
Removed top 44 bits (of 48) from mux cell top.$flatten\x4_mul.\u4.\u1.$auto$bmuxmap.cc:60:execute$5057 ($mux).
Removed top 8 bits (of 48) from mux cell top.$flatten\x4_mul.\u4.\u1.$auto$bmuxmap.cc:60:execute$5064 ($mux).
Removed top 16 bits (of 48) from mux cell top.$flatten\x4_mul.\u4.\u1.$auto$bmuxmap.cc:60:execute$5065 ($mux).
Removed top 24 bits (of 48) from mux cell top.$flatten\x4_mul.\u4.\u1.$auto$bmuxmap.cc:60:execute$5066 ($mux).
Removed top 32 bits (of 48) from mux cell top.$flatten\x4_mul.\u4.\u1.$auto$bmuxmap.cc:60:execute$5067 ($mux).
Removed top 40 bits (of 48) from mux cell top.$flatten\x4_mul.\u4.\u1.$auto$bmuxmap.cc:60:execute$5068 ($mux).
Removed top 16 bits (of 48) from mux cell top.$flatten\x4_mul.\u4.\u1.$auto$bmuxmap.cc:60:execute$5073 ($mux).
Removed top 32 bits (of 48) from mux cell top.$flatten\x4_mul.\u4.\u1.$auto$bmuxmap.cc:60:execute$5074 ($mux).
Removed top 8 bits (of 31) from mux cell top.$flatten\x4_mul.$verific$mux_96$syn2.v:463$2379 ($mux).
Removed top 1 bits (of 8) from port A of cell top.$flatten\x3_mul.\u2.$verific$sub_43$syn2.v:777$4516 ($sub).
Removed top 7 bits (of 8) from port B of cell top.$flatten\x3_mul.\u2.$verific$add_41$syn2.v:776$4514 ($add).
Removed top 3 bits (of 9) from port B of cell top.$flatten\x3_mul.\u4.$verific$sub_208$syn2.v:1095$3416 ($sub).
Removed top 1 bits (of 9) from port A of cell top.$flatten\x3_mul.\u4.$verific$sub_204$syn2.v:1092$3412 ($sub).
Removed top 8 bits (of 9) from port B of cell top.$flatten\x3_mul.\u4.$verific$sub_204$syn2.v:1092$3412 ($sub).
Removed top 5 bits (of 6) from port B of cell top.$flatten\x3_mul.\u4.$verific$sub_194$syn2.v:1087$3402 ($sub).
Removed top 22 bits (of 23) from port B of cell top.$flatten\x3_mul.\u4.$verific$add_58$syn2.v:1006$3093 ($add).
Removed top 7 bits (of 8) from port B of cell top.$flatten\x3_mul.\u4.$verific$add_202$syn2.v:1091$3410 ($add).
Removed top 7 bits (of 8) from port B of cell top.$flatten\x3_mul.\u4.$verific$add_198$syn2.v:1089$3406 ($add).
Removed top 6 bits (of 7) from port B of cell top.$flatten\x3_mul.\u4.\u6.$verific$equal_10$syn2.v:1370$4735 ($eq).
Removed top 7 bits (of 8) from port B of cell top.$flatten\x3_mul.\u4.\u6.$verific$equal_11$syn2.v:1372$4736 ($eq).
Removed top 8 bits (of 9) from port B of cell top.$flatten\x3_mul.\u4.\u6.$verific$equal_12$syn2.v:1374$4737 ($eq).
Removed top 9 bits (of 10) from port B of cell top.$flatten\x3_mul.\u4.\u6.$verific$equal_13$syn2.v:1376$4738 ($eq).
Removed top 10 bits (of 11) from port B of cell top.$flatten\x3_mul.\u4.\u6.$verific$equal_14$syn2.v:1378$4739 ($eq).
Removed top 11 bits (of 12) from port B of cell top.$flatten\x3_mul.\u4.\u6.$verific$equal_15$syn2.v:1380$4740 ($eq).
Removed top 12 bits (of 13) from port B of cell top.$flatten\x3_mul.\u4.\u6.$verific$equal_16$syn2.v:1382$4741 ($eq).
Removed top 13 bits (of 14) from port B of cell top.$flatten\x3_mul.\u4.\u6.$verific$equal_17$syn2.v:1384$4742 ($eq).
Removed top 14 bits (of 15) from port B of cell top.$flatten\x3_mul.\u4.\u6.$verific$equal_18$syn2.v:1386$4743 ($eq).
Removed top 15 bits (of 16) from port B of cell top.$flatten\x3_mul.\u4.\u6.$verific$equal_19$syn2.v:1388$4744 ($eq).
Removed top 16 bits (of 17) from port B of cell top.$flatten\x3_mul.\u4.\u6.$verific$equal_20$syn2.v:1390$4745 ($eq).
Removed top 17 bits (of 18) from port B of cell top.$flatten\x3_mul.\u4.\u6.$verific$equal_21$syn2.v:1392$4746 ($eq).
Removed top 18 bits (of 19) from port B of cell top.$flatten\x3_mul.\u4.\u6.$verific$equal_22$syn2.v:1394$4747 ($eq).
Removed top 19 bits (of 20) from port B of cell top.$flatten\x3_mul.\u4.\u6.$verific$equal_23$syn2.v:1396$4748 ($eq).
Removed top 20 bits (of 21) from port B of cell top.$flatten\x3_mul.\u4.\u6.$verific$equal_24$syn2.v:1398$4749 ($eq).
Removed top 21 bits (of 22) from port B of cell top.$flatten\x3_mul.\u4.\u6.$verific$equal_25$syn2.v:1400$4750 ($eq).
Removed top 22 bits (of 23) from port B of cell top.$flatten\x3_mul.\u4.\u6.$verific$equal_26$syn2.v:1402$4751 ($eq).
Removed top 23 bits (of 24) from port B of cell top.$flatten\x3_mul.\u4.\u6.$verific$equal_27$syn2.v:1404$4752 ($eq).
Removed top 24 bits (of 25) from port B of cell top.$flatten\x3_mul.\u4.\u6.$verific$equal_28$syn2.v:1406$4753 ($eq).
Removed top 25 bits (of 26) from port B of cell top.$flatten\x3_mul.\u4.\u6.$verific$equal_29$syn2.v:1408$4754 ($eq).
Removed top 26 bits (of 27) from port B of cell top.$flatten\x3_mul.\u4.\u6.$verific$equal_30$syn2.v:1410$4755 ($eq).
Removed top 27 bits (of 28) from port B of cell top.$flatten\x3_mul.\u4.\u6.$verific$equal_31$syn2.v:1412$4756 ($eq).
Removed top 28 bits (of 29) from port B of cell top.$flatten\x3_mul.\u4.\u6.$verific$equal_32$syn2.v:1414$4757 ($eq).
Removed top 29 bits (of 30) from port B of cell top.$flatten\x3_mul.\u4.\u6.$verific$equal_33$syn2.v:1416$4758 ($eq).
Removed top 30 bits (of 31) from port B of cell top.$flatten\x3_mul.\u4.\u6.$verific$equal_34$syn2.v:1418$4759 ($eq).
Removed top 31 bits (of 32) from port B of cell top.$flatten\x3_mul.\u4.\u6.$verific$equal_35$syn2.v:1420$4760 ($eq).
Removed top 32 bits (of 33) from port B of cell top.$flatten\x3_mul.\u4.\u6.$verific$equal_36$syn2.v:1422$4761 ($eq).
Removed top 33 bits (of 34) from port B of cell top.$flatten\x3_mul.\u4.\u6.$verific$equal_37$syn2.v:1424$4762 ($eq).
Removed top 34 bits (of 35) from port B of cell top.$flatten\x3_mul.\u4.\u6.$verific$equal_38$syn2.v:1426$4763 ($eq).
Removed top 35 bits (of 36) from port B of cell top.$flatten\x3_mul.\u4.\u6.$verific$equal_39$syn2.v:1428$4764 ($eq).
Removed top 36 bits (of 37) from port B of cell top.$flatten\x3_mul.\u4.\u6.$verific$equal_40$syn2.v:1430$4765 ($eq).
Removed top 37 bits (of 38) from port B of cell top.$flatten\x3_mul.\u4.\u6.$verific$equal_41$syn2.v:1432$4766 ($eq).
Removed top 38 bits (of 39) from port B of cell top.$flatten\x3_mul.\u4.\u6.$verific$equal_42$syn2.v:1434$4767 ($eq).
Removed top 39 bits (of 40) from port B of cell top.$flatten\x3_mul.\u4.\u6.$verific$equal_43$syn2.v:1436$4768 ($eq).
Removed top 40 bits (of 41) from port B of cell top.$flatten\x3_mul.\u4.\u6.$verific$equal_44$syn2.v:1438$4769 ($eq).
Removed top 41 bits (of 42) from port B of cell top.$flatten\x3_mul.\u4.\u6.$verific$equal_45$syn2.v:1440$4770 ($eq).
Removed top 42 bits (of 43) from port B of cell top.$flatten\x3_mul.\u4.\u6.$verific$equal_46$syn2.v:1442$4771 ($eq).
Removed top 43 bits (of 44) from port B of cell top.$flatten\x3_mul.\u4.\u6.$verific$equal_47$syn2.v:1444$4772 ($eq).
Removed top 44 bits (of 45) from port B of cell top.$flatten\x3_mul.\u4.\u6.$verific$equal_48$syn2.v:1446$4773 ($eq).
Removed top 45 bits (of 46) from port B of cell top.$flatten\x3_mul.\u4.\u6.$verific$equal_49$syn2.v:1448$4774 ($eq).
Removed top 1 bits (of 2) from port B of cell top.$flatten\x3_mul.\u4.\u6.$verific$equal_5$syn2.v:1360$4730 ($eq).
Removed top 46 bits (of 47) from port B of cell top.$flatten\x3_mul.\u4.\u6.$verific$equal_50$syn2.v:1450$4775 ($eq).
Removed top 47 bits (of 48) from port B of cell top.$flatten\x3_mul.\u4.\u6.$verific$equal_51$syn2.v:1452$4776 ($eq).
Removed top 2 bits (of 3) from port B of cell top.$flatten\x3_mul.\u4.\u6.$verific$equal_6$syn2.v:1362$4731 ($eq).
Removed top 3 bits (of 4) from port B of cell top.$flatten\x3_mul.\u4.\u6.$verific$equal_7$syn2.v:1364$4732 ($eq).
Removed top 4 bits (of 5) from port B of cell top.$flatten\x3_mul.\u4.\u6.$verific$equal_8$syn2.v:1366$4733 ($eq).
Removed top 5 bits (of 6) from port B of cell top.$flatten\x3_mul.\u4.\u6.$verific$equal_9$syn2.v:1368$4734 ($eq).
Removed top 2 bits (of 48) from mux cell top.$flatten\x3_mul.\u4.\u1.$auto$bmuxmap.cc:60:execute$5014 ($mux).
Removed top 4 bits (of 48) from mux cell top.$flatten\x3_mul.\u4.\u1.$auto$bmuxmap.cc:60:execute$5015 ($mux).
Removed top 6 bits (of 48) from mux cell top.$flatten\x3_mul.\u4.\u1.$auto$bmuxmap.cc:60:execute$5016 ($mux).
Removed top 8 bits (of 48) from mux cell top.$flatten\x3_mul.\u4.\u1.$auto$bmuxmap.cc:60:execute$5017 ($mux).
Removed top 10 bits (of 48) from mux cell top.$flatten\x3_mul.\u4.\u1.$auto$bmuxmap.cc:60:execute$5018 ($mux).
Removed top 12 bits (of 48) from mux cell top.$flatten\x3_mul.\u4.\u1.$auto$bmuxmap.cc:60:execute$5019 ($mux).
Removed top 14 bits (of 48) from mux cell top.$flatten\x3_mul.\u4.\u1.$auto$bmuxmap.cc:60:execute$5020 ($mux).
Removed top 16 bits (of 48) from mux cell top.$flatten\x3_mul.\u4.\u1.$auto$bmuxmap.cc:60:execute$5021 ($mux).
Removed top 18 bits (of 48) from mux cell top.$flatten\x3_mul.\u4.\u1.$auto$bmuxmap.cc:60:execute$5022 ($mux).
Removed top 20 bits (of 48) from mux cell top.$flatten\x3_mul.\u4.\u1.$auto$bmuxmap.cc:60:execute$5023 ($mux).
Removed top 22 bits (of 48) from mux cell top.$flatten\x3_mul.\u4.\u1.$auto$bmuxmap.cc:60:execute$5024 ($mux).
Removed top 24 bits (of 48) from mux cell top.$flatten\x3_mul.\u4.\u1.$auto$bmuxmap.cc:60:execute$5025 ($mux).
Removed top 26 bits (of 48) from mux cell top.$flatten\x3_mul.\u4.\u1.$auto$bmuxmap.cc:60:execute$5026 ($mux).
Removed top 28 bits (of 48) from mux cell top.$flatten\x3_mul.\u4.\u1.$auto$bmuxmap.cc:60:execute$5027 ($mux).
Removed top 30 bits (of 48) from mux cell top.$flatten\x3_mul.\u4.\u1.$auto$bmuxmap.cc:60:execute$5028 ($mux).
Removed top 32 bits (of 48) from mux cell top.$flatten\x3_mul.\u4.\u1.$auto$bmuxmap.cc:60:execute$5029 ($mux).
Removed top 34 bits (of 48) from mux cell top.$flatten\x3_mul.\u4.\u1.$auto$bmuxmap.cc:60:execute$5030 ($mux).
Removed top 36 bits (of 48) from mux cell top.$flatten\x3_mul.\u4.\u1.$auto$bmuxmap.cc:60:execute$5031 ($mux).
Removed top 38 bits (of 48) from mux cell top.$flatten\x3_mul.\u4.\u1.$auto$bmuxmap.cc:60:execute$5032 ($mux).
Removed top 40 bits (of 48) from mux cell top.$flatten\x3_mul.\u4.\u1.$auto$bmuxmap.cc:60:execute$5033 ($mux).
Removed top 42 bits (of 48) from mux cell top.$flatten\x3_mul.\u4.\u1.$auto$bmuxmap.cc:60:execute$5034 ($mux).
Removed top 44 bits (of 48) from mux cell top.$flatten\x3_mul.\u4.\u1.$auto$bmuxmap.cc:60:execute$5035 ($mux).
Removed top 46 bits (of 48) from mux cell top.$flatten\x3_mul.\u4.\u1.$auto$bmuxmap.cc:60:execute$5036 ($mux).
Removed top 4 bits (of 48) from mux cell top.$flatten\x3_mul.\u4.\u1.$auto$bmuxmap.cc:60:execute$5047 ($mux).
Removed top 8 bits (of 48) from mux cell top.$flatten\x3_mul.\u4.\u1.$auto$bmuxmap.cc:60:execute$5048 ($mux).
Removed top 12 bits (of 48) from mux cell top.$flatten\x3_mul.\u4.\u1.$auto$bmuxmap.cc:60:execute$5049 ($mux).
Removed top 16 bits (of 48) from mux cell top.$flatten\x3_mul.\u4.\u1.$auto$bmuxmap.cc:60:execute$5050 ($mux).
Removed top 20 bits (of 48) from mux cell top.$flatten\x3_mul.\u4.\u1.$auto$bmuxmap.cc:60:execute$5051 ($mux).
Removed top 24 bits (of 48) from mux cell top.$flatten\x3_mul.\u4.\u1.$auto$bmuxmap.cc:60:execute$5052 ($mux).
Removed top 28 bits (of 48) from mux cell top.$flatten\x3_mul.\u4.\u1.$auto$bmuxmap.cc:60:execute$5053 ($mux).
Removed top 32 bits (of 48) from mux cell top.$flatten\x3_mul.\u4.\u1.$auto$bmuxmap.cc:60:execute$5054 ($mux).
Removed top 36 bits (of 48) from mux cell top.$flatten\x3_mul.\u4.\u1.$auto$bmuxmap.cc:60:execute$5055 ($mux).
Removed top 40 bits (of 48) from mux cell top.$flatten\x3_mul.\u4.\u1.$auto$bmuxmap.cc:60:execute$5056 ($mux).
Removed top 44 bits (of 48) from mux cell top.$flatten\x3_mul.\u4.\u1.$auto$bmuxmap.cc:60:execute$5057 ($mux).
Removed top 8 bits (of 48) from mux cell top.$flatten\x3_mul.\u4.\u1.$auto$bmuxmap.cc:60:execute$5064 ($mux).
Removed top 16 bits (of 48) from mux cell top.$flatten\x3_mul.\u4.\u1.$auto$bmuxmap.cc:60:execute$5065 ($mux).
Removed top 24 bits (of 48) from mux cell top.$flatten\x3_mul.\u4.\u1.$auto$bmuxmap.cc:60:execute$5066 ($mux).
Removed top 32 bits (of 48) from mux cell top.$flatten\x3_mul.\u4.\u1.$auto$bmuxmap.cc:60:execute$5067 ($mux).
Removed top 40 bits (of 48) from mux cell top.$flatten\x3_mul.\u4.\u1.$auto$bmuxmap.cc:60:execute$5068 ($mux).
Removed top 16 bits (of 48) from mux cell top.$flatten\x3_mul.\u4.\u1.$auto$bmuxmap.cc:60:execute$5073 ($mux).
Removed top 32 bits (of 48) from mux cell top.$flatten\x3_mul.\u4.\u1.$auto$bmuxmap.cc:60:execute$5074 ($mux).
Removed top 8 bits (of 31) from mux cell top.$flatten\x3_mul.$verific$mux_96$syn2.v:463$2379 ($mux).
Removed top 1 bits (of 8) from port A of cell top.$flatten\x2_mul.\u2.$verific$sub_43$syn2.v:777$4516 ($sub).
Removed top 7 bits (of 8) from port B of cell top.$flatten\x2_mul.\u2.$verific$add_41$syn2.v:776$4514 ($add).
Removed top 3 bits (of 9) from port B of cell top.$flatten\x2_mul.\u4.$verific$sub_208$syn2.v:1095$3416 ($sub).
Removed top 1 bits (of 9) from port A of cell top.$flatten\x2_mul.\u4.$verific$sub_204$syn2.v:1092$3412 ($sub).
Removed top 8 bits (of 9) from port B of cell top.$flatten\x2_mul.\u4.$verific$sub_204$syn2.v:1092$3412 ($sub).
Removed top 5 bits (of 6) from port B of cell top.$flatten\x2_mul.\u4.$verific$sub_194$syn2.v:1087$3402 ($sub).
Removed top 22 bits (of 23) from port B of cell top.$flatten\x2_mul.\u4.$verific$add_58$syn2.v:1006$3093 ($add).
Removed top 7 bits (of 8) from port B of cell top.$flatten\x2_mul.\u4.$verific$add_202$syn2.v:1091$3410 ($add).
Removed top 7 bits (of 8) from port B of cell top.$flatten\x2_mul.\u4.$verific$add_198$syn2.v:1089$3406 ($add).
Removed top 6 bits (of 7) from port B of cell top.$flatten\x2_mul.\u4.\u6.$verific$equal_10$syn2.v:1370$4735 ($eq).
Removed top 7 bits (of 8) from port B of cell top.$flatten\x2_mul.\u4.\u6.$verific$equal_11$syn2.v:1372$4736 ($eq).
Removed top 8 bits (of 9) from port B of cell top.$flatten\x2_mul.\u4.\u6.$verific$equal_12$syn2.v:1374$4737 ($eq).
Removed top 9 bits (of 10) from port B of cell top.$flatten\x2_mul.\u4.\u6.$verific$equal_13$syn2.v:1376$4738 ($eq).
Removed top 10 bits (of 11) from port B of cell top.$flatten\x2_mul.\u4.\u6.$verific$equal_14$syn2.v:1378$4739 ($eq).
Removed top 11 bits (of 12) from port B of cell top.$flatten\x2_mul.\u4.\u6.$verific$equal_15$syn2.v:1380$4740 ($eq).
Removed top 12 bits (of 13) from port B of cell top.$flatten\x2_mul.\u4.\u6.$verific$equal_16$syn2.v:1382$4741 ($eq).
Removed top 13 bits (of 14) from port B of cell top.$flatten\x2_mul.\u4.\u6.$verific$equal_17$syn2.v:1384$4742 ($eq).
Removed top 14 bits (of 15) from port B of cell top.$flatten\x2_mul.\u4.\u6.$verific$equal_18$syn2.v:1386$4743 ($eq).
Removed top 15 bits (of 16) from port B of cell top.$flatten\x2_mul.\u4.\u6.$verific$equal_19$syn2.v:1388$4744 ($eq).
Removed top 16 bits (of 17) from port B of cell top.$flatten\x2_mul.\u4.\u6.$verific$equal_20$syn2.v:1390$4745 ($eq).
Removed top 17 bits (of 18) from port B of cell top.$flatten\x2_mul.\u4.\u6.$verific$equal_21$syn2.v:1392$4746 ($eq).
Removed top 18 bits (of 19) from port B of cell top.$flatten\x2_mul.\u4.\u6.$verific$equal_22$syn2.v:1394$4747 ($eq).
Removed top 19 bits (of 20) from port B of cell top.$flatten\x2_mul.\u4.\u6.$verific$equal_23$syn2.v:1396$4748 ($eq).
Removed top 20 bits (of 21) from port B of cell top.$flatten\x2_mul.\u4.\u6.$verific$equal_24$syn2.v:1398$4749 ($eq).
Removed top 21 bits (of 22) from port B of cell top.$flatten\x2_mul.\u4.\u6.$verific$equal_25$syn2.v:1400$4750 ($eq).
Removed top 22 bits (of 23) from port B of cell top.$flatten\x2_mul.\u4.\u6.$verific$equal_26$syn2.v:1402$4751 ($eq).
Removed top 23 bits (of 24) from port B of cell top.$flatten\x2_mul.\u4.\u6.$verific$equal_27$syn2.v:1404$4752 ($eq).
Removed top 24 bits (of 25) from port B of cell top.$flatten\x2_mul.\u4.\u6.$verific$equal_28$syn2.v:1406$4753 ($eq).
Removed top 25 bits (of 26) from port B of cell top.$flatten\x2_mul.\u4.\u6.$verific$equal_29$syn2.v:1408$4754 ($eq).
Removed top 26 bits (of 27) from port B of cell top.$flatten\x2_mul.\u4.\u6.$verific$equal_30$syn2.v:1410$4755 ($eq).
Removed top 27 bits (of 28) from port B of cell top.$flatten\x2_mul.\u4.\u6.$verific$equal_31$syn2.v:1412$4756 ($eq).
Removed top 28 bits (of 29) from port B of cell top.$flatten\x2_mul.\u4.\u6.$verific$equal_32$syn2.v:1414$4757 ($eq).
Removed top 29 bits (of 30) from port B of cell top.$flatten\x2_mul.\u4.\u6.$verific$equal_33$syn2.v:1416$4758 ($eq).
Removed top 30 bits (of 31) from port B of cell top.$flatten\x2_mul.\u4.\u6.$verific$equal_34$syn2.v:1418$4759 ($eq).
Removed top 31 bits (of 32) from port B of cell top.$flatten\x2_mul.\u4.\u6.$verific$equal_35$syn2.v:1420$4760 ($eq).
Removed top 32 bits (of 33) from port B of cell top.$flatten\x2_mul.\u4.\u6.$verific$equal_36$syn2.v:1422$4761 ($eq).
Removed top 33 bits (of 34) from port B of cell top.$flatten\x2_mul.\u4.\u6.$verific$equal_37$syn2.v:1424$4762 ($eq).
Removed top 34 bits (of 35) from port B of cell top.$flatten\x2_mul.\u4.\u6.$verific$equal_38$syn2.v:1426$4763 ($eq).
Removed top 35 bits (of 36) from port B of cell top.$flatten\x2_mul.\u4.\u6.$verific$equal_39$syn2.v:1428$4764 ($eq).
Removed top 36 bits (of 37) from port B of cell top.$flatten\x2_mul.\u4.\u6.$verific$equal_40$syn2.v:1430$4765 ($eq).
Removed top 37 bits (of 38) from port B of cell top.$flatten\x2_mul.\u4.\u6.$verific$equal_41$syn2.v:1432$4766 ($eq).
Removed top 38 bits (of 39) from port B of cell top.$flatten\x2_mul.\u4.\u6.$verific$equal_42$syn2.v:1434$4767 ($eq).
Removed top 39 bits (of 40) from port B of cell top.$flatten\x2_mul.\u4.\u6.$verific$equal_43$syn2.v:1436$4768 ($eq).
Removed top 40 bits (of 41) from port B of cell top.$flatten\x2_mul.\u4.\u6.$verific$equal_44$syn2.v:1438$4769 ($eq).
Removed top 41 bits (of 42) from port B of cell top.$flatten\x2_mul.\u4.\u6.$verific$equal_45$syn2.v:1440$4770 ($eq).
Removed top 42 bits (of 43) from port B of cell top.$flatten\x2_mul.\u4.\u6.$verific$equal_46$syn2.v:1442$4771 ($eq).
Removed top 43 bits (of 44) from port B of cell top.$flatten\x2_mul.\u4.\u6.$verific$equal_47$syn2.v:1444$4772 ($eq).
Removed top 44 bits (of 45) from port B of cell top.$flatten\x2_mul.\u4.\u6.$verific$equal_48$syn2.v:1446$4773 ($eq).
Removed top 45 bits (of 46) from port B of cell top.$flatten\x2_mul.\u4.\u6.$verific$equal_49$syn2.v:1448$4774 ($eq).
Removed top 1 bits (of 2) from port B of cell top.$flatten\x2_mul.\u4.\u6.$verific$equal_5$syn2.v:1360$4730 ($eq).
Removed top 46 bits (of 47) from port B of cell top.$flatten\x2_mul.\u4.\u6.$verific$equal_50$syn2.v:1450$4775 ($eq).
Removed top 47 bits (of 48) from port B of cell top.$flatten\x2_mul.\u4.\u6.$verific$equal_51$syn2.v:1452$4776 ($eq).
Removed top 2 bits (of 3) from port B of cell top.$flatten\x2_mul.\u4.\u6.$verific$equal_6$syn2.v:1362$4731 ($eq).
Removed top 3 bits (of 4) from port B of cell top.$flatten\x2_mul.\u4.\u6.$verific$equal_7$syn2.v:1364$4732 ($eq).
Removed top 4 bits (of 5) from port B of cell top.$flatten\x2_mul.\u4.\u6.$verific$equal_8$syn2.v:1366$4733 ($eq).
Removed top 5 bits (of 6) from port B of cell top.$flatten\x2_mul.\u4.\u6.$verific$equal_9$syn2.v:1368$4734 ($eq).
Removed top 2 bits (of 48) from mux cell top.$flatten\x2_mul.\u4.\u1.$auto$bmuxmap.cc:60:execute$5014 ($mux).
Removed top 4 bits (of 48) from mux cell top.$flatten\x2_mul.\u4.\u1.$auto$bmuxmap.cc:60:execute$5015 ($mux).
Removed top 6 bits (of 48) from mux cell top.$flatten\x2_mul.\u4.\u1.$auto$bmuxmap.cc:60:execute$5016 ($mux).
Removed top 8 bits (of 48) from mux cell top.$flatten\x2_mul.\u4.\u1.$auto$bmuxmap.cc:60:execute$5017 ($mux).
Removed top 10 bits (of 48) from mux cell top.$flatten\x2_mul.\u4.\u1.$auto$bmuxmap.cc:60:execute$5018 ($mux).
Removed top 12 bits (of 48) from mux cell top.$flatten\x2_mul.\u4.\u1.$auto$bmuxmap.cc:60:execute$5019 ($mux).
Removed top 14 bits (of 48) from mux cell top.$flatten\x2_mul.\u4.\u1.$auto$bmuxmap.cc:60:execute$5020 ($mux).
Removed top 16 bits (of 48) from mux cell top.$flatten\x2_mul.\u4.\u1.$auto$bmuxmap.cc:60:execute$5021 ($mux).
Removed top 18 bits (of 48) from mux cell top.$flatten\x2_mul.\u4.\u1.$auto$bmuxmap.cc:60:execute$5022 ($mux).
Removed top 20 bits (of 48) from mux cell top.$flatten\x2_mul.\u4.\u1.$auto$bmuxmap.cc:60:execute$5023 ($mux).
Removed top 22 bits (of 48) from mux cell top.$flatten\x2_mul.\u4.\u1.$auto$bmuxmap.cc:60:execute$5024 ($mux).
Removed top 24 bits (of 48) from mux cell top.$flatten\x2_mul.\u4.\u1.$auto$bmuxmap.cc:60:execute$5025 ($mux).
Removed top 26 bits (of 48) from mux cell top.$flatten\x2_mul.\u4.\u1.$auto$bmuxmap.cc:60:execute$5026 ($mux).
Removed top 28 bits (of 48) from mux cell top.$flatten\x2_mul.\u4.\u1.$auto$bmuxmap.cc:60:execute$5027 ($mux).
Removed top 30 bits (of 48) from mux cell top.$flatten\x2_mul.\u4.\u1.$auto$bmuxmap.cc:60:execute$5028 ($mux).
Removed top 32 bits (of 48) from mux cell top.$flatten\x2_mul.\u4.\u1.$auto$bmuxmap.cc:60:execute$5029 ($mux).
Removed top 34 bits (of 48) from mux cell top.$flatten\x2_mul.\u4.\u1.$auto$bmuxmap.cc:60:execute$5030 ($mux).
Removed top 36 bits (of 48) from mux cell top.$flatten\x2_mul.\u4.\u1.$auto$bmuxmap.cc:60:execute$5031 ($mux).
Removed top 38 bits (of 48) from mux cell top.$flatten\x2_mul.\u4.\u1.$auto$bmuxmap.cc:60:execute$5032 ($mux).
Removed top 40 bits (of 48) from mux cell top.$flatten\x2_mul.\u4.\u1.$auto$bmuxmap.cc:60:execute$5033 ($mux).
Removed top 42 bits (of 48) from mux cell top.$flatten\x2_mul.\u4.\u1.$auto$bmuxmap.cc:60:execute$5034 ($mux).
Removed top 44 bits (of 48) from mux cell top.$flatten\x2_mul.\u4.\u1.$auto$bmuxmap.cc:60:execute$5035 ($mux).
Removed top 46 bits (of 48) from mux cell top.$flatten\x2_mul.\u4.\u1.$auto$bmuxmap.cc:60:execute$5036 ($mux).
Removed top 4 bits (of 48) from mux cell top.$flatten\x2_mul.\u4.\u1.$auto$bmuxmap.cc:60:execute$5047 ($mux).
Removed top 8 bits (of 48) from mux cell top.$flatten\x2_mul.\u4.\u1.$auto$bmuxmap.cc:60:execute$5048 ($mux).
Removed top 12 bits (of 48) from mux cell top.$flatten\x2_mul.\u4.\u1.$auto$bmuxmap.cc:60:execute$5049 ($mux).
Removed top 16 bits (of 48) from mux cell top.$flatten\x2_mul.\u4.\u1.$auto$bmuxmap.cc:60:execute$5050 ($mux).
Removed top 20 bits (of 48) from mux cell top.$flatten\x2_mul.\u4.\u1.$auto$bmuxmap.cc:60:execute$5051 ($mux).
Removed top 24 bits (of 48) from mux cell top.$flatten\x2_mul.\u4.\u1.$auto$bmuxmap.cc:60:execute$5052 ($mux).
Removed top 28 bits (of 48) from mux cell top.$flatten\x2_mul.\u4.\u1.$auto$bmuxmap.cc:60:execute$5053 ($mux).
Removed top 32 bits (of 48) from mux cell top.$flatten\x2_mul.\u4.\u1.$auto$bmuxmap.cc:60:execute$5054 ($mux).
Removed top 36 bits (of 48) from mux cell top.$flatten\x2_mul.\u4.\u1.$auto$bmuxmap.cc:60:execute$5055 ($mux).
Removed top 40 bits (of 48) from mux cell top.$flatten\x2_mul.\u4.\u1.$auto$bmuxmap.cc:60:execute$5056 ($mux).
Removed top 44 bits (of 48) from mux cell top.$flatten\x2_mul.\u4.\u1.$auto$bmuxmap.cc:60:execute$5057 ($mux).
Removed top 8 bits (of 48) from mux cell top.$flatten\x2_mul.\u4.\u1.$auto$bmuxmap.cc:60:execute$5064 ($mux).
Removed top 16 bits (of 48) from mux cell top.$flatten\x2_mul.\u4.\u1.$auto$bmuxmap.cc:60:execute$5065 ($mux).
Removed top 24 bits (of 48) from mux cell top.$flatten\x2_mul.\u4.\u1.$auto$bmuxmap.cc:60:execute$5066 ($mux).
Removed top 32 bits (of 48) from mux cell top.$flatten\x2_mul.\u4.\u1.$auto$bmuxmap.cc:60:execute$5067 ($mux).
Removed top 40 bits (of 48) from mux cell top.$flatten\x2_mul.\u4.\u1.$auto$bmuxmap.cc:60:execute$5068 ($mux).
Removed top 16 bits (of 48) from mux cell top.$flatten\x2_mul.\u4.\u1.$auto$bmuxmap.cc:60:execute$5073 ($mux).
Removed top 32 bits (of 48) from mux cell top.$flatten\x2_mul.\u4.\u1.$auto$bmuxmap.cc:60:execute$5074 ($mux).
Removed top 8 bits (of 31) from mux cell top.$flatten\x2_mul.$verific$mux_96$syn2.v:463$2379 ($mux).
Removed top 1 bits (of 8) from port A of cell top.$flatten\x1_mul.\u2.$verific$sub_43$syn2.v:777$4516 ($sub).
Removed top 7 bits (of 8) from port B of cell top.$flatten\x1_mul.\u2.$verific$add_41$syn2.v:776$4514 ($add).
Removed top 3 bits (of 9) from port B of cell top.$flatten\x1_mul.\u4.$verific$sub_208$syn2.v:1095$3416 ($sub).
Removed top 1 bits (of 9) from port A of cell top.$flatten\x1_mul.\u4.$verific$sub_204$syn2.v:1092$3412 ($sub).
Removed top 8 bits (of 9) from port B of cell top.$flatten\x1_mul.\u4.$verific$sub_204$syn2.v:1092$3412 ($sub).
Removed top 5 bits (of 6) from port B of cell top.$flatten\x1_mul.\u4.$verific$sub_194$syn2.v:1087$3402 ($sub).
Removed top 22 bits (of 23) from port B of cell top.$flatten\x1_mul.\u4.$verific$add_58$syn2.v:1006$3093 ($add).
Removed top 7 bits (of 8) from port B of cell top.$flatten\x1_mul.\u4.$verific$add_202$syn2.v:1091$3410 ($add).
Removed top 7 bits (of 8) from port B of cell top.$flatten\x1_mul.\u4.$verific$add_198$syn2.v:1089$3406 ($add).
Removed top 6 bits (of 7) from port B of cell top.$flatten\x1_mul.\u4.\u6.$verific$equal_10$syn2.v:1370$4735 ($eq).
Removed top 7 bits (of 8) from port B of cell top.$flatten\x1_mul.\u4.\u6.$verific$equal_11$syn2.v:1372$4736 ($eq).
Removed top 8 bits (of 9) from port B of cell top.$flatten\x1_mul.\u4.\u6.$verific$equal_12$syn2.v:1374$4737 ($eq).
Removed top 9 bits (of 10) from port B of cell top.$flatten\x1_mul.\u4.\u6.$verific$equal_13$syn2.v:1376$4738 ($eq).
Removed top 10 bits (of 11) from port B of cell top.$flatten\x1_mul.\u4.\u6.$verific$equal_14$syn2.v:1378$4739 ($eq).
Removed top 11 bits (of 12) from port B of cell top.$flatten\x1_mul.\u4.\u6.$verific$equal_15$syn2.v:1380$4740 ($eq).
Removed top 12 bits (of 13) from port B of cell top.$flatten\x1_mul.\u4.\u6.$verific$equal_16$syn2.v:1382$4741 ($eq).
Removed top 13 bits (of 14) from port B of cell top.$flatten\x1_mul.\u4.\u6.$verific$equal_17$syn2.v:1384$4742 ($eq).
Removed top 14 bits (of 15) from port B of cell top.$flatten\x1_mul.\u4.\u6.$verific$equal_18$syn2.v:1386$4743 ($eq).
Removed top 15 bits (of 16) from port B of cell top.$flatten\x1_mul.\u4.\u6.$verific$equal_19$syn2.v:1388$4744 ($eq).
Removed top 16 bits (of 17) from port B of cell top.$flatten\x1_mul.\u4.\u6.$verific$equal_20$syn2.v:1390$4745 ($eq).
Removed top 17 bits (of 18) from port B of cell top.$flatten\x1_mul.\u4.\u6.$verific$equal_21$syn2.v:1392$4746 ($eq).
Removed top 18 bits (of 19) from port B of cell top.$flatten\x1_mul.\u4.\u6.$verific$equal_22$syn2.v:1394$4747 ($eq).
Removed top 19 bits (of 20) from port B of cell top.$flatten\x1_mul.\u4.\u6.$verific$equal_23$syn2.v:1396$4748 ($eq).
Removed top 20 bits (of 21) from port B of cell top.$flatten\x1_mul.\u4.\u6.$verific$equal_24$syn2.v:1398$4749 ($eq).
Removed top 21 bits (of 22) from port B of cell top.$flatten\x1_mul.\u4.\u6.$verific$equal_25$syn2.v:1400$4750 ($eq).
Removed top 22 bits (of 23) from port B of cell top.$flatten\x1_mul.\u4.\u6.$verific$equal_26$syn2.v:1402$4751 ($eq).
Removed top 23 bits (of 24) from port B of cell top.$flatten\x1_mul.\u4.\u6.$verific$equal_27$syn2.v:1404$4752 ($eq).
Removed top 24 bits (of 25) from port B of cell top.$flatten\x1_mul.\u4.\u6.$verific$equal_28$syn2.v:1406$4753 ($eq).
Removed top 25 bits (of 26) from port B of cell top.$flatten\x1_mul.\u4.\u6.$verific$equal_29$syn2.v:1408$4754 ($eq).
Removed top 26 bits (of 27) from port B of cell top.$flatten\x1_mul.\u4.\u6.$verific$equal_30$syn2.v:1410$4755 ($eq).
Removed top 27 bits (of 28) from port B of cell top.$flatten\x1_mul.\u4.\u6.$verific$equal_31$syn2.v:1412$4756 ($eq).
Removed top 28 bits (of 29) from port B of cell top.$flatten\x1_mul.\u4.\u6.$verific$equal_32$syn2.v:1414$4757 ($eq).
Removed top 29 bits (of 30) from port B of cell top.$flatten\x1_mul.\u4.\u6.$verific$equal_33$syn2.v:1416$4758 ($eq).
Removed top 30 bits (of 31) from port B of cell top.$flatten\x1_mul.\u4.\u6.$verific$equal_34$syn2.v:1418$4759 ($eq).
Removed top 31 bits (of 32) from port B of cell top.$flatten\x1_mul.\u4.\u6.$verific$equal_35$syn2.v:1420$4760 ($eq).
Removed top 32 bits (of 33) from port B of cell top.$flatten\x1_mul.\u4.\u6.$verific$equal_36$syn2.v:1422$4761 ($eq).
Removed top 33 bits (of 34) from port B of cell top.$flatten\x1_mul.\u4.\u6.$verific$equal_37$syn2.v:1424$4762 ($eq).
Removed top 34 bits (of 35) from port B of cell top.$flatten\x1_mul.\u4.\u6.$verific$equal_38$syn2.v:1426$4763 ($eq).
Removed top 35 bits (of 36) from port B of cell top.$flatten\x1_mul.\u4.\u6.$verific$equal_39$syn2.v:1428$4764 ($eq).
Removed top 36 bits (of 37) from port B of cell top.$flatten\x1_mul.\u4.\u6.$verific$equal_40$syn2.v:1430$4765 ($eq).
Removed top 37 bits (of 38) from port B of cell top.$flatten\x1_mul.\u4.\u6.$verific$equal_41$syn2.v:1432$4766 ($eq).
Removed top 38 bits (of 39) from port B of cell top.$flatten\x1_mul.\u4.\u6.$verific$equal_42$syn2.v:1434$4767 ($eq).
Removed top 39 bits (of 40) from port B of cell top.$flatten\x1_mul.\u4.\u6.$verific$equal_43$syn2.v:1436$4768 ($eq).
Removed top 40 bits (of 41) from port B of cell top.$flatten\x1_mul.\u4.\u6.$verific$equal_44$syn2.v:1438$4769 ($eq).
Removed top 41 bits (of 42) from port B of cell top.$flatten\x1_mul.\u4.\u6.$verific$equal_45$syn2.v:1440$4770 ($eq).
Removed top 42 bits (of 43) from port B of cell top.$flatten\x1_mul.\u4.\u6.$verific$equal_46$syn2.v:1442$4771 ($eq).
Removed top 43 bits (of 44) from port B of cell top.$flatten\x1_mul.\u4.\u6.$verific$equal_47$syn2.v:1444$4772 ($eq).
Removed top 44 bits (of 45) from port B of cell top.$flatten\x1_mul.\u4.\u6.$verific$equal_48$syn2.v:1446$4773 ($eq).
Removed top 45 bits (of 46) from port B of cell top.$flatten\x1_mul.\u4.\u6.$verific$equal_49$syn2.v:1448$4774 ($eq).
Removed top 1 bits (of 2) from port B of cell top.$flatten\x1_mul.\u4.\u6.$verific$equal_5$syn2.v:1360$4730 ($eq).
Removed top 46 bits (of 47) from port B of cell top.$flatten\x1_mul.\u4.\u6.$verific$equal_50$syn2.v:1450$4775 ($eq).
Removed top 47 bits (of 48) from port B of cell top.$flatten\x1_mul.\u4.\u6.$verific$equal_51$syn2.v:1452$4776 ($eq).
Removed top 2 bits (of 3) from port B of cell top.$flatten\x1_mul.\u4.\u6.$verific$equal_6$syn2.v:1362$4731 ($eq).
Removed top 3 bits (of 4) from port B of cell top.$flatten\x1_mul.\u4.\u6.$verific$equal_7$syn2.v:1364$4732 ($eq).
Removed top 4 bits (of 5) from port B of cell top.$flatten\x1_mul.\u4.\u6.$verific$equal_8$syn2.v:1366$4733 ($eq).
Removed top 5 bits (of 6) from port B of cell top.$flatten\x1_mul.\u4.\u6.$verific$equal_9$syn2.v:1368$4734 ($eq).
Removed top 2 bits (of 48) from mux cell top.$flatten\x1_mul.\u4.\u1.$auto$bmuxmap.cc:60:execute$5014 ($mux).
Removed top 4 bits (of 48) from mux cell top.$flatten\x1_mul.\u4.\u1.$auto$bmuxmap.cc:60:execute$5015 ($mux).
Removed top 6 bits (of 48) from mux cell top.$flatten\x1_mul.\u4.\u1.$auto$bmuxmap.cc:60:execute$5016 ($mux).
Removed top 8 bits (of 48) from mux cell top.$flatten\x1_mul.\u4.\u1.$auto$bmuxmap.cc:60:execute$5017 ($mux).
Removed top 10 bits (of 48) from mux cell top.$flatten\x1_mul.\u4.\u1.$auto$bmuxmap.cc:60:execute$5018 ($mux).
Removed top 12 bits (of 48) from mux cell top.$flatten\x1_mul.\u4.\u1.$auto$bmuxmap.cc:60:execute$5019 ($mux).
Removed top 14 bits (of 48) from mux cell top.$flatten\x1_mul.\u4.\u1.$auto$bmuxmap.cc:60:execute$5020 ($mux).
Removed top 16 bits (of 48) from mux cell top.$flatten\x1_mul.\u4.\u1.$auto$bmuxmap.cc:60:execute$5021 ($mux).
Removed top 18 bits (of 48) from mux cell top.$flatten\x1_mul.\u4.\u1.$auto$bmuxmap.cc:60:execute$5022 ($mux).
Removed top 20 bits (of 48) from mux cell top.$flatten\x1_mul.\u4.\u1.$auto$bmuxmap.cc:60:execute$5023 ($mux).
Removed top 22 bits (of 48) from mux cell top.$flatten\x1_mul.\u4.\u1.$auto$bmuxmap.cc:60:execute$5024 ($mux).
Removed top 24 bits (of 48) from mux cell top.$flatten\x1_mul.\u4.\u1.$auto$bmuxmap.cc:60:execute$5025 ($mux).
Removed top 26 bits (of 48) from mux cell top.$flatten\x1_mul.\u4.\u1.$auto$bmuxmap.cc:60:execute$5026 ($mux).
Removed top 28 bits (of 48) from mux cell top.$flatten\x1_mul.\u4.\u1.$auto$bmuxmap.cc:60:execute$5027 ($mux).
Removed top 30 bits (of 48) from mux cell top.$flatten\x1_mul.\u4.\u1.$auto$bmuxmap.cc:60:execute$5028 ($mux).
Removed top 32 bits (of 48) from mux cell top.$flatten\x1_mul.\u4.\u1.$auto$bmuxmap.cc:60:execute$5029 ($mux).
Removed top 34 bits (of 48) from mux cell top.$flatten\x1_mul.\u4.\u1.$auto$bmuxmap.cc:60:execute$5030 ($mux).
Removed top 36 bits (of 48) from mux cell top.$flatten\x1_mul.\u4.\u1.$auto$bmuxmap.cc:60:execute$5031 ($mux).
Removed top 38 bits (of 48) from mux cell top.$flatten\x1_mul.\u4.\u1.$auto$bmuxmap.cc:60:execute$5032 ($mux).
Removed top 40 bits (of 48) from mux cell top.$flatten\x1_mul.\u4.\u1.$auto$bmuxmap.cc:60:execute$5033 ($mux).
Removed top 42 bits (of 48) from mux cell top.$flatten\x1_mul.\u4.\u1.$auto$bmuxmap.cc:60:execute$5034 ($mux).
Removed top 44 bits (of 48) from mux cell top.$flatten\x1_mul.\u4.\u1.$auto$bmuxmap.cc:60:execute$5035 ($mux).
Removed top 46 bits (of 48) from mux cell top.$flatten\x1_mul.\u4.\u1.$auto$bmuxmap.cc:60:execute$5036 ($mux).
Removed top 4 bits (of 48) from mux cell top.$flatten\x1_mul.\u4.\u1.$auto$bmuxmap.cc:60:execute$5047 ($mux).
Removed top 8 bits (of 48) from mux cell top.$flatten\x1_mul.\u4.\u1.$auto$bmuxmap.cc:60:execute$5048 ($mux).
Removed top 12 bits (of 48) from mux cell top.$flatten\x1_mul.\u4.\u1.$auto$bmuxmap.cc:60:execute$5049 ($mux).
Removed top 16 bits (of 48) from mux cell top.$flatten\x1_mul.\u4.\u1.$auto$bmuxmap.cc:60:execute$5050 ($mux).
Removed top 20 bits (of 48) from mux cell top.$flatten\x1_mul.\u4.\u1.$auto$bmuxmap.cc:60:execute$5051 ($mux).
Removed top 24 bits (of 48) from mux cell top.$flatten\x1_mul.\u4.\u1.$auto$bmuxmap.cc:60:execute$5052 ($mux).
Removed top 28 bits (of 48) from mux cell top.$flatten\x1_mul.\u4.\u1.$auto$bmuxmap.cc:60:execute$5053 ($mux).
Removed top 32 bits (of 48) from mux cell top.$flatten\x1_mul.\u4.\u1.$auto$bmuxmap.cc:60:execute$5054 ($mux).
Removed top 36 bits (of 48) from mux cell top.$flatten\x1_mul.\u4.\u1.$auto$bmuxmap.cc:60:execute$5055 ($mux).
Removed top 40 bits (of 48) from mux cell top.$flatten\x1_mul.\u4.\u1.$auto$bmuxmap.cc:60:execute$5056 ($mux).
Removed top 44 bits (of 48) from mux cell top.$flatten\x1_mul.\u4.\u1.$auto$bmuxmap.cc:60:execute$5057 ($mux).
Removed top 8 bits (of 48) from mux cell top.$flatten\x1_mul.\u4.\u1.$auto$bmuxmap.cc:60:execute$5064 ($mux).
Removed top 16 bits (of 48) from mux cell top.$flatten\x1_mul.\u4.\u1.$auto$bmuxmap.cc:60:execute$5065 ($mux).
Removed top 24 bits (of 48) from mux cell top.$flatten\x1_mul.\u4.\u1.$auto$bmuxmap.cc:60:execute$5066 ($mux).
Removed top 32 bits (of 48) from mux cell top.$flatten\x1_mul.\u4.\u1.$auto$bmuxmap.cc:60:execute$5067 ($mux).
Removed top 40 bits (of 48) from mux cell top.$flatten\x1_mul.\u4.\u1.$auto$bmuxmap.cc:60:execute$5068 ($mux).
Removed top 16 bits (of 48) from mux cell top.$flatten\x1_mul.\u4.\u1.$auto$bmuxmap.cc:60:execute$5073 ($mux).
Removed top 32 bits (of 48) from mux cell top.$flatten\x1_mul.\u4.\u1.$auto$bmuxmap.cc:60:execute$5074 ($mux).
Removed top 8 bits (of 31) from mux cell top.$flatten\x1_mul.$verific$mux_96$syn2.v:463$2379 ($mux).
Removed top 7 bits (of 8) from port B of cell top.$flatten\add5_add.\u1.$verific$sub_23$syn2.v:2094$4170 ($sub).
Removed top 3 bits (of 8) from port A of cell top.$flatten\add5_add.\u1.$verific$LessThan_47$syn2.v:2113$4193 ($lt).
Removed top 21 bits (of 48) from mux cell top.$flatten\add5_add.\u1.\u7.$auto$bmuxmap.cc:60:execute$5013 ($mux).
Removed top 23 bits (of 48) from mux cell top.$flatten\add5_add.\u1.\u7.$auto$bmuxmap.cc:60:execute$5014 ($mux).
Removed top 25 bits (of 48) from mux cell top.$flatten\add5_add.\u1.\u7.$auto$bmuxmap.cc:60:execute$5015 ($mux).
Removed top 27 bits (of 48) from mux cell top.$flatten\add5_add.\u1.\u7.$auto$bmuxmap.cc:60:execute$5016 ($mux).
Removed top 29 bits (of 48) from mux cell top.$flatten\add5_add.\u1.\u7.$auto$bmuxmap.cc:60:execute$5017 ($mux).
Removed top 31 bits (of 48) from mux cell top.$flatten\add5_add.\u1.\u7.$auto$bmuxmap.cc:60:execute$5018 ($mux).
Removed top 33 bits (of 48) from mux cell top.$flatten\add5_add.\u1.\u7.$auto$bmuxmap.cc:60:execute$5019 ($mux).
Removed top 35 bits (of 48) from mux cell top.$flatten\add5_add.\u1.\u7.$auto$bmuxmap.cc:60:execute$5020 ($mux).
Removed top 37 bits (of 48) from mux cell top.$flatten\add5_add.\u1.\u7.$auto$bmuxmap.cc:60:execute$5021 ($mux).
Removed top 39 bits (of 48) from mux cell top.$flatten\add5_add.\u1.\u7.$auto$bmuxmap.cc:60:execute$5022 ($mux).
Removed top 41 bits (of 48) from mux cell top.$flatten\add5_add.\u1.\u7.$auto$bmuxmap.cc:60:execute$5023 ($mux).
Removed top 43 bits (of 48) from mux cell top.$flatten\add5_add.\u1.\u7.$auto$bmuxmap.cc:60:execute$5024 ($mux).
Removed top 45 bits (of 48) from mux cell top.$flatten\add5_add.\u1.\u7.$auto$bmuxmap.cc:60:execute$5025 ($mux).
Removed top 47 bits (of 48) from mux cell top.$flatten\add5_add.\u1.\u7.$auto$bmuxmap.cc:60:execute$5026 ($mux).
Removed top 21 bits (of 48) from mux cell top.$flatten\add5_add.\u1.\u7.$auto$bmuxmap.cc:60:execute$5046 ($mux).
Removed top 25 bits (of 48) from mux cell top.$flatten\add5_add.\u1.\u7.$auto$bmuxmap.cc:60:execute$5047 ($mux).
Removed top 29 bits (of 48) from mux cell top.$flatten\add5_add.\u1.\u7.$auto$bmuxmap.cc:60:execute$5048 ($mux).
Removed top 33 bits (of 48) from mux cell top.$flatten\add5_add.\u1.\u7.$auto$bmuxmap.cc:60:execute$5049 ($mux).
Removed top 37 bits (of 48) from mux cell top.$flatten\add5_add.\u1.\u7.$auto$bmuxmap.cc:60:execute$5050 ($mux).
Removed top 41 bits (of 48) from mux cell top.$flatten\add5_add.\u1.\u7.$auto$bmuxmap.cc:60:execute$5051 ($mux).
Removed top 45 bits (of 48) from mux cell top.$flatten\add5_add.\u1.\u7.$auto$bmuxmap.cc:60:execute$5052 ($mux).
Removed top 21 bits (of 48) from mux cell top.$flatten\add5_add.\u1.\u7.$auto$bmuxmap.cc:60:execute$5063 ($mux).
Removed top 29 bits (of 48) from mux cell top.$flatten\add5_add.\u1.\u7.$auto$bmuxmap.cc:60:execute$5064 ($mux).
Removed top 37 bits (of 48) from mux cell top.$flatten\add5_add.\u1.\u7.$auto$bmuxmap.cc:60:execute$5065 ($mux).
Removed top 45 bits (of 48) from mux cell top.$flatten\add5_add.\u1.\u7.$auto$bmuxmap.cc:60:execute$5066 ($mux).
Removed top 21 bits (of 48) from mux cell top.$flatten\add5_add.\u1.\u7.$auto$bmuxmap.cc:60:execute$5072 ($mux).
Removed top 37 bits (of 48) from mux cell top.$flatten\add5_add.\u1.\u7.$auto$bmuxmap.cc:60:execute$5073 ($mux).
Removed top 21 bits (of 48) from mux cell top.$flatten\add5_add.\u1.\u7.$auto$bmuxmap.cc:60:execute$5077 ($mux).
Removed top 3 bits (of 9) from port B of cell top.$flatten\add5_add.\u4.$verific$sub_208$syn2.v:1095$3416 ($sub).
Removed top 5 bits (of 6) from port B of cell top.$flatten\add5_add.\u4.$verific$sub_194$syn2.v:1087$3402 ($sub).
Removed top 1 bits (of 9) from mux cell top.$flatten\add5_add.\u4.$verific$mux_220$syn2.v:1103$3428 ($mux).
Removed top 22 bits (of 23) from port B of cell top.$flatten\add5_add.\u4.$verific$add_58$syn2.v:1006$3093 ($add).
Removed top 7 bits (of 8) from port B of cell top.$flatten\add5_add.\u4.$verific$add_202$syn2.v:1091$3410 ($add).
Removed top 7 bits (of 8) from port B of cell top.$flatten\add5_add.\u4.$verific$add_198$syn2.v:1089$3406 ($add).
Removed top 6 bits (of 7) from port B of cell top.$flatten\add5_add.\u4.\u6.$verific$equal_10$syn2.v:1370$4735 ($eq).
Removed top 7 bits (of 8) from port B of cell top.$flatten\add5_add.\u4.\u6.$verific$equal_11$syn2.v:1372$4736 ($eq).
Removed top 8 bits (of 9) from port B of cell top.$flatten\add5_add.\u4.\u6.$verific$equal_12$syn2.v:1374$4737 ($eq).
Removed top 9 bits (of 10) from port B of cell top.$flatten\add5_add.\u4.\u6.$verific$equal_13$syn2.v:1376$4738 ($eq).
Removed top 10 bits (of 11) from port B of cell top.$flatten\add5_add.\u4.\u6.$verific$equal_14$syn2.v:1378$4739 ($eq).
Removed top 11 bits (of 12) from port B of cell top.$flatten\add5_add.\u4.\u6.$verific$equal_15$syn2.v:1380$4740 ($eq).
Removed top 12 bits (of 13) from port B of cell top.$flatten\add5_add.\u4.\u6.$verific$equal_16$syn2.v:1382$4741 ($eq).
Removed top 13 bits (of 14) from port B of cell top.$flatten\add5_add.\u4.\u6.$verific$equal_17$syn2.v:1384$4742 ($eq).
Removed top 14 bits (of 15) from port B of cell top.$flatten\add5_add.\u4.\u6.$verific$equal_18$syn2.v:1386$4743 ($eq).
Removed top 15 bits (of 16) from port B of cell top.$flatten\add5_add.\u4.\u6.$verific$equal_19$syn2.v:1388$4744 ($eq).
Removed top 16 bits (of 17) from port B of cell top.$flatten\add5_add.\u4.\u6.$verific$equal_20$syn2.v:1390$4745 ($eq).
Removed top 17 bits (of 18) from port B of cell top.$flatten\add5_add.\u4.\u6.$verific$equal_21$syn2.v:1392$4746 ($eq).
Removed top 18 bits (of 19) from port B of cell top.$flatten\add5_add.\u4.\u6.$verific$equal_22$syn2.v:1394$4747 ($eq).
Removed top 19 bits (of 20) from port B of cell top.$flatten\add5_add.\u4.\u6.$verific$equal_23$syn2.v:1396$4748 ($eq).
Removed top 20 bits (of 21) from port B of cell top.$flatten\add5_add.\u4.\u6.$verific$equal_24$syn2.v:1398$4749 ($eq).
Removed top 21 bits (of 22) from port B of cell top.$flatten\add5_add.\u4.\u6.$verific$equal_25$syn2.v:1400$4750 ($eq).
Removed top 22 bits (of 23) from port B of cell top.$flatten\add5_add.\u4.\u6.$verific$equal_26$syn2.v:1402$4751 ($eq).
Removed top 23 bits (of 24) from port B of cell top.$flatten\add5_add.\u4.\u6.$verific$equal_27$syn2.v:1404$4752 ($eq).
Removed top 24 bits (of 25) from port B of cell top.$flatten\add5_add.\u4.\u6.$verific$equal_28$syn2.v:1406$4753 ($eq).
Removed top 25 bits (of 26) from port B of cell top.$flatten\add5_add.\u4.\u6.$verific$equal_29$syn2.v:1408$4754 ($eq).
Removed top 26 bits (of 27) from port B of cell top.$flatten\add5_add.\u4.\u6.$verific$equal_30$syn2.v:1410$4755 ($eq).
Removed top 27 bits (of 28) from port B of cell top.$flatten\add5_add.\u4.\u6.$verific$equal_31$syn2.v:1412$4756 ($eq).
Removed top 1 bits (of 2) from port B of cell top.$flatten\add5_add.\u4.\u6.$verific$equal_5$syn2.v:1360$4730 ($eq).
Removed top 2 bits (of 3) from port B of cell top.$flatten\add5_add.\u4.\u6.$verific$equal_6$syn2.v:1362$4731 ($eq).
Removed top 3 bits (of 4) from port B of cell top.$flatten\add5_add.\u4.\u6.$verific$equal_7$syn2.v:1364$4732 ($eq).
Removed top 4 bits (of 5) from port B of cell top.$flatten\add5_add.\u4.\u6.$verific$equal_8$syn2.v:1366$4733 ($eq).
Removed top 5 bits (of 6) from port B of cell top.$flatten\add5_add.\u4.\u6.$verific$equal_9$syn2.v:1368$4734 ($eq).
Removed top 8 bits (of 31) from mux cell top.$flatten\add5_add.$verific$mux_73$syn2.v:1940$1511 ($mux).
Removed top 1 bits (of 28) from port A of cell top.$flatten\add5_add.\u3.$verific$sub_4$syn2.v:2327$1594 ($sub).
Removed top 1 bits (of 28) from port B of cell top.$flatten\add5_add.\u3.$verific$sub_4$syn2.v:2327$1594 ($sub).
Removed top 7 bits (of 8) from port B of cell top.$flatten\add4_add.\u1.$verific$sub_23$syn2.v:2094$4170 ($sub).
Removed top 3 bits (of 8) from port A of cell top.$flatten\add4_add.\u1.$verific$LessThan_47$syn2.v:2113$4193 ($lt).
Removed top 21 bits (of 48) from mux cell top.$flatten\add4_add.\u1.\u7.$auto$bmuxmap.cc:60:execute$5013 ($mux).
Removed top 23 bits (of 48) from mux cell top.$flatten\add4_add.\u1.\u7.$auto$bmuxmap.cc:60:execute$5014 ($mux).
Removed top 25 bits (of 48) from mux cell top.$flatten\add4_add.\u1.\u7.$auto$bmuxmap.cc:60:execute$5015 ($mux).
Removed top 27 bits (of 48) from mux cell top.$flatten\add4_add.\u1.\u7.$auto$bmuxmap.cc:60:execute$5016 ($mux).
Removed top 29 bits (of 48) from mux cell top.$flatten\add4_add.\u1.\u7.$auto$bmuxmap.cc:60:execute$5017 ($mux).
Removed top 31 bits (of 48) from mux cell top.$flatten\add4_add.\u1.\u7.$auto$bmuxmap.cc:60:execute$5018 ($mux).
Removed top 33 bits (of 48) from mux cell top.$flatten\add4_add.\u1.\u7.$auto$bmuxmap.cc:60:execute$5019 ($mux).
Removed top 35 bits (of 48) from mux cell top.$flatten\add4_add.\u1.\u7.$auto$bmuxmap.cc:60:execute$5020 ($mux).
Removed top 37 bits (of 48) from mux cell top.$flatten\add4_add.\u1.\u7.$auto$bmuxmap.cc:60:execute$5021 ($mux).
Removed top 39 bits (of 48) from mux cell top.$flatten\add4_add.\u1.\u7.$auto$bmuxmap.cc:60:execute$5022 ($mux).
Removed top 41 bits (of 48) from mux cell top.$flatten\add4_add.\u1.\u7.$auto$bmuxmap.cc:60:execute$5023 ($mux).
Removed top 43 bits (of 48) from mux cell top.$flatten\add4_add.\u1.\u7.$auto$bmuxmap.cc:60:execute$5024 ($mux).
Removed top 45 bits (of 48) from mux cell top.$flatten\add4_add.\u1.\u7.$auto$bmuxmap.cc:60:execute$5025 ($mux).
Removed top 47 bits (of 48) from mux cell top.$flatten\add4_add.\u1.\u7.$auto$bmuxmap.cc:60:execute$5026 ($mux).
Removed top 21 bits (of 48) from mux cell top.$flatten\add4_add.\u1.\u7.$auto$bmuxmap.cc:60:execute$5046 ($mux).
Removed top 25 bits (of 48) from mux cell top.$flatten\add4_add.\u1.\u7.$auto$bmuxmap.cc:60:execute$5047 ($mux).
Removed top 29 bits (of 48) from mux cell top.$flatten\add4_add.\u1.\u7.$auto$bmuxmap.cc:60:execute$5048 ($mux).
Removed top 33 bits (of 48) from mux cell top.$flatten\add4_add.\u1.\u7.$auto$bmuxmap.cc:60:execute$5049 ($mux).
Removed top 37 bits (of 48) from mux cell top.$flatten\add4_add.\u1.\u7.$auto$bmuxmap.cc:60:execute$5050 ($mux).
Removed top 41 bits (of 48) from mux cell top.$flatten\add4_add.\u1.\u7.$auto$bmuxmap.cc:60:execute$5051 ($mux).
Removed top 45 bits (of 48) from mux cell top.$flatten\add4_add.\u1.\u7.$auto$bmuxmap.cc:60:execute$5052 ($mux).
Removed top 21 bits (of 48) from mux cell top.$flatten\add4_add.\u1.\u7.$auto$bmuxmap.cc:60:execute$5063 ($mux).
Removed top 29 bits (of 48) from mux cell top.$flatten\add4_add.\u1.\u7.$auto$bmuxmap.cc:60:execute$5064 ($mux).
Removed top 37 bits (of 48) from mux cell top.$flatten\add4_add.\u1.\u7.$auto$bmuxmap.cc:60:execute$5065 ($mux).
Removed top 45 bits (of 48) from mux cell top.$flatten\add4_add.\u1.\u7.$auto$bmuxmap.cc:60:execute$5066 ($mux).
Removed top 21 bits (of 48) from mux cell top.$flatten\add4_add.\u1.\u7.$auto$bmuxmap.cc:60:execute$5072 ($mux).
Removed top 37 bits (of 48) from mux cell top.$flatten\add4_add.\u1.\u7.$auto$bmuxmap.cc:60:execute$5073 ($mux).
Removed top 21 bits (of 48) from mux cell top.$flatten\add4_add.\u1.\u7.$auto$bmuxmap.cc:60:execute$5077 ($mux).
Removed top 3 bits (of 9) from port B of cell top.$flatten\add4_add.\u4.$verific$sub_208$syn2.v:1095$3416 ($sub).
Removed top 5 bits (of 6) from port B of cell top.$flatten\add4_add.\u4.$verific$sub_194$syn2.v:1087$3402 ($sub).
Removed top 1 bits (of 9) from mux cell top.$flatten\add4_add.\u4.$verific$mux_220$syn2.v:1103$3428 ($mux).
Removed top 22 bits (of 23) from port B of cell top.$flatten\add4_add.\u4.$verific$add_58$syn2.v:1006$3093 ($add).
Removed top 7 bits (of 8) from port B of cell top.$flatten\add4_add.\u4.$verific$add_202$syn2.v:1091$3410 ($add).
Removed top 7 bits (of 8) from port B of cell top.$flatten\add4_add.\u4.$verific$add_198$syn2.v:1089$3406 ($add).
Removed top 6 bits (of 7) from port B of cell top.$flatten\add4_add.\u4.\u6.$verific$equal_10$syn2.v:1370$4735 ($eq).
Removed top 7 bits (of 8) from port B of cell top.$flatten\add4_add.\u4.\u6.$verific$equal_11$syn2.v:1372$4736 ($eq).
Removed top 8 bits (of 9) from port B of cell top.$flatten\add4_add.\u4.\u6.$verific$equal_12$syn2.v:1374$4737 ($eq).
Removed top 9 bits (of 10) from port B of cell top.$flatten\add4_add.\u4.\u6.$verific$equal_13$syn2.v:1376$4738 ($eq).
Removed top 10 bits (of 11) from port B of cell top.$flatten\add4_add.\u4.\u6.$verific$equal_14$syn2.v:1378$4739 ($eq).
Removed top 11 bits (of 12) from port B of cell top.$flatten\add4_add.\u4.\u6.$verific$equal_15$syn2.v:1380$4740 ($eq).
Removed top 12 bits (of 13) from port B of cell top.$flatten\add4_add.\u4.\u6.$verific$equal_16$syn2.v:1382$4741 ($eq).
Removed top 13 bits (of 14) from port B of cell top.$flatten\add4_add.\u4.\u6.$verific$equal_17$syn2.v:1384$4742 ($eq).
Removed top 14 bits (of 15) from port B of cell top.$flatten\add4_add.\u4.\u6.$verific$equal_18$syn2.v:1386$4743 ($eq).
Removed top 15 bits (of 16) from port B of cell top.$flatten\add4_add.\u4.\u6.$verific$equal_19$syn2.v:1388$4744 ($eq).
Removed top 16 bits (of 17) from port B of cell top.$flatten\add4_add.\u4.\u6.$verific$equal_20$syn2.v:1390$4745 ($eq).
Removed top 17 bits (of 18) from port B of cell top.$flatten\add4_add.\u4.\u6.$verific$equal_21$syn2.v:1392$4746 ($eq).
Removed top 18 bits (of 19) from port B of cell top.$flatten\add4_add.\u4.\u6.$verific$equal_22$syn2.v:1394$4747 ($eq).
Removed top 19 bits (of 20) from port B of cell top.$flatten\add4_add.\u4.\u6.$verific$equal_23$syn2.v:1396$4748 ($eq).
Removed top 20 bits (of 21) from port B of cell top.$flatten\add4_add.\u4.\u6.$verific$equal_24$syn2.v:1398$4749 ($eq).
Removed top 21 bits (of 22) from port B of cell top.$flatten\add4_add.\u4.\u6.$verific$equal_25$syn2.v:1400$4750 ($eq).
Removed top 22 bits (of 23) from port B of cell top.$flatten\add4_add.\u4.\u6.$verific$equal_26$syn2.v:1402$4751 ($eq).
Removed top 23 bits (of 24) from port B of cell top.$flatten\add4_add.\u4.\u6.$verific$equal_27$syn2.v:1404$4752 ($eq).
Removed top 24 bits (of 25) from port B of cell top.$flatten\add4_add.\u4.\u6.$verific$equal_28$syn2.v:1406$4753 ($eq).
Removed top 25 bits (of 26) from port B of cell top.$flatten\add4_add.\u4.\u6.$verific$equal_29$syn2.v:1408$4754 ($eq).
Removed top 26 bits (of 27) from port B of cell top.$flatten\add4_add.\u4.\u6.$verific$equal_30$syn2.v:1410$4755 ($eq).
Removed top 27 bits (of 28) from port B of cell top.$flatten\add4_add.\u4.\u6.$verific$equal_31$syn2.v:1412$4756 ($eq).
Removed top 1 bits (of 2) from port B of cell top.$flatten\add4_add.\u4.\u6.$verific$equal_5$syn2.v:1360$4730 ($eq).
Removed top 2 bits (of 3) from port B of cell top.$flatten\add4_add.\u4.\u6.$verific$equal_6$syn2.v:1362$4731 ($eq).
Removed top 3 bits (of 4) from port B of cell top.$flatten\add4_add.\u4.\u6.$verific$equal_7$syn2.v:1364$4732 ($eq).
Removed top 4 bits (of 5) from port B of cell top.$flatten\add4_add.\u4.\u6.$verific$equal_8$syn2.v:1366$4733 ($eq).
Removed top 5 bits (of 6) from port B of cell top.$flatten\add4_add.\u4.\u6.$verific$equal_9$syn2.v:1368$4734 ($eq).
Removed top 8 bits (of 31) from mux cell top.$flatten\add4_add.$verific$mux_73$syn2.v:1940$1511 ($mux).
Removed top 1 bits (of 28) from port A of cell top.$flatten\add4_add.\u3.$verific$sub_4$syn2.v:2327$1594 ($sub).
Removed top 1 bits (of 28) from port B of cell top.$flatten\add4_add.\u3.$verific$sub_4$syn2.v:2327$1594 ($sub).
Removed top 7 bits (of 8) from port B of cell top.$flatten\add3_add.\u1.$verific$sub_23$syn2.v:2094$4170 ($sub).
Removed top 3 bits (of 8) from port A of cell top.$flatten\add3_add.\u1.$verific$LessThan_47$syn2.v:2113$4193 ($lt).
Removed top 21 bits (of 48) from mux cell top.$flatten\add3_add.\u1.\u7.$auto$bmuxmap.cc:60:execute$5013 ($mux).
Removed top 23 bits (of 48) from mux cell top.$flatten\add3_add.\u1.\u7.$auto$bmuxmap.cc:60:execute$5014 ($mux).
Removed top 25 bits (of 48) from mux cell top.$flatten\add3_add.\u1.\u7.$auto$bmuxmap.cc:60:execute$5015 ($mux).
Removed top 27 bits (of 48) from mux cell top.$flatten\add3_add.\u1.\u7.$auto$bmuxmap.cc:60:execute$5016 ($mux).
Removed top 29 bits (of 48) from mux cell top.$flatten\add3_add.\u1.\u7.$auto$bmuxmap.cc:60:execute$5017 ($mux).
Removed top 31 bits (of 48) from mux cell top.$flatten\add3_add.\u1.\u7.$auto$bmuxmap.cc:60:execute$5018 ($mux).
Removed top 33 bits (of 48) from mux cell top.$flatten\add3_add.\u1.\u7.$auto$bmuxmap.cc:60:execute$5019 ($mux).
Removed top 35 bits (of 48) from mux cell top.$flatten\add3_add.\u1.\u7.$auto$bmuxmap.cc:60:execute$5020 ($mux).
Removed top 37 bits (of 48) from mux cell top.$flatten\add3_add.\u1.\u7.$auto$bmuxmap.cc:60:execute$5021 ($mux).
Removed top 39 bits (of 48) from mux cell top.$flatten\add3_add.\u1.\u7.$auto$bmuxmap.cc:60:execute$5022 ($mux).
Removed top 41 bits (of 48) from mux cell top.$flatten\add3_add.\u1.\u7.$auto$bmuxmap.cc:60:execute$5023 ($mux).
Removed top 43 bits (of 48) from mux cell top.$flatten\add3_add.\u1.\u7.$auto$bmuxmap.cc:60:execute$5024 ($mux).
Removed top 45 bits (of 48) from mux cell top.$flatten\add3_add.\u1.\u7.$auto$bmuxmap.cc:60:execute$5025 ($mux).
Removed top 47 bits (of 48) from mux cell top.$flatten\add3_add.\u1.\u7.$auto$bmuxmap.cc:60:execute$5026 ($mux).
Removed top 21 bits (of 48) from mux cell top.$flatten\add3_add.\u1.\u7.$auto$bmuxmap.cc:60:execute$5046 ($mux).
Removed top 25 bits (of 48) from mux cell top.$flatten\add3_add.\u1.\u7.$auto$bmuxmap.cc:60:execute$5047 ($mux).
Removed top 29 bits (of 48) from mux cell top.$flatten\add3_add.\u1.\u7.$auto$bmuxmap.cc:60:execute$5048 ($mux).
Removed top 33 bits (of 48) from mux cell top.$flatten\add3_add.\u1.\u7.$auto$bmuxmap.cc:60:execute$5049 ($mux).
Removed top 37 bits (of 48) from mux cell top.$flatten\add3_add.\u1.\u7.$auto$bmuxmap.cc:60:execute$5050 ($mux).
Removed top 41 bits (of 48) from mux cell top.$flatten\add3_add.\u1.\u7.$auto$bmuxmap.cc:60:execute$5051 ($mux).
Removed top 45 bits (of 48) from mux cell top.$flatten\add3_add.\u1.\u7.$auto$bmuxmap.cc:60:execute$5052 ($mux).
Removed top 21 bits (of 48) from mux cell top.$flatten\add3_add.\u1.\u7.$auto$bmuxmap.cc:60:execute$5063 ($mux).
Removed top 29 bits (of 48) from mux cell top.$flatten\add3_add.\u1.\u7.$auto$bmuxmap.cc:60:execute$5064 ($mux).
Removed top 37 bits (of 48) from mux cell top.$flatten\add3_add.\u1.\u7.$auto$bmuxmap.cc:60:execute$5065 ($mux).
Removed top 45 bits (of 48) from mux cell top.$flatten\add3_add.\u1.\u7.$auto$bmuxmap.cc:60:execute$5066 ($mux).
Removed top 21 bits (of 48) from mux cell top.$flatten\add3_add.\u1.\u7.$auto$bmuxmap.cc:60:execute$5072 ($mux).
Removed top 37 bits (of 48) from mux cell top.$flatten\add3_add.\u1.\u7.$auto$bmuxmap.cc:60:execute$5073 ($mux).
Removed top 21 bits (of 48) from mux cell top.$flatten\add3_add.\u1.\u7.$auto$bmuxmap.cc:60:execute$5077 ($mux).
Removed top 3 bits (of 9) from port B of cell top.$flatten\add3_add.\u4.$verific$sub_208$syn2.v:1095$3416 ($sub).
Removed top 5 bits (of 6) from port B of cell top.$flatten\add3_add.\u4.$verific$sub_194$syn2.v:1087$3402 ($sub).
Removed top 1 bits (of 9) from mux cell top.$flatten\add3_add.\u4.$verific$mux_220$syn2.v:1103$3428 ($mux).
Removed top 22 bits (of 23) from port B of cell top.$flatten\add3_add.\u4.$verific$add_58$syn2.v:1006$3093 ($add).
Removed top 7 bits (of 8) from port B of cell top.$flatten\add3_add.\u4.$verific$add_202$syn2.v:1091$3410 ($add).
Removed top 7 bits (of 8) from port B of cell top.$flatten\add3_add.\u4.$verific$add_198$syn2.v:1089$3406 ($add).
Removed top 6 bits (of 7) from port B of cell top.$flatten\add3_add.\u4.\u6.$verific$equal_10$syn2.v:1370$4735 ($eq).
Removed top 7 bits (of 8) from port B of cell top.$flatten\add3_add.\u4.\u6.$verific$equal_11$syn2.v:1372$4736 ($eq).
Removed top 8 bits (of 9) from port B of cell top.$flatten\add3_add.\u4.\u6.$verific$equal_12$syn2.v:1374$4737 ($eq).
Removed top 9 bits (of 10) from port B of cell top.$flatten\add3_add.\u4.\u6.$verific$equal_13$syn2.v:1376$4738 ($eq).
Removed top 10 bits (of 11) from port B of cell top.$flatten\add3_add.\u4.\u6.$verific$equal_14$syn2.v:1378$4739 ($eq).
Removed top 11 bits (of 12) from port B of cell top.$flatten\add3_add.\u4.\u6.$verific$equal_15$syn2.v:1380$4740 ($eq).
Removed top 12 bits (of 13) from port B of cell top.$flatten\add3_add.\u4.\u6.$verific$equal_16$syn2.v:1382$4741 ($eq).
Removed top 13 bits (of 14) from port B of cell top.$flatten\add3_add.\u4.\u6.$verific$equal_17$syn2.v:1384$4742 ($eq).
Removed top 14 bits (of 15) from port B of cell top.$flatten\add3_add.\u4.\u6.$verific$equal_18$syn2.v:1386$4743 ($eq).
Removed top 15 bits (of 16) from port B of cell top.$flatten\add3_add.\u4.\u6.$verific$equal_19$syn2.v:1388$4744 ($eq).
Removed top 16 bits (of 17) from port B of cell top.$flatten\add3_add.\u4.\u6.$verific$equal_20$syn2.v:1390$4745 ($eq).
Removed top 17 bits (of 18) from port B of cell top.$flatten\add3_add.\u4.\u6.$verific$equal_21$syn2.v:1392$4746 ($eq).
Removed top 18 bits (of 19) from port B of cell top.$flatten\add3_add.\u4.\u6.$verific$equal_22$syn2.v:1394$4747 ($eq).
Removed top 19 bits (of 20) from port B of cell top.$flatten\add3_add.\u4.\u6.$verific$equal_23$syn2.v:1396$4748 ($eq).
Removed top 20 bits (of 21) from port B of cell top.$flatten\add3_add.\u4.\u6.$verific$equal_24$syn2.v:1398$4749 ($eq).
Removed top 21 bits (of 22) from port B of cell top.$flatten\add3_add.\u4.\u6.$verific$equal_25$syn2.v:1400$4750 ($eq).
Removed top 22 bits (of 23) from port B of cell top.$flatten\add3_add.\u4.\u6.$verific$equal_26$syn2.v:1402$4751 ($eq).
Removed top 23 bits (of 24) from port B of cell top.$flatten\add3_add.\u4.\u6.$verific$equal_27$syn2.v:1404$4752 ($eq).
Removed top 24 bits (of 25) from port B of cell top.$flatten\add3_add.\u4.\u6.$verific$equal_28$syn2.v:1406$4753 ($eq).
Removed top 25 bits (of 26) from port B of cell top.$flatten\add3_add.\u4.\u6.$verific$equal_29$syn2.v:1408$4754 ($eq).
Removed top 26 bits (of 27) from port B of cell top.$flatten\add3_add.\u4.\u6.$verific$equal_30$syn2.v:1410$4755 ($eq).
Removed top 27 bits (of 28) from port B of cell top.$flatten\add3_add.\u4.\u6.$verific$equal_31$syn2.v:1412$4756 ($eq).
Removed top 1 bits (of 2) from port B of cell top.$flatten\add3_add.\u4.\u6.$verific$equal_5$syn2.v:1360$4730 ($eq).
Removed top 2 bits (of 3) from port B of cell top.$flatten\add3_add.\u4.\u6.$verific$equal_6$syn2.v:1362$4731 ($eq).
Removed top 3 bits (of 4) from port B of cell top.$flatten\add3_add.\u4.\u6.$verific$equal_7$syn2.v:1364$4732 ($eq).
Removed top 4 bits (of 5) from port B of cell top.$flatten\add3_add.\u4.\u6.$verific$equal_8$syn2.v:1366$4733 ($eq).
Removed top 5 bits (of 6) from port B of cell top.$flatten\add3_add.\u4.\u6.$verific$equal_9$syn2.v:1368$4734 ($eq).
Removed top 8 bits (of 31) from mux cell top.$flatten\add3_add.$verific$mux_73$syn2.v:1940$1511 ($mux).
Removed top 1 bits (of 28) from port A of cell top.$flatten\add3_add.\u3.$verific$sub_4$syn2.v:2327$1594 ($sub).
Removed top 1 bits (of 28) from port B of cell top.$flatten\add3_add.\u3.$verific$sub_4$syn2.v:2327$1594 ($sub).
Removed top 7 bits (of 8) from port B of cell top.$flatten\add2_add.\u1.$verific$sub_23$syn2.v:2094$4170 ($sub).
Removed top 3 bits (of 8) from port A of cell top.$flatten\add2_add.\u1.$verific$LessThan_47$syn2.v:2113$4193 ($lt).
Removed top 21 bits (of 48) from mux cell top.$flatten\add2_add.\u1.\u7.$auto$bmuxmap.cc:60:execute$5013 ($mux).
Removed top 23 bits (of 48) from mux cell top.$flatten\add2_add.\u1.\u7.$auto$bmuxmap.cc:60:execute$5014 ($mux).
Removed top 25 bits (of 48) from mux cell top.$flatten\add2_add.\u1.\u7.$auto$bmuxmap.cc:60:execute$5015 ($mux).
Removed top 27 bits (of 48) from mux cell top.$flatten\add2_add.\u1.\u7.$auto$bmuxmap.cc:60:execute$5016 ($mux).
Removed top 29 bits (of 48) from mux cell top.$flatten\add2_add.\u1.\u7.$auto$bmuxmap.cc:60:execute$5017 ($mux).
Removed top 31 bits (of 48) from mux cell top.$flatten\add2_add.\u1.\u7.$auto$bmuxmap.cc:60:execute$5018 ($mux).
Removed top 33 bits (of 48) from mux cell top.$flatten\add2_add.\u1.\u7.$auto$bmuxmap.cc:60:execute$5019 ($mux).
Removed top 35 bits (of 48) from mux cell top.$flatten\add2_add.\u1.\u7.$auto$bmuxmap.cc:60:execute$5020 ($mux).
Removed top 37 bits (of 48) from mux cell top.$flatten\add2_add.\u1.\u7.$auto$bmuxmap.cc:60:execute$5021 ($mux).
Removed top 39 bits (of 48) from mux cell top.$flatten\add2_add.\u1.\u7.$auto$bmuxmap.cc:60:execute$5022 ($mux).
Removed top 41 bits (of 48) from mux cell top.$flatten\add2_add.\u1.\u7.$auto$bmuxmap.cc:60:execute$5023 ($mux).
Removed top 43 bits (of 48) from mux cell top.$flatten\add2_add.\u1.\u7.$auto$bmuxmap.cc:60:execute$5024 ($mux).
Removed top 45 bits (of 48) from mux cell top.$flatten\add2_add.\u1.\u7.$auto$bmuxmap.cc:60:execute$5025 ($mux).
Removed top 47 bits (of 48) from mux cell top.$flatten\add2_add.\u1.\u7.$auto$bmuxmap.cc:60:execute$5026 ($mux).
Removed top 21 bits (of 48) from mux cell top.$flatten\add2_add.\u1.\u7.$auto$bmuxmap.cc:60:execute$5046 ($mux).
Removed top 25 bits (of 48) from mux cell top.$flatten\add2_add.\u1.\u7.$auto$bmuxmap.cc:60:execute$5047 ($mux).
Removed top 29 bits (of 48) from mux cell top.$flatten\add2_add.\u1.\u7.$auto$bmuxmap.cc:60:execute$5048 ($mux).
Removed top 33 bits (of 48) from mux cell top.$flatten\add2_add.\u1.\u7.$auto$bmuxmap.cc:60:execute$5049 ($mux).
Removed top 37 bits (of 48) from mux cell top.$flatten\add2_add.\u1.\u7.$auto$bmuxmap.cc:60:execute$5050 ($mux).
Removed top 41 bits (of 48) from mux cell top.$flatten\add2_add.\u1.\u7.$auto$bmuxmap.cc:60:execute$5051 ($mux).
Removed top 45 bits (of 48) from mux cell top.$flatten\add2_add.\u1.\u7.$auto$bmuxmap.cc:60:execute$5052 ($mux).
Removed top 21 bits (of 48) from mux cell top.$flatten\add2_add.\u1.\u7.$auto$bmuxmap.cc:60:execute$5063 ($mux).
Removed top 29 bits (of 48) from mux cell top.$flatten\add2_add.\u1.\u7.$auto$bmuxmap.cc:60:execute$5064 ($mux).
Removed top 37 bits (of 48) from mux cell top.$flatten\add2_add.\u1.\u7.$auto$bmuxmap.cc:60:execute$5065 ($mux).
Removed top 45 bits (of 48) from mux cell top.$flatten\add2_add.\u1.\u7.$auto$bmuxmap.cc:60:execute$5066 ($mux).
Removed top 21 bits (of 48) from mux cell top.$flatten\add2_add.\u1.\u7.$auto$bmuxmap.cc:60:execute$5072 ($mux).
Removed top 37 bits (of 48) from mux cell top.$flatten\add2_add.\u1.\u7.$auto$bmuxmap.cc:60:execute$5073 ($mux).
Removed top 21 bits (of 48) from mux cell top.$flatten\add2_add.\u1.\u7.$auto$bmuxmap.cc:60:execute$5077 ($mux).
Removed top 3 bits (of 9) from port B of cell top.$flatten\add2_add.\u4.$verific$sub_208$syn2.v:1095$3416 ($sub).
Removed top 5 bits (of 6) from port B of cell top.$flatten\add2_add.\u4.$verific$sub_194$syn2.v:1087$3402 ($sub).
Removed top 1 bits (of 9) from mux cell top.$flatten\add2_add.\u4.$verific$mux_220$syn2.v:1103$3428 ($mux).
Removed top 22 bits (of 23) from port B of cell top.$flatten\add2_add.\u4.$verific$add_58$syn2.v:1006$3093 ($add).
Removed top 7 bits (of 8) from port B of cell top.$flatten\add2_add.\u4.$verific$add_202$syn2.v:1091$3410 ($add).
Removed top 7 bits (of 8) from port B of cell top.$flatten\add2_add.\u4.$verific$add_198$syn2.v:1089$3406 ($add).
Removed top 6 bits (of 7) from port B of cell top.$flatten\add2_add.\u4.\u6.$verific$equal_10$syn2.v:1370$4735 ($eq).
Removed top 7 bits (of 8) from port B of cell top.$flatten\add2_add.\u4.\u6.$verific$equal_11$syn2.v:1372$4736 ($eq).
Removed top 8 bits (of 9) from port B of cell top.$flatten\add2_add.\u4.\u6.$verific$equal_12$syn2.v:1374$4737 ($eq).
Removed top 9 bits (of 10) from port B of cell top.$flatten\add2_add.\u4.\u6.$verific$equal_13$syn2.v:1376$4738 ($eq).
Removed top 10 bits (of 11) from port B of cell top.$flatten\add2_add.\u4.\u6.$verific$equal_14$syn2.v:1378$4739 ($eq).
Removed top 11 bits (of 12) from port B of cell top.$flatten\add2_add.\u4.\u6.$verific$equal_15$syn2.v:1380$4740 ($eq).
Removed top 12 bits (of 13) from port B of cell top.$flatten\add2_add.\u4.\u6.$verific$equal_16$syn2.v:1382$4741 ($eq).
Removed top 13 bits (of 14) from port B of cell top.$flatten\add2_add.\u4.\u6.$verific$equal_17$syn2.v:1384$4742 ($eq).
Removed top 14 bits (of 15) from port B of cell top.$flatten\add2_add.\u4.\u6.$verific$equal_18$syn2.v:1386$4743 ($eq).
Removed top 15 bits (of 16) from port B of cell top.$flatten\add2_add.\u4.\u6.$verific$equal_19$syn2.v:1388$4744 ($eq).
Removed top 16 bits (of 17) from port B of cell top.$flatten\add2_add.\u4.\u6.$verific$equal_20$syn2.v:1390$4745 ($eq).
Removed top 17 bits (of 18) from port B of cell top.$flatten\add2_add.\u4.\u6.$verific$equal_21$syn2.v:1392$4746 ($eq).
Removed top 18 bits (of 19) from port B of cell top.$flatten\add2_add.\u4.\u6.$verific$equal_22$syn2.v:1394$4747 ($eq).
Removed top 19 bits (of 20) from port B of cell top.$flatten\add2_add.\u4.\u6.$verific$equal_23$syn2.v:1396$4748 ($eq).
Removed top 20 bits (of 21) from port B of cell top.$flatten\add2_add.\u4.\u6.$verific$equal_24$syn2.v:1398$4749 ($eq).
Removed top 21 bits (of 22) from port B of cell top.$flatten\add2_add.\u4.\u6.$verific$equal_25$syn2.v:1400$4750 ($eq).
Removed top 22 bits (of 23) from port B of cell top.$flatten\add2_add.\u4.\u6.$verific$equal_26$syn2.v:1402$4751 ($eq).
Removed top 23 bits (of 24) from port B of cell top.$flatten\add2_add.\u4.\u6.$verific$equal_27$syn2.v:1404$4752 ($eq).
Removed top 24 bits (of 25) from port B of cell top.$flatten\add2_add.\u4.\u6.$verific$equal_28$syn2.v:1406$4753 ($eq).
Removed top 25 bits (of 26) from port B of cell top.$flatten\add2_add.\u4.\u6.$verific$equal_29$syn2.v:1408$4754 ($eq).
Removed top 26 bits (of 27) from port B of cell top.$flatten\add2_add.\u4.\u6.$verific$equal_30$syn2.v:1410$4755 ($eq).
Removed top 27 bits (of 28) from port B of cell top.$flatten\add2_add.\u4.\u6.$verific$equal_31$syn2.v:1412$4756 ($eq).
Removed top 1 bits (of 2) from port B of cell top.$flatten\add2_add.\u4.\u6.$verific$equal_5$syn2.v:1360$4730 ($eq).
Removed top 2 bits (of 3) from port B of cell top.$flatten\add2_add.\u4.\u6.$verific$equal_6$syn2.v:1362$4731 ($eq).
Removed top 3 bits (of 4) from port B of cell top.$flatten\add2_add.\u4.\u6.$verific$equal_7$syn2.v:1364$4732 ($eq).
Removed top 4 bits (of 5) from port B of cell top.$flatten\add2_add.\u4.\u6.$verific$equal_8$syn2.v:1366$4733 ($eq).
Removed top 5 bits (of 6) from port B of cell top.$flatten\add2_add.\u4.\u6.$verific$equal_9$syn2.v:1368$4734 ($eq).
Removed top 8 bits (of 31) from mux cell top.$flatten\add2_add.$verific$mux_73$syn2.v:1940$1511 ($mux).
Removed top 1 bits (of 28) from port A of cell top.$flatten\add2_add.\u3.$verific$sub_4$syn2.v:2327$1594 ($sub).
Removed top 1 bits (of 28) from port B of cell top.$flatten\add2_add.\u3.$verific$sub_4$syn2.v:2327$1594 ($sub).
Removed top 7 bits (of 8) from port B of cell top.$flatten\add1_add.\u1.$verific$sub_23$syn2.v:2094$4170 ($sub).
Removed top 3 bits (of 8) from port A of cell top.$flatten\add1_add.\u1.$verific$LessThan_47$syn2.v:2113$4193 ($lt).
Removed top 21 bits (of 48) from mux cell top.$flatten\add1_add.\u1.\u7.$auto$bmuxmap.cc:60:execute$5013 ($mux).
Removed top 23 bits (of 48) from mux cell top.$flatten\add1_add.\u1.\u7.$auto$bmuxmap.cc:60:execute$5014 ($mux).
Removed top 25 bits (of 48) from mux cell top.$flatten\add1_add.\u1.\u7.$auto$bmuxmap.cc:60:execute$5015 ($mux).
Removed top 27 bits (of 48) from mux cell top.$flatten\add1_add.\u1.\u7.$auto$bmuxmap.cc:60:execute$5016 ($mux).
Removed top 29 bits (of 48) from mux cell top.$flatten\add1_add.\u1.\u7.$auto$bmuxmap.cc:60:execute$5017 ($mux).
Removed top 31 bits (of 48) from mux cell top.$flatten\add1_add.\u1.\u7.$auto$bmuxmap.cc:60:execute$5018 ($mux).
Removed top 33 bits (of 48) from mux cell top.$flatten\add1_add.\u1.\u7.$auto$bmuxmap.cc:60:execute$5019 ($mux).
Removed top 35 bits (of 48) from mux cell top.$flatten\add1_add.\u1.\u7.$auto$bmuxmap.cc:60:execute$5020 ($mux).
Removed top 37 bits (of 48) from mux cell top.$flatten\add1_add.\u1.\u7.$auto$bmuxmap.cc:60:execute$5021 ($mux).
Removed top 39 bits (of 48) from mux cell top.$flatten\add1_add.\u1.\u7.$auto$bmuxmap.cc:60:execute$5022 ($mux).
Removed top 41 bits (of 48) from mux cell top.$flatten\add1_add.\u1.\u7.$auto$bmuxmap.cc:60:execute$5023 ($mux).
Removed top 43 bits (of 48) from mux cell top.$flatten\add1_add.\u1.\u7.$auto$bmuxmap.cc:60:execute$5024 ($mux).
Removed top 45 bits (of 48) from mux cell top.$flatten\add1_add.\u1.\u7.$auto$bmuxmap.cc:60:execute$5025 ($mux).
Removed top 47 bits (of 48) from mux cell top.$flatten\add1_add.\u1.\u7.$auto$bmuxmap.cc:60:execute$5026 ($mux).
Removed top 21 bits (of 48) from mux cell top.$flatten\add1_add.\u1.\u7.$auto$bmuxmap.cc:60:execute$5046 ($mux).
Removed top 25 bits (of 48) from mux cell top.$flatten\add1_add.\u1.\u7.$auto$bmuxmap.cc:60:execute$5047 ($mux).
Removed top 29 bits (of 48) from mux cell top.$flatten\add1_add.\u1.\u7.$auto$bmuxmap.cc:60:execute$5048 ($mux).
Removed top 33 bits (of 48) from mux cell top.$flatten\add1_add.\u1.\u7.$auto$bmuxmap.cc:60:execute$5049 ($mux).
Removed top 37 bits (of 48) from mux cell top.$flatten\add1_add.\u1.\u7.$auto$bmuxmap.cc:60:execute$5050 ($mux).
Removed top 41 bits (of 48) from mux cell top.$flatten\add1_add.\u1.\u7.$auto$bmuxmap.cc:60:execute$5051 ($mux).
Removed top 45 bits (of 48) from mux cell top.$flatten\add1_add.\u1.\u7.$auto$bmuxmap.cc:60:execute$5052 ($mux).
Removed top 21 bits (of 48) from mux cell top.$flatten\add1_add.\u1.\u7.$auto$bmuxmap.cc:60:execute$5063 ($mux).
Removed top 29 bits (of 48) from mux cell top.$flatten\add1_add.\u1.\u7.$auto$bmuxmap.cc:60:execute$5064 ($mux).
Removed top 37 bits (of 48) from mux cell top.$flatten\add1_add.\u1.\u7.$auto$bmuxmap.cc:60:execute$5065 ($mux).
Removed top 45 bits (of 48) from mux cell top.$flatten\add1_add.\u1.\u7.$auto$bmuxmap.cc:60:execute$5066 ($mux).
Removed top 21 bits (of 48) from mux cell top.$flatten\add1_add.\u1.\u7.$auto$bmuxmap.cc:60:execute$5072 ($mux).
Removed top 37 bits (of 48) from mux cell top.$flatten\add1_add.\u1.\u7.$auto$bmuxmap.cc:60:execute$5073 ($mux).
Removed top 21 bits (of 48) from mux cell top.$flatten\add1_add.\u1.\u7.$auto$bmuxmap.cc:60:execute$5077 ($mux).
Removed top 3 bits (of 9) from port B of cell top.$flatten\add1_add.\u4.$verific$sub_208$syn2.v:1095$3416 ($sub).
Removed top 5 bits (of 6) from port B of cell top.$flatten\add1_add.\u4.$verific$sub_194$syn2.v:1087$3402 ($sub).
Removed top 1 bits (of 9) from mux cell top.$flatten\add1_add.\u4.$verific$mux_220$syn2.v:1103$3428 ($mux).
Removed top 22 bits (of 23) from port B of cell top.$flatten\add1_add.\u4.$verific$add_58$syn2.v:1006$3093 ($add).
Removed top 7 bits (of 8) from port B of cell top.$flatten\add1_add.\u4.$verific$add_202$syn2.v:1091$3410 ($add).
Removed top 7 bits (of 8) from port B of cell top.$flatten\add1_add.\u4.$verific$add_198$syn2.v:1089$3406 ($add).
Removed top 6 bits (of 7) from port B of cell top.$flatten\add1_add.\u4.\u6.$verific$equal_10$syn2.v:1370$4735 ($eq).
Removed top 7 bits (of 8) from port B of cell top.$flatten\add1_add.\u4.\u6.$verific$equal_11$syn2.v:1372$4736 ($eq).
Removed top 8 bits (of 9) from port B of cell top.$flatten\add1_add.\u4.\u6.$verific$equal_12$syn2.v:1374$4737 ($eq).
Removed top 9 bits (of 10) from port B of cell top.$flatten\add1_add.\u4.\u6.$verific$equal_13$syn2.v:1376$4738 ($eq).
Removed top 10 bits (of 11) from port B of cell top.$flatten\add1_add.\u4.\u6.$verific$equal_14$syn2.v:1378$4739 ($eq).
Removed top 11 bits (of 12) from port B of cell top.$flatten\add1_add.\u4.\u6.$verific$equal_15$syn2.v:1380$4740 ($eq).
Removed top 12 bits (of 13) from port B of cell top.$flatten\add1_add.\u4.\u6.$verific$equal_16$syn2.v:1382$4741 ($eq).
Removed top 13 bits (of 14) from port B of cell top.$flatten\add1_add.\u4.\u6.$verific$equal_17$syn2.v:1384$4742 ($eq).
Removed top 14 bits (of 15) from port B of cell top.$flatten\add1_add.\u4.\u6.$verific$equal_18$syn2.v:1386$4743 ($eq).
Removed top 15 bits (of 16) from port B of cell top.$flatten\add1_add.\u4.\u6.$verific$equal_19$syn2.v:1388$4744 ($eq).
Removed top 16 bits (of 17) from port B of cell top.$flatten\add1_add.\u4.\u6.$verific$equal_20$syn2.v:1390$4745 ($eq).
Removed top 17 bits (of 18) from port B of cell top.$flatten\add1_add.\u4.\u6.$verific$equal_21$syn2.v:1392$4746 ($eq).
Removed top 18 bits (of 19) from port B of cell top.$flatten\add1_add.\u4.\u6.$verific$equal_22$syn2.v:1394$4747 ($eq).
Removed top 19 bits (of 20) from port B of cell top.$flatten\add1_add.\u4.\u6.$verific$equal_23$syn2.v:1396$4748 ($eq).
Removed top 20 bits (of 21) from port B of cell top.$flatten\add1_add.\u4.\u6.$verific$equal_24$syn2.v:1398$4749 ($eq).
Removed top 21 bits (of 22) from port B of cell top.$flatten\add1_add.\u4.\u6.$verific$equal_25$syn2.v:1400$4750 ($eq).
Removed top 22 bits (of 23) from port B of cell top.$flatten\add1_add.\u4.\u6.$verific$equal_26$syn2.v:1402$4751 ($eq).
Removed top 23 bits (of 24) from port B of cell top.$flatten\add1_add.\u4.\u6.$verific$equal_27$syn2.v:1404$4752 ($eq).
Removed top 24 bits (of 25) from port B of cell top.$flatten\add1_add.\u4.\u6.$verific$equal_28$syn2.v:1406$4753 ($eq).
Removed top 25 bits (of 26) from port B of cell top.$flatten\add1_add.\u4.\u6.$verific$equal_29$syn2.v:1408$4754 ($eq).
Removed top 26 bits (of 27) from port B of cell top.$flatten\add1_add.\u4.\u6.$verific$equal_30$syn2.v:1410$4755 ($eq).
Removed top 27 bits (of 28) from port B of cell top.$flatten\add1_add.\u4.\u6.$verific$equal_31$syn2.v:1412$4756 ($eq).
Removed top 1 bits (of 2) from port B of cell top.$flatten\add1_add.\u4.\u6.$verific$equal_5$syn2.v:1360$4730 ($eq).
Removed top 2 bits (of 3) from port B of cell top.$flatten\add1_add.\u4.\u6.$verific$equal_6$syn2.v:1362$4731 ($eq).
Removed top 3 bits (of 4) from port B of cell top.$flatten\add1_add.\u4.\u6.$verific$equal_7$syn2.v:1364$4732 ($eq).
Removed top 4 bits (of 5) from port B of cell top.$flatten\add1_add.\u4.\u6.$verific$equal_8$syn2.v:1366$4733 ($eq).
Removed top 5 bits (of 6) from port B of cell top.$flatten\add1_add.\u4.\u6.$verific$equal_9$syn2.v:1368$4734 ($eq).
Removed top 8 bits (of 31) from mux cell top.$flatten\add1_add.$verific$mux_73$syn2.v:1940$1511 ($mux).
Removed top 1 bits (of 28) from port A of cell top.$flatten\add1_add.\u3.$verific$sub_4$syn2.v:2327$1594 ($sub).
Removed top 1 bits (of 28) from port B of cell top.$flatten\add1_add.\u3.$verific$sub_4$syn2.v:2327$1594 ($sub).
Removed top 1 bits (of 4) from wire top.$flatten\add1_add.\u1.$auto$bmuxmap.cc:58:execute$4897.
Removed top 2 bits (of 16) from wire top.$flatten\add1_add.\u1.$auto$bmuxmap.cc:58:execute$4907.
Removed top 6 bits (of 8) from wire top.$flatten\add1_add.\u1.$auto$bmuxmap.cc:58:execute$4924.
Removed top 911 bits (of 1536) from wire top.$flatten\add1_add.\u1.\u7.$auto$bmuxmap.cc:58:execute$5012.
Removed top 133 bits (of 192) from wire top.$flatten\add1_add.\u1.\u7.$auto$bmuxmap.cc:58:execute$5071.
Removed top 7 bits (of 32) from wire top.$flatten\add1_add.\u4.\u7.$auto$bmuxmap.cc:58:execute$5081.
Removed top 3 bits (of 16) from wire top.$flatten\add1_add.\u4.\u7.$auto$bmuxmap.cc:58:execute$5114.
Removed top 1 bits (of 8) from wire top.$flatten\add1_add.\u4.\u7.$auto$bmuxmap.cc:58:execute$5131.
Removed top 336 bits (of 1536) from wire top.$flatten\add1_add.\u4.\u7.$auto$bmuxmap.cc:58:execute$5150.
Removed top 144 bits (of 768) from wire top.$flatten\add1_add.\u4.\u7.$auto$bmuxmap.cc:58:execute$5183.
Removed top 1 bits (of 4) from wire top.$flatten\add2_add.\u1.$auto$bmuxmap.cc:58:execute$4897.
Removed top 2 bits (of 16) from wire top.$flatten\add2_add.\u1.$auto$bmuxmap.cc:58:execute$4907.
Removed top 6 bits (of 8) from wire top.$flatten\add2_add.\u1.$auto$bmuxmap.cc:58:execute$4924.
Removed top 911 bits (of 1536) from wire top.$flatten\add2_add.\u1.\u7.$auto$bmuxmap.cc:58:execute$5012.
Removed top 133 bits (of 192) from wire top.$flatten\add2_add.\u1.\u7.$auto$bmuxmap.cc:58:execute$5071.
Removed top 7 bits (of 32) from wire top.$flatten\add2_add.\u4.\u7.$auto$bmuxmap.cc:58:execute$5081.
Removed top 3 bits (of 16) from wire top.$flatten\add2_add.\u4.\u7.$auto$bmuxmap.cc:58:execute$5114.
Removed top 1 bits (of 8) from wire top.$flatten\add2_add.\u4.\u7.$auto$bmuxmap.cc:58:execute$5131.
Removed top 336 bits (of 1536) from wire top.$flatten\add2_add.\u4.\u7.$auto$bmuxmap.cc:58:execute$5150.
Removed top 144 bits (of 768) from wire top.$flatten\add2_add.\u4.\u7.$auto$bmuxmap.cc:58:execute$5183.
Removed top 1 bits (of 4) from wire top.$flatten\add3_add.\u1.$auto$bmuxmap.cc:58:execute$4897.
Removed top 2 bits (of 16) from wire top.$flatten\add3_add.\u1.$auto$bmuxmap.cc:58:execute$4907.
Removed top 3 bits (of 4) from wire top.$flatten\add3_add.\u1.$auto$bmuxmap.cc:58:execute$4933.
Removed top 911 bits (of 1536) from wire top.$flatten\add3_add.\u1.\u7.$auto$bmuxmap.cc:58:execute$5012.
Removed top 477 bits (of 768) from wire top.$flatten\add3_add.\u1.\u7.$auto$bmuxmap.cc:58:execute$5045.
Removed top 133 bits (of 192) from wire top.$flatten\add3_add.\u1.\u7.$auto$bmuxmap.cc:58:execute$5071.
Removed top 7 bits (of 32) from wire top.$flatten\add3_add.\u4.\u7.$auto$bmuxmap.cc:58:execute$5081.
Removed top 3 bits (of 16) from wire top.$flatten\add3_add.\u4.\u7.$auto$bmuxmap.cc:58:execute$5114.
Removed top 1 bits (of 8) from wire top.$flatten\add3_add.\u4.\u7.$auto$bmuxmap.cc:58:execute$5131.
Removed top 336 bits (of 1536) from wire top.$flatten\add3_add.\u4.\u7.$auto$bmuxmap.cc:58:execute$5150.
Removed top 144 bits (of 768) from wire top.$flatten\add3_add.\u4.\u7.$auto$bmuxmap.cc:58:execute$5183.
Removed top 1 bits (of 4) from wire top.$flatten\add4_add.\u1.$auto$bmuxmap.cc:58:execute$4897.
Removed top 2 bits (of 16) from wire top.$flatten\add4_add.\u1.$auto$bmuxmap.cc:58:execute$4907.
Removed top 6 bits (of 8) from wire top.$flatten\add4_add.\u1.$auto$bmuxmap.cc:58:execute$4924.
Removed top 911 bits (of 1536) from wire top.$flatten\add4_add.\u1.\u7.$auto$bmuxmap.cc:58:execute$5012.
Removed top 477 bits (of 768) from wire top.$flatten\add4_add.\u1.\u7.$auto$bmuxmap.cc:58:execute$5045.
Removed top 133 bits (of 192) from wire top.$flatten\add4_add.\u1.\u7.$auto$bmuxmap.cc:58:execute$5071.
Removed top 7 bits (of 32) from wire top.$flatten\add4_add.\u4.\u7.$auto$bmuxmap.cc:58:execute$5081.
Removed top 3 bits (of 16) from wire top.$flatten\add4_add.\u4.\u7.$auto$bmuxmap.cc:58:execute$5114.
Removed top 1 bits (of 8) from wire top.$flatten\add4_add.\u4.\u7.$auto$bmuxmap.cc:58:execute$5131.
Removed top 336 bits (of 1536) from wire top.$flatten\add4_add.\u4.\u7.$auto$bmuxmap.cc:58:execute$5150.
Removed top 144 bits (of 768) from wire top.$flatten\add4_add.\u4.\u7.$auto$bmuxmap.cc:58:execute$5183.
Removed top 1 bits (of 4) from wire top.$flatten\add5_add.\u1.$auto$bmuxmap.cc:58:execute$4897.
Removed top 2 bits (of 16) from wire top.$flatten\add5_add.\u1.$auto$bmuxmap.cc:58:execute$4907.
Removed top 1 bits (of 8) from wire top.$flatten\add5_add.\u1.$auto$bmuxmap.cc:58:execute$4924.
Removed top 911 bits (of 1536) from wire top.$flatten\add5_add.\u1.\u7.$auto$bmuxmap.cc:58:execute$5012.
Removed top 477 bits (of 768) from wire top.$flatten\add5_add.\u1.\u7.$auto$bmuxmap.cc:58:execute$5045.
Removed top 237 bits (of 384) from wire top.$flatten\add5_add.\u1.\u7.$auto$bmuxmap.cc:58:execute$5062.
Removed top 133 bits (of 192) from wire top.$flatten\add5_add.\u1.\u7.$auto$bmuxmap.cc:58:execute$5071.
Removed top 7 bits (of 32) from wire top.$flatten\add5_add.\u4.\u7.$auto$bmuxmap.cc:58:execute$5081.
Removed top 3 bits (of 16) from wire top.$flatten\add5_add.\u4.\u7.$auto$bmuxmap.cc:58:execute$5114.
Removed top 1 bits (of 8) from wire top.$flatten\add5_add.\u4.\u7.$auto$bmuxmap.cc:58:execute$5131.
Removed top 336 bits (of 1536) from wire top.$flatten\add5_add.\u4.\u7.$auto$bmuxmap.cc:58:execute$5150.
Removed top 144 bits (of 768) from wire top.$flatten\add5_add.\u4.\u7.$auto$bmuxmap.cc:58:execute$5183.
Removed top 7 bits (of 32) from wire top.$flatten\x1_mul.\u4.\u1.$auto$bmuxmap.cc:58:execute$4943.
Removed top 336 bits (of 1536) from wire top.$flatten\x1_mul.\u4.\u1.$auto$bmuxmap.cc:58:execute$5012.
Removed top 144 bits (of 768) from wire top.$flatten\x1_mul.\u4.\u1.$auto$bmuxmap.cc:58:execute$5045.
Removed top 48 bits (of 384) from wire top.$flatten\x1_mul.\u4.\u1.$auto$bmuxmap.cc:58:execute$5062.
Removed top 7 bits (of 32) from wire top.$flatten\x2_mul.\u4.\u1.$auto$bmuxmap.cc:58:execute$4943.
Removed top 1 bits (of 8) from wire top.$flatten\x2_mul.\u4.\u1.$auto$bmuxmap.cc:58:execute$4993.
Removed top 336 bits (of 1536) from wire top.$flatten\x2_mul.\u4.\u1.$auto$bmuxmap.cc:58:execute$5012.
Removed top 144 bits (of 768) from wire top.$flatten\x2_mul.\u4.\u1.$auto$bmuxmap.cc:58:execute$5045.
Removed top 7 bits (of 32) from wire top.$flatten\x2_mul.\u4.\u7.$auto$bmuxmap.cc:58:execute$5081.
Removed top 336 bits (of 1536) from wire top.$flatten\x2_mul.\u4.\u7.$auto$bmuxmap.cc:58:execute$5150.
Removed top 144 bits (of 768) from wire top.$flatten\x2_mul.\u4.\u7.$auto$bmuxmap.cc:58:execute$5183.
Removed top 48 bits (of 384) from wire top.$flatten\x2_mul.\u4.\u7.$auto$bmuxmap.cc:58:execute$5200.
Removed top 7 bits (of 32) from wire top.$flatten\x3_mul.\u4.\u1.$auto$bmuxmap.cc:58:execute$4943.
Removed top 336 bits (of 1536) from wire top.$flatten\x3_mul.\u4.\u1.$auto$bmuxmap.cc:58:execute$5012.
Removed top 144 bits (of 768) from wire top.$flatten\x3_mul.\u4.\u1.$auto$bmuxmap.cc:58:execute$5045.
Removed top 7 bits (of 32) from wire top.$flatten\x3_mul.\u4.\u7.$auto$bmuxmap.cc:58:execute$5081.
Removed top 1 bits (of 8) from wire top.$flatten\x3_mul.\u4.\u7.$auto$bmuxmap.cc:58:execute$5131.
Removed top 336 bits (of 1536) from wire top.$flatten\x3_mul.\u4.\u7.$auto$bmuxmap.cc:58:execute$5150.
Removed top 144 bits (of 768) from wire top.$flatten\x3_mul.\u4.\u7.$auto$bmuxmap.cc:58:execute$5183.
Removed top 48 bits (of 384) from wire top.$flatten\x3_mul.\u4.\u7.$auto$bmuxmap.cc:58:execute$5200.
Removed top 7 bits (of 32) from wire top.$flatten\x4_mul.\u4.\u1.$auto$bmuxmap.cc:58:execute$4943.
Removed top 1 bits (of 8) from wire top.$flatten\x4_mul.\u4.\u1.$auto$bmuxmap.cc:58:execute$4993.
Removed top 336 bits (of 1536) from wire top.$flatten\x4_mul.\u4.\u1.$auto$bmuxmap.cc:58:execute$5012.
Removed top 144 bits (of 768) from wire top.$flatten\x4_mul.\u4.\u1.$auto$bmuxmap.cc:58:execute$5045.
Removed top 7 bits (of 32) from wire top.$flatten\x4_mul.\u4.\u7.$auto$bmuxmap.cc:58:execute$5081.
Removed top 336 bits (of 1536) from wire top.$flatten\x4_mul.\u4.\u7.$auto$bmuxmap.cc:58:execute$5150.
Removed top 144 bits (of 768) from wire top.$flatten\x4_mul.\u4.\u7.$auto$bmuxmap.cc:58:execute$5183.

yosys> peepopt

3.57. Executing PEEPOPT pass (run peephole optimizers).

yosys> opt_clean

3.58. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \top..
Removed 0 unused cells and 81 unused wires.
<suppressed ~1 debug messages>

yosys> bmuxmap

3.59. Executing BMUXMAP pass.

yosys> demuxmap

3.60. Executing DEMUXMAP pass.

yosys> clean_zerowidth

yosys> alumacc

3.61. Executing ALUMACC pass (create $alu and $macc cells).
Extracting $alu and $macc cells in module top:
  creating $macc model for $flatten\add1_add.\u1.$verific$sub_21$syn2.v:2093$4168 ($sub).
  creating $macc model for $flatten\add1_add.\u1.$verific$sub_23$syn2.v:2094$4170 ($sub).
  creating $macc model for $flatten\add1_add.\u3.$verific$add_3$syn2.v:2327$1593 ($add).
  creating $macc model for $flatten\add1_add.\u3.$verific$sub_4$syn2.v:2327$1594 ($sub).
  creating $macc model for $flatten\add1_add.\u4.$verific$add_198$syn2.v:1089$3406 ($add).
  creating $macc model for $flatten\add1_add.\u4.$verific$add_202$syn2.v:1091$3410 ($add).
  creating $macc model for $flatten\add1_add.\u4.$verific$add_58$syn2.v:1006$3093 ($add).
  creating $macc model for $flatten\add1_add.\u4.$verific$sub_194$syn2.v:1087$3402 ($sub).
  creating $macc model for $flatten\add1_add.\u4.$verific$sub_208$syn2.v:1095$3416 ($sub).
  creating $macc model for $flatten\add2_add.\u1.$verific$sub_21$syn2.v:2093$4168 ($sub).
  creating $macc model for $flatten\add2_add.\u1.$verific$sub_23$syn2.v:2094$4170 ($sub).
  creating $macc model for $flatten\add2_add.\u3.$verific$add_3$syn2.v:2327$1593 ($add).
  creating $macc model for $flatten\add2_add.\u3.$verific$sub_4$syn2.v:2327$1594 ($sub).
  creating $macc model for $flatten\add2_add.\u4.$verific$add_198$syn2.v:1089$3406 ($add).
  creating $macc model for $flatten\add2_add.\u4.$verific$add_202$syn2.v:1091$3410 ($add).
  creating $macc model for $flatten\add2_add.\u4.$verific$add_58$syn2.v:1006$3093 ($add).
  creating $macc model for $flatten\add2_add.\u4.$verific$sub_194$syn2.v:1087$3402 ($sub).
  creating $macc model for $flatten\add2_add.\u4.$verific$sub_208$syn2.v:1095$3416 ($sub).
  creating $macc model for $flatten\add3_add.\u1.$verific$sub_21$syn2.v:2093$4168 ($sub).
  creating $macc model for $flatten\add3_add.\u1.$verific$sub_23$syn2.v:2094$4170 ($sub).
  creating $macc model for $flatten\add3_add.\u3.$verific$add_3$syn2.v:2327$1593 ($add).
  creating $macc model for $flatten\add3_add.\u3.$verific$sub_4$syn2.v:2327$1594 ($sub).
  creating $macc model for $flatten\add3_add.\u4.$verific$add_198$syn2.v:1089$3406 ($add).
  creating $macc model for $flatten\add3_add.\u4.$verific$add_202$syn2.v:1091$3410 ($add).
  creating $macc model for $flatten\add3_add.\u4.$verific$add_58$syn2.v:1006$3093 ($add).
  creating $macc model for $flatten\add3_add.\u4.$verific$sub_194$syn2.v:1087$3402 ($sub).
  creating $macc model for $flatten\add3_add.\u4.$verific$sub_208$syn2.v:1095$3416 ($sub).
  creating $macc model for $flatten\add4_add.\u1.$verific$sub_21$syn2.v:2093$4168 ($sub).
  creating $macc model for $flatten\add4_add.\u1.$verific$sub_23$syn2.v:2094$4170 ($sub).
  creating $macc model for $flatten\add4_add.\u3.$verific$add_3$syn2.v:2327$1593 ($add).
  creating $macc model for $flatten\add4_add.\u3.$verific$sub_4$syn2.v:2327$1594 ($sub).
  creating $macc model for $flatten\add4_add.\u4.$verific$add_198$syn2.v:1089$3406 ($add).
  creating $macc model for $flatten\add4_add.\u4.$verific$add_202$syn2.v:1091$3410 ($add).
  creating $macc model for $flatten\add4_add.\u4.$verific$add_58$syn2.v:1006$3093 ($add).
  creating $macc model for $flatten\add4_add.\u4.$verific$sub_194$syn2.v:1087$3402 ($sub).
  creating $macc model for $flatten\add4_add.\u4.$verific$sub_208$syn2.v:1095$3416 ($sub).
  creating $macc model for $flatten\add5_add.\u1.$verific$sub_21$syn2.v:2093$4168 ($sub).
  creating $macc model for $flatten\add5_add.\u1.$verific$sub_23$syn2.v:2094$4170 ($sub).
  creating $macc model for $flatten\add5_add.\u3.$verific$add_3$syn2.v:2327$1593 ($add).
  creating $macc model for $flatten\add5_add.\u3.$verific$sub_4$syn2.v:2327$1594 ($sub).
  creating $macc model for $flatten\add5_add.\u4.$verific$add_198$syn2.v:1089$3406 ($add).
  creating $macc model for $flatten\add5_add.\u4.$verific$add_202$syn2.v:1091$3410 ($add).
  creating $macc model for $flatten\add5_add.\u4.$verific$add_58$syn2.v:1006$3093 ($add).
  creating $macc model for $flatten\add5_add.\u4.$verific$sub_194$syn2.v:1087$3402 ($sub).
  creating $macc model for $flatten\add5_add.\u4.$verific$sub_208$syn2.v:1095$3416 ($sub).
  creating $macc model for $flatten\x1_mul.\u2.$verific$add_34$syn2.v:774$4507 ($add).
  creating $macc model for $flatten\x1_mul.\u2.$verific$add_37$syn2.v:775$4510 ($add).
  creating $macc model for $flatten\x1_mul.\u2.$verific$add_41$syn2.v:776$4514 ($add).
  creating $macc model for $flatten\x1_mul.\u2.$verific$add_45$syn2.v:778$4518 ($add).
  creating $macc model for $flatten\x1_mul.\u2.$verific$sub_43$syn2.v:777$4516 ($sub).
  creating $macc model for $flatten\x1_mul.\u4.$verific$add_198$syn2.v:1089$3406 ($add).
  creating $macc model for $flatten\x1_mul.\u4.$verific$add_202$syn2.v:1091$3410 ($add).
  creating $macc model for $flatten\x1_mul.\u4.$verific$add_58$syn2.v:1006$3093 ($add).
  creating $macc model for $flatten\x1_mul.\u4.$verific$sub_194$syn2.v:1087$3402 ($sub).
  creating $macc model for $flatten\x1_mul.\u4.$verific$sub_204$syn2.v:1092$3412 ($sub).
  creating $macc model for $flatten\x1_mul.\u4.$verific$sub_208$syn2.v:1095$3416 ($sub).
  creating $macc model for $flatten\x1_mul.\u5.$verific$mult_4$syn2.v:841$2532 ($mul).
  creating $macc model for $flatten\x2_mul.\u2.$verific$add_34$syn2.v:774$4507 ($add).
  creating $macc model for $flatten\x2_mul.\u2.$verific$add_37$syn2.v:775$4510 ($add).
  creating $macc model for $flatten\x2_mul.\u2.$verific$add_41$syn2.v:776$4514 ($add).
  creating $macc model for $flatten\x2_mul.\u2.$verific$add_45$syn2.v:778$4518 ($add).
  creating $macc model for $flatten\x2_mul.\u2.$verific$sub_43$syn2.v:777$4516 ($sub).
  creating $macc model for $flatten\x2_mul.\u4.$verific$add_198$syn2.v:1089$3406 ($add).
  creating $macc model for $flatten\x2_mul.\u4.$verific$add_202$syn2.v:1091$3410 ($add).
  creating $macc model for $flatten\x2_mul.\u4.$verific$add_58$syn2.v:1006$3093 ($add).
  creating $macc model for $flatten\x2_mul.\u4.$verific$sub_194$syn2.v:1087$3402 ($sub).
  creating $macc model for $flatten\x2_mul.\u4.$verific$sub_204$syn2.v:1092$3412 ($sub).
  creating $macc model for $flatten\x2_mul.\u4.$verific$sub_208$syn2.v:1095$3416 ($sub).
  creating $macc model for $flatten\x2_mul.\u5.$verific$mult_4$syn2.v:841$2532 ($mul).
  creating $macc model for $flatten\x3_mul.\u2.$verific$add_34$syn2.v:774$4507 ($add).
  creating $macc model for $flatten\x3_mul.\u2.$verific$add_37$syn2.v:775$4510 ($add).
  creating $macc model for $flatten\x3_mul.\u2.$verific$add_41$syn2.v:776$4514 ($add).
  creating $macc model for $flatten\x3_mul.\u2.$verific$add_45$syn2.v:778$4518 ($add).
  creating $macc model for $flatten\x3_mul.\u2.$verific$sub_43$syn2.v:777$4516 ($sub).
  creating $macc model for $flatten\x3_mul.\u4.$verific$add_198$syn2.v:1089$3406 ($add).
  creating $macc model for $flatten\x3_mul.\u4.$verific$add_202$syn2.v:1091$3410 ($add).
  creating $macc model for $flatten\x3_mul.\u4.$verific$add_58$syn2.v:1006$3093 ($add).
  creating $macc model for $flatten\x3_mul.\u4.$verific$sub_194$syn2.v:1087$3402 ($sub).
  creating $macc model for $flatten\x3_mul.\u4.$verific$sub_204$syn2.v:1092$3412 ($sub).
  creating $macc model for $flatten\x3_mul.\u4.$verific$sub_208$syn2.v:1095$3416 ($sub).
  creating $macc model for $flatten\x3_mul.\u5.$verific$mult_4$syn2.v:841$2532 ($mul).
  creating $macc model for $flatten\x4_mul.\u2.$verific$add_34$syn2.v:774$4507 ($add).
  creating $macc model for $flatten\x4_mul.\u2.$verific$add_37$syn2.v:775$4510 ($add).
  creating $macc model for $flatten\x4_mul.\u2.$verific$add_41$syn2.v:776$4514 ($add).
  creating $macc model for $flatten\x4_mul.\u2.$verific$add_45$syn2.v:778$4518 ($add).
  creating $macc model for $flatten\x4_mul.\u2.$verific$sub_43$syn2.v:777$4516 ($sub).
  creating $macc model for $flatten\x4_mul.\u4.$verific$add_198$syn2.v:1089$3406 ($add).
  creating $macc model for $flatten\x4_mul.\u4.$verific$add_202$syn2.v:1091$3410 ($add).
  creating $macc model for $flatten\x4_mul.\u4.$verific$add_58$syn2.v:1006$3093 ($add).
  creating $macc model for $flatten\x4_mul.\u4.$verific$sub_194$syn2.v:1087$3402 ($sub).
  creating $macc model for $flatten\x4_mul.\u4.$verific$sub_204$syn2.v:1092$3412 ($sub).
  creating $macc model for $flatten\x4_mul.\u4.$verific$sub_208$syn2.v:1095$3416 ($sub).
  creating $macc model for $flatten\x4_mul.\u5.$verific$mult_4$syn2.v:841$2532 ($mul).
  creating $alu model for $macc $flatten\x4_mul.\u4.$verific$sub_208$syn2.v:1095$3416.
  creating $alu model for $macc $flatten\x4_mul.\u4.$verific$sub_204$syn2.v:1092$3412.
  creating $alu model for $macc $flatten\x4_mul.\u4.$verific$sub_194$syn2.v:1087$3402.
  creating $alu model for $macc $flatten\x4_mul.\u4.$verific$add_58$syn2.v:1006$3093.
  creating $alu model for $macc $flatten\x4_mul.\u4.$verific$add_202$syn2.v:1091$3410.
  creating $alu model for $macc $flatten\x4_mul.\u4.$verific$add_198$syn2.v:1089$3406.
  creating $alu model for $macc $flatten\x4_mul.\u2.$verific$sub_43$syn2.v:777$4516.
  creating $alu model for $macc $flatten\x4_mul.\u2.$verific$add_45$syn2.v:778$4518.
  creating $alu model for $macc $flatten\x4_mul.\u2.$verific$add_41$syn2.v:776$4514.
  creating $alu model for $macc $flatten\x4_mul.\u2.$verific$add_37$syn2.v:775$4510.
  creating $alu model for $macc $flatten\x4_mul.\u2.$verific$add_34$syn2.v:774$4507.
  creating $alu model for $macc $flatten\x3_mul.\u4.$verific$sub_208$syn2.v:1095$3416.
  creating $alu model for $macc $flatten\x3_mul.\u4.$verific$sub_204$syn2.v:1092$3412.
  creating $alu model for $macc $flatten\x3_mul.\u4.$verific$sub_194$syn2.v:1087$3402.
  creating $alu model for $macc $flatten\x3_mul.\u4.$verific$add_58$syn2.v:1006$3093.
  creating $alu model for $macc $flatten\x3_mul.\u4.$verific$add_202$syn2.v:1091$3410.
  creating $alu model for $macc $flatten\x3_mul.\u4.$verific$add_198$syn2.v:1089$3406.
  creating $alu model for $macc $flatten\x3_mul.\u2.$verific$sub_43$syn2.v:777$4516.
  creating $alu model for $macc $flatten\x3_mul.\u2.$verific$add_45$syn2.v:778$4518.
  creating $alu model for $macc $flatten\x3_mul.\u2.$verific$add_41$syn2.v:776$4514.
  creating $alu model for $macc $flatten\x3_mul.\u2.$verific$add_37$syn2.v:775$4510.
  creating $alu model for $macc $flatten\x3_mul.\u2.$verific$add_34$syn2.v:774$4507.
  creating $alu model for $macc $flatten\x2_mul.\u4.$verific$sub_208$syn2.v:1095$3416.
  creating $alu model for $macc $flatten\x2_mul.\u4.$verific$sub_204$syn2.v:1092$3412.
  creating $alu model for $macc $flatten\x2_mul.\u4.$verific$sub_194$syn2.v:1087$3402.
  creating $alu model for $macc $flatten\x2_mul.\u4.$verific$add_58$syn2.v:1006$3093.
  creating $alu model for $macc $flatten\x2_mul.\u4.$verific$add_202$syn2.v:1091$3410.
  creating $alu model for $macc $flatten\x2_mul.\u4.$verific$add_198$syn2.v:1089$3406.
  creating $alu model for $macc $flatten\x2_mul.\u2.$verific$sub_43$syn2.v:777$4516.
  creating $alu model for $macc $flatten\x2_mul.\u2.$verific$add_45$syn2.v:778$4518.
  creating $alu model for $macc $flatten\x2_mul.\u2.$verific$add_41$syn2.v:776$4514.
  creating $alu model for $macc $flatten\x2_mul.\u2.$verific$add_37$syn2.v:775$4510.
  creating $alu model for $macc $flatten\x2_mul.\u2.$verific$add_34$syn2.v:774$4507.
  creating $alu model for $macc $flatten\x1_mul.\u4.$verific$sub_208$syn2.v:1095$3416.
  creating $alu model for $macc $flatten\x1_mul.\u4.$verific$sub_204$syn2.v:1092$3412.
  creating $alu model for $macc $flatten\x1_mul.\u4.$verific$sub_194$syn2.v:1087$3402.
  creating $alu model for $macc $flatten\x1_mul.\u4.$verific$add_58$syn2.v:1006$3093.
  creating $alu model for $macc $flatten\x1_mul.\u4.$verific$add_202$syn2.v:1091$3410.
  creating $alu model for $macc $flatten\x1_mul.\u4.$verific$add_198$syn2.v:1089$3406.
  creating $alu model for $macc $flatten\x1_mul.\u2.$verific$sub_43$syn2.v:777$4516.
  creating $alu model for $macc $flatten\x1_mul.\u2.$verific$add_45$syn2.v:778$4518.
  creating $alu model for $macc $flatten\x1_mul.\u2.$verific$add_41$syn2.v:776$4514.
  creating $alu model for $macc $flatten\x1_mul.\u2.$verific$add_37$syn2.v:775$4510.
  creating $alu model for $macc $flatten\x1_mul.\u2.$verific$add_34$syn2.v:774$4507.
  creating $alu model for $macc $flatten\add5_add.\u4.$verific$sub_208$syn2.v:1095$3416.
  creating $alu model for $macc $flatten\add5_add.\u4.$verific$sub_194$syn2.v:1087$3402.
  creating $alu model for $macc $flatten\add5_add.\u4.$verific$add_58$syn2.v:1006$3093.
  creating $alu model for $macc $flatten\add5_add.\u4.$verific$add_202$syn2.v:1091$3410.
  creating $alu model for $macc $flatten\add5_add.\u4.$verific$add_198$syn2.v:1089$3406.
  creating $alu model for $macc $flatten\add5_add.\u3.$verific$sub_4$syn2.v:2327$1594.
  creating $alu model for $macc $flatten\add5_add.\u3.$verific$add_3$syn2.v:2327$1593.
  creating $alu model for $macc $flatten\add5_add.\u1.$verific$sub_23$syn2.v:2094$4170.
  creating $alu model for $macc $flatten\add5_add.\u1.$verific$sub_21$syn2.v:2093$4168.
  creating $alu model for $macc $flatten\add4_add.\u4.$verific$sub_208$syn2.v:1095$3416.
  creating $alu model for $macc $flatten\add4_add.\u4.$verific$sub_194$syn2.v:1087$3402.
  creating $alu model for $macc $flatten\add4_add.\u4.$verific$add_58$syn2.v:1006$3093.
  creating $alu model for $macc $flatten\add4_add.\u4.$verific$add_202$syn2.v:1091$3410.
  creating $alu model for $macc $flatten\add4_add.\u4.$verific$add_198$syn2.v:1089$3406.
  creating $alu model for $macc $flatten\add4_add.\u3.$verific$sub_4$syn2.v:2327$1594.
  creating $alu model for $macc $flatten\add4_add.\u3.$verific$add_3$syn2.v:2327$1593.
  creating $alu model for $macc $flatten\add4_add.\u1.$verific$sub_23$syn2.v:2094$4170.
  creating $alu model for $macc $flatten\add4_add.\u1.$verific$sub_21$syn2.v:2093$4168.
  creating $alu model for $macc $flatten\add3_add.\u4.$verific$sub_208$syn2.v:1095$3416.
  creating $alu model for $macc $flatten\add3_add.\u4.$verific$sub_194$syn2.v:1087$3402.
  creating $alu model for $macc $flatten\add3_add.\u4.$verific$add_58$syn2.v:1006$3093.
  creating $alu model for $macc $flatten\add3_add.\u4.$verific$add_202$syn2.v:1091$3410.
  creating $alu model for $macc $flatten\add3_add.\u4.$verific$add_198$syn2.v:1089$3406.
  creating $alu model for $macc $flatten\add3_add.\u3.$verific$sub_4$syn2.v:2327$1594.
  creating $alu model for $macc $flatten\add3_add.\u3.$verific$add_3$syn2.v:2327$1593.
  creating $alu model for $macc $flatten\add3_add.\u1.$verific$sub_23$syn2.v:2094$4170.
  creating $alu model for $macc $flatten\add3_add.\u1.$verific$sub_21$syn2.v:2093$4168.
  creating $alu model for $macc $flatten\add2_add.\u4.$verific$sub_208$syn2.v:1095$3416.
  creating $alu model for $macc $flatten\add2_add.\u4.$verific$sub_194$syn2.v:1087$3402.
  creating $alu model for $macc $flatten\add2_add.\u4.$verific$add_58$syn2.v:1006$3093.
  creating $alu model for $macc $flatten\add2_add.\u4.$verific$add_202$syn2.v:1091$3410.
  creating $alu model for $macc $flatten\add2_add.\u4.$verific$add_198$syn2.v:1089$3406.
  creating $alu model for $macc $flatten\add2_add.\u3.$verific$sub_4$syn2.v:2327$1594.
  creating $alu model for $macc $flatten\add2_add.\u3.$verific$add_3$syn2.v:2327$1593.
  creating $alu model for $macc $flatten\add2_add.\u1.$verific$sub_23$syn2.v:2094$4170.
  creating $alu model for $macc $flatten\add2_add.\u1.$verific$sub_21$syn2.v:2093$4168.
  creating $alu model for $macc $flatten\add1_add.\u4.$verific$sub_208$syn2.v:1095$3416.
  creating $alu model for $macc $flatten\add1_add.\u4.$verific$sub_194$syn2.v:1087$3402.
  creating $alu model for $macc $flatten\add1_add.\u4.$verific$add_58$syn2.v:1006$3093.
  creating $alu model for $macc $flatten\add1_add.\u4.$verific$add_202$syn2.v:1091$3410.
  creating $alu model for $macc $flatten\add1_add.\u4.$verific$add_198$syn2.v:1089$3406.
  creating $alu model for $macc $flatten\add1_add.\u3.$verific$sub_4$syn2.v:2327$1594.
  creating $alu model for $macc $flatten\add1_add.\u3.$verific$add_3$syn2.v:2327$1593.
  creating $alu model for $macc $flatten\add1_add.\u1.$verific$sub_23$syn2.v:2094$4170.
  creating $alu model for $macc $flatten\add1_add.\u1.$verific$sub_21$syn2.v:2093$4168.
  creating $macc cell for $flatten\x3_mul.\u5.$verific$mult_4$syn2.v:841$2532: $auto$alumacc.cc:365:replace_macc$5382
  creating $macc cell for $flatten\x2_mul.\u5.$verific$mult_4$syn2.v:841$2532: $auto$alumacc.cc:365:replace_macc$5383
  creating $macc cell for $flatten\x1_mul.\u5.$verific$mult_4$syn2.v:841$2532: $auto$alumacc.cc:365:replace_macc$5384
  creating $macc cell for $flatten\x4_mul.\u5.$verific$mult_4$syn2.v:841$2532: $auto$alumacc.cc:365:replace_macc$5385
  creating $alu model for $flatten\add1_add.\u1.$verific$LessThan_114$syn2.v:2173$4341 ($lt): new $alu
  creating $alu model for $flatten\add1_add.\u1.$verific$LessThan_168$syn2.v:2224$4382 ($lt): new $alu
  creating $alu model for $flatten\add1_add.\u1.$verific$LessThan_47$syn2.v:2113$4193 ($lt): new $alu
  creating $alu model for $flatten\add1_add.\u1.$verific$LessThan_9$syn2.v:2078$4156 ($lt): new $alu
  creating $alu model for $flatten\add2_add.\u1.$verific$LessThan_114$syn2.v:2173$4341 ($lt): new $alu
  creating $alu model for $flatten\add2_add.\u1.$verific$LessThan_168$syn2.v:2224$4382 ($lt): new $alu
  creating $alu model for $flatten\add2_add.\u1.$verific$LessThan_47$syn2.v:2113$4193 ($lt): new $alu
  creating $alu model for $flatten\add2_add.\u1.$verific$LessThan_9$syn2.v:2078$4156 ($lt): new $alu
  creating $alu model for $flatten\add3_add.\u1.$verific$LessThan_114$syn2.v:2173$4341 ($lt): new $alu
  creating $alu model for $flatten\add3_add.\u1.$verific$LessThan_168$syn2.v:2224$4382 ($lt): new $alu
  creating $alu model for $flatten\add3_add.\u1.$verific$LessThan_47$syn2.v:2113$4193 ($lt): new $alu
  creating $alu model for $flatten\add3_add.\u1.$verific$LessThan_9$syn2.v:2078$4156 ($lt): new $alu
  creating $alu model for $flatten\add4_add.\u1.$verific$LessThan_114$syn2.v:2173$4341 ($lt): new $alu
  creating $alu model for $flatten\add4_add.\u1.$verific$LessThan_168$syn2.v:2224$4382 ($lt): new $alu
  creating $alu model for $flatten\add4_add.\u1.$verific$LessThan_47$syn2.v:2113$4193 ($lt): new $alu
  creating $alu model for $flatten\add4_add.\u1.$verific$LessThan_9$syn2.v:2078$4156 ($lt): new $alu
  creating $alu model for $flatten\add5_add.\u1.$verific$LessThan_114$syn2.v:2173$4341 ($lt): new $alu
  creating $alu model for $flatten\add5_add.\u1.$verific$LessThan_168$syn2.v:2224$4382 ($lt): new $alu
  creating $alu model for $flatten\add5_add.\u1.$verific$LessThan_47$syn2.v:2113$4193 ($lt): new $alu
  creating $alu model for $flatten\add5_add.\u1.$verific$LessThan_9$syn2.v:2078$4156 ($lt): new $alu
  creating $alu model for $flatten\x1_mul.\u2.$verific$LessThan_114$syn2.v:802$4568 ($lt): new $alu
  creating $alu model for $flatten\x2_mul.\u2.$verific$LessThan_114$syn2.v:802$4568 ($lt): new $alu
  creating $alu model for $flatten\x3_mul.\u2.$verific$LessThan_114$syn2.v:802$4568 ($lt): new $alu
  creating $alu model for $flatten\x4_mul.\u2.$verific$LessThan_114$syn2.v:802$4568 ($lt): new $alu
  creating $alu model for $flatten\add1_add.\u1.$verific$equal_33$syn2.v:2099$4179 ($eq): merged with $flatten\add1_add.\u1.$verific$LessThan_9$syn2.v:2078$4156.
  creating $alu model for $flatten\add1_add.\u1.$verific$equal_35$syn2.v:2099$4181 ($eq): merged with $flatten\add1_add.\u1.$verific$LessThan_168$syn2.v:2224$4382.
  creating $alu model for $flatten\add2_add.\u1.$verific$equal_33$syn2.v:2099$4179 ($eq): merged with $flatten\add2_add.\u1.$verific$LessThan_9$syn2.v:2078$4156.
  creating $alu model for $flatten\add2_add.\u1.$verific$equal_35$syn2.v:2099$4181 ($eq): merged with $flatten\add2_add.\u1.$verific$LessThan_168$syn2.v:2224$4382.
  creating $alu model for $flatten\add3_add.\u1.$verific$equal_33$syn2.v:2099$4179 ($eq): merged with $flatten\add3_add.\u1.$verific$LessThan_9$syn2.v:2078$4156.
  creating $alu model for $flatten\add3_add.\u1.$verific$equal_35$syn2.v:2099$4181 ($eq): merged with $flatten\add3_add.\u1.$verific$LessThan_168$syn2.v:2224$4382.
  creating $alu model for $flatten\add4_add.\u1.$verific$equal_33$syn2.v:2099$4179 ($eq): merged with $flatten\add4_add.\u1.$verific$LessThan_9$syn2.v:2078$4156.
  creating $alu model for $flatten\add4_add.\u1.$verific$equal_35$syn2.v:2099$4181 ($eq): merged with $flatten\add4_add.\u1.$verific$LessThan_168$syn2.v:2224$4382.
  creating $alu model for $flatten\add5_add.\u1.$verific$equal_33$syn2.v:2099$4179 ($eq): merged with $flatten\add5_add.\u1.$verific$LessThan_9$syn2.v:2078$4156.
  creating $alu model for $flatten\add5_add.\u1.$verific$equal_35$syn2.v:2099$4181 ($eq): merged with $flatten\add5_add.\u1.$verific$LessThan_168$syn2.v:2224$4382.
  creating $alu cell for $flatten\x4_mul.\u2.$verific$LessThan_114$syn2.v:802$4568: $auto$alumacc.cc:485:replace_alu$5410
  creating $alu cell for $flatten\x3_mul.\u2.$verific$LessThan_114$syn2.v:802$4568: $auto$alumacc.cc:485:replace_alu$5415
  creating $alu cell for $flatten\x2_mul.\u2.$verific$LessThan_114$syn2.v:802$4568: $auto$alumacc.cc:485:replace_alu$5420
  creating $alu cell for $flatten\x1_mul.\u2.$verific$LessThan_114$syn2.v:802$4568: $auto$alumacc.cc:485:replace_alu$5425
  creating $alu cell for $flatten\add5_add.\u1.$verific$LessThan_47$syn2.v:2113$4193: $auto$alumacc.cc:485:replace_alu$5430
  creating $alu cell for $flatten\add5_add.\u1.$verific$LessThan_168$syn2.v:2224$4382, $flatten\add5_add.\u1.$verific$equal_35$syn2.v:2099$4181: $auto$alumacc.cc:485:replace_alu$5435
  creating $alu cell for $flatten\add5_add.\u1.$verific$LessThan_114$syn2.v:2173$4341: $auto$alumacc.cc:485:replace_alu$5442
  creating $alu cell for $flatten\add4_add.\u1.$verific$LessThan_9$syn2.v:2078$4156, $flatten\add4_add.\u1.$verific$equal_33$syn2.v:2099$4179: $auto$alumacc.cc:485:replace_alu$5453
  creating $alu cell for $flatten\add4_add.\u1.$verific$LessThan_47$syn2.v:2113$4193: $auto$alumacc.cc:485:replace_alu$5464
  creating $alu cell for $flatten\add4_add.\u1.$verific$LessThan_168$syn2.v:2224$4382, $flatten\add4_add.\u1.$verific$equal_35$syn2.v:2099$4181: $auto$alumacc.cc:485:replace_alu$5469
  creating $alu cell for $flatten\add4_add.\u1.$verific$LessThan_114$syn2.v:2173$4341: $auto$alumacc.cc:485:replace_alu$5476
  creating $alu cell for $flatten\add3_add.\u1.$verific$LessThan_9$syn2.v:2078$4156, $flatten\add3_add.\u1.$verific$equal_33$syn2.v:2099$4179: $auto$alumacc.cc:485:replace_alu$5481
  creating $alu cell for $flatten\add3_add.\u1.$verific$LessThan_47$syn2.v:2113$4193: $auto$alumacc.cc:485:replace_alu$5492
  creating $alu cell for $flatten\add3_add.\u1.$verific$LessThan_168$syn2.v:2224$4382, $flatten\add3_add.\u1.$verific$equal_35$syn2.v:2099$4181: $auto$alumacc.cc:485:replace_alu$5497
  creating $alu cell for $flatten\add3_add.\u1.$verific$LessThan_114$syn2.v:2173$4341: $auto$alumacc.cc:485:replace_alu$5504
  creating $alu cell for $flatten\add2_add.\u1.$verific$LessThan_9$syn2.v:2078$4156, $flatten\add2_add.\u1.$verific$equal_33$syn2.v:2099$4179: $auto$alumacc.cc:485:replace_alu$5509
  creating $alu cell for $flatten\add2_add.\u1.$verific$LessThan_47$syn2.v:2113$4193: $auto$alumacc.cc:485:replace_alu$5520
  creating $alu cell for $flatten\add2_add.\u1.$verific$LessThan_168$syn2.v:2224$4382, $flatten\add2_add.\u1.$verific$equal_35$syn2.v:2099$4181: $auto$alumacc.cc:485:replace_alu$5525
  creating $alu cell for $flatten\add2_add.\u1.$verific$LessThan_114$syn2.v:2173$4341: $auto$alumacc.cc:485:replace_alu$5532
  creating $alu cell for $flatten\add1_add.\u1.$verific$LessThan_9$syn2.v:2078$4156, $flatten\add1_add.\u1.$verific$equal_33$syn2.v:2099$4179: $auto$alumacc.cc:485:replace_alu$5537
  creating $alu cell for $flatten\add1_add.\u1.$verific$LessThan_47$syn2.v:2113$4193: $auto$alumacc.cc:485:replace_alu$5548
  creating $alu cell for $flatten\add1_add.\u1.$verific$LessThan_168$syn2.v:2224$4382, $flatten\add1_add.\u1.$verific$equal_35$syn2.v:2099$4181: $auto$alumacc.cc:485:replace_alu$5553
  creating $alu cell for $flatten\add1_add.\u1.$verific$LessThan_114$syn2.v:2173$4341: $auto$alumacc.cc:485:replace_alu$5560
  creating $alu cell for $flatten\add1_add.\u1.$verific$sub_21$syn2.v:2093$4168: $auto$alumacc.cc:485:replace_alu$5571
  creating $alu cell for $flatten\add1_add.\u1.$verific$sub_23$syn2.v:2094$4170: $auto$alumacc.cc:485:replace_alu$5574
  creating $alu cell for $flatten\add1_add.\u3.$verific$add_3$syn2.v:2327$1593: $auto$alumacc.cc:485:replace_alu$5577
  creating $alu cell for $flatten\add1_add.\u3.$verific$sub_4$syn2.v:2327$1594: $auto$alumacc.cc:485:replace_alu$5580
  creating $alu cell for $flatten\add1_add.\u4.$verific$add_198$syn2.v:1089$3406: $auto$alumacc.cc:485:replace_alu$5583
  creating $alu cell for $flatten\add1_add.\u4.$verific$add_202$syn2.v:1091$3410: $auto$alumacc.cc:485:replace_alu$5586
  creating $alu cell for $flatten\add1_add.\u4.$verific$add_58$syn2.v:1006$3093: $auto$alumacc.cc:485:replace_alu$5589
  creating $alu cell for $flatten\add1_add.\u4.$verific$sub_194$syn2.v:1087$3402: $auto$alumacc.cc:485:replace_alu$5592
  creating $alu cell for $flatten\add1_add.\u4.$verific$sub_208$syn2.v:1095$3416: $auto$alumacc.cc:485:replace_alu$5595
  creating $alu cell for $flatten\add2_add.\u1.$verific$sub_21$syn2.v:2093$4168: $auto$alumacc.cc:485:replace_alu$5598
  creating $alu cell for $flatten\add2_add.\u1.$verific$sub_23$syn2.v:2094$4170: $auto$alumacc.cc:485:replace_alu$5601
  creating $alu cell for $flatten\add2_add.\u3.$verific$add_3$syn2.v:2327$1593: $auto$alumacc.cc:485:replace_alu$5604
  creating $alu cell for $flatten\add2_add.\u3.$verific$sub_4$syn2.v:2327$1594: $auto$alumacc.cc:485:replace_alu$5607
  creating $alu cell for $flatten\add2_add.\u4.$verific$add_198$syn2.v:1089$3406: $auto$alumacc.cc:485:replace_alu$5610
  creating $alu cell for $flatten\add2_add.\u4.$verific$add_202$syn2.v:1091$3410: $auto$alumacc.cc:485:replace_alu$5613
  creating $alu cell for $flatten\add2_add.\u4.$verific$add_58$syn2.v:1006$3093: $auto$alumacc.cc:485:replace_alu$5616
  creating $alu cell for $flatten\add2_add.\u4.$verific$sub_194$syn2.v:1087$3402: $auto$alumacc.cc:485:replace_alu$5619
  creating $alu cell for $flatten\add2_add.\u4.$verific$sub_208$syn2.v:1095$3416: $auto$alumacc.cc:485:replace_alu$5622
  creating $alu cell for $flatten\add3_add.\u1.$verific$sub_21$syn2.v:2093$4168: $auto$alumacc.cc:485:replace_alu$5625
  creating $alu cell for $flatten\add3_add.\u1.$verific$sub_23$syn2.v:2094$4170: $auto$alumacc.cc:485:replace_alu$5628
  creating $alu cell for $flatten\add3_add.\u3.$verific$add_3$syn2.v:2327$1593: $auto$alumacc.cc:485:replace_alu$5631
  creating $alu cell for $flatten\add3_add.\u3.$verific$sub_4$syn2.v:2327$1594: $auto$alumacc.cc:485:replace_alu$5634
  creating $alu cell for $flatten\add3_add.\u4.$verific$add_198$syn2.v:1089$3406: $auto$alumacc.cc:485:replace_alu$5637
  creating $alu cell for $flatten\add3_add.\u4.$verific$add_202$syn2.v:1091$3410: $auto$alumacc.cc:485:replace_alu$5640
  creating $alu cell for $flatten\add3_add.\u4.$verific$add_58$syn2.v:1006$3093: $auto$alumacc.cc:485:replace_alu$5643
  creating $alu cell for $flatten\add3_add.\u4.$verific$sub_194$syn2.v:1087$3402: $auto$alumacc.cc:485:replace_alu$5646
  creating $alu cell for $flatten\add3_add.\u4.$verific$sub_208$syn2.v:1095$3416: $auto$alumacc.cc:485:replace_alu$5649
  creating $alu cell for $flatten\add4_add.\u1.$verific$sub_21$syn2.v:2093$4168: $auto$alumacc.cc:485:replace_alu$5652
  creating $alu cell for $flatten\add4_add.\u1.$verific$sub_23$syn2.v:2094$4170: $auto$alumacc.cc:485:replace_alu$5655
  creating $alu cell for $flatten\add4_add.\u3.$verific$add_3$syn2.v:2327$1593: $auto$alumacc.cc:485:replace_alu$5658
  creating $alu cell for $flatten\add4_add.\u3.$verific$sub_4$syn2.v:2327$1594: $auto$alumacc.cc:485:replace_alu$5661
  creating $alu cell for $flatten\add4_add.\u4.$verific$add_198$syn2.v:1089$3406: $auto$alumacc.cc:485:replace_alu$5664
  creating $alu cell for $flatten\add4_add.\u4.$verific$add_202$syn2.v:1091$3410: $auto$alumacc.cc:485:replace_alu$5667
  creating $alu cell for $flatten\add4_add.\u4.$verific$add_58$syn2.v:1006$3093: $auto$alumacc.cc:485:replace_alu$5670
  creating $alu cell for $flatten\add4_add.\u4.$verific$sub_194$syn2.v:1087$3402: $auto$alumacc.cc:485:replace_alu$5673
  creating $alu cell for $flatten\add4_add.\u4.$verific$sub_208$syn2.v:1095$3416: $auto$alumacc.cc:485:replace_alu$5676
  creating $alu cell for $flatten\add5_add.\u1.$verific$sub_21$syn2.v:2093$4168: $auto$alumacc.cc:485:replace_alu$5679
  creating $alu cell for $flatten\add5_add.\u1.$verific$sub_23$syn2.v:2094$4170: $auto$alumacc.cc:485:replace_alu$5682
  creating $alu cell for $flatten\add5_add.\u3.$verific$add_3$syn2.v:2327$1593: $auto$alumacc.cc:485:replace_alu$5685
  creating $alu cell for $flatten\add5_add.\u3.$verific$sub_4$syn2.v:2327$1594: $auto$alumacc.cc:485:replace_alu$5688
  creating $alu cell for $flatten\add5_add.\u4.$verific$add_198$syn2.v:1089$3406: $auto$alumacc.cc:485:replace_alu$5691
  creating $alu cell for $flatten\add5_add.\u4.$verific$add_202$syn2.v:1091$3410: $auto$alumacc.cc:485:replace_alu$5694
  creating $alu cell for $flatten\add5_add.\u4.$verific$add_58$syn2.v:1006$3093: $auto$alumacc.cc:485:replace_alu$5697
  creating $alu cell for $flatten\add5_add.\u4.$verific$sub_194$syn2.v:1087$3402: $auto$alumacc.cc:485:replace_alu$5700
  creating $alu cell for $flatten\add5_add.\u4.$verific$sub_208$syn2.v:1095$3416: $auto$alumacc.cc:485:replace_alu$5703
  creating $alu cell for $flatten\x1_mul.\u2.$verific$add_34$syn2.v:774$4507: $auto$alumacc.cc:485:replace_alu$5706
  creating $alu cell for $flatten\x1_mul.\u2.$verific$add_37$syn2.v:775$4510: $auto$alumacc.cc:485:replace_alu$5709
  creating $alu cell for $flatten\x1_mul.\u2.$verific$add_41$syn2.v:776$4514: $auto$alumacc.cc:485:replace_alu$5712
  creating $alu cell for $flatten\x1_mul.\u2.$verific$add_45$syn2.v:778$4518: $auto$alumacc.cc:485:replace_alu$5715
  creating $alu cell for $flatten\x1_mul.\u2.$verific$sub_43$syn2.v:777$4516: $auto$alumacc.cc:485:replace_alu$5718
  creating $alu cell for $flatten\x1_mul.\u4.$verific$add_198$syn2.v:1089$3406: $auto$alumacc.cc:485:replace_alu$5721
  creating $alu cell for $flatten\x1_mul.\u4.$verific$add_202$syn2.v:1091$3410: $auto$alumacc.cc:485:replace_alu$5724
  creating $alu cell for $flatten\x1_mul.\u4.$verific$add_58$syn2.v:1006$3093: $auto$alumacc.cc:485:replace_alu$5727
  creating $alu cell for $flatten\x1_mul.\u4.$verific$sub_194$syn2.v:1087$3402: $auto$alumacc.cc:485:replace_alu$5730
  creating $alu cell for $flatten\x1_mul.\u4.$verific$sub_204$syn2.v:1092$3412: $auto$alumacc.cc:485:replace_alu$5733
  creating $alu cell for $flatten\x1_mul.\u4.$verific$sub_208$syn2.v:1095$3416: $auto$alumacc.cc:485:replace_alu$5736
  creating $alu cell for $flatten\x2_mul.\u2.$verific$add_34$syn2.v:774$4507: $auto$alumacc.cc:485:replace_alu$5739
  creating $alu cell for $flatten\x2_mul.\u2.$verific$add_37$syn2.v:775$4510: $auto$alumacc.cc:485:replace_alu$5742
  creating $alu cell for $flatten\x2_mul.\u2.$verific$add_41$syn2.v:776$4514: $auto$alumacc.cc:485:replace_alu$5745
  creating $alu cell for $flatten\x2_mul.\u2.$verific$add_45$syn2.v:778$4518: $auto$alumacc.cc:485:replace_alu$5748
  creating $alu cell for $flatten\x2_mul.\u2.$verific$sub_43$syn2.v:777$4516: $auto$alumacc.cc:485:replace_alu$5751
  creating $alu cell for $flatten\x2_mul.\u4.$verific$add_198$syn2.v:1089$3406: $auto$alumacc.cc:485:replace_alu$5754
  creating $alu cell for $flatten\x2_mul.\u4.$verific$add_202$syn2.v:1091$3410: $auto$alumacc.cc:485:replace_alu$5757
  creating $alu cell for $flatten\x2_mul.\u4.$verific$add_58$syn2.v:1006$3093: $auto$alumacc.cc:485:replace_alu$5760
  creating $alu cell for $flatten\x2_mul.\u4.$verific$sub_194$syn2.v:1087$3402: $auto$alumacc.cc:485:replace_alu$5763
  creating $alu cell for $flatten\x2_mul.\u4.$verific$sub_204$syn2.v:1092$3412: $auto$alumacc.cc:485:replace_alu$5766
  creating $alu cell for $flatten\x2_mul.\u4.$verific$sub_208$syn2.v:1095$3416: $auto$alumacc.cc:485:replace_alu$5769
  creating $alu cell for $flatten\x3_mul.\u2.$verific$add_34$syn2.v:774$4507: $auto$alumacc.cc:485:replace_alu$5772
  creating $alu cell for $flatten\x3_mul.\u2.$verific$add_37$syn2.v:775$4510: $auto$alumacc.cc:485:replace_alu$5775
  creating $alu cell for $flatten\x3_mul.\u2.$verific$add_41$syn2.v:776$4514: $auto$alumacc.cc:485:replace_alu$5778
  creating $alu cell for $flatten\x3_mul.\u2.$verific$add_45$syn2.v:778$4518: $auto$alumacc.cc:485:replace_alu$5781
  creating $alu cell for $flatten\x3_mul.\u2.$verific$sub_43$syn2.v:777$4516: $auto$alumacc.cc:485:replace_alu$5784
  creating $alu cell for $flatten\x3_mul.\u4.$verific$add_198$syn2.v:1089$3406: $auto$alumacc.cc:485:replace_alu$5787
  creating $alu cell for $flatten\x3_mul.\u4.$verific$add_202$syn2.v:1091$3410: $auto$alumacc.cc:485:replace_alu$5790
  creating $alu cell for $flatten\x3_mul.\u4.$verific$add_58$syn2.v:1006$3093: $auto$alumacc.cc:485:replace_alu$5793
  creating $alu cell for $flatten\x3_mul.\u4.$verific$sub_194$syn2.v:1087$3402: $auto$alumacc.cc:485:replace_alu$5796
  creating $alu cell for $flatten\x3_mul.\u4.$verific$sub_204$syn2.v:1092$3412: $auto$alumacc.cc:485:replace_alu$5799
  creating $alu cell for $flatten\x3_mul.\u4.$verific$sub_208$syn2.v:1095$3416: $auto$alumacc.cc:485:replace_alu$5802
  creating $alu cell for $flatten\add5_add.\u1.$verific$LessThan_9$syn2.v:2078$4156, $flatten\add5_add.\u1.$verific$equal_33$syn2.v:2099$4179: $auto$alumacc.cc:485:replace_alu$5805
  creating $alu cell for $flatten\x4_mul.\u2.$verific$add_34$syn2.v:774$4507: $auto$alumacc.cc:485:replace_alu$5816
  creating $alu cell for $flatten\x4_mul.\u2.$verific$add_37$syn2.v:775$4510: $auto$alumacc.cc:485:replace_alu$5819
  creating $alu cell for $flatten\x4_mul.\u2.$verific$add_41$syn2.v:776$4514: $auto$alumacc.cc:485:replace_alu$5822
  creating $alu cell for $flatten\x4_mul.\u2.$verific$add_45$syn2.v:778$4518: $auto$alumacc.cc:485:replace_alu$5825
  creating $alu cell for $flatten\x4_mul.\u2.$verific$sub_43$syn2.v:777$4516: $auto$alumacc.cc:485:replace_alu$5828
  creating $alu cell for $flatten\x4_mul.\u4.$verific$add_198$syn2.v:1089$3406: $auto$alumacc.cc:485:replace_alu$5831
  creating $alu cell for $flatten\x4_mul.\u4.$verific$add_202$syn2.v:1091$3410: $auto$alumacc.cc:485:replace_alu$5834
  creating $alu cell for $flatten\x4_mul.\u4.$verific$add_58$syn2.v:1006$3093: $auto$alumacc.cc:485:replace_alu$5837
  creating $alu cell for $flatten\x4_mul.\u4.$verific$sub_194$syn2.v:1087$3402: $auto$alumacc.cc:485:replace_alu$5840
  creating $alu cell for $flatten\x4_mul.\u4.$verific$sub_204$syn2.v:1092$3412: $auto$alumacc.cc:485:replace_alu$5843
  creating $alu cell for $flatten\x4_mul.\u4.$verific$sub_208$syn2.v:1095$3416: $auto$alumacc.cc:485:replace_alu$5846
  created 113 $alu and 4 $macc cells.

yosys> opt_expr

3.62. Executing OPT_EXPR pass (perform const folding).
Optimizing module top.
<suppressed ~50 debug messages>

yosys> opt_merge -nomux

3.63. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\top'.
Removed a total of 0 cells.

yosys> opt_muxtree

3.64. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \top..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Removed 0 multiplexer ports.
<suppressed ~230 debug messages>

yosys> opt_reduce

3.65. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \top.
Performed a total of 0 changes.

yosys> opt_merge

3.66. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\top'.
Removed a total of 0 cells.

yosys> opt_share

3.67. Executing OPT_SHARE pass.
    Found cells that share an operand and can be merged by moving the $mux $flatten\add1_add.\u3.$verific$mux_5$syn2.v:2327$1595 in front of them:
        $auto$alumacc.cc:485:replace_alu$5577
        $auto$alumacc.cc:485:replace_alu$5580

    Found cells that share an operand and can be merged by moving the $mux $flatten\add2_add.\u3.$verific$mux_5$syn2.v:2327$1595 in front of them:
        $auto$alumacc.cc:485:replace_alu$5604
        $auto$alumacc.cc:485:replace_alu$5607

    Found cells that share an operand and can be merged by moving the $mux $flatten\add3_add.\u3.$verific$mux_5$syn2.v:2327$1595 in front of them:
        $auto$alumacc.cc:485:replace_alu$5631
        $auto$alumacc.cc:485:replace_alu$5634

    Found cells that share an operand and can be merged by moving the $mux $flatten\add4_add.\u3.$verific$mux_5$syn2.v:2327$1595 in front of them:
        $auto$alumacc.cc:485:replace_alu$5658
        $auto$alumacc.cc:485:replace_alu$5661

    Found cells that share an operand and can be merged by moving the $mux $flatten\add5_add.\u3.$verific$mux_5$syn2.v:2327$1595 in front of them:
        $auto$alumacc.cc:485:replace_alu$5685
        $auto$alumacc.cc:485:replace_alu$5688


yosys> opt_dff -nosdff -nodffe

3.68. Executing OPT_DFF pass (perform DFF optimizations).

yosys> opt_clean

3.69. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \top..
Removed 10 unused cells and 84 unused wires.
<suppressed ~21 debug messages>

yosys> opt_expr

3.70. Executing OPT_EXPR pass (perform const folding).
Optimizing module top.
<suppressed ~5 debug messages>

yosys> opt_muxtree

3.71. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \top..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Removed 0 multiplexer ports.
<suppressed ~230 debug messages>

yosys> opt_reduce

3.72. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \top.
Performed a total of 0 changes.

yosys> opt_merge

3.73. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\top'.
Removed a total of 0 cells.

yosys> opt_share

3.74. Executing OPT_SHARE pass.

yosys> opt_dff -nosdff -nodffe

3.75. Executing OPT_DFF pass (perform DFF optimizations).

yosys> opt_clean

3.76. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \top..
Removed 0 unused cells and 5 unused wires.
<suppressed ~1 debug messages>

yosys> opt_expr

3.77. Executing OPT_EXPR pass (perform const folding).
Optimizing module top.
MAX OPT ITERATION = 2

yosys> stat

3.78. Printing statistics.

=== top ===

   Number of wires:               3964
   Number of wire bits:          82538
   Number of public wires:        1869
   Number of public wire bits:   20728
   Number of memories:               0
   Number of memory bits:            0
   Number of processes:              0
   Number of cells:               3275
     $alu                          108
     $and                          169
     $dff                          260
     $dlatch                        13
     $eq                           327
     $logic_not                      9
     $macc                           4
     $mux                         1524
     $neg                            5
     $not                          143
     $or                           483
     $reduce_and                    31
     $reduce_or                    190
     $sr                             9


yosys> memory -nomap

3.79. Executing MEMORY pass.

yosys> opt_mem

3.79.1. Executing OPT_MEM pass (optimize memories).
Performed a total of 0 transformations.

yosys> opt_mem_priority

3.79.2. Executing OPT_MEM_PRIORITY pass (removing unnecessary memory write priority relations).
Performed a total of 0 transformations.

yosys> opt_mem_feedback

3.79.3. Executing OPT_MEM_FEEDBACK pass (finding memory read-to-write feedback paths).

yosys> memory_bmux2rom

3.79.4. Executing MEMORY_BMUX2ROM pass (converting muxes to ROMs).

yosys> memory_dff

3.79.5. Executing MEMORY_DFF pass (merging $dff cells to $memrd).

yosys> opt_clean

3.79.6. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \top..

yosys> memory_share

3.79.7. Executing MEMORY_SHARE pass (consolidating $memrd/$memwr cells).

yosys> opt_mem_widen

3.79.8. Executing OPT_MEM_WIDEN pass (optimize memories where all ports are wide).
Performed a total of 0 transformations.

yosys> opt_clean

3.79.9. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \top..

yosys> memory_collect

3.79.10. Executing MEMORY_COLLECT pass (generating $mem cells).

yosys> stat

3.80. Printing statistics.

=== top ===

   Number of wires:               3964
   Number of wire bits:          82538
   Number of public wires:        1869
   Number of public wire bits:   20728
   Number of memories:               0
   Number of memory bits:            0
   Number of processes:              0
   Number of cells:               3275
     $alu                          108
     $and                          169
     $dff                          260
     $dlatch                        13
     $eq                           327
     $logic_not                      9
     $macc                           4
     $mux                         1524
     $neg                            5
     $not                          143
     $or                           483
     $reduce_and                    31
     $reduce_or                    190
     $sr                             9


yosys> muxpack

3.81. Executing MUXPACK pass ($mux cell cascades to $pmux).
Converted 0 (p)mux cells into 0 pmux cells.
<suppressed ~1451 debug messages>

yosys> opt_clean

3.82. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \top..

yosys> pmuxtree

3.83. Executing PMUXTREE pass.

yosys> muxpack

3.84. Executing MUXPACK pass ($mux cell cascades to $pmux).
Converted 0 (p)mux cells into 0 pmux cells.
<suppressed ~1451 debug messages>

yosys> memory_map

3.85. Executing MEMORY_MAP pass (converting memories to logic and flip-flops).

yosys> stat

3.86. Printing statistics.

=== top ===

   Number of wires:               3964
   Number of wire bits:          82538
   Number of public wires:        1869
   Number of public wire bits:   20728
   Number of memories:               0
   Number of memory bits:            0
   Number of processes:              0
   Number of cells:               3275
     $alu                          108
     $and                          169
     $dff                          260
     $dlatch                        13
     $eq                           327
     $logic_not                      9
     $macc                           4
     $mux                         1524
     $neg                            5
     $not                          143
     $or                           483
     $reduce_and                    31
     $reduce_or                    190
     $sr                             9


yosys> techmap -map +/techmap.v -map +/rapidsilicon/genesis/arith_map.v

3.87. Executing TECHMAP pass (map to technology primitives).

3.87.1. Executing Verilog-2005 frontend: /nfs_scratch/scratch/Vorak/aram/Workspace/Raptor/yosys_verific_rs/yosys/install/bin/../share/yosys/techmap.v
Parsing Verilog input from `/nfs_scratch/scratch/Vorak/aram/Workspace/Raptor/yosys_verific_rs/yosys/install/bin/../share/yosys/techmap.v' to AST representation.
Generating RTLIL representation for module `\_90_simplemap_bool_ops'.
Generating RTLIL representation for module `\_90_simplemap_reduce_ops'.
Generating RTLIL representation for module `\_90_simplemap_logic_ops'.
Generating RTLIL representation for module `\_90_simplemap_compare_ops'.
Generating RTLIL representation for module `\_90_simplemap_various'.
Generating RTLIL representation for module `\_90_simplemap_registers'.
Generating RTLIL representation for module `\_90_shift_ops_shr_shl_sshl_sshr'.
Generating RTLIL representation for module `\_90_shift_shiftx'.
Generating RTLIL representation for module `\_90_fa'.
Generating RTLIL representation for module `\_90_lcu'.
Generating RTLIL representation for module `\_90_alu'.
Generating RTLIL representation for module `\_90_macc'.
Generating RTLIL representation for module `\_90_alumacc'.
Generating RTLIL representation for module `\$__div_mod_u'.
Generating RTLIL representation for module `\$__div_mod_trunc'.
Generating RTLIL representation for module `\_90_div'.
Generating RTLIL representation for module `\_90_mod'.
Generating RTLIL representation for module `\$__div_mod_floor'.
Generating RTLIL representation for module `\_90_divfloor'.
Generating RTLIL representation for module `\_90_modfloor'.
Generating RTLIL representation for module `\_90_pow'.
Generating RTLIL representation for module `\_90_pmux'.
Generating RTLIL representation for module `\_90_demux'.
Generating RTLIL representation for module `\_90_lut'.
Successfully finished Verilog frontend.

3.87.2. Executing Verilog-2005 frontend: /nfs_scratch/scratch/Vorak/aram/Workspace/Raptor/yosys_verific_rs/yosys/install/bin/../share/yosys/rapidsilicon/genesis/arith_map.v
Parsing Verilog input from `/nfs_scratch/scratch/Vorak/aram/Workspace/Raptor/yosys_verific_rs/yosys/install/bin/../share/yosys/rapidsilicon/genesis/arith_map.v' to AST representation.
Generating RTLIL representation for module `\_80_rs_alu'.
Successfully finished Verilog frontend.

3.87.3. Continuing TECHMAP pass.
Using extmapper simplemap for cells of type $dff.
Using extmapper simplemap for cells of type $or.
Using extmapper simplemap for cells of type $reduce_and.
Using extmapper simplemap for cells of type $not.
Using extmapper maccmap for cells of type $macc.
  add { \x3_mul.u5.opa [23] \add4_add.opb_r [22:0] } * { \x1_mul.u5.opb [23] \add3_add.opa_r [22:0] } (24x24 bits, unsigned)
Using extmapper simplemap for cells of type $and.
Using template $paramod$c3cd1564c35d873179656addd6052d7ea8b6d991\_90_alu for cells of type $alu.
Using extmapper simplemap for cells of type $mux.
Using template $paramod$4ccbe221165818e15f326ddee3d1183c7924e12f\_90_alu for cells of type $alu.
Using template $paramod$dfca81329cbbac01700318224209a5f2318c7128\_90_alu for cells of type $alu.
Using template $paramod$a1bc51c02ce12ac21eb18988e83292af48ed7d72\_90_alu for cells of type $alu.
Using template $paramod$d2fa05d38998afabc6d4f34471305d0af4b8b2df\_90_alu for cells of type $alu.
Using extmapper simplemap for cells of type $dlatch.
Using template $paramod$a04dd9d4d8b430140c4ff94b50470fb380fda2a0\_90_alu for cells of type $alu.
Using template $paramod$a2af9b43308e3114c3b5dd3f4dc3329b2387395d\_90_alu for cells of type $alu.
Using template $paramod$5d7bf89bead63599a0c4fbe7617ae2af1a7c16a5\_90_alu for cells of type $alu.
Using template $paramod$19189243523493d505a4933d1bad417c570ea8a6\_90_alu for cells of type $alu.
Using extmapper simplemap for cells of type $reduce_or.
Using template $paramod$7fa1593b7bd93374b34bfd9ac1fe703a5be6addb\_90_alu for cells of type $alu.
Using extmapper simplemap for cells of type $eq.
Using extmapper simplemap for cells of type $logic_not.
Using extmapper simplemap for cells of type $sr.
  add { \x2_mul.u5.opa [23] \x2_mul.opa_r [22:0] } * { \x2_mul.u5.opb [23] \x2_mul.opb_r [22:0] } (24x24 bits, unsigned)
  add { \x1_mul.u5.opa [23] \x1_mul.opa_r [22:0] } * { \x1_mul.u5.opb [23] \add3_add.opa_r [22:0] } (24x24 bits, unsigned)
Using template $paramod$cc48387a3f2cae79a81035f3d5a9b4758cb77854\_90_alu for cells of type $alu.
  add { \x4_mul.u5.opa [23] \add4_add.opa_r [22:0] } * { \x4_mul.u5.opb [23] \add5_add.opb_r [22:0] } (24x24 bits, unsigned)
Running "alumacc" on wrapper $extern:wrap:$neg:A_SIGNED=0:A_WIDTH=28:Y_WIDTH=28:394426c56d1a028ba8fdd5469b163e04011def47.
Using template $extern:wrap:$neg:A_SIGNED=0:A_WIDTH=28:Y_WIDTH=28:394426c56d1a028ba8fdd5469b163e04011def47 for cells of type $extern:wrap:$neg:A_SIGNED=0:A_WIDTH=28:Y_WIDTH=28:394426c56d1a028ba8fdd5469b163e04011def47.
Using template $paramod$0f5ffea2e930e970e8f572869849b5f2f19f6a7a\_80_rs_alu for cells of type $alu.
Using template $paramod$403a3c2fa431a154c52a6a5429d7a6260b5d144f\_90_alu for cells of type $alu.
Using template $paramod$844a3554f488664d31eaf08cbd837f0ab0f0ea5b\_80_rs_alu for cells of type $alu.
Using template $paramod$7a07f1b961e4a8e1e63d0145f194136da701d33b\_80_rs_alu for cells of type $alu.
Using template $paramod$adc37058fc3ee4ae694519235f0aee09f8f30ba4\_80_rs_alu for cells of type $alu.
Using template $paramod\_90_lcu\WIDTH=32'00000000000000000000000000001000 for cells of type $lcu.
Using extmapper simplemap for cells of type $xor.
Using extmapper simplemap for cells of type $pos.
Using template $paramod$b428551475981eb3841439c41ff02dfe9ed0c0f2\_90_alu for cells of type $alu.
Using template $paramod\_90_fa\WIDTH=32'00000000000000000000000000110000 for cells of type $fa.
Using template $paramod\_90_fa\WIDTH=32'00000000000000000000000000101111 for cells of type $fa.
Using template $paramod$88aad6f8473fb7e4e5fbfb8335ddebad03429eaa\_90_alu for cells of type $alu.
Using template $paramod\_90_lcu\WIDTH=32'00000000000000000000000000011000 for cells of type $lcu.
Using template $paramod\_90_lcu\WIDTH=32'00000000000000000000000000001001 for cells of type $lcu.
Using template $paramod\_90_lcu\WIDTH=32'00000000000000000000000000000110 for cells of type $lcu.
Using template $paramod\_90_lcu\WIDTH=32'00000000000000000000000000011100 for cells of type $lcu.
Using template $paramod\_90_lcu\WIDTH=32'00000000000000000000000000110000 for cells of type $lcu.
No more expansions possible.
<suppressed ~11777 debug messages>

yosys> stat

3.88. Printing statistics.

=== top ===

   Number of wires:              14759
   Number of wire bits:         311468
   Number of public wires:        1869
   Number of public wire bits:   20728
   Number of memories:               0
   Number of memory bits:            0
   Number of processes:              0
   Number of cells:              90539
     $_AND_                      17521
     $_DFF_P_                     2219
     $_DLATCH_P_                   624
     $_MUX_                      33473
     $_NOT_                       2150
     $_OR_                       15917
     $_SR_PP_                       54
     $_XOR_                      18191
     adder_carry                   390


yosys> opt_expr

3.89. Executing OPT_EXPR pass (perform const folding).
Optimizing module top.
<suppressed ~35723 debug messages>

yosys> opt_merge -nomux

3.90. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\top'.
<suppressed ~60219 debug messages>
Removed a total of 20073 cells.

yosys> opt_muxtree

3.91. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \top..
  Creating internal representation of mux trees.
  No muxes found in this module.
Removed 0 multiplexer ports.

yosys> opt_reduce

3.92. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \top.
Performed a total of 0 changes.

yosys> opt_merge

3.93. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\top'.
Removed a total of 0 cells.

yosys> opt_share

3.94. Executing OPT_SHARE pass.
    Found cells that share an operand and can be merged by moving the $_MUX_ $auto$simplemap.cc:278:simplemap_mux$58948 in front of them:
        $auto$simplemap.cc:137:simplemap_reduce$58559
        $auto$simplemap.cc:137:simplemap_reduce$58566

    Found cells that share an operand and can be merged by moving the $_MUX_ $auto$simplemap.cc:278:simplemap_mux$58946 in front of them:
        $auto$simplemap.cc:137:simplemap_reduce$58520
        $auto$simplemap.cc:137:simplemap_reduce$58532

    Found cells that share an operand and can be merged by moving the $_MUX_ $auto$simplemap.cc:278:simplemap_mux$58945 in front of them:
        $auto$simplemap.cc:137:simplemap_reduce$58493
        $auto$simplemap.cc:137:simplemap_reduce$58507

    Found cells that share an operand and can be merged by moving the $_MUX_ $auto$simplemap.cc:278:simplemap_mux$58944 in front of them:
        $auto$simplemap.cc:137:simplemap_reduce$58462
        $auto$simplemap.cc:137:simplemap_reduce$58478

    Found cells that share an operand and can be merged by moving the $_MUX_ $auto$simplemap.cc:278:simplemap_mux$58942 in front of them:
        $auto$simplemap.cc:137:simplemap_reduce$58387
        $auto$simplemap.cc:137:simplemap_reduce$58408

    Found cells that share an operand and can be merged by moving the $_MUX_ $auto$simplemap.cc:278:simplemap_mux$58941 in front of them:
        $auto$simplemap.cc:137:simplemap_reduce$58342
        $auto$simplemap.cc:137:simplemap_reduce$58365

    Found cells that share an operand and can be merged by moving the $_MUX_ $auto$simplemap.cc:278:simplemap_mux$58940 in front of them:
        $auto$simplemap.cc:137:simplemap_reduce$58668
        $auto$simplemap.cc:137:simplemap_reduce$58318

    Found cells that share an operand and can be merged by moving the $_MUX_ $auto$simplemap.cc:278:simplemap_mux$54217 in front of them:
        $auto$simplemap.cc:137:simplemap_reduce$53839
        $auto$simplemap.cc:137:simplemap_reduce$53846

    Found cells that share an operand and can be merged by moving the $_MUX_ $auto$simplemap.cc:278:simplemap_mux$54215 in front of them:
        $auto$simplemap.cc:137:simplemap_reduce$53800
        $auto$simplemap.cc:137:simplemap_reduce$53812

    Found cells that share an operand and can be merged by moving the $_MUX_ $auto$simplemap.cc:278:simplemap_mux$54214 in front of them:
        $auto$simplemap.cc:137:simplemap_reduce$53773
        $auto$simplemap.cc:137:simplemap_reduce$53787

    Found cells that share an operand and can be merged by moving the $_MUX_ $auto$simplemap.cc:278:simplemap_mux$54213 in front of them:
        $auto$simplemap.cc:137:simplemap_reduce$53742
        $auto$simplemap.cc:137:simplemap_reduce$53758

    Found cells that share an operand and can be merged by moving the $_MUX_ $auto$simplemap.cc:278:simplemap_mux$54211 in front of them:
        $auto$simplemap.cc:137:simplemap_reduce$53667
        $auto$simplemap.cc:137:simplemap_reduce$53688

    Found cells that share an operand and can be merged by moving the $_MUX_ $auto$simplemap.cc:278:simplemap_mux$54210 in front of them:
        $auto$simplemap.cc:137:simplemap_reduce$53622
        $auto$simplemap.cc:137:simplemap_reduce$53645

    Found cells that share an operand and can be merged by moving the $_MUX_ $auto$simplemap.cc:278:simplemap_mux$54209 in front of them:
        $auto$simplemap.cc:137:simplemap_reduce$53938
        $auto$simplemap.cc:137:simplemap_reduce$53598

    Found cells that share an operand and can be merged by moving the $_MUX_ $auto$simplemap.cc:278:simplemap_mux$49469 in front of them:
        $auto$simplemap.cc:137:simplemap_reduce$49063
        $auto$simplemap.cc:137:simplemap_reduce$49070

    Found cells that share an operand and can be merged by moving the $_MUX_ $auto$simplemap.cc:278:simplemap_mux$49467 in front of them:
        $auto$simplemap.cc:137:simplemap_reduce$49024
        $auto$simplemap.cc:137:simplemap_reduce$49036

    Found cells that share an operand and can be merged by moving the $_MUX_ $auto$simplemap.cc:278:simplemap_mux$49466 in front of them:
        $auto$simplemap.cc:137:simplemap_reduce$48997
        $auto$simplemap.cc:137:simplemap_reduce$49011

    Found cells that share an operand and can be merged by moving the $_MUX_ $auto$simplemap.cc:278:simplemap_mux$49465 in front of them:
        $auto$simplemap.cc:137:simplemap_reduce$48966
        $auto$simplemap.cc:137:simplemap_reduce$48982

    Found cells that share an operand and can be merged by moving the $_MUX_ $auto$simplemap.cc:278:simplemap_mux$49463 in front of them:
        $auto$simplemap.cc:137:simplemap_reduce$48891
        $auto$simplemap.cc:137:simplemap_reduce$48912

    Found cells that share an operand and can be merged by moving the $_MUX_ $auto$simplemap.cc:278:simplemap_mux$49462 in front of them:
        $auto$simplemap.cc:137:simplemap_reduce$48846
        $auto$simplemap.cc:137:simplemap_reduce$48869

    Found cells that share an operand and can be merged by moving the $_MUX_ $auto$simplemap.cc:278:simplemap_mux$49461 in front of them:
        $auto$simplemap.cc:137:simplemap_reduce$49162
        $auto$simplemap.cc:137:simplemap_reduce$48822

    Found cells that share an operand and can be merged by moving the $_MUX_ $auto$simplemap.cc:278:simplemap_mux$44683 in front of them:
        $auto$simplemap.cc:137:simplemap_reduce$44305
        $auto$simplemap.cc:137:simplemap_reduce$44312

    Found cells that share an operand and can be merged by moving the $_MUX_ $auto$simplemap.cc:278:simplemap_mux$44681 in front of them:
        $auto$simplemap.cc:137:simplemap_reduce$44266
        $auto$simplemap.cc:137:simplemap_reduce$44278

    Found cells that share an operand and can be merged by moving the $_MUX_ $auto$simplemap.cc:278:simplemap_mux$44680 in front of them:
        $auto$simplemap.cc:137:simplemap_reduce$44239
        $auto$simplemap.cc:137:simplemap_reduce$44253

    Found cells that share an operand and can be merged by moving the $_MUX_ $auto$simplemap.cc:278:simplemap_mux$44679 in front of them:
        $auto$simplemap.cc:137:simplemap_reduce$44208
        $auto$simplemap.cc:137:simplemap_reduce$44224

    Found cells that share an operand and can be merged by moving the $_MUX_ $auto$simplemap.cc:278:simplemap_mux$44677 in front of them:
        $auto$simplemap.cc:137:simplemap_reduce$44133
        $auto$simplemap.cc:137:simplemap_reduce$44154

    Found cells that share an operand and can be merged by moving the $_MUX_ $auto$simplemap.cc:278:simplemap_mux$44676 in front of them:
        $auto$simplemap.cc:137:simplemap_reduce$44088
        $auto$simplemap.cc:137:simplemap_reduce$44111

    Found cells that share an operand and can be merged by moving the $_MUX_ $auto$simplemap.cc:278:simplemap_mux$44675 in front of them:
        $auto$simplemap.cc:137:simplemap_reduce$44404
        $auto$simplemap.cc:137:simplemap_reduce$44064

    Found cells that share an operand and can be merged by moving the $_MUX_ $auto$simplemap.cc:278:simplemap_mux$39924 in front of them:
        $auto$simplemap.cc:137:simplemap_reduce$39532
        $auto$simplemap.cc:137:simplemap_reduce$39539

    Found cells that share an operand and can be merged by moving the $_MUX_ $auto$simplemap.cc:278:simplemap_mux$39922 in front of them:
        $auto$simplemap.cc:137:simplemap_reduce$39493
        $auto$simplemap.cc:137:simplemap_reduce$39505

    Found cells that share an operand and can be merged by moving the $_MUX_ $auto$simplemap.cc:278:simplemap_mux$39921 in front of them:
        $auto$simplemap.cc:137:simplemap_reduce$39466
        $auto$simplemap.cc:137:simplemap_reduce$39480

    Found cells that share an operand and can be merged by moving the $_MUX_ $auto$simplemap.cc:278:simplemap_mux$39920 in front of them:
        $auto$simplemap.cc:137:simplemap_reduce$39435
        $auto$simplemap.cc:137:simplemap_reduce$39451

    Found cells that share an operand and can be merged by moving the $_MUX_ $auto$simplemap.cc:278:simplemap_mux$39918 in front of them:
        $auto$simplemap.cc:137:simplemap_reduce$39360
        $auto$simplemap.cc:137:simplemap_reduce$39381

    Found cells that share an operand and can be merged by moving the $_MUX_ $auto$simplemap.cc:278:simplemap_mux$39917 in front of them:
        $auto$simplemap.cc:137:simplemap_reduce$39315
        $auto$simplemap.cc:137:simplemap_reduce$39338

    Found cells that share an operand and can be merged by moving the $_MUX_ $auto$simplemap.cc:278:simplemap_mux$39916 in front of them:
        $auto$simplemap.cc:137:simplemap_reduce$39631
        $auto$simplemap.cc:137:simplemap_reduce$39291


yosys> opt_dff -nosdff -nodffe

3.95. Executing OPT_DFF pass (perform DFF optimizations).

yosys> opt_clean

3.96. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \top..
Removed 1198 unused cells and 7308 unused wires.
<suppressed ~1199 debug messages>

yosys> opt_expr

3.97. Executing OPT_EXPR pass (perform const folding).
Optimizing module top.
<suppressed ~59 debug messages>

yosys> opt_muxtree

3.98. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \top..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Removed 0 multiplexer ports.
<suppressed ~35 debug messages>

yosys> opt_reduce

3.99. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \top.
Performed a total of 0 changes.

yosys> opt_merge

3.100. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\top'.
Removed a total of 0 cells.

yosys> opt_share

3.101. Executing OPT_SHARE pass.
    Found cells that share an operand and can be merged by moving the $mux $auto$opt_share.cc:241:merge_operators$102880 in front of them:
        $auto$simplemap.cc:137:simplemap_reduce$58460
        $auto$simplemap.cc:137:simplemap_reduce$58476

    Found cells that share an operand and can be merged by moving the $mux $auto$opt_share.cc:241:merge_operators$102889 in front of them:
        $auto$simplemap.cc:137:simplemap_reduce$58664
        $auto$simplemap.cc:137:simplemap_reduce$58314

    Found cells that share an operand and can be merged by moving the $mux $auto$opt_share.cc:241:merge_operators$102901 in front of them:
        $auto$simplemap.cc:137:simplemap_reduce$53740
        $auto$simplemap.cc:137:simplemap_reduce$53756

    Found cells that share an operand and can be merged by moving the $mux $auto$opt_share.cc:241:merge_operators$102910 in front of them:
        $auto$simplemap.cc:137:simplemap_reduce$53934
        $auto$simplemap.cc:137:simplemap_reduce$53594

    Found cells that share an operand and can be merged by moving the $mux $auto$opt_share.cc:241:merge_operators$102922 in front of them:
        $auto$simplemap.cc:137:simplemap_reduce$48964
        $auto$simplemap.cc:137:simplemap_reduce$48980

    Found cells that share an operand and can be merged by moving the $mux $auto$opt_share.cc:241:merge_operators$102931 in front of them:
        $auto$simplemap.cc:137:simplemap_reduce$49158
        $auto$simplemap.cc:137:simplemap_reduce$48818

    Found cells that share an operand and can be merged by moving the $mux $auto$opt_share.cc:241:merge_operators$102943 in front of them:
        $auto$simplemap.cc:137:simplemap_reduce$44206
        $auto$simplemap.cc:137:simplemap_reduce$44222

    Found cells that share an operand and can be merged by moving the $mux $auto$opt_share.cc:241:merge_operators$102952 in front of them:
        $auto$simplemap.cc:137:simplemap_reduce$44400
        $auto$simplemap.cc:137:simplemap_reduce$44060

    Found cells that share an operand and can be merged by moving the $mux $auto$opt_share.cc:241:merge_operators$102964 in front of them:
        $auto$simplemap.cc:137:simplemap_reduce$39433
        $auto$simplemap.cc:137:simplemap_reduce$39449

    Found cells that share an operand and can be merged by moving the $mux $auto$opt_share.cc:241:merge_operators$102973 in front of them:
        $auto$simplemap.cc:137:simplemap_reduce$39627
        $auto$simplemap.cc:137:simplemap_reduce$39287

    Found cells that share an operand and can be merged by moving the $_MUX_ $auto$simplemap.cc:278:simplemap_mux$39910 in front of them:
        $auto$simplemap.cc:137:simplemap_reduce$39315
        $auto$simplemap.cc:137:simplemap_reduce$39360

    Found cells that share an operand and can be merged by moving the $_MUX_ $auto$simplemap.cc:278:simplemap_mux$39912 in front of them:
        $auto$simplemap.cc:137:simplemap_reduce$39466
        $auto$simplemap.cc:137:simplemap_reduce$39493

    Found cells that share an operand and can be merged by moving the $_MUX_ $auto$simplemap.cc:278:simplemap_mux$44669 in front of them:
        $auto$simplemap.cc:137:simplemap_reduce$44088
        $auto$simplemap.cc:137:simplemap_reduce$44133

    Found cells that share an operand and can be merged by moving the $_MUX_ $auto$simplemap.cc:278:simplemap_mux$44671 in front of them:
        $auto$simplemap.cc:137:simplemap_reduce$44239
        $auto$simplemap.cc:137:simplemap_reduce$44266

    Found cells that share an operand and can be merged by moving the $_MUX_ $auto$simplemap.cc:278:simplemap_mux$49455 in front of them:
        $auto$simplemap.cc:137:simplemap_reduce$48846
        $auto$simplemap.cc:137:simplemap_reduce$48891

    Found cells that share an operand and can be merged by moving the $_MUX_ $auto$simplemap.cc:278:simplemap_mux$49457 in front of them:
        $auto$simplemap.cc:137:simplemap_reduce$48997
        $auto$simplemap.cc:137:simplemap_reduce$49024

    Found cells that share an operand and can be merged by moving the $_MUX_ $auto$simplemap.cc:278:simplemap_mux$54203 in front of them:
        $auto$simplemap.cc:137:simplemap_reduce$53622
        $auto$simplemap.cc:137:simplemap_reduce$53667

    Found cells that share an operand and can be merged by moving the $_MUX_ $auto$simplemap.cc:278:simplemap_mux$54205 in front of them:
        $auto$simplemap.cc:137:simplemap_reduce$53773
        $auto$simplemap.cc:137:simplemap_reduce$53800

    Found cells that share an operand and can be merged by moving the $_MUX_ $auto$simplemap.cc:278:simplemap_mux$58934 in front of them:
        $auto$simplemap.cc:137:simplemap_reduce$58342
        $auto$simplemap.cc:137:simplemap_reduce$58387

    Found cells that share an operand and can be merged by moving the $_MUX_ $auto$simplemap.cc:278:simplemap_mux$58936 in front of them:
        $auto$simplemap.cc:137:simplemap_reduce$58493
        $auto$simplemap.cc:137:simplemap_reduce$58520


yosys> opt_dff -nosdff -nodffe

3.102. Executing OPT_DFF pass (perform DFF optimizations).

yosys> opt_clean

3.103. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \top..
Removed 0 unused cells and 40 unused wires.
<suppressed ~1 debug messages>

yosys> opt_expr

3.104. Executing OPT_EXPR pass (perform const folding).
Optimizing module top.
<suppressed ~20 debug messages>

yosys> opt_muxtree

3.105. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \top..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Removed 0 multiplexer ports.
<suppressed ~25 debug messages>

yosys> opt_reduce

3.106. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \top.
Performed a total of 0 changes.

yosys> opt_merge

3.107. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\top'.
Removed a total of 0 cells.

yosys> opt_share

3.108. Executing OPT_SHARE pass.

yosys> opt_dff -nosdff -nodffe

3.109. Executing OPT_DFF pass (perform DFF optimizations).

yosys> opt_clean

3.110. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \top..
Removed 0 unused cells and 10 unused wires.
<suppressed ~1 debug messages>

yosys> opt_expr

3.111. Executing OPT_EXPR pass (perform const folding).
Optimizing module top.
MAX OPT ITERATION = 3

yosys> opt_expr -full

3.112. Executing OPT_EXPR pass (perform const folding).
Optimizing module top.
<suppressed ~1926 debug messages>

yosys> techmap -map +/techmap.v

3.113. Executing TECHMAP pass (map to technology primitives).

3.113.1. Executing Verilog-2005 frontend: /nfs_scratch/scratch/Vorak/aram/Workspace/Raptor/yosys_verific_rs/yosys/install/bin/../share/yosys/techmap.v
Parsing Verilog input from `/nfs_scratch/scratch/Vorak/aram/Workspace/Raptor/yosys_verific_rs/yosys/install/bin/../share/yosys/techmap.v' to AST representation.
Generating RTLIL representation for module `\_90_simplemap_bool_ops'.
Generating RTLIL representation for module `\_90_simplemap_reduce_ops'.
Generating RTLIL representation for module `\_90_simplemap_logic_ops'.
Generating RTLIL representation for module `\_90_simplemap_compare_ops'.
Generating RTLIL representation for module `\_90_simplemap_various'.
Generating RTLIL representation for module `\_90_simplemap_registers'.
Generating RTLIL representation for module `\_90_shift_ops_shr_shl_sshl_sshr'.
Generating RTLIL representation for module `\_90_shift_shiftx'.
Generating RTLIL representation for module `\_90_fa'.
Generating RTLIL representation for module `\_90_lcu'.
Generating RTLIL representation for module `\_90_alu'.
Generating RTLIL representation for module `\_90_macc'.
Generating RTLIL representation for module `\_90_alumacc'.
Generating RTLIL representation for module `\$__div_mod_u'.
Generating RTLIL representation for module `\$__div_mod_trunc'.
Generating RTLIL representation for module `\_90_div'.
Generating RTLIL representation for module `\_90_mod'.
Generating RTLIL representation for module `\$__div_mod_floor'.
Generating RTLIL representation for module `\_90_divfloor'.
Generating RTLIL representation for module `\_90_modfloor'.
Generating RTLIL representation for module `\_90_pow'.
Generating RTLIL representation for module `\_90_pmux'.
Generating RTLIL representation for module `\_90_demux'.
Generating RTLIL representation for module `\_90_lut'.
Successfully finished Verilog frontend.

3.113.2. Continuing TECHMAP pass.
Using extmapper simplemap for cells of type $mux.
No more expansions possible.
<suppressed ~116 debug messages>

yosys> opt_expr

3.114. Executing OPT_EXPR pass (perform const folding).
Optimizing module top.

yosys> opt_merge -nomux

3.115. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\top'.
<suppressed ~384 debug messages>
Removed a total of 128 cells.

yosys> opt_muxtree

3.116. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \top..
  Creating internal representation of mux trees.
  No muxes found in this module.
Removed 0 multiplexer ports.

yosys> opt_reduce

3.117. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \top.
Performed a total of 0 changes.

yosys> opt_merge

3.118. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\top'.
Removed a total of 0 cells.

yosys> opt_dff -nosdff -nodffe -sat

3.119. Executing OPT_DFF pass (perform DFF optimizations).
Setting constant 0-bit at position 0 on $auto$ff.cc:262:slice$43785 ($_DLATCH_P_) from module top.
Setting constant 0-bit at position 0 on $auto$ff.cc:262:slice$48577 ($_DLATCH_P_) from module top.
Setting constant 0-bit at position 0 on $auto$ff.cc:262:slice$53363 ($_DLATCH_P_) from module top.
Setting constant 0-bit at position 0 on $auto$ff.cc:262:slice$58111 ($_DLATCH_P_) from module top.
Setting constant 0-bit at position 0 on $auto$ff.cc:262:slice$62775 ($_DLATCH_P_) from module top.

yosys> opt_clean

3.120. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \top..

yosys> opt_expr

3.121. Executing OPT_EXPR pass (perform const folding).
Optimizing module top.
<suppressed ~15 debug messages>

yosys> opt_muxtree

3.122. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \top..
  Creating internal representation of mux trees.
  No muxes found in this module.
Removed 0 multiplexer ports.

yosys> opt_reduce

3.123. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \top.
Performed a total of 0 changes.

yosys> opt_merge

3.124. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\top'.
Removed a total of 0 cells.

yosys> opt_dff -nosdff -nodffe -sat

3.125. Executing OPT_DFF pass (perform DFF optimizations).

yosys> opt_clean

3.126. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \top..
Removed 0 unused cells and 10 unused wires.
<suppressed ~1 debug messages>

yosys> opt_expr

3.127. Executing OPT_EXPR pass (perform const folding).
Optimizing module top.
MAX OPT ITERATION = 2

yosys> abc -dff

3.128. Executing ABC pass (technology mapping using ABC).

3.128.1. Summary of detected clock domains:
  35780 cells in clk=\clock, en={ }, arst={ }, srst={ }

3.128.2. Extracting gate netlist of module `\top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clock
Extracted 34812 gates and 35697 wires to a netlist network with 883 inputs and 1472 outputs.

3.128.2.1. Executing ABC.

yosys> abc -dff

3.129. Executing ABC pass (technology mapping using ABC).

3.129.1. Summary of detected clock domains:
  29997 cells in clk=\clock, en={ }, arst={ }, srst={ }

3.129.2. Extracting gate netlist of module `\top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clock
Extracted 29029 gates and 29912 wires to a netlist network with 883 inputs and 1461 outputs.

3.129.2.1. Executing ABC.

yosys> abc -dff

3.130. Executing ABC pass (technology mapping using ABC).

3.130.1. Summary of detected clock domains:
  29856 cells in clk=\clock, en={ }, arst={ }, srst={ }

3.130.2. Extracting gate netlist of module `\top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clock
Extracted 28888 gates and 29771 wires to a netlist network with 883 inputs and 1461 outputs.

3.130.2.1. Executing ABC.

yosys> abc -dff

3.131. Executing ABC pass (technology mapping using ABC).

3.131.1. Summary of detected clock domains:
  29656 cells in clk=\clock, en={ }, arst={ }, srst={ }

3.131.2. Extracting gate netlist of module `\top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clock
Extracted 28688 gates and 29571 wires to a netlist network with 883 inputs and 1461 outputs.

3.131.2.1. Executing ABC.

yosys> opt_ffinv

3.132. Executing OPT_FFINV pass (push inverters through FFs).
Discovering LUTs.
Pushed 0 inverters.

yosys> opt_expr

3.133. Executing OPT_EXPR pass (perform const folding).
Optimizing module top.
<suppressed ~201 debug messages>

yosys> opt_merge -nomux

3.134. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\top'.
<suppressed ~12 debug messages>
Removed a total of 4 cells.

yosys> opt_muxtree

3.135. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \top..
  Creating internal representation of mux trees.
  No muxes found in this module.
Removed 0 multiplexer ports.

yosys> opt_reduce

3.136. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \top.
Performed a total of 0 changes.

yosys> opt_merge

3.137. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\top'.
Removed a total of 0 cells.

yosys> opt_share

3.138. Executing OPT_SHARE pass.

yosys> opt_dff -nosdff -sat

3.139. Executing OPT_DFF pass (perform DFF optimizations).

yosys> opt_clean

3.140. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \top..
Removed 54 unused cells and 104704 unused wires.
<suppressed ~1138 debug messages>

yosys> opt_expr

3.141. Executing OPT_EXPR pass (perform const folding).
Optimizing module top.

yosys> opt_muxtree

3.142. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \top..
  Creating internal representation of mux trees.
  No muxes found in this module.
Removed 0 multiplexer ports.

yosys> opt_reduce

3.143. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \top.
Performed a total of 0 changes.

yosys> opt_merge

3.144. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\top'.
Removed a total of 0 cells.

yosys> opt_share

3.145. Executing OPT_SHARE pass.

yosys> opt_dff -nosdff -sat

3.146. Executing OPT_DFF pass (perform DFF optimizations).

yosys> opt_clean

3.147. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \top..

yosys> opt_expr

3.148. Executing OPT_EXPR pass (perform const folding).
Optimizing module top.
MAX OPT ITERATION = 2

yosys> bmuxmap

3.149. Executing BMUXMAP pass.

yosys> demuxmap

3.150. Executing DEMUXMAP pass.

yosys> clean_zerowidth

yosys> abc -script /tmp/yosys_BtD2IW/abc_tmp_1.scr

3.151. Executing ABC pass (technology mapping using ABC).

3.151.1. Extracting gate netlist of module `\top' to `<abc-temp-dir>/input.blif'..
Extracted 26373 gates and 27997 wires to a netlist network with 1624 inputs and 1903 outputs.

3.151.1.1. Executing ABC.
DE:   #PIs = 1624  #Luts =  9671  Max Lvl =  26  Avg Lvl =  11.87  [   0.88 sec. at Pass 0]{firstMap}
DE:   #PIs = 1624  #Luts =  9671  Max Lvl =  26  Avg Lvl =  11.87  [ 108.75 sec. at Pass 1]{initMapFlow}
DE:   #PIs = 1624  #Luts =  9051  Max Lvl =  44  Avg Lvl =  15.89  [  13.21 sec. at Pass 2]{map}
DE:   #PIs = 1624  #Luts =  8979  Max Lvl =  48  Avg Lvl =  15.74  [  24.68 sec. at Pass 3]{postMap}
DE:   #PIs = 1624  #Luts =  8909  Max Lvl =  48  Avg Lvl =  15.61  [  16.40 sec. at Pass 4]{map}
DE:   #PIs = 1624  #Luts =  8865  Max Lvl =  43  Avg Lvl =  15.34  [  36.67 sec. at Pass 5]{postMap}
DE:   #PIs = 1624  #Luts =  8805  Max Lvl =  45  Avg Lvl =  15.07  [  22.92 sec. at Pass 6]{map}
DE:   #PIs = 1624  #Luts =  8805  Max Lvl =  45  Avg Lvl =  15.07  [  37.14 sec. at Pass 7]{postMap}
DE:   #PIs = 1624  #Luts =  8758  Max Lvl =  45  Avg Lvl =  14.82  [  23.57 sec. at Pass 8]{map}
DE:   #PIs = 1624  #Luts =  8758  Max Lvl =  45  Avg Lvl =  14.82  [  34.17 sec. at Pass 9]{postMap}
DE:   #PIs = 1624  #Luts =  8756  Max Lvl =  48  Avg Lvl =  15.09  [   3.61 sec. at Pass 10]{finalMap}

yosys> opt_expr

3.152. Executing OPT_EXPR pass (perform const folding).
Optimizing module top.

yosys> opt_merge -nomux

3.153. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\top'.
<suppressed ~3 debug messages>
Removed a total of 1 cells.

yosys> opt_muxtree

3.154. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \top..
  Creating internal representation of mux trees.
  No muxes found in this module.
Removed 0 multiplexer ports.

yosys> opt_reduce

3.155. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \top.
Performed a total of 0 changes.

yosys> opt_merge

3.156. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\top'.
Removed a total of 0 cells.

yosys> opt_share

3.157. Executing OPT_SHARE pass.

yosys> opt_dff -nosdff -nodffe

3.158. Executing OPT_DFF pass (perform DFF optimizations).

yosys> opt_clean

3.159. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \top..
Removed 0 unused cells and 27998 unused wires.
<suppressed ~1 debug messages>

yosys> opt_expr

3.160. Executing OPT_EXPR pass (perform const folding).
Optimizing module top.
MAX OPT ITERATION = 1

yosys> opt_ffinv

3.161. Executing OPT_FFINV pass (push inverters through FFs).
Discovering LUTs.
Pushed 1 inverters.

yosys> stat

3.162. Printing statistics.

=== top ===

   Number of wires:              10862
   Number of wire bits:          22177
   Number of public wires:         786
   Number of public wire bits:   11042
   Number of memories:               0
   Number of memory bits:            0
   Number of processes:              0
   Number of cells:              11799
     $_DFF_P_                     2076
     $_DLATCH_P_                   524
     $_SR_NP_                        1
     $_SR_PN_                       53
     $lut                         8755
     adder_carry                   390


yosys> shregmap -minlen 8 -maxlen 20

3.163. Executing SHREGMAP pass (map shift registers).
Converted 0 dff cells into 0 shift registers.

yosys> dfflegalize -cell $_DFF_?_ 0 -cell $_DFF_???_ 0 -cell $_DFFE_????_ 0 -cell $_DFFSR_???_ 0 -cell $_DFFSRE_????_ 0 -cell $_DLATCHSR_PPP_ 0

3.164. Executing DFFLEGALIZE pass (convert FFs to types supported by the target).

yosys> stat

3.165. Printing statistics.

=== top ===

   Number of wires:              10916
   Number of wire bits:          22231
   Number of public wires:         786
   Number of public wire bits:   11042
   Number of memories:               0
   Number of memory bits:            0
   Number of processes:              0
   Number of cells:              11853
     $_DFF_P_                     2076
     $_DLATCHSR_PPP_               578
     $_NOT_                         54
     $lut                         8755
     adder_carry                   390


yosys> techmap -map +/techmap.v -map +/rapidsilicon/genesis/ffs_map.v

3.166. Executing TECHMAP pass (map to technology primitives).

3.166.1. Executing Verilog-2005 frontend: /nfs_scratch/scratch/Vorak/aram/Workspace/Raptor/yosys_verific_rs/yosys/install/bin/../share/yosys/techmap.v
Parsing Verilog input from `/nfs_scratch/scratch/Vorak/aram/Workspace/Raptor/yosys_verific_rs/yosys/install/bin/../share/yosys/techmap.v' to AST representation.
Generating RTLIL representation for module `\_90_simplemap_bool_ops'.
Generating RTLIL representation for module `\_90_simplemap_reduce_ops'.
Generating RTLIL representation for module `\_90_simplemap_logic_ops'.
Generating RTLIL representation for module `\_90_simplemap_compare_ops'.
Generating RTLIL representation for module `\_90_simplemap_various'.
Generating RTLIL representation for module `\_90_simplemap_registers'.
Generating RTLIL representation for module `\_90_shift_ops_shr_shl_sshl_sshr'.
Generating RTLIL representation for module `\_90_shift_shiftx'.
Generating RTLIL representation for module `\_90_fa'.
Generating RTLIL representation for module `\_90_lcu'.
Generating RTLIL representation for module `\_90_alu'.
Generating RTLIL representation for module `\_90_macc'.
Generating RTLIL representation for module `\_90_alumacc'.
Generating RTLIL representation for module `\$__div_mod_u'.
Generating RTLIL representation for module `\$__div_mod_trunc'.
Generating RTLIL representation for module `\_90_div'.
Generating RTLIL representation for module `\_90_mod'.
Generating RTLIL representation for module `\$__div_mod_floor'.
Generating RTLIL representation for module `\_90_divfloor'.
Generating RTLIL representation for module `\_90_modfloor'.
Generating RTLIL representation for module `\_90_pow'.
Generating RTLIL representation for module `\_90_pmux'.
Generating RTLIL representation for module `\_90_demux'.
Generating RTLIL representation for module `\_90_lut'.
Successfully finished Verilog frontend.

3.166.2. Executing Verilog-2005 frontend: /nfs_scratch/scratch/Vorak/aram/Workspace/Raptor/yosys_verific_rs/yosys/install/bin/../share/yosys/rapidsilicon/genesis/ffs_map.v
Parsing Verilog input from `/nfs_scratch/scratch/Vorak/aram/Workspace/Raptor/yosys_verific_rs/yosys/install/bin/../share/yosys/rapidsilicon/genesis/ffs_map.v' to AST representation.
Generating RTLIL representation for module `\$_DFF_P_'.
Generating RTLIL representation for module `\$_DFF_PP0_'.
Generating RTLIL representation for module `\$_DFF_PN0_'.
Generating RTLIL representation for module `\$_DFF_PP1_'.
Generating RTLIL representation for module `\$_DFF_PN1_'.
Generating RTLIL representation for module `\$_DFFE_PP_'.
Generating RTLIL representation for module `\$_DFFE_PN_'.
Generating RTLIL representation for module `\$_DFFE_PP0P_'.
Generating RTLIL representation for module `\$_DFFE_PP0N_'.
Generating RTLIL representation for module `\$_DFFE_PN0P_'.
Generating RTLIL representation for module `\$_DFFE_PN0N_'.
Generating RTLIL representation for module `\$_DFFE_PP1P_'.
Generating RTLIL representation for module `\$_DFFE_PP1N_'.
Generating RTLIL representation for module `\$_DFFE_PN1P_'.
Generating RTLIL representation for module `\$_DFFE_PN1N_'.
Generating RTLIL representation for module `\$_DFFSR_PPP_'.
Generating RTLIL representation for module `\$_DFFSR_PNP_'.
Generating RTLIL representation for module `\$_DFFSR_PNN_'.
Generating RTLIL representation for module `\$_DFFSR_PPN_'.
Generating RTLIL representation for module `\$_DFFSR_NPP_'.
Generating RTLIL representation for module `\$_DFFSR_NNP_'.
Generating RTLIL representation for module `\$_DFFSR_NNN_'.
Generating RTLIL representation for module `\$_DFFSR_NPN_'.
Generating RTLIL representation for module `\$_DFFSRE_PPPP_'.
Generating RTLIL representation for module `\$_DFFSRE_PNPP_'.
Generating RTLIL representation for module `\$_DFFSRE_PPNP_'.
Generating RTLIL representation for module `\$_DFFSRE_PNNP_'.
Generating RTLIL representation for module `\$_DFFSRE_PPPN_'.
Generating RTLIL representation for module `\$_DFFSRE_PNPN_'.
Generating RTLIL representation for module `\$_DFFSRE_PPNN_'.
Generating RTLIL representation for module `\$_DFFSRE_PNNN_'.
Generating RTLIL representation for module `\$_DLATCHSR_PPP_'.
Generating RTLIL representation for module `\$_DLATCHSR_NPP_'.
Generating RTLIL representation for module `\$_DFF_N_'.
Generating RTLIL representation for module `\$_DFF_NP0_'.
Generating RTLIL representation for module `\$_DFF_NN0_'.
Generating RTLIL representation for module `\$_DFF_NP1_'.
Generating RTLIL representation for module `\$_DFF_NN1_'.
Generating RTLIL representation for module `\$_DFFE_NP_'.
Generating RTLIL representation for module `\$_DFFE_NN_'.
Generating RTLIL representation for module `\$_DFFE_NP0P_'.
Generating RTLIL representation for module `\$_DFFE_NP0N_'.
Generating RTLIL representation for module `\$_DFFE_NN0P_'.
Generating RTLIL representation for module `\$_DFFE_NN0N_'.
Generating RTLIL representation for module `\$_DFFE_NP1P_'.
Generating RTLIL representation for module `\$_DFFE_NP1N_'.
Generating RTLIL representation for module `\$_DFFE_NN1P_'.
Generating RTLIL representation for module `\$_DFFE_NN1N_'.
Generating RTLIL representation for module `\$_DFFSRE_NPPP_'.
Generating RTLIL representation for module `\$_DFFSRE_NNPP_'.
Generating RTLIL representation for module `\$_DFFSRE_NPNP_'.
Generating RTLIL representation for module `\$_DFFSRE_NNNP_'.
Generating RTLIL representation for module `\$_DFFSRE_NPPN_'.
Generating RTLIL representation for module `\$_DFFSRE_NNPN_'.
Generating RTLIL representation for module `\$_DFFSRE_NPNN_'.
Generating RTLIL representation for module `\$_DFFSRE_NNNN_'.
Generating RTLIL representation for module `\$__SHREG_DFF_P_'.
Generating RTLIL representation for module `\$_SDFF_PP0_'.
Generating RTLIL representation for module `\$_SDFF_PN0_'.
Generating RTLIL representation for module `\$_SDFF_NP0_'.
Generating RTLIL representation for module `\$_SDFF_NN0_'.
Generating RTLIL representation for module `\$_SDFF_PP1_'.
Generating RTLIL representation for module `\$_SDFF_PN1_'.
Generating RTLIL representation for module `\$_SDFF_NP1_'.
Generating RTLIL representation for module `\$_SDFF_NN1_'.
Successfully finished Verilog frontend.

3.166.3. Continuing TECHMAP pass.
Using extmapper simplemap for cells of type $lut.
Using template \$_DLATCHSR_PPP_ for cells of type $_DLATCHSR_PPP_.
Using template \$_DFF_P_ for cells of type $_DFF_P_.
Using extmapper simplemap for cells of type $logic_not.
No more expansions possible.
<suppressed ~12701 debug messages>

yosys> opt_expr -mux_undef

3.167. Executing OPT_EXPR pass (perform const folding).
Optimizing module top.
<suppressed ~209895 debug messages>

yosys> simplemap

3.168. Executing SIMPLEMAP pass (map simple cells to gate primitives).

yosys> opt_expr

3.169. Executing OPT_EXPR pass (perform const folding).
Optimizing module top.

yosys> opt_merge

3.170. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\top'.
<suppressed ~180654 debug messages>
Removed a total of 60218 cells.

yosys> opt_dff -nodffe -nosdff

3.171. Executing OPT_DFF pass (perform DFF optimizations).

yosys> opt_clean

3.172. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \top..
Removed 0 unused cells and 28313 unused wires.
<suppressed ~1 debug messages>

yosys> opt_expr

3.173. Executing OPT_EXPR pass (perform const folding).
Optimizing module top.
<suppressed ~6197 debug messages>

yosys> opt_merge -nomux

3.174. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\top'.
<suppressed ~597 debug messages>
Removed a total of 199 cells.

yosys> opt_muxtree

3.175. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \top..
  Creating internal representation of mux trees.
  No muxes found in this module.
Removed 0 multiplexer ports.

yosys> opt_reduce

3.176. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \top.
Performed a total of 0 changes.

yosys> opt_merge

3.177. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\top'.
Removed a total of 0 cells.

yosys> opt_share

3.178. Executing OPT_SHARE pass.

yosys> opt_dff -nosdff -nodffe

3.179. Executing OPT_DFF pass (perform DFF optimizations).

yosys> opt_clean

3.180. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \top..
Removed 0 unused cells and 1372 unused wires.
<suppressed ~1 debug messages>

yosys> opt_expr

3.181. Executing OPT_EXPR pass (perform const folding).
Optimizing module top.
MAX OPT ITERATION = 1

yosys> abc -script /tmp/yosys_BtD2IW/abc_tmp_2.scr

3.182. Executing ABC pass (technology mapping using ABC).

3.182.1. Extracting gate netlist of module `\top' to `<abc-temp-dir>/input.blif'..
Extracted 47530 gates and 49156 wires to a netlist network with 1624 inputs and 1956 outputs.

3.182.1.1. Executing ABC.
DE:   #PIs = 1624  #Luts =  8960  Max Lvl =  35  Avg Lvl =  12.67  [   1.39 sec. at Pass 0]{firstMap}
DE:   #PIs = 1624  #Luts =  8960  Max Lvl =  35  Avg Lvl =  12.67  [ 114.08 sec. at Pass 1]{initMapFlow}
DE:   #PIs = 1624  #Luts =  8831  Max Lvl =  44  Avg Lvl =  15.06  [  29.91 sec. at Pass 2]{map}
DE:   #PIs = 1624  #Luts =  8831  Max Lvl =  44  Avg Lvl =  15.06  [  60.06 sec. at Pass 3]{postMap}
DE:   #PIs = 1624  #Luts =  8767  Max Lvl =  45  Avg Lvl =  14.68  [  42.11 sec. at Pass 4]{map}
DE:   #PIs = 1624  #Luts =  8767  Max Lvl =  45  Avg Lvl =  14.68  [  53.00 sec. at Pass 5]{postMap}
DE:   #PIs = 1624  #Luts =  8767  Max Lvl =  45  Avg Lvl =  14.68  [  24.48 sec. at Pass 6]{map}
DE:   #PIs = 1624  #Luts =  8767  Max Lvl =  45  Avg Lvl =  14.68  [  42.32 sec. at Pass 7]{postMap}
DE:   #PIs = 1624  #Luts =  8762  Max Lvl =  46  Avg Lvl =  14.88  [   5.69 sec. at Pass 8]{finalMap}

yosys> opt_expr

3.183. Executing OPT_EXPR pass (perform const folding).
Optimizing module top.

yosys> opt_merge -nomux

3.184. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\top'.
Removed a total of 0 cells.

yosys> opt_muxtree

3.185. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \top..
  Creating internal representation of mux trees.
  No muxes found in this module.
Removed 0 multiplexer ports.

yosys> opt_reduce

3.186. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \top.
Performed a total of 0 changes.

yosys> opt_merge

3.187. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\top'.
Removed a total of 0 cells.

yosys> opt_share

3.188. Executing OPT_SHARE pass.

yosys> opt_dff -nosdff -nodffe

3.189. Executing OPT_DFF pass (perform DFF optimizations).

yosys> opt_clean

3.190. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \top..
Removed 0 unused cells and 32707 unused wires.
<suppressed ~1 debug messages>

yosys> opt_expr

3.191. Executing OPT_EXPR pass (perform const folding).
Optimizing module top.
MAX OPT ITERATION = 1

yosys> hierarchy -check

3.192. Executing HIERARCHY pass (managing design hierarchy).

3.192.1. Analyzing design hierarchy..
Top module:  \top

3.192.2. Analyzing design hierarchy..
Top module:  \top
Removed 0 unused modules.

yosys> stat

3.193. Printing statistics.

=== top ===

   Number of wires:              10869
   Number of wire bits:          22184
   Number of public wires:         786
   Number of public wire bits:   11042
   Number of memories:               0
   Number of memory bits:            0
   Number of processes:              0
   Number of cells:              11806
     $lut                         8762
     adder_carry                   390
     dffsre                       2076
     latchsre                      578


yosys> opt_clean -purge

3.194. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \top..
Removed 0 unused cells and 734 unused wires.
<suppressed ~734 debug messages>

yosys> write_verilog -noattr -nohex synthesized.v

3.195. Executing Verilog backend.
Dumping module `\top'.

Warnings: 156 unique messages, 156 total
End of script. Logfile hash: 46a1117b4a, CPU: user 155.26s system 0.68s, MEM: 672.78 MB peak
Yosys 0.18+10 (git sha1 7361c89db, gcc 9.4.0-1ubuntu1~20.04.1 -fPIC -Os)
Time spent: 96% 6x abc (4338 sec), 1% 43x opt_expr (58 sec), ...
real 943.50
user 4307.64
sys 177.28
