
 /----------------------------------------------------------------------------\
 |                                                                            |
 |  yosys -- Yosys Open SYnthesis Suite                                       |
 |                                                                            |
 |  Copyright (C) 2012 - 2020  Claire Xenia Wolf <claire@yosyshq.com>         |
 |                                                                            |
 |  Permission to use, copy, modify, and/or distribute this software for any  |
 |  purpose with or without fee is hereby granted, provided that the above    |
 |  copyright notice and this permission notice appear in all copies.         |
 |                                                                            |
 |  THE SOFTWARE IS PROVIDED "AS IS" AND THE AUTHOR DISCLAIMS ALL WARRANTIES  |
 |  WITH REGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF          |
 |  MERCHANTABILITY AND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR   |
 |  ANY SPECIAL, DIRECT, INDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES    |
 |  WHATSOEVER RESULTING FROM LOSS OF USE, DATA OR PROFITS, WHETHER IN AN     |
 |  ACTION OF CONTRACT, NEGLIGENCE OR OTHER TORTIOUS ACTION, ARISING OUT OF   |
 |  OR IN CONNECTION WITH THE USE OR PERFORMANCE OF THIS SOFTWARE.            |
 |                                                                            |
 \----------------------------------------------------------------------------/

 Yosys-Verific 0.0.92
 Yosys 0.18+10 (git sha1 7361c89db, gcc 9.4.0-1ubuntu1~20.04.1 -fPIC -Os)


-- Executing script file `yosys.ys' --
echo on

yosys> plugin -i synth-rs

yosys> read -verific

yosys> read -incdir .

yosys> verific -vlog-incdir .

1. Executing VERIFIC (loading SystemVerilog and VHDL designs using Verific).
Built with Verific May22_SW_Release, released at Wed Jun  1 05:39:28 2022.

yosys> verilog_defaults -add -I.

yosys> read -vlog2k xtea.v testbench.v

yosys> verific -vlog2k xtea.v testbench.v

2. Executing VERIFIC (loading SystemVerilog and VHDL designs using Verific).
Built with Verific May22_SW_Release, released at Wed Jun  1 05:39:28 2022.
VERIFIC-COMMENT [VERI-1482] Analyzing Verilog file 'xtea.v'
VERIFIC-COMMENT [VERI-1482] Analyzing Verilog file 'testbench.v'

yosys> synth_rs -top xtea -tech genesis -goal area -de -no_dsp -no_bram -verilog synthesized.v

3. Executing synth_rs pass: v0.4.79

yosys> read_verilog -lib -specify -nomem2reg +/rapidsilicon/common/cells_sim.v +/rapidsilicon/genesis/cells_sim.v +/rapidsilicon/genesis/dsp_sim.v

3.1. Executing Verilog-2005 frontend: /nfs_scratch/scratch/Vorak/aram/Workspace/Raptor/yosys_verific_rs/yosys/install/bin/../share/yosys/rapidsilicon/common/cells_sim.v
Parsing Verilog input from `/nfs_scratch/scratch/Vorak/aram/Workspace/Raptor/yosys_verific_rs/yosys/install/bin/../share/yosys/rapidsilicon/common/cells_sim.v' to AST representation.
Generating RTLIL representation for module `\inv'.
Generating RTLIL representation for module `\buff'.
Generating RTLIL representation for module `\logic_0'.
Generating RTLIL representation for module `\logic_1'.
Generating RTLIL representation for module `\gclkbuff'.
Successfully finished Verilog frontend.

3.2. Executing Verilog-2005 frontend: /nfs_scratch/scratch/Vorak/aram/Workspace/Raptor/yosys_verific_rs/yosys/install/bin/../share/yosys/rapidsilicon/genesis/cells_sim.v
Parsing Verilog input from `/nfs_scratch/scratch/Vorak/aram/Workspace/Raptor/yosys_verific_rs/yosys/install/bin/../share/yosys/rapidsilicon/genesis/cells_sim.v' to AST representation.
Generating RTLIL representation for module `\dffsre'.
Generating RTLIL representation for module `\dffnsre'.
Generating RTLIL representation for module `\latchsre'.
Generating RTLIL representation for module `\latchnsre'.
Generating RTLIL representation for module `\io_scff'.
Generating RTLIL representation for module `\scff'.
Generating RTLIL representation for module `\sh_dff'.
Generating RTLIL representation for module `\adder_carry'.
Generating RTLIL representation for module `\sdffr'.
Generating RTLIL representation for module `\sdffs'.
Generating RTLIL representation for module `\TDP_BRAM18'.
Generating RTLIL representation for module `\TDP36K'.
Generating RTLIL representation for module `\BRAM2x18_TDP'.
Generating RTLIL representation for module `\BRAM2x18_SDP'.
Generating RTLIL representation for module `\_$_mem_v2_asymmetric'.
Successfully finished Verilog frontend.

3.3. Executing Verilog-2005 frontend: /nfs_scratch/scratch/Vorak/aram/Workspace/Raptor/yosys_verific_rs/yosys/install/bin/../share/yosys/rapidsilicon/genesis/dsp_sim.v
Parsing Verilog input from `/nfs_scratch/scratch/Vorak/aram/Workspace/Raptor/yosys_verific_rs/yosys/install/bin/../share/yosys/rapidsilicon/genesis/dsp_sim.v' to AST representation.
Generating RTLIL representation for module `\RS_DSP1'.
Generating RTLIL representation for module `\RS_DSP2'.
Generating RTLIL representation for module `\RS_DSP2_MULT'.
Generating RTLIL representation for module `\RS_DSP2_MULT_REGIN'.
Generating RTLIL representation for module `\RS_DSP2_MULT_REGOUT'.
Generating RTLIL representation for module `\RS_DSP2_MULT_REGIN_REGOUT'.
Generating RTLIL representation for module `\RS_DSP2_MULTADD'.
Generating RTLIL representation for module `\RS_DSP2_MULTADD_REGIN'.
Generating RTLIL representation for module `\RS_DSP2_MULTADD_REGOUT'.
Generating RTLIL representation for module `\RS_DSP2_MULTADD_REGIN_REGOUT'.
Generating RTLIL representation for module `\RS_DSP2_MULTACC'.
Generating RTLIL representation for module `\RS_DSP2_MULTACC_REGIN'.
Generating RTLIL representation for module `\RS_DSP2_MULTACC_REGOUT'.
Generating RTLIL representation for module `\RS_DSP2_MULTACC_REGIN_REGOUT'.
Generating RTLIL representation for module `\dsp_t1_20x18x64_cfg_ports'.
Generating RTLIL representation for module `\dsp_t1_10x9x32_cfg_ports'.
Generating RTLIL representation for module `\dsp_t1_sim_cfg_ports'.
Generating RTLIL representation for module `\RS_DSP3'.
Generating RTLIL representation for module `\RS_DSP3_MULT'.
Generating RTLIL representation for module `\RS_DSP3_MULT_REGIN'.
Generating RTLIL representation for module `\RS_DSP3_MULT_REGOUT'.
Generating RTLIL representation for module `\RS_DSP3_MULT_REGIN_REGOUT'.
Generating RTLIL representation for module `\RS_DSP3_MULTADD'.
Generating RTLIL representation for module `\RS_DSP3_MULTADD_REGIN'.
Generating RTLIL representation for module `\RS_DSP3_MULTADD_REGOUT'.
Generating RTLIL representation for module `\RS_DSP3_MULTADD_REGIN_REGOUT'.
Generating RTLIL representation for module `\RS_DSP3_MULTACC'.
Generating RTLIL representation for module `\RS_DSP3_MULTACC_REGIN'.
Generating RTLIL representation for module `\RS_DSP3_MULTACC_REGOUT'.
Generating RTLIL representation for module `\RS_DSP3_MULTACC_REGIN_REGOUT'.
Generating RTLIL representation for module `\dsp_t1_20x18x64_cfg_params'.
Generating RTLIL representation for module `\dsp_t1_10x9x32_cfg_params'.
Generating RTLIL representation for module `\dsp_t1_sim_cfg_params'.
Successfully finished Verilog frontend.

yosys> hierarchy -check -top xtea

3.4. Executing HIERARCHY pass (managing design hierarchy).
VERIFIC-INFO [VERI-1018] xtea.v:44: compiling module 'xtea'
Importing module xtea.

3.4.1. Analyzing design hierarchy..
Top module:  \xtea

3.4.2. Analyzing design hierarchy..
Top module:  \xtea
Removed 0 unused modules.

yosys> proc

3.5. Executing PROC pass (convert processes to netlists).

yosys> proc_clean

3.5.1. Executing PROC_CLEAN pass (remove empty switches from decision trees).
Cleaned up 0 empty switches.

yosys> proc_rmdead

3.5.2. Executing PROC_RMDEAD pass (remove dead branches from decision trees).
Removed a total of 0 dead cases.

yosys> proc_prune

3.5.3. Executing PROC_PRUNE pass (remove redundant assignments in processes).
Removed 0 redundant assignments.
Promoted 0 assignments to connections.

yosys> proc_init

3.5.4. Executing PROC_INIT pass (extract init attributes).

yosys> proc_arst

3.5.5. Executing PROC_ARST pass (detect async resets in processes).

yosys> proc_rom

3.5.6. Executing PROC_ROM pass (convert switches to ROMs).
Converted 0 switches.

yosys> proc_mux

3.5.7. Executing PROC_MUX pass (convert decision trees to multiplexers).

yosys> proc_dlatch

3.5.8. Executing PROC_DLATCH pass (convert process syncs to latches).

yosys> proc_dff

3.5.9. Executing PROC_DFF pass (convert process syncs to FFs).

yosys> proc_memwr

3.5.10. Executing PROC_MEMWR pass (convert process memory writes to cells).

yosys> proc_clean

3.5.11. Executing PROC_CLEAN pass (remove empty switches from decision trees).
Cleaned up 0 empty switches.

yosys> opt_expr -keepdc

3.5.12. Executing OPT_EXPR pass (perform const folding).
Optimizing module xtea.
<suppressed ~1 debug messages>

yosys> bmuxmap

3.6. Executing BMUXMAP pass.

yosys> demuxmap

3.7. Executing DEMUXMAP pass.

yosys> clean_zerowidth

yosys> flatten

3.8. Executing FLATTEN pass (flatten design).

yosys> bmuxmap

3.9. Executing BMUXMAP pass.

yosys> demuxmap

3.10. Executing DEMUXMAP pass.

yosys> clean_zerowidth

yosys> tribuf -logic -formal

3.11. Executing TRIBUF pass.

yosys> deminout

3.12. Executing DEMINOUT pass (demote inout ports to input or output).

yosys> opt_expr

3.13. Executing OPT_EXPR pass (perform const folding).
Optimizing module xtea.

yosys> opt_clean

3.14. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \xtea..
Removed 129 unused cells and 168 unused wires.
<suppressed ~141 debug messages>

yosys> check

3.15. Executing CHECK pass (checking for obvious problems).
Checking module xtea...
Found and reported 0 problems.

yosys> opt_expr

3.16. Executing OPT_EXPR pass (perform const folding).
Optimizing module xtea.

yosys> opt_merge -nomux

3.17. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\xtea'.
Removed a total of 0 cells.

yosys> opt_muxtree

3.18. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \xtea..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Removed 0 multiplexer ports.
<suppressed ~75 debug messages>

yosys> opt_reduce

3.19. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \xtea.
    New ctrl vector for $pmux cell $verific$Select_197$xtea.v:188$464: $auto$opt_reduce.cc:134:opt_pmux$799
    New ctrl vector for $pmux cell $verific$Select_198$xtea.v:188$465: { $verific$n3734$23 $auto$opt_reduce.cc:134:opt_pmux$801 }
    New ctrl vector for $pmux cell $verific$Select_206$xtea.v:188$471: { $verific$n3734$23 $auto$opt_reduce.cc:134:opt_pmux$803 }
    New ctrl vector for $pmux cell $verific$Select_214$xtea.v:188$476: { $verific$n3734$23 $auto$opt_reduce.cc:134:opt_pmux$805 }
    New ctrl vector for $pmux cell $verific$Select_222$xtea.v:188$481: { $verific$n3734$23 $auto$opt_reduce.cc:134:opt_pmux$807 }
    New ctrl vector for $pmux cell $verific$Select_230$xtea.v:188$486: { $verific$n3734$23 $auto$opt_reduce.cc:134:opt_pmux$809 }
    New ctrl vector for $pmux cell $verific$Select_238$xtea.v:188$491: { $verific$n3734$23 $auto$opt_reduce.cc:134:opt_pmux$811 }
    New ctrl vector for $pmux cell $verific$Select_246$xtea.v:188$496: { $verific$n3734$23 $auto$opt_reduce.cc:134:opt_pmux$813 }
    New ctrl vector for $pmux cell $verific$Select_254$xtea.v:188$501: { $verific$n3734$23 $auto$opt_reduce.cc:134:opt_pmux$815 }
    New ctrl vector for $pmux cell $verific$Select_262$xtea.v:188$506: { $verific$n3734$23 $auto$opt_reduce.cc:134:opt_pmux$817 }
    New ctrl vector for $pmux cell $verific$Select_270$xtea.v:188$511: { $verific$n3734$23 $auto$opt_reduce.cc:134:opt_pmux$819 }
    New ctrl vector for $pmux cell $verific$Select_278$xtea.v:188$516: { $verific$n3734$23 $auto$opt_reduce.cc:134:opt_pmux$821 }
    New ctrl vector for $pmux cell $verific$Select_286$xtea.v:188$521: { $verific$n3734$23 $auto$opt_reduce.cc:134:opt_pmux$823 }
    New ctrl vector for $pmux cell $verific$Select_294$xtea.v:188$526: { $verific$n3734$23 $auto$opt_reduce.cc:134:opt_pmux$825 }
    New ctrl vector for $pmux cell $verific$Select_302$xtea.v:188$531: { $verific$n3734$23 $auto$opt_reduce.cc:134:opt_pmux$827 }
    New ctrl vector for $pmux cell $verific$Select_310$xtea.v:188$536: { $verific$n3734$23 $auto$opt_reduce.cc:134:opt_pmux$829 }
    New ctrl vector for $pmux cell $verific$Select_318$xtea.v:188$541: { $verific$n3734$23 $auto$opt_reduce.cc:134:opt_pmux$831 }
    New ctrl vector for $pmux cell $verific$Select_326$xtea.v:188$546: { $verific$n3734$23 $auto$opt_reduce.cc:134:opt_pmux$833 }
    New ctrl vector for $pmux cell $verific$Select_334$xtea.v:188$551: { $verific$n3734$23 $auto$opt_reduce.cc:134:opt_pmux$835 }
    New ctrl vector for $pmux cell $verific$Select_342$xtea.v:188$556: { $verific$n3734$23 $auto$opt_reduce.cc:134:opt_pmux$837 }
    New ctrl vector for $pmux cell $verific$Select_350$xtea.v:188$561: { $verific$n3734$23 $auto$opt_reduce.cc:134:opt_pmux$839 }
    New ctrl vector for $pmux cell $verific$Select_358$xtea.v:188$566: { $verific$n3734$23 $auto$opt_reduce.cc:134:opt_pmux$841 }
    New ctrl vector for $pmux cell $verific$Select_366$xtea.v:188$571: { $verific$n3734$23 $auto$opt_reduce.cc:134:opt_pmux$843 }
    New ctrl vector for $pmux cell $verific$Select_374$xtea.v:188$576: { $verific$n3734$23 $auto$opt_reduce.cc:134:opt_pmux$845 }
    New ctrl vector for $pmux cell $verific$Select_382$xtea.v:188$581: { $verific$n3734$23 $auto$opt_reduce.cc:134:opt_pmux$847 }
    New ctrl vector for $pmux cell $verific$Select_390$xtea.v:188$586: { $verific$n3734$23 $auto$opt_reduce.cc:134:opt_pmux$849 }
    New ctrl vector for $pmux cell $verific$Select_398$xtea.v:188$591: { $verific$n3734$23 $auto$opt_reduce.cc:134:opt_pmux$851 }
    New ctrl vector for $pmux cell $verific$Select_406$xtea.v:188$596: { $verific$n3734$23 $auto$opt_reduce.cc:134:opt_pmux$853 }
    New ctrl vector for $pmux cell $verific$Select_414$xtea.v:188$601: { $verific$n3734$23 $auto$opt_reduce.cc:134:opt_pmux$855 }
    New ctrl vector for $pmux cell $verific$Select_422$xtea.v:188$606: { $verific$n3734$23 $auto$opt_reduce.cc:134:opt_pmux$857 }
    New ctrl vector for $pmux cell $verific$Select_430$xtea.v:188$611: { $verific$n3734$23 $auto$opt_reduce.cc:134:opt_pmux$859 }
    New ctrl vector for $pmux cell $verific$Select_438$xtea.v:188$616: { $verific$n3734$23 $auto$opt_reduce.cc:134:opt_pmux$861 }
    New ctrl vector for $pmux cell $verific$Select_446$xtea.v:188$621: { $verific$n3734$23 $auto$opt_reduce.cc:134:opt_pmux$863 }
    New ctrl vector for $pmux cell $verific$Select_454$xtea.v:188$626: { $verific$n3734$23 $auto$opt_reduce.cc:134:opt_pmux$865 }
    New ctrl vector for $pmux cell $verific$Select_462$xtea.v:188$631: { $verific$n3734$23 $auto$opt_reduce.cc:134:opt_pmux$867 }
    New ctrl vector for $pmux cell $verific$Select_470$xtea.v:188$636: { $verific$n3734$23 $auto$opt_reduce.cc:134:opt_pmux$869 }
    New ctrl vector for $pmux cell $verific$Select_478$xtea.v:188$641: { $verific$n3734$23 $auto$opt_reduce.cc:134:opt_pmux$871 }
    New ctrl vector for $pmux cell $verific$Select_486$xtea.v:188$646: { $verific$n3734$23 $auto$opt_reduce.cc:134:opt_pmux$873 }
    New ctrl vector for $pmux cell $verific$Select_494$xtea.v:188$651: { $verific$n3734$23 $auto$opt_reduce.cc:134:opt_pmux$875 }
    New ctrl vector for $pmux cell $verific$Select_502$xtea.v:188$656: { $verific$n3734$23 $auto$opt_reduce.cc:134:opt_pmux$877 }
    New ctrl vector for $pmux cell $verific$Select_510$xtea.v:188$661: { $verific$n3734$23 $auto$opt_reduce.cc:134:opt_pmux$879 }
    New ctrl vector for $pmux cell $verific$Select_518$xtea.v:188$666: { $verific$n3734$23 $auto$opt_reduce.cc:134:opt_pmux$881 }
    New ctrl vector for $pmux cell $verific$Select_526$xtea.v:188$671: { $verific$n3734$23 $auto$opt_reduce.cc:134:opt_pmux$883 }
    New ctrl vector for $pmux cell $verific$Select_534$xtea.v:188$676: { $verific$n3734$23 $auto$opt_reduce.cc:134:opt_pmux$885 }
    New ctrl vector for $pmux cell $verific$Select_542$xtea.v:188$681: { $verific$n3734$23 $auto$opt_reduce.cc:134:opt_pmux$887 }
    New ctrl vector for $pmux cell $verific$Select_550$xtea.v:188$686: { $verific$n3734$23 $auto$opt_reduce.cc:134:opt_pmux$889 }
    New ctrl vector for $pmux cell $verific$Select_558$xtea.v:188$691: { $verific$n3734$23 $auto$opt_reduce.cc:134:opt_pmux$891 }
    New ctrl vector for $pmux cell $verific$Select_566$xtea.v:188$696: { $verific$n3734$23 $auto$opt_reduce.cc:134:opt_pmux$893 }
    New ctrl vector for $pmux cell $verific$Select_574$xtea.v:188$701: { $verific$n3734$23 $auto$opt_reduce.cc:134:opt_pmux$895 }
    New ctrl vector for $pmux cell $verific$Select_582$xtea.v:188$706: { $verific$n3734$23 $auto$opt_reduce.cc:134:opt_pmux$897 }
    New ctrl vector for $pmux cell $verific$Select_590$xtea.v:188$711: { $verific$n3734$23 $auto$opt_reduce.cc:134:opt_pmux$899 }
    New ctrl vector for $pmux cell $verific$Select_598$xtea.v:188$716: { $verific$n3734$23 $auto$opt_reduce.cc:134:opt_pmux$901 }
    New ctrl vector for $pmux cell $verific$Select_606$xtea.v:188$721: { $verific$n3734$23 $auto$opt_reduce.cc:134:opt_pmux$903 }
    New ctrl vector for $pmux cell $verific$Select_614$xtea.v:188$726: { $verific$n3734$23 $auto$opt_reduce.cc:134:opt_pmux$905 }
    New ctrl vector for $pmux cell $verific$Select_622$xtea.v:188$731: { $verific$n3734$23 $auto$opt_reduce.cc:134:opt_pmux$907 }
    New ctrl vector for $pmux cell $verific$Select_630$xtea.v:188$736: { $verific$n3734$23 $auto$opt_reduce.cc:134:opt_pmux$909 }
    New ctrl vector for $pmux cell $verific$Select_638$xtea.v:188$741: { $verific$n3734$23 $auto$opt_reduce.cc:134:opt_pmux$911 }
    New ctrl vector for $pmux cell $verific$Select_646$xtea.v:188$746: { $verific$n3734$23 $auto$opt_reduce.cc:134:opt_pmux$913 }
    New ctrl vector for $pmux cell $verific$Select_654$xtea.v:188$751: { $verific$n3734$23 $auto$opt_reduce.cc:134:opt_pmux$915 }
    New ctrl vector for $pmux cell $verific$Select_662$xtea.v:188$756: { $verific$n3734$23 $auto$opt_reduce.cc:134:opt_pmux$917 }
    New ctrl vector for $pmux cell $verific$Select_670$xtea.v:188$761: { $verific$n3734$23 $auto$opt_reduce.cc:134:opt_pmux$919 }
    New ctrl vector for $pmux cell $verific$Select_678$xtea.v:188$766: { $verific$n3734$23 $auto$opt_reduce.cc:134:opt_pmux$921 }
    New ctrl vector for $pmux cell $verific$Select_686$xtea.v:188$771: { $verific$n3734$23 $auto$opt_reduce.cc:134:opt_pmux$923 }
    New ctrl vector for $pmux cell $verific$Select_694$xtea.v:188$777: { $verific$n3734$23 $auto$opt_reduce.cc:134:opt_pmux$925 }
    New ctrl vector for $pmux cell $verific$Select_702$xtea.v:188$782: { $verific$n3734$23 $auto$opt_reduce.cc:134:opt_pmux$927 }
    New ctrl vector for $pmux cell $verific$select_173$xtea.v:188$444: { $verific$n3719$8 $verific$n3727$16 $verific$n3729$18 $auto$opt_reduce.cc:134:opt_pmux$929 }
    New ctrl vector for $pmux cell $verific$select_174$xtea.v:188$445: { $verific$n3719$8 $verific$n3724$13 $verific$n3732$21 $auto$opt_reduce.cc:134:opt_pmux$931 }
    New ctrl vector for $pmux cell $verific$select_175$xtea.v:188$446: { $verific$n3719$8 $auto$opt_reduce.cc:134:opt_pmux$933 }
    New ctrl vector for $pmux cell $verific$select_176$xtea.v:188$447: { $verific$n3719$8 $verific$n3725$14 $verific$n3730$19 $auto$opt_reduce.cc:134:opt_pmux$935 }
    New ctrl vector for $pmux cell $verific$select_180$xtea.v:188$450: { $auto$opt_reduce.cc:134:opt_pmux$941 $auto$opt_reduce.cc:134:opt_pmux$939 $auto$opt_reduce.cc:134:opt_pmux$937 }
    New ctrl vector for $pmux cell $verific$select_181$xtea.v:188$451: { $auto$opt_reduce.cc:134:opt_pmux$945 $auto$opt_reduce.cc:134:opt_pmux$943 }
    New ctrl vector for $pmux cell $verific$select_33$xtea.v:90$392: { $verific$n23$4 $verific$n3720$9 $verific$n3721$10 $verific$n3722$11 $verific$n3723$12 $verific$n3724$13 $verific$n3725$14 $verific$n3726$15 $verific$n3728$17 $verific$n3729$18 $verific$n3730$19 $verific$n3731$20 $auto$opt_reduce.cc:134:opt_pmux$949 $verific$n3733$22 $auto$opt_reduce.cc:134:opt_pmux$947 $verific$n41$5 }
  Optimizing cells in module \xtea.
Performed a total of 72 changes.

yosys> opt_merge

3.20. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\xtea'.
<suppressed ~189 debug messages>
Removed a total of 63 cells.

yosys> opt_share

3.21. Executing OPT_SHARE pass.
    Found cells that share an operand and can be merged by moving the $mux $auto$bmuxmap.cc:60:execute$789 in front of them:
        $verific$add_136$xtea.v:167$436
        $verific$add_130$xtea.v:166$435

    Found cells that share an operand and can be merged by moving the $mux $auto$bmuxmap.cc:60:execute$789 in front of them:
        $verific$sub_52$xtea.v:136$406
        $verific$sub_46$xtea.v:135$403

    Found cells that share an operand and can be merged by moving the $mux $auto$bmuxmap.cc:60:execute$790 in front of them:
        $verific$add_148$xtea.v:169$438
        $verific$add_142$xtea.v:168$437

    Found cells that share an operand and can be merged by moving the $mux $auto$bmuxmap.cc:60:execute$790 in front of them:
        $verific$sub_64$xtea.v:138$412
        $verific$sub_58$xtea.v:137$409

    Found cells that share an operand and can be merged by moving the $mux $auto$bmuxmap.cc:60:execute$794 in front of them:
        $verific$add_108$xtea.v:157$431
        $verific$add_102$xtea.v:156$430

    Found cells that share an operand and can be merged by moving the $mux $auto$bmuxmap.cc:60:execute$794 in front of them:
        $verific$sub_80$xtea.v:146$421
        $verific$sub_74$xtea.v:145$419

    Found cells that share an operand and can be merged by moving the $mux $auto$bmuxmap.cc:60:execute$795 in front of them:
        $verific$add_120$xtea.v:159$433
        $verific$add_114$xtea.v:158$432

    Found cells that share an operand and can be merged by moving the $mux $auto$bmuxmap.cc:60:execute$795 in front of them:
        $verific$sub_92$xtea.v:148$425
        $verific$sub_86$xtea.v:147$423

    Found cells that share an operand and can be merged by moving the $pmux $verific$select_176$xtea.v:188$447 in front of them:
        $verific$add_123$xtea.v:162$434
        $verific$sub_67$xtea.v:141$414


yosys> opt_dff -nosdff -nodffe

3.22. Executing OPT_DFF pass (perform DFF optimizations).
Changing const-value async load to async reset on $verific$x_reg$xtea.v:189$455 ($aldff) from module xtea.
Changing const-value async load to async reset on $verific$workunit2_reg$xtea.v:189$459 ($aldff) from module xtea.
Changing const-value async load to async reset on $verific$workunit1_reg$xtea.v:189$458 ($aldff) from module xtea.
Changing const-value async load to async reset on $verific$while_flag_reg$xtea.v:189$457 ($aldff) from module xtea.
Changing const-value async load to async reset on $verific$sum_reg$xtea.v:189$456 ($aldff) from module xtea.
Changing const-value async load to async reset on $verific$state_reg$xtea.v:91$393 ($aldff) from module xtea.
Changing const-value async load to async reset on $verific$selectslice_reg$xtea.v:189$460 ($aldff) from module xtea.
Changing const-value async load to async reset on $verific$modereg_reg$xtea.v:189$463 ($aldff) from module xtea.
Changing const-value async load to async reset on $verific$delta_reg$xtea.v:189$462 ($aldff) from module xtea.
Changing const-value async load to async reset on $verific$data_out2_reg$xtea.v:189$454 ($aldff) from module xtea.
Changing const-value async load to async reset on $verific$data_out1_reg$xtea.v:189$453 ($aldff) from module xtea.
Changing const-value async load to async reset on $verific$all_done_reg$xtea.v:189$461 ($aldff) from module xtea.

yosys> opt_clean

3.23. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \xtea..
Removed 0 unused cells and 81 unused wires.
<suppressed ~1 debug messages>

yosys> opt_expr

3.24. Executing OPT_EXPR pass (perform const folding).
Optimizing module xtea.
<suppressed ~4 debug messages>

yosys> opt_muxtree

3.25. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \xtea..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Removed 0 multiplexer ports.
<suppressed ~84 debug messages>

yosys> opt_reduce

3.26. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \xtea.
    New ctrl vector for $pmux cell $verific$select_176$xtea.v:188$447: { $verific$n3719$8 $auto$opt_reduce.cc:134:opt_pmux$980 $auto$opt_reduce.cc:134:opt_pmux$935 }
  Optimizing cells in module \xtea.
Performed a total of 1 changes.

yosys> opt_merge

3.27. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\xtea'.
<suppressed ~12 debug messages>
Removed a total of 4 cells.

yosys> opt_share

3.28. Executing OPT_SHARE pass.
    Found cells that share an operand and can be merged by moving the $mux $auto$opt_share.cc:241:merge_operators$951 in front of them:
        $verific$xor_51$xtea.v:136$405
        $verific$xor_45$xtea.v:135$402

    Found cells that share an operand and can be merged by moving the $mux $auto$opt_share.cc:241:merge_operators$957 in front of them:
        $verific$xor_63$xtea.v:138$411
        $verific$xor_57$xtea.v:137$408

    Found cells that share an operand and can be merged by moving the $mux $auto$bmuxmap.cc:60:execute$792 in front of them:
        $verific$add_148$xtea.v:169$438
        $verific$add_136$xtea.v:167$436

    Found cells that share an operand and can be merged by moving the $mux $auto$bmuxmap.cc:60:execute$792 in front of them:
        $verific$sub_64$xtea.v:138$412
        $verific$sub_52$xtea.v:136$406

    Found cells that share an operand and can be merged by moving the $mux $auto$opt_share.cc:241:merge_operators$963 in front of them:
        $verific$xor_79$xtea.v:146$420
        $verific$xor_73$xtea.v:145$418

    Found cells that share an operand and can be merged by moving the $mux $auto$bmuxmap.cc:60:execute$797 in front of them:
        $verific$add_120$xtea.v:159$433
        $verific$add_108$xtea.v:157$431

    Found cells that share an operand and can be merged by moving the $mux $auto$bmuxmap.cc:60:execute$797 in front of them:
        $verific$sub_92$xtea.v:148$425
        $verific$sub_80$xtea.v:146$421

    Found cells that share an operand and can be merged by moving the $mux $auto$opt_share.cc:241:merge_operators$969 in front of them:
        $verific$xor_91$xtea.v:148$424
        $verific$xor_85$xtea.v:147$422


yosys> opt_dff -nosdff -nodffe

3.29. Executing OPT_DFF pass (perform DFF optimizations).

yosys> opt_clean

3.30. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \xtea..
Removed 0 unused cells and 22 unused wires.
<suppressed ~1 debug messages>

yosys> opt_expr

3.31. Executing OPT_EXPR pass (perform const folding).
Optimizing module xtea.
<suppressed ~6 debug messages>

yosys> opt_muxtree

3.32. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \xtea..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Removed 0 multiplexer ports.
<suppressed ~84 debug messages>

yosys> opt_reduce

3.33. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \xtea.
Performed a total of 0 changes.

yosys> opt_merge

3.34. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\xtea'.
<suppressed ~12 debug messages>
Removed a total of 4 cells.

yosys> opt_share

3.35. Executing OPT_SHARE pass.
    Found cells that share an operand and can be merged by moving the $mux $auto$opt_share.cc:241:merge_operators$1000 in front of them:
        $verific$xor_91$xtea.v:148$424
        $verific$xor_79$xtea.v:146$420

    Found cells that share an operand and can be merged by moving the $mux $auto$opt_share.cc:241:merge_operators$1003 in front of them:
        $verific$add_62$xtea.v:138$410
        $verific$add_56$xtea.v:137$407

    Found cells that share an operand and can be merged by moving the $mux $auto$opt_share.cc:241:merge_operators$982 in front of them:
        $verific$add_50$xtea.v:136$404
        $verific$add_44$xtea.v:135$401

    Found cells that share an operand and can be merged by moving the $mux $auto$opt_share.cc:241:merge_operators$988 in front of them:
        $verific$xor_63$xtea.v:138$411
        $verific$xor_51$xtea.v:136$405

    Found cells that share an operand and can be merged by moving the $pmux $verific$select_173$xtea.v:188$444 in front of them:
        $verific$add_120$xtea.v:159$433
        $verific$sub_92$xtea.v:148$425

    Found cells that share an operand and can be merged by moving the $pmux $verific$select_174$xtea.v:188$445 in front of them:
        $verific$add_148$xtea.v:169$438
        $verific$sub_64$xtea.v:138$412


yosys> opt_dff -nosdff -nodffe

3.36. Executing OPT_DFF pass (perform DFF optimizations).

yosys> opt_clean

3.37. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \xtea..
Removed 0 unused cells and 22 unused wires.
<suppressed ~1 debug messages>

yosys> opt_expr

3.38. Executing OPT_EXPR pass (perform const folding).
Optimizing module xtea.
<suppressed ~4 debug messages>

yosys> opt_muxtree

3.39. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \xtea..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Removed 0 multiplexer ports.
<suppressed ~82 debug messages>

yosys> opt_reduce

3.40. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \xtea.
    New ctrl vector for $pmux cell $verific$select_173$xtea.v:188$444: { $verific$n3719$8 $auto$opt_reduce.cc:134:opt_pmux$1028 $auto$opt_reduce.cc:134:opt_pmux$929 }
    New ctrl vector for $pmux cell $verific$select_174$xtea.v:188$445: { $verific$n3719$8 $auto$opt_reduce.cc:134:opt_pmux$1030 $auto$opt_reduce.cc:134:opt_pmux$931 }
  Optimizing cells in module \xtea.
Performed a total of 2 changes.

yosys> opt_merge

3.41. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\xtea'.
<suppressed ~3 debug messages>
Removed a total of 1 cells.

yosys> opt_share

3.42. Executing OPT_SHARE pass.
    Found cells that share an operand and can be merged by moving the $mux $auto$opt_share.cc:241:merge_operators$1006 in front of them:
        $verific$add_62$xtea.v:138$410
        $verific$add_50$xtea.v:136$404


yosys> opt_dff -nosdff -nodffe

3.43. Executing OPT_DFF pass (perform DFF optimizations).

yosys> opt_clean

3.44. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \xtea..
Removed 0 unused cells and 7 unused wires.
<suppressed ~1 debug messages>

yosys> opt_expr

3.45. Executing OPT_EXPR pass (perform const folding).
Optimizing module xtea.
<suppressed ~1 debug messages>
MAX OPT ITERATION = 4

yosys> fsm -encoding binary

3.46. Executing FSM pass (extract and optimize FSM).

yosys> fsm_detect

3.46.1. Executing FSM_DETECT pass (finding FSMs in design).
Not marking xtea.delta as FSM state register:
    Users of register don't seem to benefit from recoding.

yosys> fsm_extract

3.46.2. Executing FSM_EXTRACT pass (extracting FSM from design).

yosys> fsm_opt

3.46.3. Executing FSM_OPT pass (simple optimizations of FSMs).

yosys> opt_clean

3.46.4. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \xtea..
Removed 0 unused cells and 1 unused wires.
<suppressed ~1 debug messages>

yosys> fsm_opt

3.46.5. Executing FSM_OPT pass (simple optimizations of FSMs).

yosys> fsm_recode -encoding binary

3.46.6. Executing FSM_RECODE pass (re-assigning FSM state encoding).

yosys> fsm_info

3.46.7. Executing FSM_INFO pass (dumping all available information on FSM cells).

yosys> fsm_map

3.46.8. Executing FSM_MAP pass (mapping FSMs to basic logic).

yosys> opt_expr

3.47. Executing OPT_EXPR pass (perform const folding).
Optimizing module xtea.

yosys> opt_merge -nomux

3.48. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\xtea'.
Removed a total of 0 cells.

yosys> opt_muxtree

3.49. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \xtea..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Removed 0 multiplexer ports.
<suppressed ~79 debug messages>

yosys> opt_reduce

3.50. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \xtea.
Performed a total of 0 changes.

yosys> opt_merge

3.51. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\xtea'.
Removed a total of 0 cells.

yosys> opt_share

3.52. Executing OPT_SHARE pass.

yosys> opt_dff -nosdff -sat

3.53. Executing OPT_DFF pass (perform DFF optimizations).
Adding EN signal on $verific$x_reg$xtea.v:189$455 ($adff) from module xtea (D = $verific$n3875$362, Q = \x).
Adding EN signal on $verific$workunit2_reg$xtea.v:189$459 ($adff) from module xtea (D = $verific$n3770$358, Q = \workunit2).
Adding EN signal on $verific$workunit1_reg$xtea.v:189$458 ($adff) from module xtea (D = $verific$n3737$357, Q = \workunit1).
Adding EN signal on $verific$while_flag_reg$xtea.v:189$457 ($adff) from module xtea (D = $verific$n129$7, Q = \while_flag).
Adding EN signal on $verific$sum_reg$xtea.v:189$456 ($adff) from module xtea (D = $verific$n3836$360, Q = \sum).
Adding EN signal on $verific$selectslice_reg$xtea.v:189$460 ($adff) from module xtea (D = $verific$n3872$361, Q = \selectslice).
Adding EN signal on $verific$modereg_reg$xtea.v:189$463 ($adff) from module xtea (D = \mode, Q = \modereg).
Adding EN signal on $verific$delta_reg$xtea.v:189$462 ($adff) from module xtea (D = $verific$n3803$359, Q = \delta).
Adding EN signal on $verific$data_out2_reg$xtea.v:189$454 ($adff) from module xtea (D = { $verific$n4422$159 $verific$n4430$163 $verific$n4438$167 $verific$n4446$171 $verific$n4454$175 $verific$n4462$179 $verific$n4470$183 $verific$n4478$187 $verific$n4486$191 $verific$n4494$195 $verific$n4502$199 $verific$n4510$203 $verific$n4518$207 $verific$n4526$211 $verific$n4534$215 $verific$n4542$219 $verific$n4550$223 $verific$n4558$227 $verific$n4566$231 $verific$n4574$235 $verific$n4582$239 $verific$n4590$243 $verific$n4598$247 $verific$n4606$251 $verific$n4614$255 $verific$n4622$259 $verific$n4630$263 $verific$n4638$267 $verific$n4646$271 $verific$n4654$275 $verific$n4662$279 $verific$n4670$283 }, Q = \data_out2).
Adding EN signal on $verific$data_out1_reg$xtea.v:189$453 ($adff) from module xtea (D = { $verific$n4166$30 $verific$n4174$35 $verific$n4182$39 $verific$n4190$43 $verific$n4198$47 $verific$n4206$51 $verific$n4214$55 $verific$n4222$59 $verific$n4230$63 $verific$n4238$67 $verific$n4246$71 $verific$n4254$75 $verific$n4262$79 $verific$n4270$83 $verific$n4278$87 $verific$n4286$91 $verific$n4294$95 $verific$n4302$99 $verific$n4310$103 $verific$n4318$107 $verific$n4326$111 $verific$n4334$115 $verific$n4342$119 $verific$n4350$123 $verific$n4358$127 $verific$n4366$131 $verific$n4374$135 $verific$n4382$139 $verific$n4390$143 $verific$n4398$147 $verific$n4406$151 $verific$n4414$155 }, Q = \data_out1).
Adding EN signal on $verific$all_done_reg$xtea.v:189$461 ($adff) from module xtea (D = 1'1, Q = \all_done).
Setting constant 0-bit at position 1 on $auto$ff.cc:262:slice$1051 ($adffe) from module xtea.
Setting constant 0-bit at position 2 on $auto$ff.cc:262:slice$1051 ($adffe) from module xtea.
Setting constant 0-bit at position 6 on $auto$ff.cc:262:slice$1051 ($adffe) from module xtea.
Setting constant 0-bit at position 9 on $auto$ff.cc:262:slice$1051 ($adffe) from module xtea.
Setting constant 0-bit at position 10 on $auto$ff.cc:262:slice$1051 ($adffe) from module xtea.
Setting constant 0-bit at position 15 on $auto$ff.cc:262:slice$1051 ($adffe) from module xtea.
Setting constant 0-bit at position 19 on $auto$ff.cc:262:slice$1051 ($adffe) from module xtea.
Setting constant 0-bit at position 22 on $auto$ff.cc:262:slice$1051 ($adffe) from module xtea.
Setting constant 0-bit at position 23 on $auto$ff.cc:262:slice$1051 ($adffe) from module xtea.
Setting constant 0-bit at position 24 on $auto$ff.cc:262:slice$1051 ($adffe) from module xtea.
Setting constant 0-bit at position 29 on $auto$ff.cc:262:slice$1051 ($adffe) from module xtea.
Setting constant 0-bit at position 30 on $auto$ff.cc:262:slice$1051 ($adffe) from module xtea.
Setting constant 0-bit at position 5 on $verific$state_reg$xtea.v:91$393 ($adff) from module xtea.
Setting constant 0-bit at position 6 on $verific$state_reg$xtea.v:91$393 ($adff) from module xtea.
Setting constant 0-bit at position 7 on $verific$state_reg$xtea.v:91$393 ($adff) from module xtea.

yosys> opt_clean

3.54. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \xtea..
Removed 67 unused cells and 67 unused wires.
<suppressed ~68 debug messages>

yosys> opt_expr

3.55. Executing OPT_EXPR pass (perform const folding).
Optimizing module xtea.
<suppressed ~12 debug messages>

yosys> opt_muxtree

3.56. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \xtea..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Removed 0 multiplexer ports.
<suppressed ~76 debug messages>

yosys> opt_reduce

3.57. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \xtea.
Performed a total of 0 changes.

yosys> opt_merge

3.58. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\xtea'.
Removed a total of 0 cells.

yosys> opt_share

3.59. Executing OPT_SHARE pass.

yosys> opt_dff -nosdff -sat

3.60. Executing OPT_DFF pass (perform DFF optimizations).

yosys> opt_clean

3.61. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \xtea..
Removed 6 unused cells and 6 unused wires.
<suppressed ~7 debug messages>

yosys> opt_expr

3.62. Executing OPT_EXPR pass (perform const folding).
Optimizing module xtea.

yosys> opt_muxtree

3.63. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \xtea..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Removed 0 multiplexer ports.
<suppressed ~76 debug messages>

yosys> opt_reduce

3.64. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \xtea.
Performed a total of 0 changes.

yosys> opt_merge

3.65. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\xtea'.
Removed a total of 0 cells.

yosys> opt_share

3.66. Executing OPT_SHARE pass.

yosys> opt_dff -nosdff -sat

3.67. Executing OPT_DFF pass (perform DFF optimizations).

yosys> opt_clean

3.68. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \xtea..

yosys> opt_expr

3.69. Executing OPT_EXPR pass (perform const folding).
Optimizing module xtea.
MAX OPT ITERATION = 3

yosys> wreduce -keepdc

3.70. Executing WREDUCE pass (reducing word size of cells).
Removed top 4 bits (of 5) from port B of cell xtea.$verific$equal_15$xtea.v:72$372 ($eq).
Removed top 3 bits (of 5) from port B of cell xtea.$verific$equal_16$xtea.v:73$373 ($eq).
Removed top 3 bits (of 5) from port B of cell xtea.$verific$equal_17$xtea.v:74$374 ($eq).
Removed top 2 bits (of 5) from port B of cell xtea.$verific$equal_18$xtea.v:75$375 ($eq).
Removed top 2 bits (of 5) from port B of cell xtea.$verific$equal_19$xtea.v:76$376 ($eq).
Removed top 2 bits (of 5) from port B of cell xtea.$verific$equal_20$xtea.v:77$377 ($eq).
Removed top 2 bits (of 5) from port B of cell xtea.$verific$equal_21$xtea.v:78$378 ($eq).
Removed top 1 bits (of 5) from port B of cell xtea.$verific$equal_22$xtea.v:79$379 ($eq).
Removed top 1 bits (of 5) from port B of cell xtea.$verific$equal_23$xtea.v:80$380 ($eq).
Removed top 1 bits (of 5) from port B of cell xtea.$verific$equal_24$xtea.v:81$381 ($eq).
Removed top 1 bits (of 5) from port B of cell xtea.$verific$equal_25$xtea.v:82$382 ($eq).
Removed top 1 bits (of 5) from port B of cell xtea.$verific$equal_26$xtea.v:83$383 ($eq).
Removed top 1 bits (of 5) from port B of cell xtea.$verific$equal_27$xtea.v:84$384 ($eq).
Removed top 1 bits (of 5) from port B of cell xtea.$verific$equal_28$xtea.v:85$385 ($eq).
Removed top 1 bits (of 5) from port B of cell xtea.$verific$equal_29$xtea.v:86$386 ($eq).
Removed top 3 bits (of 8) from mux cell xtea.$verific$select_33$xtea.v:90$392 ($pmux).
Removed top 2 bits (of 8) from port B of cell xtea.$verific$LessThan_39$xtea.v:120$397 ($lt).
Removed top 5 bits (of 32) from port B of cell xtea.$verific$xor_42$xtea.v:135$399 ($xor).
Removed top 5 bits (of 32) from port B of cell xtea.$verific$xor_70$xtea.v:145$416 ($xor).
Removed top 7 bits (of 8) from port B of cell xtea.$verific$add_95$xtea.v:151$428 ($add).
Removed top 1 bits (of 4) from wire xtea.$verific$n14$288.
Removed top 3 bits (of 8) from wire xtea.$verific$n42$289.
Removed top 5 bits (of 32) from wire xtea.delta.
Removed top 3 bits (of 8) from wire xtea.state.
Removed top 3 bits (of 32) from wire xtea.workunit2.

yosys> peepopt

3.71. Executing PEEPOPT pass (run peephole optimizers).

yosys> opt_clean

3.72. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \xtea..
Removed 0 unused cells and 3 unused wires.
<suppressed ~1 debug messages>

yosys> bmuxmap

3.73. Executing BMUXMAP pass.

yosys> demuxmap

3.74. Executing DEMUXMAP pass.

yosys> clean_zerowidth

yosys> alumacc

3.75. Executing ALUMACC pass (create $alu and $macc cells).
Extracting $alu and $macc cells in module xtea:
  creating $macc model for $auto$opt_share.cc:196:merge_operators$1017 ($neg).
  creating $macc model for $auto$opt_share.cc:196:merge_operators$1022 ($neg).
  creating $macc model for $auto$opt_share.cc:196:merge_operators$974 ($neg).
  creating $macc model for $verific$add_120$xtea.v:159$433 ($add).
  creating $macc model for $verific$add_123$xtea.v:162$434 ($add).
  creating $macc model for $verific$add_148$xtea.v:169$438 ($add).
  creating $macc model for $verific$add_43$xtea.v:135$400 ($add).
  creating $macc model for $verific$add_62$xtea.v:138$410 ($add).
  creating $macc model for $verific$add_71$xtea.v:145$417 ($add).
  creating $macc model for $verific$add_95$xtea.v:151$428 ($add).
  creating $alu model for $macc $verific$add_95$xtea.v:151$428.
  creating $alu model for $macc $verific$add_71$xtea.v:145$417.
  creating $alu model for $macc $verific$add_62$xtea.v:138$410.
  creating $alu model for $macc $verific$add_43$xtea.v:135$400.
  creating $alu model for $macc $verific$add_148$xtea.v:169$438.
  creating $alu model for $macc $verific$add_123$xtea.v:162$434.
  creating $alu model for $macc $verific$add_120$xtea.v:159$433.
  creating $alu model for $macc $auto$opt_share.cc:196:merge_operators$974.
  creating $alu model for $macc $auto$opt_share.cc:196:merge_operators$1022.
  creating $alu model for $macc $auto$opt_share.cc:196:merge_operators$1017.
  creating $alu model for $verific$LessThan_39$xtea.v:120$397 ($lt): new $alu
  creating $alu cell for $verific$LessThan_39$xtea.v:120$397: $auto$alumacc.cc:485:replace_alu$1065
  creating $alu cell for $auto$opt_share.cc:196:merge_operators$1017: $auto$alumacc.cc:485:replace_alu$1076
  creating $alu cell for $auto$opt_share.cc:196:merge_operators$1022: $auto$alumacc.cc:485:replace_alu$1079
  creating $alu cell for $auto$opt_share.cc:196:merge_operators$974: $auto$alumacc.cc:485:replace_alu$1082
  creating $alu cell for $verific$add_120$xtea.v:159$433: $auto$alumacc.cc:485:replace_alu$1085
  creating $alu cell for $verific$add_123$xtea.v:162$434: $auto$alumacc.cc:485:replace_alu$1088
  creating $alu cell for $verific$add_148$xtea.v:169$438: $auto$alumacc.cc:485:replace_alu$1091
  creating $alu cell for $verific$add_43$xtea.v:135$400: $auto$alumacc.cc:485:replace_alu$1094
  creating $alu cell for $verific$add_62$xtea.v:138$410: $auto$alumacc.cc:485:replace_alu$1097
  creating $alu cell for $verific$add_71$xtea.v:145$417: $auto$alumacc.cc:485:replace_alu$1100
  creating $alu cell for $verific$add_95$xtea.v:151$428: $auto$alumacc.cc:485:replace_alu$1103
  created 11 $alu and 0 $macc cells.

yosys> opt_expr

3.76. Executing OPT_EXPR pass (perform const folding).
Optimizing module xtea.

yosys> opt_merge -nomux

3.77. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\xtea'.
Removed a total of 0 cells.

yosys> opt_muxtree

3.78. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \xtea..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Removed 0 multiplexer ports.
<suppressed ~76 debug messages>

yosys> opt_reduce

3.79. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \xtea.
Performed a total of 0 changes.

yosys> opt_merge

3.80. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\xtea'.
Removed a total of 0 cells.

yosys> opt_share

3.81. Executing OPT_SHARE pass.

yosys> opt_dff -nosdff -nodffe

3.82. Executing OPT_DFF pass (perform DFF optimizations).

yosys> opt_clean

3.83. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \xtea..
Removed 0 unused cells and 1 unused wires.
<suppressed ~1 debug messages>

yosys> opt_expr

3.84. Executing OPT_EXPR pass (perform const folding).
Optimizing module xtea.
MAX OPT ITERATION = 1

yosys> stat

3.85. Printing statistics.

=== xtea ===

   Number of wires:                179
   Number of wire bits:           1958
   Number of public wires:          18
   Number of public wire bits:     397
   Number of memories:               0
   Number of memory bits:            0
   Number of processes:              0
   Number of cells:                149
     $adff                           1
     $adffe                         11
     $alu                           11
     $eq                            17
     $logic_not                      1
     $mux                            4
     $not                            6
     $or                             1
     $pmux                          74
     $reduce_and                     1
     $reduce_or                     18
     $xor                            4


yosys> memory -nomap

3.86. Executing MEMORY pass.

yosys> opt_mem

3.86.1. Executing OPT_MEM pass (optimize memories).
Performed a total of 0 transformations.

yosys> opt_mem_priority

3.86.2. Executing OPT_MEM_PRIORITY pass (removing unnecessary memory write priority relations).
Performed a total of 0 transformations.

yosys> opt_mem_feedback

3.86.3. Executing OPT_MEM_FEEDBACK pass (finding memory read-to-write feedback paths).

yosys> memory_bmux2rom

3.86.4. Executing MEMORY_BMUX2ROM pass (converting muxes to ROMs).

yosys> memory_dff

3.86.5. Executing MEMORY_DFF pass (merging $dff cells to $memrd).

yosys> opt_clean

3.86.6. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \xtea..

yosys> memory_share

3.86.7. Executing MEMORY_SHARE pass (consolidating $memrd/$memwr cells).

yosys> opt_mem_widen

3.86.8. Executing OPT_MEM_WIDEN pass (optimize memories where all ports are wide).
Performed a total of 0 transformations.

yosys> opt_clean

3.86.9. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \xtea..

yosys> memory_collect

3.86.10. Executing MEMORY_COLLECT pass (generating $mem cells).

yosys> stat

3.87. Printing statistics.

=== xtea ===

   Number of wires:                179
   Number of wire bits:           1958
   Number of public wires:          18
   Number of public wire bits:     397
   Number of memories:               0
   Number of memory bits:            0
   Number of processes:              0
   Number of cells:                149
     $adff                           1
     $adffe                         11
     $alu                           11
     $eq                            17
     $logic_not                      1
     $mux                            4
     $not                            6
     $or                             1
     $pmux                          74
     $reduce_and                     1
     $reduce_or                     18
     $xor                            4


yosys> muxpack

3.88. Executing MUXPACK pass ($mux cell cascades to $pmux).
Converted 0 (p)mux cells into 0 pmux cells.
<suppressed ~9 debug messages>

yosys> opt_clean

3.89. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \xtea..

yosys> pmuxtree

3.90. Executing PMUXTREE pass.

yosys> muxpack

3.91. Executing MUXPACK pass ($mux cell cascades to $pmux).
Converted 0 (p)mux cells into 0 pmux cells.
<suppressed ~167 debug messages>

yosys> memory_map

3.92. Executing MEMORY_MAP pass (converting memories to logic and flip-flops).

yosys> stat

3.93. Printing statistics.

=== xtea ===

   Number of wires:                495
   Number of wire bits:           2789
   Number of public wires:          18
   Number of public wire bits:     397
   Number of memories:               0
   Number of memory bits:            0
   Number of processes:              0
   Number of cells:                391
     $adff                           1
     $adffe                         11
     $alu                           11
     $eq                            17
     $logic_not                      1
     $mux                          167
     $not                           77
     $or                             9
     $reduce_and                     1
     $reduce_or                     92
     $xor                            4


yosys> techmap -map +/techmap.v -map +/rapidsilicon/genesis/arith_map.v

3.94. Executing TECHMAP pass (map to technology primitives).

3.94.1. Executing Verilog-2005 frontend: /nfs_scratch/scratch/Vorak/aram/Workspace/Raptor/yosys_verific_rs/yosys/install/bin/../share/yosys/techmap.v
Parsing Verilog input from `/nfs_scratch/scratch/Vorak/aram/Workspace/Raptor/yosys_verific_rs/yosys/install/bin/../share/yosys/techmap.v' to AST representation.
Generating RTLIL representation for module `\_90_simplemap_bool_ops'.
Generating RTLIL representation for module `\_90_simplemap_reduce_ops'.
Generating RTLIL representation for module `\_90_simplemap_logic_ops'.
Generating RTLIL representation for module `\_90_simplemap_compare_ops'.
Generating RTLIL representation for module `\_90_simplemap_various'.
Generating RTLIL representation for module `\_90_simplemap_registers'.
Generating RTLIL representation for module `\_90_shift_ops_shr_shl_sshl_sshr'.
Generating RTLIL representation for module `\_90_shift_shiftx'.
Generating RTLIL representation for module `\_90_fa'.
Generating RTLIL representation for module `\_90_lcu'.
Generating RTLIL representation for module `\_90_alu'.
Generating RTLIL representation for module `\_90_macc'.
Generating RTLIL representation for module `\_90_alumacc'.
Generating RTLIL representation for module `\$__div_mod_u'.
Generating RTLIL representation for module `\$__div_mod_trunc'.
Generating RTLIL representation for module `\_90_div'.
Generating RTLIL representation for module `\_90_mod'.
Generating RTLIL representation for module `\$__div_mod_floor'.
Generating RTLIL representation for module `\_90_divfloor'.
Generating RTLIL representation for module `\_90_modfloor'.
Generating RTLIL representation for module `\_90_pow'.
Generating RTLIL representation for module `\_90_pmux'.
Generating RTLIL representation for module `\_90_demux'.
Generating RTLIL representation for module `\_90_lut'.
Successfully finished Verilog frontend.

3.94.2. Executing Verilog-2005 frontend: /nfs_scratch/scratch/Vorak/aram/Workspace/Raptor/yosys_verific_rs/yosys/install/bin/../share/yosys/rapidsilicon/genesis/arith_map.v
Parsing Verilog input from `/nfs_scratch/scratch/Vorak/aram/Workspace/Raptor/yosys_verific_rs/yosys/install/bin/../share/yosys/rapidsilicon/genesis/arith_map.v' to AST representation.
Generating RTLIL representation for module `\_80_rs_alu'.
Successfully finished Verilog frontend.

3.94.3. Continuing TECHMAP pass.
Using extmapper simplemap for cells of type $reduce_or.
Using extmapper simplemap for cells of type $mux.
Using extmapper simplemap for cells of type $not.
Using template $paramod$be80489e44a49c29884f59fd81c31ed03229cfc1\_80_rs_alu for cells of type $alu.
Using extmapper simplemap for cells of type $adffe.
Using template $paramod$150d098cb9cca1819459bc5073194c8c53d2862d\_90_alu for cells of type $alu.
Using extmapper simplemap for cells of type $or.
Using template $paramod$63a3f1ffa662be02d3403b533885c56d18ebe02a\_80_rs_alu for cells of type $alu.
Using extmapper simplemap for cells of type $logic_not.
Using extmapper simplemap for cells of type $eq.
Using extmapper simplemap for cells of type $xor.
Using extmapper simplemap for cells of type $reduce_and.
Using template $paramod$c3cd1564c35d873179656addd6052d7ea8b6d991\_90_alu for cells of type $alu.
Using template $paramod$c6baa65225090ac0a120feab1b920965244aa496\_90_alu for cells of type $alu.
Using extmapper simplemap for cells of type $adff.
Using extmapper simplemap for cells of type $pos.
Using extmapper simplemap for cells of type $and.
Using template $paramod\_90_lcu\WIDTH=32'00000000000000000000000000001000 for cells of type $lcu.
Using template $paramod\_90_lcu\WIDTH=32'00000000000000000000000000100000 for cells of type $lcu.
No more expansions possible.
<suppressed ~1362 debug messages>

yosys> stat

3.95. Printing statistics.

=== xtea ===

   Number of wires:               1121
   Number of wire bits:          11103
   Number of public wires:          18
   Number of public wire bits:     397
   Number of memories:               0
   Number of memory bits:            0
   Number of processes:              0
   Number of cells:               3110
     $_AND_                        171
     $_DFFE_PP0N_                  126
     $_DFFE_PP0P_                   67
     $_DFF_PP0_                      5
     $_MUX_                       1095
     $_NOT_                        399
     $_OR_                         407
     $_XOR_                        584
     adder_carry                   256


yosys> opt_expr

3.96. Executing OPT_EXPR pass (perform const folding).
Optimizing module xtea.
<suppressed ~1143 debug messages>

yosys> opt_merge -nomux

3.97. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\xtea'.
<suppressed ~1413 debug messages>
Removed a total of 471 cells.

yosys> opt_muxtree

3.98. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \xtea..
  Creating internal representation of mux trees.
  No muxes found in this module.
Removed 0 multiplexer ports.

yosys> opt_reduce

3.99. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \xtea.
Performed a total of 0 changes.

yosys> opt_merge

3.100. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\xtea'.
Removed a total of 0 cells.

yosys> opt_share

3.101. Executing OPT_SHARE pass.

yosys> opt_dff -nosdff -nodffe

3.102. Executing OPT_DFF pass (perform DFF optimizations).

yosys> opt_clean

3.103. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \xtea..
Removed 191 unused cells and 819 unused wires.
<suppressed ~192 debug messages>

yosys> opt_expr

3.104. Executing OPT_EXPR pass (perform const folding).
Optimizing module xtea.
<suppressed ~47 debug messages>

yosys> opt_muxtree

3.105. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \xtea..
  Creating internal representation of mux trees.
  No muxes found in this module.
Removed 0 multiplexer ports.

yosys> opt_reduce

3.106. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \xtea.
Performed a total of 0 changes.

yosys> opt_merge

3.107. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\xtea'.
<suppressed ~75 debug messages>
Removed a total of 25 cells.

yosys> opt_share

3.108. Executing OPT_SHARE pass.

yosys> opt_dff -nosdff -nodffe

3.109. Executing OPT_DFF pass (perform DFF optimizations).

yosys> opt_clean

3.110. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \xtea..
Removed 1 unused cells and 3 unused wires.
<suppressed ~2 debug messages>

yosys> opt_expr

3.111. Executing OPT_EXPR pass (perform const folding).
Optimizing module xtea.

yosys> opt_muxtree

3.112. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \xtea..
  Creating internal representation of mux trees.
  No muxes found in this module.
Removed 0 multiplexer ports.

yosys> opt_reduce

3.113. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \xtea.
Performed a total of 0 changes.

yosys> opt_merge

3.114. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\xtea'.
Removed a total of 0 cells.

yosys> opt_share

3.115. Executing OPT_SHARE pass.

yosys> opt_dff -nosdff -nodffe

3.116. Executing OPT_DFF pass (perform DFF optimizations).

yosys> opt_clean

3.117. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \xtea..

yosys> opt_expr

3.118. Executing OPT_EXPR pass (perform const folding).
Optimizing module xtea.
MAX OPT ITERATION = 3

yosys> opt_expr -full

3.119. Executing OPT_EXPR pass (perform const folding).
Optimizing module xtea.
<suppressed ~207 debug messages>

yosys> techmap -map +/techmap.v

3.120. Executing TECHMAP pass (map to technology primitives).

3.120.1. Executing Verilog-2005 frontend: /nfs_scratch/scratch/Vorak/aram/Workspace/Raptor/yosys_verific_rs/yosys/install/bin/../share/yosys/techmap.v
Parsing Verilog input from `/nfs_scratch/scratch/Vorak/aram/Workspace/Raptor/yosys_verific_rs/yosys/install/bin/../share/yosys/techmap.v' to AST representation.
Generating RTLIL representation for module `\_90_simplemap_bool_ops'.
Generating RTLIL representation for module `\_90_simplemap_reduce_ops'.
Generating RTLIL representation for module `\_90_simplemap_logic_ops'.
Generating RTLIL representation for module `\_90_simplemap_compare_ops'.
Generating RTLIL representation for module `\_90_simplemap_various'.
Generating RTLIL representation for module `\_90_simplemap_registers'.
Generating RTLIL representation for module `\_90_shift_ops_shr_shl_sshl_sshr'.
Generating RTLIL representation for module `\_90_shift_shiftx'.
Generating RTLIL representation for module `\_90_fa'.
Generating RTLIL representation for module `\_90_lcu'.
Generating RTLIL representation for module `\_90_alu'.
Generating RTLIL representation for module `\_90_macc'.
Generating RTLIL representation for module `\_90_alumacc'.
Generating RTLIL representation for module `\$__div_mod_u'.
Generating RTLIL representation for module `\$__div_mod_trunc'.
Generating RTLIL representation for module `\_90_div'.
Generating RTLIL representation for module `\_90_mod'.
Generating RTLIL representation for module `\$__div_mod_floor'.
Generating RTLIL representation for module `\_90_divfloor'.
Generating RTLIL representation for module `\_90_modfloor'.
Generating RTLIL representation for module `\_90_pow'.
Generating RTLIL representation for module `\_90_pmux'.
Generating RTLIL representation for module `\_90_demux'.
Generating RTLIL representation for module `\_90_lut'.
Successfully finished Verilog frontend.

3.120.2. Continuing TECHMAP pass.
No more expansions possible.
<suppressed ~71 debug messages>

yosys> opt_expr

3.121. Executing OPT_EXPR pass (perform const folding).
Optimizing module xtea.

yosys> opt_merge -nomux

3.122. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\xtea'.
Removed a total of 0 cells.

yosys> opt_muxtree

3.123. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \xtea..
  Creating internal representation of mux trees.
  No muxes found in this module.
Removed 0 multiplexer ports.

yosys> opt_reduce

3.124. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \xtea.
Performed a total of 0 changes.

yosys> opt_merge

3.125. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\xtea'.
Removed a total of 0 cells.

yosys> opt_dff -nosdff -nodffe -sat

3.126. Executing OPT_DFF pass (perform DFF optimizations).

yosys> opt_clean

3.127. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \xtea..
Removed 5 unused cells and 73 unused wires.
<suppressed ~6 debug messages>

yosys> opt_expr

3.128. Executing OPT_EXPR pass (perform const folding).
Optimizing module xtea.

yosys> opt_muxtree

3.129. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \xtea..
  Creating internal representation of mux trees.
  No muxes found in this module.
Removed 0 multiplexer ports.

yosys> opt_reduce

3.130. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \xtea.
Performed a total of 0 changes.

yosys> opt_merge

3.131. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\xtea'.
Removed a total of 0 cells.

yosys> opt_dff -nosdff -nodffe -sat

3.132. Executing OPT_DFF pass (perform DFF optimizations).

yosys> opt_clean

3.133. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \xtea..

yosys> opt_expr

3.134. Executing OPT_EXPR pass (perform const folding).
Optimizing module xtea.
MAX OPT ITERATION = 2

yosys> abc -dff

3.135. Executing ABC pass (technology mapping using ABC).

3.135.1. Summary of detected clock domains:
  100 cells in clk=\clock, en={ }, arst=\reset, srst={ }
  19 cells in clk=\clock, en=!$auto$opt_reduce.cc:134:opt_pmux$933, arst=\reset, srst={ }
  3 cells in clk=\clock, en=!$auto$simplemap.cc:257:simplemap_eqne$2207, arst=\reset, srst={ }
  452 cells in clk=\clock, en=!$auto$opt_reduce.cc:134:opt_pmux$929, arst=\reset, srst={ }
  13 cells in clk=\clock, en=!$auto$simplemap.cc:257:simplemap_eqne$2225, arst=\reset, srst={ }
  218 cells in clk=\clock, en=!$auto$opt_reduce.cc:134:opt_pmux$935, arst=\reset, srst={ }
  110 cells in clk=\clock, en=!$auto$opt_reduce.cc:134:opt_pmux$937, arst=\reset, srst={ }
  377 cells in clk=\clock, en=!$auto$opt_reduce.cc:134:opt_pmux$931, arst=\reset, srst={ }
  98 cells in clk=\clock, en=$auto$opt_reduce.cc:134:opt_pmux$799, arst=\reset, srst={ }
  3 cells in clk=\clock, en=!$auto$simplemap.cc:257:simplemap_eqne$2495, arst=\reset, srst={ }
  50 cells in clk=\clock, en=!$auto$opt_reduce.cc:134:opt_pmux$943, arst=\reset, srst={ }

3.135.2. Extracting gate netlist of module `\xtea' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clock, asynchronously reset by \reset
Extracted 100 gates and 123 wires to a netlist network with 21 inputs and 23 outputs.

3.135.2.1. Executing ABC.

3.135.3. Extracting gate netlist of module `\xtea' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clock, enabled by !$auto$opt_reduce.cc:134:opt_pmux$933, asynchronously reset by \reset
Extracted 19 gates and 37 wires to a netlist network with 17 inputs and 7 outputs.

3.135.3.1. Executing ABC.

3.135.4. Extracting gate netlist of module `\xtea' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clock, enabled by !$abc$5391$auto$simplemap.cc:257:simplemap_eqne$2207, asynchronously reset by \reset
Extracted 3 gates and 6 wires to a netlist network with 3 inputs and 2 outputs.

3.135.4.1. Executing ABC.

3.135.5. Extracting gate netlist of module `\xtea' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clock, enabled by !$auto$opt_reduce.cc:134:opt_pmux$929, asynchronously reset by \reset
Extracted 336 gates and 514 wires to a netlist network with 177 inputs and 197 outputs.

3.135.5.1. Executing ABC.

3.135.6. Extracting gate netlist of module `\xtea' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clock, enabled by !$abc$5391$auto$simplemap.cc:257:simplemap_eqne$2225, asynchronously reset by \reset
Extracted 13 gates and 21 wires to a netlist network with 8 inputs and 1 outputs.

3.135.6.1. Executing ABC.

3.135.7. Extracting gate netlist of module `\xtea' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clock, enabled by !$auto$opt_reduce.cc:134:opt_pmux$935, asynchronously reset by \reset
Extracted 154 gates and 235 wires to a netlist network with 81 inputs and 103 outputs.

3.135.7.1. Executing ABC.

3.135.8. Extracting gate netlist of module `\xtea' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clock, enabled by !$auto$opt_reduce.cc:134:opt_pmux$937, asynchronously reset by \reset
Extracted 110 gates and 252 wires to a netlist network with 142 inputs and 38 outputs.

3.135.8.1. Executing ABC.

3.135.9. Extracting gate netlist of module `\xtea' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clock, enabled by !$auto$opt_reduce.cc:134:opt_pmux$931, asynchronously reset by \reset
Extracted 301 gates and 478 wires to a netlist network with 176 inputs and 184 outputs.

3.135.9.1. Executing ABC.

3.135.10. Extracting gate netlist of module `\xtea' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clock, enabled by $auto$opt_reduce.cc:134:opt_pmux$799, asynchronously reset by \reset
Extracted 98 gates and 165 wires to a netlist network with 66 inputs and 66 outputs.

3.135.10.1. Executing ABC.

3.135.11. Extracting gate netlist of module `\xtea' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clock, enabled by !$auto$simplemap.cc:257:simplemap_eqne$2495, asynchronously reset by \reset
Extracted 3 gates and 7 wires to a netlist network with 3 inputs and 3 outputs.

3.135.11.1. Executing ABC.

3.135.12. Extracting gate netlist of module `\xtea' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clock, enabled by !$auto$opt_reduce.cc:134:opt_pmux$943, asynchronously reset by \reset
Extracted 50 gates and 60 wires to a netlist network with 10 inputs and 15 outputs.

3.135.12.1. Executing ABC.

yosys> abc -dff

3.136. Executing ABC pass (technology mapping using ABC).

3.136.1. Summary of detected clock domains:
  116 cells in clk=\clock, en=!$abc$6091$auto$opt_reduce.cc:134:opt_pmux$937, arst=\reset, srst={ }
  11 cells in clk=\clock, en=!$abc$5391$auto$simplemap.cc:257:simplemap_eqne$2225, arst=\reset, srst={ }
  2 cells in clk=\clock, en=!$abc$6772$auto$simplemap.cc:257:simplemap_eqne$2495, arst=\reset, srst={ }
  445 cells in clk=\clock, en=!$abc$6204$auto$opt_reduce.cc:134:opt_pmux$931, arst=\reset, srst={ }
  219 cells in clk=\clock, en=!$abc$5901$auto$opt_reduce.cc:134:opt_pmux$935, arst=\reset, srst={ }
  81 cells in clk=\clock, en={ }, arst=\reset, srst={ }
  19 cells in clk=\clock, en=!$abc$5485$auto$opt_reduce.cc:134:opt_pmux$933, arst=\reset, srst={ }
  4 cells in clk=\clock, en=!$abc$5391$auto$simplemap.cc:257:simplemap_eqne$2207, arst=\reset, srst={ }
  447 cells in clk=\clock, en=!$abc$5510$auto$opt_reduce.cc:134:opt_pmux$929, arst=\reset, srst={ }
  91 cells in clk=\clock, en=$abc$6577$auto$opt_reduce.cc:134:opt_pmux$799, arst=\reset, srst={ }
  58 cells in clk=\clock, en=!$abc$6778$auto$opt_reduce.cc:134:opt_pmux$943, arst=\reset, srst={ }

3.136.2. Extracting gate netlist of module `\xtea' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clock, enabled by !$abc$6091$auto$opt_reduce.cc:134:opt_pmux$937, asynchronously reset by \reset
Extracted 116 gates and 262 wires to a netlist network with 146 inputs and 38 outputs.

3.136.2.1. Executing ABC.

3.136.3. Extracting gate netlist of module `\xtea' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clock, enabled by !$abc$5391$auto$simplemap.cc:257:simplemap_eqne$2225, asynchronously reset by \reset
Extracted 11 gates and 21 wires to a netlist network with 10 inputs and 3 outputs.

3.136.3.1. Executing ABC.

3.136.4. Extracting gate netlist of module `\xtea' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clock, enabled by !$abc$6772$auto$simplemap.cc:257:simplemap_eqne$2495, asynchronously reset by \reset
Extracted 2 gates and 5 wires to a netlist network with 2 inputs and 2 outputs.

3.136.4.1. Executing ABC.

3.136.5. Extracting gate netlist of module `\xtea' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clock, enabled by !$abc$6204$auto$opt_reduce.cc:134:opt_pmux$931, asynchronously reset by \reset
Extracted 370 gates and 548 wires to a netlist network with 178 inputs and 190 outputs.

3.136.5.1. Executing ABC.

3.136.6. Extracting gate netlist of module `\xtea' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clock, enabled by !$abc$5901$auto$opt_reduce.cc:134:opt_pmux$935, asynchronously reset by \reset
Extracted 156 gates and 237 wires to a netlist network with 81 inputs and 107 outputs.

3.136.6.1. Executing ABC.

3.136.7. Extracting gate netlist of module `\xtea' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clock, asynchronously reset by \reset
Extracted 81 gates and 107 wires to a netlist network with 26 inputs and 20 outputs.

3.136.7.1. Executing ABC.

3.136.8. Extracting gate netlist of module `\xtea' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clock, enabled by !$abc$5485$auto$opt_reduce.cc:134:opt_pmux$933, asynchronously reset by \reset
Extracted 19 gates and 36 wires to a netlist network with 17 inputs and 8 outputs.

3.136.8.1. Executing ABC.

3.136.9. Extracting gate netlist of module `\xtea' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clock, enabled by !$abc$7535$abc$5391$auto$simplemap.cc:257:simplemap_eqne$2207, asynchronously reset by \reset
Extracted 4 gates and 8 wires to a netlist network with 4 inputs and 3 outputs.

3.136.9.1. Executing ABC.

3.136.10. Extracting gate netlist of module `\xtea' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clock, enabled by !$abc$5510$auto$opt_reduce.cc:134:opt_pmux$929, asynchronously reset by \reset
Extracted 329 gates and 506 wires to a netlist network with 177 inputs and 180 outputs.

3.136.10.1. Executing ABC.

3.136.11. Extracting gate netlist of module `\xtea' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clock, enabled by $abc$6577$auto$opt_reduce.cc:134:opt_pmux$799, asynchronously reset by \reset
Extracted 91 gates and 159 wires to a netlist network with 68 inputs and 66 outputs.

3.136.11.1. Executing ABC.

3.136.12. Extracting gate netlist of module `\xtea' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clock, enabled by !$abc$6778$auto$opt_reduce.cc:134:opt_pmux$943, asynchronously reset by \reset
Extracted 58 gates and 71 wires to a netlist network with 13 inputs and 18 outputs.

3.136.12.1. Executing ABC.

yosys> abc -dff

3.137. Executing ABC pass (technology mapping using ABC).

3.137.1. Summary of detected clock domains:
  10 cells in clk=\clock, en=!$abc$6948$abc$5391$auto$simplemap.cc:257:simplemap_eqne$2225, arst=\reset, srst={ }
  2 cells in clk=\clock, en=!$abc$6960$abc$6772$auto$simplemap.cc:257:simplemap_eqne$2495, arst=\reset, srst={ }
  420 cells in clk=\clock, en=!$abc$6965$abc$6204$auto$opt_reduce.cc:134:opt_pmux$931, arst=\reset, srst={ }
  471 cells in clk=\clock, en=!$abc$7642$abc$5510$auto$opt_reduce.cc:134:opt_pmux$929, arst=\reset, srst={ }
  114 cells in clk=\clock, en=!$abc$6832$abc$6091$auto$opt_reduce.cc:134:opt_pmux$937, arst=\reset, srst={ }
  221 cells in clk=\clock, en=!$abc$7347$abc$5901$auto$opt_reduce.cc:134:opt_pmux$935, arst=\reset, srst={ }
  79 cells in clk=\clock, en={ }, arst=\reset, srst={ }
  23 cells in clk=\clock, en=!$abc$7615$abc$5485$auto$opt_reduce.cc:134:opt_pmux$933, arst=\reset, srst={ }
  4 cells in clk=\clock, en=!$abc$7535$abc$5391$auto$simplemap.cc:257:simplemap_eqne$2207, arst=\reset, srst={ }
  120 cells in clk=\clock, en=$abc$8037$abc$6577$auto$opt_reduce.cc:134:opt_pmux$799, arst=\reset, srst={ }
  58 cells in clk=\clock, en=!$abc$8232$abc$6778$auto$opt_reduce.cc:134:opt_pmux$943, arst=\reset, srst={ }

3.137.2. Extracting gate netlist of module `\xtea' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clock, enabled by !$abc$6948$abc$5391$auto$simplemap.cc:257:simplemap_eqne$2225, asynchronously reset by \reset
Extracted 10 gates and 20 wires to a netlist network with 10 inputs and 2 outputs.

3.137.2.1. Executing ABC.

3.137.3. Extracting gate netlist of module `\xtea' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clock, enabled by !$abc$6960$abc$6772$auto$simplemap.cc:257:simplemap_eqne$2495, asynchronously reset by \reset
Extracted 2 gates and 5 wires to a netlist network with 2 inputs and 2 outputs.

3.137.3.1. Executing ABC.

3.137.4. Extracting gate netlist of module `\xtea' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clock, enabled by !$abc$6965$abc$6204$auto$opt_reduce.cc:134:opt_pmux$931, asynchronously reset by \reset
Extracted 344 gates and 519 wires to a netlist network with 175 inputs and 185 outputs.

3.137.4.1. Executing ABC.

3.137.5. Extracting gate netlist of module `\xtea' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clock, enabled by !$abc$7642$abc$5510$auto$opt_reduce.cc:134:opt_pmux$929, asynchronously reset by \reset
Extracted 354 gates and 532 wires to a netlist network with 178 inputs and 171 outputs.

3.137.5.1. Executing ABC.

3.137.6. Extracting gate netlist of module `\xtea' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clock, enabled by !$abc$6832$abc$6091$auto$opt_reduce.cc:134:opt_pmux$937, asynchronously reset by \reset
Extracted 114 gates and 258 wires to a netlist network with 144 inputs and 40 outputs.

3.137.6.1. Executing ABC.

3.137.7. Extracting gate netlist of module `\xtea' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clock, enabled by !$abc$7347$abc$5901$auto$opt_reduce.cc:134:opt_pmux$935, asynchronously reset by \reset
Extracted 158 gates and 241 wires to a netlist network with 83 inputs and 106 outputs.

3.137.7.1. Executing ABC.

3.137.8. Extracting gate netlist of module `\xtea' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clock, asynchronously reset by \reset
Extracted 79 gates and 104 wires to a netlist network with 25 inputs and 18 outputs.

3.137.8.1. Executing ABC.

3.137.9. Extracting gate netlist of module `\xtea' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clock, enabled by !$abc$7615$abc$5485$auto$opt_reduce.cc:134:opt_pmux$933, asynchronously reset by \reset
Extracted 23 gates and 40 wires to a netlist network with 17 inputs and 10 outputs.

3.137.9.1. Executing ABC.

3.137.10. Extracting gate netlist of module `\xtea' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clock, enabled by !$abc$9379$abc$7535$abc$5391$auto$simplemap.cc:257:simplemap_eqne$2207, asynchronously reset by \reset
Extracted 4 gates and 8 wires to a netlist network with 4 inputs and 3 outputs.

3.137.10.1. Executing ABC.

3.137.11. Extracting gate netlist of module `\xtea' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clock, enabled by $abc$8037$abc$6577$auto$opt_reduce.cc:134:opt_pmux$799, asynchronously reset by \reset
Extracted 120 gates and 187 wires to a netlist network with 67 inputs and 65 outputs.

3.137.11.1. Executing ABC.

3.137.12. Extracting gate netlist of module `\xtea' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clock, enabled by !$abc$8232$abc$6778$auto$opt_reduce.cc:134:opt_pmux$943, asynchronously reset by \reset
Extracted 58 gates and 71 wires to a netlist network with 13 inputs and 19 outputs.

3.137.12.1. Executing ABC.

yosys> abc -dff

3.138. Executing ABC pass (technology mapping using ABC).

3.138.1. Summary of detected clock domains:
  5 cells in clk=\clock, en=!$abc$9379$abc$7535$abc$5391$auto$simplemap.cc:257:simplemap_eqne$2207, arst=\reset, srst={ }
  10 cells in clk=\clock, en=!$abc$8289$abc$6948$abc$5391$auto$simplemap.cc:257:simplemap_eqne$2225, arst=\reset, srst={ }
  3 cells in clk=\clock, en=!$abc$8300$abc$6960$abc$6772$auto$simplemap.cc:257:simplemap_eqne$2495, arst=\reset, srst={ }
  449 cells in clk=\clock, en=!$abc$8305$abc$6965$abc$6204$auto$opt_reduce.cc:134:opt_pmux$931, arst=\reset, srst={ }
  480 cells in clk=\clock, en=!$abc$8685$abc$7642$abc$5510$auto$opt_reduce.cc:134:opt_pmux$929, arst=\reset, srst={ }
  114 cells in clk=\clock, en=!$abc$9068$abc$6832$abc$6091$auto$opt_reduce.cc:134:opt_pmux$937, arst=\reset, srst={ }
  223 cells in clk=\clock, en=!$abc$9183$abc$7347$abc$5901$auto$opt_reduce.cc:134:opt_pmux$935, arst=\reset, srst={ }
  78 cells in clk=\clock, en={ }, arst=\reset, srst={ }
  19 cells in clk=\clock, en=!$abc$9458$abc$7615$abc$5485$auto$opt_reduce.cc:134:opt_pmux$933, arst=\reset, srst={ }
  89 cells in clk=\clock, en=$abc$9487$abc$8037$abc$6577$auto$opt_reduce.cc:134:opt_pmux$799, arst=\reset, srst={ }
  55 cells in clk=\clock, en=!$abc$9681$abc$8232$abc$6778$auto$opt_reduce.cc:134:opt_pmux$943, arst=\reset, srst={ }

3.138.2. Extracting gate netlist of module `\xtea' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clock, enabled by !$abc$9379$abc$7535$abc$5391$auto$simplemap.cc:257:simplemap_eqne$2207, asynchronously reset by \reset
Extracted 5 gates and 11 wires to a netlist network with 6 inputs and 4 outputs.

3.138.2.1. Executing ABC.

3.138.3. Extracting gate netlist of module `\xtea' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clock, enabled by !$abc$8289$abc$6948$abc$5391$auto$simplemap.cc:257:simplemap_eqne$2225, asynchronously reset by \reset
Extracted 10 gates and 20 wires to a netlist network with 10 inputs and 2 outputs.

3.138.3.1. Executing ABC.

3.138.4. Extracting gate netlist of module `\xtea' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clock, enabled by !$abc$8300$abc$6960$abc$6772$auto$simplemap.cc:257:simplemap_eqne$2495, asynchronously reset by \reset
Extracted 3 gates and 7 wires to a netlist network with 3 inputs and 3 outputs.

3.138.4.1. Executing ABC.

3.138.5. Extracting gate netlist of module `\xtea' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clock, enabled by !$abc$8305$abc$6965$abc$6204$auto$opt_reduce.cc:134:opt_pmux$931, asynchronously reset by \reset
Extracted 372 gates and 552 wires to a netlist network with 180 inputs and 196 outputs.

3.138.5.1. Executing ABC.

3.138.6. Extracting gate netlist of module `\xtea' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clock, enabled by !$abc$8685$abc$7642$abc$5510$auto$opt_reduce.cc:134:opt_pmux$929, asynchronously reset by \reset
Extracted 364 gates and 542 wires to a netlist network with 178 inputs and 186 outputs.

3.138.6.1. Executing ABC.

3.138.7. Extracting gate netlist of module `\xtea' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clock, enabled by !$abc$9068$abc$6832$abc$6091$auto$opt_reduce.cc:134:opt_pmux$937, asynchronously reset by \reset
Extracted 114 gates and 261 wires to a netlist network with 147 inputs and 40 outputs.

3.138.7.1. Executing ABC.

3.138.8. Extracting gate netlist of module `\xtea' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clock, enabled by !$abc$9183$abc$7347$abc$5901$auto$opt_reduce.cc:134:opt_pmux$935, asynchronously reset by \reset
Extracted 160 gates and 242 wires to a netlist network with 82 inputs and 103 outputs.

3.138.8.1. Executing ABC.

3.138.9. Extracting gate netlist of module `\xtea' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clock, asynchronously reset by \reset
Extracted 78 gates and 104 wires to a netlist network with 26 inputs and 18 outputs.

3.138.9.1. Executing ABC.

3.138.10. Extracting gate netlist of module `\xtea' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clock, enabled by !$abc$9458$abc$7615$abc$5485$auto$opt_reduce.cc:134:opt_pmux$933, asynchronously reset by \reset
Extracted 19 gates and 36 wires to a netlist network with 17 inputs and 7 outputs.

3.138.10.1. Executing ABC.

3.138.11. Extracting gate netlist of module `\xtea' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clock, enabled by $abc$9487$abc$8037$abc$6577$auto$opt_reduce.cc:134:opt_pmux$799, asynchronously reset by \reset
Extracted 89 gates and 156 wires to a netlist network with 67 inputs and 65 outputs.

3.138.11.1. Executing ABC.

3.138.12. Extracting gate netlist of module `\xtea' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clock, enabled by !$abc$9681$abc$8232$abc$6778$auto$opt_reduce.cc:134:opt_pmux$943, asynchronously reset by \reset
Extracted 55 gates and 68 wires to a netlist network with 13 inputs and 18 outputs.

3.138.12.1. Executing ABC.

yosys> opt_ffinv

3.139. Executing OPT_FFINV pass (push inverters through FFs).
Discovering LUTs.
Pushed 0 inverters.

yosys> opt_expr

3.140. Executing OPT_EXPR pass (perform const folding).
Optimizing module xtea.
<suppressed ~68 debug messages>

yosys> opt_merge -nomux

3.141. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\xtea'.
<suppressed ~6 debug messages>
Removed a total of 2 cells.

yosys> opt_muxtree

3.142. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \xtea..
  Creating internal representation of mux trees.
  No muxes found in this module.
Removed 0 multiplexer ports.

yosys> opt_reduce

3.143. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \xtea.
Performed a total of 0 changes.

yosys> opt_merge

3.144. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\xtea'.
Removed a total of 0 cells.

yosys> opt_share

3.145. Executing OPT_SHARE pass.

yosys> opt_dff -nosdff -sat

3.146. Executing OPT_DFF pass (perform DFF optimizations).

yosys> opt_clean

3.147. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \xtea..
Removed 4 unused cells and 8116 unused wires.
<suppressed ~10 debug messages>

yosys> opt_expr

3.148. Executing OPT_EXPR pass (perform const folding).
Optimizing module xtea.

yosys> opt_muxtree

3.149. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \xtea..
  Creating internal representation of mux trees.
  No muxes found in this module.
Removed 0 multiplexer ports.

yosys> opt_reduce

3.150. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \xtea.
Performed a total of 0 changes.

yosys> opt_merge

3.151. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\xtea'.
Removed a total of 0 cells.

yosys> opt_share

3.152. Executing OPT_SHARE pass.

yosys> opt_dff -nosdff -sat

3.153. Executing OPT_DFF pass (perform DFF optimizations).

yosys> opt_clean

3.154. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \xtea..

yosys> opt_expr

3.155. Executing OPT_EXPR pass (perform const folding).
Optimizing module xtea.
MAX OPT ITERATION = 2

yosys> bmuxmap

3.156. Executing BMUXMAP pass.

yosys> demuxmap

3.157. Executing DEMUXMAP pass.

yosys> clean_zerowidth

yosys> abc -script /tmp/yosys_w1eHR0/abc_tmp_1.scr

3.158. Executing ABC pass (technology mapping using ABC).

3.158.1. Extracting gate netlist of module `\xtea' to `<abc-temp-dir>/input.blif'..
Extracted 1069 gates and 1623 wires to a netlist network with 554 inputs and 510 outputs.

3.158.1.1. Executing ABC.
DE:   #PIs = 554  #Luts =   571  Max Lvl =   4  Avg Lvl =   1.46  [   0.24 sec. at Pass 0]{firstMap}
DE:   #PIs = 554  #Luts =   558  Max Lvl =   6  Avg Lvl =   1.87  [   2.29 sec. at Pass 1]{initMapFlow}
DE:   #PIs = 554  #Luts =   557  Max Lvl =   6  Avg Lvl =   1.87  [   0.90 sec. at Pass 2]{map}
DE:   #PIs = 554  #Luts =   556  Max Lvl =   5  Avg Lvl =   1.87  [   0.64 sec. at Pass 3]{postMap}
DE:   #PIs = 554  #Luts =   556  Max Lvl =   5  Avg Lvl =   1.87  [   1.21 sec. at Pass 4]{map}
DE:   #PIs = 554  #Luts =   556  Max Lvl =   5  Avg Lvl =   1.87  [   1.50 sec. at Pass 5]{postMap}
DE:   #PIs = 554  #Luts =   556  Max Lvl =   5  Avg Lvl =   1.87  [   1.22 sec. at Pass 6]{map}
DE:   #PIs = 554  #Luts =   556  Max Lvl =   5  Avg Lvl =   1.87  [   0.94 sec. at Pass 7]{pushMap}
DE:   #PIs = 554  #Luts =   556  Max Lvl =   5  Avg Lvl =   1.87  [   0.64 sec. at Pass 8]{finalMap}

yosys> opt_expr

3.159. Executing OPT_EXPR pass (perform const folding).
Optimizing module xtea.

yosys> opt_merge -nomux

3.160. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\xtea'.
Removed a total of 0 cells.

yosys> opt_muxtree

3.161. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \xtea..
  Creating internal representation of mux trees.
  No muxes found in this module.
Removed 0 multiplexer ports.

yosys> opt_reduce

3.162. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \xtea.
Performed a total of 0 changes.

yosys> opt_merge

3.163. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\xtea'.
Removed a total of 0 cells.

yosys> opt_share

3.164. Executing OPT_SHARE pass.

yosys> opt_dff -nosdff -nodffe

3.165. Executing OPT_DFF pass (perform DFF optimizations).

yosys> opt_clean

3.166. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \xtea..
Removed 0 unused cells and 1581 unused wires.
<suppressed ~1 debug messages>

yosys> opt_expr

3.167. Executing OPT_EXPR pass (perform const folding).
Optimizing module xtea.
MAX OPT ITERATION = 1

yosys> opt_ffinv

3.168. Executing OPT_FFINV pass (push inverters through FFs).
Discovering LUTs.
Pushed 0 inverters.

yosys> stat

3.169. Printing statistics.

=== xtea ===

   Number of wires:                325
   Number of wire bits:           1537
   Number of public wires:          13
   Number of public wire bits:     380
   Number of memories:               0
   Number of memory bits:            0
   Number of processes:              0
   Number of cells:                990
     $_DFFE_PP0N_                   46
     $_DFFE_PP0P_                  128
     $_DFF_PP0_                      5
     $lut                          555
     adder_carry                   256


yosys> shregmap -minlen 8 -maxlen 20

3.170. Executing SHREGMAP pass (map shift registers).
Converted 0 dff cells into 0 shift registers.

yosys> dfflegalize -cell $_DFF_?_ 0 -cell $_DFF_???_ 0 -cell $_DFFE_????_ 0 -cell $_DFFSR_???_ 0 -cell $_DFFSRE_????_ 0 -cell $_DLATCHSR_PPP_ 0

3.171. Executing DFFLEGALIZE pass (convert FFs to types supported by the target).

yosys> stat

3.172. Printing statistics.

=== xtea ===

   Number of wires:                325
   Number of wire bits:           1537
   Number of public wires:          13
   Number of public wire bits:     380
   Number of memories:               0
   Number of memory bits:            0
   Number of processes:              0
   Number of cells:                990
     $_DFFE_PP0N_                   46
     $_DFFE_PP0P_                  128
     $_DFF_PP0_                      5
     $lut                          555
     adder_carry                   256


yosys> techmap -map +/techmap.v -map +/rapidsilicon/genesis/ffs_map.v

3.173. Executing TECHMAP pass (map to technology primitives).

3.173.1. Executing Verilog-2005 frontend: /nfs_scratch/scratch/Vorak/aram/Workspace/Raptor/yosys_verific_rs/yosys/install/bin/../share/yosys/techmap.v
Parsing Verilog input from `/nfs_scratch/scratch/Vorak/aram/Workspace/Raptor/yosys_verific_rs/yosys/install/bin/../share/yosys/techmap.v' to AST representation.
Generating RTLIL representation for module `\_90_simplemap_bool_ops'.
Generating RTLIL representation for module `\_90_simplemap_reduce_ops'.
Generating RTLIL representation for module `\_90_simplemap_logic_ops'.
Generating RTLIL representation for module `\_90_simplemap_compare_ops'.
Generating RTLIL representation for module `\_90_simplemap_various'.
Generating RTLIL representation for module `\_90_simplemap_registers'.
Generating RTLIL representation for module `\_90_shift_ops_shr_shl_sshl_sshr'.
Generating RTLIL representation for module `\_90_shift_shiftx'.
Generating RTLIL representation for module `\_90_fa'.
Generating RTLIL representation for module `\_90_lcu'.
Generating RTLIL representation for module `\_90_alu'.
Generating RTLIL representation for module `\_90_macc'.
Generating RTLIL representation for module `\_90_alumacc'.
Generating RTLIL representation for module `\$__div_mod_u'.
Generating RTLIL representation for module `\$__div_mod_trunc'.
Generating RTLIL representation for module `\_90_div'.
Generating RTLIL representation for module `\_90_mod'.
Generating RTLIL representation for module `\$__div_mod_floor'.
Generating RTLIL representation for module `\_90_divfloor'.
Generating RTLIL representation for module `\_90_modfloor'.
Generating RTLIL representation for module `\_90_pow'.
Generating RTLIL representation for module `\_90_pmux'.
Generating RTLIL representation for module `\_90_demux'.
Generating RTLIL representation for module `\_90_lut'.
Successfully finished Verilog frontend.

3.173.2. Executing Verilog-2005 frontend: /nfs_scratch/scratch/Vorak/aram/Workspace/Raptor/yosys_verific_rs/yosys/install/bin/../share/yosys/rapidsilicon/genesis/ffs_map.v
Parsing Verilog input from `/nfs_scratch/scratch/Vorak/aram/Workspace/Raptor/yosys_verific_rs/yosys/install/bin/../share/yosys/rapidsilicon/genesis/ffs_map.v' to AST representation.
Generating RTLIL representation for module `\$_DFF_P_'.
Generating RTLIL representation for module `\$_DFF_PP0_'.
Generating RTLIL representation for module `\$_DFF_PN0_'.
Generating RTLIL representation for module `\$_DFF_PP1_'.
Generating RTLIL representation for module `\$_DFF_PN1_'.
Generating RTLIL representation for module `\$_DFFE_PP_'.
Generating RTLIL representation for module `\$_DFFE_PN_'.
Generating RTLIL representation for module `\$_DFFE_PP0P_'.
Generating RTLIL representation for module `\$_DFFE_PP0N_'.
Generating RTLIL representation for module `\$_DFFE_PN0P_'.
Generating RTLIL representation for module `\$_DFFE_PN0N_'.
Generating RTLIL representation for module `\$_DFFE_PP1P_'.
Generating RTLIL representation for module `\$_DFFE_PP1N_'.
Generating RTLIL representation for module `\$_DFFE_PN1P_'.
Generating RTLIL representation for module `\$_DFFE_PN1N_'.
Generating RTLIL representation for module `\$_DFFSR_PPP_'.
Generating RTLIL representation for module `\$_DFFSR_PNP_'.
Generating RTLIL representation for module `\$_DFFSR_PNN_'.
Generating RTLIL representation for module `\$_DFFSR_PPN_'.
Generating RTLIL representation for module `\$_DFFSR_NPP_'.
Generating RTLIL representation for module `\$_DFFSR_NNP_'.
Generating RTLIL representation for module `\$_DFFSR_NNN_'.
Generating RTLIL representation for module `\$_DFFSR_NPN_'.
Generating RTLIL representation for module `\$_DFFSRE_PPPP_'.
Generating RTLIL representation for module `\$_DFFSRE_PNPP_'.
Generating RTLIL representation for module `\$_DFFSRE_PPNP_'.
Generating RTLIL representation for module `\$_DFFSRE_PNNP_'.
Generating RTLIL representation for module `\$_DFFSRE_PPPN_'.
Generating RTLIL representation for module `\$_DFFSRE_PNPN_'.
Generating RTLIL representation for module `\$_DFFSRE_PPNN_'.
Generating RTLIL representation for module `\$_DFFSRE_PNNN_'.
Generating RTLIL representation for module `\$_DLATCHSR_PPP_'.
Generating RTLIL representation for module `\$_DLATCHSR_NPP_'.
Generating RTLIL representation for module `\$_DFF_N_'.
Generating RTLIL representation for module `\$_DFF_NP0_'.
Generating RTLIL representation for module `\$_DFF_NN0_'.
Generating RTLIL representation for module `\$_DFF_NP1_'.
Generating RTLIL representation for module `\$_DFF_NN1_'.
Generating RTLIL representation for module `\$_DFFE_NP_'.
Generating RTLIL representation for module `\$_DFFE_NN_'.
Generating RTLIL representation for module `\$_DFFE_NP0P_'.
Generating RTLIL representation for module `\$_DFFE_NP0N_'.
Generating RTLIL representation for module `\$_DFFE_NN0P_'.
Generating RTLIL representation for module `\$_DFFE_NN0N_'.
Generating RTLIL representation for module `\$_DFFE_NP1P_'.
Generating RTLIL representation for module `\$_DFFE_NP1N_'.
Generating RTLIL representation for module `\$_DFFE_NN1P_'.
Generating RTLIL representation for module `\$_DFFE_NN1N_'.
Generating RTLIL representation for module `\$_DFFSRE_NPPP_'.
Generating RTLIL representation for module `\$_DFFSRE_NNPP_'.
Generating RTLIL representation for module `\$_DFFSRE_NPNP_'.
Generating RTLIL representation for module `\$_DFFSRE_NNNP_'.
Generating RTLIL representation for module `\$_DFFSRE_NPPN_'.
Generating RTLIL representation for module `\$_DFFSRE_NNPN_'.
Generating RTLIL representation for module `\$_DFFSRE_NPNN_'.
Generating RTLIL representation for module `\$_DFFSRE_NNNN_'.
Generating RTLIL representation for module `\$__SHREG_DFF_P_'.
Generating RTLIL representation for module `\$_SDFF_PP0_'.
Generating RTLIL representation for module `\$_SDFF_PN0_'.
Generating RTLIL representation for module `\$_SDFF_NP0_'.
Generating RTLIL representation for module `\$_SDFF_NN0_'.
Generating RTLIL representation for module `\$_SDFF_PP1_'.
Generating RTLIL representation for module `\$_SDFF_PN1_'.
Generating RTLIL representation for module `\$_SDFF_NP1_'.
Generating RTLIL representation for module `\$_SDFF_NN1_'.
Successfully finished Verilog frontend.

3.173.3. Continuing TECHMAP pass.
Using extmapper simplemap for cells of type $lut.
Using template \$_DFFE_PP0N_ for cells of type $_DFFE_PP0N_.
Using template \$_DFF_PP0_ for cells of type $_DFF_PP0_.
Using template \$_DFFE_PP0P_ for cells of type $_DFFE_PP0P_.
Using extmapper simplemap for cells of type $logic_not.
No more expansions possible.
<suppressed ~1095 debug messages>

yosys> opt_expr -mux_undef

3.174. Executing OPT_EXPR pass (perform const folding).
Optimizing module xtea.
<suppressed ~4091 debug messages>

yosys> simplemap

3.175. Executing SIMPLEMAP pass (map simple cells to gate primitives).

yosys> opt_expr

3.176. Executing OPT_EXPR pass (perform const folding).
Optimizing module xtea.

yosys> opt_merge

3.177. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\xtea'.
<suppressed ~1995 debug messages>
Removed a total of 665 cells.

yosys> opt_dff -nodffe -nosdff

3.178. Executing OPT_DFF pass (perform DFF optimizations).

yosys> opt_clean

3.179. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \xtea..
Removed 0 unused cells and 2205 unused wires.
<suppressed ~1 debug messages>

yosys> opt_expr

3.180. Executing OPT_EXPR pass (perform const folding).
Optimizing module xtea.
<suppressed ~68 debug messages>

yosys> opt_merge -nomux

3.181. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\xtea'.
Removed a total of 0 cells.

yosys> opt_muxtree

3.182. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \xtea..
  Creating internal representation of mux trees.
  No muxes found in this module.
Removed 0 multiplexer ports.

yosys> opt_reduce

3.183. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \xtea.
Performed a total of 0 changes.

yosys> opt_merge

3.184. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\xtea'.
Removed a total of 0 cells.

yosys> opt_share

3.185. Executing OPT_SHARE pass.

yosys> opt_dff -nosdff -nodffe

3.186. Executing OPT_DFF pass (perform DFF optimizations).

yosys> opt_clean

3.187. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \xtea..
Removed 0 unused cells and 60 unused wires.
<suppressed ~1 debug messages>

yosys> opt_expr

3.188. Executing OPT_EXPR pass (perform const folding).
Optimizing module xtea.
MAX OPT ITERATION = 1

yosys> abc -script /tmp/yosys_w1eHR0/abc_tmp_2.scr

3.189. Executing ABC pass (technology mapping using ABC).

3.189.1. Extracting gate netlist of module `\xtea' to `<abc-temp-dir>/input.blif'..
Extracted 1140 gates and 1697 wires to a netlist network with 555 inputs and 509 outputs.

3.189.1.1. Executing ABC.
DE:   #PIs = 555  #Luts =   558  Max Lvl =   4  Avg Lvl =   1.45  [   0.14 sec. at Pass 0]{firstMap}
DE:   #PIs = 555  #Luts =   556  Max Lvl =   5  Avg Lvl =   1.87  [   2.31 sec. at Pass 1]{initMapFlow}
DE:   #PIs = 555  #Luts =   555  Max Lvl =   6  Avg Lvl =   1.87  [   1.11 sec. at Pass 2]{map}
DE:   #PIs = 555  #Luts =   555  Max Lvl =   5  Avg Lvl =   1.87  [   0.92 sec. at Pass 3]{postMap}
DE:   #PIs = 555  #Luts =   555  Max Lvl =   5  Avg Lvl =   1.87  [   0.89 sec. at Pass 4]{map}
DE:   #PIs = 555  #Luts =   555  Max Lvl =   5  Avg Lvl =   1.87  [   1.38 sec. at Pass 5]{postMap}
DE:   #PIs = 555  #Luts =   555  Max Lvl =   5  Avg Lvl =   1.87  [   1.18 sec. at Pass 6]{map}
DE:   #PIs = 555  #Luts =   555  Max Lvl =   5  Avg Lvl =   1.87  [   1.25 sec. at Pass 7]{pushMap}
DE:   #PIs = 555  #Luts =   555  Max Lvl =   5  Avg Lvl =   1.87  [   0.55 sec. at Pass 8]{finalMap}

yosys> opt_expr

3.190. Executing OPT_EXPR pass (perform const folding).
Optimizing module xtea.

yosys> opt_merge -nomux

3.191. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\xtea'.
Removed a total of 0 cells.

yosys> opt_muxtree

3.192. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \xtea..
  Creating internal representation of mux trees.
  No muxes found in this module.
Removed 0 multiplexer ports.

yosys> opt_reduce

3.193. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \xtea.
Performed a total of 0 changes.

yosys> opt_merge

3.194. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\xtea'.
Removed a total of 0 cells.

yosys> opt_share

3.195. Executing OPT_SHARE pass.

yosys> opt_dff -nosdff -nodffe

3.196. Executing OPT_DFF pass (perform DFF optimizations).

yosys> opt_clean

3.197. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \xtea..
Removed 0 unused cells and 1549 unused wires.
<suppressed ~1 debug messages>

yosys> opt_expr

3.198. Executing OPT_EXPR pass (perform const folding).
Optimizing module xtea.
MAX OPT ITERATION = 1

yosys> hierarchy -check

3.199. Executing HIERARCHY pass (managing design hierarchy).

3.199.1. Analyzing design hierarchy..
Top module:  \xtea

3.199.2. Analyzing design hierarchy..
Top module:  \xtea
Removed 0 unused modules.

yosys> stat

3.200. Printing statistics.

=== xtea ===

   Number of wires:                325
   Number of wire bits:           1537
   Number of public wires:          13
   Number of public wire bits:     380
   Number of memories:               0
   Number of memory bits:            0
   Number of processes:              0
   Number of cells:                990
     $lut                          555
     adder_carry                   256
     dffsre                        179


yosys> opt_clean -purge

3.201. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \xtea..
Removed 0 unused cells and 1 unused wires.
<suppressed ~1 debug messages>

yosys> write_verilog -noattr -nohex synthesized.v

3.202. Executing Verilog backend.
Dumping module `\xtea'.

End of script. Logfile hash: 8c0c7904fd, CPU: user 5.24s system 0.07s, MEM: 52.06 MB peak
Yosys 0.18+10 (git sha1 7361c89db, gcc 9.4.0-1ubuntu1~20.04.1 -fPIC -Os)
Time spent: 90% 6x abc (43 sec), 2% 36x opt_expr (1 sec), ...
real 42.55
user 41.20
sys 6.88
