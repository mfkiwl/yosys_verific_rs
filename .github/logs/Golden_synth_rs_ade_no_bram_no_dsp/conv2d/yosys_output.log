
 /----------------------------------------------------------------------------\
 |                                                                            |
 |  yosys -- Yosys Open SYnthesis Suite                                       |
 |                                                                            |
 |  Copyright (C) 2012 - 2020  Claire Xenia Wolf <claire@yosyshq.com>         |
 |                                                                            |
 |  Permission to use, copy, modify, and/or distribute this software for any  |
 |  purpose with or without fee is hereby granted, provided that the above    |
 |  copyright notice and this permission notice appear in all copies.         |
 |                                                                            |
 |  THE SOFTWARE IS PROVIDED "AS IS" AND THE AUTHOR DISCLAIMS ALL WARRANTIES  |
 |  WITH REGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF          |
 |  MERCHANTABILITY AND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR   |
 |  ANY SPECIAL, DIRECT, INDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES    |
 |  WHATSOEVER RESULTING FROM LOSS OF USE, DATA OR PROFITS, WHETHER IN AN     |
 |  ACTION OF CONTRACT, NEGLIGENCE OR OTHER TORTIOUS ACTION, ARISING OUT OF   |
 |  OR IN CONNECTION WITH THE USE OR PERFORMANCE OF THIS SOFTWARE.            |
 |                                                                            |
 \----------------------------------------------------------------------------/

 Yosys-Verific 0.0.92
 Yosys 0.18+10 (git sha1 7361c89db, gcc 9.4.0-1ubuntu1~20.04.1 -fPIC -Os)


-- Executing script file `yosys.ys' --
echo on

yosys> plugin -i synth-rs

yosys> read -verific

yosys> read -incdir .

yosys> verific -vlog-incdir .

1. Executing VERIFIC (loading SystemVerilog and VHDL designs using Verific).
Built with Verific May22_SW_Release, released at Wed Jun  1 05:39:28 2022.

yosys> verilog_defaults -add -I.

yosys> read -vlog2k ksa1.v tfl.v control.v ksa.v conv2d.v mux.v

yosys> verific -vlog2k ksa1.v tfl.v control.v ksa.v conv2d.v mux.v

2. Executing VERIFIC (loading SystemVerilog and VHDL designs using Verific).
Built with Verific May22_SW_Release, released at Wed Jun  1 05:39:28 2022.
VERIFIC-COMMENT [VERI-1482] Analyzing Verilog file 'ksa1.v'
VERIFIC-COMMENT [VERI-1482] Analyzing Verilog file 'tfl.v'
VERIFIC-WARNING [VERI-1407] tfl.v:385: attribute target identifier 'pad' not found in this scope
VERIFIC-WARNING [VERI-1407] tfl.v:260: attribute target identifier 'pad' not found in this scope
VERIFIC-WARNING [VERI-1407] tfl.v:254: attribute target identifier 'pad' not found in this scope
VERIFIC-WARNING [VERI-1407] tfl.v:248: attribute target identifier 'pad' not found in this scope
VERIFIC-WARNING [VERI-1407] tfl.v:241: attribute target identifier 'pad' not found in this scope
VERIFIC-WARNING [VERI-1407] tfl.v:237: attribute target identifier 'pad' not found in this scope
VERIFIC-WARNING [VERI-1407] tfl.v:236: attribute target identifier 'pad' not found in this scope
VERIFIC-WARNING [VERI-1407] tfl.v:225: attribute target identifier 'pad' not found in this scope
VERIFIC-WARNING [VERI-1407] tfl.v:221: attribute target identifier 'pad' not found in this scope
VERIFIC-WARNING [VERI-1407] tfl.v:219: attribute target identifier 'pad' not found in this scope
VERIFIC-WARNING [VERI-1407] tfl.v:218: attribute target identifier 'pad' not found in this scope
VERIFIC-WARNING [VERI-1407] tfl.v:217: attribute target identifier 'pad' not found in this scope
VERIFIC-WARNING [VERI-1407] tfl.v:216: attribute target identifier 'pad' not found in this scope
VERIFIC-WARNING [VERI-1407] tfl.v:215: attribute target identifier 'pad' not found in this scope
VERIFIC-WARNING [VERI-1407] tfl.v:214: attribute target identifier 'pad' not found in this scope
VERIFIC-WARNING [VERI-1407] tfl.v:213: attribute target identifier 'pad' not found in this scope
VERIFIC-WARNING [VERI-1407] tfl.v:212: attribute target identifier 'pad' not found in this scope
VERIFIC-WARNING [VERI-1407] tfl.v:211: attribute target identifier 'pad' not found in this scope
VERIFIC-WARNING [VERI-1407] tfl.v:210: attribute target identifier 'pad' not found in this scope
VERIFIC-WARNING [VERI-1407] tfl.v:209: attribute target identifier 'pad' not found in this scope
VERIFIC-WARNING [VERI-1407] tfl.v:206: attribute target identifier 'pad' not found in this scope
VERIFIC-WARNING [VERI-1407] tfl.v:160: attribute target identifier 'pad' not found in this scope
VERIFIC-WARNING [VERI-1407] tfl.v:158: attribute target identifier 'pad' not found in this scope
VERIFIC-WARNING [VERI-1407] tfl.v:156: attribute target identifier 'pad' not found in this scope
VERIFIC-WARNING [VERI-1407] tfl.v:149: attribute target identifier 'pad' not found in this scope
VERIFIC-WARNING [VERI-1407] tfl.v:144: attribute target identifier 'pad' not found in this scope
VERIFIC-WARNING [VERI-1407] tfl.v:129: attribute target identifier 'pad' not found in this scope
VERIFIC-WARNING [VERI-1407] tfl.v:128: attribute target identifier 'pad' not found in this scope
VERIFIC-WARNING [VERI-1407] tfl.v:5: attribute target identifier 'pad' not found in this scope
VERIFIC-COMMENT [VERI-1482] Analyzing Verilog file 'control.v'
VERIFIC-COMMENT [VERI-1482] Analyzing Verilog file 'ksa.v'
VERIFIC-COMMENT [VERI-1482] Analyzing Verilog file 'conv2d.v'
VERIFIC-COMMENT [VERI-1482] Analyzing Verilog file 'mux.v'

yosys> synth_rs -top conv2d -tech genesis -goal area -de -no_dsp -no_bram -verilog synthesized.v

3. Executing synth_rs pass: v0.4.79

yosys> read_verilog -lib -specify -nomem2reg +/rapidsilicon/common/cells_sim.v +/rapidsilicon/genesis/cells_sim.v +/rapidsilicon/genesis/dsp_sim.v

3.1. Executing Verilog-2005 frontend: /nfs_scratch/scratch/Vorak/aram/Workspace/Raptor/yosys_verific_rs/yosys/install/bin/../share/yosys/rapidsilicon/common/cells_sim.v
Parsing Verilog input from `/nfs_scratch/scratch/Vorak/aram/Workspace/Raptor/yosys_verific_rs/yosys/install/bin/../share/yosys/rapidsilicon/common/cells_sim.v' to AST representation.
Generating RTLIL representation for module `\inv'.
Generating RTLIL representation for module `\buff'.
Generating RTLIL representation for module `\logic_0'.
Generating RTLIL representation for module `\logic_1'.
Generating RTLIL representation for module `\gclkbuff'.
Successfully finished Verilog frontend.

3.2. Executing Verilog-2005 frontend: /nfs_scratch/scratch/Vorak/aram/Workspace/Raptor/yosys_verific_rs/yosys/install/bin/../share/yosys/rapidsilicon/genesis/cells_sim.v
Parsing Verilog input from `/nfs_scratch/scratch/Vorak/aram/Workspace/Raptor/yosys_verific_rs/yosys/install/bin/../share/yosys/rapidsilicon/genesis/cells_sim.v' to AST representation.
Generating RTLIL representation for module `\dffsre'.
Generating RTLIL representation for module `\dffnsre'.
Generating RTLIL representation for module `\latchsre'.
Generating RTLIL representation for module `\latchnsre'.
Generating RTLIL representation for module `\io_scff'.
Generating RTLIL representation for module `\scff'.
Generating RTLIL representation for module `\sh_dff'.
Generating RTLIL representation for module `\adder_carry'.
Generating RTLIL representation for module `\sdffr'.
Generating RTLIL representation for module `\sdffs'.
Generating RTLIL representation for module `\TDP_BRAM18'.
Generating RTLIL representation for module `\TDP36K'.
Generating RTLIL representation for module `\BRAM2x18_TDP'.
Generating RTLIL representation for module `\BRAM2x18_SDP'.
Generating RTLIL representation for module `\_$_mem_v2_asymmetric'.
Successfully finished Verilog frontend.

3.3. Executing Verilog-2005 frontend: /nfs_scratch/scratch/Vorak/aram/Workspace/Raptor/yosys_verific_rs/yosys/install/bin/../share/yosys/rapidsilicon/genesis/dsp_sim.v
Parsing Verilog input from `/nfs_scratch/scratch/Vorak/aram/Workspace/Raptor/yosys_verific_rs/yosys/install/bin/../share/yosys/rapidsilicon/genesis/dsp_sim.v' to AST representation.
Generating RTLIL representation for module `\RS_DSP1'.
Generating RTLIL representation for module `\RS_DSP2'.
Generating RTLIL representation for module `\RS_DSP2_MULT'.
Generating RTLIL representation for module `\RS_DSP2_MULT_REGIN'.
Generating RTLIL representation for module `\RS_DSP2_MULT_REGOUT'.
Generating RTLIL representation for module `\RS_DSP2_MULT_REGIN_REGOUT'.
Generating RTLIL representation for module `\RS_DSP2_MULTADD'.
Generating RTLIL representation for module `\RS_DSP2_MULTADD_REGIN'.
Generating RTLIL representation for module `\RS_DSP2_MULTADD_REGOUT'.
Generating RTLIL representation for module `\RS_DSP2_MULTADD_REGIN_REGOUT'.
Generating RTLIL representation for module `\RS_DSP2_MULTACC'.
Generating RTLIL representation for module `\RS_DSP2_MULTACC_REGIN'.
Generating RTLIL representation for module `\RS_DSP2_MULTACC_REGOUT'.
Generating RTLIL representation for module `\RS_DSP2_MULTACC_REGIN_REGOUT'.
Generating RTLIL representation for module `\dsp_t1_20x18x64_cfg_ports'.
Generating RTLIL representation for module `\dsp_t1_10x9x32_cfg_ports'.
Generating RTLIL representation for module `\dsp_t1_sim_cfg_ports'.
Generating RTLIL representation for module `\RS_DSP3'.
Generating RTLIL representation for module `\RS_DSP3_MULT'.
Generating RTLIL representation for module `\RS_DSP3_MULT_REGIN'.
Generating RTLIL representation for module `\RS_DSP3_MULT_REGOUT'.
Generating RTLIL representation for module `\RS_DSP3_MULT_REGIN_REGOUT'.
Generating RTLIL representation for module `\RS_DSP3_MULTADD'.
Generating RTLIL representation for module `\RS_DSP3_MULTADD_REGIN'.
Generating RTLIL representation for module `\RS_DSP3_MULTADD_REGOUT'.
Generating RTLIL representation for module `\RS_DSP3_MULTADD_REGIN_REGOUT'.
Generating RTLIL representation for module `\RS_DSP3_MULTACC'.
Generating RTLIL representation for module `\RS_DSP3_MULTACC_REGIN'.
Generating RTLIL representation for module `\RS_DSP3_MULTACC_REGOUT'.
Generating RTLIL representation for module `\RS_DSP3_MULTACC_REGIN_REGOUT'.
Generating RTLIL representation for module `\dsp_t1_20x18x64_cfg_params'.
Generating RTLIL representation for module `\dsp_t1_10x9x32_cfg_params'.
Generating RTLIL representation for module `\dsp_t1_sim_cfg_params'.
Successfully finished Verilog frontend.

yosys> hierarchy -check -top conv2d

3.4. Executing HIERARCHY pass (managing design hierarchy).
VERIFIC-INFO [VERI-1018] conv2d.v:2: compiling module 'conv2d'
VERIFIC-INFO [VERI-1018] ksa.v:1: compiling module 'ksa(WIDTH=20)'
VERIFIC-WARNING [VERI-1209] conv2d.v:418: expression size 13 truncated to fit in target size 12
VERIFIC-WARNING [VERI-1209] conv2d.v:435: expression size 13 truncated to fit in target size 12
VERIFIC-WARNING [VERI-1209] conv2d.v:442: expression size 13 truncated to fit in target size 12
VERIFIC-WARNING [VERI-1209] conv2d.v:449: expression size 13 truncated to fit in target size 12
VERIFIC-WARNING [VERI-1209] conv2d.v:456: expression size 13 truncated to fit in target size 12
VERIFIC-WARNING [VERI-1209] conv2d.v:463: expression size 13 truncated to fit in target size 12
VERIFIC-WARNING [VERI-1209] conv2d.v:470: expression size 13 truncated to fit in target size 12
VERIFIC-WARNING [VERI-1209] conv2d.v:477: expression size 13 truncated to fit in target size 12
VERIFIC-WARNING [VERI-1173] conv2d.v:398: synthesis - simulation differences may occur when using full_case directive
VERIFIC-WARNING [VERI-1209] conv2d.v:540: expression size 14 truncated to fit in target size 13
VERIFIC-WARNING [VERI-1173] conv2d.v:527: synthesis - simulation differences may occur when using full_case directive
VERIFIC-WARNING [VERI-1209] conv2d.v:604: expression size 13 truncated to fit in target size 12
VERIFIC-WARNING [VERI-1209] conv2d.v:628: expression size 21 truncated to fit in target size 20
VERIFIC-WARNING [VERI-1209] conv2d.v:636: expression size 10 truncated to fit in target size 9
VERIFIC-WARNING [VERI-1173] conv2d.v:608: synthesis - simulation differences may occur when using full_case directive
VERIFIC-WARNING [VERI-1209] conv2d.v:667: expression size 13 truncated to fit in target size 12
VERIFIC-WARNING [VERI-1209] conv2d.v:670: expression size 32 truncated to fit in target size 14
VERIFIC-WARNING [VERI-1209] conv2d.v:671: expression size 13 truncated to fit in target size 12
VERIFIC-WARNING [VERI-1209] conv2d.v:679: expression size 21 truncated to fit in target size 20
VERIFIC-WARNING [VERI-1209] conv2d.v:683: expression size 10 truncated to fit in target size 9
VERIFIC-WARNING [VERI-1209] conv2d.v:685: expression size 32 truncated to fit in target size 13
VERIFIC-WARNING [VERI-1209] conv2d.v:686: expression size 10 truncated to fit in target size 9
VERIFIC-WARNING [VERI-1209] conv2d.v:687: expression size 10 truncated to fit in target size 9
VERIFIC-WARNING [VERI-1209] conv2d.v:715: expression size 13 truncated to fit in target size 12
VERIFIC-WARNING [VERI-1209] conv2d.v:718: expression size 32 truncated to fit in target size 14
VERIFIC-WARNING [VERI-1209] conv2d.v:719: expression size 13 truncated to fit in target size 12
VERIFIC-WARNING [VERI-1209] conv2d.v:727: expression size 21 truncated to fit in target size 20
VERIFIC-WARNING [VERI-1209] conv2d.v:731: expression size 10 truncated to fit in target size 9
VERIFIC-WARNING [VERI-1209] conv2d.v:733: expression size 10 truncated to fit in target size 9
VERIFIC-WARNING [VERI-1209] conv2d.v:734: expression size 10 truncated to fit in target size 9
VERIFIC-WARNING [VERI-1173] conv2d.v:651: synthesis - simulation differences may occur when using full_case directive
VERIFIC-WARNING [VERI-1209] conv2d.v:839: expression size 13 truncated to fit in target size 12
VERIFIC-WARNING [VERI-1209] conv2d.v:864: expression size 21 truncated to fit in target size 20
VERIFIC-WARNING [VERI-1209] conv2d.v:866: expression size 10 truncated to fit in target size 9
VERIFIC-WARNING [VERI-1209] conv2d.v:871: expression size 17 truncated to fit in target size 16
VERIFIC-WARNING [VERI-1173] conv2d.v:842: synthesis - simulation differences may occur when using full_case directive
VERIFIC-INFO [VERI-1018] ksa.v:1: compiling module 'ksa(WIDTH=24)'
VERIFIC-INFO [VERI-1018] ksa.v:1: compiling module 'ksa(WIDTH=16)'
VERIFIC-INFO [VERI-1018] ksa.v:1: compiling module 'ksa(WIDTH=12)'
VERIFIC-INFO [VERI-1018] ksa1.v:1: compiling module 'ksa1(WIDTH=12)'
VERIFIC-WARNING [VERI-1209] conv2d.v:1114: expression size 13 truncated to fit in target size 12
VERIFIC-WARNING [VERI-1209] conv2d.v:1131: expression size 13 truncated to fit in target size 12
VERIFIC-WARNING [VERI-1209] conv2d.v:1146: expression size 3 truncated to fit in target size 2
VERIFIC-WARNING [VERI-1209] conv2d.v:1149: expression size 10 truncated to fit in target size 9
VERIFIC-WARNING [VERI-1209] conv2d.v:1162: expression size 13 truncated to fit in target size 12
VERIFIC-WARNING [VERI-1209] conv2d.v:1166: expression size 13 truncated to fit in target size 12
VERIFIC-WARNING [VERI-1209] conv2d.v:1174: expression size 10 truncated to fit in target size 9
VERIFIC-WARNING [VERI-1209] conv2d.v:1192: expression size 17 truncated to fit in target size 16
VERIFIC-WARNING [VERI-1173] conv2d.v:1012: synthesis - simulation differences may occur when using full_case directive
Importing module conv2d.
Importing module ksa(WIDTH=12).
Importing module ksa(WIDTH=16).
Importing module ksa(WIDTH=20).
Importing module ksa(WIDTH=24).
Importing module ksa1(WIDTH=12).

3.4.1. Analyzing design hierarchy..
Top module:  \conv2d
Used module:     \ksa1(WIDTH=12)
Used module:     \ksa(WIDTH=12)
Used module:     \ksa(WIDTH=16)
Used module:     \ksa(WIDTH=24)
Used module:     \ksa(WIDTH=20)

3.4.2. Analyzing design hierarchy..
Top module:  \conv2d
Used module:     \ksa1(WIDTH=12)
Used module:     \ksa(WIDTH=12)
Used module:     \ksa(WIDTH=16)
Used module:     \ksa(WIDTH=24)
Used module:     \ksa(WIDTH=20)
Removed 0 unused modules.

yosys> proc

3.5. Executing PROC pass (convert processes to netlists).

yosys> proc_clean

3.5.1. Executing PROC_CLEAN pass (remove empty switches from decision trees).
Cleaned up 0 empty switches.

yosys> proc_rmdead

3.5.2. Executing PROC_RMDEAD pass (remove dead branches from decision trees).
Removed a total of 0 dead cases.

yosys> proc_prune

3.5.3. Executing PROC_PRUNE pass (remove redundant assignments in processes).
Removed 0 redundant assignments.
Promoted 0 assignments to connections.

yosys> proc_init

3.5.4. Executing PROC_INIT pass (extract init attributes).

yosys> proc_arst

3.5.5. Executing PROC_ARST pass (detect async resets in processes).

yosys> proc_rom

3.5.6. Executing PROC_ROM pass (convert switches to ROMs).
Converted 0 switches.

yosys> proc_mux

3.5.7. Executing PROC_MUX pass (convert decision trees to multiplexers).

yosys> proc_dlatch

3.5.8. Executing PROC_DLATCH pass (convert process syncs to latches).

yosys> proc_dff

3.5.9. Executing PROC_DFF pass (convert process syncs to FFs).

yosys> proc_memwr

3.5.10. Executing PROC_MEMWR pass (convert process memory writes to cells).

yosys> proc_clean

3.5.11. Executing PROC_CLEAN pass (remove empty switches from decision trees).
Cleaned up 0 empty switches.

yosys> opt_expr -keepdc

3.5.12. Executing OPT_EXPR pass (perform const folding).
Optimizing module ksa1(WIDTH=12).
Optimizing module ksa(WIDTH=24).
Optimizing module ksa(WIDTH=20).
Optimizing module ksa(WIDTH=16).
Optimizing module ksa(WIDTH=12).
Optimizing module conv2d.
<suppressed ~168 debug messages>

yosys> bmuxmap

3.6. Executing BMUXMAP pass.

yosys> demuxmap

3.7. Executing DEMUXMAP pass.

yosys> clean_zerowidth

yosys> flatten

3.8. Executing FLATTEN pass (flatten design).
Deleting now unused module ksa(WIDTH=12).
Deleting now unused module ksa(WIDTH=16).
Deleting now unused module ksa(WIDTH=20).
Deleting now unused module ksa(WIDTH=24).
Deleting now unused module ksa1(WIDTH=12).
<suppressed ~21 debug messages>

yosys> bmuxmap

3.9. Executing BMUXMAP pass.

yosys> demuxmap

3.10. Executing DEMUXMAP pass.

yosys> clean_zerowidth

yosys> tribuf -logic -formal

3.11. Executing TRIBUF pass.

yosys> deminout

3.12. Executing DEMINOUT pass (demote inout ports to input or output).

yosys> opt_expr

3.13. Executing OPT_EXPR pass (perform const folding).
Optimizing module conv2d.
<suppressed ~104 debug messages>

yosys> opt_clean

3.14. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \conv2d..
Removed 104 unused cells and 3077 unused wires.
<suppressed ~409 debug messages>

yosys> check

3.15. Executing CHECK pass (checking for obvious problems).
Checking module conv2d...
Warning: found logic loop in module conv2d:
    cell $flatten\pk2.$verific$and_133$ksa1.v:31$3566 ($and)
    cell $flatten\pk2.$verific$or_132$ksa1.v:31$3567 ($or)
    wire $flatten\pk2.$verific$n206$3542 [0]
    wire \pk2.c_gen [10]
Warning: found logic loop in module conv2d:
    cell $flatten\pk2.$verific$and_133$ksa1.v:31$3566 ($and)
    cell $flatten\pk2.$verific$or_132$ksa1.v:31$3567 ($or)
    wire $flatten\pk2.$verific$n206$3542 [10]
    wire \pk2.c_gen [10]
Warning: found logic loop in module conv2d:
    cell $flatten\pk2.$verific$and_133$ksa1.v:31$3566 ($and)
    cell $flatten\pk2.$verific$or_132$ksa1.v:31$3567 ($or)
    wire $flatten\pk2.$verific$n206$3542 [1]
    wire \pk2.c_gen [10]
Warning: found logic loop in module conv2d:
    cell $flatten\pk2.$verific$and_133$ksa1.v:31$3566 ($and)
    cell $flatten\pk2.$verific$or_132$ksa1.v:31$3567 ($or)
    wire $flatten\pk2.$verific$n206$3542 [2]
    wire \pk2.c_gen [10]
Warning: found logic loop in module conv2d:
    cell $flatten\pk2.$verific$and_133$ksa1.v:31$3566 ($and)
    cell $flatten\pk2.$verific$or_132$ksa1.v:31$3567 ($or)
    wire $flatten\pk2.$verific$n206$3542 [3]
    wire \pk2.c_gen [10]
Warning: found logic loop in module conv2d:
    cell $flatten\pk2.$verific$and_133$ksa1.v:31$3566 ($and)
    cell $flatten\pk2.$verific$or_132$ksa1.v:31$3567 ($or)
    wire $flatten\pk2.$verific$n206$3542 [4]
    wire \pk2.c_gen [10]
Warning: found logic loop in module conv2d:
    cell $flatten\pk2.$verific$and_133$ksa1.v:31$3566 ($and)
    cell $flatten\pk2.$verific$or_132$ksa1.v:31$3567 ($or)
    wire $flatten\pk2.$verific$n206$3542 [5]
    wire \pk2.c_gen [10]
Warning: found logic loop in module conv2d:
    cell $flatten\pk2.$verific$and_133$ksa1.v:31$3566 ($and)
    cell $flatten\pk2.$verific$or_132$ksa1.v:31$3567 ($or)
    wire $flatten\pk2.$verific$n206$3542 [6]
    wire \pk2.c_gen [10]
Warning: found logic loop in module conv2d:
    cell $flatten\pk2.$verific$and_133$ksa1.v:31$3566 ($and)
    cell $flatten\pk2.$verific$or_132$ksa1.v:31$3567 ($or)
    wire $flatten\pk2.$verific$n206$3542 [7]
    wire \pk2.c_gen [10]
Warning: found logic loop in module conv2d:
    cell $flatten\pk2.$verific$and_133$ksa1.v:31$3566 ($and)
    cell $flatten\pk2.$verific$or_132$ksa1.v:31$3567 ($or)
    wire $flatten\pk2.$verific$n206$3542 [8]
    wire \pk2.c_gen [10]
Warning: found logic loop in module conv2d:
    cell $flatten\pk2.$verific$and_133$ksa1.v:31$3566 ($and)
    cell $flatten\pk2.$verific$or_132$ksa1.v:31$3567 ($or)
    wire $flatten\pk2.$verific$n206$3542 [9]
    wire \pk2.c_gen [10]
Found and reported 11 problems.

yosys> opt_expr

3.16. Executing OPT_EXPR pass (perform const folding).
Optimizing module conv2d.
<suppressed ~4 debug messages>

yosys> opt_merge -nomux

3.17. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\conv2d'.
Removed a total of 0 cells.

yosys> opt_muxtree

3.18. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \conv2d..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
      Replacing known input bits on port A of cell $verific$mux_220$conv2d.v:429$1022: \fsm_loadacc -> 4'1101
      Replacing known input bits on port A of cell $verific$mux_188$conv2d.v:405$994: \fsm_loadacc -> 4'0000
      Replacing known input bits on port A of cell $verific$i1019$conv2d.v:1119$2514: \filter_reload -> 1'0
      Replacing known input bits on port A of cell $verific$i1006$conv2d.v:1108$2505: \filter_reload -> 1'1
      Replacing known input bits on port A of cell $verific$i357$conv2d.v:605$1091: \i_bias_wen -> 1'0
      Replacing known input bits on port A of cell $verific$i722$conv2d.v:840$1305: \i_pixel_wen -> 1'0
      Replacing known input bits on port B of cell $auto$bmuxmap.cc:60:execute$3574: \i_math_mode -> 2'11
  Analyzing evaluation results.
Removed 0 multiplexer ports.
<suppressed ~114 debug messages>

yosys> opt_reduce

3.19. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \conv2d.
    New ctrl vector for $pmux cell $verific$Select_1172$conv2d.v:1238$2595: { $verific$n11571$191 $verific$n11235$177 $verific$n11241$183 }
    New ctrl vector for $pmux cell $verific$Select_1175$conv2d.v:1238$2598: { $verific$n11235$177 $verific$n11241$183 }
    New ctrl vector for $pmux cell $verific$Select_1185$conv2d.v:1238$2607: { $verific$n11606$199 $verific$n11248$190 }
    New ctrl vector for $pmux cell $verific$Select_1188$conv2d.v:1238$2610: { $verific$n11608$201 $verific$n11609$202 }
    New ctrl vector for $pmux cell $verific$Select_1194$conv2d.v:1238$2614: { $verific$n11627$205 $verific$n11241$183 }
    New ctrl vector for $pmux cell $verific$Select_628$conv2d.v:781$1228: { $verific$n6554$85 $auto$opt_reduce.cc:134:opt_pmux$3928 $verific$n6557$88 }
    New ctrl vector for $pmux cell $verific$Select_629$conv2d.v:781$1229: { $verific$n6554$85 $auto$opt_reduce.cc:134:opt_pmux$3930 $verific$n6557$88 }
    New ctrl vector for $pmux cell $verific$Select_634$conv2d.v:781$1234: $auto$opt_reduce.cc:134:opt_pmux$3932
    New ctrl vector for $pmux cell $verific$Select_636$conv2d.v:781$1235: $auto$opt_reduce.cc:134:opt_pmux$3934
    New ctrl vector for $pmux cell $verific$Select_638$conv2d.v:781$1237: { $verific$n6554$85 $auto$opt_reduce.cc:134:opt_pmux$3936 $verific$n6557$88 }
    New ctrl vector for $pmux cell $verific$Select_820$conv2d.v:909$1362: { $verific$n8229$122 $verific$n8262$125 }
    New ctrl vector for $pmux cell $verific$Select_822$conv2d.v:909$1363: { $verific$n8229$122 $verific$n8262$125 }
    New ctrl vector for $pmux cell $verific$select_106$conv2d.v:223$774: { $verific$n851$8 $verific$n852$9 $verific$n853$10 $verific$n854$11 $verific$n856$13 $verific$n858$15 }
    New ctrl vector for $pmux cell $verific$select_1155$conv2d.v:1238$2578: { $verific$n11234$176 $verific$n11243$185 $auto$opt_reduce.cc:134:opt_pmux$3938 $verific$n11248$190 }
    New ctrl vector for $pmux cell $verific$select_1156$conv2d.v:1238$2579: { $auto$opt_reduce.cc:134:opt_pmux$3942 $verific$n11245$187 $verific$n11246$188 $auto$opt_reduce.cc:134:opt_pmux$3940 }
    New ctrl vector for $pmux cell $verific$select_1157$conv2d.v:1238$2580: { $auto$opt_reduce.cc:134:opt_pmux$3946 $verific$n11245$187 $verific$n11246$188 $auto$opt_reduce.cc:134:opt_pmux$3944 }
    New ctrl vector for $pmux cell $verific$select_1158$conv2d.v:1238$2581: { $auto$opt_reduce.cc:134:opt_pmux$3950 $verific$n11245$187 $verific$n11246$188 $auto$opt_reduce.cc:134:opt_pmux$3948 }
    New ctrl vector for $pmux cell $verific$select_1159$conv2d.v:1238$2582: { $auto$opt_reduce.cc:134:opt_pmux$3954 $verific$n11245$187 $verific$n11246$188 $auto$opt_reduce.cc:134:opt_pmux$3952 }
    New ctrl vector for $pmux cell $verific$select_1160$conv2d.v:1238$2583: { $auto$opt_reduce.cc:134:opt_pmux$3958 $verific$n11245$187 $verific$n11246$188 $auto$opt_reduce.cc:134:opt_pmux$3956 }
    New ctrl vector for $pmux cell $verific$select_1161$conv2d.v:1238$2584: { $auto$opt_reduce.cc:134:opt_pmux$3962 $verific$n11245$187 $verific$n11246$188 $auto$opt_reduce.cc:134:opt_pmux$3960 }
    New ctrl vector for $pmux cell $verific$select_1162$conv2d.v:1238$2585: { $auto$opt_reduce.cc:134:opt_pmux$3966 $verific$n11245$187 $verific$n11246$188 $auto$opt_reduce.cc:134:opt_pmux$3964 }
    New ctrl vector for $pmux cell $verific$select_1163$conv2d.v:1238$2586: { $auto$opt_reduce.cc:134:opt_pmux$3970 $verific$n11245$187 $verific$n11246$188 $auto$opt_reduce.cc:134:opt_pmux$3968 }
    New ctrl vector for $pmux cell $verific$select_1164$conv2d.v:1238$2587: { $verific$n11234$176 $verific$n11235$177 $verific$n11236$178 $verific$n11237$179 $auto$opt_reduce.cc:134:opt_pmux$3972 $verific$n11240$182 $verific$n11241$183 $verific$n11242$184 $verific$n11243$185 $verific$n11244$186 $verific$n11245$187 $verific$n11246$188 $verific$n11247$189 $verific$n11248$190 }
    New ctrl vector for $pmux cell $verific$select_1165$conv2d.v:1238$2588: { $verific$n11235$177 $verific$n11241$183 $verific$n11243$185 $verific$n11244$186 $auto$opt_reduce.cc:134:opt_pmux$3974 }
    New ctrl vector for $pmux cell $verific$select_1166$conv2d.v:1238$2589: { $auto$opt_reduce.cc:134:opt_pmux$3978 $auto$opt_reduce.cc:134:opt_pmux$3976 }
    New ctrl vector for $pmux cell $verific$select_1167$conv2d.v:1238$2590: { $auto$opt_reduce.cc:134:opt_pmux$3982 $auto$opt_reduce.cc:134:opt_pmux$3980 }
    New ctrl vector for $pmux cell $verific$select_1168$conv2d.v:1238$2591: { $verific$n11235$177 $verific$n11243$185 $auto$opt_reduce.cc:134:opt_pmux$3984 }
    New ctrl vector for $pmux cell $verific$select_1169$conv2d.v:1238$2592: { $verific$n11235$177 $verific$n11245$187 $auto$opt_reduce.cc:134:opt_pmux$3986 }
    New ctrl vector for $pmux cell $verific$select_1170$conv2d.v:1238$2593: { $verific$n11235$177 $auto$opt_reduce.cc:134:opt_pmux$3988 }
    New ctrl vector for $pmux cell $verific$select_1173$conv2d.v:1238$2596: { $verific$n11235$177 $verific$n11241$183 $verific$n11244$186 $auto$opt_reduce.cc:134:opt_pmux$3990 }
    New ctrl vector for $pmux cell $verific$select_1180$conv2d.v:1238$2603: { $verific$n11243$185 $auto$opt_reduce.cc:134:opt_pmux$3992 }
    New ctrl vector for $pmux cell $verific$select_1181$conv2d.v:1238$2604: { $verific$n11240$182 $verific$n11241$183 $verific$n11246$188 $auto$opt_reduce.cc:134:opt_pmux$3996 $auto$opt_reduce.cc:134:opt_pmux$3994 }
    New ctrl vector for $pmux cell $verific$select_1182$conv2d.v:1238$2605: { $verific$n11240$182 $verific$n11243$185 $auto$opt_reduce.cc:134:opt_pmux$3998 }
    New ctrl vector for $pmux cell $verific$select_1192$conv2d.v:1238$2612: { $verific$n11241$183 $verific$n11242$184 $verific$n11243$185 $verific$n11244$186 $auto$opt_reduce.cc:134:opt_pmux$4000 }
    New ctrl vector for $pmux cell $verific$select_408$conv2d.v:646$1125: { $verific$n5060$47 $auto$opt_reduce.cc:134:opt_pmux$4002 }
    New ctrl vector for $pmux cell $verific$select_409$conv2d.v:646$1126: $auto$opt_reduce.cc:134:opt_pmux$4004
    New ctrl vector for $pmux cell $verific$select_415$conv2d.v:646$1132: { $verific$n5061$48 $auto$opt_reduce.cc:134:opt_pmux$4006 }
    New ctrl vector for $pmux cell $verific$select_623$conv2d.v:781$1223: { $verific$n6555$86 $verific$n6556$87 $verific$n6557$88 }
    New ctrl vector for $pmux cell $verific$select_625$conv2d.v:781$1225: { $verific$n6554$85 $verific$n6555$86 $auto$opt_reduce.cc:134:opt_pmux$4008 }
    New ctrl vector for $pmux cell $verific$select_626$conv2d.v:781$1226: { $verific$n6555$86 $verific$n6556$87 $verific$n6557$88 }
    New ctrl vector for $pmux cell $verific$select_632$conv2d.v:781$1232: { $verific$n6555$86 $verific$n6556$87 $auto$opt_reduce.cc:134:opt_pmux$4010 }
    New ctrl vector for $pmux cell $verific$select_75$conv2d.v:164$770: { $verific$n851$8 $verific$n852$9 $verific$n853$10 $verific$n854$11 $verific$n856$13 $verific$n858$15 }
    New ctrl vector for $pmux cell $verific$select_817$conv2d.v:909$1359: { $verific$n8229$122 $auto$opt_reduce.cc:134:opt_pmux$4012 }
    New ctrl vector for $pmux cell $verific$select_818$conv2d.v:909$1360: { $auto$opt_reduce.cc:134:opt_pmux$4014 $verific$n8231$124 }
    New ctrl vector for $pmux cell $verific$select_823$conv2d.v:909$1364: { $verific$n8228$121 $verific$n8229$122 $auto$opt_reduce.cc:134:opt_pmux$4016 }
    New ctrl vector for $pmux cell $verific$select_824$conv2d.v:909$1365: { $verific$n8229$122 $verific$n8230$123 $verific$n8231$124 }
    New ctrl vector for $pmux cell $verific$select_828$conv2d.v:909$1369: { $verific$n8229$122 $auto$opt_reduce.cc:134:opt_pmux$4018 }
    New ctrl vector for $pmux cell $verific$select_830$conv2d.v:909$1371: { $verific$n8229$122 $auto$opt_reduce.cc:134:opt_pmux$4020 }
  Optimizing cells in module \conv2d.
Performed a total of 50 changes.

yosys> opt_merge

3.20. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\conv2d'.
<suppressed ~72 debug messages>
Removed a total of 24 cells.

yosys> opt_share

3.21. Executing OPT_SHARE pass.

yosys> opt_dff -nosdff -nodffe

3.22. Executing OPT_DFF pass (perform DFF optimizations).
Changing const-value async load to async reset on $verific$write2_reg$conv2d.v:1239$2653 ($aldff) from module conv2d.
Changing const-value async load to async reset on $verific$wdata2_reg$conv2d.v:782$1259 ($aldff) from module conv2d.
Changing const-value async load to async reset on $verific$total_pixels_done_reg$conv2d.v:1239$2639 ($aldff) from module conv2d.
Changing const-value async load to async reset on $verific$total_filters_done_reg$conv2d.v:1239$2633 ($aldff) from module conv2d.
Changing const-value async load to async reset on $verific$sat37_reg$conv2d.v:92$736 ($aldff) from module conv2d.
Changing const-value async load to async reset on $verific$sat26_reg$conv2d.v:92$735 ($aldff) from module conv2d.
Changing const-value async load to async reset on $verific$sat15_reg$conv2d.v:92$734 ($aldff) from module conv2d.
Changing const-value async load to async reset on $verific$sat04_reg$conv2d.v:92$733 ($aldff) from module conv2d.
Changing const-value async load to async reset on $verific$running_reg$conv2d.v:1239$2635 ($aldff) from module conv2d.
Changing const-value async load to async reset on $verific$result_base_reg$conv2d.v:782$1257 ($aldff) from module conv2d.
Changing const-value async load to async reset on $verific$reset_bias_address_reg$conv2d.v:782$1282 ($aldff) from module conv2d.
Changing const-value async load to async reset on $verific$pixels_read_reg$conv2d.v:910$1374 ($aldff) from module conv2d.
Changing const-value async load to async reset on $verific$pixel_start_reg$conv2d.v:910$1381 ($aldff) from module conv2d.
Changing const-value async load to async reset on $verific$pixel_select_reg$conv2d.v:1239$2651 ($aldff) from module conv2d.
Changing const-value async load to async reset on $verific$p2_raddr_reg$conv2d.v:1239$2621 ($aldff) from module conv2d.
Changing const-value async load to async reset on $verific$p1_raddr_reg$conv2d.v:1239$2620 ($aldff) from module conv2d.
Changing const-value async load to async reset on $verific$next_buffer_reg$conv2d.v:1239$2650 ($aldff) from module conv2d.
Changing const-value async load to async reset on $verific$load_more_pixels_reg$conv2d.v:1239$2638 ($aldff) from module conv2d.
Changing const-value async load to async reset on $verific$load_more_filters_reg$conv2d.v:1239$2637 ($aldff) from module conv2d.
Changing const-value async load to async reset on $verific$load_ext_acc_reg$conv2d.v:1239$2640 ($aldff) from module conv2d.
Changing const-value async load to async reset on $verific$load_buffer_reg$conv2d.v:910$1383 ($aldff) from module conv2d.
Changing const-value async load to async reset on $verific$last_start2d_reg$conv2d.v:782$1281 ($aldff) from module conv2d.
Changing const-value async load to async reset on $verific$i_tcdm3_wen_reg$conv2d.v:782$1268 ($aldff) from module conv2d.
Changing const-value async load to async reset on $verific$i_tcdm3_req_reg$conv2d.v:782$1267 ($aldff) from module conv2d.
Changing const-value async load to async reset on $verific$i_tcdm3_rdata_reg$conv2d.v:782$1284 ($aldff) from module conv2d.
Changing const-value async load to async reset on $verific$i_tcdm2_wreq_reg$conv2d.v:782$1266 ($aldff) from module conv2d.
Changing const-value async load to async reset on $verific$i_tcdm2_wen_reg$conv2d.v:782$1276 ($aldff) from module conv2d.
Changing const-value async load to async reset on $verific$i_tcdm2_wdata_reg$conv2d.v:782$1258 ($aldff) from module conv2d.
Changing const-value async load to async reset on $verific$i_tcdm2_rreq_reg$conv2d.v:782$1265 ($aldff) from module conv2d.
Changing const-value async load to async reset on $verific$i_tcdm2_rdata_reg$conv2d.v:782$1283 ($aldff) from module conv2d.
Changing const-value async load to async reset on $verific$i_tcdm1_wen_reg$conv2d.v:910$1376 ($aldff) from module conv2d.
Changing const-value async load to async reset on $verific$i_tcdm1_req_reg$conv2d.v:910$1377 ($aldff) from module conv2d.
Changing const-value async load to async reset on $verific$i_tcdm1_rdata_reg$conv2d.v:910$1384 ($aldff) from module conv2d.
Changing const-value async load to async reset on $verific$i_sat_reg$conv2d.v:1239$2624 ($aldff) from module conv2d.
Changing const-value async load to async reset on $verific$i_pixel_wen_reg$conv2d.v:910$1378 ($aldff) from module conv2d.
Changing const-value async load to async reset on $verific$i_pixel_wdata_reg$conv2d.v:910$1380 ($aldff) from module conv2d.
Changing const-value async load to async reset on $verific$i_pixel_waddr_reg$conv2d.v:910$1379 ($aldff) from module conv2d.
Changing const-value async load to async reset on $verific$i_pixel_raddr_reg$conv2d.v:1239$2629 ($aldff) from module conv2d.
Changing const-value async load to async reset on $verific$i_outsel_reg$conv2d.v:1239$2628 ($aldff) from module conv2d.
Changing const-value async load to async reset on $verific$i_mult2_coef_reg$conv2d.v:1239$2655 ($aldff) from module conv2d.
Changing const-value async load to async reset on $verific$i_mult1_coef_reg$conv2d.v:1239$2654 ($aldff) from module conv2d.
Changing const-value async load to async reset on $verific$i_math_mode_reg$conv2d.v:1239$2625 ($aldff) from module conv2d.
Changing const-value async load to async reset on $verific$i_mac_clr_reg$conv2d.v:1239$2626 ($aldff) from module conv2d.
Changing const-value async load to async reset on $verific$i_mac_clken_reg$conv2d.v:1239$2627 ($aldff) from module conv2d.
Changing const-value async load to async reset on $verific$i_filter_wdata_reg$conv2d.v:782$1272 ($aldff) from module conv2d.
Changing const-value async load to async reset on $verific$i_filter_waddr_reg$conv2d.v:782$1271 ($aldff) from module conv2d.
Changing const-value async load to async reset on $verific$i_filter_raddr_reg$conv2d.v:1239$2630 ($aldff) from module conv2d.
Changing const-value async load to async reset on $verific$i_filter2_wen_reg$conv2d.v:782$1274 ($aldff) from module conv2d.
Changing const-value async load to async reset on $verific$i_filter1_wen_reg$conv2d.v:782$1273 ($aldff) from module conv2d.
Changing const-value async load to async reset on $verific$i_done2d_reg$conv2d.v:1239$2634 ($aldff) from module conv2d.
Changing const-value async load to async reset on $verific$i_csel_reg$conv2d.v:1239$2623 ($aldff) from module conv2d.
Changing const-value async load to async reset on $verific$i_bias_wen_reg$conv2d.v:782$1269 ($aldff) from module conv2d.
Changing const-value async load to async reset on $verific$i_bias_wdata_reg$conv2d.v:782$1270 ($aldff) from module conv2d.
Changing const-value async load to async reset on $verific$i_bias_waddr_reg$conv2d.v:782$1262 ($aldff) from module conv2d.
Changing const-value async load to async reset on $verific$i_bias_raddr_reg$conv2d.v:782$1261 ($aldff) from module conv2d.
Changing const-value async load to async reset on $verific$i3_t2_waddr_reg$conv2d.v:782$1240 ($aldff) from module conv2d.
Changing const-value async load to async reset on $verific$i2_t2_waddr_reg$conv2d.v:782$1239 ($aldff) from module conv2d.
Changing const-value async load to async reset on $verific$i1_t2_waddr_reg$conv2d.v:782$1238 ($aldff) from module conv2d.
Changing const-value async load to async reset on $verific$fsm_writechannels_reg$conv2d.v:782$1280 ($aldff) from module conv2d.
Changing const-value async load to async reset on $verific$fsm_loadacc_reg$conv2d.v:782$1246 ($aldff) from module conv2d.
Changing const-value async load to async reset on $verific$fsm_getpixels_reg$conv2d.v:910$1372 ($aldff) from module conv2d.
Changing const-value async load to async reset on $verific$fsm_getfilters_reg$conv2d.v:782$1244 ($aldff) from module conv2d.
Changing const-value async load to async reset on $verific$fsm_getbias_reg$conv2d.v:782$1245 ($aldff) from module conv2d.
Changing const-value async load to async reset on $verific$fsm_conv2d_reg$conv2d.v:1239$2622 ($aldff) from module conv2d.
Changing const-value async load to async reset on $verific$fract_select_reg$conv2d.v:1239$2652 ($aldff) from module conv2d.
Changing const-value async load to async reset on $verific$filters_loaded_reg$conv2d.v:782$1241 ($aldff) from module conv2d.
Changing const-value async load to async reset on $verific$filters_done_reg$conv2d.v:1239$2632 ($aldff) from module conv2d.
Changing const-value async load to async reset on $verific$filters_complete_reg$conv2d.v:782$1279 ($aldff) from module conv2d.
Changing const-value async load to async reset on $verific$filter_stride_reg$conv2d.v:782$1242 ($aldff) from module conv2d.
Changing const-value async load to async reset on $verific$filter_start_reg$conv2d.v:782$1277 ($aldff) from module conv2d.
Changing const-value async load to async reset on $verific$filter_space_left_reg$conv2d.v:782$1278 ($aldff) from module conv2d.
Changing const-value async load to async reset on $verific$filter_reload_reg$conv2d.v:1239$2636 ($aldff) from module conv2d.
Changing const-value async load to async reset on $verific$filter_channels_reg$conv2d.v:782$1275 ($aldff) from module conv2d.
Changing const-value async load to async reset on $verific$copy_acc_reg$conv2d.v:1239$2641 ($aldff) from module conv2d.
Changing const-value async load to async reset on $verific$channels_loaded_reg$conv2d.v:910$1373 ($aldff) from module conv2d.
Changing const-value async load to async reset on $verific$channels_done_reg$conv2d.v:1239$2631 ($aldff) from module conv2d.
Changing const-value async load to async reset on $verific$buffers_used_reg$conv2d.v:910$1382 ($aldff) from module conv2d.
Changing const-value async load to async reset on $verific$bias_loaded_reg$conv2d.v:782$1264 ($aldff) from module conv2d.
Changing const-value async load to async reset on $verific$bias_base_addr_reg$conv2d.v:782$1263 ($aldff) from module conv2d.
Changing const-value async load to async reset on $verific$bias7_reg$conv2d.v:782$1254 ($aldff) from module conv2d.
Changing const-value async load to async reset on $verific$bias6_reg$conv2d.v:782$1253 ($aldff) from module conv2d.
Changing const-value async load to async reset on $verific$bias5_reg$conv2d.v:782$1252 ($aldff) from module conv2d.
Changing const-value async load to async reset on $verific$bias4_reg$conv2d.v:782$1251 ($aldff) from module conv2d.
Changing const-value async load to async reset on $verific$bias3_reg$conv2d.v:782$1250 ($aldff) from module conv2d.
Changing const-value async load to async reset on $verific$bias2_reg$conv2d.v:782$1249 ($aldff) from module conv2d.
Changing const-value async load to async reset on $verific$bias1_reg$conv2d.v:782$1248 ($aldff) from module conv2d.
Changing const-value async load to async reset on $verific$bias0_reg$conv2d.v:782$1247 ($aldff) from module conv2d.
Changing const-value async load to async reset on $verific$add_stride_reg$conv2d.v:782$1243 ($aldff) from module conv2d.
Changing const-value async load to async reset on $verific$acc7_reg$conv2d.v:1239$2649 ($aldff) from module conv2d.
Changing const-value async load to async reset on $verific$acc6_reg$conv2d.v:1239$2648 ($aldff) from module conv2d.
Changing const-value async load to async reset on $verific$acc5_reg$conv2d.v:1239$2647 ($aldff) from module conv2d.
Changing const-value async load to async reset on $verific$acc4_reg$conv2d.v:1239$2646 ($aldff) from module conv2d.
Changing const-value async load to async reset on $verific$acc3_reg$conv2d.v:1239$2645 ($aldff) from module conv2d.
Changing const-value async load to async reset on $verific$acc2_reg$conv2d.v:1239$2644 ($aldff) from module conv2d.
Changing const-value async load to async reset on $verific$acc1_reg$conv2d.v:1239$2643 ($aldff) from module conv2d.
Changing const-value async load to async reset on $verific$acc0_reg$conv2d.v:1239$2642 ($aldff) from module conv2d.

yosys> opt_clean

3.23. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \conv2d..
Removed 4 unused cells and 31 unused wires.
<suppressed ~5 debug messages>

yosys> opt_expr

3.24. Executing OPT_EXPR pass (perform const folding).
Optimizing module conv2d.

yosys> opt_muxtree

3.25. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \conv2d..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Removed 0 multiplexer ports.
<suppressed ~112 debug messages>

yosys> opt_reduce

3.26. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \conv2d.
Performed a total of 0 changes.

yosys> opt_merge

3.27. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\conv2d'.
Removed a total of 0 cells.

yosys> opt_share

3.28. Executing OPT_SHARE pass.

yosys> opt_dff -nosdff -nodffe

3.29. Executing OPT_DFF pass (perform DFF optimizations).

yosys> opt_clean

3.30. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \conv2d..

yosys> opt_expr

3.31. Executing OPT_EXPR pass (perform const folding).
Optimizing module conv2d.
MAX OPT ITERATION = 2

yosys> fsm -encoding binary

3.32. Executing FSM pass (extract and optimize FSM).

yosys> fsm_detect

3.32.1. Executing FSM_DETECT pass (finding FSMs in design).
Not marking conv2d.fract_select as FSM state register:
    Users of register don't seem to benefit from recoding.
Not marking conv2d.fsm_conv2d as FSM state register:
    Circuit seems to be self-resetting.
Not marking conv2d.fsm_getbias as FSM state register:
    Circuit seems to be self-resetting.
Not marking conv2d.fsm_getpixels as FSM state register:
    Circuit seems to be self-resetting.
Not marking conv2d.fsm_loadacc as FSM state register:
    Users of register don't seem to benefit from recoding.
Not marking conv2d.i_math_mode as FSM state register:
    Register is connected to module port.
    Users of register don't seem to benefit from recoding.
Not marking conv2d.i_outsel as FSM state register:
    Register is connected to module port.
    Users of register don't seem to benefit from recoding.

yosys> fsm_extract

3.32.2. Executing FSM_EXTRACT pass (extracting FSM from design).

yosys> fsm_opt

3.32.3. Executing FSM_OPT pass (simple optimizations of FSMs).

yosys> opt_clean

3.32.4. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \conv2d..

yosys> fsm_opt

3.32.5. Executing FSM_OPT pass (simple optimizations of FSMs).

yosys> fsm_recode -encoding binary

3.32.6. Executing FSM_RECODE pass (re-assigning FSM state encoding).

yosys> fsm_info

3.32.7. Executing FSM_INFO pass (dumping all available information on FSM cells).

yosys> fsm_map

3.32.8. Executing FSM_MAP pass (mapping FSMs to basic logic).

yosys> opt_expr

3.33. Executing OPT_EXPR pass (perform const folding).
Optimizing module conv2d.

yosys> opt_merge -nomux

3.34. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\conv2d'.
Removed a total of 0 cells.

yosys> opt_muxtree

3.35. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \conv2d..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Removed 0 multiplexer ports.
<suppressed ~112 debug messages>

yosys> opt_reduce

3.36. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \conv2d.
Performed a total of 0 changes.

yosys> opt_merge

3.37. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\conv2d'.
Removed a total of 0 cells.

yosys> opt_share

3.38. Executing OPT_SHARE pass.

yosys> opt_dff -nosdff -sat

3.39. Executing OPT_DFF pass (perform DFF optimizations).
Adding EN signal on $verific$wdata2_reg$conv2d.v:782$1259 ($adff) from module conv2d (D = $auto$bmuxmap.cc:58:execute$3623, Q = \wdata2).
Adding EN signal on $verific$total_filters_done_reg$conv2d.v:1239$2633 ($adff) from module conv2d (D = $verific$n11561$706, Q = \total_filters_done).
Adding EN signal on $verific$running_reg$conv2d.v:1239$2635 ($adff) from module conv2d (D = $verific$n11630$207, Q = \running).
Adding EN signal on $verific$result_base_reg$conv2d.v:782$1257 ($adff) from module conv2d (D = $auto$bmuxmap.cc:58:execute$3680, Q = \result_base).
Adding EN signal on $verific$pixels_read_reg$conv2d.v:910$1374 ($adff) from module conv2d (D = $verific$n8232$533, Q = \pixels_read).
Adding EN signal on $verific$pixel_start_reg$conv2d.v:910$1381 ($adff) from module conv2d (D = $verific$n8265$127, Q = \pixel_start).
Adding EN signal on $verific$pixel_select_reg$conv2d.v:1239$2651 ($adff) from module conv2d (D = $verific$n11589$708, Q = \pixel_select).
Adding EN signal on $verific$next_buffer_reg$conv2d.v:1239$2650 ($adff) from module conv2d (D = $verific$n11586$196, Q = \next_buffer).
Adding EN signal on $verific$load_more_filters_reg$conv2d.v:1239$2637 ($adff) from module conv2d (D = $verific$n11628$206, Q = \load_more_filters).
Adding EN signal on $verific$load_buffer_reg$conv2d.v:910$1383 ($adff) from module conv2d (D = $verific$n8263$126, Q = \load_buffer).
Adding EN signal on $verific$i_tcdm3_wen_reg$conv2d.v:782$1268 ($adff) from module conv2d (D = $verific$n5108$51, Q = \i_tcdm3_wen).
Adding EN signal on $verific$i_tcdm3_req_reg$conv2d.v:782$1267 ($adff) from module conv2d (D = $verific$n5107$50, Q = \i_tcdm3_req).
Adding EN signal on $verific$i_tcdm3_raddr_reg$conv2d.v:782$1260 ($aldff) from module conv2d (D = $verific$n5086$416 [1:0], Q = \i_tcdm3_raddr [1:0]).
Adding EN signal on $verific$i_tcdm3_raddr_reg$conv2d.v:782$1260 ($aldff) from module conv2d (D = $verific$n5086$416 [19:2], Q = \i_tcdm3_raddr [19:2]).
Adding EN signal on $verific$i_tcdm2_wreq_reg$conv2d.v:782$1266 ($adff) from module conv2d (D = $auto$bmuxmap.cc:58:execute$3604, Q = \i_tcdm2_wreq).
Adding EN signal on $verific$i_tcdm2_wen_reg$conv2d.v:782$1276 ($adff) from module conv2d (D = $verific$n6632$90, Q = \i_tcdm2_wen).
Adding EN signal on $verific$i_tcdm2_wdata_reg$conv2d.v:782$1258 ($adff) from module conv2d (D = $auto$bmuxmap.cc:58:execute$3594, Q = \i_tcdm2_wdata).
Adding EN signal on $verific$i_tcdm2_rreq_reg$conv2d.v:782$1265 ($adff) from module conv2d (D = $verific$n6631$89, Q = \i_tcdm2_rreq).
Adding EN signal on $verific$i_tcdm2_raddr_reg$conv2d.v:782$1255 ($aldff) from module conv2d (D = $verific$n6610$490 [1:0], Q = \i_tcdm2_raddr [1:0]).
Adding EN signal on $verific$i_tcdm2_raddr_reg$conv2d.v:782$1255 ($aldff) from module conv2d (D = $verific$n6610$490 [19:2], Q = \i_tcdm2_raddr [19:2]).
Adding EN signal on $verific$i_tcdm1_wen_reg$conv2d.v:910$1376 ($adff) from module conv2d (D = $verific$n8295$129, Q = \i_tcdm1_wen).
Adding EN signal on $verific$i_tcdm1_req_reg$conv2d.v:910$1377 ($adff) from module conv2d (D = $verific$n8294$128, Q = \i_tcdm1_req).
Adding EN signal on $verific$i_tcdm1_addr_reg$conv2d.v:910$1375 ($aldff) from module conv2d (D = $verific$n8266$535 [1:0], Q = \i_tcdm1_addr [1:0]).
Adding EN signal on $verific$i_tcdm1_addr_reg$conv2d.v:910$1375 ($aldff) from module conv2d (D = $verific$n8266$535 [19:2], Q = \i_tcdm1_addr [19:2]).
Adding EN signal on $verific$i_pixel_wdata_reg$conv2d.v:910$1380 ($adff) from module conv2d (D = $verific$n8296$538, Q = \i_pixel_wdata).
Adding EN signal on $verific$i_pixel_raddr_reg$conv2d.v:1239$2629 ($adff) from module conv2d (D = $verific$n11531$704, Q = \i_pixel_raddr).
Adding EN signal on $verific$i_outsel_reg$conv2d.v:1239$2628 ($adff) from module conv2d (D = $verific$n11458$701, Q = \i_outsel).
Adding EN signal on $verific$i_mult2_coef_reg$conv2d.v:1239$2655 ($adff) from module conv2d (D = $verific$n11498$703, Q = \i_mult2_coef).
Adding EN signal on $verific$i_mult1_coef_reg$conv2d.v:1239$2654 ($adff) from module conv2d (D = $verific$n11465$702, Q = \i_mult1_coef).
Adding EN signal on $verific$i_math_mode_reg$conv2d.v:1239$2625 ($adff) from module conv2d (D = $verific$n11249$691, Q = \i_math_mode).
Adding EN signal on $verific$i_mac_clr_reg$conv2d.v:1239$2626 ($adff) from module conv2d (D = $verific$n11610$203, Q = \i_mac_clr).
Adding EN signal on $verific$i_mac_clken_reg$conv2d.v:1239$2627 ($adff) from module conv2d (D = $verific$n11613$204, Q = \i_mac_clken).
Adding EN signal on $verific$i_filter_wdata_reg$conv2d.v:782$1272 ($adff) from module conv2d (D = $verific$n6647$493, Q = \i_filter_wdata).
Adding EN signal on $verific$i_filter_waddr_reg$conv2d.v:782$1271 ($adff) from module conv2d (D = $verific$n6558$486 [0], Q = \i_filter_waddr [0]).
Adding EN signal on $verific$i_filter_waddr_reg$conv2d.v:782$1271 ($adff) from module conv2d (D = $verific$n6558$486 [11:1], Q = \i_filter_waddr [11:1]).
Adding EN signal on $verific$i_filter_raddr_reg$conv2d.v:1239$2630 ($adff) from module conv2d (D = $verific$n11614$711 [1:0], Q = \i_filter_raddr [1:0]).
Adding EN signal on $verific$i_filter_raddr_reg$conv2d.v:1239$2630 ($adff) from module conv2d (D = $verific$n11614$711 [11:2], Q = \i_filter_raddr [11:2]).
Adding EN signal on $verific$i_done2d_reg$conv2d.v:1239$2634 ($adff) from module conv2d (D = $verific$n11607$200, Q = \i_done2d).
Adding EN signal on $verific$i_csel_reg$conv2d.v:1239$2623 ($adff) from module conv2d (D = $verific$n11632$209, Q = \i_csel).
Adding EN signal on $verific$i_bias_wdata_reg$conv2d.v:782$1270 ($adff) from module conv2d (D = $verific$n5123$419, Q = \i_bias_wdata).
Adding EN signal on $verific$i_bias_waddr_reg$conv2d.v:782$1262 ($adff) from module conv2d (D = $verific$n5063$414 [11:2], Q = \i_bias_waddr [11:2]).
Adding EN signal on $verific$i_bias_waddr_reg$conv2d.v:782$1262 ($adff) from module conv2d (D = $verific$n5063$414 [1:0], Q = \i_bias_waddr [1:0]).
Adding EN signal on $verific$i_bias_raddr_reg$conv2d.v:782$1261 ($adff) from module conv2d (D = $auto$bmuxmap.cc:58:execute$3894 [11:2], Q = \i_bias_raddr [11:2]).
Adding EN signal on $verific$i_bias_raddr_reg$conv2d.v:782$1261 ($adff) from module conv2d (D = $auto$bmuxmap.cc:58:execute$3894 [1:0], Q = \i_bias_raddr [1:0]).
Adding EN signal on $verific$fsm_writechannels_reg$conv2d.v:782$1280 ($adff) from module conv2d (D = $auto$bmuxmap.cc:58:execute$3642, Q = \fsm_writechannels).
Adding EN signal on $verific$fsm_getpixels_reg$conv2d.v:910$1372 ($adff) from module conv2d (D = $verific$n8290$537, Q = \fsm_getpixels).
Adding EN signal on $verific$fsm_getfilters_reg$conv2d.v:782$1244 ($adff) from module conv2d (D = $verific$n6643$492, Q = \fsm_getfilters).
Adding EN signal on $verific$fsm_getbias_reg$conv2d.v:782$1245 ($adff) from module conv2d (D = $verific$n5119$418, Q = \fsm_getbias).
Adding EN signal on $verific$fsm_conv2d_reg$conv2d.v:1239$2622 ($adff) from module conv2d (D = $verific$n11452$700, Q = \fsm_conv2d).
Adding EN signal on $verific$fract_select_reg$conv2d.v:1239$2652 ($adff) from module conv2d (D = $verific$n11592$709, Q = \fract_select).
Adding EN signal on $verific$filters_loaded_reg$conv2d.v:782$1241 ($adff) from module conv2d (D = $verific$n6600$489, Q = \filters_loaded).
Adding EN signal on $verific$filters_done_reg$conv2d.v:1239$2632 ($adff) from module conv2d (D = $verific$n11573$707 [2:0], Q = \filters_done [2:0]).
Adding EN signal on $verific$filters_done_reg$conv2d.v:1239$2632 ($adff) from module conv2d (D = $verific$n11573$707 [8:3], Q = \filters_done [8:3]).
Adding EN signal on $verific$filter_stride_reg$conv2d.v:782$1242 ($adff) from module conv2d (D = $verific$n6586$488, Q = \filter_stride).
Adding EN signal on $verific$filter_start_reg$conv2d.v:782$1277 ($adff) from module conv2d (D = $verific$n6694$94, Q = \filter_start).
Adding EN signal on $verific$filter_space_left_reg$conv2d.v:782$1278 ($adff) from module conv2d (D = $verific$n6571$487, Q = \filter_space_left).
Adding EN signal on $verific$filter_reload_reg$conv2d.v:1239$2636 ($adff) from module conv2d (D = $verific$n11572$192, Q = \filter_reload).
Adding EN signal on $verific$filter_channels_reg$conv2d.v:782$1275 ($adff) from module conv2d (D = $verific$n6633$491, Q = \filter_channels).
Adding EN signal on $verific$channels_loaded_reg$conv2d.v:910$1373 ($adff) from module conv2d (D = $verific$n8330$539 [1:0], Q = \channels_loaded [1:0]).
Adding EN signal on $verific$channels_loaded_reg$conv2d.v:910$1373 ($adff) from module conv2d (D = $verific$n8330$539 [8:2], Q = \channels_loaded [8:2]).
Adding EN signal on $verific$channels_done_reg$conv2d.v:1239$2631 ($adff) from module conv2d (D = $verific$n11595$710 [1:0], Q = \channels_done [1:0]).
Adding EN signal on $verific$channels_done_reg$conv2d.v:1239$2631 ($adff) from module conv2d (D = $verific$n11595$710 [8:2], Q = \channels_done [8:2]).
Adding EN signal on $verific$buffers_used_reg$conv2d.v:910$1382 ($adff) from module conv2d (D = $verific$n8287$536 [1], Q = \buffers_used [1]).
Adding EN signal on $verific$buffers_used_reg$conv2d.v:910$1382 ($adff) from module conv2d (D = $verific$n8287$536 [0], Q = \buffers_used [0]).
Adding EN signal on $verific$bias_loaded_reg$conv2d.v:782$1264 ($adff) from module conv2d (D = $verific$n5109$417, Q = \bias_loaded).
Adding EN signal on $verific$bias_base_addr_reg$conv2d.v:782$1263 ($adff) from module conv2d (D = $auto$bmuxmap.cc:58:execute$3913 [1:0], Q = \bias_base_addr [1:0]).
Adding EN signal on $verific$bias_base_addr_reg$conv2d.v:782$1263 ($adff) from module conv2d (D = $auto$bmuxmap.cc:58:execute$3913 [11:2], Q = \bias_base_addr [11:2]).
Adding EN signal on $verific$bias7_reg$conv2d.v:782$1254 ($adff) from module conv2d (D = $auto$bmuxmap.cc:58:execute$3715 [47:24], Q = \bias7).
Adding EN signal on $verific$bias6_reg$conv2d.v:782$1253 ($adff) from module conv2d (D = $auto$bmuxmap.cc:58:execute$3737, Q = \bias6).
Adding EN signal on $verific$bias5_reg$conv2d.v:782$1252 ($adff) from module conv2d (D = $auto$bmuxmap.cc:58:execute$3756, Q = \bias5).
Adding EN signal on $verific$bias4_reg$conv2d.v:782$1251 ($adff) from module conv2d (D = $auto$bmuxmap.cc:58:execute$3775, Q = \bias4).
Adding EN signal on $verific$bias3_reg$conv2d.v:782$1250 ($adff) from module conv2d (D = $auto$bmuxmap.cc:58:execute$3794, Q = \bias3).
Adding EN signal on $verific$bias2_reg$conv2d.v:782$1249 ($adff) from module conv2d (D = $auto$bmuxmap.cc:58:execute$3813, Q = \bias2).
Adding EN signal on $verific$bias1_reg$conv2d.v:782$1248 ($adff) from module conv2d (D = $auto$bmuxmap.cc:58:execute$3832, Q = \bias1).
Adding EN signal on $verific$bias0_reg$conv2d.v:782$1247 ($adff) from module conv2d (D = $auto$bmuxmap.cc:58:execute$3851, Q = \bias0).
Adding EN signal on $verific$add_stride_reg$conv2d.v:782$1243 ($adff) from module conv2d (D = $auto$bmuxmap.cc:58:execute$3661, Q = \add_stride).
Adding EN signal on $verific$acc7_reg$conv2d.v:1239$2649 ($adff) from module conv2d (D = $verific$n11427$699 [7:0], Q = \acc7 [7:0]).
Adding EN signal on $verific$acc7_reg$conv2d.v:1239$2649 ($adff) from module conv2d (D = $verific$n11427$699 [23:16], Q = \acc7 [23:16]).
Adding EN signal on $verific$acc7_reg$conv2d.v:1239$2649 ($adff) from module conv2d (D = $verific$n11427$699 [15:8], Q = \acc7 [15:8]).
Adding EN signal on $verific$acc6_reg$conv2d.v:1239$2648 ($adff) from module conv2d (D = $verific$n11402$698 [7:0], Q = \acc6 [7:0]).
Adding EN signal on $verific$acc6_reg$conv2d.v:1239$2648 ($adff) from module conv2d (D = $verific$n11402$698 [23:16], Q = \acc6 [23:16]).
Adding EN signal on $verific$acc6_reg$conv2d.v:1239$2648 ($adff) from module conv2d (D = $verific$n11402$698 [15:8], Q = \acc6 [15:8]).
Adding EN signal on $verific$acc5_reg$conv2d.v:1239$2647 ($adff) from module conv2d (D = $verific$n11377$697 [7:0], Q = \acc5 [7:0]).
Adding EN signal on $verific$acc5_reg$conv2d.v:1239$2647 ($adff) from module conv2d (D = $verific$n11377$697 [23:16], Q = \acc5 [23:16]).
Adding EN signal on $verific$acc5_reg$conv2d.v:1239$2647 ($adff) from module conv2d (D = $verific$n11377$697 [15:8], Q = \acc5 [15:8]).
Adding EN signal on $verific$acc4_reg$conv2d.v:1239$2646 ($adff) from module conv2d (D = $verific$n11352$696 [7:0], Q = \acc4 [7:0]).
Adding EN signal on $verific$acc4_reg$conv2d.v:1239$2646 ($adff) from module conv2d (D = $verific$n11352$696 [23:16], Q = \acc4 [23:16]).
Adding EN signal on $verific$acc4_reg$conv2d.v:1239$2646 ($adff) from module conv2d (D = $verific$n11352$696 [15:8], Q = \acc4 [15:8]).
Adding EN signal on $verific$acc3_reg$conv2d.v:1239$2645 ($adff) from module conv2d (D = $verific$n11327$695 [7:0], Q = \acc3 [7:0]).
Adding EN signal on $verific$acc3_reg$conv2d.v:1239$2645 ($adff) from module conv2d (D = $verific$n11327$695 [23:16], Q = \acc3 [23:16]).
Adding EN signal on $verific$acc3_reg$conv2d.v:1239$2645 ($adff) from module conv2d (D = $verific$n11327$695 [15:8], Q = \acc3 [15:8]).
Adding EN signal on $verific$acc2_reg$conv2d.v:1239$2644 ($adff) from module conv2d (D = $verific$n11302$694 [7:0], Q = \acc2 [7:0]).
Adding EN signal on $verific$acc2_reg$conv2d.v:1239$2644 ($adff) from module conv2d (D = $verific$n11302$694 [23:16], Q = \acc2 [23:16]).
Adding EN signal on $verific$acc2_reg$conv2d.v:1239$2644 ($adff) from module conv2d (D = $verific$n11302$694 [15:8], Q = \acc2 [15:8]).
Adding EN signal on $verific$acc1_reg$conv2d.v:1239$2643 ($adff) from module conv2d (D = $verific$n11277$693 [7:0], Q = \acc1 [7:0]).
Adding EN signal on $verific$acc1_reg$conv2d.v:1239$2643 ($adff) from module conv2d (D = $verific$n11277$693 [23:16], Q = \acc1 [23:16]).
Adding EN signal on $verific$acc1_reg$conv2d.v:1239$2643 ($adff) from module conv2d (D = $verific$n11277$693 [15:8], Q = \acc1 [15:8]).
Adding EN signal on $verific$acc0_reg$conv2d.v:1239$2642 ($adff) from module conv2d (D = $verific$n11252$692 [7:0], Q = \acc0 [7:0]).
Adding EN signal on $verific$acc0_reg$conv2d.v:1239$2642 ($adff) from module conv2d (D = $verific$n11252$692 [23:16], Q = \acc0 [23:16]).
Adding EN signal on $verific$acc0_reg$conv2d.v:1239$2642 ($adff) from module conv2d (D = $verific$n11252$692 [15:8], Q = \acc0 [15:8]).
Setting constant 0-bit at position 0 on $auto$ff.cc:262:slice$4682 ($adffe) from module conv2d.
Setting constant 0-bit at position 1 on $auto$ff.cc:262:slice$4682 ($adffe) from module conv2d.
Setting constant 0-bit at position 0 on $auto$ff.cc:262:slice$4621 ($adffe) from module conv2d.
Setting constant 0-bit at position 1 on $auto$ff.cc:262:slice$4621 ($adffe) from module conv2d.
Setting constant 0-bit at position 0 on $auto$ff.cc:262:slice$4605 ($adffe) from module conv2d.
Setting constant 0-bit at position 1 on $auto$ff.cc:262:slice$4605 ($adffe) from module conv2d.
Setting constant 0-bit at position 0 on $auto$ff.cc:262:slice$4510 ($adffe) from module conv2d.
Setting constant 0-bit at position 1 on $auto$ff.cc:262:slice$4510 ($adffe) from module conv2d.
Setting constant 0-bit at position 2 on $auto$ff.cc:262:slice$4510 ($adffe) from module conv2d.
Setting constant 0-bit at position 0 on $auto$ff.cc:262:slice$4340 ($adffe) from module conv2d.
Setting constant 0-bit at position 1 on $auto$ff.cc:262:slice$4340 ($adffe) from module conv2d.
Setting constant 0-bit at position 0 on $auto$ff.cc:262:slice$4314 ($adffe) from module conv2d.
Setting constant 0-bit at position 0 on $auto$ff.cc:262:slice$4572 ($adffe) from module conv2d.
Setting constant 0-bit at position 1 on $auto$ff.cc:262:slice$4572 ($adffe) from module conv2d.
Setting constant 0-bit at position 2 on $auto$ff.cc:262:slice$4572 ($adffe) from module conv2d.
Setting constant 0-bit at position 0 on $verific$filters_complete_reg$conv2d.v:782$1279 ($adff) from module conv2d.
Setting constant 0-bit at position 1 on $verific$filters_complete_reg$conv2d.v:782$1279 ($adff) from module conv2d.
Setting constant 0-bit at position 2 on $verific$filters_complete_reg$conv2d.v:782$1279 ($adff) from module conv2d.
Setting constant 0-bit at position 0 on $auto$ff.cc:262:slice$4501 ($adffe) from module conv2d.
Setting constant 0-bit at position 1 on $auto$ff.cc:262:slice$4501 ($adffe) from module conv2d.
Setting constant 0-bit at position 2 on $auto$ff.cc:262:slice$4501 ($adffe) from module conv2d.
Setting constant 0-bit at position 4 on $auto$ff.cc:262:slice$4477 ($adffe) from module conv2d.
Setting constant 0-bit at position 2 on $auto$ff.cc:262:slice$4466 ($adffe) from module conv2d.
Setting constant 0-bit at position 2 on $auto$ff.cc:262:slice$4455 ($adffe) from module conv2d.
Setting constant 0-bit at position 2 on $auto$ff.cc:262:slice$4442 ($adffe) from module conv2d.
Setting constant 0-bit at position 0 on $auto$ff.cc:262:slice$4398 ($adffe) from module conv2d.
Setting constant 0-bit at position 1 on $auto$ff.cc:262:slice$4398 ($adffe) from module conv2d.
Setting constant 0-bit at position 0 on $verific$i_pixel_waddr_reg$conv2d.v:910$1379 ($adff) from module conv2d.
Setting constant 0-bit at position 1 on $verific$i_pixel_waddr_reg$conv2d.v:910$1379 ($adff) from module conv2d.

yosys> opt_clean

3.40. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \conv2d..
Removed 47 unused cells and 47 unused wires.
<suppressed ~48 debug messages>

yosys> opt_expr

3.41. Executing OPT_EXPR pass (perform const folding).
Optimizing module conv2d.
<suppressed ~135 debug messages>

yosys> opt_muxtree

3.42. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \conv2d..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Removed 0 multiplexer ports.
<suppressed ~112 debug messages>

yosys> opt_reduce

3.43. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \conv2d.
Performed a total of 0 changes.

yosys> opt_merge

3.44. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\conv2d'.
<suppressed ~657 debug messages>
Removed a total of 219 cells.

yosys> opt_share

3.45. Executing OPT_SHARE pass.

yosys> opt_dff -nosdff -sat

3.46. Executing OPT_DFF pass (perform DFF optimizations).
Setting constant 0-bit at position 0 on $auto$ff.cc:262:slice$4032 ($adffe) from module conv2d.
Setting constant 0-bit at position 1 on $auto$ff.cc:262:slice$4032 ($adffe) from module conv2d.
Setting constant 0-bit at position 2 on $auto$ff.cc:262:slice$4032 ($adffe) from module conv2d.
Setting constant 0-bit at position 0 on $auto$ff.cc:262:slice$4412 ($adffe) from module conv2d.
Setting constant 0-bit at position 1 on $auto$ff.cc:262:slice$4412 ($adffe) from module conv2d.
Setting constant 0-bit at position 0 on $auto$ff.cc:262:slice$4697 ($adffe) from module conv2d.
Setting constant 0-bit at position 1 on $auto$ff.cc:262:slice$4697 ($adffe) from module conv2d.
Setting constant 0-bit at position 2 on $auto$ff.cc:262:slice$4697 ($adffe) from module conv2d.

yosys> opt_clean

3.47. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \conv2d..
Removed 2 unused cells and 210 unused wires.
<suppressed ~3 debug messages>

yosys> opt_expr

3.48. Executing OPT_EXPR pass (perform const folding).
Optimizing module conv2d.

yosys> opt_muxtree

3.49. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \conv2d..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Removed 0 multiplexer ports.
<suppressed ~123 debug messages>

yosys> opt_reduce

3.50. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \conv2d.
Performed a total of 0 changes.

yosys> opt_merge

3.51. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\conv2d'.
Removed a total of 0 cells.

yosys> opt_share

3.52. Executing OPT_SHARE pass.

yosys> opt_dff -nosdff -sat

3.53. Executing OPT_DFF pass (perform DFF optimizations).

yosys> opt_clean

3.54. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \conv2d..

yosys> opt_expr

3.55. Executing OPT_EXPR pass (perform const folding).
Optimizing module conv2d.
MAX OPT ITERATION = 3

yosys> wreduce -keepdc

3.56. Executing WREDUCE pass (reducing word size of cells).
Removed top 3 bits (of 4) from port B of cell conv2d.$verific$equal_67$conv2d.v:121$756 ($eq).
Removed top 2 bits (of 4) from port B of cell conv2d.$verific$equal_68$conv2d.v:122$757 ($eq).
Removed top 2 bits (of 4) from port B of cell conv2d.$verific$equal_69$conv2d.v:123$758 ($eq).
Removed top 3 bits (of 4) from port B of cell conv2d.$auto$opt_dff.cc:195:make_patterns_logic$4058 ($ne).
Removed top 1 bits (of 10) from port B of cell conv2d.$verific$add_190$conv2d.v:409$995 ($add).
Removed top 9 bits (of 10) from port B of cell conv2d.$verific$add_202$conv2d.v:418$1004 ($add).
Removed top 10 bits (of 11) from port B of cell conv2d.$verific$add_291$conv2d.v:540$1054 ($add).
Removed top 1 bits (of 4) from mux cell conv2d.$verific$mux_324$conv2d.v:577$1072 ($mux).
Removed top 9 bits (of 10) from port B of cell conv2d.$verific$add_354$conv2d.v:604$1089 ($add).
Removed top 17 bits (of 18) from port B of cell conv2d.$verific$add_381$conv2d.v:628$1103 ($add).
Removed top 8 bits (of 9) from port B of cell conv2d.$verific$add_387$conv2d.v:636$1107 ($add).
Removed top 1 bits (of 2) from port B of cell conv2d.$verific$equal_406$conv2d.v:620$1123 ($eq).
Removed top 1 bits (of 3) from mux cell conv2d.$verific$select_414$conv2d.v:646$1131 ($pmux).
Removed top 10 bits (of 11) from port B of cell conv2d.$verific$add_433$conv2d.v:667$1141 ($add).
Removed top 1 bits (of 15) from port A of cell conv2d.$verific$sub_436$conv2d.v:670$1143 ($sub).
Removed top 11 bits (of 15) from port B of cell conv2d.$verific$sub_436$conv2d.v:670$1143 ($sub).
Removed top 1 bits (of 15) from port Y of cell conv2d.$verific$sub_436$conv2d.v:670$1143 ($sub).
Removed top 17 bits (of 18) from port B of cell conv2d.$verific$add_451$conv2d.v:679$1153 ($add).
Removed top 8 bits (of 9) from port B of cell conv2d.$verific$add_457$conv2d.v:683$1159 ($add).
Removed top 1 bits (of 10) from port B of cell conv2d.$verific$equal_460$conv2d.v:684$1161 ($eq).
Removed top 1 bits (of 14) from port A of cell conv2d.$verific$sub_461$conv2d.v:685$1162 ($sub).
Removed top 10 bits (of 14) from port B of cell conv2d.$verific$sub_461$conv2d.v:685$1162 ($sub).
Removed top 1 bits (of 14) from port Y of cell conv2d.$verific$sub_461$conv2d.v:685$1162 ($sub).
Removed top 5 bits (of 6) from port B of cell conv2d.$verific$add_463$conv2d.v:686$1165 ($add).
Removed top 5 bits (of 6) from port B of cell conv2d.$verific$add_465$conv2d.v:687$1167 ($add).
Removed top 1 bits (of 10) from port B of cell conv2d.$verific$LessThan_468$conv2d.v:688$1169 ($lt).
Removed top 2 bits (of 14) from port A of cell conv2d.$verific$LessThan_469$conv2d.v:689$1170 ($le).
Removed top 1 bits (of 3) from mux cell conv2d.$verific$mux_483$conv2d.v:700$1175 ($mux).
Removed top 1 bits (of 3) from mux cell conv2d.$verific$mux_493$conv2d.v:705$1182 ($mux).
Removed top 1 bits (of 3) from mux cell conv2d.$verific$mux_503$conv2d.v:710$1189 ($mux).
Removed top 1 bits (of 2) from port B of cell conv2d.$verific$equal_620$conv2d.v:665$1220 ($eq).
Removed top 1 bits (of 3) from mux cell conv2d.$verific$select_631$conv2d.v:781$1231 ($pmux).
Removed top 9 bits (of 10) from port B of cell conv2d.$verific$add_719$conv2d.v:839$1303 ($add).
Removed top 17 bits (of 18) from port B of cell conv2d.$verific$add_745$conv2d.v:864$1314 ($add).
Removed top 6 bits (of 7) from port B of cell conv2d.$verific$add_748$conv2d.v:866$1316 ($add).
Removed top 1 bits (of 10) from port B of cell conv2d.$verific$equal_751$conv2d.v:867$1318 ($eq).
Removed top 15 bits (of 16) from port B of cell conv2d.$verific$add_759$conv2d.v:871$1322 ($add).
Removed top 1 bits (of 17) from port B of cell conv2d.$verific$equal_763$conv2d.v:873$1324 ($eq).
Removed top 2 bits (of 3) from mux cell conv2d.$verific$mux_767$conv2d.v:879$1325 ($mux).
Removed top 1 bits (of 2) from port B of cell conv2d.$verific$equal_814$conv2d.v:857$1356 ($eq).
Removed top 1 bits (of 3) from mux cell conv2d.$verific$select_825$conv2d.v:909$1366 ($pmux).
Removed top 1 bits (of 3) from port B of cell conv2d.$auto$opt_dff.cc:195:make_patterns_logic$4757 ($ne).
Removed top 1 bits (of 6) from mux cell conv2d.$verific$mux_1269$conv2d.v:711$2451 ($mux).
Removed top 3 bits (of 5) from mux cell conv2d.$verific$mux_928$conv2d.v:1045$2461 ($mux).
Removed top 3 bits (of 5) from mux cell conv2d.$verific$mux_940$conv2d.v:1056$2468 ($mux).
Removed top 3 bits (of 5) from mux cell conv2d.$verific$mux_948$conv2d.v:1057$2476 ($mux).
Removed top 9 bits (of 10) from port B of cell conv2d.$verific$add_1010$conv2d.v:1114$2507 ($add).
Removed top 1 bits (of 2) from port B of cell conv2d.$verific$add_1055$conv2d.v:1146$2526 ($add).
Removed top 6 bits (of 7) from port B of cell conv2d.$verific$add_1058$conv2d.v:1149$2528 ($add).
Removed top 1 bits (of 10) from port B of cell conv2d.$verific$equal_1061$conv2d.v:1150$2530 ($eq).
Removed top 1 bits (of 2) from mux cell conv2d.$auto$bmuxmap.cc:60:execute$3574 ($mux).
Removed top 5 bits (of 6) from port B of cell conv2d.$verific$add_1083$conv2d.v:1174$2544 ($add).
Removed top 1 bits (of 7) from port B of cell conv2d.$verific$equal_1086$conv2d.v:1175$2546 ($eq).
Removed top 15 bits (of 16) from port B of cell conv2d.$verific$add_1102$conv2d.v:1192$2550 ($add).
Removed top 4 bits (of 5) from mux cell conv2d.$verific$mux_1120$conv2d.v:1216$2555 ($mux).
Removed top 1 bits (of 4) from port B of cell conv2d.$verific$equal_1144$conv2d.v:1066$2567 ($eq).
Removed top 1 bits (of 4) from port B of cell conv2d.$verific$equal_1147$conv2d.v:1100$2570 ($eq).
Removed top 3 bits (of 4) from port B of cell conv2d.$verific$equal_1149$conv2d.v:1134$2572 ($eq).
Removed top 2 bits (of 4) from port B of cell conv2d.$verific$equal_1150$conv2d.v:1170$2573 ($eq).
Removed top 2 bits (of 4) from port B of cell conv2d.$verific$equal_1151$conv2d.v:1180$2574 ($eq).
Removed top 1 bits (of 4) from port B of cell conv2d.$verific$equal_1152$conv2d.v:1195$2575 ($eq).
Removed top 1 bits (of 4) from port B of cell conv2d.$verific$equal_1153$conv2d.v:1218$2576 ($eq).
Removed top 1 bits (of 5) from mux cell conv2d.$verific$select_1164$conv2d.v:1238$2587 ($pmux).
Removed top 1 bits (of 4) from mux cell conv2d.$auto$bmuxmap.cc:60:execute$3629 ($mux).
Removed top 1 bits (of 4) from mux cell conv2d.$auto$bmuxmap.cc:60:execute$3855 ($mux).
Removed top 2 bits (of 4) from mux cell conv2d.$auto$bmuxmap.cc:60:execute$3856 ($mux).
Removed top 1 bits (of 2) from port B of cell conv2d.$auto$opt_dff.cc:195:make_patterns_logic$4062 ($ne).
Removed top 7 bits (of 20) from port B of cell conv2d.$flatten\t2_3.$verific$and_6$ksa.v:13$3114 ($and).
Removed top 1 bits (of 20) from port Y of cell conv2d.$flatten\t2_3.$verific$and_6$ksa.v:13$3114 ($and).
Removed top 1 bits (of 20) from port A of cell conv2d.$flatten\t2_3.$verific$and_6$ksa.v:13$3114 ($and).
Removed top 7 bits (of 20) from port B of cell conv2d.$flatten\t2_3.$verific$xor_4$ksa.v:12$3112 ($xor).
Removed top 17 bits (of 20) from port B of cell conv2d.$flatten\t2_2.$verific$and_6$ksa.v:13$3114 ($and).
Removed top 1 bits (of 20) from port Y of cell conv2d.$flatten\t2_2.$verific$and_6$ksa.v:13$3114 ($and).
Removed top 1 bits (of 20) from port A of cell conv2d.$flatten\t2_2.$verific$and_6$ksa.v:13$3114 ($and).
Removed top 17 bits (of 20) from port B of cell conv2d.$flatten\t2_2.$verific$xor_4$ksa.v:12$3112 ($xor).
Removed top 11 bits (of 20) from port B of cell conv2d.$flatten\t2_1.$verific$and_6$ksa.v:13$3114 ($and).
Removed top 1 bits (of 20) from port Y of cell conv2d.$flatten\t2_1.$verific$and_6$ksa.v:13$3114 ($and).
Removed top 1 bits (of 20) from port A of cell conv2d.$flatten\t2_1.$verific$and_6$ksa.v:13$3114 ($and).
Removed top 11 bits (of 20) from port B of cell conv2d.$flatten\t2_1.$verific$xor_4$ksa.v:12$3112 ($xor).
Removed top 1 bits (of 11) from port Y of cell conv2d.$flatten\pk2.$verific$or_132$ksa1.v:31$3567 ($or).
Removed top 1 bits (of 11) from port A of cell conv2d.$flatten\pk2.$verific$or_132$ksa1.v:31$3567 ($or).
Removed top 1 bits (of 11) from port B of cell conv2d.$flatten\pk2.$verific$or_132$ksa1.v:31$3567 ($or).
Removed top 9 bits (of 12) from port B of cell conv2d.$flatten\pk1.$verific$and_6$ksa.v:13$2728 ($and).
Removed top 1 bits (of 12) from port Y of cell conv2d.$flatten\pk1.$verific$and_6$ksa.v:13$2728 ($and).
Removed top 1 bits (of 12) from port A of cell conv2d.$flatten\pk1.$verific$and_6$ksa.v:13$2728 ($and).
Removed top 9 bits (of 12) from port B of cell conv2d.$flatten\pk1.$verific$xor_4$ksa.v:12$2726 ($xor).
Removed top 16 bits (of 24) from port B of cell conv2d.$flatten\k7.$verific$and_6$ksa.v:13$3379 ($and).
Removed top 1 bits (of 24) from port Y of cell conv2d.$flatten\k7.$verific$and_6$ksa.v:13$3379 ($and).
Removed top 1 bits (of 24) from port A of cell conv2d.$flatten\k7.$verific$and_6$ksa.v:13$3379 ($and).
Removed top 16 bits (of 24) from port B of cell conv2d.$flatten\k7.$verific$xor_4$ksa.v:12$3377 ($xor).
Removed top 16 bits (of 24) from port B of cell conv2d.$flatten\k6.$verific$and_6$ksa.v:13$3379 ($and).
Removed top 1 bits (of 24) from port Y of cell conv2d.$flatten\k6.$verific$and_6$ksa.v:13$3379 ($and).
Removed top 1 bits (of 24) from port A of cell conv2d.$flatten\k6.$verific$and_6$ksa.v:13$3379 ($and).
Removed top 16 bits (of 24) from port B of cell conv2d.$flatten\k6.$verific$xor_4$ksa.v:12$3377 ($xor).
Removed top 16 bits (of 24) from port B of cell conv2d.$flatten\k5.$verific$and_6$ksa.v:13$3379 ($and).
Removed top 1 bits (of 24) from port Y of cell conv2d.$flatten\k5.$verific$and_6$ksa.v:13$3379 ($and).
Removed top 1 bits (of 24) from port A of cell conv2d.$flatten\k5.$verific$and_6$ksa.v:13$3379 ($and).
Removed top 16 bits (of 24) from port B of cell conv2d.$flatten\k5.$verific$xor_4$ksa.v:12$3377 ($xor).
Removed top 16 bits (of 24) from port B of cell conv2d.$flatten\k4.$verific$and_6$ksa.v:13$3379 ($and).
Removed top 1 bits (of 24) from port Y of cell conv2d.$flatten\k4.$verific$and_6$ksa.v:13$3379 ($and).
Removed top 1 bits (of 24) from port A of cell conv2d.$flatten\k4.$verific$and_6$ksa.v:13$3379 ($and).
Removed top 16 bits (of 24) from port B of cell conv2d.$flatten\k4.$verific$xor_4$ksa.v:12$3377 ($xor).
Removed top 1 bits (of 4) from port B of cell conv2d.$auto$opt_dff.cc:195:make_patterns_logic$4755 ($ne).
Removed top 16 bits (of 24) from port B of cell conv2d.$flatten\k3.$verific$and_6$ksa.v:13$3379 ($and).
Removed top 1 bits (of 24) from port Y of cell conv2d.$flatten\k3.$verific$and_6$ksa.v:13$3379 ($and).
Removed top 1 bits (of 24) from port A of cell conv2d.$flatten\k3.$verific$and_6$ksa.v:13$3379 ($and).
Removed top 16 bits (of 24) from port B of cell conv2d.$flatten\k3.$verific$xor_4$ksa.v:12$3377 ($xor).
Removed top 1 bits (of 4) from port B of cell conv2d.$auto$opt_dff.cc:195:make_patterns_logic$4770 ($ne).
Removed top 2 bits (of 4) from port B of cell conv2d.$auto$opt_dff.cc:195:make_patterns_logic$4785 ($ne).
Removed top 2 bits (of 4) from port B of cell conv2d.$auto$opt_dff.cc:195:make_patterns_logic$4800 ($ne).
Removed top 1 bits (of 4) from port B of cell conv2d.$auto$opt_dff.cc:195:make_patterns_logic$4830 ($ne).
Removed top 1 bits (of 3) from port B of cell conv2d.$auto$opt_dff.cc:195:make_patterns_logic$4832 ($ne).
Removed top 16 bits (of 24) from port B of cell conv2d.$flatten\k2.$verific$and_6$ksa.v:13$3379 ($and).
Removed top 1 bits (of 24) from port Y of cell conv2d.$flatten\k2.$verific$and_6$ksa.v:13$3379 ($and).
Removed top 1 bits (of 24) from port A of cell conv2d.$flatten\k2.$verific$and_6$ksa.v:13$3379 ($and).
Removed top 16 bits (of 24) from port B of cell conv2d.$flatten\k2.$verific$xor_4$ksa.v:12$3377 ($xor).
Removed top 1 bits (of 4) from port B of cell conv2d.$auto$opt_dff.cc:195:make_patterns_logic$4725 ($ne).
Removed top 1 bits (of 3) from port B of cell conv2d.$auto$opt_dff.cc:195:make_patterns_logic$4727 ($ne).
Removed top 1 bits (of 4) from port B of cell conv2d.$auto$opt_dff.cc:195:make_patterns_logic$4740 ($ne).
Removed top 8 bits (of 16) from port B of cell conv2d.$flatten\k16_7.$verific$and_6$ksa.v:13$2897 ($and).
Removed top 1 bits (of 16) from port Y of cell conv2d.$flatten\k16_7.$verific$and_6$ksa.v:13$2897 ($and).
Removed top 1 bits (of 16) from port A of cell conv2d.$flatten\k16_7.$verific$and_6$ksa.v:13$2897 ($and).
Removed top 8 bits (of 16) from port B of cell conv2d.$flatten\k16_7.$verific$xor_4$ksa.v:12$2895 ($xor).
Removed top 8 bits (of 16) from port B of cell conv2d.$flatten\k16_6.$verific$and_6$ksa.v:13$2897 ($and).
Removed top 1 bits (of 16) from port Y of cell conv2d.$flatten\k16_6.$verific$and_6$ksa.v:13$2897 ($and).
Removed top 1 bits (of 16) from port A of cell conv2d.$flatten\k16_6.$verific$and_6$ksa.v:13$2897 ($and).
Removed top 8 bits (of 16) from port B of cell conv2d.$flatten\k16_6.$verific$xor_4$ksa.v:12$2895 ($xor).
Removed top 8 bits (of 16) from port B of cell conv2d.$flatten\k16_5.$verific$and_6$ksa.v:13$2897 ($and).
Removed top 1 bits (of 16) from port Y of cell conv2d.$flatten\k16_5.$verific$and_6$ksa.v:13$2897 ($and).
Removed top 1 bits (of 16) from port A of cell conv2d.$flatten\k16_5.$verific$and_6$ksa.v:13$2897 ($and).
Removed top 8 bits (of 16) from port B of cell conv2d.$flatten\k16_5.$verific$xor_4$ksa.v:12$2895 ($xor).
Removed top 8 bits (of 16) from port B of cell conv2d.$flatten\k16_4.$verific$and_6$ksa.v:13$2897 ($and).
Removed top 1 bits (of 16) from port Y of cell conv2d.$flatten\k16_4.$verific$and_6$ksa.v:13$2897 ($and).
Removed top 1 bits (of 16) from port A of cell conv2d.$flatten\k16_4.$verific$and_6$ksa.v:13$2897 ($and).
Removed top 8 bits (of 16) from port B of cell conv2d.$flatten\k16_4.$verific$xor_4$ksa.v:12$2895 ($xor).
Removed top 3 bits (of 4) from port B of cell conv2d.$auto$opt_dff.cc:195:make_patterns_logic$4420 ($ne).
Removed top 2 bits (of 3) from port B of cell conv2d.$auto$opt_dff.cc:195:make_patterns_logic$4422 ($ne).
Removed top 1 bits (of 2) from port B of cell conv2d.$auto$opt_dff.cc:195:make_patterns_logic$4424 ($ne).
Removed top 1 bits (of 5) from port B of cell conv2d.$auto$opt_dff.cc:195:make_patterns_logic$4429 ($ne).
Removed top 2 bits (of 5) from port B of cell conv2d.$auto$opt_dff.cc:195:make_patterns_logic$4431 ($ne).
Removed top 3 bits (of 5) from port B of cell conv2d.$auto$opt_dff.cc:195:make_patterns_logic$4437 ($ne).
Removed top 2 bits (of 5) from port B of cell conv2d.$auto$opt_dff.cc:195:make_patterns_logic$4439 ($ne).
Removed top 8 bits (of 16) from port B of cell conv2d.$flatten\k16_3.$verific$and_6$ksa.v:13$2897 ($and).
Removed top 1 bits (of 16) from port Y of cell conv2d.$flatten\k16_3.$verific$and_6$ksa.v:13$2897 ($and).
Removed top 1 bits (of 16) from port A of cell conv2d.$flatten\k16_3.$verific$and_6$ksa.v:13$2897 ($and).
Removed top 8 bits (of 16) from port B of cell conv2d.$flatten\k16_3.$verific$xor_4$ksa.v:12$2895 ($xor).
Removed top 8 bits (of 16) from port B of cell conv2d.$flatten\k16_2.$verific$and_6$ksa.v:13$2897 ($and).
Removed top 1 bits (of 16) from port Y of cell conv2d.$flatten\k16_2.$verific$and_6$ksa.v:13$2897 ($and).
Removed top 1 bits (of 16) from port A of cell conv2d.$flatten\k16_2.$verific$and_6$ksa.v:13$2897 ($and).
Removed top 8 bits (of 16) from port B of cell conv2d.$flatten\k16_2.$verific$xor_4$ksa.v:12$2895 ($xor).
Removed top 8 bits (of 16) from port B of cell conv2d.$flatten\k16_1.$verific$and_6$ksa.v:13$2897 ($and).
Removed top 1 bits (of 16) from port Y of cell conv2d.$flatten\k16_1.$verific$and_6$ksa.v:13$2897 ($and).
Removed top 1 bits (of 16) from port A of cell conv2d.$flatten\k16_1.$verific$and_6$ksa.v:13$2897 ($and).
Removed top 8 bits (of 16) from port B of cell conv2d.$flatten\k16_1.$verific$xor_4$ksa.v:12$2895 ($xor).
Removed top 8 bits (of 16) from port B of cell conv2d.$flatten\k16_0.$verific$and_6$ksa.v:13$2897 ($and).
Removed top 1 bits (of 16) from port Y of cell conv2d.$flatten\k16_0.$verific$and_6$ksa.v:13$2897 ($and).
Removed top 1 bits (of 16) from port A of cell conv2d.$flatten\k16_0.$verific$and_6$ksa.v:13$2897 ($and).
Removed top 8 bits (of 16) from port B of cell conv2d.$flatten\k16_0.$verific$xor_4$ksa.v:12$2895 ($xor).
Removed top 2 bits (of 5) from port B of cell conv2d.$auto$opt_dff.cc:195:make_patterns_logic$4167 ($ne).
Removed top 2 bits (of 4) from port B of cell conv2d.$auto$opt_dff.cc:195:make_patterns_logic$4171 ($ne).
Removed top 1 bits (of 4) from port B of cell conv2d.$auto$opt_dff.cc:195:make_patterns_logic$4173 ($ne).
Removed top 16 bits (of 24) from port B of cell conv2d.$flatten\k1.$verific$and_6$ksa.v:13$3379 ($and).
Removed top 1 bits (of 24) from port Y of cell conv2d.$flatten\k1.$verific$and_6$ksa.v:13$3379 ($and).
Removed top 1 bits (of 24) from port A of cell conv2d.$flatten\k1.$verific$and_6$ksa.v:13$3379 ($and).
Removed top 16 bits (of 24) from port B of cell conv2d.$flatten\k1.$verific$xor_4$ksa.v:12$3377 ($xor).
Removed top 2 bits (of 3) from port B of cell conv2d.$auto$opt_dff.cc:195:make_patterns_logic$4060 ($ne).
Removed top 1 bits (of 3) from port B of cell conv2d.$auto$opt_dff.cc:195:make_patterns_logic$4027 ($ne).
Removed top 1 bits (of 4) from port B of cell conv2d.$auto$opt_dff.cc:195:make_patterns_logic$4025 ($ne).
Removed top 16 bits (of 24) from port B of cell conv2d.$flatten\k0.$verific$and_6$ksa.v:13$3379 ($and).
Removed top 1 bits (of 24) from port Y of cell conv2d.$flatten\k0.$verific$and_6$ksa.v:13$3379 ($and).
Removed top 1 bits (of 24) from port A of cell conv2d.$flatten\k0.$verific$and_6$ksa.v:13$3379 ($and).
Removed top 16 bits (of 24) from port B of cell conv2d.$flatten\k0.$verific$xor_4$ksa.v:12$3377 ($xor).
Removed top 1 bits (of 3) from mux cell conv2d.$verific$mux_370$conv2d.v:618$1098 ($mux).
Removed top 1 bits (of 3) from mux cell conv2d.$verific$mux_396$conv2d.v:638$1116 ($mux).
Removed top 1 bits (of 3) from mux cell conv2d.$verific$mux_404$conv2d.v:644$1121 ($mux).
Removed top 1 bits (of 3) from mux cell conv2d.$verific$mux_618$conv2d.v:779$1218 ($mux).
Removed top 1 bits (of 3) from mux cell conv2d.$verific$mux_787$conv2d.v:886$1343 ($mux).
Removed top 1 bits (of 3) from mux cell conv2d.$verific$mux_795$conv2d.v:894$1347 ($mux).
Removed top 1 bits (of 3) from mux cell conv2d.$verific$mux_804$conv2d.v:904$1351 ($mux).
Removed top 1 bits (of 5) from mux cell conv2d.$verific$mux_956$conv2d.v:1058$2484 ($mux).
Removed top 1 bits (of 5) from mux cell conv2d.$verific$mux_993$conv2d.v:1098$2498 ($mux).
Removed top 1 bits (of 5) from mux cell conv2d.$verific$mux_1019$conv2d.v:1119$2515 ($mux).
Removed top 1 bits (of 5) from mux cell conv2d.$verific$mux_1077$conv2d.v:1167$2541 ($mux).
Removed top 1 bits (of 5) from mux cell conv2d.$verific$mux_1139$conv2d.v:1236$2562 ($mux).
Removed top 1 bits (of 11) from port Y of cell conv2d.$flatten\pk2.$verific$and_133$ksa1.v:31$3566 ($and).
Removed top 1 bits (of 11) from port A of cell conv2d.$flatten\pk2.$verific$and_133$ksa1.v:31$3566 ($and).
Removed top 1 bits (of 11) from port B of cell conv2d.$flatten\pk2.$verific$and_133$ksa1.v:31$3566 ($and).
Removed top 1 bits (of 11) from port Y of cell conv2d.$flatten\pk2.$verific$or_129$ksa1.v:30$3564 ($or).
Removed top 1 bits (of 11) from port A of cell conv2d.$flatten\pk2.$verific$or_129$ksa1.v:30$3564 ($or).
Removed top 1 bits (of 11) from port B of cell conv2d.$flatten\pk2.$verific$or_129$ksa1.v:30$3564 ($or).
Removed top 1 bits (of 3) from mux cell conv2d.$verific$mux_389$conv2d.v:637$1109 ($mux).
Removed top 1 bits (of 3) from mux cell conv2d.$verific$mux_614$conv2d.v:776$1216 ($mux).
Removed top 1 bits (of 3) from mux cell conv2d.$verific$mux_776$conv2d.v:885$1332 ($mux).
Removed top 1 bits (of 3) from mux cell conv2d.$verific$mux_792$conv2d.v:891$1346 ($mux).
Removed top 1 bits (of 5) from mux cell conv2d.$verific$mux_1006$conv2d.v:1108$2506 ($mux).
Removed top 1 bits (of 5) from mux cell conv2d.$verific$mux_1070$conv2d.v:1163$2536 ($mux).
Removed top 1 bits (of 11) from port Y of cell conv2d.$flatten\pk2.$verific$and_130$ksa1.v:30$3563 ($and).
Removed top 1 bits (of 11) from port A of cell conv2d.$flatten\pk2.$verific$and_130$ksa1.v:30$3563 ($and).
Removed top 1 bits (of 11) from port B of cell conv2d.$flatten\pk2.$verific$and_130$ksa1.v:30$3563 ($and).
Removed top 1 bits (of 12) from port Y of cell conv2d.$flatten\pk2.$verific$and_6$ksa1.v:18$3547 ($and).
Removed top 1 bits (of 12) from port A of cell conv2d.$flatten\pk2.$verific$and_6$ksa1.v:18$3547 ($and).
Removed top 1 bits (of 12) from port B of cell conv2d.$flatten\pk2.$verific$and_6$ksa1.v:18$3547 ($and).
Removed cell conv2d.$flatten\pk2.$verific$i116$ksa1.v:29$3560 ($and).
Removed top 1 bits (of 4) from wire conv2d.$auto$bmuxmap.cc:58:execute$3572.
Removed top 128 bits (of 256) from wire conv2d.$auto$bmuxmap.cc:58:execute$3577.
Removed top 64 bits (of 128) from wire conv2d.$auto$bmuxmap.cc:58:execute$3586.
Removed top 32 bits (of 64) from wire conv2d.$auto$bmuxmap.cc:58:execute$3591.
Removed top 128 bits (of 256) from wire conv2d.$auto$bmuxmap.cc:58:execute$3606.
Removed top 64 bits (of 128) from wire conv2d.$auto$bmuxmap.cc:58:execute$3615.
Removed top 32 bits (of 64) from wire conv2d.$auto$bmuxmap.cc:58:execute$3620.
Removed top 12 bits (of 32) from wire conv2d.$auto$bmuxmap.cc:58:execute$3625.
Removed top 4 bits (of 16) from wire conv2d.$auto$bmuxmap.cc:58:execute$3634.
Removed top 39 bits (of 104) from wire conv2d.$auto$bmuxmap.cc:58:execute$3644.
Removed top 60 bits (of 160) from wire conv2d.$auto$bmuxmap.cc:58:execute$3663.
Removed top 20 bits (of 80) from wire conv2d.$auto$bmuxmap.cc:58:execute$3672.
Removed top 60 bits (of 160) from wire conv2d.$auto$bmuxmap.cc:58:execute$3682.
Removed top 20 bits (of 80) from wire conv2d.$auto$bmuxmap.cc:58:execute$3691.
Removed top 24 bits (of 192) from wire conv2d.$auto$bmuxmap.cc:58:execute$3701.
Removed top 24 bits (of 192) from wire conv2d.$auto$bmuxmap.cc:58:execute$3720.
Removed top 24 bits (of 192) from wire conv2d.$auto$bmuxmap.cc:58:execute$3739.
Removed top 24 bits (of 192) from wire conv2d.$auto$bmuxmap.cc:58:execute$3758.
Removed top 24 bits (of 192) from wire conv2d.$auto$bmuxmap.cc:58:execute$3777.
Removed top 24 bits (of 192) from wire conv2d.$auto$bmuxmap.cc:58:execute$3796.
Removed top 24 bits (of 192) from wire conv2d.$auto$bmuxmap.cc:58:execute$3815.
Removed top 24 bits (of 192) from wire conv2d.$auto$bmuxmap.cc:58:execute$3834.
Removed top 4 bits (of 32) from wire conv2d.$auto$bmuxmap.cc:58:execute$3853.
Removed top 12 bits (of 96) from wire conv2d.$auto$bmuxmap.cc:58:execute$3877.
Removed top 12 bits (of 96) from wire conv2d.$auto$bmuxmap.cc:58:execute$3896.
Removed top 1 bits (of 11) from wire conv2d.$flatten\pk2.$verific$n203$3540.
Removed top 1 bits (of 5) from wire conv2d.$verific$n10063$611.
Removed top 1 bits (of 5) from wire conv2d.$verific$n10104$613.
Removed top 1 bits (of 5) from wire conv2d.$verific$n10167$619.
Removed top 1 bits (of 5) from wire conv2d.$verific$n10505$645.
Removed top 1 bits (of 5) from wire conv2d.$verific$n10567$649.
Removed top 4 bits (of 5) from wire conv2d.$verific$n11104$682.
Removed top 1 bits (of 5) from wire conv2d.$verific$n11228$690.
Removed top 1 bits (of 5) from wire conv2d.$verific$n11452$700.
Removed top 1 bits (of 4) from wire conv2d.$verific$n4415$375.
Removed top 1 bits (of 3) from wire conv2d.$verific$n4829$399.
Removed top 1 bits (of 3) from wire conv2d.$verific$n4944$406.
Removed top 1 bits (of 3) from wire conv2d.$verific$n5015$410.
Removed top 1 bits (of 3) from wire conv2d.$verific$n5056$413.
Removed top 1 bits (of 3) from wire conv2d.$verific$n5119$418.
Removed top 1 bits (of 15) from wire conv2d.$verific$n5356$428.
Removed top 1 bits (of 14) from wire conv2d.$verific$n5560$437.
Removed top 1 bits (of 3) from wire conv2d.$verific$n5678$443.
Removed top 1 bits (of 3) from wire conv2d.$verific$n5731$448.
Removed top 1 bits (of 3) from wire conv2d.$verific$n5784$453.
Removed top 1 bits (of 3) from wire conv2d.$verific$n5891$460.
Removed top 1 bits (of 3) from wire conv2d.$verific$n6531$483.
Removed top 1 bits (of 3) from wire conv2d.$verific$n6550$485.
Removed top 1 bits (of 3) from wire conv2d.$verific$n6643$492.
Removed top 2 bits (of 3) from wire conv2d.$verific$n8023$517.
Removed top 1 bits (of 3) from wire conv2d.$verific$n8062$521.
Removed top 1 bits (of 3) from wire conv2d.$verific$n8155$527.
Removed top 1 bits (of 3) from wire conv2d.$verific$n8175$529.
Removed top 1 bits (of 3) from wire conv2d.$verific$n8214$531.
Removed top 1 bits (of 3) from wire conv2d.$verific$n8290$537.
Removed top 3 bits (of 5) from wire conv2d.$verific$n9639$580.
Removed top 3 bits (of 5) from wire conv2d.$verific$n9719$584.
Removed top 3 bits (of 5) from wire conv2d.$verific$n9774$589.
Removed top 1 bits (of 5) from wire conv2d.$verific$n9833$594.
Removed top 1 bits (of 5) from wire conv2d.fsm_conv2d.
Removed top 1 bits (of 3) from wire conv2d.fsm_getbias.
Removed top 1 bits (of 3) from wire conv2d.fsm_getfilters.
Removed top 1 bits (of 3) from wire conv2d.fsm_getpixels.

yosys> peepopt

3.57. Executing PEEPOPT pass (run peephole optimizers).

yosys> opt_clean

3.58. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \conv2d..
Removed 0 unused cells and 65 unused wires.
<suppressed ~1 debug messages>

yosys> bmuxmap

3.59. Executing BMUXMAP pass.

yosys> demuxmap

3.60. Executing DEMUXMAP pass.

yosys> clean_zerowidth

yosys> alumacc

3.61. Executing ALUMACC pass (create $alu and $macc cells).
Extracting $alu and $macc cells in module conv2d:
  creating $macc model for $verific$add_1010$conv2d.v:1114$2507 ($add).
  creating $macc model for $verific$add_1055$conv2d.v:1146$2526 ($add).
  creating $macc model for $verific$add_1058$conv2d.v:1149$2528 ($add).
  creating $macc model for $verific$add_1083$conv2d.v:1174$2544 ($add).
  creating $macc model for $verific$add_1102$conv2d.v:1192$2550 ($add).
  creating $macc model for $verific$add_190$conv2d.v:409$995 ($add).
  creating $macc model for $verific$add_202$conv2d.v:418$1004 ($add).
  creating $macc model for $verific$add_291$conv2d.v:540$1054 ($add).
  creating $macc model for $verific$add_354$conv2d.v:604$1089 ($add).
  creating $macc model for $verific$add_381$conv2d.v:628$1103 ($add).
  creating $macc model for $verific$add_387$conv2d.v:636$1107 ($add).
  creating $macc model for $verific$add_433$conv2d.v:667$1141 ($add).
  creating $macc model for $verific$add_451$conv2d.v:679$1153 ($add).
  creating $macc model for $verific$add_457$conv2d.v:683$1159 ($add).
  creating $macc model for $verific$add_463$conv2d.v:686$1165 ($add).
  creating $macc model for $verific$add_465$conv2d.v:687$1167 ($add).
  creating $macc model for $verific$add_719$conv2d.v:839$1303 ($add).
  creating $macc model for $verific$add_745$conv2d.v:864$1314 ($add).
  creating $macc model for $verific$add_748$conv2d.v:866$1316 ($add).
  creating $macc model for $verific$add_759$conv2d.v:871$1322 ($add).
  creating $macc model for $verific$add_895$conv2d.v:1015$2433 ($add).
  creating $macc model for $verific$add_897$conv2d.v:1016$2435 ($add).
  creating $macc model for $verific$add_899$conv2d.v:1017$2437 ($add).
  creating $macc model for $verific$add_901$conv2d.v:1018$2439 ($add).
  creating $macc model for $verific$add_903$conv2d.v:1019$2441 ($add).
  creating $macc model for $verific$add_905$conv2d.v:1020$2443 ($add).
  creating $macc model for $verific$add_907$conv2d.v:1021$2445 ($add).
  creating $macc model for $verific$add_909$conv2d.v:1022$2447 ($add).
  creating $macc model for $verific$add_921$conv2d.v:1038$2457 ($add).
  creating $macc model for $verific$sub_436$conv2d.v:670$1143 ($sub).
  creating $macc model for $verific$sub_461$conv2d.v:685$1162 ($sub).
  creating $macc model for $verific$sub_692$conv2d.v:801$1291 ($sub).
  creating $macc model for $verific$sub_694$conv2d.v:802$1293 ($sub).
  creating $macc model for $verific$sub_696$conv2d.v:803$1295 ($sub).
  creating $macc model for $verific$sub_698$conv2d.v:804$1297 ($sub).
  creating $alu model for $macc $verific$sub_698$conv2d.v:804$1297.
  creating $alu model for $macc $verific$sub_696$conv2d.v:803$1295.
  creating $alu model for $macc $verific$sub_694$conv2d.v:802$1293.
  creating $alu model for $macc $verific$sub_692$conv2d.v:801$1291.
  creating $alu model for $macc $verific$sub_461$conv2d.v:685$1162.
  creating $alu model for $macc $verific$sub_436$conv2d.v:670$1143.
  creating $alu model for $macc $verific$add_921$conv2d.v:1038$2457.
  creating $alu model for $macc $verific$add_909$conv2d.v:1022$2447.
  creating $alu model for $macc $verific$add_907$conv2d.v:1021$2445.
  creating $alu model for $macc $verific$add_905$conv2d.v:1020$2443.
  creating $alu model for $macc $verific$add_903$conv2d.v:1019$2441.
  creating $alu model for $macc $verific$add_901$conv2d.v:1018$2439.
  creating $alu model for $macc $verific$add_899$conv2d.v:1017$2437.
  creating $alu model for $macc $verific$add_897$conv2d.v:1016$2435.
  creating $alu model for $macc $verific$add_895$conv2d.v:1015$2433.
  creating $alu model for $macc $verific$add_759$conv2d.v:871$1322.
  creating $alu model for $macc $verific$add_748$conv2d.v:866$1316.
  creating $alu model for $macc $verific$add_745$conv2d.v:864$1314.
  creating $alu model for $macc $verific$add_719$conv2d.v:839$1303.
  creating $alu model for $macc $verific$add_465$conv2d.v:687$1167.
  creating $alu model for $macc $verific$add_463$conv2d.v:686$1165.
  creating $alu model for $macc $verific$add_457$conv2d.v:683$1159.
  creating $alu model for $macc $verific$add_451$conv2d.v:679$1153.
  creating $alu model for $macc $verific$add_433$conv2d.v:667$1141.
  creating $alu model for $macc $verific$add_387$conv2d.v:636$1107.
  creating $alu model for $macc $verific$add_381$conv2d.v:628$1103.
  creating $alu model for $macc $verific$add_354$conv2d.v:604$1089.
  creating $alu model for $macc $verific$add_291$conv2d.v:540$1054.
  creating $alu model for $macc $verific$add_202$conv2d.v:418$1004.
  creating $alu model for $macc $verific$add_190$conv2d.v:409$995.
  creating $alu model for $macc $verific$add_1102$conv2d.v:1192$2550.
  creating $alu model for $macc $verific$add_1083$conv2d.v:1174$2544.
  creating $alu model for $macc $verific$add_1058$conv2d.v:1149$2528.
  creating $alu model for $macc $verific$add_1055$conv2d.v:1146$2526.
  creating $alu model for $macc $verific$add_1010$conv2d.v:1114$2507.
  creating $alu model for $verific$LessThan_468$conv2d.v:688$1169 ($lt): new $alu
  creating $alu model for $verific$LessThan_469$conv2d.v:689$1170 ($le): new $alu
  creating $alu model for $verific$LessThan_916$conv2d.v:1030$2453 ($lt): new $alu
  creating $alu cell for $verific$LessThan_916$conv2d.v:1030$2453: $auto$alumacc.cc:485:replace_alu$5065
  creating $alu cell for $verific$LessThan_469$conv2d.v:689$1170: $auto$alumacc.cc:485:replace_alu$5070
  creating $alu cell for $verific$LessThan_468$conv2d.v:688$1169: $auto$alumacc.cc:485:replace_alu$5079
  creating $alu cell for $verific$add_1010$conv2d.v:1114$2507: $auto$alumacc.cc:485:replace_alu$5090
  creating $alu cell for $verific$add_1055$conv2d.v:1146$2526: $auto$alumacc.cc:485:replace_alu$5093
  creating $alu cell for $verific$add_1058$conv2d.v:1149$2528: $auto$alumacc.cc:485:replace_alu$5096
  creating $alu cell for $verific$add_1083$conv2d.v:1174$2544: $auto$alumacc.cc:485:replace_alu$5099
  creating $alu cell for $verific$add_1102$conv2d.v:1192$2550: $auto$alumacc.cc:485:replace_alu$5102
  creating $alu cell for $verific$add_190$conv2d.v:409$995: $auto$alumacc.cc:485:replace_alu$5105
  creating $alu cell for $verific$add_202$conv2d.v:418$1004: $auto$alumacc.cc:485:replace_alu$5108
  creating $alu cell for $verific$add_291$conv2d.v:540$1054: $auto$alumacc.cc:485:replace_alu$5111
  creating $alu cell for $verific$add_354$conv2d.v:604$1089: $auto$alumacc.cc:485:replace_alu$5114
  creating $alu cell for $verific$add_381$conv2d.v:628$1103: $auto$alumacc.cc:485:replace_alu$5117
  creating $alu cell for $verific$add_387$conv2d.v:636$1107: $auto$alumacc.cc:485:replace_alu$5120
  creating $alu cell for $verific$add_433$conv2d.v:667$1141: $auto$alumacc.cc:485:replace_alu$5123
  creating $alu cell for $verific$add_451$conv2d.v:679$1153: $auto$alumacc.cc:485:replace_alu$5126
  creating $alu cell for $verific$add_457$conv2d.v:683$1159: $auto$alumacc.cc:485:replace_alu$5129
  creating $alu cell for $verific$add_463$conv2d.v:686$1165: $auto$alumacc.cc:485:replace_alu$5132
  creating $alu cell for $verific$add_465$conv2d.v:687$1167: $auto$alumacc.cc:485:replace_alu$5135
  creating $alu cell for $verific$add_719$conv2d.v:839$1303: $auto$alumacc.cc:485:replace_alu$5138
  creating $alu cell for $verific$add_745$conv2d.v:864$1314: $auto$alumacc.cc:485:replace_alu$5141
  creating $alu cell for $verific$add_748$conv2d.v:866$1316: $auto$alumacc.cc:485:replace_alu$5144
  creating $alu cell for $verific$add_759$conv2d.v:871$1322: $auto$alumacc.cc:485:replace_alu$5147
  creating $alu cell for $verific$add_895$conv2d.v:1015$2433: $auto$alumacc.cc:485:replace_alu$5150
  creating $alu cell for $verific$add_897$conv2d.v:1016$2435: $auto$alumacc.cc:485:replace_alu$5153
  creating $alu cell for $verific$add_899$conv2d.v:1017$2437: $auto$alumacc.cc:485:replace_alu$5156
  creating $alu cell for $verific$add_901$conv2d.v:1018$2439: $auto$alumacc.cc:485:replace_alu$5159
  creating $alu cell for $verific$add_903$conv2d.v:1019$2441: $auto$alumacc.cc:485:replace_alu$5162
  creating $alu cell for $verific$add_905$conv2d.v:1020$2443: $auto$alumacc.cc:485:replace_alu$5165
  creating $alu cell for $verific$add_907$conv2d.v:1021$2445: $auto$alumacc.cc:485:replace_alu$5168
  creating $alu cell for $verific$add_909$conv2d.v:1022$2447: $auto$alumacc.cc:485:replace_alu$5171
  creating $alu cell for $verific$add_921$conv2d.v:1038$2457: $auto$alumacc.cc:485:replace_alu$5174
  creating $alu cell for $verific$sub_436$conv2d.v:670$1143: $auto$alumacc.cc:485:replace_alu$5177
  creating $alu cell for $verific$sub_461$conv2d.v:685$1162: $auto$alumacc.cc:485:replace_alu$5180
  creating $alu cell for $verific$sub_692$conv2d.v:801$1291: $auto$alumacc.cc:485:replace_alu$5183
  creating $alu cell for $verific$sub_694$conv2d.v:802$1293: $auto$alumacc.cc:485:replace_alu$5186
  creating $alu cell for $verific$sub_696$conv2d.v:803$1295: $auto$alumacc.cc:485:replace_alu$5189
  creating $alu cell for $verific$sub_698$conv2d.v:804$1297: $auto$alumacc.cc:485:replace_alu$5192
  created 38 $alu and 0 $macc cells.

yosys> opt_expr

3.62. Executing OPT_EXPR pass (perform const folding).
Optimizing module conv2d.
<suppressed ~8 debug messages>

yosys> opt_merge -nomux

3.63. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\conv2d'.
Removed a total of 0 cells.

yosys> opt_muxtree

3.64. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \conv2d..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Removed 0 multiplexer ports.
<suppressed ~123 debug messages>

yosys> opt_reduce

3.65. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \conv2d.
Performed a total of 0 changes.

yosys> opt_merge

3.66. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\conv2d'.
<suppressed ~3 debug messages>
Removed a total of 1 cells.

yosys> opt_share

3.67. Executing OPT_SHARE pass.

yosys> opt_dff -nosdff -nodffe

3.68. Executing OPT_DFF pass (perform DFF optimizations).

yosys> opt_clean

3.69. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \conv2d..
Removed 0 unused cells and 4 unused wires.
<suppressed ~1 debug messages>

yosys> opt_expr

3.70. Executing OPT_EXPR pass (perform const folding).
Optimizing module conv2d.

yosys> opt_muxtree

3.71. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \conv2d..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Removed 0 multiplexer ports.
<suppressed ~124 debug messages>

yosys> opt_reduce

3.72. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \conv2d.
Performed a total of 0 changes.

yosys> opt_merge

3.73. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\conv2d'.
Removed a total of 0 cells.

yosys> opt_share

3.74. Executing OPT_SHARE pass.

yosys> opt_dff -nosdff -nodffe

3.75. Executing OPT_DFF pass (perform DFF optimizations).

yosys> opt_clean

3.76. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \conv2d..

yosys> opt_expr

3.77. Executing OPT_EXPR pass (perform const folding).
Optimizing module conv2d.
MAX OPT ITERATION = 2

yosys> stat

3.78. Printing statistics.

=== conv2d ===

   Number of wires:               1924
   Number of wire bits:          15821
   Number of public wires:         427
   Number of public wire bits:    6582
   Number of memories:               0
   Number of memory bits:            0
   Number of processes:              0
   Number of cells:               3076
     $adff                          27
     $adffe                         85
     $aldff                          1
     $aldffe                         6
     $alu                           38
     $and                         1098
     $eq                            40
     $logic_not                      5
     $mux                          361
     $ne                            97
     $not                           45
     $or                           712
     $pmux                          61
     $reduce_and                    62
     $reduce_bool                    7
     $reduce_or                     36
     $xor                          395


yosys> memory -nomap

3.79. Executing MEMORY pass.

yosys> opt_mem

3.79.1. Executing OPT_MEM pass (optimize memories).
Performed a total of 0 transformations.

yosys> opt_mem_priority

3.79.2. Executing OPT_MEM_PRIORITY pass (removing unnecessary memory write priority relations).
Performed a total of 0 transformations.

yosys> opt_mem_feedback

3.79.3. Executing OPT_MEM_FEEDBACK pass (finding memory read-to-write feedback paths).

yosys> memory_bmux2rom

3.79.4. Executing MEMORY_BMUX2ROM pass (converting muxes to ROMs).

yosys> memory_dff

3.79.5. Executing MEMORY_DFF pass (merging $dff cells to $memrd).

yosys> opt_clean

3.79.6. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \conv2d..

yosys> memory_share

3.79.7. Executing MEMORY_SHARE pass (consolidating $memrd/$memwr cells).

yosys> opt_mem_widen

3.79.8. Executing OPT_MEM_WIDEN pass (optimize memories where all ports are wide).
Performed a total of 0 transformations.

yosys> opt_clean

3.79.9. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \conv2d..

yosys> memory_collect

3.79.10. Executing MEMORY_COLLECT pass (generating $mem cells).

yosys> stat

3.80. Printing statistics.

=== conv2d ===

   Number of wires:               1924
   Number of wire bits:          15821
   Number of public wires:         427
   Number of public wire bits:    6582
   Number of memories:               0
   Number of memory bits:            0
   Number of processes:              0
   Number of cells:               3076
     $adff                          27
     $adffe                         85
     $aldff                          1
     $aldffe                         6
     $alu                           38
     $and                         1098
     $eq                            40
     $logic_not                      5
     $mux                          361
     $ne                            97
     $not                           45
     $or                           712
     $pmux                          61
     $reduce_and                    62
     $reduce_bool                    7
     $reduce_or                     36
     $xor                          395


yosys> muxpack

3.81. Executing MUXPACK pass ($mux cell cascades to $pmux).
Converted 0 (p)mux cells into 0 pmux cells.
<suppressed ~296 debug messages>

yosys> opt_clean

3.82. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \conv2d..

yosys> pmuxtree

3.83. Executing PMUXTREE pass.

yosys> muxpack

3.84. Executing MUXPACK pass ($mux cell cascades to $pmux).
Converting conv2d.$auto$pmuxtree.cc:65:recursive_mux_generator$5899 ... conv2d.$auto$pmuxtree.cc:65:recursive_mux_generator$5901 to a pmux with 2 cases.
Converting conv2d.$auto$pmuxtree.cc:65:recursive_mux_generator$5697 ... conv2d.$auto$pmuxtree.cc:65:recursive_mux_generator$5699 to a pmux with 2 cases.
Converting conv2d.$auto$pmuxtree.cc:65:recursive_mux_generator$5693 ... conv2d.$auto$pmuxtree.cc:65:recursive_mux_generator$5695 to a pmux with 2 cases.
Converting conv2d.$auto$pmuxtree.cc:65:recursive_mux_generator$5665 ... conv2d.$auto$pmuxtree.cc:65:recursive_mux_generator$5667 to a pmux with 2 cases.
Converting conv2d.$auto$pmuxtree.cc:65:recursive_mux_generator$5657 ... conv2d.$auto$pmuxtree.cc:65:recursive_mux_generator$5659 to a pmux with 2 cases.
Converting conv2d.$auto$pmuxtree.cc:65:recursive_mux_generator$5587 ... conv2d.$auto$pmuxtree.cc:65:recursive_mux_generator$5589 to a pmux with 2 cases.
Converting conv2d.$auto$pmuxtree.cc:65:recursive_mux_generator$5531 ... conv2d.$auto$pmuxtree.cc:65:recursive_mux_generator$5533 to a pmux with 2 cases.
Converting conv2d.$auto$pmuxtree.cc:65:recursive_mux_generator$5517 ... conv2d.$auto$pmuxtree.cc:65:recursive_mux_generator$5519 to a pmux with 2 cases.
Converting conv2d.$auto$pmuxtree.cc:65:recursive_mux_generator$5503 ... conv2d.$auto$pmuxtree.cc:65:recursive_mux_generator$5505 to a pmux with 2 cases.
Converting conv2d.$auto$pmuxtree.cc:65:recursive_mux_generator$5489 ... conv2d.$auto$pmuxtree.cc:65:recursive_mux_generator$5491 to a pmux with 2 cases.
Converting conv2d.$auto$pmuxtree.cc:65:recursive_mux_generator$5475 ... conv2d.$auto$pmuxtree.cc:65:recursive_mux_generator$5477 to a pmux with 2 cases.
Converting conv2d.$auto$pmuxtree.cc:65:recursive_mux_generator$5461 ... conv2d.$auto$pmuxtree.cc:65:recursive_mux_generator$5463 to a pmux with 2 cases.
Converting conv2d.$auto$pmuxtree.cc:65:recursive_mux_generator$5447 ... conv2d.$auto$pmuxtree.cc:65:recursive_mux_generator$5449 to a pmux with 2 cases.
Converting conv2d.$auto$pmuxtree.cc:65:recursive_mux_generator$5433 ... conv2d.$auto$pmuxtree.cc:65:recursive_mux_generator$5435 to a pmux with 2 cases.
Converted 28 (p)mux cells into 14 pmux cells.
<suppressed ~470 debug messages>

yosys> memory_map

3.85. Executing MEMORY_MAP pass (converting memories to logic and flip-flops).

yosys> stat

3.86. Printing statistics.

=== conv2d ===

   Number of wires:               2309
   Number of wire bits:          18403
   Number of public wires:         427
   Number of public wire bits:    6582
   Number of memories:               0
   Number of memory bits:            0
   Number of processes:              0
   Number of cells:               3386
     $adff                          27
     $adffe                         85
     $aldff                          1
     $aldffe                         6
     $alu                           38
     $and                         1098
     $eq                            40
     $logic_not                      5
     $mux                          543
     $ne                            97
     $not                          106
     $or                           757
     $pmux                          14
     $reduce_and                    62
     $reduce_bool                    7
     $reduce_or                    105
     $xor                          395


yosys> techmap -map +/techmap.v -map +/rapidsilicon/genesis/arith_map.v

3.87. Executing TECHMAP pass (map to technology primitives).

3.87.1. Executing Verilog-2005 frontend: /nfs_scratch/scratch/Vorak/aram/Workspace/Raptor/yosys_verific_rs/yosys/install/bin/../share/yosys/techmap.v
Parsing Verilog input from `/nfs_scratch/scratch/Vorak/aram/Workspace/Raptor/yosys_verific_rs/yosys/install/bin/../share/yosys/techmap.v' to AST representation.
Generating RTLIL representation for module `\_90_simplemap_bool_ops'.
Generating RTLIL representation for module `\_90_simplemap_reduce_ops'.
Generating RTLIL representation for module `\_90_simplemap_logic_ops'.
Generating RTLIL representation for module `\_90_simplemap_compare_ops'.
Generating RTLIL representation for module `\_90_simplemap_various'.
Generating RTLIL representation for module `\_90_simplemap_registers'.
Generating RTLIL representation for module `\_90_shift_ops_shr_shl_sshl_sshr'.
Generating RTLIL representation for module `\_90_shift_shiftx'.
Generating RTLIL representation for module `\_90_fa'.
Generating RTLIL representation for module `\_90_lcu'.
Generating RTLIL representation for module `\_90_alu'.
Generating RTLIL representation for module `\_90_macc'.
Generating RTLIL representation for module `\_90_alumacc'.
Generating RTLIL representation for module `\$__div_mod_u'.
Generating RTLIL representation for module `\$__div_mod_trunc'.
Generating RTLIL representation for module `\_90_div'.
Generating RTLIL representation for module `\_90_mod'.
Generating RTLIL representation for module `\$__div_mod_floor'.
Generating RTLIL representation for module `\_90_divfloor'.
Generating RTLIL representation for module `\_90_modfloor'.
Generating RTLIL representation for module `\_90_pow'.
Generating RTLIL representation for module `\_90_pmux'.
Generating RTLIL representation for module `\_90_demux'.
Generating RTLIL representation for module `\_90_lut'.
Successfully finished Verilog frontend.

3.87.2. Executing Verilog-2005 frontend: /nfs_scratch/scratch/Vorak/aram/Workspace/Raptor/yosys_verific_rs/yosys/install/bin/../share/yosys/rapidsilicon/genesis/arith_map.v
Parsing Verilog input from `/nfs_scratch/scratch/Vorak/aram/Workspace/Raptor/yosys_verific_rs/yosys/install/bin/../share/yosys/rapidsilicon/genesis/arith_map.v' to AST representation.
Generating RTLIL representation for module `\_80_rs_alu'.
Successfully finished Verilog frontend.

3.87.3. Continuing TECHMAP pass.
Using extmapper simplemap for cells of type $reduce_and.
Using extmapper simplemap for cells of type $mux.
Using extmapper simplemap for cells of type $reduce_or.
Using extmapper simplemap for cells of type $not.
Using extmapper simplemap for cells of type $ne.
Using extmapper simplemap for cells of type $or.
Using extmapper simplemap for cells of type $adff.
Using extmapper simplemap for cells of type $logic_not.
Using extmapper simplemap for cells of type $eq.
Using extmapper simplemap for cells of type $and.
Using template $paramod$754650b284649a026620fc6856e5b6886cbfe794\_90_alu for cells of type $alu.
Using template $paramod$2f5fb04daf2da94d981bf9455fa4454c6ec8b705\_90_alu for cells of type $alu.
Using template $paramod$ea402187f386206c0840504755479bf827f47707\_90_alu for cells of type $alu.
Using template $paramod$53700bbee849b2010ad0b60a61ccd204a10e24ca\_90_alu for cells of type $alu.
Using template $paramod$c703ee6d780d90e162c7eed92bfd050bee00636f\_90_alu for cells of type $alu.
Using template $paramod$b2626aff51a34e60b9c57dceb41667aaf5650a38\_90_alu for cells of type $alu.
Using extmapper simplemap for cells of type $xor.
Using template $paramod$32efbfac1c4dc57230cf86180788fdfd12e3b511\_90_alu for cells of type $alu.
Using template $paramod$a1bc51c02ce12ac21eb18988e83292af48ed7d72\_90_alu for cells of type $alu.
Using template $paramod$f28fc3f2e267d7716249e826e8c90c34ca9542c1\_90_alu for cells of type $alu.
Using template $paramod$49641a5ace7a8dbedd31c417f5a1b54fcecf6c7d\_90_alu for cells of type $alu.
Using template $paramod$c014078428616de547d5c8d6f159d828f2151b7a\_90_pmux for cells of type $pmux.
Using extmapper simplemap for cells of type $adffe.
Using extmapper simplemap for cells of type $aldff.
Using extmapper simplemap for cells of type $aldffe.
Using template $paramod$0a77e3c00010cb33e399decd813a7380c6e25cba\_90_alu for cells of type $alu.
Using template $paramod$f30f8fc2e30bd83d28cb1ad43b9d9ec083109075\_90_alu for cells of type $alu.
Using template $paramod$d2fa05d38998afabc6d4f34471305d0af4b8b2df\_90_alu for cells of type $alu.
Using template $paramod$46d3f1a4a915912bab1067a0beb0fb376719baeb\_90_alu for cells of type $alu.
Using template $paramod$ed0bb9616228df1e6c226f91f8133e751815f1b1\_90_pmux for cells of type $pmux.
Using template $paramod$403c17aef119cccdd585ba431bb1c77ec6e3c700\_90_alu for cells of type $alu.
Using template $paramod$175e67c02b86e96b1288b9dc100122520d7240d8\_90_alu for cells of type $alu.
Using template $paramod$2af30114e9bd4ccb04dad757b3f0a8f6bf0615b0\_90_alu for cells of type $alu.
Using template $paramod$0d149ffe75563ef6fcc1a3dddc59d00af28651a7\_90_pmux for cells of type $pmux.
Using template $paramod$cc1e387d9d5ac1d3f6e6bed180038d9c0ac48d0c\_90_pmux for cells of type $pmux.
Using extmapper simplemap for cells of type $reduce_bool.
Using template $paramod$521ce43182eecb9f60c72393a788160d2c356bf5\_90_pmux for cells of type $pmux.
Using template $paramod\_90_lcu\WIDTH=32'00000000000000000000000000001001 for cells of type $lcu.
Using extmapper simplemap for cells of type $pos.
Using template $paramod\_90_lcu\WIDTH=32'00000000000000000000000000001011 for cells of type $lcu.
Using template $paramod\_90_lcu\WIDTH=32'00000000000000000000000000010010 for cells of type $lcu.
Using template $paramod\_90_lcu\WIDTH=32'00000000000000000000000000000111 for cells of type $lcu.
Using template $paramod\_90_lcu\WIDTH=32'00000000000000000000000000001010 for cells of type $lcu.
Using template $paramod\_90_lcu\WIDTH=32'00000000000000000000000000000110 for cells of type $lcu.
Using template $paramod\_90_lcu\WIDTH=32'00000000000000000000000000001101 for cells of type $lcu.
Using template $paramod\_90_lcu\WIDTH=32'00000000000000000000000000001000 for cells of type $lcu.
Using template $paramod\_90_lcu\WIDTH=32'00000000000000000000000000010001 for cells of type $lcu.
Using template $paramod\_90_lcu\WIDTH=32'00000000000000000000000000001110 for cells of type $lcu.
Using template $paramod\_90_lcu\WIDTH=32'00000000000000000000000000000010 for cells of type $lcu.
Using template $paramod\_90_lcu\WIDTH=32'00000000000000000000000000010000 for cells of type $lcu.
No more expansions possible.
<suppressed ~8605 debug messages>

yosys> stat

3.88. Printing statistics.

=== conv2d ===

   Number of wires:               5959
   Number of wire bits:          72924
   Number of public wires:         427
   Number of public wire bits:    6582
   Number of memories:               0
   Number of memory bits:            0
   Number of processes:              0
   Number of cells:              16489
     $_ALDFFE_PNP_                  60
     $_ALDFF_PN_                    20
     $_AND_                       3330
     $_DFFE_PN0N_                   99
     $_DFFE_PN0P_                  682
     $_DFFE_PN1N_                    1
     $_DFFE_PN1P_                   23
     $_DFF_PN0_                    258
     $_DFF_PN1_                      1
     $_MUX_                       6921
     $_NOT_                        562
     $_OR_                        2410
     $_XOR_                       2122


yosys> opt_expr

3.89. Executing OPT_EXPR pass (perform const folding).
Optimizing module conv2d.
<suppressed ~5105 debug messages>

yosys> opt_merge -nomux

3.90. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\conv2d'.
<suppressed ~4482 debug messages>
Removed a total of 1494 cells.

yosys> opt_muxtree

3.91. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \conv2d..
  Creating internal representation of mux trees.
  No muxes found in this module.
Removed 0 multiplexer ports.

yosys> opt_reduce

3.92. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \conv2d.
Performed a total of 0 changes.

yosys> opt_merge

3.93. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\conv2d'.
Removed a total of 0 cells.

yosys> opt_share

3.94. Executing OPT_SHARE pass.

yosys> opt_dff -nosdff -nodffe

3.95. Executing OPT_DFF pass (perform DFF optimizations).

yosys> opt_clean

3.96. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \conv2d..
Removed 1620 unused cells and 4109 unused wires.
<suppressed ~1621 debug messages>

yosys> opt_expr

3.97. Executing OPT_EXPR pass (perform const folding).
Optimizing module conv2d.
<suppressed ~2 debug messages>

yosys> opt_muxtree

3.98. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \conv2d..
  Creating internal representation of mux trees.
  No muxes found in this module.
Removed 0 multiplexer ports.

yosys> opt_reduce

3.99. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \conv2d.
Performed a total of 0 changes.

yosys> opt_merge

3.100. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\conv2d'.
Removed a total of 0 cells.

yosys> opt_share

3.101. Executing OPT_SHARE pass.

yosys> opt_dff -nosdff -nodffe

3.102. Executing OPT_DFF pass (perform DFF optimizations).

yosys> opt_clean

3.103. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \conv2d..

yosys> opt_expr

3.104. Executing OPT_EXPR pass (perform const folding).
Optimizing module conv2d.
MAX OPT ITERATION = 2

yosys> opt_expr -full

3.105. Executing OPT_EXPR pass (perform const folding).
Optimizing module conv2d.
<suppressed ~3419 debug messages>

yosys> techmap -map +/techmap.v

3.106. Executing TECHMAP pass (map to technology primitives).

3.106.1. Executing Verilog-2005 frontend: /nfs_scratch/scratch/Vorak/aram/Workspace/Raptor/yosys_verific_rs/yosys/install/bin/../share/yosys/techmap.v
Parsing Verilog input from `/nfs_scratch/scratch/Vorak/aram/Workspace/Raptor/yosys_verific_rs/yosys/install/bin/../share/yosys/techmap.v' to AST representation.
Generating RTLIL representation for module `\_90_simplemap_bool_ops'.
Generating RTLIL representation for module `\_90_simplemap_reduce_ops'.
Generating RTLIL representation for module `\_90_simplemap_logic_ops'.
Generating RTLIL representation for module `\_90_simplemap_compare_ops'.
Generating RTLIL representation for module `\_90_simplemap_various'.
Generating RTLIL representation for module `\_90_simplemap_registers'.
Generating RTLIL representation for module `\_90_shift_ops_shr_shl_sshl_sshr'.
Generating RTLIL representation for module `\_90_shift_shiftx'.
Generating RTLIL representation for module `\_90_fa'.
Generating RTLIL representation for module `\_90_lcu'.
Generating RTLIL representation for module `\_90_alu'.
Generating RTLIL representation for module `\_90_macc'.
Generating RTLIL representation for module `\_90_alumacc'.
Generating RTLIL representation for module `\$__div_mod_u'.
Generating RTLIL representation for module `\$__div_mod_trunc'.
Generating RTLIL representation for module `\_90_div'.
Generating RTLIL representation for module `\_90_mod'.
Generating RTLIL representation for module `\$__div_mod_floor'.
Generating RTLIL representation for module `\_90_divfloor'.
Generating RTLIL representation for module `\_90_modfloor'.
Generating RTLIL representation for module `\_90_pow'.
Generating RTLIL representation for module `\_90_pmux'.
Generating RTLIL representation for module `\_90_demux'.
Generating RTLIL representation for module `\_90_lut'.
Successfully finished Verilog frontend.

3.106.2. Continuing TECHMAP pass.
No more expansions possible.
<suppressed ~71 debug messages>

yosys> opt_expr

3.107. Executing OPT_EXPR pass (perform const folding).
Optimizing module conv2d.

yosys> opt_merge -nomux

3.108. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\conv2d'.
<suppressed ~63 debug messages>
Removed a total of 21 cells.

yosys> opt_muxtree

3.109. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \conv2d..
  Creating internal representation of mux trees.
  No muxes found in this module.
Removed 0 multiplexer ports.

yosys> opt_reduce

3.110. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \conv2d.
Performed a total of 0 changes.

yosys> opt_merge

3.111. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\conv2d'.
Removed a total of 0 cells.

yosys> opt_dff -nosdff -nodffe -sat

3.112. Executing OPT_DFF pass (perform DFF optimizations).

yosys> opt_clean

3.113. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \conv2d..
Removed 0 unused cells and 221 unused wires.
<suppressed ~1 debug messages>

yosys> opt_expr

3.114. Executing OPT_EXPR pass (perform const folding).
Optimizing module conv2d.
MAX OPT ITERATION = 1

yosys> abc -dff

3.115. Executing ABC pass (technology mapping using ABC).

3.115.1. Summary of detected clock domains:
  6 cells in clk=\clk, en=$auto$opt_dff.cc:219:make_patterns_logic$4122, arst=!\rstn, srst={ }
  62 cells in clk=\clk, en=$auto$opt_dff.cc:219:make_patterns_logic$4680, arst=!\rstn, srst={ }
  28 cells in clk=\clk, en=!$auto$pmuxtree.cc:65:recursive_mux_generator$5657.S [1], arst=!\rstn, srst={ }
  101 cells in clk=\clk, en=$auto$opt_dff.cc:219:make_patterns_logic$4267, arst=!\rstn, srst={ }
  22 cells in clk=\clk, en=$auto$opt_dff.cc:219:make_patterns_logic$4453, arst=!\rstn, srst={ }
  102 cells in clk=\clk, en=$auto$opt_dff.cc:219:make_patterns_logic$4508, arst=!\rstn, srst={ }
  24 cells in clk=\clk, en=$auto$opt_dff.cc:219:make_patterns_logic$4592, arst=!\rstn, srst={ }
  73 cells in clk=\clk, en=$auto$opt_dff.cc:219:make_patterns_logic$4178, arst=!\rstn, srst={ }
  103 cells in clk=\clk, en=$auto$opt_dff.cc:219:make_patterns_logic$4579, arst=!\rstn, srst={ }
  62 cells in clk=\clk, en=$auto$opt_dff.cc:194:make_patterns_logic$4396, arst=!\rstn, srst={ }
  28 cells in clk=\clk, en=$auto$opt_dff.cc:219:make_patterns_logic$4129, arst=!\rstn, srst={ }
  95 cells in clk=\clk, en=$auto$opt_dff.cc:219:make_patterns_logic$4715, arst=!\rstn, srst={ }
  48 cells in clk=\clk, en=$auto$opt_dff.cc:219:make_patterns_logic$4410, arst=!\rstn, srst={ }
  242 cells in clk=\clk, en=$auto$opt_dff.cc:219:make_patterns_logic$4440, arst=!\rstn, srst={ }
  10 cells in clk=\clk, en=$auto$opt_dff.cc:219:make_patterns_logic$4154, arst=!\rstn, srst={ }
  283 cells in clk=\clk, en=$auto$opt_dff.cc:219:make_patterns_logic$4163, arst=!\rstn, srst={ }
  41 cells in clk=\clk, en=$auto$opt_dff.cc:219:make_patterns_logic$4222, arst=!\rstn, srst={ }
  97 cells in clk=\clk, en=$auto$opt_dff.cc:219:make_patterns_logic$4730, arst=!\rstn, srst={ }
  99 cells in clk=\clk, en=$auto$opt_dff.cc:219:make_patterns_logic$4745, arst=!\rstn, srst={ }
  98 cells in clk=\clk, en=$auto$opt_dff.cc:219:make_patterns_logic$4760, arst=!\rstn, srst={ }
  97 cells in clk=\clk, en=$auto$opt_dff.cc:219:make_patterns_logic$4775, arst=!\rstn, srst={ }
  96 cells in clk=\clk, en=$auto$opt_dff.cc:219:make_patterns_logic$4790, arst=!\rstn, srst={ }
  97 cells in clk=\clk, en=$auto$opt_dff.cc:219:make_patterns_logic$4805, arst=!\rstn, srst={ }
  100 cells in clk=\clk, en=$auto$opt_dff.cc:219:make_patterns_logic$4820, arst=!\rstn, srst={ }
  49 cells in clk=\clk, en=$auto$opt_dff.cc:219:make_patterns_logic$4835, arst=!\rstn, srst={ }
  20 cells in clk=\clk, en=$auto$opt_dff.cc:219:make_patterns_logic$4475, arst=!\rstn, srst={ }
  135 cells in clk=\clk, en=$auto$opt_dff.cc:219:make_patterns_logic$4464, arst=!\rstn, srst={ }
  17 cells in clk=\clk, en=$auto$opt_dff.cc:219:make_patterns_logic$4570, arst=!\rstn, srst={ }
  36 cells in clk=\clk, en=$auto$opt_dff.cc:219:make_patterns_logic$4030, arst=!\rstn, srst={ }
  84 cells in clk=\clk, en=$auto$opt_dff.cc:219:make_patterns_logic$4338, arst=!\rstn, srst={ }
  47 cells in clk=\clk, en=$auto$opt_dff.cc:219:make_patterns_logic$4708, arst=!\rstn, srst={ }
  127 cells in clk=\clk, en=$auto$opt_dff.cc:219:make_patterns_logic$4372, arst=!\rstn, srst={ }
  49 cells in clk=\clk, en=$auto$opt_dff.cc:219:make_patterns_logic$4544, arst=!\rstn, srst={ }
  89 cells in clk=\clk, en=$auto$opt_dff.cc:219:make_patterns_logic$4254, arst=!\rstn, srst={ }
  12 cells in clk=\clk, en=$auto$opt_dff.cc:219:make_patterns_logic$4669, arst=!\rstn, srst={ }
  47 cells in clk=\clk, en=$auto$opt_dff.cc:219:make_patterns_logic$4639, arst=!\rstn, srst={ }
  876 cells in clk=\clk, en=$auto$opt_dff.cc:219:make_patterns_logic$4854, arst=!\rstn, srst={ }
  378 cells in clk=\clk, en=!$auto$opt_reduce.cc:134:opt_pmux$3940, arst=!\rstn, srst={ }
  43 cells in clk=\clk, en=$auto$opt_dff.cc:219:make_patterns_logic$4043, arst=!\rstn, srst={ }
  18 cells in clk=\clk, en=$auto$opt_dff.cc:219:make_patterns_logic$4291, arst=!\rstn, srst={ }
  70 cells in clk=\clk, en=$auto$opt_dff.cc:219:make_patterns_logic$4490, arst=!\rstn, srst={ }
  15 cells in clk=\clk, en=$auto$opt_dff.cc:219:make_patterns_logic$4095, arst=!\rstn, srst={ }
  15 cells in clk=\clk, en=$auto$opt_dff.cc:219:make_patterns_logic$4104, arst=!\rstn, srst={ }
  645 cells in clk=\clk, en=$auto$opt_dff.cc:219:make_patterns_logic$4844, arst=!\rstn, srst={ }
  181 cells in clk=\clk, en=$auto$opt_dff.cc:219:make_patterns_logic$4072, arst=!\rstn, srst={ }
  80 cells in clk=\clk, en=$auto$opt_dff.cc:219:make_patterns_logic$4603, arst=!\rstn, srst={ }
  37 cells in clk=\clk, en=$auto$opt_dff.cc:219:make_patterns_logic$4063, arst=!\rstn, srst={ }
  14 cells in clk=\clk, en=$auto$opt_dff.cc:219:make_patterns_logic$4386, arst=!\rstn, srst={ }
  11 cells in clk=\clk, en=$auto$opt_dff.cc:219:make_patterns_logic$4052, arst=!\rstn, srst={ }
  128 cells in clk=\clk, en=$auto$opt_dff.cc:219:make_patterns_logic$4555, arst=!\rstn, srst={ }
  8 cells in clk=\clk, en=$auto$opt_dff.cc:219:make_patterns_logic$4654, arst=!\rstn, srst={ }
  11 cells in clk=\clk, en=!$verific$n11606$199, arst=!\rstn, srst={ }
  18 cells in clk=\clk, en=$auto$opt_dff.cc:219:make_patterns_logic$4278, arst=!\rstn, srst={ }
  43 cells in clk=\clk, en=!$auto$opt_reduce.cc:134:opt_pmux$3976, arst=!\rstn, srst={ }
  36 cells in clk=\clk, en=$auto$opt_dff.cc:219:make_patterns_logic$4312, arst=!\rstn, srst={ }
  28 cells in clk=\clk, en=$auto$opt_dff.cc:219:make_patterns_logic$4303, arst=!\rstn, srst={ }
  9 cells in clk=\clk, en=!$verific$n11608$201, arst=!\rstn, srst={ }
  36 cells in clk=\clk, en=$auto$opt_dff.cc:219:make_patterns_logic$4393, arst=!\rstn, srst={ }
  231 cells in clk=\clk, en=$auto$opt_dff.cc:219:make_patterns_logic$4499, arst=!\rstn, srst={ }
  1480 cells in clk=\clk, en={ }, arst=!\rstn, srst={ }

3.115.2. Extracting gate netlist of module `\conv2d' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk, enabled by $auto$opt_dff.cc:219:make_patterns_logic$4122, asynchronously reset by !\rstn
Extracted 6 gates and 14 wires to a netlist network with 7 inputs and 2 outputs.

3.115.2.1. Executing ABC.

3.115.3. Extracting gate netlist of module `\conv2d' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk, enabled by $auto$opt_dff.cc:219:make_patterns_logic$4680, asynchronously reset by !\rstn
Extracted 62 gates and 79 wires to a netlist network with 16 inputs and 12 outputs.

3.115.3.1. Executing ABC.

3.115.4. Extracting gate netlist of module `\conv2d' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk, enabled by !$auto$pmuxtree.cc:65:recursive_mux_generator$5657.S [1], asynchronously reset by !\rstn
Extracted 28 gates and 43 wires to a netlist network with 15 inputs and 15 outputs.

3.115.4.1. Executing ABC.

3.115.5. Extracting gate netlist of module `\conv2d' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk, enabled by $auto$opt_dff.cc:219:make_patterns_logic$4267, asynchronously reset by !\rstn
Extracted 101 gates and 193 wires to a netlist network with 90 inputs and 25 outputs.

3.115.5.1. Executing ABC.

3.115.6. Extracting gate netlist of module `\conv2d' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk, enabled by $auto$opt_dff.cc:219:make_patterns_logic$4453, asynchronously reset by !\rstn
Extracted 22 gates and 35 wires to a netlist network with 12 inputs and 12 outputs.

3.115.6.1. Executing ABC.

3.115.7. Extracting gate netlist of module `\conv2d' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk, enabled by $auto$opt_dff.cc:219:make_patterns_logic$4508, asynchronously reset by !\rstn
Extracted 102 gates and 141 wires to a netlist network with 38 inputs and 55 outputs.

3.115.7.1. Executing ABC.

3.115.8. Extracting gate netlist of module `\conv2d' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk, enabled by $auto$opt_dff.cc:219:make_patterns_logic$4592, asynchronously reset by !\rstn
Extracted 24 gates and 39 wires to a netlist network with 13 inputs and 8 outputs.

3.115.8.1. Executing ABC.

3.115.9. Extracting gate netlist of module `\conv2d' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk, enabled by $auto$opt_dff.cc:219:make_patterns_logic$4178, asynchronously reset by !\rstn
Extracted 73 gates and 147 wires to a netlist network with 74 inputs and 34 outputs.

3.115.9.1. Executing ABC.

3.115.10. Extracting gate netlist of module `\conv2d' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk, enabled by $auto$opt_dff.cc:219:make_patterns_logic$4579, asynchronously reset by !\rstn
Extracted 103 gates and 112 wires to a netlist network with 7 inputs and 12 outputs.

3.115.10.1. Executing ABC.

3.115.11. Extracting gate netlist of module `\conv2d' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk, enabled by $auto$opt_dff.cc:194:make_patterns_logic$4396, asynchronously reset by !\rstn
Extracted 62 gates and 101 wires to a netlist network with 39 inputs and 29 outputs.

3.115.11.1. Executing ABC.

3.115.12. Extracting gate netlist of module `\conv2d' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk, enabled by $auto$opt_dff.cc:219:make_patterns_logic$4129, asynchronously reset by !\rstn
Extracted 28 gates and 57 wires to a netlist network with 28 inputs and 24 outputs.

3.115.12.1. Executing ABC.

3.115.13. Extracting gate netlist of module `\conv2d' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk, enabled by $auto$opt_dff.cc:219:make_patterns_logic$4715, asynchronously reset by !\rstn
Extracted 95 gates and 147 wires to a netlist network with 52 inputs and 28 outputs.

3.115.13.1. Executing ABC.

3.115.14. Extracting gate netlist of module `\conv2d' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk, enabled by $auto$opt_dff.cc:219:make_patterns_logic$4410, asynchronously reset by !\rstn
Extracted 48 gates and 75 wires to a netlist network with 27 inputs and 21 outputs.

3.115.14.1. Executing ABC.

3.115.15. Extracting gate netlist of module `\conv2d' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk, enabled by $auto$opt_dff.cc:219:make_patterns_logic$4440, asynchronously reset by !\rstn
Extracted 242 gates and 407 wires to a netlist network with 163 inputs and 76 outputs.

3.115.15.1. Executing ABC.

3.115.16. Extracting gate netlist of module `\conv2d' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk, enabled by $auto$opt_dff.cc:219:make_patterns_logic$4154, asynchronously reset by !\rstn
Extracted 10 gates and 19 wires to a netlist network with 7 inputs and 6 outputs.

3.115.16.1. Executing ABC.

3.115.17. Extracting gate netlist of module `\conv2d' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk, enabled by $auto$opt_dff.cc:219:make_patterns_logic$4163, asynchronously reset by !\rstn
Extracted 223 gates and 339 wires to a netlist network with 114 inputs and 85 outputs.

3.115.17.1. Executing ABC.

3.115.18. Extracting gate netlist of module `\conv2d' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk, enabled by $auto$opt_dff.cc:219:make_patterns_logic$4222, asynchronously reset by !\rstn
Extracted 41 gates and 73 wires to a netlist network with 30 inputs and 28 outputs.

3.115.18.1. Executing ABC.

3.115.19. Extracting gate netlist of module `\conv2d' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk, enabled by $auto$opt_dff.cc:219:make_patterns_logic$4730, asynchronously reset by !\rstn
Extracted 97 gates and 151 wires to a netlist network with 54 inputs and 28 outputs.

3.115.19.1. Executing ABC.

3.115.20. Extracting gate netlist of module `\conv2d' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk, enabled by $auto$opt_dff.cc:219:make_patterns_logic$4745, asynchronously reset by !\rstn
Extracted 99 gates and 155 wires to a netlist network with 56 inputs and 29 outputs.

3.115.20.1. Executing ABC.

3.115.21. Extracting gate netlist of module `\conv2d' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk, enabled by $auto$opt_dff.cc:219:make_patterns_logic$4760, asynchronously reset by !\rstn
Extracted 98 gates and 153 wires to a netlist network with 55 inputs and 27 outputs.

3.115.21.1. Executing ABC.

3.115.22. Extracting gate netlist of module `\conv2d' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk, enabled by $auto$opt_dff.cc:219:make_patterns_logic$4775, asynchronously reset by !\rstn
Extracted 97 gates and 151 wires to a netlist network with 54 inputs and 28 outputs.

3.115.22.1. Executing ABC.

3.115.23. Extracting gate netlist of module `\conv2d' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk, enabled by $auto$opt_dff.cc:219:make_patterns_logic$4790, asynchronously reset by !\rstn
Extracted 96 gates and 149 wires to a netlist network with 53 inputs and 27 outputs.

3.115.23.1. Executing ABC.

3.115.24. Extracting gate netlist of module `\conv2d' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk, enabled by $auto$opt_dff.cc:219:make_patterns_logic$4805, asynchronously reset by !\rstn
Extracted 97 gates and 151 wires to a netlist network with 54 inputs and 28 outputs.

3.115.24.1. Executing ABC.

3.115.25. Extracting gate netlist of module `\conv2d' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk, enabled by $auto$opt_dff.cc:219:make_patterns_logic$4820, asynchronously reset by !\rstn
Extracted 100 gates and 157 wires to a netlist network with 57 inputs and 28 outputs.

3.115.25.1. Executing ABC.

3.115.26. Extracting gate netlist of module `\conv2d' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk, enabled by $auto$opt_dff.cc:219:make_patterns_logic$4835, asynchronously reset by !\rstn
Extracted 49 gates and 86 wires to a netlist network with 37 inputs and 27 outputs.

3.115.26.1. Executing ABC.

3.115.27. Extracting gate netlist of module `\conv2d' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk, enabled by $auto$opt_dff.cc:219:make_patterns_logic$4475, asynchronously reset by !\rstn
Extracted 20 gates and 26 wires to a netlist network with 5 inputs and 9 outputs.

3.115.27.1. Executing ABC.

3.115.28. Extracting gate netlist of module `\conv2d' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk, enabled by $auto$opt_dff.cc:219:make_patterns_logic$4464, asynchronously reset by !\rstn
Extracted 135 gates and 191 wires to a netlist network with 54 inputs and 8 outputs.

3.115.28.1. Executing ABC.

3.115.29. Extracting gate netlist of module `\conv2d' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk, enabled by $auto$opt_dff.cc:219:make_patterns_logic$4570, asynchronously reset by !\rstn
Extracted 17 gates and 29 wires to a netlist network with 11 inputs and 4 outputs.

3.115.29.1. Executing ABC.

3.115.30. Extracting gate netlist of module `\conv2d' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk, enabled by $auto$opt_dff.cc:219:make_patterns_logic$4030, asynchronously reset by !\rstn
Extracted 36 gates and 73 wires to a netlist network with 37 inputs and 33 outputs.

3.115.30.1. Executing ABC.

3.115.31. Extracting gate netlist of module `\conv2d' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk, enabled by $auto$opt_dff.cc:219:make_patterns_logic$4338, asynchronously reset by !\rstn
Extracted 84 gates and 92 wires to a netlist network with 7 inputs and 24 outputs.

3.115.31.1. Executing ABC.

3.115.32. Extracting gate netlist of module `\conv2d' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk, enabled by $auto$opt_dff.cc:219:make_patterns_logic$4708, asynchronously reset by !\rstn
Extracted 47 gates and 76 wires to a netlist network with 29 inputs and 21 outputs.

3.115.32.1. Executing ABC.

3.115.33. Extracting gate netlist of module `\conv2d' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk, enabled by $auto$opt_dff.cc:219:make_patterns_logic$4372, asynchronously reset by !\rstn
Extracted 127 gates and 162 wires to a netlist network with 34 inputs and 13 outputs.

3.115.33.1. Executing ABC.

3.115.34. Extracting gate netlist of module `\conv2d' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk, enabled by $auto$opt_dff.cc:219:make_patterns_logic$4544, asynchronously reset by !\rstn
Extracted 49 gates and 67 wires to a netlist network with 17 inputs and 30 outputs.

3.115.34.1. Executing ABC.

3.115.35. Extracting gate netlist of module `\conv2d' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk, enabled by $auto$opt_dff.cc:219:make_patterns_logic$4254, asynchronously reset by !\rstn
Extracted 89 gates and 136 wires to a netlist network with 46 inputs and 36 outputs.

3.115.35.1. Executing ABC.

3.115.36. Extracting gate netlist of module `\conv2d' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk, enabled by $auto$opt_dff.cc:219:make_patterns_logic$4669, asynchronously reset by !\rstn
Extracted 12 gates and 24 wires to a netlist network with 12 inputs and 4 outputs.

3.115.36.1. Executing ABC.

3.115.37. Extracting gate netlist of module `\conv2d' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk, enabled by $auto$opt_dff.cc:219:make_patterns_logic$4639, asynchronously reset by !\rstn
Extracted 47 gates and 63 wires to a netlist network with 15 inputs and 22 outputs.

3.115.37.1. Executing ABC.

3.115.38. Extracting gate netlist of module `\conv2d' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk, enabled by $auto$opt_dff.cc:219:make_patterns_logic$4854, asynchronously reset by !\rstn
Extracted 876 gates and 1028 wires to a netlist network with 152 inputs and 187 outputs.

3.115.38.1. Executing ABC.

3.115.39. Extracting gate netlist of module `\conv2d' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk, enabled by !$auto$opt_reduce.cc:134:opt_pmux$3940, asynchronously reset by !\rstn
Extracted 378 gates and 490 wires to a netlist network with 112 inputs and 45 outputs.

3.115.39.1. Executing ABC.

3.115.40. Extracting gate netlist of module `\conv2d' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk, enabled by $auto$opt_dff.cc:219:make_patterns_logic$4043, asynchronously reset by !\rstn
Extracted 43 gates and 63 wires to a netlist network with 19 inputs and 15 outputs.

3.115.40.1. Executing ABC.

3.115.41. Extracting gate netlist of module `\conv2d' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk, enabled by $auto$opt_dff.cc:219:make_patterns_logic$4291, asynchronously reset by !\rstn
Extracted 18 gates and 30 wires to a netlist network with 10 inputs and 6 outputs.

3.115.41.1. Executing ABC.

3.115.42. Extracting gate netlist of module `\conv2d' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk, enabled by $auto$opt_dff.cc:219:make_patterns_logic$4490, asynchronously reset by !\rstn
Extracted 70 gates and 114 wires to a netlist network with 42 inputs and 18 outputs.

3.115.42.1. Executing ABC.

3.115.43. Extracting gate netlist of module `\conv2d' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk, enabled by $auto$opt_dff.cc:219:make_patterns_logic$4095, asynchronously reset by !\rstn
Extracted 15 gates and 30 wires to a netlist network with 13 inputs and 5 outputs.

3.115.43.1. Executing ABC.

3.115.44. Extracting gate netlist of module `\conv2d' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk, enabled by $auto$opt_dff.cc:219:make_patterns_logic$4104, asynchronously reset by !\rstn
Extracted 15 gates and 29 wires to a netlist network with 14 inputs and 11 outputs.

3.115.44.1. Executing ABC.

3.115.45. Extracting gate netlist of module `\conv2d' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk, enabled by $auto$opt_dff.cc:219:make_patterns_logic$4844, asynchronously reset by !\rstn
Extracted 645 gates and 788 wires to a netlist network with 143 inputs and 132 outputs.

3.115.45.1. Executing ABC.

3.115.46. Extracting gate netlist of module `\conv2d' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk, enabled by $auto$opt_dff.cc:219:make_patterns_logic$4072, asynchronously reset by !\rstn
Extracted 181 gates and 268 wires to a netlist network with 86 inputs and 38 outputs.

3.115.46.1. Executing ABC.

3.115.47. Extracting gate netlist of module `\conv2d' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk, enabled by $auto$opt_dff.cc:219:make_patterns_logic$4603, asynchronously reset by !\rstn
Extracted 80 gates and 92 wires to a netlist network with 11 inputs and 14 outputs.

3.115.47.1. Executing ABC.

3.115.48. Extracting gate netlist of module `\conv2d' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk, enabled by $auto$opt_dff.cc:219:make_patterns_logic$4063, asynchronously reset by !\rstn
Extracted 37 gates and 66 wires to a netlist network with 29 inputs and 32 outputs.

3.115.48.1. Executing ABC.

3.115.49. Extracting gate netlist of module `\conv2d' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk, enabled by $auto$opt_dff.cc:219:make_patterns_logic$4386, asynchronously reset by !\rstn
Extracted 14 gates and 28 wires to a netlist network with 14 inputs and 4 outputs.

3.115.49.1. Executing ABC.

3.115.50. Extracting gate netlist of module `\conv2d' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk, enabled by $auto$opt_dff.cc:219:make_patterns_logic$4052, asynchronously reset by !\rstn
Extracted 11 gates and 20 wires to a netlist network with 8 inputs and 6 outputs.

3.115.50.1. Executing ABC.

3.115.51. Extracting gate netlist of module `\conv2d' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk, enabled by $auto$opt_dff.cc:219:make_patterns_logic$4555, asynchronously reset by !\rstn
Extracted 128 gates and 146 wires to a netlist network with 17 inputs and 18 outputs.

3.115.51.1. Executing ABC.

3.115.52. Extracting gate netlist of module `\conv2d' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk, enabled by $auto$opt_dff.cc:219:make_patterns_logic$4654, asynchronously reset by !\rstn
Extracted 8 gates and 17 wires to a netlist network with 9 inputs and 3 outputs.

3.115.52.1. Executing ABC.

3.115.53. Extracting gate netlist of module `\conv2d' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk, enabled by !$verific$n11606$199, asynchronously reset by !\rstn
Extracted 11 gates and 22 wires to a netlist network with 10 inputs and 10 outputs.

3.115.53.1. Executing ABC.

3.115.54. Extracting gate netlist of module `\conv2d' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk, enabled by $auto$opt_dff.cc:219:make_patterns_logic$4278, asynchronously reset by !\rstn
Extracted 18 gates and 30 wires to a netlist network with 10 inputs and 5 outputs.

3.115.54.1. Executing ABC.

3.115.55. Extracting gate netlist of module `\conv2d' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk, enabled by !$auto$opt_reduce.cc:134:opt_pmux$3976, asynchronously reset by !\rstn
Extracted 43 gates and 72 wires to a netlist network with 29 inputs and 20 outputs.

3.115.55.1. Executing ABC.

3.115.56. Extracting gate netlist of module `\conv2d' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk, enabled by $auto$opt_dff.cc:219:make_patterns_logic$4312, asynchronously reset by !\rstn
Extracted 36 gates and 72 wires to a netlist network with 36 inputs and 34 outputs.

3.115.56.1. Executing ABC.

3.115.57. Extracting gate netlist of module `\conv2d' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk, enabled by $auto$opt_dff.cc:219:make_patterns_logic$4303, asynchronously reset by !\rstn
Extracted 28 gates and 53 wires to a netlist network with 24 inputs and 5 outputs.

3.115.57.1. Executing ABC.

3.115.58. Extracting gate netlist of module `\conv2d' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk, enabled by !$verific$n11608$201, asynchronously reset by !\rstn
Extracted 9 gates and 17 wires to a netlist network with 8 inputs and 7 outputs.

3.115.58.1. Executing ABC.

3.115.59. Extracting gate netlist of module `\conv2d' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk, enabled by $auto$opt_dff.cc:219:make_patterns_logic$4393, asynchronously reset by !\rstn
Extracted 36 gates and 72 wires to a netlist network with 36 inputs and 34 outputs.

3.115.59.1. Executing ABC.

3.115.60. Extracting gate netlist of module `\conv2d' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk, enabled by $auto$opt_dff.cc:219:make_patterns_logic$4499, asynchronously reset by !\rstn
Extracted 231 gates and 399 wires to a netlist network with 167 inputs and 78 outputs.

3.115.60.1. Executing ABC.

3.115.61. Extracting gate netlist of module `\conv2d' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk, asynchronously reset by !\rstn
Extracted 1460 gates and 1869 wires to a netlist network with 407 inputs and 392 outputs.

3.115.61.1. Executing ABC.

yosys> abc -dff

3.116. Executing ABC pass (technology mapping using ABC).

3.116.1. Summary of detected clock domains:
  11 cells in clk=\clk, en=!$abc$31130$verific$n11608$201, arst=!\rstn, srst={ }
  17 cells in clk=\clk, en=$abc$30764$auto$opt_dff.cc:219:make_patterns_logic$4386, arst=!\rstn, srst={ }
  39 cells in clk=\clk, en=$abc$31091$auto$opt_dff.cc:219:make_patterns_logic$4303, arst=!\rstn, srst={ }
  17 cells in clk=\clk, en=$abc$25879$auto$opt_dff.cc:219:make_patterns_logic$4592, arst=!\rstn, srst={ }
  70 cells in clk=\clk, en=$abc$30616$auto$opt_dff.cc:219:make_patterns_logic$4603, arst=!\rstn, srst={ }
  28 cells in clk=\clk, en=$abc$25771$auto$opt_dff.cc:219:make_patterns_logic$4453, arst=!\rstn, srst={ }
  106 cells in clk=\clk, en=$abc$27575$auto$opt_dff.cc:219:make_patterns_logic$4464, arst=!\rstn, srst={ }
  14 cells in clk=\clk, en=$abc$27558$auto$opt_dff.cc:219:make_patterns_logic$4475, arst=!\rstn, srst={ }
  11 cells in clk=\clk, en=$abc$26634$auto$opt_dff.cc:219:make_patterns_logic$4154, arst=!\rstn, srst={ }
  30 cells in clk=\clk, en=!$abc$25649$auto$pmuxtree.cc:65:recursive_mux_generator$5657.S[1], arst=!\rstn, srst={ }
  29 cells in clk=\clk, en=$abc$26140$auto$opt_dff.cc:219:make_patterns_logic$4129, arst=!\rstn, srst={ }
  16 cells in clk=\clk, en=$abc$27709$auto$opt_dff.cc:219:make_patterns_logic$4570, arst=!\rstn, srst={ }
  6 cells in clk=\clk, en=$abc$25585$auto$opt_dff.cc:219:make_patterns_logic$4122, arst=!\rstn, srst={ }
  173 cells in clk=\clk, en=$abc$26310$auto$opt_dff.cc:219:make_patterns_logic$4440, arst=!\rstn, srst={ }
  370 cells in clk=\clk, en=$abc$31242$auto$opt_dff.cc:219:make_patterns_logic$4499, arst=!\rstn, srst={ }
  60 cells in clk=\clk, en=$abc$26004$auto$opt_dff.cc:219:make_patterns_logic$4579, arst=!\rstn, srst={ }
  283 cells in clk=\clk, en=$abc$26645$auto$opt_dff.cc:219:make_patterns_logic$4163, arst=!\rstn, srst={ }
  76 cells in clk=\clk, en=$abc$27052$auto$opt_dff.cc:219:make_patterns_logic$4760, arst=!\rstn, srst={ }
  76 cells in clk=\clk, en=$abc$26962$auto$opt_dff.cc:219:make_patterns_logic$4745, arst=!\rstn, srst={ }
  79 cells in clk=\clk, en=$abc$26874$auto$opt_dff.cc:219:make_patterns_logic$4730, arst=!\rstn, srst={ }
  34 cells in clk=\clk, en=$abc$26836$auto$opt_dff.cc:219:make_patterns_logic$4222, arst=!\rstn, srst={ }
  75 cells in clk=\clk, en=$abc$27141$auto$opt_dff.cc:219:make_patterns_logic$4775, arst=!\rstn, srst={ }
  11 cells in clk=\clk, en=$abc$28224$auto$opt_dff.cc:219:make_patterns_logic$4669, arst=!\rstn, srst={ }
  20 cells in clk=\clk, en=$abc$30911$auto$opt_dff.cc:219:make_patterns_logic$4278, arst=!\rstn, srst={ }
  676 cells in clk=\clk, en=$abc$29855$auto$opt_dff.cc:219:make_patterns_logic$4844, arst=!\rstn, srst={ }
  12 cells in clk=\clk, en=!$abc$30897$verific$n11606$199, arst=!\rstn, srst={ }
  65 cells in clk=\clk, en=$abc$26065$auto$opt_dff.cc:194:make_patterns_logic$4396, arst=!\rstn, srst={ }
  21 cells in clk=\clk, en=$abc$30780$auto$opt_dff.cc:219:make_patterns_logic$4052, arst=!\rstn, srst={ }
  8 cells in clk=\clk, en=$abc$30886$auto$opt_dff.cc:219:make_patterns_logic$4654, arst=!\rstn, srst={ }
  89 cells in clk=\clk, en=$abc$30791$auto$opt_dff.cc:219:make_patterns_logic$4555, arst=!\rstn, srst={ }
  93 cells in clk=\clk, en=$abc$30686$auto$opt_dff.cc:219:make_patterns_logic$4063, arst=!\rstn, srst={ }
  80 cells in clk=\clk, en=$abc$27404$auto$opt_dff.cc:219:make_patterns_logic$4820, arst=!\rstn, srst={ }
  78 cells in clk=\clk, en=$abc$27316$auto$opt_dff.cc:219:make_patterns_logic$4805, arst=!\rstn, srst={ }
  71 cells in clk=\clk, en=$abc$27229$auto$opt_dff.cc:219:make_patterns_logic$4790, arst=!\rstn, srst={ }
  42 cells in clk=\clk, en=$abc$25899$auto$opt_dff.cc:219:make_patterns_logic$4178, arst=!\rstn, srst={ }
  111 cells in clk=\clk, en=$abc$28076$auto$opt_dff.cc:219:make_patterns_logic$4254, arst=!\rstn, srst={ }
  49 cells in clk=\clk, en=$abc$28022$auto$opt_dff.cc:219:make_patterns_logic$4544, arst=!\rstn, srst={ }
  73 cells in clk=\clk, en=$abc$27946$auto$opt_dff.cc:219:make_patterns_logic$4372, arst=!\rstn, srst={ }
  44 cells in clk=\clk, en=$abc$27894$auto$opt_dff.cc:219:make_patterns_logic$4708, arst=!\rstn, srst={ }
  58 cells in clk=\clk, en=$abc$27824$auto$opt_dff.cc:219:make_patterns_logic$4338, arst=!\rstn, srst={ }
  37 cells in clk=\clk, en=$abc$27723$auto$opt_dff.cc:219:make_patterns_logic$4030, arst=!\rstn, srst={ }
  75 cells in clk=\clk, en=$abc$26170$auto$opt_dff.cc:219:make_patterns_logic$4715, arst=!\rstn, srst={ }
  42 cells in clk=\clk, en=$abc$29838$auto$opt_dff.cc:219:make_patterns_logic$4104, arst=!\rstn, srst={ }
  16 cells in clk=\clk, en=$abc$29823$auto$opt_dff.cc:219:make_patterns_logic$4095, arst=!\rstn, srst={ }
  82 cells in clk=\clk, en=$abc$29738$auto$opt_dff.cc:219:make_patterns_logic$4490, arst=!\rstn, srst={ }
  18 cells in clk=\clk, en=$abc$29722$auto$opt_dff.cc:219:make_patterns_logic$4291, arst=!\rstn, srst={ }
  41 cells in clk=\clk, en=$abc$28237$auto$opt_dff.cc:219:make_patterns_logic$4639, arst=!\rstn, srst={ }
  54 cells in clk=\clk, en=$abc$26256$auto$opt_dff.cc:219:make_patterns_logic$4410, arst=!\rstn, srst={ }
  37 cells in clk=\clk, en=$abc$29681$auto$opt_dff.cc:219:make_patterns_logic$4043, arst=!\rstn, srst={ }
  127 cells in clk=\clk, en=$abc$30457$auto$opt_dff.cc:219:make_patterns_logic$4072, arst=!\rstn, srst={ }
  56 cells in clk=\clk, en=$abc$25593$auto$opt_dff.cc:219:make_patterns_logic$4680, arst=!\rstn, srst={ }
  435 cells in clk=\clk, en=!$abc$29235$auto$opt_reduce.cc:134:opt_pmux$3940, arst=!\rstn, srst={ }
  69 cells in clk=\clk, en=$abc$30991$auto$opt_dff.cc:219:make_patterns_logic$4312, arst=!\rstn, srst={ }
  44 cells in clk=\clk, en=!$abc$30931$auto$opt_reduce.cc:134:opt_pmux$3976, arst=!\rstn, srst={ }
  97 cells in clk=\clk, en=$abc$25794$auto$opt_dff.cc:219:make_patterns_logic$4508, arst=!\rstn, srst={ }
  131 cells in clk=\clk, en=$abc$25676$auto$opt_dff.cc:219:make_patterns_logic$4267, arst=!\rstn, srst={ }
  831 cells in clk=\clk, en=$abc$28281$auto$opt_dff.cc:219:make_patterns_logic$4854, arst=!\rstn, srst={ }
  51 cells in clk=\clk, en=$abc$27495$auto$opt_dff.cc:219:make_patterns_logic$4835, arst=!\rstn, srst={ }
  65 cells in clk=\clk, en=$abc$31142$auto$opt_dff.cc:219:make_patterns_logic$4393, arst=!\rstn, srst={ }
  1164 cells in clk=\clk, en={ }, arst=!\rstn, srst={ }

3.116.2. Extracting gate netlist of module `\conv2d' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk, enabled by !$abc$31130$verific$n11608$201, asynchronously reset by !\rstn
Extracted 11 gates and 22 wires to a netlist network with 11 inputs and 8 outputs.

3.116.2.1. Executing ABC.

3.116.3. Extracting gate netlist of module `\conv2d' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk, enabled by $abc$30764$auto$opt_dff.cc:219:make_patterns_logic$4386, asynchronously reset by !\rstn
Extracted 17 gates and 31 wires to a netlist network with 14 inputs and 6 outputs.

3.116.3.1. Executing ABC.

3.116.4. Extracting gate netlist of module `\conv2d' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk, enabled by $abc$31091$auto$opt_dff.cc:219:make_patterns_logic$4303, asynchronously reset by !\rstn
Extracted 39 gates and 61 wires to a netlist network with 22 inputs and 5 outputs.

3.116.4.1. Executing ABC.

3.116.5. Extracting gate netlist of module `\conv2d' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk, enabled by $abc$25879$auto$opt_dff.cc:219:make_patterns_logic$4592, asynchronously reset by !\rstn
Extracted 17 gates and 30 wires to a netlist network with 13 inputs and 6 outputs.

3.116.5.1. Executing ABC.

3.116.6. Extracting gate netlist of module `\conv2d' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk, enabled by $abc$30616$auto$opt_dff.cc:219:make_patterns_logic$4603, asynchronously reset by !\rstn
Extracted 70 gates and 81 wires to a netlist network with 11 inputs and 15 outputs.

3.116.6.1. Executing ABC.

3.116.7. Extracting gate netlist of module `\conv2d' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk, enabled by $abc$25771$auto$opt_dff.cc:219:make_patterns_logic$4453, asynchronously reset by !\rstn
Extracted 28 gates and 44 wires to a netlist network with 16 inputs and 13 outputs.

3.116.7.1. Executing ABC.

3.116.8. Extracting gate netlist of module `\conv2d' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk, enabled by $abc$27575$auto$opt_dff.cc:219:make_patterns_logic$4464, asynchronously reset by !\rstn
Extracted 106 gates and 150 wires to a netlist network with 44 inputs and 10 outputs.

3.116.8.1. Executing ABC.

3.116.9. Extracting gate netlist of module `\conv2d' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk, enabled by $abc$27558$auto$opt_dff.cc:219:make_patterns_logic$4475, asynchronously reset by !\rstn
Extracted 14 gates and 18 wires to a netlist network with 4 inputs and 7 outputs.

3.116.9.1. Executing ABC.

3.116.10. Extracting gate netlist of module `\conv2d' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk, enabled by $abc$26634$auto$opt_dff.cc:219:make_patterns_logic$4154, asynchronously reset by !\rstn
Extracted 11 gates and 19 wires to a netlist network with 8 inputs and 6 outputs.

3.116.10.1. Executing ABC.

3.116.11. Extracting gate netlist of module `\conv2d' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk, enabled by !$abc$25649$auto$pmuxtree.cc:65:recursive_mux_generator$5657.S[1], asynchronously reset by !\rstn
Extracted 30 gates and 60 wires to a netlist network with 30 inputs and 18 outputs.

3.116.11.1. Executing ABC.

3.116.12. Extracting gate netlist of module `\conv2d' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk, enabled by $abc$26140$auto$opt_dff.cc:219:make_patterns_logic$4129, asynchronously reset by !\rstn
Extracted 29 gates and 56 wires to a netlist network with 27 inputs and 24 outputs.

3.116.12.1. Executing ABC.

3.116.13. Extracting gate netlist of module `\conv2d' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk, enabled by $abc$27709$auto$opt_dff.cc:219:make_patterns_logic$4570, asynchronously reset by !\rstn
Extracted 16 gates and 25 wires to a netlist network with 9 inputs and 3 outputs.

3.116.13.1. Executing ABC.

3.116.14. Extracting gate netlist of module `\conv2d' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk, enabled by $abc$25585$auto$opt_dff.cc:219:make_patterns_logic$4122, asynchronously reset by !\rstn
Extracted 6 gates and 13 wires to a netlist network with 7 inputs and 2 outputs.

3.116.14.1. Executing ABC.

3.116.15. Extracting gate netlist of module `\conv2d' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk, enabled by $abc$26310$auto$opt_dff.cc:219:make_patterns_logic$4440, asynchronously reset by !\rstn
Extracted 173 gates and 349 wires to a netlist network with 176 inputs and 137 outputs.

3.116.15.1. Executing ABC.

3.116.16. Extracting gate netlist of module `\conv2d' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk, enabled by $abc$31242$auto$opt_dff.cc:219:make_patterns_logic$4499, asynchronously reset by !\rstn
Extracted 370 gates and 545 wires to a netlist network with 175 inputs and 79 outputs.

3.116.16.1. Executing ABC.

3.116.17. Extracting gate netlist of module `\conv2d' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk, enabled by $abc$26004$auto$opt_dff.cc:219:make_patterns_logic$4579, asynchronously reset by !\rstn
Extracted 60 gates and 67 wires to a netlist network with 7 inputs and 11 outputs.

3.116.17.1. Executing ABC.

3.116.18. Extracting gate netlist of module `\conv2d' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk, enabled by $abc$26645$auto$opt_dff.cc:219:make_patterns_logic$4163, asynchronously reset by !\rstn
Extracted 223 gates and 355 wires to a netlist network with 132 inputs and 83 outputs.

3.116.18.1. Executing ABC.

3.116.19. Extracting gate netlist of module `\conv2d' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk, enabled by $abc$27052$auto$opt_dff.cc:219:make_patterns_logic$4760, asynchronously reset by !\rstn
Extracted 76 gates and 122 wires to a netlist network with 46 inputs and 28 outputs.

3.116.19.1. Executing ABC.

3.116.20. Extracting gate netlist of module `\conv2d' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk, enabled by $abc$26962$auto$opt_dff.cc:219:make_patterns_logic$4745, asynchronously reset by !\rstn
Extracted 76 gates and 122 wires to a netlist network with 46 inputs and 29 outputs.

3.116.20.1. Executing ABC.

3.116.21. Extracting gate netlist of module `\conv2d' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk, enabled by $abc$26874$auto$opt_dff.cc:219:make_patterns_logic$4730, asynchronously reset by !\rstn
Extracted 79 gates and 128 wires to a netlist network with 49 inputs and 29 outputs.

3.116.21.1. Executing ABC.

3.116.22. Extracting gate netlist of module `\conv2d' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk, enabled by $abc$26836$auto$opt_dff.cc:219:make_patterns_logic$4222, asynchronously reset by !\rstn
Extracted 34 gates and 65 wires to a netlist network with 31 inputs and 26 outputs.

3.116.22.1. Executing ABC.

3.116.23. Extracting gate netlist of module `\conv2d' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk, enabled by $abc$27141$auto$opt_dff.cc:219:make_patterns_logic$4775, asynchronously reset by !\rstn
Extracted 75 gates and 120 wires to a netlist network with 45 inputs and 29 outputs.

3.116.23.1. Executing ABC.

3.116.24. Extracting gate netlist of module `\conv2d' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk, enabled by $abc$28224$auto$opt_dff.cc:219:make_patterns_logic$4669, asynchronously reset by !\rstn
Extracted 11 gates and 20 wires to a netlist network with 9 inputs and 5 outputs.

3.116.24.1. Executing ABC.

3.116.25. Extracting gate netlist of module `\conv2d' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk, enabled by $abc$30911$auto$opt_dff.cc:219:make_patterns_logic$4278, asynchronously reset by !\rstn
Extracted 20 gates and 33 wires to a netlist network with 12 inputs and 10 outputs.

3.116.25.1. Executing ABC.

3.116.26. Extracting gate netlist of module `\conv2d' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk, enabled by $abc$29855$auto$opt_dff.cc:219:make_patterns_logic$4844, asynchronously reset by !\rstn
Extracted 676 gates and 965 wires to a netlist network with 289 inputs and 214 outputs.

3.116.26.1. Executing ABC.

3.116.27. Extracting gate netlist of module `\conv2d' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk, enabled by !$abc$30897$verific$n11606$199, asynchronously reset by !\rstn
Extracted 12 gates and 24 wires to a netlist network with 12 inputs and 10 outputs.

3.116.27.1. Executing ABC.

3.116.28. Extracting gate netlist of module `\conv2d' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk, enabled by $abc$26065$auto$opt_dff.cc:194:make_patterns_logic$4396, asynchronously reset by !\rstn
Extracted 65 gates and 104 wires to a netlist network with 39 inputs and 29 outputs.

3.116.28.1. Executing ABC.

3.116.29. Extracting gate netlist of module `\conv2d' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk, enabled by $abc$30780$auto$opt_dff.cc:219:make_patterns_logic$4052, asynchronously reset by !\rstn
Extracted 21 gates and 52 wires to a netlist network with 31 inputs and 18 outputs.

3.116.29.1. Executing ABC.

3.116.30. Extracting gate netlist of module `\conv2d' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk, enabled by $abc$30886$auto$opt_dff.cc:219:make_patterns_logic$4654, asynchronously reset by !\rstn
Extracted 8 gates and 17 wires to a netlist network with 9 inputs and 3 outputs.

3.116.30.1. Executing ABC.

3.116.31. Extracting gate netlist of module `\conv2d' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk, enabled by $abc$30791$auto$opt_dff.cc:219:make_patterns_logic$4555, asynchronously reset by !\rstn
Extracted 89 gates and 105 wires to a netlist network with 16 inputs and 14 outputs.

3.116.31.1. Executing ABC.

3.116.32. Extracting gate netlist of module `\conv2d' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk, enabled by $abc$30686$auto$opt_dff.cc:219:make_patterns_logic$4063, asynchronously reset by !\rstn
Extracted 93 gates and 127 wires to a netlist network with 34 inputs and 44 outputs.

3.116.32.1. Executing ABC.

3.116.33. Extracting gate netlist of module `\conv2d' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk, enabled by $abc$27404$auto$opt_dff.cc:219:make_patterns_logic$4820, asynchronously reset by !\rstn
Extracted 80 gates and 130 wires to a netlist network with 50 inputs and 29 outputs.

3.116.33.1. Executing ABC.

3.116.34. Extracting gate netlist of module `\conv2d' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk, enabled by $abc$27316$auto$opt_dff.cc:219:make_patterns_logic$4805, asynchronously reset by !\rstn
Extracted 78 gates and 126 wires to a netlist network with 48 inputs and 30 outputs.

3.116.34.1. Executing ABC.

3.116.35. Extracting gate netlist of module `\conv2d' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk, enabled by $abc$27229$auto$opt_dff.cc:219:make_patterns_logic$4790, asynchronously reset by !\rstn
Extracted 71 gates and 112 wires to a netlist network with 41 inputs and 28 outputs.

3.116.35.1. Executing ABC.

3.116.36. Extracting gate netlist of module `\conv2d' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk, enabled by $abc$25899$auto$opt_dff.cc:219:make_patterns_logic$4178, asynchronously reset by !\rstn
Extracted 42 gates and 84 wires to a netlist network with 42 inputs and 34 outputs.

3.116.36.1. Executing ABC.

3.116.37. Extracting gate netlist of module `\conv2d' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk, enabled by $abc$28076$auto$opt_dff.cc:219:make_patterns_logic$4254, asynchronously reset by !\rstn
Extracted 111 gates and 156 wires to a netlist network with 45 inputs and 40 outputs.

3.116.37.1. Executing ABC.

3.116.38. Extracting gate netlist of module `\conv2d' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk, enabled by $abc$28022$auto$opt_dff.cc:219:make_patterns_logic$4544, asynchronously reset by !\rstn
Extracted 49 gates and 69 wires to a netlist network with 20 inputs and 28 outputs.

3.116.38.1. Executing ABC.

3.116.39. Extracting gate netlist of module `\conv2d' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk, enabled by $abc$27946$auto$opt_dff.cc:219:make_patterns_logic$4372, asynchronously reset by !\rstn
Extracted 73 gates and 105 wires to a netlist network with 32 inputs and 13 outputs.

3.116.39.1. Executing ABC.

3.116.40. Extracting gate netlist of module `\conv2d' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk, enabled by $abc$27894$auto$opt_dff.cc:219:make_patterns_logic$4708, asynchronously reset by !\rstn
Extracted 44 gates and 67 wires to a netlist network with 23 inputs and 14 outputs.

3.116.40.1. Executing ABC.

3.116.41. Extracting gate netlist of module `\conv2d' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk, enabled by $abc$27824$auto$opt_dff.cc:219:make_patterns_logic$4338, asynchronously reset by !\rstn
Extracted 58 gates and 65 wires to a netlist network with 7 inputs and 24 outputs.

3.116.41.1. Executing ABC.

3.116.42. Extracting gate netlist of module `\conv2d' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk, enabled by $abc$27723$auto$opt_dff.cc:219:make_patterns_logic$4030, asynchronously reset by !\rstn
Extracted 37 gates and 74 wires to a netlist network with 37 inputs and 34 outputs.

3.116.42.1. Executing ABC.

3.116.43. Extracting gate netlist of module `\conv2d' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk, enabled by $abc$26170$auto$opt_dff.cc:219:make_patterns_logic$4715, asynchronously reset by !\rstn
Extracted 75 gates and 120 wires to a netlist network with 45 inputs and 29 outputs.

3.116.43.1. Executing ABC.

3.116.44. Extracting gate netlist of module `\conv2d' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk, enabled by $abc$29838$auto$opt_dff.cc:219:make_patterns_logic$4104, asynchronously reset by !\rstn
Extracted 42 gates and 106 wires to a netlist network with 64 inputs and 38 outputs.

3.116.44.1. Executing ABC.

3.116.45. Extracting gate netlist of module `\conv2d' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk, enabled by $abc$29823$auto$opt_dff.cc:219:make_patterns_logic$4095, asynchronously reset by !\rstn
Extracted 16 gates and 29 wires to a netlist network with 13 inputs and 6 outputs.

3.116.45.1. Executing ABC.

3.116.46. Extracting gate netlist of module `\conv2d' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk, enabled by $abc$29738$auto$opt_dff.cc:219:make_patterns_logic$4490, asynchronously reset by !\rstn
Extracted 82 gates and 123 wires to a netlist network with 41 inputs and 15 outputs.

3.116.46.1. Executing ABC.

3.116.47. Extracting gate netlist of module `\conv2d' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk, enabled by $abc$29722$auto$opt_dff.cc:219:make_patterns_logic$4291, asynchronously reset by !\rstn
Extracted 18 gates and 31 wires to a netlist network with 13 inputs and 10 outputs.

3.116.47.1. Executing ABC.

3.116.48. Extracting gate netlist of module `\conv2d' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk, enabled by $abc$28237$auto$opt_dff.cc:219:make_patterns_logic$4639, asynchronously reset by !\rstn
Extracted 41 gates and 55 wires to a netlist network with 14 inputs and 21 outputs.

3.116.48.1. Executing ABC.

3.116.49. Extracting gate netlist of module `\conv2d' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk, enabled by $abc$26256$auto$opt_dff.cc:219:make_patterns_logic$4410, asynchronously reset by !\rstn
Extracted 54 gates and 73 wires to a netlist network with 19 inputs and 21 outputs.

3.116.49.1. Executing ABC.

3.116.50. Extracting gate netlist of module `\conv2d' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk, enabled by $abc$29681$auto$opt_dff.cc:219:make_patterns_logic$4043, asynchronously reset by !\rstn
Extracted 37 gates and 56 wires to a netlist network with 19 inputs and 14 outputs.

3.116.50.1. Executing ABC.

3.116.51. Extracting gate netlist of module `\conv2d' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk, enabled by $abc$30457$auto$opt_dff.cc:219:make_patterns_logic$4072, asynchronously reset by !\rstn
Extracted 127 gates and 171 wires to a netlist network with 44 inputs and 27 outputs.

3.116.51.1. Executing ABC.

3.116.52. Extracting gate netlist of module `\conv2d' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk, enabled by $abc$25593$auto$opt_dff.cc:219:make_patterns_logic$4680, asynchronously reset by !\rstn
Extracted 56 gates and 74 wires to a netlist network with 18 inputs and 12 outputs.

3.116.52.1. Executing ABC.

3.116.53. Extracting gate netlist of module `\conv2d' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk, enabled by !$abc$29235$auto$opt_reduce.cc:134:opt_pmux$3940, asynchronously reset by !\rstn
Extracted 435 gates and 556 wires to a netlist network with 121 inputs and 62 outputs.

3.116.53.1. Executing ABC.

3.116.54. Extracting gate netlist of module `\conv2d' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk, enabled by $abc$30991$auto$opt_dff.cc:219:make_patterns_logic$4312, asynchronously reset by !\rstn
Extracted 69 gates and 107 wires to a netlist network with 38 inputs and 34 outputs.

3.116.54.1. Executing ABC.

3.116.55. Extracting gate netlist of module `\conv2d' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk, enabled by !$abc$30931$auto$opt_reduce.cc:134:opt_pmux$3976, asynchronously reset by !\rstn
Extracted 44 gates and 74 wires to a netlist network with 30 inputs and 20 outputs.

3.116.55.1. Executing ABC.

3.116.56. Extracting gate netlist of module `\conv2d' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk, enabled by $abc$25794$auto$opt_dff.cc:219:make_patterns_logic$4508, asynchronously reset by !\rstn
Extracted 97 gates and 142 wires to a netlist network with 45 inputs and 43 outputs.

3.116.56.1. Executing ABC.

3.116.57. Extracting gate netlist of module `\conv2d' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk, enabled by $abc$25676$auto$opt_dff.cc:219:make_patterns_logic$4267, asynchronously reset by !\rstn
Extracted 131 gates and 213 wires to a netlist network with 82 inputs and 28 outputs.

3.116.57.1. Executing ABC.

3.116.58. Extracting gate netlist of module `\conv2d' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk, enabled by $abc$28281$auto$opt_dff.cc:219:make_patterns_logic$4854, asynchronously reset by !\rstn
Extracted 831 gates and 989 wires to a netlist network with 158 inputs and 237 outputs.

3.116.58.1. Executing ABC.

3.116.59. Extracting gate netlist of module `\conv2d' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk, enabled by $abc$27495$auto$opt_dff.cc:219:make_patterns_logic$4835, asynchronously reset by !\rstn
Extracted 51 gates and 88 wires to a netlist network with 37 inputs and 28 outputs.

3.116.59.1. Executing ABC.

3.116.60. Extracting gate netlist of module `\conv2d' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk, enabled by $abc$31142$auto$opt_dff.cc:219:make_patterns_logic$4393, asynchronously reset by !\rstn
Extracted 65 gates and 100 wires to a netlist network with 35 inputs and 33 outputs.

3.116.60.1. Executing ABC.

3.116.61. Extracting gate netlist of module `\conv2d' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk, asynchronously reset by !\rstn
Extracted 1144 gates and 1618 wires to a netlist network with 473 inputs and 351 outputs.

3.116.61.1. Executing ABC.

yosys> abc -dff

3.117. Executing ABC pass (technology mapping using ABC).

3.117.1. Summary of detected clock domains:
  11 cells in clk=\clk, en=!$abc$33027$abc$31130$verific$n11608$201, arst=!\rstn, srst={ }
  14 cells in clk=\clk, en=$abc$33040$abc$30764$auto$opt_dff.cc:219:make_patterns_logic$4386, arst=!\rstn, srst={ }
  37 cells in clk=\clk, en=$abc$33058$abc$31091$auto$opt_dff.cc:219:make_patterns_logic$4303, arst=!\rstn, srst={ }
  19 cells in clk=\clk, en=$abc$33094$abc$25879$auto$opt_dff.cc:219:make_patterns_logic$4592, arst=!\rstn, srst={ }
  33 cells in clk=\clk, en=$abc$33183$abc$25771$auto$opt_dff.cc:219:make_patterns_logic$4453, arst=!\rstn, srst={ }
  90 cells in clk=\clk, en=$abc$33210$abc$27575$auto$opt_dff.cc:219:make_patterns_logic$4464, arst=!\rstn, srst={ }
  17 cells in clk=\clk, en=$abc$33319$abc$26634$auto$opt_dff.cc:219:make_patterns_logic$4154, arst=!\rstn, srst={ }
  39 cells in clk=\clk, en=!$abc$33331$abc$25649$auto$pmuxtree.cc:65:recursive_mux_generator$5657.S[1], arst=!\rstn, srst={ }
  8 cells in clk=\clk, en=$abc$33362$abc$26140$auto$opt_dff.cc:219:make_patterns_logic$4129, arst=!\rstn, srst={ }
  8 cells in clk=\clk, en=$abc$33392$abc$27709$auto$opt_dff.cc:219:make_patterns_logic$4570, arst=!\rstn, srst={ }
  6 cells in clk=\clk, en=$abc$33403$abc$25585$auto$opt_dff.cc:219:make_patterns_logic$4122, arst=!\rstn, srst={ }
  304 cells in clk=\clk, en=$abc$33584$abc$31242$auto$opt_dff.cc:219:make_patterns_logic$4499, arst=!\rstn, srst={ }
  71 cells in clk=\clk, en=$abc$33112$abc$30616$auto$opt_dff.cc:219:make_patterns_logic$4603, arst=!\rstn, srst={ }
  13 cells in clk=\clk, en=$abc$33304$abc$27558$auto$opt_dff.cc:219:make_patterns_logic$4475, arst=!\rstn, srst={ }
  288 cells in clk=\clk, en=$abc$33959$abc$26645$auto$opt_dff.cc:219:make_patterns_logic$4163, arst=!\rstn, srst={ }
  80 cells in clk=\clk, en=$abc$34188$abc$27052$auto$opt_dff.cc:219:make_patterns_logic$4760, arst=!\rstn, srst={ }
  79 cells in clk=\clk, en=$abc$34274$abc$26962$auto$opt_dff.cc:219:make_patterns_logic$4745, arst=!\rstn, srst={ }
  36 cells in clk=\clk, en=$abc$34445$abc$26836$auto$opt_dff.cc:219:make_patterns_logic$4222, arst=!\rstn, srst={ }
  13 cells in clk=\clk, en=$abc$34566$abc$28224$auto$opt_dff.cc:219:make_patterns_logic$4669, arst=!\rstn, srst={ }
  22 cells in clk=\clk, en=$abc$34580$abc$30911$auto$opt_dff.cc:219:make_patterns_logic$4278, arst=!\rstn, srst={ }
  12 cells in clk=\clk, en=!$abc$35276$abc$30897$verific$n11606$199, arst=!\rstn, srst={ }
  148 cells in clk=\clk, en=$abc$33411$abc$26310$auto$opt_dff.cc:219:make_patterns_logic$4440, arst=!\rstn, srst={ }
  86 cells in clk=\clk, en=$abc$35290$abc$26065$auto$opt_dff.cc:194:make_patterns_logic$4396, arst=!\rstn, srst={ }
  24 cells in clk=\clk, en=$abc$35365$abc$30780$auto$opt_dff.cc:219:make_patterns_logic$4052, arst=!\rstn, srst={ }
  10 cells in clk=\clk, en=$abc$35388$abc$30886$auto$opt_dff.cc:219:make_patterns_logic$4654, arst=!\rstn, srst={ }
  59 cells in clk=\clk, en=$abc$33899$abc$26004$auto$opt_dff.cc:219:make_patterns_logic$4579, arst=!\rstn, srst={ }
  89 cells in clk=\clk, en=$abc$35399$abc$30791$auto$opt_dff.cc:219:make_patterns_logic$4555, arst=!\rstn, srst={ }
  84 cells in clk=\clk, en=$abc$35490$abc$30686$auto$opt_dff.cc:219:make_patterns_logic$4063, arst=!\rstn, srst={ }
  78 cells in clk=\clk, en=$abc$35598$abc$27404$auto$opt_dff.cc:219:make_patterns_logic$4820, arst=!\rstn, srst={ }
  77 cells in clk=\clk, en=$abc$35686$abc$27316$auto$opt_dff.cc:219:make_patterns_logic$4805, arst=!\rstn, srst={ }
  72 cells in clk=\clk, en=$abc$35772$abc$27229$auto$opt_dff.cc:219:make_patterns_logic$4790, arst=!\rstn, srst={ }
  61 cells in clk=\clk, en=$abc$35856$abc$25899$auto$opt_dff.cc:219:make_patterns_logic$4178, arst=!\rstn, srst={ }
  51 cells in clk=\clk, en=$abc$36107$abc$28022$auto$opt_dff.cc:219:make_patterns_logic$4544, arst=!\rstn, srst={ }
  53 cells in clk=\clk, en=$abc$36235$abc$27894$auto$opt_dff.cc:219:make_patterns_logic$4708, arst=!\rstn, srst={ }
  58 cells in clk=\clk, en=$abc$36284$abc$27824$auto$opt_dff.cc:219:make_patterns_logic$4338, arst=!\rstn, srst={ }
  50 cells in clk=\clk, en=$abc$38769$abc$27495$auto$opt_dff.cc:219:make_patterns_logic$4835, arst=!\rstn, srst={ }
  80 cells in clk=\clk, en=$abc$34360$abc$26874$auto$opt_dff.cc:219:make_patterns_logic$4730, arst=!\rstn, srst={ }
  65 cells in clk=\clk, en=$abc$38833$abc$31142$auto$opt_dff.cc:219:make_patterns_logic$4393, arst=!\rstn, srst={ }
  634 cells in clk=\clk, en=$abc$34606$abc$29855$auto$opt_dff.cc:219:make_patterns_logic$4844, arst=!\rstn, srst={ }
  36 cells in clk=\clk, en=$abc$36540$abc$29838$auto$opt_dff.cc:219:make_patterns_logic$4104, arst=!\rstn, srst={ }
  18 cells in clk=\clk, en=$abc$36585$abc$29823$auto$opt_dff.cc:219:make_patterns_logic$4095, arst=!\rstn, srst={ }
  79 cells in clk=\clk, en=$abc$36601$abc$29738$auto$opt_dff.cc:219:make_patterns_logic$4490, arst=!\rstn, srst={ }
  18 cells in clk=\clk, en=$abc$36679$abc$29722$auto$opt_dff.cc:219:make_patterns_logic$4291, arst=!\rstn, srst={ }
  49 cells in clk=\clk, en=$abc$36354$abc$27723$auto$opt_dff.cc:219:make_patterns_logic$4030, arst=!\rstn, srst={ }
  41 cells in clk=\clk, en=$abc$36699$abc$28237$auto$opt_dff.cc:219:make_patterns_logic$4639, arst=!\rstn, srst={ }
  78 cells in clk=\clk, en=$abc$36456$abc$26170$auto$opt_dff.cc:219:make_patterns_logic$4715, arst=!\rstn, srst={ }
  99 cells in clk=\clk, en=$abc$35963$abc$28076$auto$opt_dff.cc:219:make_patterns_logic$4254, arst=!\rstn, srst={ }
  49 cells in clk=\clk, en=$abc$36817$abc$29681$auto$opt_dff.cc:219:make_patterns_logic$4043, arst=!\rstn, srst={ }
  78 cells in clk=\clk, en=$abc$34481$abc$27141$auto$opt_dff.cc:219:make_patterns_logic$4775, arst=!\rstn, srst={ }
  839 cells in clk=\clk, en=$abc$37894$abc$28281$auto$opt_dff.cc:219:make_patterns_logic$4854, arst=!\rstn, srst={ }
  124 cells in clk=\clk, en=$abc$36859$abc$30457$auto$opt_dff.cc:219:make_patterns_logic$4072, arst=!\rstn, srst={ }
  54 cells in clk=\clk, en=$abc$36741$abc$26256$auto$opt_dff.cc:219:make_patterns_logic$4410, arst=!\rstn, srst={ }
  55 cells in clk=\clk, en=$abc$36984$abc$25593$auto$opt_dff.cc:219:make_patterns_logic$4680, arst=!\rstn, srst={ }
  422 cells in clk=\clk, en=!$abc$37041$abc$29235$auto$opt_reduce.cc:134:opt_pmux$3940, arst=!\rstn, srst={ }
  70 cells in clk=\clk, en=$abc$37484$abc$30991$auto$opt_dff.cc:219:make_patterns_logic$4312, arst=!\rstn, srst={ }
  44 cells in clk=\clk, en=!$abc$37586$abc$30931$auto$opt_reduce.cc:134:opt_pmux$3976, arst=!\rstn, srst={ }
  70 cells in clk=\clk, en=$abc$36159$abc$27946$auto$opt_dff.cc:219:make_patterns_logic$4372, arst=!\rstn, srst={ }
  79 cells in clk=\clk, en=$abc$37647$abc$25794$auto$opt_dff.cc:219:make_patterns_logic$4508, arst=!\rstn, srst={ }
  127 cells in clk=\clk, en=$abc$37747$abc$25676$auto$opt_dff.cc:219:make_patterns_logic$4267, arst=!\rstn, srst={ }
  1163 cells in clk=\clk, en={ }, arst=!\rstn, srst={ }

3.117.2. Extracting gate netlist of module `\conv2d' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk, enabled by !$abc$33027$abc$31130$verific$n11608$201, asynchronously reset by !\rstn
Extracted 11 gates and 22 wires to a netlist network with 11 inputs and 7 outputs.

3.117.2.1. Executing ABC.

3.117.3. Extracting gate netlist of module `\conv2d' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk, enabled by $abc$33040$abc$30764$auto$opt_dff.cc:219:make_patterns_logic$4386, asynchronously reset by !\rstn
Extracted 14 gates and 28 wires to a netlist network with 14 inputs and 3 outputs.

3.117.3.1. Executing ABC.

3.117.4. Extracting gate netlist of module `\conv2d' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk, enabled by $abc$33058$abc$31091$auto$opt_dff.cc:219:make_patterns_logic$4303, asynchronously reset by !\rstn
Extracted 37 gates and 61 wires to a netlist network with 24 inputs and 5 outputs.

3.117.4.1. Executing ABC.

3.117.5. Extracting gate netlist of module `\conv2d' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk, enabled by $abc$33094$abc$25879$auto$opt_dff.cc:219:make_patterns_logic$4592, asynchronously reset by !\rstn
Extracted 19 gates and 32 wires to a netlist network with 13 inputs and 8 outputs.

3.117.5.1. Executing ABC.

3.117.6. Extracting gate netlist of module `\conv2d' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk, enabled by $abc$33183$abc$25771$auto$opt_dff.cc:219:make_patterns_logic$4453, asynchronously reset by !\rstn
Extracted 33 gates and 56 wires to a netlist network with 23 inputs and 10 outputs.

3.117.6.1. Executing ABC.

3.117.7. Extracting gate netlist of module `\conv2d' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk, enabled by $abc$33210$abc$27575$auto$opt_dff.cc:219:make_patterns_logic$4464, asynchronously reset by !\rstn
Extracted 90 gates and 135 wires to a netlist network with 45 inputs and 8 outputs.

3.117.7.1. Executing ABC.

3.117.8. Extracting gate netlist of module `\conv2d' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk, enabled by $abc$33319$abc$26634$auto$opt_dff.cc:219:make_patterns_logic$4154, asynchronously reset by !\rstn
Extracted 17 gates and 27 wires to a netlist network with 10 inputs and 4 outputs.

3.117.8.1. Executing ABC.

3.117.9. Extracting gate netlist of module `\conv2d' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk, enabled by !$abc$33331$abc$25649$auto$pmuxtree.cc:65:recursive_mux_generator$5657.S[1], asynchronously reset by !\rstn
Extracted 39 gates and 69 wires to a netlist network with 30 inputs and 17 outputs.

3.117.9.1. Executing ABC.

3.117.10. Extracting gate netlist of module `\conv2d' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk, enabled by $abc$33362$abc$26140$auto$opt_dff.cc:219:make_patterns_logic$4129, asynchronously reset by !\rstn
Extracted 8 gates and 15 wires to a netlist network with 7 inputs and 4 outputs.

3.117.10.1. Executing ABC.

3.117.11. Extracting gate netlist of module `\conv2d' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk, enabled by $abc$33392$abc$27709$auto$opt_dff.cc:219:make_patterns_logic$4570, asynchronously reset by !\rstn
Extracted 8 gates and 16 wires to a netlist network with 8 inputs and 2 outputs.

3.117.11.1. Executing ABC.

3.117.12. Extracting gate netlist of module `\conv2d' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk, enabled by $abc$33403$abc$25585$auto$opt_dff.cc:219:make_patterns_logic$4122, asynchronously reset by !\rstn
Extracted 6 gates and 13 wires to a netlist network with 7 inputs and 2 outputs.

3.117.12.1. Executing ABC.

3.117.13. Extracting gate netlist of module `\conv2d' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk, enabled by $abc$33584$abc$31242$auto$opt_dff.cc:219:make_patterns_logic$4499, asynchronously reset by !\rstn
Extracted 304 gates and 470 wires to a netlist network with 166 inputs and 70 outputs.

3.117.13.1. Executing ABC.

3.117.14. Extracting gate netlist of module `\conv2d' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk, enabled by $abc$33112$abc$30616$auto$opt_dff.cc:219:make_patterns_logic$4603, asynchronously reset by !\rstn
Extracted 71 gates and 82 wires to a netlist network with 11 inputs and 16 outputs.

3.117.14.1. Executing ABC.

3.117.15. Extracting gate netlist of module `\conv2d' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk, enabled by $abc$33304$abc$27558$auto$opt_dff.cc:219:make_patterns_logic$4475, asynchronously reset by !\rstn
Extracted 13 gates and 17 wires to a netlist network with 4 inputs and 8 outputs.

3.117.15.1. Executing ABC.

3.117.16. Extracting gate netlist of module `\conv2d' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk, enabled by $abc$33959$abc$26645$auto$opt_dff.cc:219:make_patterns_logic$4163, asynchronously reset by !\rstn
Extracted 228 gates and 360 wires to a netlist network with 132 inputs and 83 outputs.

3.117.16.1. Executing ABC.

3.117.17. Extracting gate netlist of module `\conv2d' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk, enabled by $abc$34188$abc$27052$auto$opt_dff.cc:219:make_patterns_logic$4760, asynchronously reset by !\rstn
Extracted 80 gates and 130 wires to a netlist network with 50 inputs and 28 outputs.

3.117.17.1. Executing ABC.

3.117.18. Extracting gate netlist of module `\conv2d' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk, enabled by $abc$34274$abc$26962$auto$opt_dff.cc:219:make_patterns_logic$4745, asynchronously reset by !\rstn
Extracted 79 gates and 128 wires to a netlist network with 49 inputs and 28 outputs.

3.117.18.1. Executing ABC.

3.117.19. Extracting gate netlist of module `\conv2d' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk, enabled by $abc$34445$abc$26836$auto$opt_dff.cc:219:make_patterns_logic$4222, asynchronously reset by !\rstn
Extracted 36 gates and 68 wires to a netlist network with 32 inputs and 27 outputs.

3.117.19.1. Executing ABC.

3.117.20. Extracting gate netlist of module `\conv2d' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk, enabled by $abc$34566$abc$28224$auto$opt_dff.cc:219:make_patterns_logic$4669, asynchronously reset by !\rstn
Extracted 13 gates and 26 wires to a netlist network with 13 inputs and 4 outputs.

3.117.20.1. Executing ABC.

3.117.21. Extracting gate netlist of module `\conv2d' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk, enabled by $abc$34580$abc$30911$auto$opt_dff.cc:219:make_patterns_logic$4278, asynchronously reset by !\rstn
Extracted 22 gates and 36 wires to a netlist network with 13 inputs and 11 outputs.

3.117.21.1. Executing ABC.

3.117.22. Extracting gate netlist of module `\conv2d' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk, enabled by !$abc$35276$abc$30897$verific$n11606$199, asynchronously reset by !\rstn
Extracted 12 gates and 24 wires to a netlist network with 12 inputs and 10 outputs.

3.117.22.1. Executing ABC.

3.117.23. Extracting gate netlist of module `\conv2d' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk, enabled by $abc$33411$abc$26310$auto$opt_dff.cc:219:make_patterns_logic$4440, asynchronously reset by !\rstn
Extracted 148 gates and 268 wires to a netlist network with 120 inputs and 114 outputs.

3.117.23.1. Executing ABC.

3.117.24. Extracting gate netlist of module `\conv2d' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk, enabled by $abc$35290$abc$26065$auto$opt_dff.cc:194:make_patterns_logic$4396, asynchronously reset by !\rstn
Extracted 86 gates and 126 wires to a netlist network with 40 inputs and 32 outputs.

3.117.24.1. Executing ABC.

3.117.25. Extracting gate netlist of module `\conv2d' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk, enabled by $abc$35365$abc$30780$auto$opt_dff.cc:219:make_patterns_logic$4052, asynchronously reset by !\rstn
Extracted 24 gates and 61 wires to a netlist network with 37 inputs and 21 outputs.

3.117.25.1. Executing ABC.

3.117.26. Extracting gate netlist of module `\conv2d' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk, enabled by $abc$35388$abc$30886$auto$opt_dff.cc:219:make_patterns_logic$4654, asynchronously reset by !\rstn
Extracted 10 gates and 20 wires to a netlist network with 10 inputs and 4 outputs.

3.117.26.1. Executing ABC.

3.117.27. Extracting gate netlist of module `\conv2d' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk, enabled by $abc$33899$abc$26004$auto$opt_dff.cc:219:make_patterns_logic$4579, asynchronously reset by !\rstn
Extracted 59 gates and 66 wires to a netlist network with 7 inputs and 11 outputs.

3.117.27.1. Executing ABC.

3.117.28. Extracting gate netlist of module `\conv2d' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk, enabled by $abc$35399$abc$30791$auto$opt_dff.cc:219:make_patterns_logic$4555, asynchronously reset by !\rstn
Extracted 89 gates and 105 wires to a netlist network with 16 inputs and 15 outputs.

3.117.28.1. Executing ABC.

3.117.29. Extracting gate netlist of module `\conv2d' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk, enabled by $abc$35490$abc$30686$auto$opt_dff.cc:219:make_patterns_logic$4063, asynchronously reset by !\rstn
Extracted 84 gates and 120 wires to a netlist network with 36 inputs and 48 outputs.

3.117.29.1. Executing ABC.

3.117.30. Extracting gate netlist of module `\conv2d' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk, enabled by $abc$35598$abc$27404$auto$opt_dff.cc:219:make_patterns_logic$4820, asynchronously reset by !\rstn
Extracted 78 gates and 126 wires to a netlist network with 48 inputs and 29 outputs.

3.117.30.1. Executing ABC.

3.117.31. Extracting gate netlist of module `\conv2d' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk, enabled by $abc$35686$abc$27316$auto$opt_dff.cc:219:make_patterns_logic$4805, asynchronously reset by !\rstn
Extracted 77 gates and 124 wires to a netlist network with 47 inputs and 30 outputs.

3.117.31.1. Executing ABC.

3.117.32. Extracting gate netlist of module `\conv2d' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk, enabled by $abc$35772$abc$27229$auto$opt_dff.cc:219:make_patterns_logic$4790, asynchronously reset by !\rstn
Extracted 72 gates and 114 wires to a netlist network with 42 inputs and 29 outputs.

3.117.32.1. Executing ABC.

3.117.33. Extracting gate netlist of module `\conv2d' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk, enabled by $abc$35856$abc$25899$auto$opt_dff.cc:219:make_patterns_logic$4178, asynchronously reset by !\rstn
Extracted 61 gates and 123 wires to a netlist network with 62 inputs and 33 outputs.

3.117.33.1. Executing ABC.

3.117.34. Extracting gate netlist of module `\conv2d' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk, enabled by $abc$36107$abc$28022$auto$opt_dff.cc:219:make_patterns_logic$4544, asynchronously reset by !\rstn
Extracted 51 gates and 72 wires to a netlist network with 21 inputs and 29 outputs.

3.117.34.1. Executing ABC.

3.117.35. Extracting gate netlist of module `\conv2d' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk, enabled by $abc$36235$abc$27894$auto$opt_dff.cc:219:make_patterns_logic$4708, asynchronously reset by !\rstn
Extracted 53 gates and 73 wires to a netlist network with 20 inputs and 12 outputs.

3.117.35.1. Executing ABC.

3.117.36. Extracting gate netlist of module `\conv2d' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk, enabled by $abc$36284$abc$27824$auto$opt_dff.cc:219:make_patterns_logic$4338, asynchronously reset by !\rstn
Extracted 58 gates and 65 wires to a netlist network with 7 inputs and 24 outputs.

3.117.36.1. Executing ABC.

3.117.37. Extracting gate netlist of module `\conv2d' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk, enabled by $abc$38769$abc$27495$auto$opt_dff.cc:219:make_patterns_logic$4835, asynchronously reset by !\rstn
Extracted 50 gates and 87 wires to a netlist network with 37 inputs and 27 outputs.

3.117.37.1. Executing ABC.

3.117.38. Extracting gate netlist of module `\conv2d' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk, enabled by $abc$34360$abc$26874$auto$opt_dff.cc:219:make_patterns_logic$4730, asynchronously reset by !\rstn
Extracted 80 gates and 130 wires to a netlist network with 50 inputs and 28 outputs.

3.117.38.1. Executing ABC.

3.117.39. Extracting gate netlist of module `\conv2d' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk, enabled by $abc$38833$abc$31142$auto$opt_dff.cc:219:make_patterns_logic$4393, asynchronously reset by !\rstn
Extracted 65 gates and 100 wires to a netlist network with 35 inputs and 33 outputs.

3.117.39.1. Executing ABC.

3.117.40. Extracting gate netlist of module `\conv2d' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk, enabled by $abc$34606$abc$29855$auto$opt_dff.cc:219:make_patterns_logic$4844, asynchronously reset by !\rstn
Extracted 634 gates and 923 wires to a netlist network with 289 inputs and 215 outputs.

3.117.40.1. Executing ABC.

3.117.41. Extracting gate netlist of module `\conv2d' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk, enabled by $abc$36540$abc$29838$auto$opt_dff.cc:219:make_patterns_logic$4104, asynchronously reset by !\rstn
Extracted 36 gates and 88 wires to a netlist network with 52 inputs and 31 outputs.

3.117.41.1. Executing ABC.

3.117.42. Extracting gate netlist of module `\conv2d' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk, enabled by $abc$36585$abc$29823$auto$opt_dff.cc:219:make_patterns_logic$4095, asynchronously reset by !\rstn
Extracted 18 gates and 29 wires to a netlist network with 11 inputs and 8 outputs.

3.117.42.1. Executing ABC.

3.117.43. Extracting gate netlist of module `\conv2d' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk, enabled by $abc$36601$abc$29738$auto$opt_dff.cc:219:make_patterns_logic$4490, asynchronously reset by !\rstn
Extracted 79 gates and 120 wires to a netlist network with 41 inputs and 17 outputs.

3.117.43.1. Executing ABC.

3.117.44. Extracting gate netlist of module `\conv2d' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk, enabled by $abc$36679$abc$29722$auto$opt_dff.cc:219:make_patterns_logic$4291, asynchronously reset by !\rstn
Extracted 18 gates and 31 wires to a netlist network with 13 inputs and 10 outputs.

3.117.44.1. Executing ABC.

3.117.45. Extracting gate netlist of module `\conv2d' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk, enabled by $abc$36354$abc$27723$auto$opt_dff.cc:219:make_patterns_logic$4030, asynchronously reset by !\rstn
Extracted 49 gates and 87 wires to a netlist network with 38 inputs and 34 outputs.

3.117.45.1. Executing ABC.

3.117.46. Extracting gate netlist of module `\conv2d' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk, enabled by $abc$36699$abc$28237$auto$opt_dff.cc:219:make_patterns_logic$4639, asynchronously reset by !\rstn
Extracted 41 gates and 55 wires to a netlist network with 14 inputs and 21 outputs.

3.117.46.1. Executing ABC.

3.117.47. Extracting gate netlist of module `\conv2d' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk, enabled by $abc$36456$abc$26170$auto$opt_dff.cc:219:make_patterns_logic$4715, asynchronously reset by !\rstn
Extracted 78 gates and 126 wires to a netlist network with 48 inputs and 29 outputs.

3.117.47.1. Executing ABC.

3.117.48. Extracting gate netlist of module `\conv2d' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk, enabled by $abc$35963$abc$28076$auto$opt_dff.cc:219:make_patterns_logic$4254, asynchronously reset by !\rstn
Extracted 99 gates and 140 wires to a netlist network with 41 inputs and 42 outputs.

3.117.48.1. Executing ABC.

3.117.49. Extracting gate netlist of module `\conv2d' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk, enabled by $abc$36817$abc$29681$auto$opt_dff.cc:219:make_patterns_logic$4043, asynchronously reset by !\rstn
Extracted 49 gates and 74 wires to a netlist network with 25 inputs and 14 outputs.

3.117.49.1. Executing ABC.

3.117.50. Extracting gate netlist of module `\conv2d' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk, enabled by $abc$34481$abc$27141$auto$opt_dff.cc:219:make_patterns_logic$4775, asynchronously reset by !\rstn
Extracted 78 gates and 126 wires to a netlist network with 48 inputs and 30 outputs.

3.117.50.1. Executing ABC.

3.117.51. Extracting gate netlist of module `\conv2d' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk, enabled by $abc$37894$abc$28281$auto$opt_dff.cc:219:make_patterns_logic$4854, asynchronously reset by !\rstn
Extracted 839 gates and 997 wires to a netlist network with 158 inputs and 237 outputs.

3.117.51.1. Executing ABC.

3.117.52. Extracting gate netlist of module `\conv2d' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk, enabled by $abc$36859$abc$30457$auto$opt_dff.cc:219:make_patterns_logic$4072, asynchronously reset by !\rstn
Extracted 124 gates and 166 wires to a netlist network with 42 inputs and 28 outputs.

3.117.52.1. Executing ABC.

3.117.53. Extracting gate netlist of module `\conv2d' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk, enabled by $abc$36741$abc$26256$auto$opt_dff.cc:219:make_patterns_logic$4410, asynchronously reset by !\rstn
Extracted 54 gates and 72 wires to a netlist network with 18 inputs and 21 outputs.

3.117.53.1. Executing ABC.

3.117.54. Extracting gate netlist of module `\conv2d' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk, enabled by $abc$36984$abc$25593$auto$opt_dff.cc:219:make_patterns_logic$4680, asynchronously reset by !\rstn
Extracted 55 gates and 72 wires to a netlist network with 17 inputs and 11 outputs.

3.117.54.1. Executing ABC.

3.117.55. Extracting gate netlist of module `\conv2d' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk, enabled by !$abc$37041$abc$29235$auto$opt_reduce.cc:134:opt_pmux$3940, asynchronously reset by !\rstn
Extracted 422 gates and 543 wires to a netlist network with 121 inputs and 62 outputs.

3.117.55.1. Executing ABC.

3.117.56. Extracting gate netlist of module `\conv2d' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk, enabled by $abc$37484$abc$30991$auto$opt_dff.cc:219:make_patterns_logic$4312, asynchronously reset by !\rstn
Extracted 70 gates and 108 wires to a netlist network with 38 inputs and 35 outputs.

3.117.56.1. Executing ABC.

3.117.57. Extracting gate netlist of module `\conv2d' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk, enabled by !$abc$37586$abc$30931$auto$opt_reduce.cc:134:opt_pmux$3976, asynchronously reset by !\rstn
Extracted 44 gates and 73 wires to a netlist network with 29 inputs and 20 outputs.

3.117.57.1. Executing ABC.

3.117.58. Extracting gate netlist of module `\conv2d' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk, enabled by $abc$36159$abc$27946$auto$opt_dff.cc:219:make_patterns_logic$4372, asynchronously reset by !\rstn
Extracted 70 gates and 100 wires to a netlist network with 30 inputs and 11 outputs.

3.117.58.1. Executing ABC.

3.117.59. Extracting gate netlist of module `\conv2d' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk, enabled by $abc$37647$abc$25794$auto$opt_dff.cc:219:make_patterns_logic$4508, asynchronously reset by !\rstn
Extracted 79 gates and 115 wires to a netlist network with 36 inputs and 29 outputs.

3.117.59.1. Executing ABC.

3.117.60. Extracting gate netlist of module `\conv2d' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk, enabled by $abc$37747$abc$25676$auto$opt_dff.cc:219:make_patterns_logic$4267, asynchronously reset by !\rstn
Extracted 127 gates and 203 wires to a netlist network with 76 inputs and 27 outputs.

3.117.60.1. Executing ABC.

3.117.61. Extracting gate netlist of module `\conv2d' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk, asynchronously reset by !\rstn
Extracted 1143 gates and 1622 wires to a netlist network with 478 inputs and 362 outputs.

3.117.61.1. Executing ABC.

yosys> abc -dff

3.118. Executing ABC pass (technology mapping using ABC).

3.118.1. Summary of detected clock domains:
  11 cells in clk=\clk, en=!$abc$40377$abc$33027$abc$31130$verific$n11608$201, arst=!\rstn, srst={ }
  14 cells in clk=\clk, en=$abc$40389$abc$33040$abc$30764$auto$opt_dff.cc:219:make_patterns_logic$4386, arst=!\rstn, srst={ }
  39 cells in clk=\clk, en=$abc$40404$abc$33058$abc$31091$auto$opt_dff.cc:219:make_patterns_logic$4303, arst=!\rstn, srst={ }
  34 cells in clk=\clk, en=$abc$40445$abc$33094$abc$25879$auto$opt_dff.cc:219:make_patterns_logic$4592, arst=!\rstn, srst={ }
  41 cells in clk=\clk, en=$abc$40464$abc$33183$abc$25771$auto$opt_dff.cc:219:make_patterns_logic$4453, arst=!\rstn, srst={ }
  18 cells in clk=\clk, en=$abc$40594$abc$33319$abc$26634$auto$opt_dff.cc:219:make_patterns_logic$4154, arst=!\rstn, srst={ }
  90 cells in clk=\clk, en=$abc$40504$abc$33210$abc$27575$auto$opt_dff.cc:219:make_patterns_logic$4464, arst=!\rstn, srst={ }
  28 cells in clk=\clk, en=$abc$40660$abc$33362$abc$26140$auto$opt_dff.cc:219:make_patterns_logic$4129, arst=!\rstn, srst={ }
  36 cells in clk=\clk, en=!$abc$40613$abc$33331$abc$25649$auto$pmuxtree.cc:65:recursive_mux_generator$5657.S[1], arst=!\rstn, srst={ }
  10 cells in clk=\clk, en=$abc$40670$abc$33392$abc$27709$auto$opt_dff.cc:219:make_patterns_logic$4570, arst=!\rstn, srst={ }
  7 cells in clk=\clk, en=$abc$40680$abc$33403$abc$25585$auto$opt_dff.cc:219:make_patterns_logic$4122, arst=!\rstn, srst={ }
  303 cells in clk=\clk, en=$abc$40688$abc$33584$abc$31242$auto$opt_dff.cc:219:make_patterns_logic$4499, arst=!\rstn, srst={ }
  13 cells in clk=\clk, en=$abc$41065$abc$33304$abc$27558$auto$opt_dff.cc:219:make_patterns_logic$4475, arst=!\rstn, srst={ }
  279 cells in clk=\clk, en=$abc$41081$abc$33959$abc$26645$auto$opt_dff.cc:219:make_patterns_logic$4163, arst=!\rstn, srst={ }
  79 cells in clk=\clk, en=$abc$41302$abc$34188$abc$27052$auto$opt_dff.cc:219:make_patterns_logic$4760, arst=!\rstn, srst={ }
  71 cells in clk=\clk, en=$abc$40993$abc$33112$abc$30616$auto$opt_dff.cc:219:make_patterns_logic$4603, arst=!\rstn, srst={ }
  33 cells in clk=\clk, en=$abc$41473$abc$34445$abc$26836$auto$opt_dff.cc:219:make_patterns_logic$4222, arst=!\rstn, srst={ }
  11 cells in clk=\clk, en=$abc$41510$abc$34566$abc$28224$auto$opt_dff.cc:219:make_patterns_logic$4669, arst=!\rstn, srst={ }
  13 cells in clk=\clk, en=!$abc$41550$abc$35276$abc$30897$verific$n11606$199, arst=!\rstn, srst={ }
  156 cells in clk=\clk, en=$abc$41564$abc$33411$abc$26310$auto$opt_dff.cc:219:make_patterns_logic$4440, arst=!\rstn, srst={ }
  47 cells in clk=\clk, en=$abc$41714$abc$35290$abc$26065$auto$opt_dff.cc:194:make_patterns_logic$4396, arst=!\rstn, srst={ }
  18 cells in clk=\clk, en=$abc$41791$abc$35365$abc$30780$auto$opt_dff.cc:219:make_patterns_logic$4052, arst=!\rstn, srst={ }
  11 cells in clk=\clk, en=$abc$41817$abc$35388$abc$30886$auto$opt_dff.cc:219:make_patterns_logic$4654, arst=!\rstn, srst={ }
  124 cells in clk=\clk, en=$abc$46100$abc$37747$abc$25676$auto$opt_dff.cc:219:make_patterns_logic$4267, arst=!\rstn, srst={ }
  60 cells in clk=\clk, en=$abc$41829$abc$33899$abc$26004$auto$opt_dff.cc:219:make_patterns_logic$4579, arst=!\rstn, srst={ }
  89 cells in clk=\clk, en=$abc$41889$abc$35399$abc$30791$auto$opt_dff.cc:219:make_patterns_logic$4555, arst=!\rstn, srst={ }
  84 cells in clk=\clk, en=$abc$41981$abc$35490$abc$30686$auto$opt_dff.cc:219:make_patterns_logic$4063, arst=!\rstn, srst={ }
  81 cells in clk=\clk, en=$abc$42089$abc$35598$abc$27404$auto$opt_dff.cc:219:make_patterns_logic$4820, arst=!\rstn, srst={ }
  75 cells in clk=\clk, en=$abc$42177$abc$35686$abc$27316$auto$opt_dff.cc:219:make_patterns_logic$4805, arst=!\rstn, srst={ }
  75 cells in clk=\clk, en=$abc$42263$abc$35772$abc$27229$auto$opt_dff.cc:219:make_patterns_logic$4790, arst=!\rstn, srst={ }
  52 cells in clk=\clk, en=$abc$42454$abc$36107$abc$28022$auto$opt_dff.cc:219:make_patterns_logic$4544, arst=!\rstn, srst={ }
  52 cells in clk=\clk, en=$abc$42507$abc$36235$abc$27894$auto$opt_dff.cc:219:make_patterns_logic$4708, arst=!\rstn, srst={ }
  78 cells in clk=\clk, en=$abc$41388$abc$34274$abc$26962$auto$opt_dff.cc:219:make_patterns_logic$4745, arst=!\rstn, srst={ }
  58 cells in clk=\clk, en=$abc$42560$abc$36284$abc$27824$auto$opt_dff.cc:219:make_patterns_logic$4338, arst=!\rstn, srst={ }
  50 cells in clk=\clk, en=$abc$42630$abc$38769$abc$27495$auto$opt_dff.cc:219:make_patterns_logic$4835, arst=!\rstn, srst={ }
  23 cells in clk=\clk, en=$abc$41523$abc$34580$abc$30911$auto$opt_dff.cc:219:make_patterns_logic$4278, arst=!\rstn, srst={ }
  74 cells in clk=\clk, en=$abc$42693$abc$34360$abc$26874$auto$opt_dff.cc:219:make_patterns_logic$4730, arst=!\rstn, srst={ }
  64 cells in clk=\clk, en=$abc$42777$abc$38833$abc$31142$auto$opt_dff.cc:219:make_patterns_logic$4393, arst=!\rstn, srst={ }
  32 cells in clk=\clk, en=$abc$43553$abc$36540$abc$29838$auto$opt_dff.cc:219:make_patterns_logic$4104, arst=!\rstn, srst={ }
  17 cells in clk=\clk, en=$abc$43591$abc$36585$abc$29823$auto$opt_dff.cc:219:make_patterns_logic$4095, arst=!\rstn, srst={ }
  82 cells in clk=\clk, en=$abc$43608$abc$36601$abc$29738$auto$opt_dff.cc:219:make_patterns_logic$4490, arst=!\rstn, srst={ }
  18 cells in clk=\clk, en=$abc$43690$abc$36679$abc$29722$auto$opt_dff.cc:219:make_patterns_logic$4291, arst=!\rstn, srst={ }
  40 cells in clk=\clk, en=$abc$43710$abc$36354$abc$27723$auto$opt_dff.cc:219:make_patterns_logic$4030, arst=!\rstn, srst={ }
  49 cells in clk=\clk, en=$abc$43812$abc$36699$abc$28237$auto$opt_dff.cc:219:make_patterns_logic$4639, arst=!\rstn, srst={ }
  74 cells in clk=\clk, en=$abc$43854$abc$36456$abc$26170$auto$opt_dff.cc:219:make_patterns_logic$4715, arst=!\rstn, srst={ }
  101 cells in clk=\clk, en=$abc$43938$abc$35963$abc$28076$auto$opt_dff.cc:219:make_patterns_logic$4254, arst=!\rstn, srst={ }
  50 cells in clk=\clk, en=$abc$44072$abc$36817$abc$29681$auto$opt_dff.cc:219:make_patterns_logic$4043, arst=!\rstn, srst={ }
  512 cells in clk=\clk, en=$abc$42875$abc$34606$abc$29855$auto$opt_dff.cc:219:make_patterns_logic$4844, arst=!\rstn, srst={ }
  70 cells in clk=\clk, en=$abc$44124$abc$34481$abc$27141$auto$opt_dff.cc:219:make_patterns_logic$4775, arst=!\rstn, srst={ }
  123 cells in clk=\clk, en=$abc$45087$abc$36859$abc$30457$auto$opt_dff.cc:219:make_patterns_logic$4072, arst=!\rstn, srst={ }
  65 cells in clk=\clk, en=$abc$45213$abc$36741$abc$26256$auto$opt_dff.cc:219:make_patterns_logic$4410, arst=!\rstn, srst={ }
  55 cells in clk=\clk, en=$abc$45278$abc$36984$abc$25593$auto$opt_dff.cc:219:make_patterns_logic$4680, arst=!\rstn, srst={ }
  987 cells in clk=\clk, en=$abc$44210$abc$37894$abc$28281$auto$opt_dff.cc:219:make_patterns_logic$4854, arst=!\rstn, srst={ }
  427 cells in clk=\clk, en=!$abc$45334$abc$37041$abc$29235$auto$opt_reduce.cc:134:opt_pmux$3940, arst=!\rstn, srst={ }
  68 cells in clk=\clk, en=$abc$45777$abc$37484$abc$30991$auto$opt_dff.cc:219:make_patterns_logic$4312, arst=!\rstn, srst={ }
  44 cells in clk=\clk, en=!$abc$45880$abc$37586$abc$30931$auto$opt_reduce.cc:134:opt_pmux$3976, arst=!\rstn, srst={ }
  68 cells in clk=\clk, en=$abc$45941$abc$36159$abc$27946$auto$opt_dff.cc:219:make_patterns_logic$4372, arst=!\rstn, srst={ }
  63 cells in clk=\clk, en=$abc$42348$abc$35856$abc$25899$auto$opt_dff.cc:219:make_patterns_logic$4178, arst=!\rstn, srst={ }
  74 cells in clk=\clk, en=$abc$46015$abc$37647$abc$25794$auto$opt_dff.cc:219:make_patterns_logic$4508, arst=!\rstn, srst={ }
  1150 cells in clk=\clk, en={ }, arst=!\rstn, srst={ }

3.118.2. Extracting gate netlist of module `\conv2d' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk, enabled by !$abc$40377$abc$33027$abc$31130$verific$n11608$201, asynchronously reset by !\rstn
Extracted 11 gates and 22 wires to a netlist network with 11 inputs and 7 outputs.

3.118.2.1. Executing ABC.

3.118.3. Extracting gate netlist of module `\conv2d' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk, enabled by $abc$40389$abc$33040$abc$30764$auto$opt_dff.cc:219:make_patterns_logic$4386, asynchronously reset by !\rstn
Extracted 14 gates and 28 wires to a netlist network with 14 inputs and 3 outputs.

3.118.3.1. Executing ABC.

3.118.4. Extracting gate netlist of module `\conv2d' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk, enabled by $abc$40404$abc$33058$abc$31091$auto$opt_dff.cc:219:make_patterns_logic$4303, asynchronously reset by !\rstn
Extracted 39 gates and 62 wires to a netlist network with 23 inputs and 4 outputs.

3.118.4.1. Executing ABC.

3.118.5. Extracting gate netlist of module `\conv2d' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk, enabled by $abc$40445$abc$33094$abc$25879$auto$opt_dff.cc:219:make_patterns_logic$4592, asynchronously reset by !\rstn
Extracted 34 gates and 63 wires to a netlist network with 29 inputs and 10 outputs.

3.118.5.1. Executing ABC.

3.118.6. Extracting gate netlist of module `\conv2d' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk, enabled by $abc$40464$abc$33183$abc$25771$auto$opt_dff.cc:219:make_patterns_logic$4453, asynchronously reset by !\rstn
Extracted 41 gates and 64 wires to a netlist network with 23 inputs and 11 outputs.

3.118.6.1. Executing ABC.

3.118.7. Extracting gate netlist of module `\conv2d' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk, enabled by $abc$40594$abc$33319$abc$26634$auto$opt_dff.cc:219:make_patterns_logic$4154, asynchronously reset by !\rstn
Extracted 18 gates and 28 wires to a netlist network with 10 inputs and 4 outputs.

3.118.7.1. Executing ABC.

3.118.8. Extracting gate netlist of module `\conv2d' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk, enabled by $abc$40504$abc$33210$abc$27575$auto$opt_dff.cc:219:make_patterns_logic$4464, asynchronously reset by !\rstn
Extracted 90 gates and 134 wires to a netlist network with 44 inputs and 8 outputs.

3.118.8.1. Executing ABC.

3.118.9. Extracting gate netlist of module `\conv2d' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk, enabled by $abc$40660$abc$33362$abc$26140$auto$opt_dff.cc:219:make_patterns_logic$4129, asynchronously reset by !\rstn
Extracted 28 gates and 73 wires to a netlist network with 45 inputs and 24 outputs.

3.118.9.1. Executing ABC.

3.118.10. Extracting gate netlist of module `\conv2d' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk, enabled by !$abc$40613$abc$33331$abc$25649$auto$pmuxtree.cc:65:recursive_mux_generator$5657.S[1], asynchronously reset by !\rstn
Extracted 36 gates and 65 wires to a netlist network with 29 inputs and 17 outputs.

3.118.10.1. Executing ABC.

3.118.11. Extracting gate netlist of module `\conv2d' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk, enabled by $abc$40670$abc$33392$abc$27709$auto$opt_dff.cc:219:make_patterns_logic$4570, asynchronously reset by !\rstn
Extracted 10 gates and 19 wires to a netlist network with 9 inputs and 3 outputs.

3.118.11.1. Executing ABC.

3.118.12. Extracting gate netlist of module `\conv2d' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk, enabled by $abc$40680$abc$33403$abc$25585$auto$opt_dff.cc:219:make_patterns_logic$4122, asynchronously reset by !\rstn
Extracted 7 gates and 15 wires to a netlist network with 8 inputs and 3 outputs.

3.118.12.1. Executing ABC.

3.118.13. Extracting gate netlist of module `\conv2d' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk, enabled by $abc$40688$abc$33584$abc$31242$auto$opt_dff.cc:219:make_patterns_logic$4499, asynchronously reset by !\rstn
Extracted 303 gates and 469 wires to a netlist network with 166 inputs and 69 outputs.

3.118.13.1. Executing ABC.

3.118.14. Extracting gate netlist of module `\conv2d' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk, enabled by $abc$41065$abc$33304$abc$27558$auto$opt_dff.cc:219:make_patterns_logic$4475, asynchronously reset by !\rstn
Extracted 13 gates and 17 wires to a netlist network with 4 inputs and 7 outputs.

3.118.14.1. Executing ABC.

3.118.15. Extracting gate netlist of module `\conv2d' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk, enabled by $abc$41081$abc$33959$abc$26645$auto$opt_dff.cc:219:make_patterns_logic$4163, asynchronously reset by !\rstn
Extracted 219 gates and 351 wires to a netlist network with 132 inputs and 83 outputs.

3.118.15.1. Executing ABC.

3.118.16. Extracting gate netlist of module `\conv2d' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk, enabled by $abc$41302$abc$34188$abc$27052$auto$opt_dff.cc:219:make_patterns_logic$4760, asynchronously reset by !\rstn
Extracted 79 gates and 128 wires to a netlist network with 49 inputs and 28 outputs.

3.118.16.1. Executing ABC.

3.118.17. Extracting gate netlist of module `\conv2d' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk, enabled by $abc$40993$abc$33112$abc$30616$auto$opt_dff.cc:219:make_patterns_logic$4603, asynchronously reset by !\rstn
Extracted 71 gates and 83 wires to a netlist network with 12 inputs and 16 outputs.

3.118.17.1. Executing ABC.

3.118.18. Extracting gate netlist of module `\conv2d' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk, enabled by $abc$41473$abc$34445$abc$26836$auto$opt_dff.cc:219:make_patterns_logic$4222, asynchronously reset by !\rstn
Extracted 33 gates and 63 wires to a netlist network with 30 inputs and 25 outputs.

3.118.18.1. Executing ABC.

3.118.19. Extracting gate netlist of module `\conv2d' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk, enabled by $abc$41510$abc$34566$abc$28224$auto$opt_dff.cc:219:make_patterns_logic$4669, asynchronously reset by !\rstn
Extracted 11 gates and 23 wires to a netlist network with 12 inputs and 3 outputs.

3.118.19.1. Executing ABC.

3.118.20. Extracting gate netlist of module `\conv2d' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk, enabled by !$abc$41550$abc$35276$abc$30897$verific$n11606$199, asynchronously reset by !\rstn
Extracted 13 gates and 25 wires to a netlist network with 12 inputs and 11 outputs.

3.118.20.1. Executing ABC.

3.118.21. Extracting gate netlist of module `\conv2d' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk, enabled by $abc$41564$abc$33411$abc$26310$auto$opt_dff.cc:219:make_patterns_logic$4440, asynchronously reset by !\rstn
Extracted 156 gates and 291 wires to a netlist network with 135 inputs and 122 outputs.

3.118.21.1. Executing ABC.

3.118.22. Extracting gate netlist of module `\conv2d' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk, enabled by $abc$41714$abc$35290$abc$26065$auto$opt_dff.cc:194:make_patterns_logic$4396, asynchronously reset by !\rstn
Extracted 47 gates and 49 wires to a netlist network with 2 inputs and 12 outputs.

3.118.22.1. Executing ABC.

3.118.23. Extracting gate netlist of module `\conv2d' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk, enabled by $abc$41791$abc$35365$abc$30780$auto$opt_dff.cc:219:make_patterns_logic$4052, asynchronously reset by !\rstn
Extracted 18 gates and 43 wires to a netlist network with 25 inputs and 15 outputs.

3.118.23.1. Executing ABC.

3.118.24. Extracting gate netlist of module `\conv2d' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk, enabled by $abc$41817$abc$35388$abc$30886$auto$opt_dff.cc:219:make_patterns_logic$4654, asynchronously reset by !\rstn
Extracted 11 gates and 20 wires to a netlist network with 9 inputs and 5 outputs.

3.118.24.1. Executing ABC.

3.118.25. Extracting gate netlist of module `\conv2d' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk, enabled by $abc$46100$abc$37747$abc$25676$auto$opt_dff.cc:219:make_patterns_logic$4267, asynchronously reset by !\rstn
Extracted 124 gates and 194 wires to a netlist network with 70 inputs and 24 outputs.

3.118.25.1. Executing ABC.

3.118.26. Extracting gate netlist of module `\conv2d' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk, enabled by $abc$41829$abc$33899$abc$26004$auto$opt_dff.cc:219:make_patterns_logic$4579, asynchronously reset by !\rstn
Extracted 60 gates and 67 wires to a netlist network with 7 inputs and 12 outputs.

3.118.26.1. Executing ABC.

3.118.27. Extracting gate netlist of module `\conv2d' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk, enabled by $abc$41889$abc$35399$abc$30791$auto$opt_dff.cc:219:make_patterns_logic$4555, asynchronously reset by !\rstn
Extracted 89 gates and 105 wires to a netlist network with 16 inputs and 15 outputs.

3.118.27.1. Executing ABC.

3.118.28. Extracting gate netlist of module `\conv2d' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk, enabled by $abc$41981$abc$35490$abc$30686$auto$opt_dff.cc:219:make_patterns_logic$4063, asynchronously reset by !\rstn
Extracted 84 gates and 120 wires to a netlist network with 36 inputs and 48 outputs.

3.118.28.1. Executing ABC.

3.118.29. Extracting gate netlist of module `\conv2d' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk, enabled by $abc$42089$abc$35598$abc$27404$auto$opt_dff.cc:219:make_patterns_logic$4820, asynchronously reset by !\rstn
Extracted 81 gates and 132 wires to a netlist network with 51 inputs and 29 outputs.

3.118.29.1. Executing ABC.

3.118.30. Extracting gate netlist of module `\conv2d' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk, enabled by $abc$42177$abc$35686$abc$27316$auto$opt_dff.cc:219:make_patterns_logic$4805, asynchronously reset by !\rstn
Extracted 75 gates and 120 wires to a netlist network with 45 inputs and 29 outputs.

3.118.30.1. Executing ABC.

3.118.31. Extracting gate netlist of module `\conv2d' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk, enabled by $abc$42263$abc$35772$abc$27229$auto$opt_dff.cc:219:make_patterns_logic$4790, asynchronously reset by !\rstn
Extracted 75 gates and 120 wires to a netlist network with 45 inputs and 29 outputs.

3.118.31.1. Executing ABC.

3.118.32. Extracting gate netlist of module `\conv2d' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk, enabled by $abc$42454$abc$36107$abc$28022$auto$opt_dff.cc:219:make_patterns_logic$4544, asynchronously reset by !\rstn
Extracted 52 gates and 75 wires to a netlist network with 23 inputs and 29 outputs.

3.118.32.1. Executing ABC.

3.118.33. Extracting gate netlist of module `\conv2d' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk, enabled by $abc$42507$abc$36235$abc$27894$auto$opt_dff.cc:219:make_patterns_logic$4708, asynchronously reset by !\rstn
Extracted 52 gates and 72 wires to a netlist network with 20 inputs and 12 outputs.

3.118.33.1. Executing ABC.

3.118.34. Extracting gate netlist of module `\conv2d' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk, enabled by $abc$41388$abc$34274$abc$26962$auto$opt_dff.cc:219:make_patterns_logic$4745, asynchronously reset by !\rstn
Extracted 78 gates and 126 wires to a netlist network with 48 inputs and 29 outputs.

3.118.34.1. Executing ABC.

3.118.35. Extracting gate netlist of module `\conv2d' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk, enabled by $abc$42560$abc$36284$abc$27824$auto$opt_dff.cc:219:make_patterns_logic$4338, asynchronously reset by !\rstn
Extracted 58 gates and 65 wires to a netlist network with 7 inputs and 24 outputs.

3.118.35.1. Executing ABC.

3.118.36. Extracting gate netlist of module `\conv2d' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk, enabled by $abc$42630$abc$38769$abc$27495$auto$opt_dff.cc:219:make_patterns_logic$4835, asynchronously reset by !\rstn
Extracted 50 gates and 87 wires to a netlist network with 37 inputs and 27 outputs.

3.118.36.1. Executing ABC.

3.118.37. Extracting gate netlist of module `\conv2d' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk, enabled by $abc$41523$abc$34580$abc$30911$auto$opt_dff.cc:219:make_patterns_logic$4278, asynchronously reset by !\rstn
Extracted 23 gates and 37 wires to a netlist network with 13 inputs and 12 outputs.

3.118.37.1. Executing ABC.

3.118.38. Extracting gate netlist of module `\conv2d' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk, enabled by $abc$42693$abc$34360$abc$26874$auto$opt_dff.cc:219:make_patterns_logic$4730, asynchronously reset by !\rstn
Extracted 74 gates and 118 wires to a netlist network with 44 inputs and 28 outputs.

3.118.38.1. Executing ABC.

3.118.39. Extracting gate netlist of module `\conv2d' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk, enabled by $abc$48319$abc$42777$abc$38833$abc$31142$auto$opt_dff.cc:219:make_patterns_logic$4393, asynchronously reset by !\rstn
Extracted 64 gates and 97 wires to a netlist network with 33 inputs and 32 outputs.

3.118.39.1. Executing ABC.

3.118.40. Extracting gate netlist of module `\conv2d' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk, enabled by $abc$43553$abc$36540$abc$29838$auto$opt_dff.cc:219:make_patterns_logic$4104, asynchronously reset by !\rstn
Extracted 32 gates and 76 wires to a netlist network with 44 inputs and 27 outputs.

3.118.40.1. Executing ABC.

3.118.41. Extracting gate netlist of module `\conv2d' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk, enabled by $abc$43591$abc$36585$abc$29823$auto$opt_dff.cc:219:make_patterns_logic$4095, asynchronously reset by !\rstn
Extracted 17 gates and 29 wires to a netlist network with 12 inputs and 9 outputs.

3.118.41.1. Executing ABC.

3.118.42. Extracting gate netlist of module `\conv2d' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk, enabled by $abc$43608$abc$36601$abc$29738$auto$opt_dff.cc:219:make_patterns_logic$4490, asynchronously reset by !\rstn
Extracted 82 gates and 124 wires to a netlist network with 42 inputs and 16 outputs.

3.118.42.1. Executing ABC.

3.118.43. Extracting gate netlist of module `\conv2d' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk, enabled by $abc$43690$abc$36679$abc$29722$auto$opt_dff.cc:219:make_patterns_logic$4291, asynchronously reset by !\rstn
Extracted 18 gates and 31 wires to a netlist network with 13 inputs and 10 outputs.

3.118.43.1. Executing ABC.

3.118.44. Extracting gate netlist of module `\conv2d' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk, enabled by $abc$43710$abc$36354$abc$27723$auto$opt_dff.cc:219:make_patterns_logic$4030, asynchronously reset by !\rstn
Extracted 40 gates and 78 wires to a netlist network with 38 inputs and 34 outputs.

3.118.44.1. Executing ABC.

3.118.45. Extracting gate netlist of module `\conv2d' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk, enabled by $abc$43812$abc$36699$abc$28237$auto$opt_dff.cc:219:make_patterns_logic$4639, asynchronously reset by !\rstn
Extracted 49 gates and 71 wires to a netlist network with 22 inputs and 28 outputs.

3.118.45.1. Executing ABC.

3.118.46. Extracting gate netlist of module `\conv2d' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk, enabled by $abc$43854$abc$36456$abc$26170$auto$opt_dff.cc:219:make_patterns_logic$4715, asynchronously reset by !\rstn
Extracted 74 gates and 118 wires to a netlist network with 44 inputs and 29 outputs.

3.118.46.1. Executing ABC.

3.118.47. Extracting gate netlist of module `\conv2d' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk, enabled by $abc$43938$abc$35963$abc$28076$auto$opt_dff.cc:219:make_patterns_logic$4254, asynchronously reset by !\rstn
Extracted 101 gates and 143 wires to a netlist network with 42 inputs and 42 outputs.

3.118.47.1. Executing ABC.

3.118.48. Extracting gate netlist of module `\conv2d' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk, enabled by $abc$44072$abc$36817$abc$29681$auto$opt_dff.cc:219:make_patterns_logic$4043, asynchronously reset by !\rstn
Extracted 50 gates and 74 wires to a netlist network with 24 inputs and 13 outputs.

3.118.48.1. Executing ABC.

3.118.49. Extracting gate netlist of module `\conv2d' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk, enabled by $abc$42875$abc$34606$abc$29855$auto$opt_dff.cc:219:make_patterns_logic$4844, asynchronously reset by !\rstn
Extracted 512 gates and 680 wires to a netlist network with 168 inputs and 176 outputs.

3.118.49.1. Executing ABC.

3.118.50. Extracting gate netlist of module `\conv2d' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk, enabled by $abc$44124$abc$34481$abc$27141$auto$opt_dff.cc:219:make_patterns_logic$4775, asynchronously reset by !\rstn
Extracted 70 gates and 110 wires to a netlist network with 40 inputs and 30 outputs.

3.118.50.1. Executing ABC.

3.118.51. Extracting gate netlist of module `\conv2d' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk, enabled by $abc$45087$abc$36859$abc$30457$auto$opt_dff.cc:219:make_patterns_logic$4072, asynchronously reset by !\rstn
Extracted 123 gates and 164 wires to a netlist network with 41 inputs and 28 outputs.

3.118.51.1. Executing ABC.

3.118.52. Extracting gate netlist of module `\conv2d' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk, enabled by $abc$45213$abc$36741$abc$26256$auto$opt_dff.cc:219:make_patterns_logic$4410, asynchronously reset by !\rstn
Extracted 65 gates and 83 wires to a netlist network with 18 inputs and 21 outputs.

3.118.52.1. Executing ABC.

3.118.53. Extracting gate netlist of module `\conv2d' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk, enabled by $abc$45278$abc$36984$abc$25593$auto$opt_dff.cc:219:make_patterns_logic$4680, asynchronously reset by !\rstn
Extracted 55 gates and 72 wires to a netlist network with 17 inputs and 11 outputs.

3.118.53.1. Executing ABC.

3.118.54. Extracting gate netlist of module `\conv2d' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk, enabled by $abc$44210$abc$37894$abc$28281$auto$opt_dff.cc:219:make_patterns_logic$4854, asynchronously reset by !\rstn
Extracted 987 gates and 1228 wires to a netlist network with 241 inputs and 239 outputs.

3.118.54.1. Executing ABC.

3.118.55. Extracting gate netlist of module `\conv2d' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk, enabled by !$abc$45334$abc$37041$abc$29235$auto$opt_reduce.cc:134:opt_pmux$3940, asynchronously reset by !\rstn
Extracted 427 gates and 547 wires to a netlist network with 120 inputs and 63 outputs.

3.118.55.1. Executing ABC.

3.118.56. Extracting gate netlist of module `\conv2d' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk, enabled by $abc$45777$abc$37484$abc$30991$auto$opt_dff.cc:219:make_patterns_logic$4312, asynchronously reset by !\rstn
Extracted 68 gates and 105 wires to a netlist network with 37 inputs and 33 outputs.

3.118.56.1. Executing ABC.

3.118.57. Extracting gate netlist of module `\conv2d' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk, enabled by !$abc$45880$abc$37586$abc$30931$auto$opt_reduce.cc:134:opt_pmux$3976, asynchronously reset by !\rstn
Extracted 44 gates and 73 wires to a netlist network with 29 inputs and 20 outputs.

3.118.57.1. Executing ABC.

3.118.58. Extracting gate netlist of module `\conv2d' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk, enabled by $abc$45941$abc$36159$abc$27946$auto$opt_dff.cc:219:make_patterns_logic$4372, asynchronously reset by !\rstn
Extracted 68 gates and 96 wires to a netlist network with 28 inputs and 12 outputs.

3.118.58.1. Executing ABC.

3.118.59. Extracting gate netlist of module `\conv2d' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk, enabled by $abc$42348$abc$35856$abc$25899$auto$opt_dff.cc:219:make_patterns_logic$4178, asynchronously reset by !\rstn
Extracted 63 gates and 127 wires to a netlist network with 64 inputs and 33 outputs.

3.118.59.1. Executing ABC.

3.118.60. Extracting gate netlist of module `\conv2d' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk, enabled by $abc$46015$abc$37647$abc$25794$auto$opt_dff.cc:219:make_patterns_logic$4508, asynchronously reset by !\rstn
Extracted 74 gates and 108 wires to a netlist network with 34 inputs and 25 outputs.

3.118.60.1. Executing ABC.

3.118.61. Extracting gate netlist of module `\conv2d' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk, asynchronously reset by !\rstn
Extracted 1130 gates and 1610 wires to a netlist network with 479 inputs and 364 outputs.

3.118.61.1. Executing ABC.

yosys> opt_ffinv

3.119. Executing OPT_FFINV pass (push inverters through FFs).
Discovering LUTs.
Pushed 0 inverters.

yosys> opt_expr

3.120. Executing OPT_EXPR pass (perform const folding).
Optimizing module conv2d.
<suppressed ~21 debug messages>

yosys> opt_merge -nomux

3.121. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\conv2d'.
<suppressed ~93 debug messages>
Removed a total of 31 cells.

yosys> opt_muxtree

3.122. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \conv2d..
  Creating internal representation of mux trees.
  No muxes found in this module.
Removed 0 multiplexer ports.

yosys> opt_reduce

3.123. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \conv2d.
Performed a total of 0 changes.

yosys> opt_merge

3.124. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\conv2d'.
Removed a total of 0 cells.

yosys> opt_share

3.125. Executing OPT_SHARE pass.

yosys> opt_dff -nosdff -sat

3.126. Executing OPT_DFF pass (perform DFF optimizations).

yosys> opt_clean

3.127. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \conv2d..
Removed 0 unused cells and 36808 unused wires.
<suppressed ~28 debug messages>

yosys> opt_expr

3.128. Executing OPT_EXPR pass (perform const folding).
Optimizing module conv2d.
MAX OPT ITERATION = 1

yosys> bmuxmap

3.129. Executing BMUXMAP pass.

yosys> demuxmap

3.130. Executing DEMUXMAP pass.

yosys> clean_zerowidth

yosys> abc -script /tmp/yosys_JIcqf6/abc_tmp_1.scr

3.131. Executing ABC pass (technology mapping using ABC).

3.131.1. Extracting gate netlist of module `\conv2d' to `<abc-temp-dir>/input.blif'..
Extracted 5551 gates and 6693 wires to a netlist network with 1142 inputs and 1061 outputs.

3.131.1.1. Executing ABC.
DE:   #PIs = 1142  #Luts =  1961  Max Lvl =   6  Avg Lvl =   2.15  [   0.28 sec. at Pass 0]{firstMap}
DE:   #PIs = 1142  #Luts =  1709  Max Lvl =   9  Avg Lvl =   2.52  [   8.73 sec. at Pass 1]{initMapFlow}
DE:   #PIs = 1142  #Luts =  1702  Max Lvl =   9  Avg Lvl =   2.58  [   3.18 sec. at Pass 2]{map}
DE:   #PIs = 1142  #Luts =  1686  Max Lvl =  10  Avg Lvl =   2.58  [   2.90 sec. at Pass 3]{postMap}
DE:   #PIs = 1142  #Luts =  1684  Max Lvl =   9  Avg Lvl =   2.60  [   4.56 sec. at Pass 4]{map}
DE:   #PIs = 1142  #Luts =  1678  Max Lvl =   9  Avg Lvl =   2.58  [   5.97 sec. at Pass 5]{postMap}
DE:   #PIs = 1142  #Luts =  1676  Max Lvl =   9  Avg Lvl =   2.57  [   2.92 sec. at Pass 6]{map}
DE:   #PIs = 1142  #Luts =  1676  Max Lvl =   9  Avg Lvl =   2.57  [   3.89 sec. at Pass 7]{postMap}
DE:   #PIs = 1142  #Luts =  1674  Max Lvl =  10  Avg Lvl =   2.58  [   4.10 sec. at Pass 8]{map}
DE:   #PIs = 1142  #Luts =  1674  Max Lvl =  10  Avg Lvl =   2.58  [   3.32 sec. at Pass 9]{postMap}
DE:   #PIs = 1142  #Luts =  1669  Max Lvl =   9  Avg Lvl =   2.56  [   3.52 sec. at Pass 10]{map}
DE:   #PIs = 1142  #Luts =  1669  Max Lvl =   9  Avg Lvl =   2.56  [   5.38 sec. at Pass 11]{postMap}
DE:   #PIs = 1142  #Luts =  1668  Max Lvl =  10  Avg Lvl =   2.57  [   4.58 sec. at Pass 12]{map}
DE:   #PIs = 1142  #Luts =  1667  Max Lvl =   9  Avg Lvl =   2.55  [   6.14 sec. at Pass 13]{postMap}
DE:   #PIs = 1142  #Luts =  1667  Max Lvl =   9  Avg Lvl =   2.55  [   3.90 sec. at Pass 14]{map}
DE:   #PIs = 1142  #Luts =  1666  Max Lvl =   9  Avg Lvl =   2.59  [   5.15 sec. at Pass 15]{postMap}
DE:   #PIs = 1142  #Luts =  1666  Max Lvl =   9  Avg Lvl =   2.59  [   3.56 sec. at Pass 16]{map}
DE:   #PIs = 1142  #Luts =  1666  Max Lvl =   9  Avg Lvl =   2.59  [   6.12 sec. at Pass 17]{postMap}
DE:   #PIs = 1142  #Luts =  1666  Max Lvl =   9  Avg Lvl =   2.59  [   4.74 sec. at Pass 18]{map}
DE:   #PIs = 1142  #Luts =  1666  Max Lvl =   9  Avg Lvl =   2.59  [   1.51 sec. at Pass 19]{finalMap}

yosys> opt_expr

3.132. Executing OPT_EXPR pass (perform const folding).
Optimizing module conv2d.

yosys> opt_merge -nomux

3.133. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\conv2d'.
Removed a total of 0 cells.

yosys> opt_muxtree

3.134. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \conv2d..
  Creating internal representation of mux trees.
  No muxes found in this module.
Removed 0 multiplexer ports.

yosys> opt_reduce

3.135. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \conv2d.
Performed a total of 0 changes.

yosys> opt_merge

3.136. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\conv2d'.
Removed a total of 0 cells.

yosys> opt_share

3.137. Executing OPT_SHARE pass.

yosys> opt_dff -nosdff -nodffe

3.138. Executing OPT_DFF pass (perform DFF optimizations).

yosys> opt_clean

3.139. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \conv2d..
Removed 0 unused cells and 6370 unused wires.
<suppressed ~4 debug messages>

yosys> opt_expr

3.140. Executing OPT_EXPR pass (perform const folding).
Optimizing module conv2d.
MAX OPT ITERATION = 1

yosys> opt_ffinv

3.141. Executing OPT_FFINV pass (push inverters through FFs).
Discovering LUTs.
Pushed 25 inverters.

yosys> stat

3.142. Printing statistics.

=== conv2d ===

   Number of wires:               2551
   Number of wire bits:           8498
   Number of public wires:         397
   Number of public wire bits:    6331
   Number of memories:               0
   Number of memory bits:            0
   Number of processes:              0
   Number of cells:               2664
     $_ALDFFE_PNP_                  60
     $_ALDFF_PN_                    20
     $_DFFE_PN0N_                   44
     $_DFFE_PN0P_                  659
     $_DFFE_PN1P_                    2
     $_DFF_PN0_                    228
     $_DFF_PN1_                     23
     $lut                         1628


yosys> shregmap -minlen 8 -maxlen 20

3.143. Executing SHREGMAP pass (map shift registers).
Converted 0 dff cells into 0 shift registers.

yosys> dfflegalize -cell $_DFF_?_ 0 -cell $_DFF_???_ 0 -cell $_DFFE_????_ 0 -cell $_DFFSR_???_ 0 -cell $_DFFSRE_????_ 0 -cell $_DLATCHSR_PPP_ 0

3.144. Executing DFFLEGALIZE pass (convert FFs to types supported by the target).

yosys> stat

3.145. Printing statistics.

=== conv2d ===

   Number of wires:               2711
   Number of wire bits:           8658
   Number of public wires:         397
   Number of public wire bits:    6331
   Number of memories:               0
   Number of memory bits:            0
   Number of processes:              0
   Number of cells:               2824
     $_DFFE_PN0N_                   44
     $_DFFE_PN0P_                  659
     $_DFFE_PN1P_                    2
     $_DFFSRE_PNNP_                 60
     $_DFFSR_PNN_                   20
     $_DFF_PN0_                    228
     $_DFF_PN1_                     23
     $_ORNOT_                       80
     $_OR_                          80
     $lut                         1628


yosys> techmap -map +/techmap.v -map +/rapidsilicon/genesis/ffs_map.v

3.146. Executing TECHMAP pass (map to technology primitives).

3.146.1. Executing Verilog-2005 frontend: /nfs_scratch/scratch/Vorak/aram/Workspace/Raptor/yosys_verific_rs/yosys/install/bin/../share/yosys/techmap.v
Parsing Verilog input from `/nfs_scratch/scratch/Vorak/aram/Workspace/Raptor/yosys_verific_rs/yosys/install/bin/../share/yosys/techmap.v' to AST representation.
Generating RTLIL representation for module `\_90_simplemap_bool_ops'.
Generating RTLIL representation for module `\_90_simplemap_reduce_ops'.
Generating RTLIL representation for module `\_90_simplemap_logic_ops'.
Generating RTLIL representation for module `\_90_simplemap_compare_ops'.
Generating RTLIL representation for module `\_90_simplemap_various'.
Generating RTLIL representation for module `\_90_simplemap_registers'.
Generating RTLIL representation for module `\_90_shift_ops_shr_shl_sshl_sshr'.
Generating RTLIL representation for module `\_90_shift_shiftx'.
Generating RTLIL representation for module `\_90_fa'.
Generating RTLIL representation for module `\_90_lcu'.
Generating RTLIL representation for module `\_90_alu'.
Generating RTLIL representation for module `\_90_macc'.
Generating RTLIL representation for module `\_90_alumacc'.
Generating RTLIL representation for module `\$__div_mod_u'.
Generating RTLIL representation for module `\$__div_mod_trunc'.
Generating RTLIL representation for module `\_90_div'.
Generating RTLIL representation for module `\_90_mod'.
Generating RTLIL representation for module `\$__div_mod_floor'.
Generating RTLIL representation for module `\_90_divfloor'.
Generating RTLIL representation for module `\_90_modfloor'.
Generating RTLIL representation for module `\_90_pow'.
Generating RTLIL representation for module `\_90_pmux'.
Generating RTLIL representation for module `\_90_demux'.
Generating RTLIL representation for module `\_90_lut'.
Successfully finished Verilog frontend.

3.146.2. Executing Verilog-2005 frontend: /nfs_scratch/scratch/Vorak/aram/Workspace/Raptor/yosys_verific_rs/yosys/install/bin/../share/yosys/rapidsilicon/genesis/ffs_map.v
Parsing Verilog input from `/nfs_scratch/scratch/Vorak/aram/Workspace/Raptor/yosys_verific_rs/yosys/install/bin/../share/yosys/rapidsilicon/genesis/ffs_map.v' to AST representation.
Generating RTLIL representation for module `\$_DFF_P_'.
Generating RTLIL representation for module `\$_DFF_PP0_'.
Generating RTLIL representation for module `\$_DFF_PN0_'.
Generating RTLIL representation for module `\$_DFF_PP1_'.
Generating RTLIL representation for module `\$_DFF_PN1_'.
Generating RTLIL representation for module `\$_DFFE_PP_'.
Generating RTLIL representation for module `\$_DFFE_PN_'.
Generating RTLIL representation for module `\$_DFFE_PP0P_'.
Generating RTLIL representation for module `\$_DFFE_PP0N_'.
Generating RTLIL representation for module `\$_DFFE_PN0P_'.
Generating RTLIL representation for module `\$_DFFE_PN0N_'.
Generating RTLIL representation for module `\$_DFFE_PP1P_'.
Generating RTLIL representation for module `\$_DFFE_PP1N_'.
Generating RTLIL representation for module `\$_DFFE_PN1P_'.
Generating RTLIL representation for module `\$_DFFE_PN1N_'.
Generating RTLIL representation for module `\$_DFFSR_PPP_'.
Generating RTLIL representation for module `\$_DFFSR_PNP_'.
Generating RTLIL representation for module `\$_DFFSR_PNN_'.
Generating RTLIL representation for module `\$_DFFSR_PPN_'.
Generating RTLIL representation for module `\$_DFFSR_NPP_'.
Generating RTLIL representation for module `\$_DFFSR_NNP_'.
Generating RTLIL representation for module `\$_DFFSR_NNN_'.
Generating RTLIL representation for module `\$_DFFSR_NPN_'.
Generating RTLIL representation for module `\$_DFFSRE_PPPP_'.
Generating RTLIL representation for module `\$_DFFSRE_PNPP_'.
Generating RTLIL representation for module `\$_DFFSRE_PPNP_'.
Generating RTLIL representation for module `\$_DFFSRE_PNNP_'.
Generating RTLIL representation for module `\$_DFFSRE_PPPN_'.
Generating RTLIL representation for module `\$_DFFSRE_PNPN_'.
Generating RTLIL representation for module `\$_DFFSRE_PPNN_'.
Generating RTLIL representation for module `\$_DFFSRE_PNNN_'.
Generating RTLIL representation for module `\$_DLATCHSR_PPP_'.
Generating RTLIL representation for module `\$_DLATCHSR_NPP_'.
Generating RTLIL representation for module `\$_DFF_N_'.
Generating RTLIL representation for module `\$_DFF_NP0_'.
Generating RTLIL representation for module `\$_DFF_NN0_'.
Generating RTLIL representation for module `\$_DFF_NP1_'.
Generating RTLIL representation for module `\$_DFF_NN1_'.
Generating RTLIL representation for module `\$_DFFE_NP_'.
Generating RTLIL representation for module `\$_DFFE_NN_'.
Generating RTLIL representation for module `\$_DFFE_NP0P_'.
Generating RTLIL representation for module `\$_DFFE_NP0N_'.
Generating RTLIL representation for module `\$_DFFE_NN0P_'.
Generating RTLIL representation for module `\$_DFFE_NN0N_'.
Generating RTLIL representation for module `\$_DFFE_NP1P_'.
Generating RTLIL representation for module `\$_DFFE_NP1N_'.
Generating RTLIL representation for module `\$_DFFE_NN1P_'.
Generating RTLIL representation for module `\$_DFFE_NN1N_'.
Generating RTLIL representation for module `\$_DFFSRE_NPPP_'.
Generating RTLIL representation for module `\$_DFFSRE_NNPP_'.
Generating RTLIL representation for module `\$_DFFSRE_NPNP_'.
Generating RTLIL representation for module `\$_DFFSRE_NNNP_'.
Generating RTLIL representation for module `\$_DFFSRE_NPPN_'.
Generating RTLIL representation for module `\$_DFFSRE_NNPN_'.
Generating RTLIL representation for module `\$_DFFSRE_NPNN_'.
Generating RTLIL representation for module `\$_DFFSRE_NNNN_'.
Generating RTLIL representation for module `\$__SHREG_DFF_P_'.
Generating RTLIL representation for module `\$_SDFF_PP0_'.
Generating RTLIL representation for module `\$_SDFF_PN0_'.
Generating RTLIL representation for module `\$_SDFF_NP0_'.
Generating RTLIL representation for module `\$_SDFF_NN0_'.
Generating RTLIL representation for module `\$_SDFF_PP1_'.
Generating RTLIL representation for module `\$_SDFF_PN1_'.
Generating RTLIL representation for module `\$_SDFF_NP1_'.
Generating RTLIL representation for module `\$_SDFF_NN1_'.
Successfully finished Verilog frontend.

3.146.3. Continuing TECHMAP pass.
Using template \$_DFFE_PN0P_ for cells of type $_DFFE_PN0P_.
Using extmapper simplemap for cells of type $lut.
Using template \$_DFFSR_PNN_ for cells of type $_DFFSR_PNN_.
Using template \$_DFFSRE_PNNP_ for cells of type $_DFFSRE_PNNP_.
Using template \$_DFFE_PN1P_ for cells of type $_DFFE_PN1P_.
Using template \$_DFF_PN0_ for cells of type $_DFF_PN0_.
Using template \$_DFFE_PN0N_ for cells of type $_DFFE_PN0N_.
Using template \$_DFF_PN1_ for cells of type $_DFF_PN1_.
Using extmapper simplemap for cells of type $logic_not.
No more expansions possible.
<suppressed ~2844 debug messages>

yosys> opt_expr -mux_undef

3.147. Executing OPT_EXPR pass (perform const folding).
Optimizing module conv2d.
<suppressed ~29558 debug messages>

yosys> simplemap

3.148. Executing SIMPLEMAP pass (map simple cells to gate primitives).

yosys> opt_expr

3.149. Executing OPT_EXPR pass (perform const folding).
Optimizing module conv2d.

yosys> opt_merge

3.150. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\conv2d'.
<suppressed ~17325 debug messages>
Removed a total of 5775 cells.

yosys> opt_dff -nodffe -nosdff

3.151. Executing OPT_DFF pass (perform DFF optimizations).

yosys> opt_clean

3.152. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \conv2d..
Removed 5 unused cells and 8283 unused wires.
<suppressed ~6 debug messages>

yosys> opt_expr

3.153. Executing OPT_EXPR pass (perform const folding).
Optimizing module conv2d.
<suppressed ~957 debug messages>

yosys> opt_merge -nomux

3.154. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\conv2d'.
Removed a total of 0 cells.

yosys> opt_muxtree

3.155. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \conv2d..
  Creating internal representation of mux trees.
  No muxes found in this module.
Removed 0 multiplexer ports.

yosys> opt_reduce

3.156. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \conv2d.
Performed a total of 0 changes.

yosys> opt_merge

3.157. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\conv2d'.
Removed a total of 0 cells.

yosys> opt_share

3.158. Executing OPT_SHARE pass.

yosys> opt_dff -nosdff -nodffe

3.159. Executing OPT_DFF pass (perform DFF optimizations).

yosys> opt_clean

3.160. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \conv2d..
Removed 0 unused cells and 249 unused wires.
<suppressed ~1 debug messages>

yosys> opt_expr

3.161. Executing OPT_EXPR pass (perform const folding).
Optimizing module conv2d.
MAX OPT ITERATION = 1

yosys> abc -script /tmp/yosys_JIcqf6/abc_tmp_2.scr

3.162. Executing ABC pass (technology mapping using ABC).

3.162.1. Extracting gate netlist of module `\conv2d' to `<abc-temp-dir>/input.blif'..
Extracted 7215 gates and 8322 wires to a netlist network with 1105 inputs and 1160 outputs.

3.162.1.1. Executing ABC.
DE:   #PIs = 1105  #Luts =  1804  Max Lvl =   6  Avg Lvl =   2.07  [   0.20 sec. at Pass 0]{firstMap}
DE:   #PIs = 1105  #Luts =  1779  Max Lvl =   7  Avg Lvl =   2.47  [   6.45 sec. at Pass 1]{initMapFlow}
DE:   #PIs = 1105  #Luts =  1779  Max Lvl =   7  Avg Lvl =   2.47  [   2.27 sec. at Pass 2]{map}
DE:   #PIs = 1105  #Luts =  1771  Max Lvl =   9  Avg Lvl =   2.49  [   3.61 sec. at Pass 3]{postMap}
DE:   #PIs = 1105  #Luts =  1764  Max Lvl =   8  Avg Lvl =   2.37  [   3.17 sec. at Pass 4]{map}
DE:   #PIs = 1105  #Luts =  1763  Max Lvl =  10  Avg Lvl =   2.45  [   4.13 sec. at Pass 5]{postMap}
DE:   #PIs = 1105  #Luts =  1762  Max Lvl =  10  Avg Lvl =   2.44  [   3.08 sec. at Pass 6]{map}
DE:   #PIs = 1105  #Luts =  1758  Max Lvl =   9  Avg Lvl =   2.44  [   4.67 sec. at Pass 7]{postMap}
DE:   #PIs = 1105  #Luts =  1758  Max Lvl =   9  Avg Lvl =   2.44  [   3.20 sec. at Pass 8]{map}
DE:   #PIs = 1105  #Luts =  1758  Max Lvl =   9  Avg Lvl =   2.44  [   4.17 sec. at Pass 9]{postMap}
DE:   #PIs = 1105  #Luts =  1754  Max Lvl =  10  Avg Lvl =   2.43  [   2.44 sec. at Pass 10]{map}
DE:   #PIs = 1105  #Luts =  1754  Max Lvl =  10  Avg Lvl =   2.43  [   2.99 sec. at Pass 11]{postMap}
DE:   #PIs = 1105  #Luts =  1754  Max Lvl =  10  Avg Lvl =   2.43  [   2.27 sec. at Pass 12]{map}
DE:   #PIs = 1105  #Luts =  1754  Max Lvl =  10  Avg Lvl =   2.43  [   3.41 sec. at Pass 13]{postMap}
DE:   #PIs = 1105  #Luts =  1754  Max Lvl =  10  Avg Lvl =   2.43  [   1.02 sec. at Pass 14]{finalMap}

yosys> opt_expr

3.163. Executing OPT_EXPR pass (perform const folding).
Optimizing module conv2d.

yosys> opt_merge -nomux

3.164. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\conv2d'.
Removed a total of 0 cells.

yosys> opt_muxtree

3.165. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \conv2d..
  Creating internal representation of mux trees.
  No muxes found in this module.
Removed 0 multiplexer ports.

yosys> opt_reduce

3.166. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \conv2d.
Performed a total of 0 changes.

yosys> opt_merge

3.167. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\conv2d'.
Removed a total of 0 cells.

yosys> opt_share

3.168. Executing OPT_SHARE pass.

yosys> opt_dff -nosdff -nodffe

3.169. Executing OPT_DFF pass (perform DFF optimizations).

yosys> opt_clean

3.170. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \conv2d..
Removed 0 unused cells and 6253 unused wires.
<suppressed ~1 debug messages>

yosys> opt_expr

3.171. Executing OPT_EXPR pass (perform const folding).
Optimizing module conv2d.
MAX OPT ITERATION = 1

yosys> hierarchy -check

3.172. Executing HIERARCHY pass (managing design hierarchy).

3.172.1. Analyzing design hierarchy..
Top module:  \conv2d

3.172.2. Analyzing design hierarchy..
Top module:  \conv2d
Removed 0 unused modules.

yosys> stat

3.173. Printing statistics.

=== conv2d ===

   Number of wires:               2675
   Number of wire bits:           8621
   Number of public wires:         397
   Number of public wire bits:    6331
   Number of memories:               0
   Number of memory bits:            0
   Number of processes:              0
   Number of cells:               2790
     $lut                         1754
     dffsre                       1036


yosys> opt_clean -purge

3.174. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \conv2d..
Removed 0 unused cells and 295 unused wires.
<suppressed ~295 debug messages>

yosys> write_verilog -noattr -nohex synthesized.v

3.175. Executing Verilog backend.
Dumping module `\conv2d'.

Warnings: 85 unique messages, 85 total
End of script. Logfile hash: 62d5997b36, CPU: user 40.42s system 0.28s, MEM: 129.45 MB peak
Yosys 0.18+10 (git sha1 7361c89db, gcc 9.4.0-1ubuntu1~20.04.1 -fPIC -Os)
Time spent: 94% 6x abc (580 sec), 1% 27x opt_dff (10 sec), ...
real 205.72
user 557.36
sys 55.14
