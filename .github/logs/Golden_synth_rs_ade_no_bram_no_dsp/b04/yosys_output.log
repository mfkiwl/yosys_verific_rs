
 /----------------------------------------------------------------------------\
 |                                                                            |
 |  yosys -- Yosys Open SYnthesis Suite                                       |
 |                                                                            |
 |  Copyright (C) 2012 - 2020  Claire Xenia Wolf <claire@yosyshq.com>         |
 |                                                                            |
 |  Permission to use, copy, modify, and/or distribute this software for any  |
 |  purpose with or without fee is hereby granted, provided that the above    |
 |  copyright notice and this permission notice appear in all copies.         |
 |                                                                            |
 |  THE SOFTWARE IS PROVIDED "AS IS" AND THE AUTHOR DISCLAIMS ALL WARRANTIES  |
 |  WITH REGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF          |
 |  MERCHANTABILITY AND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR   |
 |  ANY SPECIAL, DIRECT, INDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES    |
 |  WHATSOEVER RESULTING FROM LOSS OF USE, DATA OR PROFITS, WHETHER IN AN     |
 |  ACTION OF CONTRACT, NEGLIGENCE OR OTHER TORTIOUS ACTION, ARISING OUT OF   |
 |  OR IN CONNECTION WITH THE USE OR PERFORMANCE OF THIS SOFTWARE.            |
 |                                                                            |
 \----------------------------------------------------------------------------/

 Yosys-Verific 0.0.92
 Yosys 0.18+10 (git sha1 7361c89db, gcc 9.4.0-1ubuntu1~20.04.1 -fPIC -Os)


-- Executing script file `yosys.ys' --
echo on

yosys> plugin -i synth-rs

yosys> read -verific

yosys> read -incdir .

yosys> verific -vlog-incdir .

1. Executing VERIFIC (loading SystemVerilog and VHDL designs using Verific).
Built with Verific May22_SW_Release, released at Wed Jun  1 05:39:28 2022.

yosys> verilog_defaults -add -I.

yosys> read -vhdl b04.vhd

yosys> verific -vhdl b04.vhd

2. Executing VERIFIC (loading SystemVerilog and VHDL designs using Verific).
Built with Verific May22_SW_Release, released at Wed Jun  1 05:39:28 2022.
VERIFIC-INFO [VHDL-1504] default VHDL library search path is now "/nfs_scratch/scratch/Vorak/aram/Workspace/Raptor/yosys_verific_rs/yosys/install/share/yosys/verific/vhdl_vdbs_2008"
VERIFIC-COMMENT [VHDL-1481] Analyzing VHDL file 'b04.vhd'
VERIFIC-COMMENT [VHDL-1493] Restoring VHDL unit 'ieee.std_logic_1164' from file '/nfs_scratch/scratch/Vorak/aram/Workspace/Raptor/yosys_verific_rs/yosys/install/share/yosys/verific/vhdl_vdbs_2008/ieee/std_logic_1164.vdb'
VERIFIC-COMMENT [VHDL-1493] Restoring VHDL unit 'std.standard' from file '/nfs_scratch/scratch/Vorak/aram/Workspace/Raptor/yosys_verific_rs/yosys/install/share/yosys/verific/vhdl_vdbs_2008/std/standard.vdb'
VERIFIC-COMMENT [VHDL-1493] Restoring VHDL unit 'std.textio' from file '/nfs_scratch/scratch/Vorak/aram/Workspace/Raptor/yosys_verific_rs/yosys/install/share/yosys/verific/vhdl_vdbs_2008/std/textio.vdb'
VERIFIC-COMMENT [VHDL-1493] Restoring VHDL unit 'ieee.std_logic_arith' from file '/nfs_scratch/scratch/Vorak/aram/Workspace/Raptor/yosys_verific_rs/yosys/install/share/yosys/verific/vhdl_vdbs_2008/ieee/std_logic_arith.vdb'
VERIFIC-INFO [VHDL-1012] b04.vhd:5: analyzing entity 'b04'
VERIFIC-INFO [VHDL-1010] b04.vhd:16: analyzing architecture 'behav'

yosys> synth_rs -top b04 -tech genesis -goal area -de -no_dsp -no_bram -verilog synthesized.v -carry no

3. Executing synth_rs pass: v0.4.79

yosys> read_verilog -lib -specify -nomem2reg +/rapidsilicon/common/cells_sim.v +/rapidsilicon/genesis/cells_sim.v +/rapidsilicon/genesis/dsp_sim.v

3.1. Executing Verilog-2005 frontend: /nfs_scratch/scratch/Vorak/aram/Workspace/Raptor/yosys_verific_rs/yosys/install/bin/../share/yosys/rapidsilicon/common/cells_sim.v
Parsing Verilog input from `/nfs_scratch/scratch/Vorak/aram/Workspace/Raptor/yosys_verific_rs/yosys/install/bin/../share/yosys/rapidsilicon/common/cells_sim.v' to AST representation.
Generating RTLIL representation for module `\inv'.
Generating RTLIL representation for module `\buff'.
Generating RTLIL representation for module `\logic_0'.
Generating RTLIL representation for module `\logic_1'.
Generating RTLIL representation for module `\gclkbuff'.
Successfully finished Verilog frontend.

3.2. Executing Verilog-2005 frontend: /nfs_scratch/scratch/Vorak/aram/Workspace/Raptor/yosys_verific_rs/yosys/install/bin/../share/yosys/rapidsilicon/genesis/cells_sim.v
Parsing Verilog input from `/nfs_scratch/scratch/Vorak/aram/Workspace/Raptor/yosys_verific_rs/yosys/install/bin/../share/yosys/rapidsilicon/genesis/cells_sim.v' to AST representation.
Generating RTLIL representation for module `\dffsre'.
Generating RTLIL representation for module `\dffnsre'.
Generating RTLIL representation for module `\latchsre'.
Generating RTLIL representation for module `\latchnsre'.
Generating RTLIL representation for module `\io_scff'.
Generating RTLIL representation for module `\scff'.
Generating RTLIL representation for module `\sh_dff'.
Generating RTLIL representation for module `\adder_carry'.
Generating RTLIL representation for module `\sdffr'.
Generating RTLIL representation for module `\sdffs'.
Generating RTLIL representation for module `\TDP_BRAM18'.
Generating RTLIL representation for module `\TDP36K'.
Generating RTLIL representation for module `\BRAM2x18_TDP'.
Generating RTLIL representation for module `\BRAM2x18_SDP'.
Generating RTLIL representation for module `\_$_mem_v2_asymmetric'.
Successfully finished Verilog frontend.

3.3. Executing Verilog-2005 frontend: /nfs_scratch/scratch/Vorak/aram/Workspace/Raptor/yosys_verific_rs/yosys/install/bin/../share/yosys/rapidsilicon/genesis/dsp_sim.v
Parsing Verilog input from `/nfs_scratch/scratch/Vorak/aram/Workspace/Raptor/yosys_verific_rs/yosys/install/bin/../share/yosys/rapidsilicon/genesis/dsp_sim.v' to AST representation.
Generating RTLIL representation for module `\RS_DSP1'.
Generating RTLIL representation for module `\RS_DSP2'.
Generating RTLIL representation for module `\RS_DSP2_MULT'.
Generating RTLIL representation for module `\RS_DSP2_MULT_REGIN'.
Generating RTLIL representation for module `\RS_DSP2_MULT_REGOUT'.
Generating RTLIL representation for module `\RS_DSP2_MULT_REGIN_REGOUT'.
Generating RTLIL representation for module `\RS_DSP2_MULTADD'.
Generating RTLIL representation for module `\RS_DSP2_MULTADD_REGIN'.
Generating RTLIL representation for module `\RS_DSP2_MULTADD_REGOUT'.
Generating RTLIL representation for module `\RS_DSP2_MULTADD_REGIN_REGOUT'.
Generating RTLIL representation for module `\RS_DSP2_MULTACC'.
Generating RTLIL representation for module `\RS_DSP2_MULTACC_REGIN'.
Generating RTLIL representation for module `\RS_DSP2_MULTACC_REGOUT'.
Generating RTLIL representation for module `\RS_DSP2_MULTACC_REGIN_REGOUT'.
Generating RTLIL representation for module `\dsp_t1_20x18x64_cfg_ports'.
Generating RTLIL representation for module `\dsp_t1_10x9x32_cfg_ports'.
Generating RTLIL representation for module `\dsp_t1_sim_cfg_ports'.
Generating RTLIL representation for module `\RS_DSP3'.
Generating RTLIL representation for module `\RS_DSP3_MULT'.
Generating RTLIL representation for module `\RS_DSP3_MULT_REGIN'.
Generating RTLIL representation for module `\RS_DSP3_MULT_REGOUT'.
Generating RTLIL representation for module `\RS_DSP3_MULT_REGIN_REGOUT'.
Generating RTLIL representation for module `\RS_DSP3_MULTADD'.
Generating RTLIL representation for module `\RS_DSP3_MULTADD_REGIN'.
Generating RTLIL representation for module `\RS_DSP3_MULTADD_REGOUT'.
Generating RTLIL representation for module `\RS_DSP3_MULTADD_REGIN_REGOUT'.
Generating RTLIL representation for module `\RS_DSP3_MULTACC'.
Generating RTLIL representation for module `\RS_DSP3_MULTACC_REGIN'.
Generating RTLIL representation for module `\RS_DSP3_MULTACC_REGOUT'.
Generating RTLIL representation for module `\RS_DSP3_MULTACC_REGIN_REGOUT'.
Generating RTLIL representation for module `\dsp_t1_20x18x64_cfg_params'.
Generating RTLIL representation for module `\dsp_t1_10x9x32_cfg_params'.
Generating RTLIL representation for module `\dsp_t1_sim_cfg_params'.
Successfully finished Verilog frontend.

yosys> hierarchy -check -top b04

3.4. Executing HIERARCHY pass (managing design hierarchy).
VERIFIC-INFO [VHDL-1067] b04.vhd:5: processing 'b04(BEHAV)'
Importing module b04.

3.4.1. Analyzing design hierarchy..
Top module:  \b04

3.4.2. Analyzing design hierarchy..
Top module:  \b04
Removed 0 unused modules.

yosys> proc

3.5. Executing PROC pass (convert processes to netlists).

yosys> proc_clean

3.5.1. Executing PROC_CLEAN pass (remove empty switches from decision trees).
Cleaned up 0 empty switches.

yosys> proc_rmdead

3.5.2. Executing PROC_RMDEAD pass (remove dead branches from decision trees).
Removed a total of 0 dead cases.

yosys> proc_prune

3.5.3. Executing PROC_PRUNE pass (remove redundant assignments in processes).
Removed 0 redundant assignments.
Promoted 0 assignments to connections.

yosys> proc_init

3.5.4. Executing PROC_INIT pass (extract init attributes).

yosys> proc_arst

3.5.5. Executing PROC_ARST pass (detect async resets in processes).

yosys> proc_rom

3.5.6. Executing PROC_ROM pass (convert switches to ROMs).
Converted 0 switches.

yosys> proc_mux

3.5.7. Executing PROC_MUX pass (convert decision trees to multiplexers).

yosys> proc_dlatch

3.5.8. Executing PROC_DLATCH pass (convert process syncs to latches).

yosys> proc_dff

3.5.9. Executing PROC_DFF pass (convert process syncs to FFs).

yosys> proc_memwr

3.5.10. Executing PROC_MEMWR pass (convert process memory writes to cells).

yosys> proc_clean

3.5.11. Executing PROC_CLEAN pass (remove empty switches from decision trees).
Cleaned up 0 empty switches.

yosys> opt_expr -keepdc

3.5.12. Executing OPT_EXPR pass (perform const folding).
Optimizing module b04.
<suppressed ~1 debug messages>

yosys> bmuxmap

3.6. Executing BMUXMAP pass.

yosys> demuxmap

3.7. Executing DEMUXMAP pass.

yosys> clean_zerowidth

yosys> flatten

3.8. Executing FLATTEN pass (flatten design).

yosys> bmuxmap

3.9. Executing BMUXMAP pass.

yosys> demuxmap

3.10. Executing DEMUXMAP pass.

yosys> clean_zerowidth

yosys> tribuf -logic -formal

3.11. Executing TRIBUF pass.

yosys> deminout

3.12. Executing DEMINOUT pass (demote inout ports to input or output).

yosys> opt_expr

3.13. Executing OPT_EXPR pass (perform const folding).
Optimizing module b04.
<suppressed ~2 debug messages>

yosys> opt_clean

3.14. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \b04..
Removed 0 unused cells and 36 unused wires.
<suppressed ~23 debug messages>

yosys> check

3.15. Executing CHECK pass (checking for obvious problems).
Checking module b04...
Found and reported 0 problems.

yosys> opt_expr

3.16. Executing OPT_EXPR pass (perform const folding).
Optimizing module b04.

yosys> opt_merge -nomux

3.17. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\b04'.
Removed a total of 0 cells.

yosys> opt_muxtree

3.18. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \b04..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Removed 0 multiplexer ports.
<suppressed ~10 debug messages>

yosys> opt_reduce

3.19. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \b04.
Performed a total of 0 changes.

yosys> opt_merge

3.20. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\b04'.
Removed a total of 0 cells.

yosys> opt_share

3.21. Executing OPT_SHARE pass.

yosys> opt_dff -nosdff -nodffe

3.22. Executing OPT_DFF pass (perform DFF optimizations).
Changing const-value async load to async reset on $verific$stato_reg$b04.vhd:99$121 ($aldff) from module b04.
Changing const-value async load to async reset on $verific$RMIN_reg$b04.vhd:99$123 ($aldff) from module b04.
Changing const-value async load to async reset on $verific$RMAX_reg$b04.vhd:99$122 ($aldff) from module b04.
Changing const-value async load to async reset on $verific$RLAST_reg$b04.vhd:99$124 ($aldff) from module b04.
Changing const-value async load to async reset on $verific$REG4_reg$b04.vhd:99$128 ($aldff) from module b04.
Changing const-value async load to async reset on $verific$REG3_reg$b04.vhd:99$127 ($aldff) from module b04.
Changing const-value async load to async reset on $verific$REG2_reg$b04.vhd:99$126 ($aldff) from module b04.
Changing const-value async load to async reset on $verific$REG1_reg$b04.vhd:99$125 ($aldff) from module b04.
Changing const-value async load to async reset on $verific$DATA_OUT_reg$b04.vhd:99$129 ($aldff) from module b04.

yosys> opt_clean

3.23. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \b04..

yosys> opt_expr

3.24. Executing OPT_EXPR pass (perform const folding).
Optimizing module b04.
MAX OPT ITERATION = 1

yosys> fsm -encoding binary

3.25. Executing FSM pass (extract and optimize FSM).

yosys> fsm_detect

3.25.1. Executing FSM_DETECT pass (finding FSMs in design).
Not marking b04.stato as FSM state register:
    Users of register don't seem to benefit from recoding.

yosys> fsm_extract

3.25.2. Executing FSM_EXTRACT pass (extracting FSM from design).

yosys> fsm_opt

3.25.3. Executing FSM_OPT pass (simple optimizations of FSMs).

yosys> opt_clean

3.25.4. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \b04..

yosys> fsm_opt

3.25.5. Executing FSM_OPT pass (simple optimizations of FSMs).

yosys> fsm_recode -encoding binary

3.25.6. Executing FSM_RECODE pass (re-assigning FSM state encoding).

yosys> fsm_info

3.25.7. Executing FSM_INFO pass (dumping all available information on FSM cells).

yosys> fsm_map

3.25.8. Executing FSM_MAP pass (mapping FSMs to basic logic).

yosys> opt_expr

3.26. Executing OPT_EXPR pass (perform const folding).
Optimizing module b04.

yosys> opt_merge -nomux

3.27. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\b04'.
Removed a total of 0 cells.

yosys> opt_muxtree

3.28. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \b04..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Removed 0 multiplexer ports.
<suppressed ~10 debug messages>

yosys> opt_reduce

3.29. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \b04.
Performed a total of 0 changes.

yosys> opt_merge

3.30. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\b04'.
Removed a total of 0 cells.

yosys> opt_share

3.31. Executing OPT_SHARE pass.

yosys> opt_dff -nosdff -sat

3.32. Executing OPT_DFF pass (perform DFF optimizations).
Adding EN signal on $verific$RMIN_reg$b04.vhd:99$123 ($adff) from module b04 (D = $auto$bmuxmap.cc:58:execute$165, Q = \RMIN).
Adding EN signal on $verific$RMAX_reg$b04.vhd:99$122 ($adff) from module b04 (D = $auto$bmuxmap.cc:58:execute$170, Q = \RMAX).
Adding EN signal on $verific$RLAST_reg$b04.vhd:99$124 ($adff) from module b04 (D = $auto$bmuxmap.cc:58:execute$140, Q = \RLAST).
Adding EN signal on $verific$REG4_reg$b04.vhd:99$128 ($adff) from module b04 (D = $auto$bmuxmap.cc:58:execute$145, Q = \REG4).
Adding EN signal on $verific$REG3_reg$b04.vhd:99$127 ($adff) from module b04 (D = $auto$bmuxmap.cc:58:execute$150, Q = \REG3).
Adding EN signal on $verific$REG2_reg$b04.vhd:99$126 ($adff) from module b04 (D = $auto$bmuxmap.cc:58:execute$155, Q = \REG2).
Adding EN signal on $verific$REG1_reg$b04.vhd:99$125 ($adff) from module b04 (D = $auto$bmuxmap.cc:58:execute$160, Q = \REG1).
Adding EN signal on $verific$DATA_OUT_reg$b04.vhd:99$129 ($adff) from module b04 (D = $auto$bmuxmap.cc:58:execute$135 [7:0], Q = \DATA_OUT).

yosys> opt_clean

3.33. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \b04..
Removed 1 unused cells and 1 unused wires.
<suppressed ~2 debug messages>

yosys> opt_expr

3.34. Executing OPT_EXPR pass (perform const folding).
Optimizing module b04.
<suppressed ~8 debug messages>

yosys> opt_muxtree

3.35. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \b04..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Removed 0 multiplexer ports.
<suppressed ~10 debug messages>

yosys> opt_reduce

3.36. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \b04.
Performed a total of 0 changes.

yosys> opt_merge

3.37. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\b04'.
<suppressed ~36 debug messages>
Removed a total of 12 cells.

yosys> opt_share

3.38. Executing OPT_SHARE pass.

yosys> opt_dff -nosdff -sat

3.39. Executing OPT_DFF pass (perform DFF optimizations).

yosys> opt_clean

3.40. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \b04..
Removed 0 unused cells and 7 unused wires.
<suppressed ~1 debug messages>

yosys> opt_expr

3.41. Executing OPT_EXPR pass (perform const folding).
Optimizing module b04.

yosys> opt_muxtree

3.42. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \b04..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Removed 0 multiplexer ports.
<suppressed ~12 debug messages>

yosys> opt_reduce

3.43. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \b04.
Performed a total of 0 changes.

yosys> opt_merge

3.44. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\b04'.
Removed a total of 0 cells.

yosys> opt_share

3.45. Executing OPT_SHARE pass.

yosys> opt_dff -nosdff -sat

3.46. Executing OPT_DFF pass (perform DFF optimizations).

yosys> opt_clean

3.47. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \b04..

yosys> opt_expr

3.48. Executing OPT_EXPR pass (perform const folding).
Optimizing module b04.
MAX OPT ITERATION = 3

yosys> wreduce -keepdc

3.49. Executing WREDUCE pass (reducing word size of cells).
Removed top 1 bits (of 9) from port B of cell b04.$verific$LessThan_20$b04.vhd:67$77 ($le).
Removed top 1 bits (of 8) from port A of cell b04.$verific$unary_minus_22$b04.vhd:70$78 ($neg).
Removed top 1 bits (of 9) from port B of cell b04.$verific$LessThan_38$b04.vhd:79$91 ($le).
Removed top 1 bits (of 8) from port A of cell b04.$verific$unary_minus_40$b04.vhd:82$92 ($neg).
Removed top 1 bits (of 9) from mux cell b04.$auto$bmuxmap.cc:60:execute$136 ($mux).
Removed top 1 bits (of 9) from mux cell b04.$auto$bmuxmap.cc:60:execute$133 ($mux).
Removed top 1 bits (of 9) from mux cell b04.$auto$bmuxmap.cc:60:execute$134 ($mux).
Removed top 1 bits (of 18) from wire b04.$auto$bmuxmap.cc:58:execute$132.
Removed top 1 bits (of 9) from wire b04.$auto$bmuxmap.cc:58:execute$135.
Removed top 1 bits (of 16) from wire b04.$auto$bmuxmap.cc:58:execute$137.
Removed top 1 bits (of 16) from wire b04.$auto$bmuxmap.cc:58:execute$142.
Removed top 1 bits (of 16) from wire b04.$auto$bmuxmap.cc:58:execute$147.
Removed top 1 bits (of 16) from wire b04.$auto$bmuxmap.cc:58:execute$152.
Removed top 1 bits (of 16) from wire b04.$auto$bmuxmap.cc:58:execute$157.
Removed top 1 bits (of 16) from wire b04.$auto$bmuxmap.cc:58:execute$162.
Removed top 5 bits (of 16) from wire b04.$auto$bmuxmap.cc:58:execute$167.
Removed top 1 bits (of 4) from wire b04.$auto$bmuxmap.cc:58:execute$172.
Removed top 1 bits (of 7) from wire b04.$verific$add_43$b04.vhd:82$95.
Removed top 1 bits (of 8) from wire b04.$verific$n112$22.
Removed top 1 bits (of 8) from wire b04.$verific$n218$33.
Removed top 7 bits (of 8) from wire b04.$verific$n265$38.
Removed top 7 bits (of 8) from wire b04.$verific$n428$49.

yosys> peepopt

3.50. Executing PEEPOPT pass (run peephole optimizers).

yosys> opt_clean

3.51. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \b04..
Removed 0 unused cells and 7 unused wires.
<suppressed ~1 debug messages>

yosys> bmuxmap

3.52. Executing BMUXMAP pass.

yosys> demuxmap

3.53. Executing DEMUXMAP pass.

yosys> clean_zerowidth

yosys> alumacc

3.54. Executing ALUMACC pass (create $alu and $macc cells).
Extracting $alu and $macc cells in module b04:
  creating $macc model for $verific$add_14$b04.vhd:64$72 ($add).
  creating $macc model for $verific$add_25$b04.vhd:70$80 ($add).
  creating $macc model for $verific$add_32$b04.vhd:76$86 ($add).
  creating $macc model for $verific$add_43$b04.vhd:82$94 ($add).
  creating $macc model for $verific$unary_minus_22$b04.vhd:70$78 ($neg).
  creating $macc model for $verific$unary_minus_26$b04.vhd:70$83 ($neg).
  creating $macc model for $verific$unary_minus_40$b04.vhd:82$92 ($neg).
  creating $macc model for $verific$unary_minus_44$b04.vhd:82$97 ($neg).
  creating $alu model for $macc $verific$unary_minus_44$b04.vhd:82$97.
  creating $alu model for $macc $verific$unary_minus_40$b04.vhd:82$92.
  creating $alu model for $macc $verific$unary_minus_26$b04.vhd:70$83.
  creating $alu model for $macc $verific$unary_minus_22$b04.vhd:70$78.
  creating $alu model for $macc $verific$add_43$b04.vhd:82$94.
  creating $alu model for $macc $verific$add_32$b04.vhd:76$86.
  creating $alu model for $macc $verific$add_25$b04.vhd:70$80.
  creating $alu model for $macc $verific$add_14$b04.vhd:64$72.
  creating $alu model for $verific$LessThan_20$b04.vhd:67$77 ($le): new $alu
  creating $alu model for $verific$LessThan_38$b04.vhd:79$91 ($le): new $alu
  creating $alu model for $verific$LessThan_53$b04.vhd:88$104 ($lt): new $alu
  creating $alu model for $verific$LessThan_55$b04.vhd:90$105 ($lt): new $alu
  creating $alu cell for $verific$LessThan_55$b04.vhd:90$105: $auto$alumacc.cc:485:replace_alu$231
  creating $alu cell for $verific$LessThan_53$b04.vhd:88$104: $auto$alumacc.cc:485:replace_alu$242
  creating $alu cell for $verific$LessThan_38$b04.vhd:79$91: $auto$alumacc.cc:485:replace_alu$247
  creating $alu cell for $verific$LessThan_20$b04.vhd:67$77: $auto$alumacc.cc:485:replace_alu$260
  creating $alu cell for $verific$add_14$b04.vhd:64$72: $auto$alumacc.cc:485:replace_alu$273
  creating $alu cell for $verific$add_25$b04.vhd:70$80: $auto$alumacc.cc:485:replace_alu$276
  creating $alu cell for $verific$add_32$b04.vhd:76$86: $auto$alumacc.cc:485:replace_alu$279
  creating $alu cell for $verific$add_43$b04.vhd:82$94: $auto$alumacc.cc:485:replace_alu$282
  creating $alu cell for $verific$unary_minus_22$b04.vhd:70$78: $auto$alumacc.cc:485:replace_alu$285
  creating $alu cell for $verific$unary_minus_26$b04.vhd:70$83: $auto$alumacc.cc:485:replace_alu$288
  creating $alu cell for $verific$unary_minus_40$b04.vhd:82$92: $auto$alumacc.cc:485:replace_alu$291
  creating $alu cell for $verific$unary_minus_44$b04.vhd:82$97: $auto$alumacc.cc:485:replace_alu$294
  created 12 $alu and 0 $macc cells.

yosys> opt_expr

3.55. Executing OPT_EXPR pass (perform const folding).
Optimizing module b04.
<suppressed ~3 debug messages>

yosys> opt_merge -nomux

3.56. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\b04'.
Removed a total of 0 cells.

yosys> opt_muxtree

3.57. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \b04..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Removed 0 multiplexer ports.
<suppressed ~12 debug messages>

yosys> opt_reduce

3.58. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \b04.
Performed a total of 0 changes.

yosys> opt_merge

3.59. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\b04'.
<suppressed ~3 debug messages>
Removed a total of 1 cells.

yosys> opt_share

3.60. Executing OPT_SHARE pass.

yosys> opt_dff -nosdff -nodffe

3.61. Executing OPT_DFF pass (perform DFF optimizations).

yosys> opt_clean

3.62. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \b04..
Removed 0 unused cells and 4 unused wires.
<suppressed ~1 debug messages>

yosys> opt_expr

3.63. Executing OPT_EXPR pass (perform const folding).
Optimizing module b04.

yosys> opt_muxtree

3.64. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \b04..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Removed 0 multiplexer ports.
<suppressed ~12 debug messages>

yosys> opt_reduce

3.65. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \b04.
Performed a total of 0 changes.

yosys> opt_merge

3.66. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\b04'.
Removed a total of 0 cells.

yosys> opt_share

3.67. Executing OPT_SHARE pass.

yosys> opt_dff -nosdff -nodffe

3.68. Executing OPT_DFF pass (perform DFF optimizations).

yosys> opt_clean

3.69. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \b04..

yosys> opt_expr

3.70. Executing OPT_EXPR pass (perform const folding).
Optimizing module b04.
MAX OPT ITERATION = 2

yosys> stat

3.71. Printing statistics.

=== b04 ===

   Number of wires:                119
   Number of wire bits:            805
   Number of public wires:          15
   Number of public wire bits:      79
   Number of memories:               0
   Number of memory bits:            0
   Number of processes:              0
   Number of cells:                 78
     $adff                           1
     $adffe                          8
     $alu                           12
     $and                            2
     $mux                           30
     $ne                             3
     $not                            7
     $or                             3
     $reduce_and                     5
     $reduce_bool                    1
     $reduce_or                      2
     $xor                            4


yosys> memory -nomap

3.72. Executing MEMORY pass.

yosys> opt_mem

3.72.1. Executing OPT_MEM pass (optimize memories).
Performed a total of 0 transformations.

yosys> opt_mem_priority

3.72.2. Executing OPT_MEM_PRIORITY pass (removing unnecessary memory write priority relations).
Performed a total of 0 transformations.

yosys> opt_mem_feedback

3.72.3. Executing OPT_MEM_FEEDBACK pass (finding memory read-to-write feedback paths).

yosys> memory_bmux2rom

3.72.4. Executing MEMORY_BMUX2ROM pass (converting muxes to ROMs).

yosys> memory_dff

3.72.5. Executing MEMORY_DFF pass (merging $dff cells to $memrd).

yosys> opt_clean

3.72.6. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \b04..

yosys> memory_share

3.72.7. Executing MEMORY_SHARE pass (consolidating $memrd/$memwr cells).

yosys> opt_mem_widen

3.72.8. Executing OPT_MEM_WIDEN pass (optimize memories where all ports are wide).
Performed a total of 0 transformations.

yosys> opt_clean

3.72.9. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \b04..

yosys> memory_collect

3.72.10. Executing MEMORY_COLLECT pass (generating $mem cells).

yosys> stat

3.73. Printing statistics.

=== b04 ===

   Number of wires:                119
   Number of wire bits:            805
   Number of public wires:          15
   Number of public wire bits:      79
   Number of memories:               0
   Number of memory bits:            0
   Number of processes:              0
   Number of cells:                 78
     $adff                           1
     $adffe                          8
     $alu                           12
     $and                            2
     $mux                           30
     $ne                             3
     $not                            7
     $or                             3
     $reduce_and                     5
     $reduce_bool                    1
     $reduce_or                      2
     $xor                            4


yosys> muxpack

3.74. Executing MUXPACK pass ($mux cell cascades to $pmux).
Converted 0 (p)mux cells into 0 pmux cells.
<suppressed ~27 debug messages>

yosys> opt_clean

3.75. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \b04..

yosys> pmuxtree

3.76. Executing PMUXTREE pass.

yosys> muxpack

3.77. Executing MUXPACK pass ($mux cell cascades to $pmux).
Converted 0 (p)mux cells into 0 pmux cells.
<suppressed ~27 debug messages>

yosys> memory_map

3.78. Executing MEMORY_MAP pass (converting memories to logic and flip-flops).

yosys> stat

3.79. Printing statistics.

=== b04 ===

   Number of wires:                119
   Number of wire bits:            805
   Number of public wires:          15
   Number of public wire bits:      79
   Number of memories:               0
   Number of memory bits:            0
   Number of processes:              0
   Number of cells:                 78
     $adff                           1
     $adffe                          8
     $alu                           12
     $and                            2
     $mux                           30
     $ne                             3
     $not                            7
     $or                             3
     $reduce_and                     5
     $reduce_bool                    1
     $reduce_or                      2
     $xor                            4


yosys> techmap

3.80. Executing TECHMAP pass (map to technology primitives).

3.80.1. Executing Verilog-2005 frontend: /nfs_scratch/scratch/Vorak/aram/Workspace/Raptor/yosys_verific_rs/yosys/install/bin/../share/yosys/techmap.v
Parsing Verilog input from `/nfs_scratch/scratch/Vorak/aram/Workspace/Raptor/yosys_verific_rs/yosys/install/bin/../share/yosys/techmap.v' to AST representation.
Generating RTLIL representation for module `\_90_simplemap_bool_ops'.
Generating RTLIL representation for module `\_90_simplemap_reduce_ops'.
Generating RTLIL representation for module `\_90_simplemap_logic_ops'.
Generating RTLIL representation for module `\_90_simplemap_compare_ops'.
Generating RTLIL representation for module `\_90_simplemap_various'.
Generating RTLIL representation for module `\_90_simplemap_registers'.
Generating RTLIL representation for module `\_90_shift_ops_shr_shl_sshl_sshr'.
Generating RTLIL representation for module `\_90_shift_shiftx'.
Generating RTLIL representation for module `\_90_fa'.
Generating RTLIL representation for module `\_90_lcu'.
Generating RTLIL representation for module `\_90_alu'.
Generating RTLIL representation for module `\_90_macc'.
Generating RTLIL representation for module `\_90_alumacc'.
Generating RTLIL representation for module `\$__div_mod_u'.
Generating RTLIL representation for module `\$__div_mod_trunc'.
Generating RTLIL representation for module `\_90_div'.
Generating RTLIL representation for module `\_90_mod'.
Generating RTLIL representation for module `\$__div_mod_floor'.
Generating RTLIL representation for module `\_90_divfloor'.
Generating RTLIL representation for module `\_90_modfloor'.
Generating RTLIL representation for module `\_90_pow'.
Generating RTLIL representation for module `\_90_pmux'.
Generating RTLIL representation for module `\_90_demux'.
Generating RTLIL representation for module `\_90_lut'.
Successfully finished Verilog frontend.

3.80.2. Continuing TECHMAP pass.
Using extmapper simplemap for cells of type $reduce_bool.
Using extmapper simplemap for cells of type $not.
Using extmapper simplemap for cells of type $reduce_and.
Using template $paramod$a1bc51c02ce12ac21eb18988e83292af48ed7d72\_90_alu for cells of type $alu.
Using extmapper simplemap for cells of type $ne.
Using extmapper simplemap for cells of type $adffe.
Using extmapper simplemap for cells of type $mux.
Using template $paramod$4ccbe221165818e15f326ddee3d1183c7924e12f\_90_alu for cells of type $alu.
Using template $paramod$c9d98d2d0793a6d8797b9c088dbedb26a7be7121\_90_alu for cells of type $alu.
Using template $paramod$103b4016182df467cceab67bcf3e18e6361ec0fd\_90_alu for cells of type $alu.
Using extmapper simplemap for cells of type $xor.
Using template $paramod$fd7bfb1a4f3a7c2ac1a35670d0fa64ccc7b91841\_90_alu for cells of type $alu.
Using extmapper simplemap for cells of type $and.
Using template $paramod$78464f9f65d57061f7490f3fe5dd257e4a61e2b7\_90_alu for cells of type $alu.
Using extmapper simplemap for cells of type $or.
Using extmapper simplemap for cells of type $reduce_or.
Using extmapper simplemap for cells of type $adff.
Using template $paramod\_90_lcu\WIDTH=32'00000000000000000000000000001000 for cells of type $lcu.
Using extmapper simplemap for cells of type $pos.
Using template $paramod\_90_lcu\WIDTH=32'00000000000000000000000000001001 for cells of type $lcu.
Using template $paramod\_90_lcu\WIDTH=32'00000000000000000000000000000111 for cells of type $lcu.
No more expansions possible.
<suppressed ~1194 debug messages>

yosys> stat

3.81. Printing statistics.

=== b04 ===

   Number of wires:                675
   Number of wire bits:          15995
   Number of public wires:          15
   Number of public wire bits:      79
   Number of memories:               0
   Number of memory bits:            0
   Number of processes:              0
   Number of cells:               1180
     $_AND_                        312
     $_DFFE_PP0P_                   64
     $_DFF_PP0_                      2
     $_MUX_                        320
     $_NOT_                        105
     $_OR_                         155
     $_XOR_                        222


yosys> opt_expr

3.82. Executing OPT_EXPR pass (perform const folding).
Optimizing module b04.
<suppressed ~426 debug messages>

yosys> opt_merge -nomux

3.83. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\b04'.
<suppressed ~186 debug messages>
Removed a total of 62 cells.

yosys> opt_muxtree

3.84. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \b04..
  Creating internal representation of mux trees.
  No muxes found in this module.
Removed 0 multiplexer ports.

yosys> opt_reduce

3.85. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \b04.
Performed a total of 0 changes.

yosys> opt_merge

3.86. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\b04'.
Removed a total of 0 cells.

yosys> opt_share

3.87. Executing OPT_SHARE pass.

yosys> opt_dff -nosdff -nodffe

3.88. Executing OPT_DFF pass (perform DFF optimizations).

yosys> opt_clean

3.89. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \b04..
Removed 86 unused cells and 495 unused wires.
<suppressed ~87 debug messages>

yosys> opt_expr

3.90. Executing OPT_EXPR pass (perform const folding).
Optimizing module b04.

yosys> opt_muxtree

3.91. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \b04..
  Creating internal representation of mux trees.
  No muxes found in this module.
Removed 0 multiplexer ports.

yosys> opt_reduce

3.92. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \b04.
Performed a total of 0 changes.

yosys> opt_merge

3.93. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\b04'.
Removed a total of 0 cells.

yosys> opt_share

3.94. Executing OPT_SHARE pass.

yosys> opt_dff -nosdff -nodffe

3.95. Executing OPT_DFF pass (perform DFF optimizations).

yosys> opt_clean

3.96. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \b04..

yosys> opt_expr

3.97. Executing OPT_EXPR pass (perform const folding).
Optimizing module b04.
MAX OPT ITERATION = 2

yosys> opt_expr -full

3.98. Executing OPT_EXPR pass (perform const folding).
Optimizing module b04.
<suppressed ~115 debug messages>

yosys> techmap -map +/techmap.v

3.99. Executing TECHMAP pass (map to technology primitives).

3.99.1. Executing Verilog-2005 frontend: /nfs_scratch/scratch/Vorak/aram/Workspace/Raptor/yosys_verific_rs/yosys/install/bin/../share/yosys/techmap.v
Parsing Verilog input from `/nfs_scratch/scratch/Vorak/aram/Workspace/Raptor/yosys_verific_rs/yosys/install/bin/../share/yosys/techmap.v' to AST representation.
Generating RTLIL representation for module `\_90_simplemap_bool_ops'.
Generating RTLIL representation for module `\_90_simplemap_reduce_ops'.
Generating RTLIL representation for module `\_90_simplemap_logic_ops'.
Generating RTLIL representation for module `\_90_simplemap_compare_ops'.
Generating RTLIL representation for module `\_90_simplemap_various'.
Generating RTLIL representation for module `\_90_simplemap_registers'.
Generating RTLIL representation for module `\_90_shift_ops_shr_shl_sshl_sshr'.
Generating RTLIL representation for module `\_90_shift_shiftx'.
Generating RTLIL representation for module `\_90_fa'.
Generating RTLIL representation for module `\_90_lcu'.
Generating RTLIL representation for module `\_90_alu'.
Generating RTLIL representation for module `\_90_macc'.
Generating RTLIL representation for module `\_90_alumacc'.
Generating RTLIL representation for module `\$__div_mod_u'.
Generating RTLIL representation for module `\$__div_mod_trunc'.
Generating RTLIL representation for module `\_90_div'.
Generating RTLIL representation for module `\_90_mod'.
Generating RTLIL representation for module `\$__div_mod_floor'.
Generating RTLIL representation for module `\_90_divfloor'.
Generating RTLIL representation for module `\_90_modfloor'.
Generating RTLIL representation for module `\_90_pow'.
Generating RTLIL representation for module `\_90_pmux'.
Generating RTLIL representation for module `\_90_demux'.
Generating RTLIL representation for module `\_90_lut'.
Successfully finished Verilog frontend.

3.99.2. Continuing TECHMAP pass.
No more expansions possible.
<suppressed ~71 debug messages>

yosys> opt_expr

3.100. Executing OPT_EXPR pass (perform const folding).
Optimizing module b04.

yosys> opt_merge -nomux

3.101. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\b04'.
Removed a total of 0 cells.

yosys> opt_muxtree

3.102. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \b04..
  Creating internal representation of mux trees.
  No muxes found in this module.
Removed 0 multiplexer ports.

yosys> opt_reduce

3.103. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \b04.
Performed a total of 0 changes.

yosys> opt_merge

3.104. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\b04'.
Removed a total of 0 cells.

yosys> opt_dff -nosdff -nodffe -sat

3.105. Executing OPT_DFF pass (perform DFF optimizations).

yosys> opt_clean

3.106. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \b04..
Removed 0 unused cells and 20 unused wires.
<suppressed ~1 debug messages>

yosys> opt_expr

3.107. Executing OPT_EXPR pass (perform const folding).
Optimizing module b04.
MAX OPT ITERATION = 1

yosys> abc -dff

3.108. Executing ABC pass (technology mapping using ABC).

3.108.1. Summary of detected clock domains:
  41 cells in clk=\CLOCK, en=$auto$opt_dff.cc:219:make_patterns_logic$191, arst=\RESET, srst={ }
  393 cells in clk=\CLOCK, en=$auto$opt_dff.cc:194:make_patterns_logic$182, arst=\RESET, srst={ }
  31 cells in clk=\CLOCK, en={ }, arst=\RESET, srst={ }
  62 cells in clk=\CLOCK, en=$auto$opt_dff.cc:219:make_patterns_logic$184, arst=\RESET, srst={ }

3.108.2. Extracting gate netlist of module `\b04' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \CLOCK, enabled by $auto$opt_dff.cc:219:make_patterns_logic$191, asynchronously reset by \RESET
Extracted 41 gates and 67 wires to a netlist network with 26 inputs and 32 outputs.

3.108.2.1. Executing ABC.

3.108.3. Extracting gate netlist of module `\b04' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \CLOCK, enabled by $auto$opt_dff.cc:194:make_patterns_logic$182, asynchronously reset by \RESET
Extracted 393 gates and 423 wires to a netlist network with 29 inputs and 9 outputs.

3.108.3.1. Executing ABC.

3.108.4. Extracting gate netlist of module `\b04' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \CLOCK, asynchronously reset by \RESET
Extracted 31 gates and 49 wires to a netlist network with 16 inputs and 7 outputs.

3.108.4.1. Executing ABC.

3.108.5. Extracting gate netlist of module `\b04' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \CLOCK, enabled by $auto$opt_dff.cc:219:make_patterns_logic$184, asynchronously reset by \RESET
Extracted 62 gates and 75 wires to a netlist network with 13 inputs and 16 outputs.

3.108.5.1. Executing ABC.

yosys> abc -dff

3.109. Executing ABC pass (technology mapping using ABC).

3.109.1. Summary of detected clock domains:
  48 cells in clk=\CLOCK, en=$abc$1867$auto$opt_dff.cc:219:make_patterns_logic$191, arst=\RESET, srst={ }
  91 cells in clk=\CLOCK, en={ }, arst=\RESET, srst={ }
  140 cells in clk=\CLOCK, en=$abc$1917$auto$opt_dff.cc:194:make_patterns_logic$182, arst=\RESET, srst={ }
  55 cells in clk=\CLOCK, en=$abc$2160$auto$opt_dff.cc:219:make_patterns_logic$184, arst=\RESET, srst={ }

3.109.2. Extracting gate netlist of module `\b04' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \CLOCK, enabled by $abc$1867$auto$opt_dff.cc:219:make_patterns_logic$191, asynchronously reset by \RESET
Extracted 48 gates and 67 wires to a netlist network with 19 inputs and 28 outputs.

3.109.2.1. Executing ABC.

3.109.3. Extracting gate netlist of module `\b04' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \CLOCK, asynchronously reset by \RESET
Extracted 91 gates and 156 wires to a netlist network with 65 inputs and 51 outputs.

3.109.3.1. Executing ABC.

3.109.4. Extracting gate netlist of module `\b04' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \CLOCK, enabled by $abc$1917$auto$opt_dff.cc:194:make_patterns_logic$182, asynchronously reset by \RESET
Extracted 140 gates and 197 wires to a netlist network with 57 inputs and 39 outputs.

3.109.4.1. Executing ABC.

3.109.5. Extracting gate netlist of module `\b04' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \CLOCK, enabled by $abc$2160$auto$opt_dff.cc:219:make_patterns_logic$184, asynchronously reset by \RESET
Extracted 55 gates and 68 wires to a netlist network with 13 inputs and 8 outputs.

3.109.5.1. Executing ABC.

yosys> abc -dff

3.110. Executing ABC pass (technology mapping using ABC).

3.110.1. Summary of detected clock domains:
  37 cells in clk=\CLOCK, en=$abc$2239$abc$1867$auto$opt_dff.cc:219:make_patterns_logic$191, arst=\RESET, srst={ }
  59 cells in clk=\CLOCK, en={ }, arst=\RESET, srst={ }
  177 cells in clk=\CLOCK, en=$abc$2381$abc$1917$auto$opt_dff.cc:194:make_patterns_logic$182, arst=\RESET, srst={ }
  55 cells in clk=\CLOCK, en=$abc$2593$abc$2160$auto$opt_dff.cc:219:make_patterns_logic$184, arst=\RESET, srst={ }

3.110.2. Extracting gate netlist of module `\b04' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \CLOCK, enabled by $abc$2239$abc$1867$auto$opt_dff.cc:219:make_patterns_logic$191, asynchronously reset by \RESET
Extracted 37 gates and 55 wires to a netlist network with 18 inputs and 28 outputs.

3.110.2.1. Executing ABC.

3.110.3. Extracting gate netlist of module `\b04' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \CLOCK, asynchronously reset by \RESET
Extracted 59 gates and 91 wires to a netlist network with 32 inputs and 17 outputs.

3.110.3.1. Executing ABC.

3.110.4. Extracting gate netlist of module `\b04' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \CLOCK, enabled by $abc$2381$abc$1917$auto$opt_dff.cc:194:make_patterns_logic$182, asynchronously reset by \RESET
Extracted 177 gates and 200 wires to a netlist network with 23 inputs and 10 outputs.

3.110.4.1. Executing ABC.

3.110.5. Extracting gate netlist of module `\b04' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \CLOCK, enabled by $abc$2593$abc$2160$auto$opt_dff.cc:219:make_patterns_logic$184, asynchronously reset by \RESET
Extracted 55 gates and 68 wires to a netlist network with 13 inputs and 8 outputs.

3.110.5.1. Executing ABC.

yosys> abc -dff

3.111. Executing ABC pass (technology mapping using ABC).

3.111.1. Summary of detected clock domains:
  92 cells in clk=\CLOCK, en={ }, arst=\RESET, srst={ }
  37 cells in clk=\CLOCK, en=$abc$2664$abc$2239$abc$1867$auto$opt_dff.cc:219:make_patterns_logic$191, arst=\RESET, srst={ }
  143 cells in clk=\CLOCK, en=$abc$2772$abc$2381$abc$1917$auto$opt_dff.cc:194:make_patterns_logic$182, arst=\RESET, srst={ }
  42 cells in clk=\CLOCK, en=$abc$2961$abc$2593$abc$2160$auto$opt_dff.cc:219:make_patterns_logic$184, arst=\RESET, srst={ }

3.111.2. Extracting gate netlist of module `\b04' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \CLOCK, asynchronously reset by \RESET
Extracted 92 gates and 156 wires to a netlist network with 64 inputs and 50 outputs.

3.111.2.1. Executing ABC.

3.111.3. Extracting gate netlist of module `\b04' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \CLOCK, enabled by $abc$2664$abc$2239$abc$1867$auto$opt_dff.cc:219:make_patterns_logic$191, asynchronously reset by \RESET
Extracted 37 gates and 55 wires to a netlist network with 18 inputs and 28 outputs.

3.111.3.1. Executing ABC.

3.111.4. Extracting gate netlist of module `\b04' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \CLOCK, enabled by $abc$2772$abc$2381$abc$1917$auto$opt_dff.cc:194:make_patterns_logic$182, asynchronously reset by \RESET
Extracted 143 gates and 199 wires to a netlist network with 56 inputs and 38 outputs.

3.111.4.1. Executing ABC.

3.111.5. Extracting gate netlist of module `\b04' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \CLOCK, enabled by $abc$2961$abc$2593$abc$2160$auto$opt_dff.cc:219:make_patterns_logic$184, asynchronously reset by \RESET
Extracted 42 gates and 55 wires to a netlist network with 13 inputs and 8 outputs.

3.111.5.1. Executing ABC.

yosys> opt_ffinv

3.112. Executing OPT_FFINV pass (push inverters through FFs).
Discovering LUTs.
Pushed 0 inverters.

yosys> opt_expr

3.113. Executing OPT_EXPR pass (perform const folding).
Optimizing module b04.

yosys> opt_merge -nomux

3.114. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\b04'.
<suppressed ~6 debug messages>
Removed a total of 2 cells.

yosys> opt_muxtree

3.115. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \b04..
  Creating internal representation of mux trees.
  No muxes found in this module.
Removed 0 multiplexer ports.

yosys> opt_reduce

3.116. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \b04.
Performed a total of 0 changes.

yosys> opt_merge

3.117. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\b04'.
Removed a total of 0 cells.

yosys> opt_share

3.118. Executing OPT_SHARE pass.

yosys> opt_dff -nosdff -sat

3.119. Executing OPT_DFF pass (perform DFF optimizations).

yosys> opt_clean

3.120. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \b04..
Removed 0 unused cells and 1932 unused wires.
<suppressed ~7 debug messages>

yosys> opt_expr

3.121. Executing OPT_EXPR pass (perform const folding).
Optimizing module b04.
MAX OPT ITERATION = 1

yosys> bmuxmap

3.122. Executing BMUXMAP pass.

yosys> demuxmap

3.123. Executing DEMUXMAP pass.

yosys> clean_zerowidth

yosys> abc -script /tmp/yosys_2nZg7D/abc_tmp_1.scr

3.124. Executing ABC pass (technology mapping using ABC).

3.124.1. Extracting gate netlist of module `\b04' to `<abc-temp-dir>/input.blif'..
Extracted 247 gates and 316 wires to a netlist network with 69 inputs and 52 outputs.

3.124.1.1. Executing ABC.
DE:   #PIs =  69  #Luts =    85  Max Lvl =   4  Avg Lvl =   1.37  [   0.12 sec. at Pass 0]{firstMap}
DE:   #PIs =  69  #Luts =    76  Max Lvl =   5  Avg Lvl =   1.38  [   0.62 sec. at Pass 1]{initMapFlow}
DE:   #PIs =  69  #Luts =    76  Max Lvl =   5  Avg Lvl =   1.38  [   0.40 sec. at Pass 2]{map}
DE:   #PIs =  69  #Luts =    76  Max Lvl =   5  Avg Lvl =   1.38  [   0.51 sec. at Pass 3]{postMap}
DE:   #PIs =  69  #Luts =    76  Max Lvl =   5  Avg Lvl =   1.38  [   0.70 sec. at Pass 4]{map}
DE:   #PIs =  69  #Luts =    76  Max Lvl =   5  Avg Lvl =   1.38  [   1.36 sec. at Pass 5]{postMap}
DE:   #PIs =  69  #Luts =    75  Max Lvl =   5  Avg Lvl =   1.42  [   3.03 sec. at Pass 6]{pushMap}
DE:   #PIs =  69  #Luts =    75  Max Lvl =   5  Avg Lvl =   1.42  [   1.55 sec. at Pass 7]{map}
DE:   #PIs =  69  #Luts =    75  Max Lvl =   5  Avg Lvl =   1.42  [   1.69 sec. at Pass 8]{postMap}
DE:   #PIs =  69  #Luts =    75  Max Lvl =   5  Avg Lvl =   1.42  [   1.31 sec. at Pass 9]{map}
DE:   #PIs =  69  #Luts =    75  Max Lvl =   5  Avg Lvl =   1.42  [   2.07 sec. at Pass 10]{pushMap}
DE:   #PIs =  69  #Luts =    75  Max Lvl =   5  Avg Lvl =   1.42  [   1.53 sec. at Pass 11]{finalMap}

yosys> opt_expr

3.125. Executing OPT_EXPR pass (perform const folding).
Optimizing module b04.

yosys> opt_merge -nomux

3.126. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\b04'.
Removed a total of 0 cells.

yosys> opt_muxtree

3.127. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \b04..
  Creating internal representation of mux trees.
  No muxes found in this module.
Removed 0 multiplexer ports.

yosys> opt_reduce

3.128. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \b04.
Performed a total of 0 changes.

yosys> opt_merge

3.129. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\b04'.
Removed a total of 0 cells.

yosys> opt_share

3.130. Executing OPT_SHARE pass.

yosys> opt_dff -nosdff -nodffe

3.131. Executing OPT_DFF pass (perform DFF optimizations).

yosys> opt_clean

3.132. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \b04..
Removed 0 unused cells and 295 unused wires.
<suppressed ~1 debug messages>

yosys> opt_expr

3.133. Executing OPT_EXPR pass (perform const folding).
Optimizing module b04.
MAX OPT ITERATION = 1

yosys> opt_ffinv

3.134. Executing OPT_FFINV pass (push inverters through FFs).
Discovering LUTs.
Pushed 0 inverters.

yosys> stat

3.135. Printing statistics.

=== b04 ===

   Number of wires:                133
   Number of wire bits:            155
   Number of public wires:           9
   Number of public wire bits:      31
   Number of memories:               0
   Number of memory bits:            0
   Number of processes:              0
   Number of cells:                141
     $_DFFE_PP0P_                   64
     $_DFF_PP0_                      2
     $lut                           75


yosys> shregmap -minlen 8 -maxlen 20

3.136. Executing SHREGMAP pass (map shift registers).
Converted 0 dff cells into 0 shift registers.

yosys> dfflegalize -cell $_DFF_?_ 0 -cell $_DFF_???_ 0 -cell $_DFFE_????_ 0 -cell $_DFFSR_???_ 0 -cell $_DFFSRE_????_ 0 -cell $_DLATCHSR_PPP_ 0

3.137. Executing DFFLEGALIZE pass (convert FFs to types supported by the target).

yosys> stat

3.138. Printing statistics.

=== b04 ===

   Number of wires:                133
   Number of wire bits:            155
   Number of public wires:           9
   Number of public wire bits:      31
   Number of memories:               0
   Number of memory bits:            0
   Number of processes:              0
   Number of cells:                141
     $_DFFE_PP0P_                   64
     $_DFF_PP0_                      2
     $lut                           75


yosys> techmap -map +/techmap.v -map +/rapidsilicon/genesis/ffs_map.v

3.139. Executing TECHMAP pass (map to technology primitives).

3.139.1. Executing Verilog-2005 frontend: /nfs_scratch/scratch/Vorak/aram/Workspace/Raptor/yosys_verific_rs/yosys/install/bin/../share/yosys/techmap.v
Parsing Verilog input from `/nfs_scratch/scratch/Vorak/aram/Workspace/Raptor/yosys_verific_rs/yosys/install/bin/../share/yosys/techmap.v' to AST representation.
Generating RTLIL representation for module `\_90_simplemap_bool_ops'.
Generating RTLIL representation for module `\_90_simplemap_reduce_ops'.
Generating RTLIL representation for module `\_90_simplemap_logic_ops'.
Generating RTLIL representation for module `\_90_simplemap_compare_ops'.
Generating RTLIL representation for module `\_90_simplemap_various'.
Generating RTLIL representation for module `\_90_simplemap_registers'.
Generating RTLIL representation for module `\_90_shift_ops_shr_shl_sshl_sshr'.
Generating RTLIL representation for module `\_90_shift_shiftx'.
Generating RTLIL representation for module `\_90_fa'.
Generating RTLIL representation for module `\_90_lcu'.
Generating RTLIL representation for module `\_90_alu'.
Generating RTLIL representation for module `\_90_macc'.
Generating RTLIL representation for module `\_90_alumacc'.
Generating RTLIL representation for module `\$__div_mod_u'.
Generating RTLIL representation for module `\$__div_mod_trunc'.
Generating RTLIL representation for module `\_90_div'.
Generating RTLIL representation for module `\_90_mod'.
Generating RTLIL representation for module `\$__div_mod_floor'.
Generating RTLIL representation for module `\_90_divfloor'.
Generating RTLIL representation for module `\_90_modfloor'.
Generating RTLIL representation for module `\_90_pow'.
Generating RTLIL representation for module `\_90_pmux'.
Generating RTLIL representation for module `\_90_demux'.
Generating RTLIL representation for module `\_90_lut'.
Successfully finished Verilog frontend.

3.139.2. Executing Verilog-2005 frontend: /nfs_scratch/scratch/Vorak/aram/Workspace/Raptor/yosys_verific_rs/yosys/install/bin/../share/yosys/rapidsilicon/genesis/ffs_map.v
Parsing Verilog input from `/nfs_scratch/scratch/Vorak/aram/Workspace/Raptor/yosys_verific_rs/yosys/install/bin/../share/yosys/rapidsilicon/genesis/ffs_map.v' to AST representation.
Generating RTLIL representation for module `\$_DFF_P_'.
Generating RTLIL representation for module `\$_DFF_PP0_'.
Generating RTLIL representation for module `\$_DFF_PN0_'.
Generating RTLIL representation for module `\$_DFF_PP1_'.
Generating RTLIL representation for module `\$_DFF_PN1_'.
Generating RTLIL representation for module `\$_DFFE_PP_'.
Generating RTLIL representation for module `\$_DFFE_PN_'.
Generating RTLIL representation for module `\$_DFFE_PP0P_'.
Generating RTLIL representation for module `\$_DFFE_PP0N_'.
Generating RTLIL representation for module `\$_DFFE_PN0P_'.
Generating RTLIL representation for module `\$_DFFE_PN0N_'.
Generating RTLIL representation for module `\$_DFFE_PP1P_'.
Generating RTLIL representation for module `\$_DFFE_PP1N_'.
Generating RTLIL representation for module `\$_DFFE_PN1P_'.
Generating RTLIL representation for module `\$_DFFE_PN1N_'.
Generating RTLIL representation for module `\$_DFFSR_PPP_'.
Generating RTLIL representation for module `\$_DFFSR_PNP_'.
Generating RTLIL representation for module `\$_DFFSR_PNN_'.
Generating RTLIL representation for module `\$_DFFSR_PPN_'.
Generating RTLIL representation for module `\$_DFFSR_NPP_'.
Generating RTLIL representation for module `\$_DFFSR_NNP_'.
Generating RTLIL representation for module `\$_DFFSR_NNN_'.
Generating RTLIL representation for module `\$_DFFSR_NPN_'.
Generating RTLIL representation for module `\$_DFFSRE_PPPP_'.
Generating RTLIL representation for module `\$_DFFSRE_PNPP_'.
Generating RTLIL representation for module `\$_DFFSRE_PPNP_'.
Generating RTLIL representation for module `\$_DFFSRE_PNNP_'.
Generating RTLIL representation for module `\$_DFFSRE_PPPN_'.
Generating RTLIL representation for module `\$_DFFSRE_PNPN_'.
Generating RTLIL representation for module `\$_DFFSRE_PPNN_'.
Generating RTLIL representation for module `\$_DFFSRE_PNNN_'.
Generating RTLIL representation for module `\$_DLATCHSR_PPP_'.
Generating RTLIL representation for module `\$_DLATCHSR_NPP_'.
Generating RTLIL representation for module `\$_DFF_N_'.
Generating RTLIL representation for module `\$_DFF_NP0_'.
Generating RTLIL representation for module `\$_DFF_NN0_'.
Generating RTLIL representation for module `\$_DFF_NP1_'.
Generating RTLIL representation for module `\$_DFF_NN1_'.
Generating RTLIL representation for module `\$_DFFE_NP_'.
Generating RTLIL representation for module `\$_DFFE_NN_'.
Generating RTLIL representation for module `\$_DFFE_NP0P_'.
Generating RTLIL representation for module `\$_DFFE_NP0N_'.
Generating RTLIL representation for module `\$_DFFE_NN0P_'.
Generating RTLIL representation for module `\$_DFFE_NN0N_'.
Generating RTLIL representation for module `\$_DFFE_NP1P_'.
Generating RTLIL representation for module `\$_DFFE_NP1N_'.
Generating RTLIL representation for module `\$_DFFE_NN1P_'.
Generating RTLIL representation for module `\$_DFFE_NN1N_'.
Generating RTLIL representation for module `\$_DFFSRE_NPPP_'.
Generating RTLIL representation for module `\$_DFFSRE_NNPP_'.
Generating RTLIL representation for module `\$_DFFSRE_NPNP_'.
Generating RTLIL representation for module `\$_DFFSRE_NNNP_'.
Generating RTLIL representation for module `\$_DFFSRE_NPPN_'.
Generating RTLIL representation for module `\$_DFFSRE_NNPN_'.
Generating RTLIL representation for module `\$_DFFSRE_NPNN_'.
Generating RTLIL representation for module `\$_DFFSRE_NNNN_'.
Generating RTLIL representation for module `\$__SHREG_DFF_P_'.
Generating RTLIL representation for module `\$_SDFF_PP0_'.
Generating RTLIL representation for module `\$_SDFF_PN0_'.
Generating RTLIL representation for module `\$_SDFF_NP0_'.
Generating RTLIL representation for module `\$_SDFF_NN0_'.
Generating RTLIL representation for module `\$_SDFF_PP1_'.
Generating RTLIL representation for module `\$_SDFF_PN1_'.
Generating RTLIL representation for module `\$_SDFF_NP1_'.
Generating RTLIL representation for module `\$_SDFF_NN1_'.
Successfully finished Verilog frontend.

3.139.3. Continuing TECHMAP pass.
Using template \$_DFFE_PP0P_ for cells of type $_DFFE_PP0P_.
Using template \$_DFF_PP0_ for cells of type $_DFF_PP0_.
Using extmapper simplemap for cells of type $lut.
Using extmapper simplemap for cells of type $logic_not.
No more expansions possible.
<suppressed ~343 debug messages>

yosys> opt_expr -mux_undef

3.140. Executing OPT_EXPR pass (perform const folding).
Optimizing module b04.
<suppressed ~1162 debug messages>

yosys> simplemap

3.141. Executing SIMPLEMAP pass (map simple cells to gate primitives).

yosys> opt_expr

3.142. Executing OPT_EXPR pass (perform const folding).
Optimizing module b04.

yosys> opt_merge

3.143. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\b04'.
<suppressed ~861 debug messages>
Removed a total of 287 cells.

yosys> opt_dff -nodffe -nosdff

3.144. Executing OPT_DFF pass (perform DFF optimizations).

yosys> opt_clean

3.145. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \b04..
Removed 0 unused cells and 539 unused wires.
<suppressed ~1 debug messages>

yosys> opt_expr

3.146. Executing OPT_EXPR pass (perform const folding).
Optimizing module b04.
<suppressed ~17 debug messages>

yosys> opt_merge -nomux

3.147. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\b04'.
Removed a total of 0 cells.

yosys> opt_muxtree

3.148. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \b04..
  Creating internal representation of mux trees.
  No muxes found in this module.
Removed 0 multiplexer ports.

yosys> opt_reduce

3.149. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \b04.
Performed a total of 0 changes.

yosys> opt_merge

3.150. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\b04'.
Removed a total of 0 cells.

yosys> opt_share

3.151. Executing OPT_SHARE pass.

yosys> opt_dff -nosdff -nodffe

3.152. Executing OPT_DFF pass (perform DFF optimizations).

yosys> opt_clean

3.153. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \b04..
Removed 0 unused cells and 9 unused wires.
<suppressed ~1 debug messages>

yosys> opt_expr

3.154. Executing OPT_EXPR pass (perform const folding).
Optimizing module b04.
MAX OPT ITERATION = 1

yosys> abc -script /tmp/yosys_2nZg7D/abc_tmp_2.scr

3.155. Executing ABC pass (technology mapping using ABC).

3.155.1. Extracting gate netlist of module `\b04' to `<abc-temp-dir>/input.blif'..
Extracted 299 gates and 371 wires to a netlist network with 70 inputs and 53 outputs.

3.155.1.1. Executing ABC.
DE:   #PIs =  70  #Luts =    79  Max Lvl =   4  Avg Lvl =   1.34  [   0.11 sec. at Pass 0]{firstMap}
DE:   #PIs =  70  #Luts =    77  Max Lvl =   5  Avg Lvl =   1.36  [   0.84 sec. at Pass 1]{initMapFlow}
DE:   #PIs =  70  #Luts =    76  Max Lvl =   5  Avg Lvl =   1.36  [   0.27 sec. at Pass 2]{map}
DE:   #PIs =  70  #Luts =    76  Max Lvl =   5  Avg Lvl =   1.36  [   0.68 sec. at Pass 3]{postMap}
DE:   #PIs =  70  #Luts =    76  Max Lvl =   5  Avg Lvl =   1.36  [   0.62 sec. at Pass 4]{map}
DE:   #PIs =  70  #Luts =    76  Max Lvl =   5  Avg Lvl =   1.36  [   1.58 sec. at Pass 5]{postMap}
DE:   #PIs =  70  #Luts =    75  Max Lvl =   5  Avg Lvl =   1.38  [   2.00 sec. at Pass 6]{pushMap}
DE:   #PIs =  70  #Luts =    75  Max Lvl =   5  Avg Lvl =   1.38  [   1.43 sec. at Pass 7]{map}
DE:   #PIs =  70  #Luts =    75  Max Lvl =   5  Avg Lvl =   1.38  [   2.01 sec. at Pass 8]{postMap}
DE:   #PIs =  70  #Luts =    75  Max Lvl =   5  Avg Lvl =   1.38  [   1.46 sec. at Pass 9]{map}
DE:   #PIs =  70  #Luts =    75  Max Lvl =   5  Avg Lvl =   1.38  [   1.92 sec. at Pass 10]{pushMap}
DE:   #PIs =  70  #Luts =    75  Max Lvl =   5  Avg Lvl =   1.38  [   1.81 sec. at Pass 11]{finalMap}

yosys> opt_expr

3.156. Executing OPT_EXPR pass (perform const folding).
Optimizing module b04.

yosys> opt_merge -nomux

3.157. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\b04'.
Removed a total of 0 cells.

yosys> opt_muxtree

3.158. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \b04..
  Creating internal representation of mux trees.
  No muxes found in this module.
Removed 0 multiplexer ports.

yosys> opt_reduce

3.159. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \b04.
Performed a total of 0 changes.

yosys> opt_merge

3.160. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\b04'.
Removed a total of 0 cells.

yosys> opt_share

3.161. Executing OPT_SHARE pass.

yosys> opt_dff -nosdff -nodffe

3.162. Executing OPT_DFF pass (perform DFF optimizations).

yosys> opt_clean

3.163. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \b04..
Removed 0 unused cells and 265 unused wires.
<suppressed ~1 debug messages>

yosys> opt_expr

3.164. Executing OPT_EXPR pass (perform const folding).
Optimizing module b04.
MAX OPT ITERATION = 1

yosys> hierarchy -check

3.165. Executing HIERARCHY pass (managing design hierarchy).

3.165.1. Analyzing design hierarchy..
Top module:  \b04

3.165.2. Analyzing design hierarchy..
Top module:  \b04
Removed 0 unused modules.

yosys> stat

3.166. Printing statistics.

=== b04 ===

   Number of wires:                133
   Number of wire bits:            155
   Number of public wires:           9
   Number of public wire bits:      31
   Number of memories:               0
   Number of memory bits:            0
   Number of processes:              0
   Number of cells:                141
     $lut                           75
     dffsre                         66


yosys> opt_clean -purge

3.167. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \b04..

yosys> write_verilog -noattr -nohex synthesized.v

3.168. Executing Verilog backend.
Dumping module `\b04'.

End of script. Logfile hash: 0a80723d92, CPU: user 1.24s system 0.04s, MEM: 42.45 MB peak
Yosys 0.18+10 (git sha1 7361c89db, gcc 9.4.0-1ubuntu1~20.04.1 -fPIC -Os)
Time spent: 98% 6x abc (86 sec), 0% 33x opt_expr (0 sec), ...
real 38.79
user 73.98
sys 14.13
