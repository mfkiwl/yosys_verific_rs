
 /----------------------------------------------------------------------------\
 |                                                                            |
 |  yosys -- Yosys Open SYnthesis Suite                                       |
 |                                                                            |
 |  Copyright (C) 2012 - 2020  Claire Xenia Wolf <claire@yosyshq.com>         |
 |                                                                            |
 |  Permission to use, copy, modify, and/or distribute this software for any  |
 |  purpose with or without fee is hereby granted, provided that the above    |
 |  copyright notice and this permission notice appear in all copies.         |
 |                                                                            |
 |  THE SOFTWARE IS PROVIDED "AS IS" AND THE AUTHOR DISCLAIMS ALL WARRANTIES  |
 |  WITH REGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF          |
 |  MERCHANTABILITY AND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR   |
 |  ANY SPECIAL, DIRECT, INDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES    |
 |  WHATSOEVER RESULTING FROM LOSS OF USE, DATA OR PROFITS, WHETHER IN AN     |
 |  ACTION OF CONTRACT, NEGLIGENCE OR OTHER TORTIOUS ACTION, ARISING OUT OF   |
 |  OR IN CONNECTION WITH THE USE OR PERFORMANCE OF THIS SOFTWARE.            |
 |                                                                            |
 \----------------------------------------------------------------------------/

 Yosys-Verific 0.0.92
 Yosys 0.18+10 (git sha1 7361c89db, gcc 9.4.0-1ubuntu1~20.04.1 -fPIC -Os)


-- Executing script file `yosys.ys' --
echo on

yosys> plugin -i synth-rs

yosys> read -verific

yosys> read -incdir .

yosys> verific -vlog-incdir .

1. Executing VERIFIC (loading SystemVerilog and VHDL designs using Verific).
Built with Verific May22_SW_Release, released at Wed Jun  1 05:39:28 2022.

yosys> verilog_defaults -add -I.

yosys> read -vhdl b14.vhd

yosys> verific -vhdl b14.vhd

2. Executing VERIFIC (loading SystemVerilog and VHDL designs using Verific).
Built with Verific May22_SW_Release, released at Wed Jun  1 05:39:28 2022.
VERIFIC-INFO [VHDL-1504] default VHDL library search path is now "/nfs_scratch/scratch/Vorak/aram/Workspace/Raptor/yosys_verific_rs/yosys/install/share/yosys/verific/vhdl_vdbs_2008"
VERIFIC-COMMENT [VHDL-1481] Analyzing VHDL file 'b14.vhd'
VERIFIC-COMMENT [VHDL-1493] Restoring VHDL unit 'std.standard' from file '/nfs_scratch/scratch/Vorak/aram/Workspace/Raptor/yosys_verific_rs/yosys/install/share/yosys/verific/vhdl_vdbs_2008/std/standard.vdb'
VERIFIC-INFO [VHDL-1012] b14.vhd:1: analyzing entity 'b14'
VERIFIC-INFO [VHDL-1010] b14.vhd:11: analyzing architecture 'behav'

yosys> synth_rs -top b14 -tech genesis -goal area -de -no_dsp -no_bram -verilog synthesized.v

3. Executing synth_rs pass: v0.4.79

yosys> read_verilog -lib -specify -nomem2reg +/rapidsilicon/common/cells_sim.v +/rapidsilicon/genesis/cells_sim.v +/rapidsilicon/genesis/dsp_sim.v

3.1. Executing Verilog-2005 frontend: /nfs_scratch/scratch/Vorak/aram/Workspace/Raptor/yosys_verific_rs/yosys/install/bin/../share/yosys/rapidsilicon/common/cells_sim.v
Parsing Verilog input from `/nfs_scratch/scratch/Vorak/aram/Workspace/Raptor/yosys_verific_rs/yosys/install/bin/../share/yosys/rapidsilicon/common/cells_sim.v' to AST representation.
Generating RTLIL representation for module `\inv'.
Generating RTLIL representation for module `\buff'.
Generating RTLIL representation for module `\logic_0'.
Generating RTLIL representation for module `\logic_1'.
Generating RTLIL representation for module `\gclkbuff'.
Successfully finished Verilog frontend.

3.2. Executing Verilog-2005 frontend: /nfs_scratch/scratch/Vorak/aram/Workspace/Raptor/yosys_verific_rs/yosys/install/bin/../share/yosys/rapidsilicon/genesis/cells_sim.v
Parsing Verilog input from `/nfs_scratch/scratch/Vorak/aram/Workspace/Raptor/yosys_verific_rs/yosys/install/bin/../share/yosys/rapidsilicon/genesis/cells_sim.v' to AST representation.
Generating RTLIL representation for module `\dffsre'.
Generating RTLIL representation for module `\dffnsre'.
Generating RTLIL representation for module `\latchsre'.
Generating RTLIL representation for module `\latchnsre'.
Generating RTLIL representation for module `\io_scff'.
Generating RTLIL representation for module `\scff'.
Generating RTLIL representation for module `\sh_dff'.
Generating RTLIL representation for module `\adder_carry'.
Generating RTLIL representation for module `\sdffr'.
Generating RTLIL representation for module `\sdffs'.
Generating RTLIL representation for module `\TDP_BRAM18'.
Generating RTLIL representation for module `\TDP36K'.
Generating RTLIL representation for module `\BRAM2x18_TDP'.
Generating RTLIL representation for module `\BRAM2x18_SDP'.
Generating RTLIL representation for module `\_$_mem_v2_asymmetric'.
Successfully finished Verilog frontend.

3.3. Executing Verilog-2005 frontend: /nfs_scratch/scratch/Vorak/aram/Workspace/Raptor/yosys_verific_rs/yosys/install/bin/../share/yosys/rapidsilicon/genesis/dsp_sim.v
Parsing Verilog input from `/nfs_scratch/scratch/Vorak/aram/Workspace/Raptor/yosys_verific_rs/yosys/install/bin/../share/yosys/rapidsilicon/genesis/dsp_sim.v' to AST representation.
Generating RTLIL representation for module `\RS_DSP1'.
Generating RTLIL representation for module `\RS_DSP2'.
Generating RTLIL representation for module `\RS_DSP2_MULT'.
Generating RTLIL representation for module `\RS_DSP2_MULT_REGIN'.
Generating RTLIL representation for module `\RS_DSP2_MULT_REGOUT'.
Generating RTLIL representation for module `\RS_DSP2_MULT_REGIN_REGOUT'.
Generating RTLIL representation for module `\RS_DSP2_MULTADD'.
Generating RTLIL representation for module `\RS_DSP2_MULTADD_REGIN'.
Generating RTLIL representation for module `\RS_DSP2_MULTADD_REGOUT'.
Generating RTLIL representation for module `\RS_DSP2_MULTADD_REGIN_REGOUT'.
Generating RTLIL representation for module `\RS_DSP2_MULTACC'.
Generating RTLIL representation for module `\RS_DSP2_MULTACC_REGIN'.
Generating RTLIL representation for module `\RS_DSP2_MULTACC_REGOUT'.
Generating RTLIL representation for module `\RS_DSP2_MULTACC_REGIN_REGOUT'.
Generating RTLIL representation for module `\dsp_t1_20x18x64_cfg_ports'.
Generating RTLIL representation for module `\dsp_t1_10x9x32_cfg_ports'.
Generating RTLIL representation for module `\dsp_t1_sim_cfg_ports'.
Generating RTLIL representation for module `\RS_DSP3'.
Generating RTLIL representation for module `\RS_DSP3_MULT'.
Generating RTLIL representation for module `\RS_DSP3_MULT_REGIN'.
Generating RTLIL representation for module `\RS_DSP3_MULT_REGOUT'.
Generating RTLIL representation for module `\RS_DSP3_MULT_REGIN_REGOUT'.
Generating RTLIL representation for module `\RS_DSP3_MULTADD'.
Generating RTLIL representation for module `\RS_DSP3_MULTADD_REGIN'.
Generating RTLIL representation for module `\RS_DSP3_MULTADD_REGOUT'.
Generating RTLIL representation for module `\RS_DSP3_MULTADD_REGIN_REGOUT'.
Generating RTLIL representation for module `\RS_DSP3_MULTACC'.
Generating RTLIL representation for module `\RS_DSP3_MULTACC_REGIN'.
Generating RTLIL representation for module `\RS_DSP3_MULTACC_REGOUT'.
Generating RTLIL representation for module `\RS_DSP3_MULTACC_REGIN_REGOUT'.
Generating RTLIL representation for module `\dsp_t1_20x18x64_cfg_params'.
Generating RTLIL representation for module `\dsp_t1_10x9x32_cfg_params'.
Generating RTLIL representation for module `\dsp_t1_sim_cfg_params'.
Successfully finished Verilog frontend.

yosys> hierarchy -check -top b14

3.4. Executing HIERARCHY pass (managing design hierarchy).
VERIFIC-INFO [VHDL-1067] b14.vhd:1: processing 'b14(BEHAV)'
VERIFIC-INFO [VHDL-1172] b14.vhd:478: 'others' clause is never selected
Importing module b14.

3.4.1. Analyzing design hierarchy..
Top module:  \b14

3.4.2. Analyzing design hierarchy..
Top module:  \b14
Removed 0 unused modules.

yosys> proc

3.5. Executing PROC pass (convert processes to netlists).

yosys> proc_clean

3.5.1. Executing PROC_CLEAN pass (remove empty switches from decision trees).
Cleaned up 0 empty switches.

yosys> proc_rmdead

3.5.2. Executing PROC_RMDEAD pass (remove dead branches from decision trees).
Removed a total of 0 dead cases.

yosys> proc_prune

3.5.3. Executing PROC_PRUNE pass (remove redundant assignments in processes).
Removed 0 redundant assignments.
Promoted 0 assignments to connections.

yosys> proc_init

3.5.4. Executing PROC_INIT pass (extract init attributes).

yosys> proc_arst

3.5.5. Executing PROC_ARST pass (detect async resets in processes).

yosys> proc_rom

3.5.6. Executing PROC_ROM pass (convert switches to ROMs).
Converted 0 switches.

yosys> proc_mux

3.5.7. Executing PROC_MUX pass (convert decision trees to multiplexers).

yosys> proc_dlatch

3.5.8. Executing PROC_DLATCH pass (convert process syncs to latches).

yosys> proc_dff

3.5.9. Executing PROC_DFF pass (convert process syncs to FFs).

yosys> proc_memwr

3.5.10. Executing PROC_MEMWR pass (convert process memory writes to cells).

yosys> proc_clean

3.5.11. Executing PROC_CLEAN pass (remove empty switches from decision trees).
Cleaned up 0 empty switches.

yosys> opt_expr -keepdc

3.5.12. Executing OPT_EXPR pass (perform const folding).
Optimizing module b14.
<suppressed ~26 debug messages>

yosys> bmuxmap

3.6. Executing BMUXMAP pass.

yosys> demuxmap

3.7. Executing DEMUXMAP pass.

yosys> clean_zerowidth

yosys> flatten

3.8. Executing FLATTEN pass (flatten design).

yosys> bmuxmap

3.9. Executing BMUXMAP pass.

yosys> demuxmap

3.10. Executing DEMUXMAP pass.

yosys> clean_zerowidth

yosys> tribuf -logic -formal

3.11. Executing TRIBUF pass.

yosys> deminout

3.12. Executing DEMINOUT pass (demote inout ports to input or output).

yosys> opt_expr

3.13. Executing OPT_EXPR pass (perform const folding).
Optimizing module b14.
<suppressed ~62 debug messages>

yosys> opt_clean

3.14. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \b14..
Removed 13 unused cells and 211 unused wires.
<suppressed ~60 debug messages>

yosys> check

3.15. Executing CHECK pass (checking for obvious problems).
Checking module b14...
Found and reported 0 problems.

yosys> opt_expr

3.16. Executing OPT_EXPR pass (perform const folding).
Optimizing module b14.
<suppressed ~1 debug messages>

yosys> opt_merge -nomux

3.17. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\b14'.
Removed a total of 0 cells.

yosys> opt_muxtree

3.18. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \b14..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
    dead port 2/2 on $mux $verific$i684$b14.vhd:501$461.
    dead port 2/2 on $mux $verific$mux_672$b14.vhd:501$452.
    dead port 2/2 on $mux $verific$mux_685$b14.vhd:501$463.
Removed 3 multiplexer ports.
<suppressed ~24 debug messages>

yosys> opt_reduce

3.19. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \b14.
    New ctrl vector for $pmux cell $verific$select_746$b14.vhd:486$414: { $verific$n2255$45 $auto$opt_reduce.cc:134:opt_pmux$716 }
    New ctrl vector for $pmux cell $verific$select_750$b14.vhd:486$355: { $verific$n2256$46 $auto$opt_reduce.cc:134:opt_pmux$718 }
    New ctrl vector for $pmux cell $verific$select_751$b14.vhd:486$432: { $verific$n2257$47 $auto$opt_reduce.cc:134:opt_pmux$720 }
    New ctrl vector for $pmux cell $verific$select_752$b14.vhd:486$433: { $verific$n2258$48 $auto$opt_reduce.cc:134:opt_pmux$722 }
  Optimizing cells in module \b14.
Performed a total of 4 changes.

yosys> opt_merge

3.20. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\b14'.
<suppressed ~12 debug messages>
Removed a total of 4 cells.

yosys> opt_share

3.21. Executing OPT_SHARE pass.
    Found cells that share an operand and can be merged by moving the $mux $auto$bmuxmap.cc:60:execute$506 in front of them:
        $verific$add_664$b14.vhd:494$444
        $verific$add_662$b14.vhd:493$442

    Found cells that share an operand and can be merged by moving the $mux $auto$bmuxmap.cc:60:execute$676 in front of them:
        $verific$i102$b14.vhd:169$380
        $verific$i98$b14.vhd:164$379

    Found cells that share an operand and can be merged by moving the $mux $auto$bmuxmap.cc:60:execute$677 in front of them:
        $verific$i109$b14.vhd:179$382
        $verific$i105$b14.vhd:174$381

    Found cells that share an operand and can be merged by moving the $mux $auto$bmuxmap.cc:60:execute$678 in front of them:
        $verific$i116$b14.vhd:189$384
        $verific$i113$b14.vhd:184$383

    Found cells that share an operand and can be merged by moving the $mux $auto$bmuxmap.cc:60:execute$679 in front of them:
        $verific$i131$b14.vhd:205$386
        $verific$i123$b14.vhd:197$385


yosys> opt_dff -nosdff -nodffe

3.22. Executing OPT_DFF pass (perform DFF optimizations).
Changing const-value async load to async reset on $verific$wr_reg$b14.vhd:505$498 ($aldff) from module b14.
Changing const-value async load to async reset on $verific$state_reg$b14.vhd:505$500 ($aldff) from module b14.
Changing const-value async load to async reset on $verific$reg3_reg$b14.vhd:505$495 ($aldff) from module b14.
Changing const-value async load to async reset on $verific$reg2_reg$b14.vhd:505$494 ($aldff) from module b14.
Changing const-value async load to async reset on $verific$reg1_reg$b14.vhd:505$493 ($aldff) from module b14.
Changing const-value async load to async reset on $verific$reg0_reg$b14.vhd:505$492 ($aldff) from module b14.
Changing const-value async load to async reset on $verific$rd_reg$b14.vhd:505$497 ($aldff) from module b14.
Changing const-value async load to async reset on $verific$datao_reg$b14.vhd:505$499 ($aldff) from module b14.
Changing const-value async load to async reset on $verific$d_reg$b14.vhd:505$490 ($aldff) from module b14.
Changing const-value async load to async reset on $verific$addr_reg$b14.vhd:505$496 ($aldff) from module b14.
Changing const-value async load to async reset on $verific$IR_reg$b14.vhd:505$489 ($aldff) from module b14.
Changing const-value async load to async reset on $verific$B_reg$b14.vhd:505$491 ($aldff) from module b14.

yosys> opt_clean

3.23. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \b14..
Removed 0 unused cells and 15 unused wires.
<suppressed ~1 debug messages>

yosys> opt_expr

3.24. Executing OPT_EXPR pass (perform const folding).
Optimizing module b14.
<suppressed ~9 debug messages>

yosys> opt_muxtree

3.25. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \b14..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Removed 0 multiplexer ports.
<suppressed ~29 debug messages>

yosys> opt_reduce

3.26. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \b14.
Performed a total of 0 changes.

yosys> opt_merge

3.27. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\b14'.
<suppressed ~12 debug messages>
Removed a total of 4 cells.

yosys> opt_share

3.28. Executing OPT_SHARE pass.
    Found cells that share an operand and can be merged by moving the $mux $auto$bmuxmap.cc:60:execute$683 in front of them:
        $verific$i109$b14.vhd:179$382
        $verific$i102$b14.vhd:169$380

    Found cells that share an operand and can be merged by moving the $mux $auto$bmuxmap.cc:60:execute$684 in front of them:
        $verific$i131$b14.vhd:205$386
        $verific$i116$b14.vhd:189$384


yosys> opt_dff -nosdff -nodffe

3.29. Executing OPT_DFF pass (perform DFF optimizations).

yosys> opt_clean

3.30. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \b14..
Removed 0 unused cells and 9 unused wires.
<suppressed ~1 debug messages>

yosys> opt_expr

3.31. Executing OPT_EXPR pass (perform const folding).
Optimizing module b14.
<suppressed ~2 debug messages>

yosys> opt_muxtree

3.32. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \b14..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Removed 0 multiplexer ports.
<suppressed ~31 debug messages>

yosys> opt_reduce

3.33. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \b14.
Performed a total of 0 changes.

yosys> opt_merge

3.34. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\b14'.
<suppressed ~6 debug messages>
Removed a total of 2 cells.

yosys> opt_share

3.35. Executing OPT_SHARE pass.
    Found cells that share an operand and can be merged by moving the $mux $auto$bmuxmap.cc:60:execute$687 in front of them:
        $verific$i131$b14.vhd:205$386
        $verific$i109$b14.vhd:179$382


yosys> opt_dff -nosdff -nodffe

3.36. Executing OPT_DFF pass (perform DFF optimizations).

yosys> opt_clean

3.37. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \b14..
Removed 0 unused cells and 4 unused wires.
<suppressed ~1 debug messages>

yosys> opt_expr

3.38. Executing OPT_EXPR pass (perform const folding).
Optimizing module b14.
<suppressed ~1 debug messages>

yosys> opt_muxtree

3.39. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \b14..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Removed 0 multiplexer ports.
<suppressed ~28 debug messages>

yosys> opt_reduce

3.40. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \b14.
Performed a total of 0 changes.

yosys> opt_merge

3.41. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\b14'.
<suppressed ~3 debug messages>
Removed a total of 1 cells.

yosys> opt_share

3.42. Executing OPT_SHARE pass.

yosys> opt_dff -nosdff -nodffe

3.43. Executing OPT_DFF pass (perform DFF optimizations).

yosys> opt_clean

3.44. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \b14..
Removed 0 unused cells and 2 unused wires.
<suppressed ~1 debug messages>

yosys> opt_expr

3.45. Executing OPT_EXPR pass (perform const folding).
Optimizing module b14.
MAX OPT ITERATION = 4

yosys> fsm -encoding binary

3.46. Executing FSM pass (extract and optimize FSM).

yosys> fsm_detect

3.46.1. Executing FSM_DETECT pass (finding FSMs in design).
Found FSM state register b14.d.

yosys> fsm_extract

3.46.2. Executing FSM_EXTRACT pass (extracting FSM from design).
Extracting FSM `\d' from module `\b14'.
  found $adff cell for state register: $verific$d_reg$b14.vhd:505$490
  root of input selection tree: $verific$n11472$295
  found reset state: 0 (from async reset)
  found ctrl input: \state
  found ctrl input: $verific$n341$141 [0]
  found ctrl input: $verific$n10346$112
  found ctrl input: $verific$n1405$39
  found ctrl input: $verific$n1440$40
  found ctrl input: $verific$n1474$41
  found ctrl input: $verific$n1475$42
  found ctrl input: $verific$n1476$43
  found ctrl input: $verific$n1477$44
  found state code: 1
  found state code: 2
  found state code: 3
  found ctrl input: \B
  ctrl inputs: { $verific$n341$141 [0] $verific$n10346$112 $verific$n1477$44 $verific$n1476$43 $verific$n1475$42 $verific$n1474$41 $verific$n1440$40 $verific$n1405$39 \state \B }
  ctrl outputs: $verific$n11472$295
  transition:          0 10'--------0- ->          0 0
  transition:          0 10'000000001- ->          0 0
  transition:          0 10'001000001- ->          0 0
  transition:          0 10'00-100001- ->          1 1
  transition:          0 10'00--10001- ->          2 2
  transition:          0 10'00---1001- ->          3 3
  transition:          0 10'00----1010 ->          0 0
  transition:          0 10'00----1011 ->          3 3
  transition:          0 10'00-----110 ->          3 3
  transition:          0 10'00-----111 ->          0 0
  transition:          0 10'01------1- ->          0 0
  transition:          0 10'1-------1- ->          0 0
  transition:          2 10'--------0- ->          2 2
  transition:          2 10'000000001- ->          2 2
  transition:          2 10'001000001- ->          0 0
  transition:          2 10'00-100001- ->          1 1
  transition:          2 10'00--10001- ->          2 2
  transition:          2 10'00---1001- ->          3 3
  transition:          2 10'00----1010 ->          2 2
  transition:          2 10'00----1011 ->          3 3
  transition:          2 10'00-----110 ->          3 3
  transition:          2 10'00-----111 ->          2 2
  transition:          2 10'01------1- ->          2 2
  transition:          2 10'1-------1- ->          2 2
  transition:          1 10'--------0- ->          1 1
  transition:          1 10'000000001- ->          1 1
  transition:          1 10'001000001- ->          0 0
  transition:          1 10'00-100001- ->          1 1
  transition:          1 10'00--10001- ->          2 2
  transition:          1 10'00---1001- ->          3 3
  transition:          1 10'00----1010 ->          1 1
  transition:          1 10'00----1011 ->          3 3
  transition:          1 10'00-----110 ->          3 3
  transition:          1 10'00-----111 ->          1 1
  transition:          1 10'01------1- ->          1 1
  transition:          1 10'1-------1- ->          1 1
  transition:          3 10'--------0- ->          3 3
  transition:          3 10'000000001- ->          3 3
  transition:          3 10'001000001- ->          0 0
  transition:          3 10'00-100001- ->          1 1
  transition:          3 10'00--10001- ->          2 2
  transition:          3 10'00---1001- ->          3 3
  transition:          3 10'00----1010 ->          3 3
  transition:          3 10'00----1011 ->          3 3
  transition:          3 10'00-----110 ->          3 3
  transition:          3 10'00-----111 ->          3 3
  transition:          3 10'01------1- ->          3 3
  transition:          3 10'1-------1- ->          3 3

yosys> fsm_opt

3.46.3. Executing FSM_OPT pass (simple optimizations of FSMs).
Optimizing FSM `$fsm$\d$747' from module `\b14'.
  Merging pattern 10'000000001- and 10'001000001- from group (0 0 0).
  Merging pattern 10'001000001- and 10'000000001- from group (0 0 0).
  Merging pattern 10'00----1010 and 10'00----1011 from group (3 3 3).
  Merging pattern 10'00-----110 and 10'00-----111 from group (3 3 3).
  Merging pattern 10'00----1011 and 10'00----1010 from group (3 3 3).
  Merging pattern 10'00-----111 and 10'00-----110 from group (3 3 3).

yosys> opt_clean

3.46.4. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \b14..
Removed 3 unused cells and 3 unused wires.
<suppressed ~4 debug messages>

yosys> fsm_opt

3.46.5. Executing FSM_OPT pass (simple optimizations of FSMs).
Optimizing FSM `$fsm$\d$747' from module `\b14'.

yosys> fsm_recode -encoding binary

3.46.6. Executing FSM_RECODE pass (re-assigning FSM state encoding).
Recoding FSM `$fsm$\d$747' from module `\b14' using `auto' encoding:
  mapping auto encoding to `binary` for this FSM.
  00000000000000000000000000000000 -> 00
  00000000000000000000000000000010 -> 01
  00000000000000000000000000000001 -> 10
  00000000000000000000000000000011 -> 11

yosys> fsm_info

3.46.7. Executing FSM_INFO pass (dumping all available information on FSM cells).

FSM `$fsm$\d$747' from module `b14':
-------------------------------------

  Information on FSM $fsm$\d$747 (\d):

  Number of input signals:   10
  Number of output signals:  32
  Number of state bits:       2

  Input signals:
    0: \B
    1: \state
    2: $verific$n1405$39
    3: $verific$n1440$40
    4: $verific$n1474$41
    5: $verific$n1475$42
    6: $verific$n1476$43
    7: $verific$n1477$44
    8: $verific$n10346$112
    9: $verific$n341$141 [0]

  Output signals:
    0: $verific$n11472$295 [0]
    1: $verific$n11472$295 [1]
    2: $verific$n11472$295 [2]
    3: $verific$n11472$295 [3]
    4: $verific$n11472$295 [4]
    5: $verific$n11472$295 [5]
    6: $verific$n11472$295 [6]
    7: $verific$n11472$295 [7]
    8: $verific$n11472$295 [8]
    9: $verific$n11472$295 [9]
   10: $verific$n11472$295 [10]
   11: $verific$n11472$295 [11]
   12: $verific$n11472$295 [12]
   13: $verific$n11472$295 [13]
   14: $verific$n11472$295 [14]
   15: $verific$n11472$295 [15]
   16: $verific$n11472$295 [16]
   17: $verific$n11472$295 [17]
   18: $verific$n11472$295 [18]
   19: $verific$n11472$295 [19]
   20: $verific$n11472$295 [20]
   21: $verific$n11472$295 [21]
   22: $verific$n11472$295 [22]
   23: $verific$n11472$295 [23]
   24: $verific$n11472$295 [24]
   25: $verific$n11472$295 [25]
   26: $verific$n11472$295 [26]
   27: $verific$n11472$295 [27]
   28: $verific$n11472$295 [28]
   29: $verific$n11472$295 [29]
   30: $verific$n11472$295 [30]
   31: $verific$n11472$295 [31]

  State encoding:
    0:       2'00  <RESET STATE>
    1:       2'01
    2:       2'10
    3:       2'11

  Transition Table (state_in, ctrl_in, state_out, ctrl_out):
      0:     0 10'00----1010   ->     0 0
      1:     0 10'00-----111   ->     0 0
      2:     0 10'--------0-   ->     0 0
      3:     0 10'00-000001-   ->     0 0
      4:     0 10'01------1-   ->     0 0
      5:     0 10'1-------1-   ->     0 0
      6:     0 10'00--10001-   ->     1 2
      7:     0 10'00-100001-   ->     2 1
      8:     0 10'00-----110   ->     3 3
      9:     0 10'00----1011   ->     3 3
     10:     0 10'00---1001-   ->     3 3
     11:     1 10'001000001-   ->     0 0
     12:     1 10'00----1010   ->     1 2
     13:     1 10'00-----111   ->     1 2
     14:     1 10'--------0-   ->     1 2
     15:     1 10'000000001-   ->     1 2
     16:     1 10'00--10001-   ->     1 2
     17:     1 10'01------1-   ->     1 2
     18:     1 10'1-------1-   ->     1 2
     19:     1 10'00-100001-   ->     2 1
     20:     1 10'00-----110   ->     3 3
     21:     1 10'00----1011   ->     3 3
     22:     1 10'00---1001-   ->     3 3
     23:     2 10'001000001-   ->     0 0
     24:     2 10'00--10001-   ->     1 2
     25:     2 10'00----1010   ->     2 1
     26:     2 10'00-----111   ->     2 1
     27:     2 10'--------0-   ->     2 1
     28:     2 10'000000001-   ->     2 1
     29:     2 10'00-100001-   ->     2 1
     30:     2 10'01------1-   ->     2 1
     31:     2 10'1-------1-   ->     2 1
     32:     2 10'00-----110   ->     3 3
     33:     2 10'00----1011   ->     3 3
     34:     2 10'00---1001-   ->     3 3
     35:     3 10'001000001-   ->     0 0
     36:     3 10'00--10001-   ->     1 2
     37:     3 10'00-100001-   ->     2 1
     38:     3 10'--------0-   ->     3 3
     39:     3 10'000000001-   ->     3 3
     40:     3 10'00---1001-   ->     3 3
     41:     3 10'00----101-   ->     3 3
     42:     3 10'00-----11-   ->     3 3
     43:     3 10'01------1-   ->     3 3
     44:     3 10'1-------1-   ->     3 3

-------------------------------------

yosys> fsm_map

3.46.8. Executing FSM_MAP pass (mapping FSMs to basic logic).
Mapping FSM `$fsm$\d$747' from module `\b14'.

yosys> opt_expr

3.47. Executing OPT_EXPR pass (perform const folding).
Optimizing module b14.
<suppressed ~7 debug messages>

yosys> opt_merge -nomux

3.48. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\b14'.
<suppressed ~162 debug messages>
Removed a total of 54 cells.

yosys> opt_muxtree

3.49. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \b14..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Removed 0 multiplexer ports.
<suppressed ~26 debug messages>

yosys> opt_reduce

3.50. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \b14.
Performed a total of 0 changes.

yosys> opt_merge

3.51. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\b14'.
Removed a total of 0 cells.

yosys> opt_share

3.52. Executing OPT_SHARE pass.

yosys> opt_dff -nosdff -sat

3.53. Executing OPT_DFF pass (perform DFF optimizations).
Adding EN signal on $verific$reg3_reg$b14.vhd:505$495 ($adff) from module b14 (D = $verific$n11178$290 [31:3], Q = \reg3 [31:3]).
Adding EN signal on $verific$reg3_reg$b14.vhd:505$495 ($adff) from module b14 (D = $auto$bmuxmap.cc:58:execute$545 [2:0], Q = \reg3 [2:0]).
Adding EN signal on $verific$reg2_reg$b14.vhd:505$494 ($adff) from module b14 (D = $auto$bmuxmap.cc:58:execute$564, Q = \reg2).
Adding EN signal on $verific$reg1_reg$b14.vhd:505$493 ($adff) from module b14 (D = $auto$bmuxmap.cc:58:execute$583, Q = \reg1).
Adding EN signal on $verific$reg0_reg$b14.vhd:505$492 ($adff) from module b14 (D = $auto$bmuxmap.cc:58:execute$602, Q = \reg0).
Adding EN signal on $verific$datao_reg$b14.vhd:505$499 ($adff) from module b14 (D = { $auto$bmuxmap.cc:58:execute$708 [31:29] $auto$bmuxmap.cc:58:execute$661 [124:96] }, Q = \datao).
Adding EN signal on $verific$addr_reg$b14.vhd:505$496 ($adff) from module b14 (D = $verific$n11246$292, Q = \addr).
Adding EN signal on $verific$B_reg$b14.vhd:505$491 ($adff) from module b14 (D = $verific$n10979$120, Q = \B).

yosys> opt_clean

3.54. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \b14..
Removed 24 unused cells and 76 unused wires.
<suppressed ~25 debug messages>

yosys> opt_expr

3.55. Executing OPT_EXPR pass (perform const folding).
Optimizing module b14.
<suppressed ~1 debug messages>

yosys> opt_muxtree

3.56. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \b14..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Removed 0 multiplexer ports.
<suppressed ~26 debug messages>

yosys> opt_reduce

3.57. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \b14.
Performed a total of 0 changes.

yosys> opt_merge

3.58. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\b14'.
<suppressed ~42 debug messages>
Removed a total of 14 cells.

yosys> opt_share

3.59. Executing OPT_SHARE pass.

yosys> opt_dff -nosdff -sat

3.60. Executing OPT_DFF pass (perform DFF optimizations).
Setting constant 0-bit at position 2 on $verific$d_reg$b14.vhd:505$490 ($adff) from module b14.
Setting constant 0-bit at position 3 on $verific$d_reg$b14.vhd:505$490 ($adff) from module b14.
Setting constant 0-bit at position 4 on $verific$d_reg$b14.vhd:505$490 ($adff) from module b14.
Setting constant 0-bit at position 5 on $verific$d_reg$b14.vhd:505$490 ($adff) from module b14.
Setting constant 0-bit at position 6 on $verific$d_reg$b14.vhd:505$490 ($adff) from module b14.
Setting constant 0-bit at position 7 on $verific$d_reg$b14.vhd:505$490 ($adff) from module b14.
Setting constant 0-bit at position 8 on $verific$d_reg$b14.vhd:505$490 ($adff) from module b14.
Setting constant 0-bit at position 9 on $verific$d_reg$b14.vhd:505$490 ($adff) from module b14.
Setting constant 0-bit at position 10 on $verific$d_reg$b14.vhd:505$490 ($adff) from module b14.
Setting constant 0-bit at position 11 on $verific$d_reg$b14.vhd:505$490 ($adff) from module b14.
Setting constant 0-bit at position 12 on $verific$d_reg$b14.vhd:505$490 ($adff) from module b14.
Setting constant 0-bit at position 13 on $verific$d_reg$b14.vhd:505$490 ($adff) from module b14.
Setting constant 0-bit at position 14 on $verific$d_reg$b14.vhd:505$490 ($adff) from module b14.
Setting constant 0-bit at position 15 on $verific$d_reg$b14.vhd:505$490 ($adff) from module b14.
Setting constant 0-bit at position 16 on $verific$d_reg$b14.vhd:505$490 ($adff) from module b14.
Setting constant 0-bit at position 17 on $verific$d_reg$b14.vhd:505$490 ($adff) from module b14.
Setting constant 0-bit at position 18 on $verific$d_reg$b14.vhd:505$490 ($adff) from module b14.
Setting constant 0-bit at position 19 on $verific$d_reg$b14.vhd:505$490 ($adff) from module b14.
Setting constant 0-bit at position 20 on $verific$d_reg$b14.vhd:505$490 ($adff) from module b14.
Setting constant 0-bit at position 21 on $verific$d_reg$b14.vhd:505$490 ($adff) from module b14.
Setting constant 0-bit at position 22 on $verific$d_reg$b14.vhd:505$490 ($adff) from module b14.
Setting constant 0-bit at position 23 on $verific$d_reg$b14.vhd:505$490 ($adff) from module b14.
Setting constant 0-bit at position 24 on $verific$d_reg$b14.vhd:505$490 ($adff) from module b14.
Setting constant 0-bit at position 25 on $verific$d_reg$b14.vhd:505$490 ($adff) from module b14.
Setting constant 0-bit at position 26 on $verific$d_reg$b14.vhd:505$490 ($adff) from module b14.
Setting constant 0-bit at position 27 on $verific$d_reg$b14.vhd:505$490 ($adff) from module b14.
Setting constant 0-bit at position 28 on $verific$d_reg$b14.vhd:505$490 ($adff) from module b14.
Setting constant 0-bit at position 29 on $verific$d_reg$b14.vhd:505$490 ($adff) from module b14.
Setting constant 0-bit at position 30 on $verific$d_reg$b14.vhd:505$490 ($adff) from module b14.
Setting constant 0-bit at position 31 on $verific$d_reg$b14.vhd:505$490 ($adff) from module b14.

yosys> opt_clean

3.61. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \b14..
Removed 0 unused cells and 14 unused wires.
<suppressed ~1 debug messages>

yosys> opt_expr

3.62. Executing OPT_EXPR pass (perform const folding).
Optimizing module b14.

yosys> opt_muxtree

3.63. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \b14..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Removed 0 multiplexer ports.
<suppressed ~26 debug messages>

yosys> opt_reduce

3.64. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \b14.
Performed a total of 0 changes.

yosys> opt_merge

3.65. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\b14'.
Removed a total of 0 cells.

yosys> opt_share

3.66. Executing OPT_SHARE pass.

yosys> opt_dff -nosdff -sat

3.67. Executing OPT_DFF pass (perform DFF optimizations).

yosys> opt_clean

3.68. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \b14..

yosys> opt_expr

3.69. Executing OPT_EXPR pass (perform const folding).
Optimizing module b14.
MAX OPT ITERATION = 3

yosys> wreduce -keepdc

3.70. Executing WREDUCE pass (reducing word size of cells).
Removed top 2 bits (of 5) from port B of cell b14.$auto$fsm_map.cc:77:implement_pattern_cache$924 ($eq).
Removed top 2 bits (of 6) from port B of cell b14.$auto$fsm_map.cc:77:implement_pattern_cache$926 ($eq).
Removed top 2 bits (of 5) from port B of cell b14.$auto$fsm_map.cc:77:implement_pattern_cache$928 ($eq).
Removed top 8 bits (of 9) from port B of cell b14.$auto$fsm_map.cc:77:implement_pattern_cache$938 ($eq).
Removed top 2 bits (of 7) from port B of cell b14.$auto$fsm_map.cc:77:implement_pattern_cache$944 ($eq).
Removed top 2 bits (of 6) from port B of cell b14.$auto$fsm_map.cc:77:implement_pattern_cache$946 ($eq).
Removed top 2 bits (of 5) from port B of cell b14.$auto$fsm_map.cc:77:implement_pattern_cache$948 ($eq).
Removed top 2 bits (of 4) from port B of cell b14.$auto$fsm_map.cc:77:implement_pattern_cache$952 ($eq).
Removed top 1 bits (of 3) from port B of cell b14.$auto$fsm_map.cc:77:implement_pattern_cache$956 ($eq).
Removed top 1 bits (of 9) from port B of cell b14.$auto$opt_dff.cc:195:make_patterns_logic$1050 ($ne).
Removed top 8 bits (of 9) from port B of cell b14.$auto$opt_dff.cc:195:make_patterns_logic$1048 ($ne).
Removed top 3 bits (of 9) from port B of cell b14.$auto$opt_dff.cc:195:make_patterns_logic$1054 ($ne).
Removed top 2 bits (of 9) from port B of cell b14.$auto$opt_dff.cc:195:make_patterns_logic$1052 ($ne).
Removed top 3 bits (of 4) from port B of cell b14.$auto$opt_dff.cc:195:make_patterns_logic$1009 ($ne).
Removed top 2 bits (of 6) from port B of cell b14.$auto$fsm_map.cc:77:implement_pattern_cache$920 ($eq).
Removed top 3 bits (of 29) from FF cell b14.$auto$ff.cc:262:slice$968 ($adffe).
Removed top 2 bits (of 8) from port B of cell b14.$auto$fsm_map.cc:77:implement_pattern_cache$895 ($eq).
Removed top 1 bits (of 5) from port B of cell b14.$auto$opt_dff.cc:195:make_patterns_logic$1072 ($ne).
Removed top 1 bits (of 32) from port A of cell b14.$verific$LessThan_14$b14.vhd:83$312 ($lt).
Removed top 1 bits (of 33) from port Y of cell b14.$verific$unary_minus_15$b14.vhd:84$313 ($neg).
Removed top 1 bits (of 33) from port A of cell b14.$verific$unary_minus_15$b14.vhd:84$313 ($neg).
Removed top 3 bits (of 5) from port Y of cell b14.$verific$add_21$b14.vhd:86$319 ($add).
Removed top 3 bits (of 5) from port A of cell b14.$verific$add_21$b14.vhd:86$319 ($add).
Removed top 5 bits (of 8) from port Y of cell b14.$verific$add_26$b14.vhd:88$326 ($add).
Removed top 5 bits (of 8) from port A of cell b14.$verific$add_26$b14.vhd:88$326 ($add).
Removed top 1 bits (of 2) from port B of cell b14.$auto$opt_dff.cc:195:make_patterns_logic$1091 ($ne).
Removed top 9 bits (of 13) from port Y of cell b14.$verific$add_31$b14.vhd:90$333 ($add).
Removed top 9 bits (of 13) from port A of cell b14.$verific$add_31$b14.vhd:90$333 ($add).
Removed top 8 bits (of 9) from port Y of cell b14.$verific$add_36$b14.vhd:92$340 ($add).
Removed top 8 bits (of 9) from port A of cell b14.$verific$add_36$b14.vhd:92$340 ($add).
Removed top 2 bits (of 9) from port B of cell b14.$auto$opt_dff.cc:195:make_patterns_logic$1070 ($ne).
Removed top 25 bits (of 26) from port B of cell b14.$verific$add_39$b14.vhd:95$346 ($add).
Removed top 1 bits (of 3) from port Y of cell b14.$verific$add_44$b14.vhd:96$350 ($add).
Removed top 1 bits (of 3) from port A of cell b14.$verific$add_44$b14.vhd:96$350 ($add).
Removed top 1 bits (of 4) from port B of cell b14.$auto$opt_dff.cc:195:make_patterns_logic$1087 ($ne).
Removed top 12 bits (of 32) from port A of cell b14.$verific$add_56$b14.vhd:110$358 ($add).
Removed top 12 bits (of 32) from port Y of cell b14.$verific$add_56$b14.vhd:110$358 ($add).
Removed top 12 bits (of 32) from port B of cell b14.$verific$add_56$b14.vhd:110$358 ($add).
Removed top 12 bits (of 32) from port A of cell b14.$verific$add_61$b14.vhd:113$360 ($add).
Removed top 12 bits (of 32) from port Y of cell b14.$verific$add_61$b14.vhd:113$360 ($add).
Removed top 12 bits (of 32) from port B of cell b14.$verific$add_61$b14.vhd:113$360 ($add).
Removed top 1 bits (of 32) from port B of cell b14.$verific$LessThan_83$b14.vhd:148$372 ($lt).
Removed top 2 bits (of 33) from port B of cell b14.$verific$sub_84$b14.vhd:149$373 ($sub).
Removed top 1 bits (of 33) from port Y of cell b14.$verific$sub_84$b14.vhd:149$373 ($sub).
Removed top 1 bits (of 33) from port A of cell b14.$verific$sub_84$b14.vhd:149$373 ($sub).
Removed top 1 bits (of 9) from port B of cell b14.$auto$opt_dff.cc:195:make_patterns_logic$1068 ($ne).
Removed top 30 bits (of 32) from mux cell b14.$verific$mux_138$b14.vhd:216$391 ($mux).
Removed top 30 bits (of 32) from mux cell b14.$verific$mux_140$b14.vhd:220$393 ($mux).
Removed top 1 bits (of 3) from port A of cell b14.$verific$equal_141$b14.vhd:221$394 ($eq).
Removed top 1 bits (of 3) from port A of cell b14.$verific$equal_142$b14.vhd:223$395 ($eq).
Removed top 2 bits (of 3) from port A of cell b14.$verific$equal_143$b14.vhd:224$396 ($eq).
Removed top 30 bits (of 32) from mux cell b14.$verific$mux_145$b14.vhd:226$398 ($mux).
Removed top 30 bits (of 32) from mux cell b14.$verific$mux_146$b14.vhd:226$399 ($mux).
Removed top 30 bits (of 32) from mux cell b14.$verific$mux_147$b14.vhd:226$400 ($mux).
Removed top 30 bits (of 32) from mux cell b14.$verific$mux_148$b14.vhd:226$401 ($mux).
Removed top 30 bits (of 32) from mux cell b14.$verific$mux_149$b14.vhd:226$402 ($mux).
Removed top 30 bits (of 32) from mux cell b14.$verific$mux_150$b14.vhd:226$403 ($mux).
Removed top 32 bits (of 33) from port A of cell b14.$verific$sub_168$b14.vhd:243$404 ($sub).
Removed top 1 bits (of 33) from port Y of cell b14.$verific$sub_168$b14.vhd:243$404 ($sub).
Removed top 1 bits (of 33) from port B of cell b14.$verific$sub_168$b14.vhd:243$404 ($sub).
Removed top 31 bits (of 32) from port A of cell b14.$verific$equal_177$b14.vhd:244$407 ($eq).
Removed top 30 bits (of 32) from port B of cell b14.$verific$equal_177$b14.vhd:244$407 ($eq).
Removed top 30 bits (of 32) from port A of cell b14.$verific$equal_178$b14.vhd:245$408 ($eq).
Removed top 30 bits (of 32) from port B of cell b14.$verific$equal_178$b14.vhd:245$408 ($eq).
Removed top 30 bits (of 32) from port A of cell b14.$verific$equal_179$b14.vhd:246$409 ($eq).
Removed top 30 bits (of 32) from port B of cell b14.$verific$equal_179$b14.vhd:246$409 ($eq).
Removed top 2 bits (of 32) from port Y of cell b14.$verific$add_283$b14.vhd:318$415 ($add).
Removed top 2 bits (of 32) from port A of cell b14.$verific$add_283$b14.vhd:318$415 ($add).
Removed top 2 bits (of 32) from port B of cell b14.$verific$add_283$b14.vhd:318$415 ($add).
Removed top 3 bits (of 33) from port Y of cell b14.$verific$sub_365$b14.vhd:358$417 ($sub).
Removed top 3 bits (of 33) from port A of cell b14.$verific$sub_365$b14.vhd:358$417 ($sub).
Removed top 3 bits (of 33) from port B of cell b14.$verific$sub_365$b14.vhd:358$417 ($sub).
Removed top 1 bits (of 8) from port B of cell b14.$auto$opt_dff.cc:195:make_patterns_logic$1079 ($ne).
Removed top 1 bits (of 5) from port B of cell b14.$auto$opt_dff.cc:195:make_patterns_logic$1085 ($ne).
Removed top 1 bits (of 6) from port B of cell b14.$auto$opt_dff.cc:195:make_patterns_logic$1083 ($ne).
Removed top 1 bits (of 7) from port B of cell b14.$auto$opt_dff.cc:195:make_patterns_logic$1081 ($ne).
Removed top 1 bits (of 2) from port B of cell b14.$auto$fsm_map.cc:215:map_fsm$753 ($eq).
Removed top 3 bits (of 9) from port B of cell b14.$auto$opt_dff.cc:195:make_patterns_logic$1066 ($ne).
Removed top 3 bits (of 32) from mux cell b14.$verific$mux_698$b14.vhd:502$473 ($mux).
Removed top 2 bits (of 9) from port B of cell b14.$auto$opt_dff.cc:195:make_patterns_logic$1064 ($ne).
Removed top 20 bits (of 21) from mux cell b14.$auto$bmuxmap.cc:60:execute$508 ($mux).
Removed top 2 bits (of 32) from mux cell b14.$auto$bmuxmap.cc:60:execute$533 ($mux).
Removed top 2 bits (of 32) from mux cell b14.$auto$bmuxmap.cc:60:execute$539 ($mux).
Removed top 1 bits (of 9) from port B of cell b14.$auto$opt_dff.cc:195:make_patterns_logic$1062 ($ne).
Removed top 4 bits (of 9) from port B of cell b14.$auto$opt_dff.cc:195:make_patterns_logic$1060 ($ne).
Removed top 2 bits (of 9) from port B of cell b14.$auto$opt_dff.cc:195:make_patterns_logic$1058 ($ne).
Removed top 1 bits (of 9) from port B of cell b14.$auto$opt_dff.cc:195:make_patterns_logic$1056 ($ne).
Removed top 20 bits (of 21) from port Y of cell b14.$verific$add_664$b14.vhd:494$444 ($add).
Removed top 19 bits (of 20) from port A of cell b14.$verific$add_664$b14.vhd:494$444 ($add).
Removed top 19 bits (of 20) from port B of cell b14.$verific$add_664$b14.vhd:494$444 ($add).
Removed top 3 bits (of 32) from mux cell b14.$verific$mux_679$b14.vhd:501$459 ($mux).
Removed top 3 bits (of 32) from mux cell b14.$auto$bmuxmap.cc:60:execute$546 ($mux).
Removed top 19 bits (of 20) from mux cell b14.$auto$opt_share.cc:241:merge_operators$724 ($mux).
Removed top 3 bits (of 32) from mux cell b14.$auto$bmuxmap.cc:60:execute$543 ($mux).
Removed top 3 bits (of 32) from mux cell b14.$auto$bmuxmap.cc:60:execute$544 ($mux).
Removed top 1 bits (of 30) from mux cell b14.$auto$bmuxmap.cc:60:execute$533 ($mux).
Removed top 3 bits (of 32) from mux cell b14.$auto$bmuxmap.cc:60:execute$538 ($mux).
Removed top 1 bits (of 30) from mux cell b14.$auto$bmuxmap.cc:60:execute$539 ($mux).
Removed top 3 bits (of 32) from mux cell b14.$auto$bmuxmap.cc:60:execute$541 ($mux).
Removed top 3 bits (of 32) from mux cell b14.$auto$bmuxmap.cc:60:execute$529 ($mux).
Removed top 3 bits (of 32) from mux cell b14.$auto$bmuxmap.cc:60:execute$535 ($mux).
Removed top 2 bits (of 155) from mux cell b14.$verific$select_752$b14.vhd:486$433 ($pmux).
Removed top 20 bits (of 42) from wire b14.$auto$bmuxmap.cc:58:execute$504.
Removed top 20 bits (of 21) from wire b14.$auto$bmuxmap.cc:58:execute$507.
Removed top 2 bits (of 256) from wire b14.$auto$bmuxmap.cc:58:execute$528.
Removed top 3 bits (of 128) from wire b14.$auto$bmuxmap.cc:58:execute$537.
Removed top 3 bits (of 64) from wire b14.$auto$bmuxmap.cc:58:execute$542.
Removed top 3 bits (of 32) from wire b14.$auto$bmuxmap.cc:58:execute$545.
Removed top 2 bits (of 8) from wire b14.$auto$bmuxmap.cc:58:execute$623.
Removed top 1 bits (of 126) from wire b14.$auto$bmuxmap.cc:58:execute$661.
Removed top 2 bits (of 4) from wire b14.$auto$bmuxmap.cc:58:execute$680.
Removed top 21 bits (of 40) from wire b14.$auto$bmuxmap.cc:58:execute$695.
Removed top 19 bits (of 20) from wire b14.$auto$rtlil.cc:2466:Mux$725.
Removed top 30 bits (of 32) from wire b14.$verific$n1407$163.
Removed top 30 bits (of 32) from wire b14.$verific$n1441$164.
Removed top 30 bits (of 32) from wire b14.$verific$n1478$165.
Removed top 30 bits (of 32) from wire b14.$verific$n1511$166.
Removed top 30 bits (of 32) from wire b14.$verific$n1544$167.
Removed top 1 bits (of 33) from wire b14.$verific$n184$132.
Removed top 3 bits (of 5) from wire b14.$verific$n288$135.
Removed top 5 bits (of 8) from wire b14.$verific$n301$137.
Removed top 9 bits (of 13) from wire b14.$verific$n318$139.
Removed top 8 bits (of 9) from wire b14.$verific$n341$141.
Removed top 1 bits (of 3) from wire b14.$verific$n436$145.
Removed top 1 bits (of 33) from wire b14.$verific$n933$160.
Removed top 1 bits (of 2) from wire b14.d.
Removed top 3 bits (of 32) from wire b14.reg3.

yosys> peepopt

3.71. Executing PEEPOPT pass (run peephole optimizers).

yosys> opt_clean

3.72. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \b14..
Removed 0 unused cells and 35 unused wires.
<suppressed ~1 debug messages>

yosys> bmuxmap

3.73. Executing BMUXMAP pass.

yosys> demuxmap

3.74. Executing DEMUXMAP pass.

yosys> clean_zerowidth

yosys> alumacc

3.75. Executing ALUMACC pass (create $alu and $macc cells).
Extracting $alu and $macc cells in module b14:
  creating $macc model for $verific$add_21$b14.vhd:86$319 ($add).
  creating $macc model for $verific$add_26$b14.vhd:88$326 ($add).
  creating $macc model for $verific$add_283$b14.vhd:318$415 ($add).
  creating $macc model for $verific$add_31$b14.vhd:90$333 ($add).
  creating $macc model for $verific$add_36$b14.vhd:92$340 ($add).
  creating $macc model for $verific$add_39$b14.vhd:95$346 ($add).
  creating $macc model for $verific$add_44$b14.vhd:96$350 ($add).
  creating $macc model for $verific$add_56$b14.vhd:110$358 ($add).
  creating $macc model for $verific$add_570$b14.vhd:466$422 ($add).
  creating $macc model for $verific$add_61$b14.vhd:113$360 ($add).
  creating $macc model for $verific$add_664$b14.vhd:494$444 ($add).
  creating $macc model for $verific$mult_667$b14.vhd:497$448 ($mul).
  creating $macc model for $verific$sub_168$b14.vhd:243$404 ($sub).
  creating $macc model for $verific$sub_365$b14.vhd:358$417 ($sub).
  creating $macc model for $verific$sub_84$b14.vhd:149$373 ($sub).
  creating $macc model for $verific$unary_minus_15$b14.vhd:84$313 ($neg).
  creating $alu model for $macc $verific$unary_minus_15$b14.vhd:84$313.
  creating $alu model for $macc $verific$sub_84$b14.vhd:149$373.
  creating $alu model for $macc $verific$sub_365$b14.vhd:358$417.
  creating $alu model for $macc $verific$sub_168$b14.vhd:243$404.
  creating $alu model for $macc $verific$add_664$b14.vhd:494$444.
  creating $alu model for $macc $verific$add_61$b14.vhd:113$360.
  creating $alu model for $macc $verific$add_570$b14.vhd:466$422.
  creating $alu model for $macc $verific$add_56$b14.vhd:110$358.
  creating $alu model for $macc $verific$add_44$b14.vhd:96$350.
  creating $alu model for $macc $verific$add_39$b14.vhd:95$346.
  creating $alu model for $macc $verific$add_36$b14.vhd:92$340.
  creating $alu model for $macc $verific$add_31$b14.vhd:90$333.
  creating $alu model for $macc $verific$add_283$b14.vhd:318$415.
  creating $alu model for $macc $verific$add_26$b14.vhd:88$326.
  creating $alu model for $macc $verific$add_21$b14.vhd:86$319.
  creating $macc cell for $verific$mult_667$b14.vhd:497$448: $auto$alumacc.cc:365:replace_macc$1120
  creating $alu model for $verific$LessThan_14$b14.vhd:83$312 ($lt): new $alu
  creating $alu model for $verific$LessThan_68$b14.vhd:118$366 ($lt): new $alu
  creating $alu model for $verific$LessThan_78$b14.vhd:138$370 ($lt): merged with $verific$LessThan_68$b14.vhd:118$366.
  creating $alu model for $verific$LessThan_83$b14.vhd:148$372 ($lt): new $alu
  creating $alu model for $verific$LessThan_87$b14.vhd:151$377 ($lt): new $alu
  creating $alu cell for $verific$LessThan_87$b14.vhd:151$377: $auto$alumacc.cc:485:replace_alu$1125
  creating $alu cell for $verific$LessThan_83$b14.vhd:148$372: $auto$alumacc.cc:485:replace_alu$1130
  creating $alu cell for $verific$LessThan_68$b14.vhd:118$366, $verific$LessThan_78$b14.vhd:138$370: $auto$alumacc.cc:485:replace_alu$1141
  creating $alu cell for $verific$LessThan_14$b14.vhd:83$312: $auto$alumacc.cc:485:replace_alu$1152
  creating $alu cell for $verific$add_21$b14.vhd:86$319: $auto$alumacc.cc:485:replace_alu$1157
  creating $alu cell for $verific$add_26$b14.vhd:88$326: $auto$alumacc.cc:485:replace_alu$1160
  creating $alu cell for $verific$add_283$b14.vhd:318$415: $auto$alumacc.cc:485:replace_alu$1163
  creating $alu cell for $verific$add_31$b14.vhd:90$333: $auto$alumacc.cc:485:replace_alu$1166
  creating $alu cell for $verific$add_36$b14.vhd:92$340: $auto$alumacc.cc:485:replace_alu$1169
  creating $alu cell for $verific$add_39$b14.vhd:95$346: $auto$alumacc.cc:485:replace_alu$1172
  creating $alu cell for $verific$add_44$b14.vhd:96$350: $auto$alumacc.cc:485:replace_alu$1175
  creating $alu cell for $verific$add_56$b14.vhd:110$358: $auto$alumacc.cc:485:replace_alu$1178
  creating $alu cell for $verific$add_570$b14.vhd:466$422: $auto$alumacc.cc:485:replace_alu$1181
  creating $alu cell for $verific$add_61$b14.vhd:113$360: $auto$alumacc.cc:485:replace_alu$1184
  creating $alu cell for $verific$add_664$b14.vhd:494$444: $auto$alumacc.cc:485:replace_alu$1187
  creating $alu cell for $verific$sub_168$b14.vhd:243$404: $auto$alumacc.cc:485:replace_alu$1190
  creating $alu cell for $verific$sub_365$b14.vhd:358$417: $auto$alumacc.cc:485:replace_alu$1193
  creating $alu cell for $verific$sub_84$b14.vhd:149$373: $auto$alumacc.cc:485:replace_alu$1196
  creating $alu cell for $verific$unary_minus_15$b14.vhd:84$313: $auto$alumacc.cc:485:replace_alu$1199
  created 19 $alu and 1 $macc cells.

yosys> opt_expr

3.76. Executing OPT_EXPR pass (perform const folding).
Optimizing module b14.
<suppressed ~5 debug messages>

yosys> opt_merge -nomux

3.77. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\b14'.
Removed a total of 0 cells.

yosys> opt_muxtree

3.78. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \b14..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Removed 0 multiplexer ports.
<suppressed ~26 debug messages>

yosys> opt_reduce

3.79. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \b14.
Performed a total of 0 changes.

yosys> opt_merge

3.80. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\b14'.
Removed a total of 0 cells.

yosys> opt_share

3.81. Executing OPT_SHARE pass.

yosys> opt_dff -nosdff -nodffe

3.82. Executing OPT_DFF pass (perform DFF optimizations).

yosys> opt_clean

3.83. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \b14..
Removed 2 unused cells and 10 unused wires.
<suppressed ~3 debug messages>

yosys> opt_expr

3.84. Executing OPT_EXPR pass (perform const folding).
Optimizing module b14.

yosys> opt_muxtree

3.85. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \b14..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Removed 0 multiplexer ports.
<suppressed ~26 debug messages>

yosys> opt_reduce

3.86. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \b14.
Performed a total of 0 changes.

yosys> opt_merge

3.87. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\b14'.
Removed a total of 0 cells.

yosys> opt_share

3.88. Executing OPT_SHARE pass.

yosys> opt_dff -nosdff -nodffe

3.89. Executing OPT_DFF pass (perform DFF optimizations).

yosys> opt_clean

3.90. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \b14..

yosys> opt_expr

3.91. Executing OPT_EXPR pass (perform const folding).
Optimizing module b14.
MAX OPT ITERATION = 2

yosys> stat

3.92. Printing statistics.

=== b14 ===

   Number of wires:                284
   Number of wire bits:           5863
   Number of public wires:          15
   Number of public wire bits:     248
   Number of memories:               0
   Number of memory bits:            0
   Number of processes:              0
   Number of cells:                278
     $adff                           6
     $adffe                          8
     $alu                           19
     $and                           32
     $eq                            25
     $logic_not                      2
     $macc                           1
     $mux                          106
     $ne                            35
     $not                            9
     $or                             3
     $pmux                           5
     $reduce_and                     9
     $reduce_bool                    1
     $reduce_or                     17


yosys> memory -nomap

3.93. Executing MEMORY pass.

yosys> opt_mem

3.93.1. Executing OPT_MEM pass (optimize memories).
Performed a total of 0 transformations.

yosys> opt_mem_priority

3.93.2. Executing OPT_MEM_PRIORITY pass (removing unnecessary memory write priority relations).
Performed a total of 0 transformations.

yosys> opt_mem_feedback

3.93.3. Executing OPT_MEM_FEEDBACK pass (finding memory read-to-write feedback paths).

yosys> memory_bmux2rom

3.93.4. Executing MEMORY_BMUX2ROM pass (converting muxes to ROMs).

yosys> memory_dff

3.93.5. Executing MEMORY_DFF pass (merging $dff cells to $memrd).

yosys> opt_clean

3.93.6. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \b14..

yosys> memory_share

3.93.7. Executing MEMORY_SHARE pass (consolidating $memrd/$memwr cells).

yosys> opt_mem_widen

3.93.8. Executing OPT_MEM_WIDEN pass (optimize memories where all ports are wide).
Performed a total of 0 transformations.

yosys> opt_clean

3.93.9. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \b14..

yosys> memory_collect

3.93.10. Executing MEMORY_COLLECT pass (generating $mem cells).

yosys> stat

3.94. Printing statistics.

=== b14 ===

   Number of wires:                284
   Number of wire bits:           5863
   Number of public wires:          15
   Number of public wire bits:     248
   Number of memories:               0
   Number of memory bits:            0
   Number of processes:              0
   Number of cells:                278
     $adff                           6
     $adffe                          8
     $alu                           19
     $and                           32
     $eq                            25
     $logic_not                      2
     $macc                           1
     $mux                          106
     $ne                            35
     $not                            9
     $or                             3
     $pmux                           5
     $reduce_and                     9
     $reduce_bool                    1
     $reduce_or                     17


yosys> muxpack

3.95. Executing MUXPACK pass ($mux cell cascades to $pmux).
Converted 0 (p)mux cells into 0 pmux cells.
<suppressed ~101 debug messages>

yosys> opt_clean

3.96. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \b14..

yosys> pmuxtree

3.97. Executing PMUXTREE pass.

yosys> muxpack

3.98. Executing MUXPACK pass ($mux cell cascades to $pmux).
Converted 0 (p)mux cells into 0 pmux cells.
<suppressed ~107 debug messages>

yosys> memory_map

3.99. Executing MEMORY_MAP pass (converting memories to logic and flip-flops).

yosys> stat

3.100. Printing statistics.

=== b14 ===

   Number of wires:                306
   Number of wire bits:           7146
   Number of public wires:          15
   Number of public wire bits:     248
   Number of memories:               0
   Number of memory bits:            0
   Number of processes:              0
   Number of cells:                295
     $adff                           6
     $adffe                          8
     $alu                           19
     $and                           32
     $eq                            25
     $logic_not                      2
     $macc                           1
     $mux                          117
     $ne                            35
     $not                           14
     $or                             4
     $reduce_and                     9
     $reduce_bool                    1
     $reduce_or                     22


yosys> techmap -map +/techmap.v -map +/rapidsilicon/genesis/arith_map.v

3.101. Executing TECHMAP pass (map to technology primitives).

3.101.1. Executing Verilog-2005 frontend: /nfs_scratch/scratch/Vorak/aram/Workspace/Raptor/yosys_verific_rs/yosys/install/bin/../share/yosys/techmap.v
Parsing Verilog input from `/nfs_scratch/scratch/Vorak/aram/Workspace/Raptor/yosys_verific_rs/yosys/install/bin/../share/yosys/techmap.v' to AST representation.
Generating RTLIL representation for module `\_90_simplemap_bool_ops'.
Generating RTLIL representation for module `\_90_simplemap_reduce_ops'.
Generating RTLIL representation for module `\_90_simplemap_logic_ops'.
Generating RTLIL representation for module `\_90_simplemap_compare_ops'.
Generating RTLIL representation for module `\_90_simplemap_various'.
Generating RTLIL representation for module `\_90_simplemap_registers'.
Generating RTLIL representation for module `\_90_shift_ops_shr_shl_sshl_sshr'.
Generating RTLIL representation for module `\_90_shift_shiftx'.
Generating RTLIL representation for module `\_90_fa'.
Generating RTLIL representation for module `\_90_lcu'.
Generating RTLIL representation for module `\_90_alu'.
Generating RTLIL representation for module `\_90_macc'.
Generating RTLIL representation for module `\_90_alumacc'.
Generating RTLIL representation for module `\$__div_mod_u'.
Generating RTLIL representation for module `\$__div_mod_trunc'.
Generating RTLIL representation for module `\_90_div'.
Generating RTLIL representation for module `\_90_mod'.
Generating RTLIL representation for module `\$__div_mod_floor'.
Generating RTLIL representation for module `\_90_divfloor'.
Generating RTLIL representation for module `\_90_modfloor'.
Generating RTLIL representation for module `\_90_pow'.
Generating RTLIL representation for module `\_90_pmux'.
Generating RTLIL representation for module `\_90_demux'.
Generating RTLIL representation for module `\_90_lut'.
Successfully finished Verilog frontend.

3.101.2. Executing Verilog-2005 frontend: /nfs_scratch/scratch/Vorak/aram/Workspace/Raptor/yosys_verific_rs/yosys/install/bin/../share/yosys/rapidsilicon/genesis/arith_map.v
Parsing Verilog input from `/nfs_scratch/scratch/Vorak/aram/Workspace/Raptor/yosys_verific_rs/yosys/install/bin/../share/yosys/rapidsilicon/genesis/arith_map.v' to AST representation.
Generating RTLIL representation for module `\_80_rs_alu'.
Successfully finished Verilog frontend.

3.101.3. Continuing TECHMAP pass.
Using extmapper simplemap for cells of type $and.
Using extmapper simplemap for cells of type $reduce_and.
Using extmapper simplemap for cells of type $not.
Using extmapper simplemap for cells of type $ne.
Using extmapper simplemap for cells of type $mux.
Using extmapper simplemap for cells of type $or.
Using extmapper simplemap for cells of type $adffe.
Using extmapper simplemap for cells of type $eq.
Using extmapper simplemap for cells of type $reduce_or.
Using template $paramod$79fc87901d7fd8aaad689b5406671422f5fa25b9\_80_rs_alu for cells of type $alu.
Using extmapper simplemap for cells of type $adff.
Using extmapper maccmap for cells of type $macc.
  add 3'101 * $auto$bmuxmap.cc:58:execute$507 (3x1 bits, unsigned)
Using template $paramod$175e67c02b86e96b1288b9dc100122520d7240d8\_90_alu for cells of type $alu.
Using template $paramod$3ef7d3dd227da7627a99c5e5a6a4deb817573e39\_90_alu for cells of type $alu.
Using template $paramod$9e7011427f22271c0942bd67000ef26931352ace\_80_rs_alu for cells of type $alu.
/nfs_scratch/scratch/Vorak/aram/Workspace/Raptor/yosys_verific_rs/yosys/install/bin/../share/yosys/rapidsilicon/genesis/arith_map.v:80: Warning: Range [-1:-1] select out of bounds on signal `\C': Setting 1 LSB bits to undef.
/nfs_scratch/scratch/Vorak/aram/Workspace/Raptor/yosys_verific_rs/yosys/install/bin/../share/yosys/rapidsilicon/genesis/arith_map.v:88: Warning: Range [-1:-1] select out of bounds on signal `\Y': Setting 1 LSB bits to undef.
/nfs_scratch/scratch/Vorak/aram/Workspace/Raptor/yosys_verific_rs/yosys/install/bin/../share/yosys/rapidsilicon/genesis/arith_map.v:88: Warning: Range [-1:-1] select out of bounds on signal `\S': Setting 1 LSB bits to undef.
/nfs_scratch/scratch/Vorak/aram/Workspace/Raptor/yosys_verific_rs/yosys/install/bin/../share/yosys/rapidsilicon/genesis/arith_map.v:88: Warning: Ignoring assignment to constant bits:
    old assignment: 1'x = $xor$/nfs_scratch/scratch/Vorak/aram/Workspace/Raptor/yosys_verific_rs/yosys/install/bin/../share/yosys/rapidsilicon/genesis/arith_map.v:88$3515_Y
    new assignment: { } = { }.
/nfs_scratch/scratch/Vorak/aram/Workspace/Raptor/yosys_verific_rs/yosys/install/bin/../share/yosys/rapidsilicon/genesis/arith_map.v:89: Warning: Range [-1:-1] select out of bounds on signal `\S': Setting 1 LSB bits to undef.
/nfs_scratch/scratch/Vorak/aram/Workspace/Raptor/yosys_verific_rs/yosys/install/bin/../share/yosys/rapidsilicon/genesis/arith_map.v:89: Warning: Range [-1:-1] select out of bounds on signal `\AA': Setting 1 LSB bits to undef.
Using template $paramod$fc972a7a46956c1788f3cb5257b53c8f1df2d0cc\_90_alu for cells of type $alu.
Using template $paramod$83784888def4f70dbbded37c6d05d2ea1157c936\_90_alu for cells of type $alu.
Using extmapper simplemap for cells of type $reduce_bool.
Using template $paramod$43e6bdbb0e8a6b23dfd3962c0280737d54f8e2be\_80_rs_alu for cells of type $alu.
Using template $paramod$ee932b0f27f4b110ee21c85da6e79a9925243db9\_80_rs_alu for cells of type $alu.
Using template $paramod$e891e6b399cf52748460a311fafe476815d24bd7\_90_alu for cells of type $alu.
Using template $paramod$63a3f1ffa662be02d3403b533885c56d18ebe02a\_80_rs_alu for cells of type $alu.
Using extmapper simplemap for cells of type $logic_not.
Using template $paramod$83fc07d9557d32477a9ece9e4e82efd3bbe82ab8\_80_rs_alu for cells of type $alu.
Using template $paramod$32a7b7b86c07519b7537abc18e96f0331f97914d\_90_alu for cells of type $alu.
Using template $paramod$c32aaa9fd758c6ea2b382f4327253b21b576e597\_90_alu for cells of type $alu.
Using template $paramod$6a42b6fefed750f8a1c58eab59479d960557103c\_90_alu for cells of type $alu.
Using extmapper simplemap for cells of type $xor.
Using extmapper simplemap for cells of type $pos.
Using template $paramod\_90_lcu\WIDTH=32'00000000000000000000000000000010 for cells of type $lcu.
Using template $paramod\_90_lcu\WIDTH=32'00000000000000000000000000000011 for cells of type $lcu.
Using template $paramod\_90_lcu\WIDTH=32'00000000000000000000000000000001 for cells of type $lcu.
Using template $paramod\_90_lcu\WIDTH=32'00000000000000000000000000011011 for cells of type $lcu.
Using template $paramod\_90_lcu\WIDTH=32'00000000000000000000000000100000 for cells of type $lcu.
Using template $paramod\_90_lcu\WIDTH=32'00000000000000000000000000000100 for cells of type $lcu.
No more expansions possible.
<suppressed ~3004 debug messages>

yosys> stat

3.102. Printing statistics.

=== b14 ===

   Number of wires:               1646
   Number of wire bits:          26934
   Number of public wires:          15
   Number of public wire bits:     248
   Number of memories:               0
   Number of memory bits:            0
   Number of processes:              0
   Number of cells:               7748
     $_AND_                        734
     $_DFFE_PP0P_                  178
     $_DFF_PP0_                     39
     $_MUX_                       4403
     $_NOT_                        436
     $_OR_                         797
     $_XOR_                        934
     adder_carry                   227


yosys> opt_expr

3.103. Executing OPT_EXPR pass (perform const folding).
Optimizing module b14.
<suppressed ~2323 debug messages>

yosys> opt_merge -nomux

3.104. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\b14'.
<suppressed ~4479 debug messages>
Removed a total of 1493 cells.

yosys> opt_muxtree

3.105. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \b14..
  Creating internal representation of mux trees.
  No muxes found in this module.
Removed 0 multiplexer ports.

yosys> opt_reduce

3.106. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \b14.
Performed a total of 0 changes.

yosys> opt_merge

3.107. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\b14'.
Removed a total of 0 cells.

yosys> opt_share

3.108. Executing OPT_SHARE pass.

yosys> opt_dff -nosdff -nodffe

3.109. Executing OPT_DFF pass (perform DFF optimizations).

yosys> opt_clean

3.110. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \b14..
Removed 279 unused cells and 1169 unused wires.
<suppressed ~280 debug messages>

yosys> opt_expr

3.111. Executing OPT_EXPR pass (perform const folding).
Optimizing module b14.
<suppressed ~72 debug messages>

yosys> opt_muxtree

3.112. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \b14..
  Creating internal representation of mux trees.
  No muxes found in this module.
Removed 0 multiplexer ports.

yosys> opt_reduce

3.113. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \b14.
Performed a total of 0 changes.

yosys> opt_merge

3.114. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\b14'.
Removed a total of 0 cells.

yosys> opt_share

3.115. Executing OPT_SHARE pass.

yosys> opt_dff -nosdff -nodffe

3.116. Executing OPT_DFF pass (perform DFF optimizations).

yosys> opt_clean

3.117. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \b14..
Removed 0 unused cells and 2 unused wires.
<suppressed ~1 debug messages>

yosys> opt_expr

3.118. Executing OPT_EXPR pass (perform const folding).
Optimizing module b14.
MAX OPT ITERATION = 2

yosys> opt_expr -full

3.119. Executing OPT_EXPR pass (perform const folding).
Optimizing module b14.
<suppressed ~661 debug messages>

yosys> techmap -map +/techmap.v

3.120. Executing TECHMAP pass (map to technology primitives).

3.120.1. Executing Verilog-2005 frontend: /nfs_scratch/scratch/Vorak/aram/Workspace/Raptor/yosys_verific_rs/yosys/install/bin/../share/yosys/techmap.v
Parsing Verilog input from `/nfs_scratch/scratch/Vorak/aram/Workspace/Raptor/yosys_verific_rs/yosys/install/bin/../share/yosys/techmap.v' to AST representation.
Generating RTLIL representation for module `\_90_simplemap_bool_ops'.
Generating RTLIL representation for module `\_90_simplemap_reduce_ops'.
Generating RTLIL representation for module `\_90_simplemap_logic_ops'.
Generating RTLIL representation for module `\_90_simplemap_compare_ops'.
Generating RTLIL representation for module `\_90_simplemap_various'.
Generating RTLIL representation for module `\_90_simplemap_registers'.
Generating RTLIL representation for module `\_90_shift_ops_shr_shl_sshl_sshr'.
Generating RTLIL representation for module `\_90_shift_shiftx'.
Generating RTLIL representation for module `\_90_fa'.
Generating RTLIL representation for module `\_90_lcu'.
Generating RTLIL representation for module `\_90_alu'.
Generating RTLIL representation for module `\_90_macc'.
Generating RTLIL representation for module `\_90_alumacc'.
Generating RTLIL representation for module `\$__div_mod_u'.
Generating RTLIL representation for module `\$__div_mod_trunc'.
Generating RTLIL representation for module `\_90_div'.
Generating RTLIL representation for module `\_90_mod'.
Generating RTLIL representation for module `\$__div_mod_floor'.
Generating RTLIL representation for module `\_90_divfloor'.
Generating RTLIL representation for module `\_90_modfloor'.
Generating RTLIL representation for module `\_90_pow'.
Generating RTLIL representation for module `\_90_pmux'.
Generating RTLIL representation for module `\_90_demux'.
Generating RTLIL representation for module `\_90_lut'.
Successfully finished Verilog frontend.

3.120.2. Continuing TECHMAP pass.
No more expansions possible.
<suppressed ~71 debug messages>

yosys> opt_expr

3.121. Executing OPT_EXPR pass (perform const folding).
Optimizing module b14.

yosys> opt_merge -nomux

3.122. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\b14'.
<suppressed ~3 debug messages>
Removed a total of 1 cells.

yosys> opt_muxtree

3.123. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \b14..
  Creating internal representation of mux trees.
  No muxes found in this module.
Removed 0 multiplexer ports.

yosys> opt_reduce

3.124. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \b14.
Performed a total of 0 changes.

yosys> opt_merge

3.125. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\b14'.
Removed a total of 0 cells.

yosys> opt_dff -nosdff -nodffe -sat

3.126. Executing OPT_DFF pass (perform DFF optimizations).

yosys> opt_clean

3.127. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \b14..
Removed 0 unused cells and 13 unused wires.
<suppressed ~1 debug messages>

yosys> opt_expr

3.128. Executing OPT_EXPR pass (perform const folding).
Optimizing module b14.
MAX OPT ITERATION = 1

yosys> abc -dff

3.129. Executing ABC pass (technology mapping using ABC).

3.129.1. Summary of detected clock domains:
  78 cells in clk=\clock, en=$auto$opt_dff.cc:219:make_patterns_logic$1075, arst=\reset, srst={ }
  495 cells in clk=\clock, en=$auto$opt_dff.cc:219:make_patterns_logic$1092, arst=\reset, srst={ }
  770 cells in clk=\clock, en=$auto$opt_dff.cc:219:make_patterns_logic$1001, arst=\reset, srst={ }
  600 cells in clk=\clock, en=$auto$opt_dff.cc:219:make_patterns_logic$1020, arst=\reset, srst={ }
  515 cells in clk=\clock, en=$auto$opt_dff.cc:219:make_patterns_logic$1039, arst=\reset, srst={ }
  68 cells in clk=\clock, en=$auto$opt_dff.cc:219:make_patterns_logic$1044, arst=\reset, srst={ }
  649 cells in clk=\clock, en=\state, arst=\reset, srst={ }
  589 cells in clk=\clock, en={ }, arst=\reset, srst={ }
  98 cells in clk=\clock, en=$auto$opt_dff.cc:219:make_patterns_logic$984, arst=\reset, srst={ }

3.129.2. Extracting gate netlist of module `\b14' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clock, enabled by $auto$opt_dff.cc:219:make_patterns_logic$1075, asynchronously reset by \reset
Extracted 78 gates and 118 wires to a netlist network with 40 inputs and 21 outputs.

3.129.2.1. Executing ABC.

3.129.3. Extracting gate netlist of module `\b14' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clock, enabled by $auto$opt_dff.cc:219:make_patterns_logic$1092, asynchronously reset by \reset
Extracted 428 gates and 574 wires to a netlist network with 144 inputs and 94 outputs.

3.129.3.1. Executing ABC.

3.129.4. Extracting gate netlist of module `\b14' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clock, enabled by $auto$opt_dff.cc:219:make_patterns_logic$1001, asynchronously reset by \reset
Extracted 710 gates and 978 wires to a netlist network with 267 inputs and 188 outputs.

3.129.4.1. Executing ABC.

3.129.5. Extracting gate netlist of module `\b14' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clock, enabled by $auto$opt_dff.cc:219:make_patterns_logic$1020, asynchronously reset by \reset
Extracted 600 gates and 840 wires to a netlist network with 239 inputs and 98 outputs.

3.129.5.1. Executing ABC.

3.129.6. Extracting gate netlist of module `\b14' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clock, enabled by $auto$opt_dff.cc:219:make_patterns_logic$1039, asynchronously reset by \reset
Extracted 491 gates and 706 wires to a netlist network with 213 inputs and 70 outputs.

3.129.6.1. Executing ABC.

3.129.7. Extracting gate netlist of module `\b14' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clock, enabled by $auto$opt_dff.cc:219:make_patterns_logic$1044, asynchronously reset by \reset
Extracted 68 gates and 137 wires to a netlist network with 69 inputs and 66 outputs.

3.129.7.1. Executing ABC.

3.129.8. Extracting gate netlist of module `\b14' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clock, enabled by \state, asynchronously reset by \reset
Extracted 649 gates and 796 wires to a netlist network with 146 inputs and 48 outputs.

3.129.8.1. Executing ABC.

3.129.9. Extracting gate netlist of module `\b14' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clock, asynchronously reset by \reset
Extracted 517 gates and 668 wires to a netlist network with 149 inputs and 117 outputs.

3.129.9.1. Executing ABC.

3.129.10. Extracting gate netlist of module `\b14' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clock, enabled by $auto$opt_dff.cc:219:make_patterns_logic$984, asynchronously reset by \reset
Extracted 94 gates and 139 wires to a netlist network with 44 inputs and 33 outputs.

3.129.10.1. Executing ABC.

yosys> abc -dff

3.130. Executing ABC pass (technology mapping using ABC).

3.130.1. Summary of detected clock domains:
  245 cells in clk=\clock, en=$abc$10393$auto$opt_dff.cc:219:make_patterns_logic$1092, arst=\reset, srst={ }
  67 cells in clk=\clock, en=$abc$12863$auto$opt_dff.cc:219:make_patterns_logic$1044, arst=\reset, srst={ }
  800 cells in clk=\clock, en=$abc$13804$lo38, arst=\reset, srst={ }
  561 cells in clk=\clock, en=$abc$12294$auto$opt_dff.cc:219:make_patterns_logic$1039, arst=\reset, srst={ }
  998 cells in clk=\clock, en=$abc$11501$auto$opt_dff.cc:219:make_patterns_logic$1020, arst=\reset, srst={ }
  790 cells in clk=\clock, en=$abc$10597$auto$opt_dff.cc:219:make_patterns_logic$1001, arst=\reset, srst={ }
  216 cells in clk=\clock, en=$abc$10311$auto$opt_dff.cc:219:make_patterns_logic$1075, arst=\reset, srst={ }
  289 cells in clk=\clock, en={ }, arst=\reset, srst={ }
  125 cells in clk=\clock, en=$abc$14209$auto$opt_dff.cc:219:make_patterns_logic$984, arst=\reset, srst={ }

3.130.2. Extracting gate netlist of module `\b14' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clock, enabled by $abc$10393$auto$opt_dff.cc:219:make_patterns_logic$1092, asynchronously reset by \reset
Extracted 181 gates and 327 wires to a netlist network with 146 inputs and 66 outputs.

3.130.2.1. Executing ABC.

3.130.3. Extracting gate netlist of module `\b14' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clock, enabled by $abc$12863$auto$opt_dff.cc:219:make_patterns_logic$1044, asynchronously reset by \reset
Extracted 67 gates and 136 wires to a netlist network with 69 inputs and 34 outputs.

3.130.3.1. Executing ABC.

3.130.4. Extracting gate netlist of module `\b14' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clock, enabled by $abc$13804$lo38, asynchronously reset by \reset
Extracted 800 gates and 941 wires to a netlist network with 141 inputs and 48 outputs.

3.130.4.1. Executing ABC.

3.130.5. Extracting gate netlist of module `\b14' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clock, enabled by $abc$12294$auto$opt_dff.cc:219:make_patterns_logic$1039, asynchronously reset by \reset
Extracted 560 gates and 766 wires to a netlist network with 206 inputs and 76 outputs.

3.130.5.1. Executing ABC.

3.130.6. Extracting gate netlist of module `\b14' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clock, enabled by $abc$11501$auto$opt_dff.cc:219:make_patterns_logic$1020, asynchronously reset by \reset
Extracted 922 gates and 1184 wires to a netlist network with 262 inputs and 243 outputs.

3.130.6.1. Executing ABC.

3.130.7. Extracting gate netlist of module `\b14' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clock, enabled by $abc$10597$auto$opt_dff.cc:219:make_patterns_logic$1001, asynchronously reset by \reset
Extracted 778 gates and 1028 wires to a netlist network with 250 inputs and 80 outputs.

3.130.7.1. Executing ABC.

3.130.8. Extracting gate netlist of module `\b14' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clock, enabled by $abc$10311$auto$opt_dff.cc:219:make_patterns_logic$1075, asynchronously reset by \reset
Extracted 176 gates and 283 wires to a netlist network with 107 inputs and 24 outputs.

3.130.8.1. Executing ABC.

3.130.9. Extracting gate netlist of module `\b14' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clock, asynchronously reset by \reset
Extracted 257 gates and 343 wires to a netlist network with 86 inputs and 101 outputs.

3.130.9.1. Executing ABC.

3.130.10. Extracting gate netlist of module `\b14' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clock, enabled by $abc$14209$auto$opt_dff.cc:219:make_patterns_logic$984, asynchronously reset by \reset
Extracted 123 gates and 178 wires to a netlist network with 55 inputs and 30 outputs.

3.130.10.1. Executing ABC.

yosys> abc -dff

3.131. Executing ABC pass (technology mapping using ABC).

3.131.1. Summary of detected clock domains:
  240 cells in clk=\clock, en=$abc$14340$abc$10393$auto$opt_dff.cc:219:make_patterns_logic$1092, arst=\reset, srst={ }
  815 cells in clk=\clock, en=$abc$17981$lo14, arst=\reset, srst={ }
  685 cells in clk=\clock, en=$abc$15439$abc$12294$auto$opt_dff.cc:219:make_patterns_logic$1039, arst=\reset, srst={ }
  855 cells in clk=\clock, en=$abc$16103$abc$11501$auto$opt_dff.cc:219:make_patterns_logic$1020, arst=\reset, srst={ }
  67 cells in clk=\clock, en=$abc$14515$abc$12863$auto$opt_dff.cc:219:make_patterns_logic$1044, arst=\reset, srst={ }
  851 cells in clk=\clock, en=$abc$17069$abc$10597$auto$opt_dff.cc:219:make_patterns_logic$1001, arst=\reset, srst={ }
  277 cells in clk=\clock, en={ }, arst=\reset, srst={ }
  219 cells in clk=\clock, en=$abc$17784$abc$10311$auto$opt_dff.cc:219:make_patterns_logic$1075, arst=\reset, srst={ }
  125 cells in clk=\clock, en=$abc$18230$abc$14209$auto$opt_dff.cc:219:make_patterns_logic$984, arst=\reset, srst={ }

3.131.2. Extracting gate netlist of module `\b14' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clock, enabled by $abc$14340$abc$10393$auto$opt_dff.cc:219:make_patterns_logic$1092, asynchronously reset by \reset
Extracted 176 gates and 318 wires to a netlist network with 142 inputs and 66 outputs.

3.131.2.1. Executing ABC.

3.131.3. Extracting gate netlist of module `\b14' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clock, enabled by $abc$17981$lo14, asynchronously reset by \reset
Extracted 815 gates and 959 wires to a netlist network with 144 inputs and 49 outputs.

3.131.3.1. Executing ABC.

3.131.4. Extracting gate netlist of module `\b14' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clock, enabled by $abc$15439$abc$12294$auto$opt_dff.cc:219:make_patterns_logic$1039, asynchronously reset by \reset
Extracted 659 gates and 877 wires to a netlist network with 218 inputs and 94 outputs.

3.131.4.1. Executing ABC.

3.131.5. Extracting gate netlist of module `\b14' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clock, enabled by $abc$16103$abc$11501$auto$opt_dff.cc:219:make_patterns_logic$1020, asynchronously reset by \reset
Extracted 827 gates and 1053 wires to a netlist network with 226 inputs and 136 outputs.

3.131.5.1. Executing ABC.

3.131.6. Extracting gate netlist of module `\b14' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clock, enabled by $abc$14515$abc$12863$auto$opt_dff.cc:219:make_patterns_logic$1044, asynchronously reset by \reset
Extracted 67 gates and 136 wires to a netlist network with 69 inputs and 34 outputs.

3.131.6.1. Executing ABC.

3.131.7. Extracting gate netlist of module `\b14' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clock, enabled by $abc$17069$abc$10597$auto$opt_dff.cc:219:make_patterns_logic$1001, asynchronously reset by \reset
Extracted 822 gates and 1095 wires to a netlist network with 273 inputs and 166 outputs.

3.131.7.1. Executing ABC.

3.131.8. Extracting gate netlist of module `\b14' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clock, asynchronously reset by \reset
Extracted 245 gates and 332 wires to a netlist network with 87 inputs and 103 outputs.

3.131.8.1. Executing ABC.

3.131.9. Extracting gate netlist of module `\b14' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clock, enabled by $abc$17784$abc$10311$auto$opt_dff.cc:219:make_patterns_logic$1075, asynchronously reset by \reset
Extracted 179 gates and 288 wires to a netlist network with 109 inputs and 24 outputs.

3.131.9.1. Executing ABC.

3.131.10. Extracting gate netlist of module `\b14' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clock, enabled by $abc$18230$abc$14209$auto$opt_dff.cc:219:make_patterns_logic$984, asynchronously reset by \reset
Extracted 117 gates and 178 wires to a netlist network with 61 inputs and 35 outputs.

3.131.10.1. Executing ABC.

yosys> abc -dff

3.132. Executing ABC pass (technology mapping using ABC).

3.132.1. Summary of detected clock domains:
  219 cells in clk=\clock, en=$abc$21896$abc$17784$abc$10311$auto$opt_dff.cc:219:make_patterns_logic$1075, arst=\reset, srst={ }
  252 cells in clk=\clock, en=$abc$18350$abc$14340$abc$10393$auto$opt_dff.cc:219:make_patterns_logic$1092, arst=\reset, srst={ }
  794 cells in clk=\clock, en=$abc$21647$lo27, arst=\reset, srst={ }
  648 cells in clk=\clock, en=$abc$19313$abc$15439$abc$12294$auto$opt_dff.cc:219:make_patterns_logic$1039, arst=\reset, srst={ }
  744 cells in clk=\clock, en=$abc$19924$abc$16103$abc$11501$auto$opt_dff.cc:219:make_patterns_logic$1020, arst=\reset, srst={ }
  67 cells in clk=\clock, en=$abc$20720$abc$14515$abc$12863$auto$opt_dff.cc:219:make_patterns_logic$1044, arst=\reset, srst={ }
  867 cells in clk=\clock, en=$abc$20820$abc$17069$abc$10597$auto$opt_dff.cc:219:make_patterns_logic$1001, arst=\reset, srst={ }
  272 cells in clk=\clock, en={ }, arst=\reset, srst={ }
  128 cells in clk=\clock, en=$abc$22095$abc$18230$abc$14209$auto$opt_dff.cc:219:make_patterns_logic$984, arst=\reset, srst={ }

3.132.2. Extracting gate netlist of module `\b14' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clock, enabled by $abc$21896$abc$17784$abc$10311$auto$opt_dff.cc:219:make_patterns_logic$1075, asynchronously reset by \reset
Extracted 179 gates and 286 wires to a netlist network with 107 inputs and 24 outputs.

3.132.2.1. Executing ABC.

3.132.3. Extracting gate netlist of module `\b14' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clock, enabled by $abc$18350$abc$14340$abc$10393$auto$opt_dff.cc:219:make_patterns_logic$1092, asynchronously reset by \reset
Extracted 188 gates and 322 wires to a netlist network with 134 inputs and 70 outputs.

3.132.3.1. Executing ABC.

3.132.4. Extracting gate netlist of module `\b14' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clock, enabled by $abc$21647$lo27, asynchronously reset by \reset
Extracted 789 gates and 943 wires to a netlist network with 154 inputs and 56 outputs.

3.132.4.1. Executing ABC.

3.132.5. Extracting gate netlist of module `\b14' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clock, enabled by $abc$19313$abc$15439$abc$12294$auto$opt_dff.cc:219:make_patterns_logic$1039, asynchronously reset by \reset
Extracted 613 gates and 842 wires to a netlist network with 229 inputs and 102 outputs.

3.132.5.1. Executing ABC.

3.132.6. Extracting gate netlist of module `\b14' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clock, enabled by $abc$19924$abc$16103$abc$11501$auto$opt_dff.cc:219:make_patterns_logic$1020, asynchronously reset by \reset
Extracted 734 gates and 946 wires to a netlist network with 212 inputs and 105 outputs.

3.132.6.1. Executing ABC.

3.132.7. Extracting gate netlist of module `\b14' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clock, enabled by $abc$20720$abc$14515$abc$12863$auto$opt_dff.cc:219:make_patterns_logic$1044, asynchronously reset by \reset
Extracted 67 gates and 136 wires to a netlist network with 69 inputs and 34 outputs.

3.132.7.1. Executing ABC.

3.132.8. Extracting gate netlist of module `\b14' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clock, enabled by $abc$20820$abc$17069$abc$10597$auto$opt_dff.cc:219:make_patterns_logic$1001, asynchronously reset by \reset
Extracted 834 gates and 1103 wires to a netlist network with 269 inputs and 170 outputs.

3.132.8.1. Executing ABC.

3.132.9. Extracting gate netlist of module `\b14' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clock, asynchronously reset by \reset
Extracted 240 gates and 327 wires to a netlist network with 87 inputs and 100 outputs.

3.132.9.1. Executing ABC.

3.132.10. Extracting gate netlist of module `\b14' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clock, enabled by $abc$22095$abc$18230$abc$14209$auto$opt_dff.cc:219:make_patterns_logic$984, asynchronously reset by \reset
Extracted 120 gates and 178 wires to a netlist network with 58 inputs and 34 outputs.

3.132.10.1. Executing ABC.

yosys> opt_ffinv

3.133. Executing OPT_FFINV pass (push inverters through FFs).
Discovering LUTs.
Pushed 0 inverters.

yosys> opt_expr

3.134. Executing OPT_EXPR pass (perform const folding).
Optimizing module b14.
<suppressed ~121 debug messages>

yosys> opt_merge -nomux

3.135. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\b14'.
<suppressed ~222 debug messages>
Removed a total of 74 cells.

yosys> opt_muxtree

3.136. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \b14..
  Creating internal representation of mux trees.
  No muxes found in this module.
Removed 0 multiplexer ports.

yosys> opt_reduce

3.137. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \b14.
Performed a total of 0 changes.

yosys> opt_merge

3.138. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\b14'.
Removed a total of 0 cells.

yosys> opt_share

3.139. Executing OPT_SHARE pass.

yosys> opt_dff -nosdff -sat

3.140. Executing OPT_DFF pass (perform DFF optimizations).

yosys> opt_clean

3.141. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \b14..
Removed 0 unused cells and 18350 unused wires.
<suppressed ~6 debug messages>

yosys> opt_expr

3.142. Executing OPT_EXPR pass (perform const folding).
Optimizing module b14.
MAX OPT ITERATION = 1

yosys> bmuxmap

3.143. Executing BMUXMAP pass.

yosys> demuxmap

3.144. Executing DEMUXMAP pass.

yosys> clean_zerowidth

yosys> abc -script /tmp/yosys_0BPnqk/abc_tmp_1.scr

3.145. Executing ABC pass (technology mapping using ABC).

3.145.1. Extracting gate netlist of module `\b14' to `<abc-temp-dir>/input.blif'..
Extracted 3495 gates and 3849 wires to a netlist network with 354 inputs and 439 outputs.

3.145.1.1. Executing ABC.
DE:   #PIs = 354  #Luts =  1180  Max Lvl =  12  Avg Lvl =   5.48  [   0.42 sec. at Pass 0]{firstMap}
DE:   #PIs = 354  #Luts =   923  Max Lvl =  31  Avg Lvl =  10.96  [  10.89 sec. at Pass 1]{initMapFlow}
DE:   #PIs = 354  #Luts =   920  Max Lvl =  33  Avg Lvl =  10.74  [   2.32 sec. at Pass 2]{map}
DE:   #PIs = 354  #Luts =   893  Max Lvl =  35  Avg Lvl =  11.83  [   3.36 sec. at Pass 3]{postMap}
DE:   #PIs = 354  #Luts =   876  Max Lvl =  36  Avg Lvl =  12.25  [   2.56 sec. at Pass 4]{map}
DE:   #PIs = 354  #Luts =   858  Max Lvl =  37  Avg Lvl =  12.05  [   6.29 sec. at Pass 5]{postMap}
DE:   #PIs = 354  #Luts =   853  Max Lvl =  33  Avg Lvl =  10.58  [   4.09 sec. at Pass 6]{map}
DE:   #PIs = 354  #Luts =   836  Max Lvl =  29  Avg Lvl =  10.51  [   5.73 sec. at Pass 7]{postMap}
DE:   #PIs = 354  #Luts =   829  Max Lvl =  28  Avg Lvl =  10.67  [   2.79 sec. at Pass 8]{map}
DE:   #PIs = 354  #Luts =   816  Max Lvl =  27  Avg Lvl =   9.54  [   4.83 sec. at Pass 9]{postMap}
DE:   #PIs = 354  #Luts =   814  Max Lvl =  28  Avg Lvl =   9.88  [   2.46 sec. at Pass 10]{map}
DE:   #PIs = 354  #Luts =   803  Max Lvl =  26  Avg Lvl =   9.73  [   4.23 sec. at Pass 11]{postMap}
DE:   #PIs = 354  #Luts =   799  Max Lvl =  25  Avg Lvl =   9.10  [   2.29 sec. at Pass 12]{map}
DE:   #PIs = 354  #Luts =   794  Max Lvl =  26  Avg Lvl =   9.82  [   3.18 sec. at Pass 13]{postMap}
DE:   #PIs = 354  #Luts =   792  Max Lvl =  22  Avg Lvl =   8.78  [   2.93 sec. at Pass 14]{map}
DE:   #PIs = 354  #Luts =   788  Max Lvl =  23  Avg Lvl =   8.79  [   4.88 sec. at Pass 15]{postMap}
DE:   #PIs = 354  #Luts =   783  Max Lvl =  23  Avg Lvl =   8.79  [   3.61 sec. at Pass 16]{map}
DE:   #PIs = 354  #Luts =   783  Max Lvl =  23  Avg Lvl =   8.79  [   4.15 sec. at Pass 17]{postMap}
DE:   #PIs = 354  #Luts =   780  Max Lvl =  22  Avg Lvl =   9.37  [   2.86 sec. at Pass 18]{map}
DE:   #PIs = 354  #Luts =   775  Max Lvl =  26  Avg Lvl =   9.84  [   4.75 sec. at Pass 19]{postMap}
DE:   #PIs = 354  #Luts =   769  Max Lvl =  20  Avg Lvl =   9.08  [   2.46 sec. at Pass 20]{map}
DE:   #PIs = 354  #Luts =   766  Max Lvl =  26  Avg Lvl =   9.83  [   4.20 sec. at Pass 21]{postMap}
DE:   #PIs = 354  #Luts =   761  Max Lvl =  24  Avg Lvl =   8.51  [   2.44 sec. at Pass 22]{map}
DE:   #PIs = 354  #Luts =   756  Max Lvl =  25  Avg Lvl =   9.88  [   5.40 sec. at Pass 23]{postMap}
DE:   #PIs = 354  #Luts =   756  Max Lvl =  24  Avg Lvl =   9.14  [   2.81 sec. at Pass 24]{map}
DE:   #PIs = 354  #Luts =   753  Max Lvl =  25  Avg Lvl =   9.19  [   3.72 sec. at Pass 25]{postMap}
DE:   #PIs = 354  #Luts =   750  Max Lvl =  24  Avg Lvl =   8.94  [   2.90 sec. at Pass 26]{map}
DE:   #PIs = 354  #Luts =   749  Max Lvl =  26  Avg Lvl =   9.13  [   4.19 sec. at Pass 27]{postMap}
DE:   #PIs = 354  #Luts =   745  Max Lvl =  24  Avg Lvl =   9.42  [   2.74 sec. at Pass 28]{map}
DE:   #PIs = 354  #Luts =   745  Max Lvl =  24  Avg Lvl =   9.42  [   4.20 sec. at Pass 29]{postMap}
DE:   #PIs = 354  #Luts =   743  Max Lvl =  24  Avg Lvl =   9.60  [   2.13 sec. at Pass 30]{map}
DE:   #PIs = 354  #Luts =   743  Max Lvl =  24  Avg Lvl =   9.60  [   2.95 sec. at Pass 31]{postMap}
DE:   #PIs = 354  #Luts =   738  Max Lvl =  23  Avg Lvl =   9.38  [   2.23 sec. at Pass 32]{map}
DE:   #PIs = 354  #Luts =   738  Max Lvl =  23  Avg Lvl =   9.38  [   2.88 sec. at Pass 33]{postMap}
DE:   #PIs = 354  #Luts =   738  Max Lvl =  21  Avg Lvl =   8.61  [   2.14 sec. at Pass 34]{map}
DE:   #PIs = 354  #Luts =   736  Max Lvl =  22  Avg Lvl =   9.36  [   2.81 sec. at Pass 35]{postMap}
DE:   #PIs = 354  #Luts =   734  Max Lvl =  23  Avg Lvl =   9.39  [   1.79 sec. at Pass 36]{map}
DE:   #PIs = 354  #Luts =   734  Max Lvl =  23  Avg Lvl =   9.39  [   2.98 sec. at Pass 37]{postMap}
DE:   #PIs = 354  #Luts =   733  Max Lvl =  23  Avg Lvl =   8.71  [   2.03 sec. at Pass 38]{map}
DE:   #PIs = 354  #Luts =   733  Max Lvl =  23  Avg Lvl =   8.71  [   2.42 sec. at Pass 39]{postMap}
DE:   #PIs = 354  #Luts =   733  Max Lvl =  22  Avg Lvl =   8.66  [   1.61 sec. at Pass 40]{map}
DE:   #PIs = 354  #Luts =   733  Max Lvl =  22  Avg Lvl =   8.66  [   4.35 sec. at Pass 41]{postMap}
DE:   #PIs = 354  #Luts =   732  Max Lvl =  22  Avg Lvl =   8.87  [   2.41 sec. at Pass 42]{map}
DE:   #PIs = 354  #Luts =   731  Max Lvl =  23  Avg Lvl =   8.92  [   3.08 sec. at Pass 43]{postMap}
DE:   #PIs = 354  #Luts =   729  Max Lvl =  21  Avg Lvl =   8.65  [   1.92 sec. at Pass 44]{map}
DE:   #PIs = 354  #Luts =   729  Max Lvl =  21  Avg Lvl =   8.65  [   2.84 sec. at Pass 45]{postMap}
DE:   #PIs = 354  #Luts =   727  Max Lvl =  22  Avg Lvl =   8.85  [   1.64 sec. at Pass 46]{map}
DE:   #PIs = 354  #Luts =   727  Max Lvl =  22  Avg Lvl =   8.85  [   1.89 sec. at Pass 47]{postMap}
DE:   #PIs = 354  #Luts =   726  Max Lvl =  23  Avg Lvl =   9.58  [   1.34 sec. at Pass 48]{map}
DE:   #PIs = 354  #Luts =   726  Max Lvl =  23  Avg Lvl =   9.58  [   2.05 sec. at Pass 49]{postMap}
DE:   #PIs = 354  #Luts =   726  Max Lvl =  22  Avg Lvl =   8.69  [   1.62 sec. at Pass 50]{map}
DE:   #PIs = 354  #Luts =   726  Max Lvl =  22  Avg Lvl =   8.69  [   3.20 sec. at Pass 51]{postMap}
DE:   #PIs = 354  #Luts =   725  Max Lvl =  21  Avg Lvl =   8.66  [   2.23 sec. at Pass 52]{map}
DE:   #PIs = 354  #Luts =   725  Max Lvl =  21  Avg Lvl =   8.66  [   3.57 sec. at Pass 53]{postMap}
DE:   #PIs = 354  #Luts =   725  Max Lvl =  21  Avg Lvl =   8.66  [   1.77 sec. at Pass 54]{map}
DE:   #PIs = 354  #Luts =   725  Max Lvl =  21  Avg Lvl =   8.66  [   2.49 sec. at Pass 55]{postMap}
DE:   #PIs = 354  #Luts =   725  Max Lvl =  21  Avg Lvl =   8.66  [   0.46 sec. at Pass 56]{finalMap}

yosys> opt_expr

3.146. Executing OPT_EXPR pass (perform const folding).
Optimizing module b14.

yosys> opt_merge -nomux

3.147. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\b14'.
<suppressed ~6 debug messages>
Removed a total of 2 cells.

yosys> opt_muxtree

3.148. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \b14..
  Creating internal representation of mux trees.
  No muxes found in this module.
Removed 0 multiplexer ports.

yosys> opt_reduce

3.149. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \b14.
Performed a total of 0 changes.

yosys> opt_merge

3.150. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\b14'.
Removed a total of 0 cells.

yosys> opt_share

3.151. Executing OPT_SHARE pass.

yosys> opt_dff -nosdff -nodffe

3.152. Executing OPT_DFF pass (perform DFF optimizations).

yosys> opt_clean

3.153. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \b14..
Removed 0 unused cells and 3777 unused wires.
<suppressed ~1 debug messages>

yosys> opt_expr

3.154. Executing OPT_EXPR pass (perform const folding).
Optimizing module b14.
MAX OPT ITERATION = 1

yosys> opt_ffinv

3.155. Executing OPT_FFINV pass (push inverters through FFs).
Discovering LUTs.
Pushed 0 inverters.

yosys> stat

3.156. Printing statistics.

=== b14 ===

   Number of wires:                668
   Number of wire bits:           1555
   Number of public wires:          10
   Number of public wire bits:     150
   Number of memories:               0
   Number of memory bits:            0
   Number of processes:              0
   Number of cells:               1123
     $_DFFE_PP0P_                  178
     $_DFF_PP0_                     37
     $lut                          681
     adder_carry                   227


yosys> shregmap -minlen 8 -maxlen 20

3.157. Executing SHREGMAP pass (map shift registers).
Converted 0 dff cells into 0 shift registers.

yosys> dfflegalize -cell $_DFF_?_ 0 -cell $_DFF_???_ 0 -cell $_DFFE_????_ 0 -cell $_DFFSR_???_ 0 -cell $_DFFSRE_????_ 0 -cell $_DLATCHSR_PPP_ 0

3.158. Executing DFFLEGALIZE pass (convert FFs to types supported by the target).

yosys> stat

3.159. Printing statistics.

=== b14 ===

   Number of wires:                668
   Number of wire bits:           1555
   Number of public wires:          10
   Number of public wire bits:     150
   Number of memories:               0
   Number of memory bits:            0
   Number of processes:              0
   Number of cells:               1123
     $_DFFE_PP0P_                  178
     $_DFF_PP0_                     37
     $lut                          681
     adder_carry                   227


yosys> techmap -map +/techmap.v -map +/rapidsilicon/genesis/ffs_map.v

3.160. Executing TECHMAP pass (map to technology primitives).

3.160.1. Executing Verilog-2005 frontend: /nfs_scratch/scratch/Vorak/aram/Workspace/Raptor/yosys_verific_rs/yosys/install/bin/../share/yosys/techmap.v
Parsing Verilog input from `/nfs_scratch/scratch/Vorak/aram/Workspace/Raptor/yosys_verific_rs/yosys/install/bin/../share/yosys/techmap.v' to AST representation.
Generating RTLIL representation for module `\_90_simplemap_bool_ops'.
Generating RTLIL representation for module `\_90_simplemap_reduce_ops'.
Generating RTLIL representation for module `\_90_simplemap_logic_ops'.
Generating RTLIL representation for module `\_90_simplemap_compare_ops'.
Generating RTLIL representation for module `\_90_simplemap_various'.
Generating RTLIL representation for module `\_90_simplemap_registers'.
Generating RTLIL representation for module `\_90_shift_ops_shr_shl_sshl_sshr'.
Generating RTLIL representation for module `\_90_shift_shiftx'.
Generating RTLIL representation for module `\_90_fa'.
Generating RTLIL representation for module `\_90_lcu'.
Generating RTLIL representation for module `\_90_alu'.
Generating RTLIL representation for module `\_90_macc'.
Generating RTLIL representation for module `\_90_alumacc'.
Generating RTLIL representation for module `\$__div_mod_u'.
Generating RTLIL representation for module `\$__div_mod_trunc'.
Generating RTLIL representation for module `\_90_div'.
Generating RTLIL representation for module `\_90_mod'.
Generating RTLIL representation for module `\$__div_mod_floor'.
Generating RTLIL representation for module `\_90_divfloor'.
Generating RTLIL representation for module `\_90_modfloor'.
Generating RTLIL representation for module `\_90_pow'.
Generating RTLIL representation for module `\_90_pmux'.
Generating RTLIL representation for module `\_90_demux'.
Generating RTLIL representation for module `\_90_lut'.
Successfully finished Verilog frontend.

3.160.2. Executing Verilog-2005 frontend: /nfs_scratch/scratch/Vorak/aram/Workspace/Raptor/yosys_verific_rs/yosys/install/bin/../share/yosys/rapidsilicon/genesis/ffs_map.v
Parsing Verilog input from `/nfs_scratch/scratch/Vorak/aram/Workspace/Raptor/yosys_verific_rs/yosys/install/bin/../share/yosys/rapidsilicon/genesis/ffs_map.v' to AST representation.
Generating RTLIL representation for module `\$_DFF_P_'.
Generating RTLIL representation for module `\$_DFF_PP0_'.
Generating RTLIL representation for module `\$_DFF_PN0_'.
Generating RTLIL representation for module `\$_DFF_PP1_'.
Generating RTLIL representation for module `\$_DFF_PN1_'.
Generating RTLIL representation for module `\$_DFFE_PP_'.
Generating RTLIL representation for module `\$_DFFE_PN_'.
Generating RTLIL representation for module `\$_DFFE_PP0P_'.
Generating RTLIL representation for module `\$_DFFE_PP0N_'.
Generating RTLIL representation for module `\$_DFFE_PN0P_'.
Generating RTLIL representation for module `\$_DFFE_PN0N_'.
Generating RTLIL representation for module `\$_DFFE_PP1P_'.
Generating RTLIL representation for module `\$_DFFE_PP1N_'.
Generating RTLIL representation for module `\$_DFFE_PN1P_'.
Generating RTLIL representation for module `\$_DFFE_PN1N_'.
Generating RTLIL representation for module `\$_DFFSR_PPP_'.
Generating RTLIL representation for module `\$_DFFSR_PNP_'.
Generating RTLIL representation for module `\$_DFFSR_PNN_'.
Generating RTLIL representation for module `\$_DFFSR_PPN_'.
Generating RTLIL representation for module `\$_DFFSR_NPP_'.
Generating RTLIL representation for module `\$_DFFSR_NNP_'.
Generating RTLIL representation for module `\$_DFFSR_NNN_'.
Generating RTLIL representation for module `\$_DFFSR_NPN_'.
Generating RTLIL representation for module `\$_DFFSRE_PPPP_'.
Generating RTLIL representation for module `\$_DFFSRE_PNPP_'.
Generating RTLIL representation for module `\$_DFFSRE_PPNP_'.
Generating RTLIL representation for module `\$_DFFSRE_PNNP_'.
Generating RTLIL representation for module `\$_DFFSRE_PPPN_'.
Generating RTLIL representation for module `\$_DFFSRE_PNPN_'.
Generating RTLIL representation for module `\$_DFFSRE_PPNN_'.
Generating RTLIL representation for module `\$_DFFSRE_PNNN_'.
Generating RTLIL representation for module `\$_DLATCHSR_PPP_'.
Generating RTLIL representation for module `\$_DLATCHSR_NPP_'.
Generating RTLIL representation for module `\$_DFF_N_'.
Generating RTLIL representation for module `\$_DFF_NP0_'.
Generating RTLIL representation for module `\$_DFF_NN0_'.
Generating RTLIL representation for module `\$_DFF_NP1_'.
Generating RTLIL representation for module `\$_DFF_NN1_'.
Generating RTLIL representation for module `\$_DFFE_NP_'.
Generating RTLIL representation for module `\$_DFFE_NN_'.
Generating RTLIL representation for module `\$_DFFE_NP0P_'.
Generating RTLIL representation for module `\$_DFFE_NP0N_'.
Generating RTLIL representation for module `\$_DFFE_NN0P_'.
Generating RTLIL representation for module `\$_DFFE_NN0N_'.
Generating RTLIL representation for module `\$_DFFE_NP1P_'.
Generating RTLIL representation for module `\$_DFFE_NP1N_'.
Generating RTLIL representation for module `\$_DFFE_NN1P_'.
Generating RTLIL representation for module `\$_DFFE_NN1N_'.
Generating RTLIL representation for module `\$_DFFSRE_NPPP_'.
Generating RTLIL representation for module `\$_DFFSRE_NNPP_'.
Generating RTLIL representation for module `\$_DFFSRE_NPNP_'.
Generating RTLIL representation for module `\$_DFFSRE_NNNP_'.
Generating RTLIL representation for module `\$_DFFSRE_NPPN_'.
Generating RTLIL representation for module `\$_DFFSRE_NNPN_'.
Generating RTLIL representation for module `\$_DFFSRE_NPNN_'.
Generating RTLIL representation for module `\$_DFFSRE_NNNN_'.
Generating RTLIL representation for module `\$__SHREG_DFF_P_'.
Generating RTLIL representation for module `\$_SDFF_PP0_'.
Generating RTLIL representation for module `\$_SDFF_PN0_'.
Generating RTLIL representation for module `\$_SDFF_NP0_'.
Generating RTLIL representation for module `\$_SDFF_NN0_'.
Generating RTLIL representation for module `\$_SDFF_PP1_'.
Generating RTLIL representation for module `\$_SDFF_PN1_'.
Generating RTLIL representation for module `\$_SDFF_NP1_'.
Generating RTLIL representation for module `\$_SDFF_NN1_'.
Successfully finished Verilog frontend.

3.160.3. Continuing TECHMAP pass.
Using extmapper simplemap for cells of type $lut.
Using template \$_DFFE_PP0P_ for cells of type $_DFFE_PP0P_.
Using template \$_DFF_PP0_ for cells of type $_DFF_PP0_.
Using extmapper simplemap for cells of type $logic_not.
No more expansions possible.
<suppressed ~1247 debug messages>

yosys> opt_expr -mux_undef

3.161. Executing OPT_EXPR pass (perform const folding).
Optimizing module b14.
<suppressed ~13250 debug messages>

yosys> simplemap

3.162. Executing SIMPLEMAP pass (map simple cells to gate primitives).

yosys> opt_expr

3.163. Executing OPT_EXPR pass (perform const folding).
Optimizing module b14.

yosys> opt_merge

3.164. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\b14'.
<suppressed ~6759 debug messages>
Removed a total of 2253 cells.

yosys> opt_dff -nodffe -nosdff

3.165. Executing OPT_DFF pass (perform DFF optimizations).

yosys> opt_clean

3.166. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \b14..
Removed 0 unused cells and 2674 unused wires.
<suppressed ~1 debug messages>

yosys> opt_expr

3.167. Executing OPT_EXPR pass (perform const folding).
Optimizing module b14.
<suppressed ~439 debug messages>

yosys> opt_merge -nomux

3.168. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\b14'.
<suppressed ~12 debug messages>
Removed a total of 4 cells.

yosys> opt_muxtree

3.169. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \b14..
  Creating internal representation of mux trees.
  No muxes found in this module.
Removed 0 multiplexer ports.

yosys> opt_reduce

3.170. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \b14.
Performed a total of 0 changes.

yosys> opt_merge

3.171. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\b14'.
Removed a total of 0 cells.

yosys> opt_share

3.172. Executing OPT_SHARE pass.

yosys> opt_dff -nosdff -nodffe

3.173. Executing OPT_DFF pass (perform DFF optimizations).

yosys> opt_clean

3.174. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \b14..
Removed 0 unused cells and 100 unused wires.
<suppressed ~1 debug messages>

yosys> opt_expr

3.175. Executing OPT_EXPR pass (perform const folding).
Optimizing module b14.
MAX OPT ITERATION = 1

yosys> abc -script /tmp/yosys_0BPnqk/abc_tmp_2.scr

3.176. Executing ABC pass (technology mapping using ABC).

3.176.1. Extracting gate netlist of module `\b14' to `<abc-temp-dir>/input.blif'..
Extracted 2334 gates and 2689 wires to a netlist network with 353 inputs and 396 outputs.

3.176.1.1. Executing ABC.
DE:   #PIs = 353  #Luts =   703  Max Lvl =  11  Avg Lvl =   5.31  [   0.26 sec. at Pass 0]{firstMap}
DE:   #PIs = 353  #Luts =   685  Max Lvl =  22  Avg Lvl =   8.83  [   5.74 sec. at Pass 1]{initMapFlow}
DE:   #PIs = 353  #Luts =   680  Max Lvl =  21  Avg Lvl =   8.52  [   1.30 sec. at Pass 2]{map}
DE:   #PIs = 353  #Luts =   680  Max Lvl =  21  Avg Lvl =   8.52  [   1.99 sec. at Pass 3]{postMap}
DE:   #PIs = 353  #Luts =   680  Max Lvl =  21  Avg Lvl =   8.52  [   1.79 sec. at Pass 4]{map}
DE:   #PIs = 353  #Luts =   680  Max Lvl =  21  Avg Lvl =   8.52  [   3.48 sec. at Pass 5]{postMap}
DE:   #PIs = 353  #Luts =   680  Max Lvl =  21  Avg Lvl =   8.52  [   0.74 sec. at Pass 6]{finalMap}

yosys> opt_expr

3.177. Executing OPT_EXPR pass (perform const folding).
Optimizing module b14.

yosys> opt_merge -nomux

3.178. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\b14'.
Removed a total of 0 cells.

yosys> opt_muxtree

3.179. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \b14..
  Creating internal representation of mux trees.
  No muxes found in this module.
Removed 0 multiplexer ports.

yosys> opt_reduce

3.180. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \b14.
Performed a total of 0 changes.

yosys> opt_merge

3.181. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\b14'.
Removed a total of 0 cells.

yosys> opt_share

3.182. Executing OPT_SHARE pass.

yosys> opt_dff -nosdff -nodffe

3.183. Executing OPT_DFF pass (perform DFF optimizations).

yosys> opt_clean

3.184. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \b14..
Removed 0 unused cells and 2210 unused wires.
<suppressed ~1 debug messages>

yosys> opt_expr

3.185. Executing OPT_EXPR pass (perform const folding).
Optimizing module b14.
MAX OPT ITERATION = 1

yosys> hierarchy -check

3.186. Executing HIERARCHY pass (managing design hierarchy).

3.186.1. Analyzing design hierarchy..
Top module:  \b14

3.186.2. Analyzing design hierarchy..
Top module:  \b14
Removed 0 unused modules.

yosys> stat

3.187. Printing statistics.

=== b14 ===

   Number of wires:                667
   Number of wire bits:           1554
   Number of public wires:          10
   Number of public wire bits:     150
   Number of memories:               0
   Number of memory bits:            0
   Number of processes:              0
   Number of cells:               1122
     $lut                          680
     adder_carry                   227
     dffsre                        215


yosys> opt_clean -purge

3.188. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \b14..

yosys> write_verilog -noattr -nohex synthesized.v

3.189. Executing Verilog backend.
Dumping module `\b14'.

Warnings: 5 unique messages, 6 total
End of script. Logfile hash: 5579c4f3f1, CPU: user 12.19s system 0.10s, MEM: 75.00 MB peak
Yosys 0.18+10 (git sha1 7361c89db, gcc 9.4.0-1ubuntu1~20.04.1 -fPIC -Os)
Time spent: 98% 6x abc (857 sec), 0% 42x opt_expr (3 sec), ...
real 220.73
user 798.77
sys 69.90
