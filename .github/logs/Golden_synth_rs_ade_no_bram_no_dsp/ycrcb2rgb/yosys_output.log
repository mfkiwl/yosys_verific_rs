
 /----------------------------------------------------------------------------\
 |                                                                            |
 |  yosys -- Yosys Open SYnthesis Suite                                       |
 |                                                                            |
 |  Copyright (C) 2012 - 2020  Claire Xenia Wolf <claire@yosyshq.com>         |
 |                                                                            |
 |  Permission to use, copy, modify, and/or distribute this software for any  |
 |  purpose with or without fee is hereby granted, provided that the above    |
 |  copyright notice and this permission notice appear in all copies.         |
 |                                                                            |
 |  THE SOFTWARE IS PROVIDED "AS IS" AND THE AUTHOR DISCLAIMS ALL WARRANTIES  |
 |  WITH REGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF          |
 |  MERCHANTABILITY AND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR   |
 |  ANY SPECIAL, DIRECT, INDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES    |
 |  WHATSOEVER RESULTING FROM LOSS OF USE, DATA OR PROFITS, WHETHER IN AN     |
 |  ACTION OF CONTRACT, NEGLIGENCE OR OTHER TORTIOUS ACTION, ARISING OUT OF   |
 |  OR IN CONNECTION WITH THE USE OR PERFORMANCE OF THIS SOFTWARE.            |
 |                                                                            |
 \----------------------------------------------------------------------------/

 Yosys-Verific 0.0.92
 Yosys 0.18+10 (git sha1 7361c89db, gcc 9.4.0-1ubuntu1~20.04.1 -fPIC -Os)


-- Executing script file `yosys.ys' --
echo on

yosys> plugin -i synth-rs

yosys> read -verific

yosys> read -incdir .

yosys> verific -vlog-incdir .

1. Executing VERIFIC (loading SystemVerilog and VHDL designs using Verific).
Built with Verific May22_SW_Release, released at Wed Jun  1 05:39:28 2022.

yosys> verilog_defaults -add -I.

yosys> read -vlog2k ycrcb2rgb.v

yosys> verific -vlog2k ycrcb2rgb.v

2. Executing VERIFIC (loading SystemVerilog and VHDL designs using Verific).
Built with Verific May22_SW_Release, released at Wed Jun  1 05:39:28 2022.
VERIFIC-COMMENT [VERI-1482] Analyzing Verilog file 'ycrcb2rgb.v'

yosys> synth_rs -top top -tech genesis -goal area -de -no_dsp -no_bram -verilog synthesized.v

3. Executing synth_rs pass: v0.4.79

yosys> read_verilog -lib -specify -nomem2reg +/rapidsilicon/common/cells_sim.v +/rapidsilicon/genesis/cells_sim.v +/rapidsilicon/genesis/dsp_sim.v

3.1. Executing Verilog-2005 frontend: /nfs_scratch/scratch/Vorak/aram/Workspace/Raptor/yosys_verific_rs/yosys/install/bin/../share/yosys/rapidsilicon/common/cells_sim.v
Parsing Verilog input from `/nfs_scratch/scratch/Vorak/aram/Workspace/Raptor/yosys_verific_rs/yosys/install/bin/../share/yosys/rapidsilicon/common/cells_sim.v' to AST representation.
Generating RTLIL representation for module `\inv'.
Generating RTLIL representation for module `\buff'.
Generating RTLIL representation for module `\logic_0'.
Generating RTLIL representation for module `\logic_1'.
Generating RTLIL representation for module `\gclkbuff'.
Successfully finished Verilog frontend.

3.2. Executing Verilog-2005 frontend: /nfs_scratch/scratch/Vorak/aram/Workspace/Raptor/yosys_verific_rs/yosys/install/bin/../share/yosys/rapidsilicon/genesis/cells_sim.v
Parsing Verilog input from `/nfs_scratch/scratch/Vorak/aram/Workspace/Raptor/yosys_verific_rs/yosys/install/bin/../share/yosys/rapidsilicon/genesis/cells_sim.v' to AST representation.
Generating RTLIL representation for module `\dffsre'.
Generating RTLIL representation for module `\dffnsre'.
Generating RTLIL representation for module `\latchsre'.
Generating RTLIL representation for module `\latchnsre'.
Generating RTLIL representation for module `\io_scff'.
Generating RTLIL representation for module `\scff'.
Generating RTLIL representation for module `\sh_dff'.
Generating RTLIL representation for module `\adder_carry'.
Generating RTLIL representation for module `\sdffr'.
Generating RTLIL representation for module `\sdffs'.
Generating RTLIL representation for module `\TDP_BRAM18'.
Generating RTLIL representation for module `\TDP36K'.
Generating RTLIL representation for module `\BRAM2x18_TDP'.
Generating RTLIL representation for module `\BRAM2x18_SDP'.
Generating RTLIL representation for module `\_$_mem_v2_asymmetric'.
Successfully finished Verilog frontend.

3.3. Executing Verilog-2005 frontend: /nfs_scratch/scratch/Vorak/aram/Workspace/Raptor/yosys_verific_rs/yosys/install/bin/../share/yosys/rapidsilicon/genesis/dsp_sim.v
Parsing Verilog input from `/nfs_scratch/scratch/Vorak/aram/Workspace/Raptor/yosys_verific_rs/yosys/install/bin/../share/yosys/rapidsilicon/genesis/dsp_sim.v' to AST representation.
Generating RTLIL representation for module `\RS_DSP1'.
Generating RTLIL representation for module `\RS_DSP2'.
Generating RTLIL representation for module `\RS_DSP2_MULT'.
Generating RTLIL representation for module `\RS_DSP2_MULT_REGIN'.
Generating RTLIL representation for module `\RS_DSP2_MULT_REGOUT'.
Generating RTLIL representation for module `\RS_DSP2_MULT_REGIN_REGOUT'.
Generating RTLIL representation for module `\RS_DSP2_MULTADD'.
Generating RTLIL representation for module `\RS_DSP2_MULTADD_REGIN'.
Generating RTLIL representation for module `\RS_DSP2_MULTADD_REGOUT'.
Generating RTLIL representation for module `\RS_DSP2_MULTADD_REGIN_REGOUT'.
Generating RTLIL representation for module `\RS_DSP2_MULTACC'.
Generating RTLIL representation for module `\RS_DSP2_MULTACC_REGIN'.
Generating RTLIL representation for module `\RS_DSP2_MULTACC_REGOUT'.
Generating RTLIL representation for module `\RS_DSP2_MULTACC_REGIN_REGOUT'.
Generating RTLIL representation for module `\dsp_t1_20x18x64_cfg_ports'.
Generating RTLIL representation for module `\dsp_t1_10x9x32_cfg_ports'.
Generating RTLIL representation for module `\dsp_t1_sim_cfg_ports'.
Generating RTLIL representation for module `\RS_DSP3'.
Generating RTLIL representation for module `\RS_DSP3_MULT'.
Generating RTLIL representation for module `\RS_DSP3_MULT_REGIN'.
Generating RTLIL representation for module `\RS_DSP3_MULT_REGOUT'.
Generating RTLIL representation for module `\RS_DSP3_MULT_REGIN_REGOUT'.
Generating RTLIL representation for module `\RS_DSP3_MULTADD'.
Generating RTLIL representation for module `\RS_DSP3_MULTADD_REGIN'.
Generating RTLIL representation for module `\RS_DSP3_MULTADD_REGOUT'.
Generating RTLIL representation for module `\RS_DSP3_MULTADD_REGIN_REGOUT'.
Generating RTLIL representation for module `\RS_DSP3_MULTACC'.
Generating RTLIL representation for module `\RS_DSP3_MULTACC_REGIN'.
Generating RTLIL representation for module `\RS_DSP3_MULTACC_REGOUT'.
Generating RTLIL representation for module `\RS_DSP3_MULTACC_REGIN_REGOUT'.
Generating RTLIL representation for module `\dsp_t1_20x18x64_cfg_params'.
Generating RTLIL representation for module `\dsp_t1_10x9x32_cfg_params'.
Generating RTLIL representation for module `\dsp_t1_sim_cfg_params'.
Successfully finished Verilog frontend.

yosys> hierarchy -check -top top

3.4. Executing HIERARCHY pass (managing design hierarchy).
VERIFIC-INFO [VERI-1018] ycrcb2rgb.v:57: compiling module 'top'
VERIFIC-WARNING [VERI-2371] ycrcb2rgb.v:98: delay control is not supported for synthesis
VERIFIC-WARNING [VERI-2371] ycrcb2rgb.v:99: delay control is not supported for synthesis
VERIFIC-WARNING [VERI-2371] ycrcb2rgb.v:100: delay control is not supported for synthesis
VERIFIC-WARNING [VERI-2371] ycrcb2rgb.v:109: delay control is not supported for synthesis
VERIFIC-WARNING [VERI-2371] ycrcb2rgb.v:111: delay control is not supported for synthesis
VERIFIC-WARNING [VERI-2371] ycrcb2rgb.v:120: delay control is not supported for synthesis
VERIFIC-WARNING [VERI-2371] ycrcb2rgb.v:121: delay control is not supported for synthesis
VERIFIC-WARNING [VERI-2371] ycrcb2rgb.v:123: delay control is not supported for synthesis
VERIFIC-WARNING [VERI-2371] ycrcb2rgb.v:132: delay control is not supported for synthesis
VERIFIC-WARNING [VERI-2371] ycrcb2rgb.v:134: delay control is not supported for synthesis
VERIFIC-WARNING [VERI-2371] ycrcb2rgb.v:144: delay control is not supported for synthesis
VERIFIC-WARNING [VERI-2371] ycrcb2rgb.v:147: delay control is not supported for synthesis
VERIFIC-WARNING [VERI-2371] ycrcb2rgb.v:150: delay control is not supported for synthesis
Importing module top.

3.4.1. Analyzing design hierarchy..
Top module:  \top

3.4.2. Analyzing design hierarchy..
Top module:  \top
Removed 0 unused modules.

yosys> proc

3.5. Executing PROC pass (convert processes to netlists).

yosys> proc_clean

3.5.1. Executing PROC_CLEAN pass (remove empty switches from decision trees).
Cleaned up 0 empty switches.

yosys> proc_rmdead

3.5.2. Executing PROC_RMDEAD pass (remove dead branches from decision trees).
Removed a total of 0 dead cases.

yosys> proc_prune

3.5.3. Executing PROC_PRUNE pass (remove redundant assignments in processes).
Removed 0 redundant assignments.
Promoted 0 assignments to connections.

yosys> proc_init

3.5.4. Executing PROC_INIT pass (extract init attributes).

yosys> proc_arst

3.5.5. Executing PROC_ARST pass (detect async resets in processes).

yosys> proc_rom

3.5.6. Executing PROC_ROM pass (convert switches to ROMs).
Converted 0 switches.

yosys> proc_mux

3.5.7. Executing PROC_MUX pass (convert decision trees to multiplexers).

yosys> proc_dlatch

3.5.8. Executing PROC_DLATCH pass (convert process syncs to latches).

yosys> proc_dff

3.5.9. Executing PROC_DFF pass (convert process syncs to FFs).

yosys> proc_memwr

3.5.10. Executing PROC_MEMWR pass (convert process memory writes to cells).

yosys> proc_clean

3.5.11. Executing PROC_CLEAN pass (remove empty switches from decision trees).
Cleaned up 0 empty switches.

yosys> opt_expr -keepdc

3.5.12. Executing OPT_EXPR pass (perform const folding).
Optimizing module top.

yosys> bmuxmap

3.6. Executing BMUXMAP pass.

yosys> demuxmap

3.7. Executing DEMUXMAP pass.

yosys> clean_zerowidth

yosys> flatten

3.8. Executing FLATTEN pass (flatten design).

yosys> bmuxmap

3.9. Executing BMUXMAP pass.

yosys> demuxmap

3.10. Executing DEMUXMAP pass.

yosys> clean_zerowidth

yosys> tribuf -logic -formal

3.11. Executing TRIBUF pass.

yosys> deminout

3.12. Executing DEMINOUT pass (demote inout ports to input or output).

yosys> opt_expr

3.13. Executing OPT_EXPR pass (perform const folding).
Optimizing module top.
<suppressed ~3 debug messages>

yosys> opt_clean

3.14. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \top..
Removed 0 unused cells and 16 unused wires.
<suppressed ~14 debug messages>

yosys> check

3.15. Executing CHECK pass (checking for obvious problems).
Checking module top...
Found and reported 0 problems.

yosys> opt_expr

3.16. Executing OPT_EXPR pass (perform const folding).
Optimizing module top.

yosys> opt_merge -nomux

3.17. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\top'.
Removed a total of 0 cells.

yosys> opt_muxtree

3.18. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \top..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Removed 0 multiplexer ports.
<suppressed ~13 debug messages>

yosys> opt_reduce

3.19. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \top.
Performed a total of 0 changes.

yosys> opt_merge

3.20. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\top'.
Removed a total of 0 cells.

yosys> opt_share

3.21. Executing OPT_SHARE pass.

yosys> opt_dff -nosdff -nodffe

3.22. Executing OPT_DFF pass (perform DFF optimizations).
Removing never-active async load on $verific$rm_reg$ycrcb2rgb.v:112$79 ($aldff) from module top.
Removing never-active async load on $verific$r_reg$ycrcb2rgb.v:151$120 ($aldff) from module top.
Removing never-active async load on $verific$ir_reg$ycrcb2rgb.v:112$80 ($aldff) from module top.
Removing never-active async load on $verific$ig_reg$ycrcb2rgb.v:124$93 ($aldff) from module top.
Removing never-active async load on $verific$ib_reg$ycrcb2rgb.v:135$102 ($aldff) from module top.
Removing never-active async load on $verific$gm2_reg$ycrcb2rgb.v:124$92 ($aldff) from module top.
Removing never-active async load on $verific$gm1_reg$ycrcb2rgb.v:124$91 ($aldff) from module top.
Removing never-active async load on $verific$g_reg$ycrcb2rgb.v:151$121 ($aldff) from module top.
Removing never-active async load on $verific$dy_reg$ycrcb2rgb.v:101$69 ($aldff) from module top.
Removing never-active async load on $verific$dcr_reg$ycrcb2rgb.v:101$70 ($aldff) from module top.
Removing never-active async load on $verific$dcb_reg$ycrcb2rgb.v:101$71 ($aldff) from module top.
Removing never-active async load on $verific$bm_reg$ycrcb2rgb.v:135$101 ($aldff) from module top.
Removing never-active async load on $verific$b_reg$ycrcb2rgb.v:151$122 ($aldff) from module top.

yosys> opt_clean

3.23. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \top..

yosys> opt_expr

3.24. Executing OPT_EXPR pass (perform const folding).
Optimizing module top.
MAX OPT ITERATION = 1

yosys> fsm -encoding binary

3.25. Executing FSM pass (extract and optimize FSM).

yosys> fsm_detect

3.25.1. Executing FSM_DETECT pass (finding FSMs in design).

yosys> fsm_extract

3.25.2. Executing FSM_EXTRACT pass (extracting FSM from design).

yosys> fsm_opt

3.25.3. Executing FSM_OPT pass (simple optimizations of FSMs).

yosys> opt_clean

3.25.4. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \top..

yosys> fsm_opt

3.25.5. Executing FSM_OPT pass (simple optimizations of FSMs).

yosys> fsm_recode -encoding binary

3.25.6. Executing FSM_RECODE pass (re-assigning FSM state encoding).

yosys> fsm_info

3.25.7. Executing FSM_INFO pass (dumping all available information on FSM cells).

yosys> fsm_map

3.25.8. Executing FSM_MAP pass (mapping FSMs to basic logic).

yosys> opt_expr

3.26. Executing OPT_EXPR pass (perform const folding).
Optimizing module top.

yosys> opt_merge -nomux

3.27. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\top'.
Removed a total of 0 cells.

yosys> opt_muxtree

3.28. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \top..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Removed 0 multiplexer ports.
<suppressed ~13 debug messages>

yosys> opt_reduce

3.29. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \top.
Performed a total of 0 changes.

yosys> opt_merge

3.30. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\top'.
Removed a total of 0 cells.

yosys> opt_share

3.31. Executing OPT_SHARE pass.

yosys> opt_dff -nosdff -sat

3.32. Executing OPT_DFF pass (perform DFF optimizations).
Adding EN signal on $verific$rm_reg$ycrcb2rgb.v:112$79 ($dff) from module top (D = { 1'0 $verific$n105$24 [18:2] 2'00 }, Q = \rm).
Adding EN signal on $verific$r_reg$ycrcb2rgb.v:151$120 ($dff) from module top (D = $verific$n768$49, Q = \r).
Adding EN signal on $verific$ir_reg$ycrcb2rgb.v:112$80 ($dff) from module top (D = { 1'0 $verific$n158$5 $verific$n159$27 \rm [9:0] }, Q = \ir).
Adding EN signal on $verific$ig_reg$ycrcb2rgb.v:124$93 ($dff) from module top (D = { $verific$n391$36 [21] $verific$n391$36 }, Q = \ig).
Adding EN signal on $verific$ib_reg$ycrcb2rgb.v:135$102 ($dff) from module top (D = { 1'0 $verific$n625$8 $verific$n626$44 \bm [9:0] }, Q = \ib).
Adding EN signal on $verific$gm2_reg$ycrcb2rgb.v:124$92 ($dff) from module top (D = $verific$n327$33, Q = \gm2).
Adding EN signal on $verific$gm1_reg$ycrcb2rgb.v:124$91 ($dff) from module top (D = { 1'0 $verific$n286$31 [18:5] 5'00000 }, Q = \gm1).
Adding EN signal on $verific$g_reg$ycrcb2rgb.v:151$121 ($dff) from module top (D = $verific$n805$52, Q = \g).
Adding EN signal on $verific$dy_reg$ycrcb2rgb.v:101$69 ($dff) from module top (D = \y, Q = \dy).
Adding EN signal on $verific$dcr_reg$ycrcb2rgb.v:101$70 ($dff) from module top (D = \cr, Q = \dcr).
Adding EN signal on $verific$dcb_reg$ycrcb2rgb.v:101$71 ($dff) from module top (D = \cb, Q = \dcb).
Adding EN signal on $verific$bm_reg$ycrcb2rgb.v:135$101 ($dff) from module top (D = { $verific$n571$41 [19:2] 2'00 }, Q = \bm).
Adding EN signal on $verific$b_reg$ycrcb2rgb.v:151$122 ($dff) from module top (D = $verific$n842$55, Q = \b).
Setting constant 0-bit at position 0 on $auto$ff.cc:262:slice$135 ($dffe) from module top.
Setting constant 0-bit at position 1 on $auto$ff.cc:262:slice$135 ($dffe) from module top.
Setting constant 0-bit at position 0 on $auto$ff.cc:262:slice$130 ($dffe) from module top.
Setting constant 0-bit at position 1 on $auto$ff.cc:262:slice$130 ($dffe) from module top.
Setting constant 0-bit at position 2 on $auto$ff.cc:262:slice$130 ($dffe) from module top.
Setting constant 0-bit at position 3 on $auto$ff.cc:262:slice$130 ($dffe) from module top.
Setting constant 0-bit at position 4 on $auto$ff.cc:262:slice$130 ($dffe) from module top.
Setting constant 0-bit at position 19 on $auto$ff.cc:262:slice$130 ($dffe) from module top.
Setting constant 0-bit at position 22 on $auto$ff.cc:262:slice$128 ($dffe) from module top.
Setting constant 0-bit at position 22 on $auto$ff.cc:262:slice$126 ($dffe) from module top.
Setting constant 0-bit at position 0 on $auto$ff.cc:262:slice$124 ($dffe) from module top.
Setting constant 0-bit at position 1 on $auto$ff.cc:262:slice$124 ($dffe) from module top.
Setting constant 0-bit at position 19 on $auto$ff.cc:262:slice$124 ($dffe) from module top.

yosys> opt_clean

3.33. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \top..
Removed 13 unused cells and 13 unused wires.
<suppressed ~14 debug messages>

yosys> opt_expr

3.34. Executing OPT_EXPR pass (perform const folding).
Optimizing module top.
<suppressed ~2 debug messages>

yosys> opt_muxtree

3.35. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \top..
  Creating internal representation of mux trees.
  No muxes found in this module.
Removed 0 multiplexer ports.

yosys> opt_reduce

3.36. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \top.
Performed a total of 0 changes.

yosys> opt_merge

3.37. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\top'.
Removed a total of 0 cells.

yosys> opt_share

3.38. Executing OPT_SHARE pass.

yosys> opt_dff -nosdff -sat

3.39. Executing OPT_DFF pass (perform DFF optimizations).
Setting constant 0-bit at position 0 on $auto$ff.cc:262:slice$139 ($dffe) from module top.
Setting constant 0-bit at position 1 on $auto$ff.cc:262:slice$139 ($dffe) from module top.
Setting constant 0-bit at position 0 on $auto$ff.cc:262:slice$140 ($dffe) from module top.
Setting constant 0-bit at position 1 on $auto$ff.cc:262:slice$140 ($dffe) from module top.

yosys> opt_clean

3.40. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \top..
Removed 0 unused cells and 2 unused wires.
<suppressed ~1 debug messages>

yosys> opt_expr

3.41. Executing OPT_EXPR pass (perform const folding).
Optimizing module top.
MAX OPT ITERATION = 2

yosys> wreduce -keepdc

3.42. Executing WREDUCE pass (reducing word size of cells).
Removed top 2 bits (of 11) from port B of cell top.$verific$add_17$ycrcb2rgb.v:111$75 ($add).
Removed top 1 bits (of 23) from FF cell top.$auto$ff.cc:262:slice$127 ($dffe).
Removed top 1 bits (of 20) from port A of cell top.$verific$add_28$ycrcb2rgb.v:123$85 ($add).
Removed top 2 bits (of 22) from port A of cell top.$verific$sub_29$ycrcb2rgb.v:123$86 ($sub).
Removed top 1 bits (of 22) from port B of cell top.$verific$sub_29$ycrcb2rgb.v:123$86 ($sub).
Removed top 1 bits (of 11) from port B of cell top.$verific$add_41$ycrcb2rgb.v:134$97 ($add).
Removed top 1 bits (of 20) from wire top.gm1.
Removed top 1 bits (of 23) from wire top.ib.
Removed top 3 bits (of 23) from wire top.ig.
Removed top 1 bits (of 23) from wire top.ir.
Removed top 5 bits (of 20) from wire top.rm.

yosys> peepopt

3.43. Executing PEEPOPT pass (run peephole optimizers).

yosys> opt_clean

3.44. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \top..
Removed 0 unused cells and 3 unused wires.
<suppressed ~1 debug messages>

yosys> bmuxmap

3.45. Executing BMUXMAP pass.

yosys> demuxmap

3.46. Executing DEMUXMAP pass.

yosys> clean_zerowidth

yosys> alumacc

3.47. Executing ALUMACC pass (create $alu and $macc cells).
Extracting $alu and $macc cells in module top:
  creating $macc model for $verific$add_16$ycrcb2rgb.v:111$74 ($add).
  creating $macc model for $verific$add_17$ycrcb2rgb.v:111$75 ($add).
  creating $macc model for $verific$add_28$ycrcb2rgb.v:123$85 ($add).
  creating $macc model for $verific$add_40$ycrcb2rgb.v:134$96 ($add).
  creating $macc model for $verific$add_41$ycrcb2rgb.v:134$97 ($add).
  creating $macc model for $verific$mult_14$ycrcb2rgb.v:109$72 ($mul).
  creating $macc model for $verific$mult_24$ycrcb2rgb.v:120$81 ($mul).
  creating $macc model for $verific$mult_26$ycrcb2rgb.v:121$83 ($mul).
  creating $macc model for $verific$mult_38$ycrcb2rgb.v:132$94 ($mul).
  creating $macc model for $verific$sub_29$ycrcb2rgb.v:123$86 ($sub).
  merging $macc model for $verific$add_28$ycrcb2rgb.v:123$85 into $verific$sub_29$ycrcb2rgb.v:123$86.
  merging $macc model for $verific$add_40$ycrcb2rgb.v:134$96 into $verific$add_41$ycrcb2rgb.v:134$97.
  merging $macc model for $verific$add_16$ycrcb2rgb.v:111$74 into $verific$add_17$ycrcb2rgb.v:111$75.
  creating $macc cell for $verific$mult_24$ycrcb2rgb.v:120$81: $auto$alumacc.cc:365:replace_macc$149
  creating $macc cell for $verific$mult_14$ycrcb2rgb.v:109$72: $auto$alumacc.cc:365:replace_macc$150
  creating $macc cell for $verific$add_41$ycrcb2rgb.v:134$97: $auto$alumacc.cc:365:replace_macc$151
  creating $macc cell for $verific$mult_38$ycrcb2rgb.v:132$94: $auto$alumacc.cc:365:replace_macc$152
  creating $macc cell for $verific$mult_26$ycrcb2rgb.v:121$83: $auto$alumacc.cc:365:replace_macc$153
  creating $macc cell for $verific$add_17$ycrcb2rgb.v:111$75: $auto$alumacc.cc:365:replace_macc$154
  creating $macc cell for $verific$sub_29$ycrcb2rgb.v:123$86: $auto$alumacc.cc:365:replace_macc$155
  created 0 $alu and 7 $macc cells.

yosys> opt_expr

3.48. Executing OPT_EXPR pass (perform const folding).
Optimizing module top.

yosys> opt_merge -nomux

3.49. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\top'.
Removed a total of 0 cells.

yosys> opt_muxtree

3.50. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \top..
  Creating internal representation of mux trees.
  No muxes found in this module.
Removed 0 multiplexer ports.

yosys> opt_reduce

3.51. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \top.
Performed a total of 0 changes.

yosys> opt_merge

3.52. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\top'.
Removed a total of 0 cells.

yosys> opt_share

3.53. Executing OPT_SHARE pass.

yosys> opt_dff -nosdff -nodffe

3.54. Executing OPT_DFF pass (perform DFF optimizations).

yosys> opt_clean

3.55. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \top..
Removed 3 unused cells and 6 unused wires.
<suppressed ~4 debug messages>

yosys> opt_expr

3.56. Executing OPT_EXPR pass (perform const folding).
Optimizing module top.

yosys> opt_muxtree

3.57. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \top..
  Creating internal representation of mux trees.
  No muxes found in this module.
Removed 0 multiplexer ports.

yosys> opt_reduce

3.58. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \top.
Performed a total of 0 changes.

yosys> opt_merge

3.59. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\top'.
Removed a total of 0 cells.

yosys> opt_share

3.60. Executing OPT_SHARE pass.

yosys> opt_dff -nosdff -nodffe

3.61. Executing OPT_DFF pass (perform DFF optimizations).

yosys> opt_clean

3.62. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \top..

yosys> opt_expr

3.63. Executing OPT_EXPR pass (perform const folding).
Optimizing module top.
MAX OPT ITERATION = 2

yosys> stat

3.64. Printing statistics.

=== top ===

   Number of wires:                 42
   Number of wire bits:            464
   Number of public wires:          18
   Number of public wire bits:     230
   Number of memories:               0
   Number of memory bits:            0
   Number of processes:              0
   Number of cells:                 30
     $and                            3
     $dffe                          13
     $macc                           7
     $not                            1
     $or                             6


yosys> memory -nomap

3.65. Executing MEMORY pass.

yosys> opt_mem

3.65.1. Executing OPT_MEM pass (optimize memories).
Performed a total of 0 transformations.

yosys> opt_mem_priority

3.65.2. Executing OPT_MEM_PRIORITY pass (removing unnecessary memory write priority relations).
Performed a total of 0 transformations.

yosys> opt_mem_feedback

3.65.3. Executing OPT_MEM_FEEDBACK pass (finding memory read-to-write feedback paths).

yosys> memory_bmux2rom

3.65.4. Executing MEMORY_BMUX2ROM pass (converting muxes to ROMs).

yosys> memory_dff

3.65.5. Executing MEMORY_DFF pass (merging $dff cells to $memrd).

yosys> opt_clean

3.65.6. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \top..

yosys> memory_share

3.65.7. Executing MEMORY_SHARE pass (consolidating $memrd/$memwr cells).

yosys> opt_mem_widen

3.65.8. Executing OPT_MEM_WIDEN pass (optimize memories where all ports are wide).
Performed a total of 0 transformations.

yosys> opt_clean

3.65.9. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \top..

yosys> memory_collect

3.65.10. Executing MEMORY_COLLECT pass (generating $mem cells).

yosys> stat

3.66. Printing statistics.

=== top ===

   Number of wires:                 42
   Number of wire bits:            464
   Number of public wires:          18
   Number of public wire bits:     230
   Number of memories:               0
   Number of memory bits:            0
   Number of processes:              0
   Number of cells:                 30
     $and                            3
     $dffe                          13
     $macc                           7
     $not                            1
     $or                             6


yosys> muxpack

3.67. Executing MUXPACK pass ($mux cell cascades to $pmux).
Converted 0 (p)mux cells into 0 pmux cells.

yosys> opt_clean

3.68. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \top..

yosys> pmuxtree

3.69. Executing PMUXTREE pass.

yosys> muxpack

3.70. Executing MUXPACK pass ($mux cell cascades to $pmux).
Converted 0 (p)mux cells into 0 pmux cells.

yosys> memory_map

3.71. Executing MEMORY_MAP pass (converting memories to logic and flip-flops).

yosys> stat

3.72. Printing statistics.

=== top ===

   Number of wires:                 42
   Number of wire bits:            464
   Number of public wires:          18
   Number of public wire bits:     230
   Number of memories:               0
   Number of memory bits:            0
   Number of processes:              0
   Number of cells:                 30
     $and                            3
     $dffe                          13
     $macc                           7
     $not                            1
     $or                             6


yosys> techmap -map +/techmap.v -map +/rapidsilicon/genesis/arith_map.v

3.73. Executing TECHMAP pass (map to technology primitives).

3.73.1. Executing Verilog-2005 frontend: /nfs_scratch/scratch/Vorak/aram/Workspace/Raptor/yosys_verific_rs/yosys/install/bin/../share/yosys/techmap.v
Parsing Verilog input from `/nfs_scratch/scratch/Vorak/aram/Workspace/Raptor/yosys_verific_rs/yosys/install/bin/../share/yosys/techmap.v' to AST representation.
Generating RTLIL representation for module `\_90_simplemap_bool_ops'.
Generating RTLIL representation for module `\_90_simplemap_reduce_ops'.
Generating RTLIL representation for module `\_90_simplemap_logic_ops'.
Generating RTLIL representation for module `\_90_simplemap_compare_ops'.
Generating RTLIL representation for module `\_90_simplemap_various'.
Generating RTLIL representation for module `\_90_simplemap_registers'.
Generating RTLIL representation for module `\_90_shift_ops_shr_shl_sshl_sshr'.
Generating RTLIL representation for module `\_90_shift_shiftx'.
Generating RTLIL representation for module `\_90_fa'.
Generating RTLIL representation for module `\_90_lcu'.
Generating RTLIL representation for module `\_90_alu'.
Generating RTLIL representation for module `\_90_macc'.
Generating RTLIL representation for module `\_90_alumacc'.
Generating RTLIL representation for module `\$__div_mod_u'.
Generating RTLIL representation for module `\$__div_mod_trunc'.
Generating RTLIL representation for module `\_90_div'.
Generating RTLIL representation for module `\_90_mod'.
Generating RTLIL representation for module `\$__div_mod_floor'.
Generating RTLIL representation for module `\_90_divfloor'.
Generating RTLIL representation for module `\_90_modfloor'.
Generating RTLIL representation for module `\_90_pow'.
Generating RTLIL representation for module `\_90_pmux'.
Generating RTLIL representation for module `\_90_demux'.
Generating RTLIL representation for module `\_90_lut'.
Successfully finished Verilog frontend.

3.73.2. Executing Verilog-2005 frontend: /nfs_scratch/scratch/Vorak/aram/Workspace/Raptor/yosys_verific_rs/yosys/install/bin/../share/yosys/rapidsilicon/genesis/arith_map.v
Parsing Verilog input from `/nfs_scratch/scratch/Vorak/aram/Workspace/Raptor/yosys_verific_rs/yosys/install/bin/../share/yosys/rapidsilicon/genesis/arith_map.v' to AST representation.
Generating RTLIL representation for module `\_80_rs_alu'.
Successfully finished Verilog frontend.

3.73.3. Continuing TECHMAP pass.
Using extmapper simplemap for cells of type $dffe.
Using extmapper maccmap for cells of type $macc.
  add \dy (10 bits, unsigned)
  add \bm [19:10] (10 bits, unsigned)
  add \dcb (10 bits, unsigned)
  add { \dy 10'0000000000 } (20 bits, unsigned)
  sub { \gm1 [18:5] 5'00000 } (19 bits, unsigned)
  sub \gm2 (20 bits, unsigned)
  add \cr * 7'1100111 (10x7 bits, unsigned)
  add \dy (10 bits, unsigned)
  add { $auto$wreduce.cc:455:run$148 [18:15] \rm [14:10] } (9 bits, unsigned)
  add \dcr (10 bits, unsigned)
  add 10'1011011011 * \cr (10x10 bits, unsigned)
  add \cb * 8'11000101 (10x8 bits, unsigned)
  add \cb * 4'1011 (10x4 bits, unsigned)
Using extmapper simplemap for cells of type $and.
Using extmapper simplemap for cells of type $or.
Using extmapper simplemap for cells of type $not.
Using template $paramod\_90_fa\WIDTH=32'00000000000000000000000000001010 for cells of type $fa.
Using template $paramod$ee3d784672cdb1cb32d9a801a3af776716f16b74\_90_alu for cells of type $alu.
Using template $paramod\_90_fa\WIDTH=32'00000000000000000000000000010110 for cells of type $fa.
Using template $paramod$e161c1674351796cd6dd381e70ff05458bfe7755\_90_alu for cells of type $alu.
Using template $paramod\_90_fa\WIDTH=32'00000000000000000000000000010001 for cells of type $fa.
Using template $paramod$3bb72ad0665cdca279bbc49ed6a39f403f16497f\_90_alu for cells of type $alu.
Using template $paramod\_90_fa\WIDTH=32'00000000000000000000000000010100 for cells of type $fa.
Using template $paramod$6fc37af1c109ae54e8aed83fcd995c12d378ce93\_90_alu for cells of type $alu.
Using template $paramod\_90_fa\WIDTH=32'00000000000000000000000000010010 for cells of type $fa.
Using template $paramod$12350b8c8422a70d10b7db4eaae1202a7148b784\_90_alu for cells of type $alu.
Using template $paramod\_90_fa\WIDTH=32'00000000000000000000000000001110 for cells of type $fa.
Using template $paramod$091610cd349a68bd5539cffd7126f0d76e9bca00\_90_alu for cells of type $alu.
Using extmapper simplemap for cells of type $xor.
Using template $paramod\_90_lcu\WIDTH=32'00000000000000000000000000001100 for cells of type $lcu.
Using extmapper simplemap for cells of type $pos.
Using extmapper simplemap for cells of type $mux.
Using template $paramod\_90_lcu\WIDTH=32'00000000000000000000000000010110 for cells of type $lcu.
Using template $paramod\_90_lcu\WIDTH=32'00000000000000000000000000010001 for cells of type $lcu.
Using template $paramod\_90_lcu\WIDTH=32'00000000000000000000000000010100 for cells of type $lcu.
Using template $paramod\_90_lcu\WIDTH=32'00000000000000000000000000010010 for cells of type $lcu.
Using template $paramod\_90_lcu\WIDTH=32'00000000000000000000000000001110 for cells of type $lcu.
No more expansions possible.
<suppressed ~2295 debug messages>

yosys> stat

3.74. Printing statistics.

=== top ===

   Number of wires:                966
   Number of wire bits:          17883
   Number of public wires:          18
   Number of public wire bits:     230
   Number of memories:               0
   Number of memory bits:            0
   Number of processes:              0
   Number of cells:               3970
     $_AND_                       1776
     $_DFFE_PP_                    191
     $_MUX_                        115
     $_NOT_                        160
     $_OR_                         645
     $_XOR_                       1083


yosys> opt_expr

3.75. Executing OPT_EXPR pass (perform const folding).
Optimizing module top.
<suppressed ~2272 debug messages>

yosys> opt_merge -nomux

3.76. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\top'.
<suppressed ~387 debug messages>
Removed a total of 129 cells.

yosys> opt_muxtree

3.77. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \top..
  Creating internal representation of mux trees.
  No muxes found in this module.
Removed 0 multiplexer ports.

yosys> opt_reduce

3.78. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \top.
Performed a total of 0 changes.

yosys> opt_merge

3.79. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\top'.
Removed a total of 0 cells.

yosys> opt_share

3.80. Executing OPT_SHARE pass.

yosys> opt_dff -nosdff -nodffe

3.81. Executing OPT_DFF pass (perform DFF optimizations).

yosys> opt_clean

3.82. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \top..
Removed 174 unused cells and 602 unused wires.
<suppressed ~175 debug messages>

yosys> opt_expr

3.83. Executing OPT_EXPR pass (perform const folding).
Optimizing module top.

yosys> opt_muxtree

3.84. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \top..
  Creating internal representation of mux trees.
  No muxes found in this module.
Removed 0 multiplexer ports.

yosys> opt_reduce

3.85. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \top.
Performed a total of 0 changes.

yosys> opt_merge

3.86. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\top'.
Removed a total of 0 cells.

yosys> opt_share

3.87. Executing OPT_SHARE pass.

yosys> opt_dff -nosdff -nodffe

3.88. Executing OPT_DFF pass (perform DFF optimizations).

yosys> opt_clean

3.89. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \top..

yosys> opt_expr

3.90. Executing OPT_EXPR pass (perform const folding).
Optimizing module top.
MAX OPT ITERATION = 2

yosys> opt_expr -full

3.91. Executing OPT_EXPR pass (perform const folding).
Optimizing module top.
<suppressed ~34 debug messages>

yosys> techmap -map +/techmap.v

3.92. Executing TECHMAP pass (map to technology primitives).

3.92.1. Executing Verilog-2005 frontend: /nfs_scratch/scratch/Vorak/aram/Workspace/Raptor/yosys_verific_rs/yosys/install/bin/../share/yosys/techmap.v
Parsing Verilog input from `/nfs_scratch/scratch/Vorak/aram/Workspace/Raptor/yosys_verific_rs/yosys/install/bin/../share/yosys/techmap.v' to AST representation.
Generating RTLIL representation for module `\_90_simplemap_bool_ops'.
Generating RTLIL representation for module `\_90_simplemap_reduce_ops'.
Generating RTLIL representation for module `\_90_simplemap_logic_ops'.
Generating RTLIL representation for module `\_90_simplemap_compare_ops'.
Generating RTLIL representation for module `\_90_simplemap_various'.
Generating RTLIL representation for module `\_90_simplemap_registers'.
Generating RTLIL representation for module `\_90_shift_ops_shr_shl_sshl_sshr'.
Generating RTLIL representation for module `\_90_shift_shiftx'.
Generating RTLIL representation for module `\_90_fa'.
Generating RTLIL representation for module `\_90_lcu'.
Generating RTLIL representation for module `\_90_alu'.
Generating RTLIL representation for module `\_90_macc'.
Generating RTLIL representation for module `\_90_alumacc'.
Generating RTLIL representation for module `\$__div_mod_u'.
Generating RTLIL representation for module `\$__div_mod_trunc'.
Generating RTLIL representation for module `\_90_div'.
Generating RTLIL representation for module `\_90_mod'.
Generating RTLIL representation for module `\$__div_mod_floor'.
Generating RTLIL representation for module `\_90_divfloor'.
Generating RTLIL representation for module `\_90_modfloor'.
Generating RTLIL representation for module `\_90_pow'.
Generating RTLIL representation for module `\_90_pmux'.
Generating RTLIL representation for module `\_90_demux'.
Generating RTLIL representation for module `\_90_lut'.
Successfully finished Verilog frontend.

3.92.2. Continuing TECHMAP pass.
No more expansions possible.
<suppressed ~71 debug messages>

yosys> opt_expr

3.93. Executing OPT_EXPR pass (perform const folding).
Optimizing module top.

yosys> opt_merge -nomux

3.94. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\top'.
Removed a total of 0 cells.

yosys> opt_muxtree

3.95. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \top..
  Creating internal representation of mux trees.
  No muxes found in this module.
Removed 0 multiplexer ports.

yosys> opt_reduce

3.96. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \top.
Performed a total of 0 changes.

yosys> opt_merge

3.97. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\top'.
Removed a total of 0 cells.

yosys> opt_dff -nosdff -nodffe -sat

3.98. Executing OPT_DFF pass (perform DFF optimizations).

yosys> opt_clean

3.99. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \top..

yosys> opt_expr

3.100. Executing OPT_EXPR pass (perform const folding).
Optimizing module top.
MAX OPT ITERATION = 1

yosys> abc -dff

3.101. Executing ABC pass (technology mapping using ABC).

3.101.1. Summary of detected clock domains:
  1402 cells in clk=\clk, en=\ena, arst={ }, srst={ }

3.101.2. Extracting gate netlist of module `\top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk, enabled by \ena
Extracted 1402 gates and 1432 wires to a netlist network with 30 inputs and 30 outputs.

3.101.2.1. Executing ABC.

yosys> abc -dff

3.102. Executing ABC pass (technology mapping using ABC).

3.102.1. Summary of detected clock domains:
  1110 cells in clk=\clk, en=\ena, arst={ }, srst={ }

3.102.2. Extracting gate netlist of module `\top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk, enabled by \ena
Extracted 1110 gates and 1140 wires to a netlist network with 30 inputs and 30 outputs.

3.102.2.1. Executing ABC.

yosys> abc -dff

3.103. Executing ABC pass (technology mapping using ABC).

3.103.1. Summary of detected clock domains:
  1087 cells in clk=\clk, en=\ena, arst={ }, srst={ }

3.103.2. Extracting gate netlist of module `\top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk, enabled by \ena
Extracted 1087 gates and 1117 wires to a netlist network with 30 inputs and 30 outputs.

3.103.2.1. Executing ABC.

yosys> abc -dff

3.104. Executing ABC pass (technology mapping using ABC).

3.104.1. Summary of detected clock domains:
  1080 cells in clk=\clk, en=\ena, arst={ }, srst={ }

3.104.2. Extracting gate netlist of module `\top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk, enabled by \ena
Extracted 1080 gates and 1110 wires to a netlist network with 30 inputs and 30 outputs.

3.104.2.1. Executing ABC.

yosys> opt_ffinv

3.105. Executing OPT_FFINV pass (push inverters through FFs).
Discovering LUTs.
Pushed 0 inverters.

yosys> opt_expr

3.106. Executing OPT_EXPR pass (perform const folding).
Optimizing module top.

yosys> opt_merge -nomux

3.107. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\top'.
Removed a total of 0 cells.

yosys> opt_muxtree

3.108. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \top..
  Creating internal representation of mux trees.
  No muxes found in this module.
Removed 0 multiplexer ports.

yosys> opt_reduce

3.109. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \top.
Performed a total of 0 changes.

yosys> opt_merge

3.110. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\top'.
Removed a total of 0 cells.

yosys> opt_share

3.111. Executing OPT_SHARE pass.

yosys> opt_dff -nosdff -sat

3.112. Executing OPT_DFF pass (perform DFF optimizations).

yosys> opt_clean

3.113. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \top..
Removed 0 unused cells and 4143 unused wires.
<suppressed ~4 debug messages>

yosys> opt_expr

3.114. Executing OPT_EXPR pass (perform const folding).
Optimizing module top.
MAX OPT ITERATION = 1

yosys> bmuxmap

3.115. Executing BMUXMAP pass.

yosys> demuxmap

3.116. Executing DEMUXMAP pass.

yosys> clean_zerowidth

yosys> abc -script /tmp/yosys_dw2fPV/abc_tmp_1.scr

3.117. Executing ABC pass (technology mapping using ABC).

3.117.1. Extracting gate netlist of module `\top' to `<abc-temp-dir>/input.blif'..
Extracted 983 gates and 1013 wires to a netlist network with 30 inputs and 30 outputs.

3.117.1.1. Executing ABC.
DE:   #PIs =  30  #Luts =   278  Max Lvl =  10  Avg Lvl =   9.83  [   0.18 sec. at Pass 0]{firstMap}
DE:   #PIs =  30  #Luts =   248  Max Lvl =  16  Avg Lvl =  14.90  [   4.40 sec. at Pass 1]{initMapFlow}
DE:   #PIs =  30  #Luts =   235  Max Lvl =  16  Avg Lvl =  14.57  [   0.83 sec. at Pass 2]{map}
DE:   #PIs =  30  #Luts =   235  Max Lvl =  16  Avg Lvl =  14.57  [   3.37 sec. at Pass 3]{postMap}
DE:   #PIs =  30  #Luts =   231  Max Lvl =  15  Avg Lvl =  14.23  [   1.77 sec. at Pass 4]{map}
DE:   #PIs =  30  #Luts =   231  Max Lvl =  15  Avg Lvl =  14.23  [   4.64 sec. at Pass 5]{postMap}
DE:   #PIs =  30  #Luts =   231  Max Lvl =  15  Avg Lvl =  14.23  [   1.75 sec. at Pass 6]{map}
DE:   #PIs =  30  #Luts =   230  Max Lvl =  15  Avg Lvl =  13.90  [   7.16 sec. at Pass 7]{postMap}
DE:   #PIs =  30  #Luts =   229  Max Lvl =  15  Avg Lvl =  14.23  [   2.70 sec. at Pass 8]{map}
DE:   #PIs =  30  #Luts =   229  Max Lvl =  15  Avg Lvl =  14.23  [   7.50 sec. at Pass 9]{postMap}
DE:   #PIs =  30  #Luts =   229  Max Lvl =  15  Avg Lvl =  14.23  [   3.01 sec. at Pass 10]{map}
DE:   #PIs =  30  #Luts =   229  Max Lvl =  15  Avg Lvl =  14.23  [   9.32 sec. at Pass 11]{postMap}
DE:   #PIs =  30  #Luts =   229  Max Lvl =  15  Avg Lvl =  14.23  [  42.95 sec. at Pass 12]{pushMap}
DE:   #PIs =  30  #Luts =   228  Max Lvl =  15  Avg Lvl =  14.53  [   0.45 sec. at Pass 13]{finalMap}

yosys> opt_expr

3.118. Executing OPT_EXPR pass (perform const folding).
Optimizing module top.

yosys> opt_merge -nomux

3.119. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\top'.
Removed a total of 0 cells.

yosys> opt_muxtree

3.120. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \top..
  Creating internal representation of mux trees.
  No muxes found in this module.
Removed 0 multiplexer ports.

yosys> opt_reduce

3.121. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \top.
Performed a total of 0 changes.

yosys> opt_merge

3.122. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\top'.
Removed a total of 0 cells.

yosys> opt_share

3.123. Executing OPT_SHARE pass.

yosys> opt_dff -nosdff -nodffe

3.124. Executing OPT_DFF pass (perform DFF optimizations).

yosys> opt_clean

3.125. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \top..
Removed 0 unused cells and 1013 unused wires.
<suppressed ~1 debug messages>

yosys> opt_expr

3.126. Executing OPT_EXPR pass (perform const folding).
Optimizing module top.
MAX OPT ITERATION = 1

yosys> opt_ffinv

3.127. Executing OPT_FFINV pass (push inverters through FFs).
Discovering LUTs.
Pushed 0 inverters.

yosys> stat

3.128. Printing statistics.

=== top ===

   Number of wires:                303
   Number of wire bits:            478
   Number of public wires:          15
   Number of public wire bits:     190
   Number of memories:               0
   Number of memory bits:            0
   Number of processes:              0
   Number of cells:                318
     $_DFFE_PP_                     90
     $lut                          228


yosys> shregmap -minlen 8 -maxlen 20

3.129. Executing SHREGMAP pass (map shift registers).
Converted 0 dff cells into 0 shift registers.

yosys> dfflegalize -cell $_DFF_?_ 0 -cell $_DFF_???_ 0 -cell $_DFFE_????_ 0 -cell $_DFFSR_???_ 0 -cell $_DFFSRE_????_ 0 -cell $_DLATCHSR_PPP_ 0

3.130. Executing DFFLEGALIZE pass (convert FFs to types supported by the target).

yosys> stat

3.131. Printing statistics.

=== top ===

   Number of wires:                303
   Number of wire bits:            478
   Number of public wires:          15
   Number of public wire bits:     190
   Number of memories:               0
   Number of memory bits:            0
   Number of processes:              0
   Number of cells:                318
     $_DFFE_PP0P_                   90
     $lut                          228


yosys> techmap -map +/techmap.v -map +/rapidsilicon/genesis/ffs_map.v

3.132. Executing TECHMAP pass (map to technology primitives).

3.132.1. Executing Verilog-2005 frontend: /nfs_scratch/scratch/Vorak/aram/Workspace/Raptor/yosys_verific_rs/yosys/install/bin/../share/yosys/techmap.v
Parsing Verilog input from `/nfs_scratch/scratch/Vorak/aram/Workspace/Raptor/yosys_verific_rs/yosys/install/bin/../share/yosys/techmap.v' to AST representation.
Generating RTLIL representation for module `\_90_simplemap_bool_ops'.
Generating RTLIL representation for module `\_90_simplemap_reduce_ops'.
Generating RTLIL representation for module `\_90_simplemap_logic_ops'.
Generating RTLIL representation for module `\_90_simplemap_compare_ops'.
Generating RTLIL representation for module `\_90_simplemap_various'.
Generating RTLIL representation for module `\_90_simplemap_registers'.
Generating RTLIL representation for module `\_90_shift_ops_shr_shl_sshl_sshr'.
Generating RTLIL representation for module `\_90_shift_shiftx'.
Generating RTLIL representation for module `\_90_fa'.
Generating RTLIL representation for module `\_90_lcu'.
Generating RTLIL representation for module `\_90_alu'.
Generating RTLIL representation for module `\_90_macc'.
Generating RTLIL representation for module `\_90_alumacc'.
Generating RTLIL representation for module `\$__div_mod_u'.
Generating RTLIL representation for module `\$__div_mod_trunc'.
Generating RTLIL representation for module `\_90_div'.
Generating RTLIL representation for module `\_90_mod'.
Generating RTLIL representation for module `\$__div_mod_floor'.
Generating RTLIL representation for module `\_90_divfloor'.
Generating RTLIL representation for module `\_90_modfloor'.
Generating RTLIL representation for module `\_90_pow'.
Generating RTLIL representation for module `\_90_pmux'.
Generating RTLIL representation for module `\_90_demux'.
Generating RTLIL representation for module `\_90_lut'.
Successfully finished Verilog frontend.

3.132.2. Executing Verilog-2005 frontend: /nfs_scratch/scratch/Vorak/aram/Workspace/Raptor/yosys_verific_rs/yosys/install/bin/../share/yosys/rapidsilicon/genesis/ffs_map.v
Parsing Verilog input from `/nfs_scratch/scratch/Vorak/aram/Workspace/Raptor/yosys_verific_rs/yosys/install/bin/../share/yosys/rapidsilicon/genesis/ffs_map.v' to AST representation.
Generating RTLIL representation for module `\$_DFF_P_'.
Generating RTLIL representation for module `\$_DFF_PP0_'.
Generating RTLIL representation for module `\$_DFF_PN0_'.
Generating RTLIL representation for module `\$_DFF_PP1_'.
Generating RTLIL representation for module `\$_DFF_PN1_'.
Generating RTLIL representation for module `\$_DFFE_PP_'.
Generating RTLIL representation for module `\$_DFFE_PN_'.
Generating RTLIL representation for module `\$_DFFE_PP0P_'.
Generating RTLIL representation for module `\$_DFFE_PP0N_'.
Generating RTLIL representation for module `\$_DFFE_PN0P_'.
Generating RTLIL representation for module `\$_DFFE_PN0N_'.
Generating RTLIL representation for module `\$_DFFE_PP1P_'.
Generating RTLIL representation for module `\$_DFFE_PP1N_'.
Generating RTLIL representation for module `\$_DFFE_PN1P_'.
Generating RTLIL representation for module `\$_DFFE_PN1N_'.
Generating RTLIL representation for module `\$_DFFSR_PPP_'.
Generating RTLIL representation for module `\$_DFFSR_PNP_'.
Generating RTLIL representation for module `\$_DFFSR_PNN_'.
Generating RTLIL representation for module `\$_DFFSR_PPN_'.
Generating RTLIL representation for module `\$_DFFSR_NPP_'.
Generating RTLIL representation for module `\$_DFFSR_NNP_'.
Generating RTLIL representation for module `\$_DFFSR_NNN_'.
Generating RTLIL representation for module `\$_DFFSR_NPN_'.
Generating RTLIL representation for module `\$_DFFSRE_PPPP_'.
Generating RTLIL representation for module `\$_DFFSRE_PNPP_'.
Generating RTLIL representation for module `\$_DFFSRE_PPNP_'.
Generating RTLIL representation for module `\$_DFFSRE_PNNP_'.
Generating RTLIL representation for module `\$_DFFSRE_PPPN_'.
Generating RTLIL representation for module `\$_DFFSRE_PNPN_'.
Generating RTLIL representation for module `\$_DFFSRE_PPNN_'.
Generating RTLIL representation for module `\$_DFFSRE_PNNN_'.
Generating RTLIL representation for module `\$_DLATCHSR_PPP_'.
Generating RTLIL representation for module `\$_DLATCHSR_NPP_'.
Generating RTLIL representation for module `\$_DFF_N_'.
Generating RTLIL representation for module `\$_DFF_NP0_'.
Generating RTLIL representation for module `\$_DFF_NN0_'.
Generating RTLIL representation for module `\$_DFF_NP1_'.
Generating RTLIL representation for module `\$_DFF_NN1_'.
Generating RTLIL representation for module `\$_DFFE_NP_'.
Generating RTLIL representation for module `\$_DFFE_NN_'.
Generating RTLIL representation for module `\$_DFFE_NP0P_'.
Generating RTLIL representation for module `\$_DFFE_NP0N_'.
Generating RTLIL representation for module `\$_DFFE_NN0P_'.
Generating RTLIL representation for module `\$_DFFE_NN0N_'.
Generating RTLIL representation for module `\$_DFFE_NP1P_'.
Generating RTLIL representation for module `\$_DFFE_NP1N_'.
Generating RTLIL representation for module `\$_DFFE_NN1P_'.
Generating RTLIL representation for module `\$_DFFE_NN1N_'.
Generating RTLIL representation for module `\$_DFFSRE_NPPP_'.
Generating RTLIL representation for module `\$_DFFSRE_NNPP_'.
Generating RTLIL representation for module `\$_DFFSRE_NPNP_'.
Generating RTLIL representation for module `\$_DFFSRE_NNNP_'.
Generating RTLIL representation for module `\$_DFFSRE_NPPN_'.
Generating RTLIL representation for module `\$_DFFSRE_NNPN_'.
Generating RTLIL representation for module `\$_DFFSRE_NPNN_'.
Generating RTLIL representation for module `\$_DFFSRE_NNNN_'.
Generating RTLIL representation for module `\$__SHREG_DFF_P_'.
Generating RTLIL representation for module `\$_SDFF_PP0_'.
Generating RTLIL representation for module `\$_SDFF_PN0_'.
Generating RTLIL representation for module `\$_SDFF_NP0_'.
Generating RTLIL representation for module `\$_SDFF_NN0_'.
Generating RTLIL representation for module `\$_SDFF_PP1_'.
Generating RTLIL representation for module `\$_SDFF_PN1_'.
Generating RTLIL representation for module `\$_SDFF_NP1_'.
Generating RTLIL representation for module `\$_SDFF_NN1_'.
Successfully finished Verilog frontend.

3.132.3. Continuing TECHMAP pass.
Using extmapper simplemap for cells of type $lut.
Using template \$_DFFE_PP0P_ for cells of type $_DFFE_PP0P_.
Using extmapper simplemap for cells of type $logic_not.
No more expansions possible.
<suppressed ~544 debug messages>

yosys> opt_expr -mux_undef

3.133. Executing OPT_EXPR pass (perform const folding).
Optimizing module top.
<suppressed ~5158 debug messages>

yosys> simplemap

3.134. Executing SIMPLEMAP pass (map simple cells to gate primitives).

yosys> opt_expr

3.135. Executing OPT_EXPR pass (perform const folding).
Optimizing module top.

yosys> opt_merge

3.136. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\top'.
<suppressed ~5664 debug messages>
Removed a total of 1888 cells.

yosys> opt_dff -nodffe -nosdff

3.137. Executing OPT_DFF pass (perform DFF optimizations).

yosys> opt_clean

3.138. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \top..
Removed 0 unused cells and 930 unused wires.
<suppressed ~1 debug messages>

yosys> opt_expr

3.139. Executing OPT_EXPR pass (perform const folding).
Optimizing module top.
<suppressed ~47 debug messages>

yosys> opt_merge -nomux

3.140. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\top'.
<suppressed ~3 debug messages>
Removed a total of 1 cells.

yosys> opt_muxtree

3.141. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \top..
  Creating internal representation of mux trees.
  No muxes found in this module.
Removed 0 multiplexer ports.

yosys> opt_reduce

3.142. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \top.
Performed a total of 0 changes.

yosys> opt_merge

3.143. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\top'.
Removed a total of 0 cells.

yosys> opt_share

3.144. Executing OPT_SHARE pass.

yosys> opt_dff -nosdff -nodffe

3.145. Executing OPT_DFF pass (perform DFF optimizations).

yosys> opt_clean

3.146. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \top..
Removed 0 unused cells and 3 unused wires.
<suppressed ~1 debug messages>

yosys> opt_expr

3.147. Executing OPT_EXPR pass (perform const folding).
Optimizing module top.
MAX OPT ITERATION = 1

yosys> abc -script /tmp/yosys_dw2fPV/abc_tmp_2.scr

3.148. Executing ABC pass (technology mapping using ABC).

3.148.1. Extracting gate netlist of module `\top' to `<abc-temp-dir>/input.blif'..
Extracted 2056 gates and 2088 wires to a netlist network with 30 inputs and 30 outputs.

3.148.1.1. Executing ABC.
DE:   #PIs =  30  #Luts =   241  Max Lvl =  13  Avg Lvl =  12.87  [   0.32 sec. at Pass 0]{firstMap}
DE:   #PIs =  30  #Luts =   240  Max Lvl =  15  Avg Lvl =  14.90  [  10.77 sec. at Pass 1]{initMapFlow}
DE:   #PIs =  30  #Luts =   240  Max Lvl =  15  Avg Lvl =  14.90  [   1.96 sec. at Pass 2]{map}
DE:   #PIs =  30  #Luts =   240  Max Lvl =  15  Avg Lvl =  14.90  [   8.80 sec. at Pass 3]{postMap}
DE:   #PIs =  30  #Luts =   240  Max Lvl =  15  Avg Lvl =  14.90  [   3.29 sec. at Pass 4]{map}
DE:   #PIs =  30  #Luts =   237  Max Lvl =  15  Avg Lvl =  14.23  [   9.26 sec. at Pass 5]{postMap}
DE:   #PIs =  30  #Luts =   236  Max Lvl =  14  Avg Lvl =  13.90  [   2.45 sec. at Pass 6]{map}
DE:   #PIs =  30  #Luts =   232  Max Lvl =  15  Avg Lvl =  14.23  [   9.68 sec. at Pass 7]{postMap}
DE:   #PIs =  30  #Luts =   229  Max Lvl =  14  Avg Lvl =  13.90  [   2.82 sec. at Pass 8]{map}
DE:   #PIs =  30  #Luts =   225  Max Lvl =  15  Avg Lvl =  14.23  [   6.23 sec. at Pass 9]{postMap}
DE:   #PIs =  30  #Luts =   225  Max Lvl =  15  Avg Lvl =  14.23  [   2.20 sec. at Pass 10]{map}
DE:   #PIs =  30  #Luts =   225  Max Lvl =  15  Avg Lvl =  14.23  [   8.08 sec. at Pass 11]{postMap}
DE:   #PIs =  30  #Luts =   224  Max Lvl =  14  Avg Lvl =  13.90  [   1.89 sec. at Pass 12]{map}
DE:   #PIs =  30  #Luts =   224  Max Lvl =  14  Avg Lvl =  13.90  [   6.07 sec. at Pass 13]{postMap}
DE:   #PIs =  30  #Luts =   223  Max Lvl =  15  Avg Lvl =  14.23  [   2.69 sec. at Pass 14]{map}
DE:   #PIs =  30  #Luts =   223  Max Lvl =  15  Avg Lvl =  14.23  [   6.48 sec. at Pass 15]{postMap}
DE:   #PIs =  30  #Luts =   223  Max Lvl =  15  Avg Lvl =  14.23  [   2.29 sec. at Pass 16]{map}
DE:   #PIs =  30  #Luts =   223  Max Lvl =  15  Avg Lvl =  14.23  [   8.80 sec. at Pass 17]{postMap}
DE:   #PIs =  30  #Luts =   222  Max Lvl =  16  Avg Lvl =  14.57  [  33.41 sec. at Pass 18]{pushMap}
DE:   #PIs =  30  #Luts =   222  Max Lvl =  16  Avg Lvl =  14.57  [   2.10 sec. at Pass 19]{map}
DE:   #PIs =  30  #Luts =   222  Max Lvl =  16  Avg Lvl =  14.57  [   6.44 sec. at Pass 20]{postMap}
DE:   #PIs =  30  #Luts =   222  Max Lvl =  16  Avg Lvl =  14.57  [   1.92 sec. at Pass 21]{map}
DE:   #PIs =  30  #Luts =   221  Max Lvl =  14  Avg Lvl =  13.90  [  25.21 sec. at Pass 22]{pushMap}
DE:   #PIs =  30  #Luts =   221  Max Lvl =  14  Avg Lvl =  13.90  [   4.49 sec. at Pass 23]{postMap}
DE:   #PIs =  30  #Luts =   221  Max Lvl =  14  Avg Lvl =  13.90  [   1.42 sec. at Pass 24]{map}
DE:   #PIs =  30  #Luts =   221  Max Lvl =  14  Avg Lvl =  13.90  [   5.04 sec. at Pass 25]{postMap}
DE:   #PIs =  30  #Luts =   221  Max Lvl =  14  Avg Lvl =  13.90  [  24.76 sec. at Pass 26]{pushMap}
DE:   #PIs =  30  #Luts =   221  Max Lvl =  14  Avg Lvl =  13.90  [   0.42 sec. at Pass 27]{finalMap}

yosys> opt_expr

3.149. Executing OPT_EXPR pass (perform const folding).
Optimizing module top.

yosys> opt_merge -nomux

3.150. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\top'.
Removed a total of 0 cells.

yosys> opt_muxtree

3.151. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \top..
  Creating internal representation of mux trees.
  No muxes found in this module.
Removed 0 multiplexer ports.

yosys> opt_reduce

3.152. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \top.
Performed a total of 0 changes.

yosys> opt_merge

3.153. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\top'.
Removed a total of 0 cells.

yosys> opt_share

3.154. Executing OPT_SHARE pass.

yosys> opt_dff -nosdff -nodffe

3.155. Executing OPT_DFF pass (perform DFF optimizations).

yosys> opt_clean

3.156. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \top..
Removed 0 unused cells and 999 unused wires.
<suppressed ~1 debug messages>

yosys> opt_expr

3.157. Executing OPT_EXPR pass (perform const folding).
Optimizing module top.
MAX OPT ITERATION = 1

yosys> hierarchy -check

3.158. Executing HIERARCHY pass (managing design hierarchy).

3.158.1. Analyzing design hierarchy..
Top module:  \top

3.158.2. Analyzing design hierarchy..
Top module:  \top
Removed 0 unused modules.

yosys> stat

3.159. Printing statistics.

=== top ===

   Number of wires:                296
   Number of wire bits:            471
   Number of public wires:          15
   Number of public wire bits:     190
   Number of memories:               0
   Number of memory bits:            0
   Number of processes:              0
   Number of cells:                311
     $lut                          221
     dffsre                         90


yosys> opt_clean -purge

3.160. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \top..
Removed 0 unused cells and 7 unused wires.
<suppressed ~7 debug messages>

yosys> write_verilog -noattr -nohex synthesized.v

3.161. Executing Verilog backend.
Dumping module `\top'.

Warnings: 13 unique messages, 13 total
End of script. Logfile hash: 44b93cf68e, CPU: user 3.97s system 0.05s, MEM: 56.04 MB peak
Yosys 0.18+10 (git sha1 7361c89db, gcc 9.4.0-1ubuntu1~20.04.1 -fPIC -Os)
Time spent: 99% 6x abc (1387 sec), 0% 38x opt_expr (1 sec), ...
real 304.57
user 1347.06
sys 43.74
