
 /----------------------------------------------------------------------------\
 |                                                                            |
 |  yosys -- Yosys Open SYnthesis Suite                                       |
 |                                                                            |
 |  Copyright (C) 2012 - 2020  Claire Xenia Wolf <claire@yosyshq.com>         |
 |                                                                            |
 |  Permission to use, copy, modify, and/or distribute this software for any  |
 |  purpose with or without fee is hereby granted, provided that the above    |
 |  copyright notice and this permission notice appear in all copies.         |
 |                                                                            |
 |  THE SOFTWARE IS PROVIDED "AS IS" AND THE AUTHOR DISCLAIMS ALL WARRANTIES  |
 |  WITH REGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF          |
 |  MERCHANTABILITY AND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR   |
 |  ANY SPECIAL, DIRECT, INDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES    |
 |  WHATSOEVER RESULTING FROM LOSS OF USE, DATA OR PROFITS, WHETHER IN AN     |
 |  ACTION OF CONTRACT, NEGLIGENCE OR OTHER TORTIOUS ACTION, ARISING OUT OF   |
 |  OR IN CONNECTION WITH THE USE OR PERFORMANCE OF THIS SOFTWARE.            |
 |                                                                            |
 \----------------------------------------------------------------------------/

 Yosys-Verific 0.0.92
 Yosys 0.18+10 (git sha1 7361c89db, gcc 9.4.0-1ubuntu1~20.04.1 -fPIC -Os)


-- Executing script file `yosys.ys' --
echo on

yosys> plugin -i synth-rs

yosys> read -verific

yosys> read -incdir .

yosys> verific -vlog-incdir .

1. Executing VERIFIC (loading SystemVerilog and VHDL designs using Verific).
Built with Verific May22_SW_Release, released at Wed Jun  1 05:39:28 2022.

yosys> verilog_defaults -add -I.

yosys> read -sv csrng_pkg.sv entropy_src_pkg.sv edn_reg_pkg.sv edn_pkg.sv entropy_src_pkg.sv prim_alert_pkg.sv prim_count_pkg.sv prim_mubi_pkg.sv prim_pkg.sv prim_secded_pkg.sv prim_subreg_pkg.sv prim_util_pkg.sv lc_ctrl_pkg.sv top_pkg.sv tlul_pkg.sv edn.sv edn_ack_sm.sv edn_core.sv edn_main_sm.sv edn_reg_pkg.sv edn_reg_top.sv prim_alert_sender.sv prim_arbiter_ppc.sv prim_buf.sv prim_count.sv prim_diff_decode.sv prim_fifo_sync.sv prim_flop.sv prim_flop_2sync.sv prim_generic_buf.sv prim_generic_flop.sv prim_generic_flop_2sync.sv prim_intr_hw.sv prim_mubi4_sync.sv prim_packer_fifo.sv prim_sec_anchor_buf.sv prim_secded_inv_39_32_dec.sv prim_secded_inv_39_32_enc.sv prim_secded_inv_64_57_dec.sv prim_secded_inv_64_57_enc.sv prim_sparse_fsm_flop.sv prim_subreg.sv prim_subreg_ext.sv tlul_adapter_reg.sv tlul_cmd_intg_chk.sv tlul_data_integ_dec.sv tlul_data_integ_enc.sv tlul_err.sv tlul_rsp_intg_gen.sv

yosys> verific -sv csrng_pkg.sv entropy_src_pkg.sv edn_reg_pkg.sv edn_pkg.sv entropy_src_pkg.sv prim_alert_pkg.sv prim_count_pkg.sv prim_mubi_pkg.sv prim_pkg.sv prim_secded_pkg.sv prim_subreg_pkg.sv prim_util_pkg.sv lc_ctrl_pkg.sv top_pkg.sv tlul_pkg.sv edn.sv edn_ack_sm.sv edn_core.sv edn_main_sm.sv edn_reg_pkg.sv edn_reg_top.sv prim_alert_sender.sv prim_arbiter_ppc.sv prim_buf.sv prim_count.sv prim_diff_decode.sv prim_fifo_sync.sv prim_flop.sv prim_flop_2sync.sv prim_generic_buf.sv prim_generic_flop.sv prim_generic_flop_2sync.sv prim_intr_hw.sv prim_mubi4_sync.sv prim_packer_fifo.sv prim_sec_anchor_buf.sv prim_secded_inv_39_32_dec.sv prim_secded_inv_39_32_enc.sv prim_secded_inv_64_57_dec.sv prim_secded_inv_64_57_enc.sv prim_sparse_fsm_flop.sv prim_subreg.sv prim_subreg_ext.sv tlul_adapter_reg.sv tlul_cmd_intg_chk.sv tlul_data_integ_dec.sv tlul_data_integ_enc.sv tlul_err.sv tlul_rsp_intg_gen.sv

2. Executing VERIFIC (loading SystemVerilog and VHDL designs using Verific).
Built with Verific May22_SW_Release, released at Wed Jun  1 05:39:28 2022.
VERIFIC-COMMENT [VERI-1482] Analyzing Verilog file 'csrng_pkg.sv'
VERIFIC-WARNING [VERI-2418] csrng_pkg.sv:13: parameter 'GENBITS_BUS_WIDTH' declared inside package 'csrng_pkg' shall be treated as localparam
VERIFIC-WARNING [VERI-2418] csrng_pkg.sv:31: parameter 'CSRNG_REQ_DEFAULT' declared inside package 'csrng_pkg' shall be treated as localparam
VERIFIC-WARNING [VERI-2418] csrng_pkg.sv:32: parameter 'CSRNG_RSP_DEFAULT' declared inside package 'csrng_pkg' shall be treated as localparam
VERIFIC-COMMENT [VERI-1482] Analyzing Verilog file 'entropy_src_pkg.sv'
VERIFIC-WARNING [VERI-2418] entropy_src_pkg.sv:13: parameter 'RNG_BUS_WIDTH' declared inside package 'entropy_src_pkg' shall be treated as localparam
VERIFIC-WARNING [VERI-2418] entropy_src_pkg.sv:14: parameter 'CSRNG_BUS_WIDTH' declared inside package 'entropy_src_pkg' shall be treated as localparam
VERIFIC-WARNING [VERI-2418] entropy_src_pkg.sv:15: parameter 'FIPS_BUS_WIDTH' declared inside package 'entropy_src_pkg' shall be treated as localparam
VERIFIC-WARNING [VERI-2418] entropy_src_pkg.sv:28: parameter 'ENTROPY_SRC_HW_IF_REQ_DEFAULT' declared inside package 'entropy_src_pkg' shall be treated as localparam
VERIFIC-WARNING [VERI-2418] entropy_src_pkg.sv:29: parameter 'ENTROPY_SRC_HW_IF_RSP_DEFAULT' declared inside package 'entropy_src_pkg' shall be treated as localparam
VERIFIC-WARNING [VERI-2418] entropy_src_pkg.sv:42: parameter 'ENTROPY_SRC_RNG_REQ_DEFAULT' declared inside package 'entropy_src_pkg' shall be treated as localparam
VERIFIC-WARNING [VERI-2418] entropy_src_pkg.sv:43: parameter 'ENTROPY_SRC_RNG_RSP_DEFAULT' declared inside package 'entropy_src_pkg' shall be treated as localparam
VERIFIC-WARNING [VERI-2418] entropy_src_pkg.sv:62: parameter 'ENTROPY_SRC_XHT_REQ_DEFAULT' declared inside package 'entropy_src_pkg' shall be treated as localparam
VERIFIC-WARNING [VERI-2418] entropy_src_pkg.sv:63: parameter 'ENTROPY_SRC_XHT_RSP_DEFAULT' declared inside package 'entropy_src_pkg' shall be treated as localparam
VERIFIC-COMMENT [VERI-1482] Analyzing Verilog file 'edn_reg_pkg.sv'
VERIFIC-WARNING [VERI-2418] edn_reg_pkg.sv:10: parameter 'NumAlerts' declared inside package 'edn_reg_pkg' shall be treated as localparam
VERIFIC-WARNING [VERI-2418] edn_reg_pkg.sv:13: parameter 'BlockAw' declared inside package 'edn_reg_pkg' shall be treated as localparam
VERIFIC-WARNING [VERI-2418] edn_reg_pkg.sv:224: parameter 'EDN_INTR_STATE_OFFSET' declared inside package 'edn_reg_pkg' shall be treated as localparam
VERIFIC-WARNING [VERI-2418] edn_reg_pkg.sv:225: parameter 'EDN_INTR_ENABLE_OFFSET' declared inside package 'edn_reg_pkg' shall be treated as localparam
VERIFIC-WARNING [VERI-2418] edn_reg_pkg.sv:226: parameter 'EDN_INTR_TEST_OFFSET' declared inside package 'edn_reg_pkg' shall be treated as localparam
VERIFIC-WARNING [VERI-2418] edn_reg_pkg.sv:227: parameter 'EDN_ALERT_TEST_OFFSET' declared inside package 'edn_reg_pkg' shall be treated as localparam
VERIFIC-WARNING [VERI-2418] edn_reg_pkg.sv:228: parameter 'EDN_REGWEN_OFFSET' declared inside package 'edn_reg_pkg' shall be treated as localparam
VERIFIC-WARNING [VERI-2418] edn_reg_pkg.sv:229: parameter 'EDN_CTRL_OFFSET' declared inside package 'edn_reg_pkg' shall be treated as localparam
VERIFIC-WARNING [VERI-2418] edn_reg_pkg.sv:230: parameter 'EDN_SUM_STS_OFFSET' declared inside package 'edn_reg_pkg' shall be treated as localparam
VERIFIC-WARNING [VERI-2418] edn_reg_pkg.sv:231: parameter 'EDN_BOOT_INS_CMD_OFFSET' declared inside package 'edn_reg_pkg' shall be treated as localparam
VERIFIC-WARNING [VERI-2418] edn_reg_pkg.sv:232: parameter 'EDN_BOOT_GEN_CMD_OFFSET' declared inside package 'edn_reg_pkg' shall be treated as localparam
VERIFIC-WARNING [VERI-2418] edn_reg_pkg.sv:233: parameter 'EDN_SW_CMD_REQ_OFFSET' declared inside package 'edn_reg_pkg' shall be treated as localparam
VERIFIC-WARNING [VERI-2418] edn_reg_pkg.sv:234: parameter 'EDN_SW_CMD_STS_OFFSET' declared inside package 'edn_reg_pkg' shall be treated as localparam
VERIFIC-WARNING [VERI-2418] edn_reg_pkg.sv:235: parameter 'EDN_RESEED_CMD_OFFSET' declared inside package 'edn_reg_pkg' shall be treated as localparam
VERIFIC-WARNING [VERI-2418] edn_reg_pkg.sv:236: parameter 'EDN_GENERATE_CMD_OFFSET' declared inside package 'edn_reg_pkg' shall be treated as localparam
VERIFIC-WARNING [VERI-2418] edn_reg_pkg.sv:237: parameter 'EDN_MAX_NUM_REQS_BETWEEN_RESEEDS_OFFSET' declared inside package 'edn_reg_pkg' shall be treated as localparam
VERIFIC-WARNING [VERI-2418] edn_reg_pkg.sv:238: parameter 'EDN_RECOV_ALERT_STS_OFFSET' declared inside package 'edn_reg_pkg' shall be treated as localparam
VERIFIC-WARNING [VERI-2418] edn_reg_pkg.sv:239: parameter 'EDN_ERR_CODE_OFFSET' declared inside package 'edn_reg_pkg' shall be treated as localparam
VERIFIC-WARNING [VERI-2418] edn_reg_pkg.sv:240: parameter 'EDN_ERR_CODE_TEST_OFFSET' declared inside package 'edn_reg_pkg' shall be treated as localparam
VERIFIC-WARNING [VERI-2418] edn_reg_pkg.sv:243: parameter 'EDN_INTR_TEST_RESVAL' declared inside package 'edn_reg_pkg' shall be treated as localparam
VERIFIC-WARNING [VERI-2418] edn_reg_pkg.sv:244: parameter 'EDN_INTR_TEST_EDN_CMD_REQ_DONE_RESVAL' declared inside package 'edn_reg_pkg' shall be treated as localparam
VERIFIC-WARNING [VERI-2418] edn_reg_pkg.sv:245: parameter 'EDN_INTR_TEST_EDN_FATAL_ERR_RESVAL' declared inside package 'edn_reg_pkg' shall be treated as localparam
VERIFIC-WARNING [VERI-2418] edn_reg_pkg.sv:246: parameter 'EDN_ALERT_TEST_RESVAL' declared inside package 'edn_reg_pkg' shall be treated as localparam
VERIFIC-WARNING [VERI-2418] edn_reg_pkg.sv:247: parameter 'EDN_ALERT_TEST_RECOV_ALERT_RESVAL' declared inside package 'edn_reg_pkg' shall be treated as localparam
VERIFIC-WARNING [VERI-2418] edn_reg_pkg.sv:248: parameter 'EDN_ALERT_TEST_FATAL_ALERT_RESVAL' declared inside package 'edn_reg_pkg' shall be treated as localparam
VERIFIC-WARNING [VERI-2418] edn_reg_pkg.sv:249: parameter 'EDN_SW_CMD_REQ_RESVAL' declared inside package 'edn_reg_pkg' shall be treated as localparam
VERIFIC-WARNING [VERI-2418] edn_reg_pkg.sv:250: parameter 'EDN_RESEED_CMD_RESVAL' declared inside package 'edn_reg_pkg' shall be treated as localparam
VERIFIC-WARNING [VERI-2418] edn_reg_pkg.sv:251: parameter 'EDN_GENERATE_CMD_RESVAL' declared inside package 'edn_reg_pkg' shall be treated as localparam
VERIFIC-WARNING [VERI-2418] edn_reg_pkg.sv:275: parameter 'EDN_PERMIT' declared inside package 'edn_reg_pkg' shall be treated as localparam
VERIFIC-COMMENT [VERI-1482] Analyzing Verilog file 'edn_pkg.sv'
VERIFIC-WARNING [VERI-2418] edn_pkg.sv:12: parameter 'ENDPOINT_BUS_WIDTH' declared inside package 'edn_pkg' shall be treated as localparam
VERIFIC-WARNING [VERI-2418] edn_pkg.sv:13: parameter 'FIPS_ENDPOINT_BUS_WIDTH' declared inside package 'edn_pkg' shall be treated as localparam
VERIFIC-WARNING [VERI-2418] edn_pkg.sv:26: parameter 'EDN_REQ_DEFAULT' declared inside package 'edn_pkg' shall be treated as localparam
VERIFIC-WARNING [VERI-2418] edn_pkg.sv:27: parameter 'EDN_RSP_DEFAULT' declared inside package 'edn_pkg' shall be treated as localparam
VERIFIC-WARNING [VERI-2418] edn_pkg.sv:30: parameter 'EDN_MODE_WIDTH' declared inside package 'edn_pkg' shall be treated as localparam
VERIFIC-COMMENT [VERI-1482] Analyzing Verilog file 'entropy_src_pkg.sv'
VERIFIC-WARNING [VERI-2171] entropy_src_pkg.sv:66: design element 'entropy_src_pkg' is previously defined; ignoring this definition
VERIFIC-INFO [VERI-2142] entropy_src_pkg.sv:66: previous definition of design element 'entropy_src_pkg' is here
VERIFIC-COMMENT [VERI-1482] Analyzing Verilog file 'prim_alert_pkg.sv'
VERIFIC-WARNING [VERI-2418] prim_alert_pkg.sv:19: parameter 'ALERT_TX_DEFAULT' declared inside package 'prim_alert_pkg' shall be treated as localparam
VERIFIC-WARNING [VERI-2418] prim_alert_pkg.sv:22: parameter 'ALERT_RX_DEFAULT' declared inside package 'prim_alert_pkg' shall be treated as localparam
VERIFIC-COMMENT [VERI-1482] Analyzing Verilog file 'prim_count_pkg.sv'
VERIFIC-COMMENT [VERI-1482] Analyzing Verilog file 'prim_mubi_pkg.sv'
VERIFIC-WARNING [VERI-2418] prim_mubi_pkg.sv:19: parameter 'MuBi4Width' declared inside package 'prim_mubi_pkg' shall be treated as localparam
VERIFIC-WARNING [VERI-2418] prim_mubi_pkg.sv:148: parameter 'MuBi8Width' declared inside package 'prim_mubi_pkg' shall be treated as localparam
VERIFIC-WARNING [VERI-2418] prim_mubi_pkg.sv:277: parameter 'MuBi12Width' declared inside package 'prim_mubi_pkg' shall be treated as localparam
VERIFIC-WARNING [VERI-2418] prim_mubi_pkg.sv:406: parameter 'MuBi16Width' declared inside package 'prim_mubi_pkg' shall be treated as localparam
VERIFIC-COMMENT [VERI-1482] Analyzing Verilog file 'prim_pkg.sv'
VERIFIC-COMMENT [VERI-1482] Analyzing Verilog file 'prim_secded_pkg.sv'
VERIFIC-WARNING [VERI-2418] prim_secded_pkg.sv:81: parameter 'Secded2216ZeroEcc' declared inside package 'prim_secded_pkg' shall be treated as localparam
VERIFIC-WARNING [VERI-2418] prim_secded_pkg.sv:82: parameter 'Secded2216ZeroWord' declared inside package 'prim_secded_pkg' shall be treated as localparam
VERIFIC-WARNING [VERI-2418] prim_secded_pkg.sv:90: parameter 'Secded2822ZeroEcc' declared inside package 'prim_secded_pkg' shall be treated as localparam
VERIFIC-WARNING [VERI-2418] prim_secded_pkg.sv:91: parameter 'Secded2822ZeroWord' declared inside package 'prim_secded_pkg' shall be treated as localparam
VERIFIC-WARNING [VERI-2418] prim_secded_pkg.sv:99: parameter 'Secded3932ZeroEcc' declared inside package 'prim_secded_pkg' shall be treated as localparam
VERIFIC-WARNING [VERI-2418] prim_secded_pkg.sv:100: parameter 'Secded3932ZeroWord' declared inside package 'prim_secded_pkg' shall be treated as localparam
VERIFIC-WARNING [VERI-2418] prim_secded_pkg.sv:108: parameter 'Secded6457ZeroEcc' declared inside package 'prim_secded_pkg' shall be treated as localparam
VERIFIC-WARNING [VERI-2418] prim_secded_pkg.sv:109: parameter 'Secded6457ZeroWord' declared inside package 'prim_secded_pkg' shall be treated as localparam
VERIFIC-WARNING [VERI-2418] prim_secded_pkg.sv:117: parameter 'Secded7264ZeroEcc' declared inside package 'prim_secded_pkg' shall be treated as localparam
VERIFIC-WARNING [VERI-2418] prim_secded_pkg.sv:118: parameter 'Secded7264ZeroWord' declared inside package 'prim_secded_pkg' shall be treated as localparam
VERIFIC-WARNING [VERI-2418] prim_secded_pkg.sv:126: parameter 'SecdedHamming2216ZeroEcc' declared inside package 'prim_secded_pkg' shall be treated as localparam
VERIFIC-WARNING [VERI-2418] prim_secded_pkg.sv:127: parameter 'SecdedHamming2216ZeroWord' declared inside package 'prim_secded_pkg' shall be treated as localparam
VERIFIC-WARNING [VERI-2418] prim_secded_pkg.sv:135: parameter 'SecdedHamming3932ZeroEcc' declared inside package 'prim_secded_pkg' shall be treated as localparam
VERIFIC-WARNING [VERI-2418] prim_secded_pkg.sv:136: parameter 'SecdedHamming3932ZeroWord' declared inside package 'prim_secded_pkg' shall be treated as localparam
VERIFIC-WARNING [VERI-2418] prim_secded_pkg.sv:144: parameter 'SecdedHamming7264ZeroEcc' declared inside package 'prim_secded_pkg' shall be treated as localparam
VERIFIC-WARNING [VERI-2418] prim_secded_pkg.sv:145: parameter 'SecdedHamming7264ZeroWord' declared inside package 'prim_secded_pkg' shall be treated as localparam
VERIFIC-WARNING [VERI-2418] prim_secded_pkg.sv:153: parameter 'SecdedHamming7668ZeroEcc' declared inside package 'prim_secded_pkg' shall be treated as localparam
VERIFIC-WARNING [VERI-2418] prim_secded_pkg.sv:154: parameter 'SecdedHamming7668ZeroWord' declared inside package 'prim_secded_pkg' shall be treated as localparam
VERIFIC-WARNING [VERI-2418] prim_secded_pkg.sv:162: parameter 'SecdedInv2216ZeroEcc' declared inside package 'prim_secded_pkg' shall be treated as localparam
VERIFIC-WARNING [VERI-2418] prim_secded_pkg.sv:163: parameter 'SecdedInv2216ZeroWord' declared inside package 'prim_secded_pkg' shall be treated as localparam
VERIFIC-WARNING [VERI-2418] prim_secded_pkg.sv:171: parameter 'SecdedInv2822ZeroEcc' declared inside package 'prim_secded_pkg' shall be treated as localparam
VERIFIC-WARNING [VERI-2418] prim_secded_pkg.sv:172: parameter 'SecdedInv2822ZeroWord' declared inside package 'prim_secded_pkg' shall be treated as localparam
VERIFIC-WARNING [VERI-2418] prim_secded_pkg.sv:180: parameter 'SecdedInv3932ZeroEcc' declared inside package 'prim_secded_pkg' shall be treated as localparam
VERIFIC-WARNING [VERI-2418] prim_secded_pkg.sv:181: parameter 'SecdedInv3932ZeroWord' declared inside package 'prim_secded_pkg' shall be treated as localparam
VERIFIC-WARNING [VERI-2418] prim_secded_pkg.sv:189: parameter 'SecdedInv6457ZeroEcc' declared inside package 'prim_secded_pkg' shall be treated as localparam
VERIFIC-WARNING [VERI-2418] prim_secded_pkg.sv:190: parameter 'SecdedInv6457ZeroWord' declared inside package 'prim_secded_pkg' shall be treated as localparam
VERIFIC-WARNING [VERI-2418] prim_secded_pkg.sv:198: parameter 'SecdedInv7264ZeroEcc' declared inside package 'prim_secded_pkg' shall be treated as localparam
VERIFIC-WARNING [VERI-2418] prim_secded_pkg.sv:199: parameter 'SecdedInv7264ZeroWord' declared inside package 'prim_secded_pkg' shall be treated as localparam
VERIFIC-WARNING [VERI-2418] prim_secded_pkg.sv:207: parameter 'SecdedInvHamming2216ZeroEcc' declared inside package 'prim_secded_pkg' shall be treated as localparam
VERIFIC-WARNING [VERI-2418] prim_secded_pkg.sv:208: parameter 'SecdedInvHamming2216ZeroWord' declared inside package 'prim_secded_pkg' shall be treated as localparam
VERIFIC-WARNING [VERI-2418] prim_secded_pkg.sv:216: parameter 'SecdedInvHamming3932ZeroEcc' declared inside package 'prim_secded_pkg' shall be treated as localparam
VERIFIC-WARNING [VERI-2418] prim_secded_pkg.sv:217: parameter 'SecdedInvHamming3932ZeroWord' declared inside package 'prim_secded_pkg' shall be treated as localparam
VERIFIC-WARNING [VERI-2418] prim_secded_pkg.sv:225: parameter 'SecdedInvHamming7264ZeroEcc' declared inside package 'prim_secded_pkg' shall be treated as localparam
VERIFIC-WARNING [VERI-2418] prim_secded_pkg.sv:226: parameter 'SecdedInvHamming7264ZeroWord' declared inside package 'prim_secded_pkg' shall be treated as localparam
VERIFIC-WARNING [VERI-2418] prim_secded_pkg.sv:234: parameter 'SecdedInvHamming7668ZeroEcc' declared inside package 'prim_secded_pkg' shall be treated as localparam
VERIFIC-WARNING [VERI-2418] prim_secded_pkg.sv:235: parameter 'SecdedInvHamming7668ZeroWord' declared inside package 'prim_secded_pkg' shall be treated as localparam
VERIFIC-COMMENT [VERI-1482] Analyzing Verilog file 'prim_subreg_pkg.sv'
VERIFIC-COMMENT [VERI-1482] Analyzing Verilog file 'prim_util_pkg.sv'
VERIFIC-COMMENT [VERI-1482] Analyzing Verilog file 'lc_ctrl_pkg.sv'
VERIFIC-WARNING [VERI-2418] lc_ctrl_pkg.sv:13: parameter 'A0' declared inside package 'lc_ctrl_pkg' shall be treated as localparam
VERIFIC-WARNING [VERI-2418] lc_ctrl_pkg.sv:14: parameter 'A1' declared inside package 'lc_ctrl_pkg' shall be treated as localparam
VERIFIC-WARNING [VERI-2418] lc_ctrl_pkg.sv:15: parameter 'A2' declared inside package 'lc_ctrl_pkg' shall be treated as localparam
VERIFIC-WARNING [VERI-2418] lc_ctrl_pkg.sv:16: parameter 'A3' declared inside package 'lc_ctrl_pkg' shall be treated as localparam
VERIFIC-WARNING [VERI-2418] lc_ctrl_pkg.sv:17: parameter 'A4' declared inside package 'lc_ctrl_pkg' shall be treated as localparam
VERIFIC-WARNING [VERI-2418] lc_ctrl_pkg.sv:18: parameter 'A5' declared inside package 'lc_ctrl_pkg' shall be treated as localparam
VERIFIC-WARNING [VERI-2418] lc_ctrl_pkg.sv:19: parameter 'A6' declared inside package 'lc_ctrl_pkg' shall be treated as localparam
VERIFIC-WARNING [VERI-2418] lc_ctrl_pkg.sv:20: parameter 'A7' declared inside package 'lc_ctrl_pkg' shall be treated as localparam
VERIFIC-WARNING [VERI-2418] lc_ctrl_pkg.sv:21: parameter 'A8' declared inside package 'lc_ctrl_pkg' shall be treated as localparam
VERIFIC-WARNING [VERI-2418] lc_ctrl_pkg.sv:22: parameter 'A9' declared inside package 'lc_ctrl_pkg' shall be treated as localparam
VERIFIC-WARNING [VERI-2418] lc_ctrl_pkg.sv:23: parameter 'A10' declared inside package 'lc_ctrl_pkg' shall be treated as localparam
VERIFIC-WARNING [VERI-2418] lc_ctrl_pkg.sv:24: parameter 'A11' declared inside package 'lc_ctrl_pkg' shall be treated as localparam
VERIFIC-WARNING [VERI-2418] lc_ctrl_pkg.sv:26: parameter 'B0' declared inside package 'lc_ctrl_pkg' shall be treated as localparam
VERIFIC-WARNING [VERI-2418] lc_ctrl_pkg.sv:27: parameter 'B1' declared inside package 'lc_ctrl_pkg' shall be treated as localparam
VERIFIC-WARNING [VERI-2418] lc_ctrl_pkg.sv:28: parameter 'B2' declared inside package 'lc_ctrl_pkg' shall be treated as localparam
VERIFIC-WARNING [VERI-2418] lc_ctrl_pkg.sv:29: parameter 'B3' declared inside package 'lc_ctrl_pkg' shall be treated as localparam
VERIFIC-WARNING [VERI-2418] lc_ctrl_pkg.sv:30: parameter 'B4' declared inside package 'lc_ctrl_pkg' shall be treated as localparam
VERIFIC-WARNING [VERI-2418] lc_ctrl_pkg.sv:31: parameter 'B5' declared inside package 'lc_ctrl_pkg' shall be treated as localparam
VERIFIC-WARNING [VERI-2418] lc_ctrl_pkg.sv:32: parameter 'B6' declared inside package 'lc_ctrl_pkg' shall be treated as localparam
VERIFIC-WARNING [VERI-2418] lc_ctrl_pkg.sv:33: parameter 'B7' declared inside package 'lc_ctrl_pkg' shall be treated as localparam
VERIFIC-WARNING [VERI-2418] lc_ctrl_pkg.sv:34: parameter 'B8' declared inside package 'lc_ctrl_pkg' shall be treated as localparam
VERIFIC-WARNING [VERI-2418] lc_ctrl_pkg.sv:35: parameter 'B9' declared inside package 'lc_ctrl_pkg' shall be treated as localparam
VERIFIC-WARNING [VERI-2418] lc_ctrl_pkg.sv:36: parameter 'B10' declared inside package 'lc_ctrl_pkg' shall be treated as localparam
VERIFIC-WARNING [VERI-2418] lc_ctrl_pkg.sv:37: parameter 'B11' declared inside package 'lc_ctrl_pkg' shall be treated as localparam
VERIFIC-WARNING [VERI-2418] lc_ctrl_pkg.sv:40: parameter 'C0' declared inside package 'lc_ctrl_pkg' shall be treated as localparam
VERIFIC-WARNING [VERI-2418] lc_ctrl_pkg.sv:41: parameter 'C1' declared inside package 'lc_ctrl_pkg' shall be treated as localparam
VERIFIC-WARNING [VERI-2418] lc_ctrl_pkg.sv:42: parameter 'C2' declared inside package 'lc_ctrl_pkg' shall be treated as localparam
VERIFIC-WARNING [VERI-2418] lc_ctrl_pkg.sv:43: parameter 'C3' declared inside package 'lc_ctrl_pkg' shall be treated as localparam
VERIFIC-WARNING [VERI-2418] lc_ctrl_pkg.sv:44: parameter 'C4' declared inside package 'lc_ctrl_pkg' shall be treated as localparam
VERIFIC-WARNING [VERI-2418] lc_ctrl_pkg.sv:45: parameter 'C5' declared inside package 'lc_ctrl_pkg' shall be treated as localparam
VERIFIC-WARNING [VERI-2418] lc_ctrl_pkg.sv:46: parameter 'C6' declared inside package 'lc_ctrl_pkg' shall be treated as localparam
VERIFIC-WARNING [VERI-2418] lc_ctrl_pkg.sv:47: parameter 'C7' declared inside package 'lc_ctrl_pkg' shall be treated as localparam
VERIFIC-WARNING [VERI-2418] lc_ctrl_pkg.sv:48: parameter 'C8' declared inside package 'lc_ctrl_pkg' shall be treated as localparam
VERIFIC-WARNING [VERI-2418] lc_ctrl_pkg.sv:49: parameter 'C9' declared inside package 'lc_ctrl_pkg' shall be treated as localparam
VERIFIC-WARNING [VERI-2418] lc_ctrl_pkg.sv:50: parameter 'C10' declared inside package 'lc_ctrl_pkg' shall be treated as localparam
VERIFIC-WARNING [VERI-2418] lc_ctrl_pkg.sv:51: parameter 'C11' declared inside package 'lc_ctrl_pkg' shall be treated as localparam
VERIFIC-WARNING [VERI-2418] lc_ctrl_pkg.sv:52: parameter 'C12' declared inside package 'lc_ctrl_pkg' shall be treated as localparam
VERIFIC-WARNING [VERI-2418] lc_ctrl_pkg.sv:53: parameter 'C13' declared inside package 'lc_ctrl_pkg' shall be treated as localparam
VERIFIC-WARNING [VERI-2418] lc_ctrl_pkg.sv:54: parameter 'C14' declared inside package 'lc_ctrl_pkg' shall be treated as localparam
VERIFIC-WARNING [VERI-2418] lc_ctrl_pkg.sv:55: parameter 'C15' declared inside package 'lc_ctrl_pkg' shall be treated as localparam
VERIFIC-WARNING [VERI-2418] lc_ctrl_pkg.sv:57: parameter 'D0' declared inside package 'lc_ctrl_pkg' shall be treated as localparam
VERIFIC-WARNING [VERI-2418] lc_ctrl_pkg.sv:58: parameter 'D1' declared inside package 'lc_ctrl_pkg' shall be treated as localparam
VERIFIC-WARNING [VERI-2418] lc_ctrl_pkg.sv:59: parameter 'D2' declared inside package 'lc_ctrl_pkg' shall be treated as localparam
VERIFIC-WARNING [VERI-2418] lc_ctrl_pkg.sv:60: parameter 'D3' declared inside package 'lc_ctrl_pkg' shall be treated as localparam
VERIFIC-WARNING [VERI-2418] lc_ctrl_pkg.sv:61: parameter 'D4' declared inside package 'lc_ctrl_pkg' shall be treated as localparam
VERIFIC-WARNING [VERI-2418] lc_ctrl_pkg.sv:62: parameter 'D5' declared inside package 'lc_ctrl_pkg' shall be treated as localparam
VERIFIC-WARNING [VERI-2418] lc_ctrl_pkg.sv:63: parameter 'D6' declared inside package 'lc_ctrl_pkg' shall be treated as localparam
VERIFIC-WARNING [VERI-2418] lc_ctrl_pkg.sv:64: parameter 'D7' declared inside package 'lc_ctrl_pkg' shall be treated as localparam
VERIFIC-WARNING [VERI-2418] lc_ctrl_pkg.sv:65: parameter 'D8' declared inside package 'lc_ctrl_pkg' shall be treated as localparam
VERIFIC-WARNING [VERI-2418] lc_ctrl_pkg.sv:66: parameter 'D9' declared inside package 'lc_ctrl_pkg' shall be treated as localparam
VERIFIC-WARNING [VERI-2418] lc_ctrl_pkg.sv:67: parameter 'D10' declared inside package 'lc_ctrl_pkg' shall be treated as localparam
VERIFIC-WARNING [VERI-2418] lc_ctrl_pkg.sv:68: parameter 'D11' declared inside package 'lc_ctrl_pkg' shall be treated as localparam
VERIFIC-WARNING [VERI-2418] lc_ctrl_pkg.sv:69: parameter 'D12' declared inside package 'lc_ctrl_pkg' shall be treated as localparam
VERIFIC-WARNING [VERI-2418] lc_ctrl_pkg.sv:70: parameter 'D13' declared inside package 'lc_ctrl_pkg' shall be treated as localparam
VERIFIC-WARNING [VERI-2418] lc_ctrl_pkg.sv:71: parameter 'D14' declared inside package 'lc_ctrl_pkg' shall be treated as localparam
VERIFIC-WARNING [VERI-2418] lc_ctrl_pkg.sv:72: parameter 'D15' declared inside package 'lc_ctrl_pkg' shall be treated as localparam
VERIFIC-WARNING [VERI-2418] lc_ctrl_pkg.sv:75: parameter 'E0' declared inside package 'lc_ctrl_pkg' shall be treated as localparam
VERIFIC-WARNING [VERI-2418] lc_ctrl_pkg.sv:76: parameter 'F0' declared inside package 'lc_ctrl_pkg' shall be treated as localparam
VERIFIC-WARNING [VERI-2418] lc_ctrl_pkg.sv:82: parameter 'LcValueWidth' declared inside package 'lc_ctrl_pkg' shall be treated as localparam
VERIFIC-WARNING [VERI-2418] lc_ctrl_pkg.sv:83: parameter 'LcTokenWidth' declared inside package 'lc_ctrl_pkg' shall be treated as localparam
VERIFIC-WARNING [VERI-2418] lc_ctrl_pkg.sv:84: parameter 'NumLcStateValues' declared inside package 'lc_ctrl_pkg' shall be treated as localparam
VERIFIC-WARNING [VERI-2418] lc_ctrl_pkg.sv:85: parameter 'LcStateWidth' declared inside package 'lc_ctrl_pkg' shall be treated as localparam
VERIFIC-WARNING [VERI-2418] lc_ctrl_pkg.sv:86: parameter 'NumLcCountValues' declared inside package 'lc_ctrl_pkg' shall be treated as localparam
VERIFIC-WARNING [VERI-2418] lc_ctrl_pkg.sv:87: parameter 'LcCountWidth' declared inside package 'lc_ctrl_pkg' shall be treated as localparam
VERIFIC-WARNING [VERI-2418] lc_ctrl_pkg.sv:88: parameter 'NumLcStates' declared inside package 'lc_ctrl_pkg' shall be treated as localparam
VERIFIC-WARNING [VERI-2418] lc_ctrl_pkg.sv:89: parameter 'DecLcStateWidth' declared inside package 'lc_ctrl_pkg' shall be treated as localparam
VERIFIC-WARNING [VERI-2418] lc_ctrl_pkg.sv:90: parameter 'DecLcCountWidth' declared inside package 'lc_ctrl_pkg' shall be treated as localparam
VERIFIC-WARNING [VERI-2418] lc_ctrl_pkg.sv:91: parameter 'LcIdStateWidth' declared inside package 'lc_ctrl_pkg' shall be treated as localparam
VERIFIC-WARNING [VERI-2418] lc_ctrl_pkg.sv:92: parameter 'DecLcIdStateWidth' declared inside package 'lc_ctrl_pkg' shall be treated as localparam
VERIFIC-WARNING [VERI-2418] lc_ctrl_pkg.sv:172: parameter 'NumTokens' declared inside package 'lc_ctrl_pkg' shall be treated as localparam
VERIFIC-WARNING [VERI-2418] lc_ctrl_pkg.sv:173: parameter 'TokenIdxWidth' declared inside package 'lc_ctrl_pkg' shall be treated as localparam
VERIFIC-WARNING [VERI-2418] lc_ctrl_pkg.sv:191: parameter 'TxWidth' declared inside package 'lc_ctrl_pkg' shall be treated as localparam
VERIFIC-WARNING [VERI-2418] lc_ctrl_pkg.sv:199: parameter 'LC_TX_DEFAULT' declared inside package 'lc_ctrl_pkg' shall be treated as localparam
VERIFIC-WARNING [VERI-2418] lc_ctrl_pkg.sv:201: parameter 'RmaSeedWidth' declared inside package 'lc_ctrl_pkg' shall be treated as localparam
VERIFIC-WARNING [VERI-2418] lc_ctrl_pkg.sv:204: parameter 'LcKeymgrDivWidth' declared inside package 'lc_ctrl_pkg' shall be treated as localparam
VERIFIC-WARNING [VERI-2418] lc_ctrl_pkg.sv:263: parameter 'TransTokenIdxMatrix' declared inside package 'lc_ctrl_pkg' shall be treated as localparam
VERIFIC-COMMENT [VERI-1482] Analyzing Verilog file 'top_pkg.sv'
VERIFIC-COMMENT [VERI-1482] Analyzing Verilog file 'tlul_pkg.sv'
VERIFIC-WARNING [VERI-2418] tlul_pkg.sv:14: parameter 'ArbiterImpl' declared inside package 'tlul_pkg' shall be treated as localparam
VERIFIC-WARNING [VERI-2418] tlul_pkg.sv:27: parameter 'H2DCmdMaxWidth' declared inside package 'tlul_pkg' shall be treated as localparam
VERIFIC-WARNING [VERI-2418] tlul_pkg.sv:28: parameter 'H2DCmdIntgWidth' declared inside package 'tlul_pkg' shall be treated as localparam
VERIFIC-WARNING [VERI-2418] tlul_pkg.sv:29: parameter 'H2DCmdFullWidth' declared inside package 'tlul_pkg' shall be treated as localparam
VERIFIC-WARNING [VERI-2418] tlul_pkg.sv:30: parameter 'D2HRspMaxWidth' declared inside package 'tlul_pkg' shall be treated as localparam
VERIFIC-WARNING [VERI-2418] tlul_pkg.sv:31: parameter 'D2HRspIntgWidth' declared inside package 'tlul_pkg' shall be treated as localparam
VERIFIC-WARNING [VERI-2418] tlul_pkg.sv:32: parameter 'D2HRspFullWidth' declared inside package 'tlul_pkg' shall be treated as localparam
VERIFIC-WARNING [VERI-2418] tlul_pkg.sv:33: parameter 'DataMaxWidth' declared inside package 'tlul_pkg' shall be treated as localparam
VERIFIC-WARNING [VERI-2418] tlul_pkg.sv:34: parameter 'DataIntgWidth' declared inside package 'tlul_pkg' shall be treated as localparam
VERIFIC-WARNING [VERI-2418] tlul_pkg.sv:35: parameter 'DataFullWidth' declared inside package 'tlul_pkg' shall be treated as localparam
VERIFIC-WARNING [VERI-2418] tlul_pkg.sv:44: parameter 'TL_A_USER_DEFAULT' declared inside package 'tlul_pkg' shall be treated as localparam
VERIFIC-WARNING [VERI-2418] tlul_pkg.sv:84: parameter 'TL_D_USER_DEFAULT' declared inside package 'tlul_pkg' shall be treated as localparam
VERIFIC-COMMENT [VERI-1482] Analyzing Verilog file 'edn.sv'
VERIFIC-COMMENT [VERI-1482] Analyzing Verilog file 'edn_ack_sm.sv'
VERIFIC-COMMENT [VERI-1482] Analyzing Verilog file 'edn_core.sv'
VERIFIC-COMMENT [VERI-1482] Analyzing Verilog file 'edn_main_sm.sv'
VERIFIC-COMMENT [VERI-1482] Analyzing Verilog file 'edn_reg_pkg.sv'
VERIFIC-WARNING [VERI-2171] edn_reg_pkg.sv:295: design element 'edn_reg_pkg' is previously defined; ignoring this definition
VERIFIC-INFO [VERI-2142] edn_reg_pkg.sv:295: previous definition of design element 'edn_reg_pkg' is here
VERIFIC-COMMENT [VERI-1482] Analyzing Verilog file 'edn_reg_top.sv'
VERIFIC-COMMENT [VERI-1482] Analyzing Verilog file 'prim_alert_sender.sv'
VERIFIC-COMMENT [VERI-1482] Analyzing Verilog file 'prim_arbiter_ppc.sv'
VERIFIC-COMMENT [VERI-1482] Analyzing Verilog file 'prim_buf.sv'
VERIFIC-WARNING [VERI-1199] prim_buf.sv:24: parameter 'Impl' becomes localparam in 'prim_buf' with formal parameter declaration list
VERIFIC-COMMENT [VERI-1482] Analyzing Verilog file 'prim_count.sv'
VERIFIC-COMMENT [VERI-1482] Analyzing Verilog file 'prim_diff_decode.sv'
VERIFIC-COMMENT [VERI-1482] Analyzing Verilog file 'prim_fifo_sync.sv'
VERIFIC-COMMENT [VERI-1482] Analyzing Verilog file 'prim_flop.sv'
VERIFIC-WARNING [VERI-1199] prim_flop.sv:30: parameter 'Impl' becomes localparam in 'prim_flop' with formal parameter declaration list
VERIFIC-COMMENT [VERI-1482] Analyzing Verilog file 'prim_flop_2sync.sv'
VERIFIC-COMMENT [VERI-1482] Analyzing Verilog file 'prim_generic_buf.sv'
VERIFIC-COMMENT [VERI-1482] Analyzing Verilog file 'prim_generic_flop.sv'
VERIFIC-COMMENT [VERI-1482] Analyzing Verilog file 'prim_generic_flop_2sync.sv'
VERIFIC-COMMENT [VERI-1482] Analyzing Verilog file 'prim_intr_hw.sv'
VERIFIC-COMMENT [VERI-1482] Analyzing Verilog file 'prim_mubi4_sync.sv'
VERIFIC-COMMENT [VERI-1482] Analyzing Verilog file 'prim_packer_fifo.sv'
VERIFIC-COMMENT [VERI-1482] Analyzing Verilog file 'prim_sec_anchor_buf.sv'
VERIFIC-COMMENT [VERI-1482] Analyzing Verilog file 'prim_secded_inv_39_32_dec.sv'
VERIFIC-COMMENT [VERI-1482] Analyzing Verilog file 'prim_secded_inv_39_32_enc.sv'
VERIFIC-COMMENT [VERI-1482] Analyzing Verilog file 'prim_secded_inv_64_57_dec.sv'
VERIFIC-COMMENT [VERI-1482] Analyzing Verilog file 'prim_secded_inv_64_57_enc.sv'
VERIFIC-COMMENT [VERI-1482] Analyzing Verilog file 'prim_sparse_fsm_flop.sv'
VERIFIC-COMMENT [VERI-1482] Analyzing Verilog file 'prim_subreg.sv'
VERIFIC-COMMENT [VERI-1482] Analyzing Verilog file 'prim_subreg_ext.sv'
VERIFIC-COMMENT [VERI-1482] Analyzing Verilog file 'tlul_adapter_reg.sv'
VERIFIC-COMMENT [VERI-1482] Analyzing Verilog file 'tlul_cmd_intg_chk.sv'
VERIFIC-COMMENT [VERI-1482] Analyzing Verilog file 'tlul_data_integ_dec.sv'
VERIFIC-COMMENT [VERI-1482] Analyzing Verilog file 'tlul_data_integ_enc.sv'
VERIFIC-COMMENT [VERI-1482] Analyzing Verilog file 'tlul_err.sv'
VERIFIC-COMMENT [VERI-1482] Analyzing Verilog file 'tlul_rsp_intg_gen.sv'

yosys> synth_rs -top edn -tech genesis -goal area -de -no_dsp -no_bram -verilog synthesized.v

3. Executing synth_rs pass: v0.4.79

yosys> read_verilog -lib -specify -nomem2reg +/rapidsilicon/common/cells_sim.v +/rapidsilicon/genesis/cells_sim.v +/rapidsilicon/genesis/dsp_sim.v

3.1. Executing Verilog-2005 frontend: /nfs_scratch/scratch/Vorak/aram/Workspace/Raptor/yosys_verific_rs/yosys/install/bin/../share/yosys/rapidsilicon/common/cells_sim.v
Parsing Verilog input from `/nfs_scratch/scratch/Vorak/aram/Workspace/Raptor/yosys_verific_rs/yosys/install/bin/../share/yosys/rapidsilicon/common/cells_sim.v' to AST representation.
Generating RTLIL representation for module `\inv'.
Generating RTLIL representation for module `\buff'.
Generating RTLIL representation for module `\logic_0'.
Generating RTLIL representation for module `\logic_1'.
Generating RTLIL representation for module `\gclkbuff'.
Successfully finished Verilog frontend.

3.2. Executing Verilog-2005 frontend: /nfs_scratch/scratch/Vorak/aram/Workspace/Raptor/yosys_verific_rs/yosys/install/bin/../share/yosys/rapidsilicon/genesis/cells_sim.v
Parsing Verilog input from `/nfs_scratch/scratch/Vorak/aram/Workspace/Raptor/yosys_verific_rs/yosys/install/bin/../share/yosys/rapidsilicon/genesis/cells_sim.v' to AST representation.
Generating RTLIL representation for module `\dffsre'.
Generating RTLIL representation for module `\dffnsre'.
Generating RTLIL representation for module `\latchsre'.
Generating RTLIL representation for module `\latchnsre'.
Generating RTLIL representation for module `\io_scff'.
Generating RTLIL representation for module `\scff'.
Generating RTLIL representation for module `\sh_dff'.
Generating RTLIL representation for module `\adder_carry'.
Generating RTLIL representation for module `\sdffr'.
Generating RTLIL representation for module `\sdffs'.
Generating RTLIL representation for module `\TDP_BRAM18'.
Generating RTLIL representation for module `\TDP36K'.
Generating RTLIL representation for module `\BRAM2x18_TDP'.
Generating RTLIL representation for module `\BRAM2x18_SDP'.
Generating RTLIL representation for module `\_$_mem_v2_asymmetric'.
Successfully finished Verilog frontend.

3.3. Executing Verilog-2005 frontend: /nfs_scratch/scratch/Vorak/aram/Workspace/Raptor/yosys_verific_rs/yosys/install/bin/../share/yosys/rapidsilicon/genesis/dsp_sim.v
Parsing Verilog input from `/nfs_scratch/scratch/Vorak/aram/Workspace/Raptor/yosys_verific_rs/yosys/install/bin/../share/yosys/rapidsilicon/genesis/dsp_sim.v' to AST representation.
Generating RTLIL representation for module `\RS_DSP1'.
Generating RTLIL representation for module `\RS_DSP2'.
Generating RTLIL representation for module `\RS_DSP2_MULT'.
Generating RTLIL representation for module `\RS_DSP2_MULT_REGIN'.
Generating RTLIL representation for module `\RS_DSP2_MULT_REGOUT'.
Generating RTLIL representation for module `\RS_DSP2_MULT_REGIN_REGOUT'.
Generating RTLIL representation for module `\RS_DSP2_MULTADD'.
Generating RTLIL representation for module `\RS_DSP2_MULTADD_REGIN'.
Generating RTLIL representation for module `\RS_DSP2_MULTADD_REGOUT'.
Generating RTLIL representation for module `\RS_DSP2_MULTADD_REGIN_REGOUT'.
Generating RTLIL representation for module `\RS_DSP2_MULTACC'.
Generating RTLIL representation for module `\RS_DSP2_MULTACC_REGIN'.
Generating RTLIL representation for module `\RS_DSP2_MULTACC_REGOUT'.
Generating RTLIL representation for module `\RS_DSP2_MULTACC_REGIN_REGOUT'.
Generating RTLIL representation for module `\dsp_t1_20x18x64_cfg_ports'.
Generating RTLIL representation for module `\dsp_t1_10x9x32_cfg_ports'.
Generating RTLIL representation for module `\dsp_t1_sim_cfg_ports'.
Generating RTLIL representation for module `\RS_DSP3'.
Generating RTLIL representation for module `\RS_DSP3_MULT'.
Generating RTLIL representation for module `\RS_DSP3_MULT_REGIN'.
Generating RTLIL representation for module `\RS_DSP3_MULT_REGOUT'.
Generating RTLIL representation for module `\RS_DSP3_MULT_REGIN_REGOUT'.
Generating RTLIL representation for module `\RS_DSP3_MULTADD'.
Generating RTLIL representation for module `\RS_DSP3_MULTADD_REGIN'.
Generating RTLIL representation for module `\RS_DSP3_MULTADD_REGOUT'.
Generating RTLIL representation for module `\RS_DSP3_MULTADD_REGIN_REGOUT'.
Generating RTLIL representation for module `\RS_DSP3_MULTACC'.
Generating RTLIL representation for module `\RS_DSP3_MULTACC_REGIN'.
Generating RTLIL representation for module `\RS_DSP3_MULTACC_REGOUT'.
Generating RTLIL representation for module `\RS_DSP3_MULTACC_REGIN_REGOUT'.
Generating RTLIL representation for module `\dsp_t1_20x18x64_cfg_params'.
Generating RTLIL representation for module `\dsp_t1_10x9x32_cfg_params'.
Generating RTLIL representation for module `\dsp_t1_sim_cfg_params'.
Successfully finished Verilog frontend.

yosys> hierarchy -check -top edn

3.4. Executing HIERARCHY pass (managing design hierarchy).
VERIFIC-WARNING [VERI-1927] edn_core.sv:483: port 'depth' remains unconnected for this instance
VERIFIC-WARNING [VERI-1927] edn_core.sv:523: port 'depth' remains unconnected for this instance
VERIFIC-WARNING [VERI-1927] edn_core.sv:678: port 'req_chk_i' remains unconnected for this instance
VERIFIC-INFO [VERI-1018] edn.sv:8: compiling module 'edn'
VERIFIC-INFO [VERI-1018] edn_reg_top.sv:8: compiling module 'edn_reg_top'
VERIFIC-INFO [VERI-1018] tlul_cmd_intg_chk.sv:3: compiling module 'tlul_cmd_intg_chk'
VERIFIC-INFO [VERI-1018] prim_secded_inv_64_57_dec.sv:7: compiling module 'prim_secded_inv_64_57_dec'
VERIFIC-INFO [VERI-1018] tlul_data_integ_dec.sv:10: compiling module 'tlul_data_integ_dec'
VERIFIC-INFO [VERI-1018] prim_secded_inv_39_32_dec.sv:7: compiling module 'prim_secded_inv_39_32_dec'
VERIFIC-INFO [VERI-1018] tlul_rsp_intg_gen.sv:9: compiling module 'tlul_rsp_intg_gen'
VERIFIC-INFO [VERI-1018] prim_secded_inv_64_57_enc.sv:7: compiling module 'prim_secded_inv_64_57_enc'
VERIFIC-INFO [VERI-1018] tlul_data_integ_enc.sv:10: compiling module 'tlul_data_integ_enc'
VERIFIC-INFO [VERI-1018] prim_secded_inv_39_32_enc.sv:7: compiling module 'prim_secded_inv_39_32_enc'
VERIFIC-INFO [VERI-1018] tlul_adapter_reg.sv:10: compiling module 'tlul_adapter_reg(RegAw=7)'
VERIFIC-INFO [VERI-1018] tlul_err.sv:7: compiling module 'tlul_err'
VERIFIC-WARNING [VERI-1209] tlul_err.sv:44: expression size 32 truncated to fit in target size 4
VERIFIC-INFO [VERI-1018] prim_subreg.sv:7: compiling module 'prim_subreg(DW=1,SWACCESS=SwAccessW1C_prim_subreg_pkg,RESVAL=1'b0)'
VERIFIC-INFO [VERI-1018] prim_subreg.sv:7: compiling module 'prim_subreg(DW=1,SWACCESS=SwAccessRW_prim_subreg_pkg,RESVAL=1'b0)'
VERIFIC-INFO [VERI-1018] prim_subreg_ext.sv:7: compiling module 'prim_subreg_ext(DW=32'b01)'
VERIFIC-INFO [VERI-1018] prim_subreg.sv:7: compiling module 'prim_subreg(DW=1,SWACCESS=SwAccessW0C_prim_subreg_pkg,RESVAL=1'b1)'
VERIFIC-INFO [VERI-1018] prim_subreg.sv:7: compiling module 'prim_subreg(DW=4,SWACCESS=SwAccessRW_prim_subreg_pkg,RESVAL=4'b0101)'
VERIFIC-INFO [VERI-1018] prim_subreg.sv:7: compiling module 'prim_subreg(SWACCESS=SwAccessRW_prim_subreg_pkg,RESVAL=32'b01)'
VERIFIC-INFO [VERI-1018] prim_subreg.sv:7: compiling module 'prim_subreg(SWACCESS=SwAccessRW_prim_subreg_pkg,RESVAL=32'b0111111111111000000000011)'
VERIFIC-INFO [VERI-1018] prim_subreg_ext.sv:7: compiling module 'prim_subreg_ext'
VERIFIC-INFO [VERI-1018] prim_subreg.sv:7: compiling module 'prim_subreg(DW=1,SWACCESS=SwAccessRO_prim_subreg_pkg,RESVAL=1'b1)'
VERIFIC-INFO [VERI-1018] prim_subreg.sv:7: compiling module 'prim_subreg(DW=1,SWACCESS=SwAccessRO_prim_subreg_pkg,RESVAL=1'b0)'
VERIFIC-INFO [VERI-1018] prim_subreg.sv:7: compiling module 'prim_subreg(SWACCESS=SwAccessRW_prim_subreg_pkg,RESVAL=32'b0)'
VERIFIC-INFO [VERI-1018] prim_subreg.sv:7: compiling module 'prim_subreg(DW=1,SWACCESS=SwAccessW0C_prim_subreg_pkg,RESVAL=1'b0)'
VERIFIC-INFO [VERI-1018] prim_subreg.sv:7: compiling module 'prim_subreg(DW=5,SWACCESS=SwAccessRW_prim_subreg_pkg,RESVAL=5'b0)'
VERIFIC-INFO [VERI-1018] edn_core.sv:11: compiling module 'edn_core(NumEndPoints=8)'
VERIFIC-INFO [VERI-1018] prim_intr_hw.sv:10: compiling module 'prim_intr_hw'
VERIFIC-INFO [VERI-1018] prim_mubi4_sync.sv:13: compiling module 'prim_mubi4_sync(NumCopies=29,AsyncOn=1'b0)'
VERIFIC-INFO [VERI-1018] prim_buf.sv:16: compiling module 'prim_buf'
VERIFIC-INFO [VERI-1018] prim_generic_buf.sv:6: compiling module 'prim_generic_buf'
VERIFIC-INFO [VERI-1018] prim_mubi4_sync.sv:13: compiling module 'prim_mubi4_sync(NumCopies=4,AsyncOn=1'b0)'
VERIFIC-INFO [VERI-1018] prim_mubi4_sync.sv:13: compiling module 'prim_mubi4_sync(NumCopies=2,AsyncOn=1'b0)'
VERIFIC-INFO [VERI-1018] prim_fifo_sync.sv:6: compiling module 'prim_fifo_sync(Width=32'b0100000,Pass=1'b0,Depth=32'b01101)'
VERIFIC-INFO [VERI-2571] prim_fifo_sync.sv:112: extracting RAM for identifier 'storage'
VERIFIC-INFO [VERI-1018] edn_main_sm.sv:9: compiling module 'edn_main_sm'
VERIFIC-INFO [VERI-1018] prim_sparse_fsm_flop.sv:6: compiling module 'prim_sparse_fsm_flop(StateEnumT=state_e_edn_main_sm,Width=6,ResetValue=6'b111011)'
VERIFIC-INFO [VERI-1018] prim_flop.sv:16: compiling module 'prim_flop(Width=6,ResetValue=6'b111011)'
VERIFIC-INFO [VERI-1018] prim_generic_flop.sv:7: compiling module 'prim_generic_flop(Width=6,ResetValue=6'b111011)'
VERIFIC-INFO [VERI-1018] prim_count.sv:36: compiling module 'prim_count(Width=32,CntStyle=CrossCnt_prim_count_pkg)'
VERIFIC-INFO [VERI-1018] prim_buf.sv:16: compiling module 'prim_buf(Width=32)'
VERIFIC-WARNING [VERI-1330] prim_count.sv:98: actual bit length 32 differs from formal bit length 1 for port 'in_i'
VERIFIC-WARNING [VERI-1330] prim_count.sv:99: actual bit length 32 differs from formal bit length 1 for port 'out_o'
VERIFIC-INFO [VERI-1018] prim_flop.sv:16: compiling module 'prim_flop(Width=32,ResetValue=32'b0)'
VERIFIC-INFO [VERI-1018] prim_generic_flop.sv:7: compiling module 'prim_generic_flop(Width=32,ResetValue=32'b0)'
VERIFIC-WARNING [VERI-1209] edn_core.sv:610: expression size 32 truncated to fit in target size 4
VERIFIC-INFO [VERI-1018] prim_mubi4_sync.sv:13: compiling module 'prim_mubi4_sync(NumCopies=3,AsyncOn=1'b0)'
VERIFIC-INFO [VERI-1018] prim_arbiter_ppc.sv:26: compiling module 'prim_arbiter_ppc(N=32'b01000)'
VERIFIC-INFO [VERI-1018] prim_packer_fifo.sv:42: compiling module 'prim_packer_fifo(InW=128,OutW=128,ClearOnRead=1'b0)'
VERIFIC-WARNING [VERI-1209] prim_packer_fifo.sv:142: expression size 32 truncated to fit in target size 1
VERIFIC-WARNING [VERI-1209] prim_packer_fifo.sv:146: expression size 2 truncated to fit in target size 1
VERIFIC-INFO [VERI-1018] prim_packer_fifo.sv:42: compiling module 'prim_packer_fifo(InW=128,OutW=32,ClearOnRead=1'b0)'
VERIFIC-WARNING [VERI-1209] prim_packer_fifo.sv:142: expression size 32 truncated to fit in target size 3
VERIFIC-WARNING [VERI-1209] prim_packer_fifo.sv:146: expression size 4 truncated to fit in target size 3
VERIFIC-INFO [VERI-1018] edn_ack_sm.sv:8: compiling module 'edn_ack_sm'
VERIFIC-INFO [VERI-1018] prim_sparse_fsm_flop.sv:6: compiling module 'prim_sparse_fsm_flop(StateEnumT=state_e_edn_ack_sm,Width=6,ResetValue=6'b101101)'
VERIFIC-INFO [VERI-1018] prim_flop.sv:16: compiling module 'prim_flop(Width=6,ResetValue=6'b101101)'
VERIFIC-INFO [VERI-1018] prim_generic_flop.sv:7: compiling module 'prim_generic_flop(Width=6,ResetValue=6'b101101)'
VERIFIC-WARNING [VDB-1053] edn_core.sv:678: input port 'req_chk_i' remains unconnected for this instance
VERIFIC-INFO [VERI-1018] prim_alert_sender.sv:32: compiling module 'prim_alert_sender(IsFatal=0)'
VERIFIC-INFO [VERI-1018] prim_diff_decode.sv:19: compiling module 'prim_diff_decode(AsyncOn=1'b1)'
VERIFIC-INFO [VERI-1018] prim_flop_2sync.sv:13: compiling module 'prim_flop_2sync(Width=1,ResetValue=1'b0)'
VERIFIC-INFO [VERI-1018] prim_generic_flop_2sync.sv:9: compiling module 'prim_generic_flop_2sync(Width=1,ResetValue=1'b0)'
VERIFIC-INFO [VERI-1018] prim_generic_flop.sv:7: compiling module 'prim_generic_flop(ResetValue=1'b0)'
VERIFIC-INFO [VERI-1018] prim_flop_2sync.sv:13: compiling module 'prim_flop_2sync(Width=1,ResetValue=1'b1)'
VERIFIC-INFO [VERI-1018] prim_generic_flop_2sync.sv:9: compiling module 'prim_generic_flop_2sync(Width=1,ResetValue=1'b1)'
VERIFIC-INFO [VERI-1018] prim_generic_flop.sv:7: compiling module 'prim_generic_flop(ResetValue=1'b1)'
VERIFIC-INFO [VERI-1018] prim_alert_sender.sv:32: compiling module 'prim_alert_sender(IsFatal=1)'
Importing module edn.
Importing module edn_core(NumEndPoints=8).
Importing module edn_ack_sm.
Importing module edn_main_sm.
Importing module edn_reg_top.
Importing module prim_alert_sender(IsFatal=0).
Importing module prim_alert_sender(IsFatal=1).
Importing module prim_arbiter_ppc(N=32'b01000).
Importing module prim_buf.
Importing module prim_count(Width=32,CntStyle=CrossCnt_prim_count_pkg).
Importing module prim_buf(Width=32).
Importing module prim_diff_decode(AsyncOn=1'b1).
Importing module prim_fifo_sync(Width=32'b0100000,Pass=1'b0,Depth=32'b01101).
Importing module prim_flop(Width=32,ResetValue=32'b0).
Importing module prim_flop_2sync(Width=1,ResetValue=1'b0).
Importing module prim_flop_2sync(Width=1,ResetValue=1'b1).
Importing module prim_generic_buf.
Importing module prim_generic_flop(Width=32,ResetValue=32'b0).
Importing module prim_generic_flop_2sync(Width=1,ResetValue=1'b0).
Importing module prim_generic_flop(ResetValue=1'b0).
Importing module prim_generic_flop_2sync(Width=1,ResetValue=1'b1).
Importing module prim_generic_flop(ResetValue=1'b1).
Importing module prim_intr_hw.
Importing module prim_mubi4_sync(NumCopies=2,AsyncOn=1'b0).
Importing module prim_mubi4_sync(NumCopies=29,AsyncOn=1'b0).
Importing module prim_mubi4_sync(NumCopies=3,AsyncOn=1'b0).
Importing module prim_mubi4_sync(NumCopies=4,AsyncOn=1'b0).
Importing module prim_packer_fifo(InW=128,OutW=128,ClearOnRead=1'b0).
Importing module prim_packer_fifo(InW=128,OutW=32,ClearOnRead=1'b0).
Importing module prim_sparse_fsm_flop(StateEnumT=state_e_edn_ack_sm,Width=6,ResetValue=6'b101101).
Importing module prim_flop(Width=6,ResetValue=6'b101101).
Importing module prim_generic_flop(Width=6,ResetValue=6'b101101).
Importing module prim_sparse_fsm_flop(StateEnumT=state_e_edn_main_sm,Width=6,ResetValue=6'b111011).
Importing module prim_flop(Width=6,ResetValue=6'b111011).
Importing module prim_generic_flop(Width=6,ResetValue=6'b111011).
Importing module prim_subreg(DW=1,SWACCESS=SwAccessRO_prim_subreg_pkg,RESVAL=1'b0).
Importing module prim_subreg(DW=1,SWACCESS=SwAccessRO_prim_subreg_pkg,RESVAL=1'b1).
Importing module prim_subreg(DW=1,SWACCESS=SwAccessRW_prim_subreg_pkg,RESVAL=1'b0).
Importing module prim_subreg(DW=1,SWACCESS=SwAccessW0C_prim_subreg_pkg,RESVAL=1'b0).
Importing module prim_subreg(DW=1,SWACCESS=SwAccessW0C_prim_subreg_pkg,RESVAL=1'b1).
Importing module prim_subreg(DW=1,SWACCESS=SwAccessW1C_prim_subreg_pkg,RESVAL=1'b0).
Importing module prim_subreg(DW=4,SWACCESS=SwAccessRW_prim_subreg_pkg,RESVAL=4'b0101).
Importing module prim_subreg(DW=5,SWACCESS=SwAccessRW_prim_subreg_pkg,RESVAL=5'b0).
Importing module prim_subreg(SWACCESS=SwAccessRW_prim_subreg_pkg,RESVAL=32'b0).
Importing module prim_subreg(SWACCESS=SwAccessRW_prim_subreg_pkg,RESVAL=32'b01).
Importing module prim_subreg(SWACCESS=SwAccessRW_prim_subreg_pkg,RESVAL=32'b0111111111111000000000011).
Importing module prim_subreg_ext.
Importing module prim_subreg_ext(DW=32'b01).
Importing module tlul_adapter_reg(RegAw=7).
Importing module tlul_cmd_intg_chk.
Importing module prim_secded_inv_64_57_dec.
Importing module tlul_data_integ_dec.
Importing module prim_secded_inv_39_32_dec.
Importing module tlul_err.
Importing module tlul_rsp_intg_gen.
Importing module prim_secded_inv_64_57_enc.
Importing module tlul_data_integ_enc.
Importing module prim_secded_inv_39_32_enc.

3.4.1. Analyzing design hierarchy..
Top module:  \edn
Used module:     \prim_alert_sender(IsFatal=1)
Used module:         \prim_buf
Used module:             \prim_generic_buf
Used module:         \prim_diff_decode(AsyncOn=1'b1)
Used module:             \prim_flop_2sync(Width=1,ResetValue=1'b1)
Used module:                 \prim_generic_flop_2sync(Width=1,ResetValue=1'b1)
Used module:                     \prim_generic_flop(ResetValue=1'b1)
Used module:             \prim_flop_2sync(Width=1,ResetValue=1'b0)
Used module:                 \prim_generic_flop_2sync(Width=1,ResetValue=1'b0)
Used module:                     \prim_generic_flop(ResetValue=1'b0)
Used module:     \prim_alert_sender(IsFatal=0)
Used module:     \edn_core(NumEndPoints=8)
Used module:         \edn_ack_sm
Used module:             \prim_sparse_fsm_flop(StateEnumT=state_e_edn_ack_sm,Width=6,ResetValue=6'b101101)
Used module:                 \prim_flop(Width=6,ResetValue=6'b101101)
Used module:                     \prim_generic_flop(Width=6,ResetValue=6'b101101)
Used module:         \prim_packer_fifo(InW=128,OutW=32,ClearOnRead=1'b0)
Used module:         \prim_packer_fifo(InW=128,OutW=128,ClearOnRead=1'b0)
Used module:         \prim_arbiter_ppc(N=32'b01000)
Used module:         \prim_mubi4_sync(NumCopies=3,AsyncOn=1'b0)
Used module:         \prim_count(Width=32,CntStyle=CrossCnt_prim_count_pkg)
Used module:             \prim_flop(Width=32,ResetValue=32'b0)
Used module:                 \prim_generic_flop(Width=32,ResetValue=32'b0)
Used module:             \prim_buf(Width=32)
Used module:         \edn_main_sm
Used module:             \prim_sparse_fsm_flop(StateEnumT=state_e_edn_main_sm,Width=6,ResetValue=6'b111011)
Used module:                 \prim_flop(Width=6,ResetValue=6'b111011)
Used module:                     \prim_generic_flop(Width=6,ResetValue=6'b111011)
Used module:         \prim_fifo_sync(Width=32'b0100000,Pass=1'b0,Depth=32'b01101)
Used module:         \prim_mubi4_sync(NumCopies=2,AsyncOn=1'b0)
Used module:         \prim_mubi4_sync(NumCopies=4,AsyncOn=1'b0)
Used module:         \prim_mubi4_sync(NumCopies=29,AsyncOn=1'b0)
Used module:         \prim_intr_hw
Used module:     \edn_reg_top
Used module:         \prim_subreg(DW=5,SWACCESS=SwAccessRW_prim_subreg_pkg,RESVAL=5'b0)
Used module:         \prim_subreg(DW=1,SWACCESS=SwAccessRO_prim_subreg_pkg,RESVAL=1'b0)
Used module:         \prim_subreg(DW=1,SWACCESS=SwAccessW0C_prim_subreg_pkg,RESVAL=1'b0)
Used module:         \prim_subreg(SWACCESS=SwAccessRW_prim_subreg_pkg,RESVAL=32'b0)
Used module:         \prim_subreg_ext
Used module:         \prim_subreg(DW=1,SWACCESS=SwAccessRO_prim_subreg_pkg,RESVAL=1'b1)
Used module:         \prim_subreg(SWACCESS=SwAccessRW_prim_subreg_pkg,RESVAL=32'b0111111111111000000000011)
Used module:         \prim_subreg(SWACCESS=SwAccessRW_prim_subreg_pkg,RESVAL=32'b01)
Used module:         \prim_subreg(DW=1,SWACCESS=SwAccessRW_prim_subreg_pkg,RESVAL=1'b0)
Used module:         \prim_subreg(DW=4,SWACCESS=SwAccessRW_prim_subreg_pkg,RESVAL=4'b0101)
Used module:         \prim_subreg(DW=1,SWACCESS=SwAccessW0C_prim_subreg_pkg,RESVAL=1'b1)
Used module:         \prim_subreg_ext(DW=32'b01)
Used module:         \prim_subreg(DW=1,SWACCESS=SwAccessW1C_prim_subreg_pkg,RESVAL=1'b0)
Used module:         \tlul_adapter_reg(RegAw=7)
Used module:             \tlul_err
Used module:         \tlul_rsp_intg_gen
Used module:             \tlul_data_integ_enc
Used module:                 \prim_secded_inv_39_32_enc
Used module:             \prim_secded_inv_64_57_enc
Used module:         \tlul_cmd_intg_chk
Used module:             \tlul_data_integ_dec
Used module:                 \prim_secded_inv_39_32_dec
Used module:             \prim_secded_inv_64_57_dec

3.4.2. Analyzing design hierarchy..
Top module:  \edn
Used module:     \prim_alert_sender(IsFatal=1)
Used module:         \prim_buf
Used module:             \prim_generic_buf
Used module:         \prim_diff_decode(AsyncOn=1'b1)
Used module:             \prim_flop_2sync(Width=1,ResetValue=1'b1)
Used module:                 \prim_generic_flop_2sync(Width=1,ResetValue=1'b1)
Used module:                     \prim_generic_flop(ResetValue=1'b1)
Used module:             \prim_flop_2sync(Width=1,ResetValue=1'b0)
Used module:                 \prim_generic_flop_2sync(Width=1,ResetValue=1'b0)
Used module:                     \prim_generic_flop(ResetValue=1'b0)
Used module:     \prim_alert_sender(IsFatal=0)
Used module:     \edn_core(NumEndPoints=8)
Used module:         \edn_ack_sm
Used module:             \prim_sparse_fsm_flop(StateEnumT=state_e_edn_ack_sm,Width=6,ResetValue=6'b101101)
Used module:                 \prim_flop(Width=6,ResetValue=6'b101101)
Used module:                     \prim_generic_flop(Width=6,ResetValue=6'b101101)
Used module:         \prim_packer_fifo(InW=128,OutW=32,ClearOnRead=1'b0)
Used module:         \prim_packer_fifo(InW=128,OutW=128,ClearOnRead=1'b0)
Used module:         \prim_arbiter_ppc(N=32'b01000)
Used module:         \prim_mubi4_sync(NumCopies=3,AsyncOn=1'b0)
Used module:         \prim_count(Width=32,CntStyle=CrossCnt_prim_count_pkg)
Used module:             \prim_flop(Width=32,ResetValue=32'b0)
Used module:                 \prim_generic_flop(Width=32,ResetValue=32'b0)
Used module:             \prim_buf(Width=32)
Used module:         \edn_main_sm
Used module:             \prim_sparse_fsm_flop(StateEnumT=state_e_edn_main_sm,Width=6,ResetValue=6'b111011)
Used module:                 \prim_flop(Width=6,ResetValue=6'b111011)
Used module:                     \prim_generic_flop(Width=6,ResetValue=6'b111011)
Used module:         \prim_fifo_sync(Width=32'b0100000,Pass=1'b0,Depth=32'b01101)
Used module:         \prim_mubi4_sync(NumCopies=2,AsyncOn=1'b0)
Used module:         \prim_mubi4_sync(NumCopies=4,AsyncOn=1'b0)
Used module:         \prim_mubi4_sync(NumCopies=29,AsyncOn=1'b0)
Used module:         \prim_intr_hw
Used module:     \edn_reg_top
Used module:         \prim_subreg(DW=5,SWACCESS=SwAccessRW_prim_subreg_pkg,RESVAL=5'b0)
Used module:         \prim_subreg(DW=1,SWACCESS=SwAccessRO_prim_subreg_pkg,RESVAL=1'b0)
Used module:         \prim_subreg(DW=1,SWACCESS=SwAccessW0C_prim_subreg_pkg,RESVAL=1'b0)
Used module:         \prim_subreg(SWACCESS=SwAccessRW_prim_subreg_pkg,RESVAL=32'b0)
Used module:         \prim_subreg_ext
Used module:         \prim_subreg(DW=1,SWACCESS=SwAccessRO_prim_subreg_pkg,RESVAL=1'b1)
Used module:         \prim_subreg(SWACCESS=SwAccessRW_prim_subreg_pkg,RESVAL=32'b0111111111111000000000011)
Used module:         \prim_subreg(SWACCESS=SwAccessRW_prim_subreg_pkg,RESVAL=32'b01)
Used module:         \prim_subreg(DW=1,SWACCESS=SwAccessRW_prim_subreg_pkg,RESVAL=1'b0)
Used module:         \prim_subreg(DW=4,SWACCESS=SwAccessRW_prim_subreg_pkg,RESVAL=4'b0101)
Used module:         \prim_subreg(DW=1,SWACCESS=SwAccessW0C_prim_subreg_pkg,RESVAL=1'b1)
Used module:         \prim_subreg_ext(DW=32'b01)
Used module:         \prim_subreg(DW=1,SWACCESS=SwAccessW1C_prim_subreg_pkg,RESVAL=1'b0)
Used module:         \tlul_adapter_reg(RegAw=7)
Used module:             \tlul_err
Used module:         \tlul_rsp_intg_gen
Used module:             \tlul_data_integ_enc
Used module:                 \prim_secded_inv_39_32_enc
Used module:             \prim_secded_inv_64_57_enc
Used module:         \tlul_cmd_intg_chk
Used module:             \tlul_data_integ_dec
Used module:                 \prim_secded_inv_39_32_dec
Used module:             \prim_secded_inv_64_57_dec
Removed 0 unused modules.

yosys> proc

3.5. Executing PROC pass (convert processes to netlists).

yosys> proc_clean

3.5.1. Executing PROC_CLEAN pass (remove empty switches from decision trees).
Cleaned up 0 empty switches.

yosys> proc_rmdead

3.5.2. Executing PROC_RMDEAD pass (remove dead branches from decision trees).
Removed a total of 0 dead cases.

yosys> proc_prune

3.5.3. Executing PROC_PRUNE pass (remove redundant assignments in processes).
Removed 0 redundant assignments.
Promoted 0 assignments to connections.

yosys> proc_init

3.5.4. Executing PROC_INIT pass (extract init attributes).

yosys> proc_arst

3.5.5. Executing PROC_ARST pass (detect async resets in processes).

yosys> proc_rom

3.5.6. Executing PROC_ROM pass (convert switches to ROMs).
Converted 0 switches.

yosys> proc_mux

3.5.7. Executing PROC_MUX pass (convert decision trees to multiplexers).

yosys> proc_dlatch

3.5.8. Executing PROC_DLATCH pass (convert process syncs to latches).

yosys> proc_dff

3.5.9. Executing PROC_DFF pass (convert process syncs to FFs).

yosys> proc_memwr

3.5.10. Executing PROC_MEMWR pass (convert process memory writes to cells).

yosys> proc_clean

3.5.11. Executing PROC_CLEAN pass (remove empty switches from decision trees).
Cleaned up 0 empty switches.

yosys> opt_expr -keepdc

3.5.12. Executing OPT_EXPR pass (perform const folding).
Optimizing module prim_secded_inv_39_32_enc.
Optimizing module tlul_data_integ_enc.
Optimizing module prim_secded_inv_64_57_enc.
Optimizing module tlul_rsp_intg_gen.
Optimizing module tlul_err.
<suppressed ~1 debug messages>
Optimizing module prim_secded_inv_39_32_dec.
Optimizing module tlul_data_integ_dec.
Optimizing module prim_secded_inv_64_57_dec.
Optimizing module tlul_cmd_intg_chk.
<suppressed ~1 debug messages>
Optimizing module tlul_adapter_reg(RegAw=7).
<suppressed ~11 debug messages>
Optimizing module prim_subreg_ext(DW=32'b01).
Optimizing module prim_subreg_ext.
Optimizing module prim_subreg(SWACCESS=SwAccessRW_prim_subreg_pkg,RESVAL=32'b0111111111111000000000011).
<suppressed ~3 debug messages>
Optimizing module prim_subreg(SWACCESS=SwAccessRW_prim_subreg_pkg,RESVAL=32'b01).
<suppressed ~3 debug messages>
Optimizing module prim_subreg(SWACCESS=SwAccessRW_prim_subreg_pkg,RESVAL=32'b0).
<suppressed ~3 debug messages>
Optimizing module prim_subreg(DW=5,SWACCESS=SwAccessRW_prim_subreg_pkg,RESVAL=5'b0).
<suppressed ~3 debug messages>
Optimizing module prim_subreg(DW=4,SWACCESS=SwAccessRW_prim_subreg_pkg,RESVAL=4'b0101).
<suppressed ~3 debug messages>
Optimizing module prim_subreg(DW=1,SWACCESS=SwAccessW1C_prim_subreg_pkg,RESVAL=1'b0).
<suppressed ~2 debug messages>
Optimizing module prim_subreg(DW=1,SWACCESS=SwAccessW0C_prim_subreg_pkg,RESVAL=1'b1).
<suppressed ~2 debug messages>
Optimizing module prim_subreg(DW=1,SWACCESS=SwAccessW0C_prim_subreg_pkg,RESVAL=1'b0).
<suppressed ~2 debug messages>
Optimizing module prim_subreg(DW=1,SWACCESS=SwAccessRW_prim_subreg_pkg,RESVAL=1'b0).
<suppressed ~2 debug messages>
Optimizing module prim_subreg(DW=1,SWACCESS=SwAccessRO_prim_subreg_pkg,RESVAL=1'b1).
<suppressed ~2 debug messages>
Optimizing module prim_subreg(DW=1,SWACCESS=SwAccessRO_prim_subreg_pkg,RESVAL=1'b0).
<suppressed ~2 debug messages>
Optimizing module prim_generic_flop(Width=6,ResetValue=6'b111011).
<suppressed ~2 debug messages>
Optimizing module prim_flop(Width=6,ResetValue=6'b111011).
Optimizing module prim_sparse_fsm_flop(StateEnumT=state_e_edn_main_sm,Width=6,ResetValue=6'b111011).
Optimizing module prim_generic_flop(Width=6,ResetValue=6'b101101).
<suppressed ~2 debug messages>
Optimizing module prim_flop(Width=6,ResetValue=6'b101101).
Optimizing module prim_sparse_fsm_flop(StateEnumT=state_e_edn_ack_sm,Width=6,ResetValue=6'b101101).
Optimizing module prim_packer_fifo(InW=128,OutW=32,ClearOnRead=1'b0).
<suppressed ~9 debug messages>
Optimizing module prim_packer_fifo(InW=128,OutW=128,ClearOnRead=1'b0).
<suppressed ~5 debug messages>
Optimizing module prim_mubi4_sync(NumCopies=4,AsyncOn=1'b0).
Optimizing module prim_mubi4_sync(NumCopies=3,AsyncOn=1'b0).
Optimizing module prim_mubi4_sync(NumCopies=29,AsyncOn=1'b0).
Optimizing module prim_mubi4_sync(NumCopies=2,AsyncOn=1'b0).
Optimizing module prim_intr_hw.
<suppressed ~1 debug messages>
Optimizing module prim_generic_flop(ResetValue=1'b1).
<suppressed ~1 debug messages>
Optimizing module prim_generic_flop_2sync(Width=1,ResetValue=1'b1).
Optimizing module prim_generic_flop(ResetValue=1'b0).
<suppressed ~1 debug messages>
Optimizing module prim_generic_flop_2sync(Width=1,ResetValue=1'b0).
Optimizing module prim_generic_flop(Width=32,ResetValue=32'b0).
<suppressed ~2 debug messages>
Optimizing module prim_generic_buf.
Optimizing module prim_flop_2sync(Width=1,ResetValue=1'b1).
Optimizing module prim_flop_2sync(Width=1,ResetValue=1'b0).
Optimizing module prim_flop(Width=32,ResetValue=32'b0).
Optimizing module prim_fifo_sync(Width=32'b0100000,Pass=1'b0,Depth=32'b01101).
<suppressed ~3 debug messages>
Optimizing module prim_diff_decode(AsyncOn=1'b1).
<suppressed ~5 debug messages>
Optimizing module prim_buf(Width=32).
Optimizing module prim_count(Width=32,CntStyle=CrossCnt_prim_count_pkg).
<suppressed ~4 debug messages>
Optimizing module prim_buf.
Optimizing module prim_arbiter_ppc(N=32'b01000).
<suppressed ~2 debug messages>
Optimizing module prim_alert_sender(IsFatal=1).
<suppressed ~7 debug messages>
Optimizing module prim_alert_sender(IsFatal=0).
<suppressed ~7 debug messages>
Optimizing module edn_reg_top.
<suppressed ~2 debug messages>
Optimizing module edn_main_sm.
Optimizing module edn_ack_sm.
Optimizing module edn_core(NumEndPoints=8).
<suppressed ~24 debug messages>
Optimizing module edn.

yosys> bmuxmap

3.6. Executing BMUXMAP pass.

yosys> demuxmap

3.7. Executing DEMUXMAP pass.

yosys> clean_zerowidth

yosys> flatten

3.8. Executing FLATTEN pass (flatten design).
Deleting now unused module edn_ack_sm.
Deleting now unused module edn_core(NumEndPoints=8).
Deleting now unused module edn_main_sm.
Deleting now unused module edn_reg_top.
Deleting now unused module prim_alert_sender(IsFatal=0).
Deleting now unused module prim_alert_sender(IsFatal=1).
Deleting now unused module prim_arbiter_ppc(N=32'b01000).
Deleting now unused module prim_buf.
Deleting now unused module prim_buf(Width=32).
Deleting now unused module prim_count(Width=32,CntStyle=CrossCnt_prim_count_pkg).
Deleting now unused module prim_diff_decode(AsyncOn=1'b1).
Deleting now unused module prim_fifo_sync(Width=32'b0100000,Pass=1'b0,Depth=32'b01101).
Deleting now unused module prim_flop(Width=32,ResetValue=32'b0).
Deleting now unused module prim_flop(Width=6,ResetValue=6'b101101).
Deleting now unused module prim_flop(Width=6,ResetValue=6'b111011).
Deleting now unused module prim_flop_2sync(Width=1,ResetValue=1'b0).
Deleting now unused module prim_flop_2sync(Width=1,ResetValue=1'b1).
Deleting now unused module prim_generic_buf.
Deleting now unused module prim_generic_flop(ResetValue=1'b0).
Deleting now unused module prim_generic_flop(ResetValue=1'b1).
Deleting now unused module prim_generic_flop(Width=32,ResetValue=32'b0).
Deleting now unused module prim_generic_flop(Width=6,ResetValue=6'b101101).
Deleting now unused module prim_generic_flop(Width=6,ResetValue=6'b111011).
Deleting now unused module prim_generic_flop_2sync(Width=1,ResetValue=1'b0).
Deleting now unused module prim_generic_flop_2sync(Width=1,ResetValue=1'b1).
Deleting now unused module prim_intr_hw.
Deleting now unused module prim_mubi4_sync(NumCopies=2,AsyncOn=1'b0).
Deleting now unused module prim_mubi4_sync(NumCopies=29,AsyncOn=1'b0).
Deleting now unused module prim_mubi4_sync(NumCopies=3,AsyncOn=1'b0).
Deleting now unused module prim_mubi4_sync(NumCopies=4,AsyncOn=1'b0).
Deleting now unused module prim_packer_fifo(InW=128,OutW=128,ClearOnRead=1'b0).
Deleting now unused module prim_packer_fifo(InW=128,OutW=32,ClearOnRead=1'b0).
Deleting now unused module prim_secded_inv_39_32_dec.
Deleting now unused module prim_secded_inv_39_32_enc.
Deleting now unused module prim_secded_inv_64_57_dec.
Deleting now unused module prim_secded_inv_64_57_enc.
Deleting now unused module prim_sparse_fsm_flop(StateEnumT=state_e_edn_ack_sm,Width=6,ResetValue=6'b101101).
Deleting now unused module prim_sparse_fsm_flop(StateEnumT=state_e_edn_main_sm,Width=6,ResetValue=6'b111011).
Deleting now unused module prim_subreg(DW=1,SWACCESS=SwAccessRO_prim_subreg_pkg,RESVAL=1'b0).
Deleting now unused module prim_subreg(DW=1,SWACCESS=SwAccessRO_prim_subreg_pkg,RESVAL=1'b1).
Deleting now unused module prim_subreg(DW=1,SWACCESS=SwAccessRW_prim_subreg_pkg,RESVAL=1'b0).
Deleting now unused module prim_subreg(DW=1,SWACCESS=SwAccessW0C_prim_subreg_pkg,RESVAL=1'b0).
Deleting now unused module prim_subreg(DW=1,SWACCESS=SwAccessW0C_prim_subreg_pkg,RESVAL=1'b1).
Deleting now unused module prim_subreg(DW=1,SWACCESS=SwAccessW1C_prim_subreg_pkg,RESVAL=1'b0).
Deleting now unused module prim_subreg(DW=4,SWACCESS=SwAccessRW_prim_subreg_pkg,RESVAL=4'b0101).
Deleting now unused module prim_subreg(DW=5,SWACCESS=SwAccessRW_prim_subreg_pkg,RESVAL=5'b0).
Deleting now unused module prim_subreg(SWACCESS=SwAccessRW_prim_subreg_pkg,RESVAL=32'b0).
Deleting now unused module prim_subreg(SWACCESS=SwAccessRW_prim_subreg_pkg,RESVAL=32'b01).
Deleting now unused module prim_subreg(SWACCESS=SwAccessRW_prim_subreg_pkg,RESVAL=32'b0111111111111000000000011).
Deleting now unused module prim_subreg_ext.
Deleting now unused module prim_subreg_ext(DW=32'b01).
Deleting now unused module tlul_adapter_reg(RegAw=7).
Deleting now unused module tlul_cmd_intg_chk.
Deleting now unused module tlul_data_integ_dec.
Deleting now unused module tlul_data_integ_enc.
Deleting now unused module tlul_err.
Deleting now unused module tlul_rsp_intg_gen.
<suppressed ~258 debug messages>

yosys> bmuxmap

3.9. Executing BMUXMAP pass.

yosys> demuxmap

3.10. Executing DEMUXMAP pass.

yosys> clean_zerowidth

yosys> tribuf -logic -formal

3.11. Executing TRIBUF pass.

yosys> deminout

3.12. Executing DEMINOUT pass (demote inout ports to input or output).

yosys> opt_expr

3.13. Executing OPT_EXPR pass (perform const folding).
Optimizing module edn.
<suppressed ~85 debug messages>

yosys> opt_clean

3.14. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \edn..
Removed 285 unused cells and 8115 unused wires.
<suppressed ~1455 debug messages>

yosys> check

3.15. Executing CHECK pass (checking for obvious problems).
Checking module edn...
Found and reported 0 problems.

yosys> opt_expr

3.16. Executing OPT_EXPR pass (perform const folding).
Optimizing module edn.
<suppressed ~25 debug messages>

yosys> opt_merge -nomux

3.17. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\edn'.
<suppressed ~195 debug messages>
Removed a total of 65 cells.

yosys> opt_muxtree

3.18. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \edn..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
      Replacing known input bits on port A of cell $flatten\gen_alert_tx[1].u_prim_alert_sender.$verific$mux_22$prim_alert_sender.sv:142$6399: \gen_alert_tx[1].u_prim_alert_sender.state_q -> 3'000
      Replacing known input bits on port B of cell $flatten\gen_alert_tx[1].u_prim_alert_sender.\i_decode_ack.$auto$bmuxmap.cc:60:execute$8899: \gen_alert_tx[1].u_prim_alert_sender.i_decode_ack.gen_async.state_q -> 2'11
      Replacing known input bits on port B of cell $flatten\gen_alert_tx[1].u_prim_alert_sender.\i_decode_ping.$auto$bmuxmap.cc:60:execute$8899: \gen_alert_tx[1].u_prim_alert_sender.i_decode_ping.gen_async.state_q -> 2'11
      Replacing known input bits on port A of cell $flatten\gen_alert_tx[0].u_prim_alert_sender.$verific$mux_22$prim_alert_sender.sv:142$6292: \gen_alert_tx[0].u_prim_alert_sender.state_q -> 3'000
      Replacing known input bits on port B of cell $flatten\gen_alert_tx[0].u_prim_alert_sender.\i_decode_ack.$auto$bmuxmap.cc:60:execute$8899: \gen_alert_tx[0].u_prim_alert_sender.i_decode_ack.gen_async.state_q -> 2'11
      Replacing known input bits on port B of cell $flatten\u_reg.\u_recov_alert_sts_edn_bus_cmp_alert.$verific$i17$prim_subreg.sv:72$7658: \u_reg.u_recov_alert_sts_edn_bus_cmp_alert.wr_en -> 1'1
      Replacing known input bits on port B of cell $flatten\gen_alert_tx[0].u_prim_alert_sender.\i_decode_ping.$auto$bmuxmap.cc:60:execute$8899: \gen_alert_tx[0].u_prim_alert_sender.i_decode_ping.gen_async.state_q -> 2'11
  Analyzing evaluation results.
Removed 0 multiplexer ports.
<suppressed ~164 debug messages>

yosys> opt_reduce

3.19. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \edn.
    New ctrl vector for $pmux cell $flatten\u_reg.$verific$select_305$edn_reg_top.sv:1268$6216: { \u_reg.addr_hit [0] $flatten\u_reg.$verific$n1563$4473 $flatten\u_reg.$verific$n1572$4482 $flatten\u_reg.$verific$n1575$4485 $flatten\u_reg.$verific$n1578$4488 $flatten\u_reg.$verific$n1581$4491 $flatten\u_reg.$verific$n1584$4494 $flatten\u_reg.$verific$n1590$4500 $flatten\u_reg.$verific$n1599$4509 $flatten\u_reg.$verific$n1602$4512 $flatten\u_reg.$verific$n1605$4515 $flatten\u_reg.$verific$n1608$4518 $flatten\u_reg.$verific$n1610$4520 }
  Optimizing cells in module \edn.
Performed a total of 1 changes.

yosys> opt_merge

3.20. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\edn'.
<suppressed ~12 debug messages>
Removed a total of 4 cells.

yosys> opt_share

3.21. Executing OPT_SHARE pass.

yosys> opt_dff -nosdff -nodffe

3.22. Executing OPT_DFF pass (perform DFF optimizations).
Changing const-value async load to async reset on $flatten\gen_alert_tx[0].u_prim_alert_sender.\i_decode_ping.$verific$gen_async.diff_pq_reg$prim_diff_decode.sv:172$6764 ($aldff) from module edn.
Changing const-value async load to async reset on $flatten\u_reg.\u_sw_cmd_sts_cmd_sts.$verific$q_reg[0]$prim_subreg.sv:72$7604 ($aldff) from module edn.
Changing const-value async load to async reset on $flatten\u_reg.\u_sw_cmd_sts_cmd_rdy.$verific$q_reg[0]$prim_subreg.sv:72$7625 ($aldff) from module edn.
Changing const-value async load to async reset on $flatten\u_reg.\u_sum_sts_req_mode_sm_sts.$verific$q_reg[0]$prim_subreg.sv:72$7642 ($aldff) from module edn.
Changing const-value async load to async reset on $flatten\u_reg.\u_sum_sts_boot_inst_ack.$verific$q_reg[0]$prim_subreg.sv:72$7642 ($aldff) from module edn.
Changing const-value async load to async reset on $flatten\u_reg.\u_regwen.$verific$q_reg[0]$prim_subreg.sv:72$7680 ($aldff) from module edn.
Changing const-value async load to async reset on $flatten\u_reg.\u_reg_if.$verific$rspop_reg$tlul_adapter_reg.sv:80$7886 ($aldff) from module edn.
Changing const-value async load to async reset on $flatten\u_reg.\u_reg_if.$verific$reqsz_reg$tlul_adapter_reg.sv:80$7885 ($aldff) from module edn.
Changing const-value async load to async reset on $flatten\u_reg.\u_reg_if.$verific$reqid_reg$tlul_adapter_reg.sv:80$7884 ($aldff) from module edn.
Changing const-value async load to async reset on $flatten\u_reg.\u_reg_if.$verific$rdata_reg$tlul_adapter_reg.sv:90$7894 ($aldff) from module edn.
Changing const-value async load to async reset on $flatten\u_reg.\u_reg_if.$verific$outstanding_reg$tlul_adapter_reg.sv:67$7874 ($aldff) from module edn.
Changing const-value async load to async reset on $flatten\u_reg.\u_reg_if.$verific$error_reg$tlul_adapter_reg.sv:90$7895 ($aldff) from module edn.
Changing const-value async load to async reset on $flatten\u_reg.\u_recov_alert_sts_edn_enable_field_alert.$verific$q_reg[0]$prim_subreg.sv:72$7659 ($aldff) from module edn.
Changing const-value async load to async reset on $flatten\u_reg.\u_recov_alert_sts_edn_bus_cmp_alert.$verific$q_reg[0]$prim_subreg.sv:72$7659 ($aldff) from module edn.
Changing const-value async load to async reset on $flatten\u_reg.\u_recov_alert_sts_cmd_fifo_rst_field_alert.$verific$q_reg[0]$prim_subreg.sv:72$7659 ($aldff) from module edn.
Changing const-value async load to async reset on $flatten\u_reg.\u_recov_alert_sts_boot_req_mode_field_alert.$verific$q_reg[0]$prim_subreg.sv:72$7659 ($aldff) from module edn.
Changing const-value async load to async reset on $flatten\u_reg.\u_recov_alert_sts_auto_req_mode_field_alert.$verific$q_reg[0]$prim_subreg.sv:72$7659 ($aldff) from module edn.
Changing const-value async load to async reset on $flatten\u_reg.\u_max_num_reqs_between_reseeds.$verific$qe_reg$prim_subreg.sv:67$7752 ($aldff) from module edn.
Changing const-value async load to async reset on $flatten\u_reg.\u_max_num_reqs_between_reseeds.$verific$q_reg$prim_subreg.sv:72$7756 ($aldff) from module edn.
Changing const-value async load to async reset on $flatten\u_reg.\u_intr_state_edn_fatal_err.$verific$q_reg[0]$prim_subreg.sv:72$7697 ($aldff) from module edn.
Changing const-value async load to async reset on $flatten\u_reg.\u_intr_state_edn_cmd_req_done.$verific$q_reg[0]$prim_subreg.sv:72$7697 ($aldff) from module edn.
Changing const-value async load to async reset on $flatten\u_reg.\u_intr_enable_edn_fatal_err.$verific$q_reg[0]$prim_subreg.sv:72$7642 ($aldff) from module edn.
Changing const-value async load to async reset on $flatten\u_reg.\u_intr_enable_edn_cmd_req_done.$verific$q_reg[0]$prim_subreg.sv:72$7642 ($aldff) from module edn.
Changing const-value async load to async reset on $flatten\u_reg.\u_err_code_test.$verific$qe_reg$prim_subreg.sv:67$7733 ($aldff) from module edn.
Changing const-value async load to async reset on $flatten\u_reg.\u_err_code_test.$verific$q_reg$prim_subreg.sv:72$7737 ($aldff) from module edn.
Changing const-value async load to async reset on $flatten\u_reg.\u_err_code_sfifo_rescmd_err.$verific$q_reg[0]$prim_subreg.sv:72$7604 ($aldff) from module edn.
Changing const-value async load to async reset on $flatten\u_reg.\u_err_code_sfifo_gencmd_err.$verific$q_reg[0]$prim_subreg.sv:72$7604 ($aldff) from module edn.
Changing const-value async load to async reset on $flatten\u_reg.\u_err_code_fifo_write_err.$verific$q_reg[0]$prim_subreg.sv:72$7604 ($aldff) from module edn.
Changing const-value async load to async reset on $flatten\u_reg.\u_err_code_fifo_state_err.$verific$q_reg[0]$prim_subreg.sv:72$7604 ($aldff) from module edn.
Changing const-value async load to async reset on $flatten\u_reg.\u_err_code_fifo_read_err.$verific$q_reg[0]$prim_subreg.sv:72$7604 ($aldff) from module edn.
Changing const-value async load to async reset on $flatten\u_reg.\u_err_code_edn_main_sm_err.$verific$q_reg[0]$prim_subreg.sv:72$7604 ($aldff) from module edn.
Changing const-value async load to async reset on $flatten\u_reg.\u_err_code_edn_cntr_err.$verific$q_reg[0]$prim_subreg.sv:72$7604 ($aldff) from module edn.
Changing const-value async load to async reset on $flatten\u_reg.\u_err_code_edn_ack_sm_err.$verific$q_reg[0]$prim_subreg.sv:72$7604 ($aldff) from module edn.
Changing const-value async load to async reset on $flatten\u_reg.\u_ctrl_edn_enable.$verific$q_reg$prim_subreg.sv:72$7718 ($aldff) from module edn.
Changing const-value async load to async reset on $flatten\u_reg.\u_ctrl_cmd_fifo_rst.$verific$q_reg$prim_subreg.sv:72$7718 ($aldff) from module edn.
Changing const-value async load to async reset on $flatten\u_reg.\u_ctrl_boot_req_mode.$verific$q_reg$prim_subreg.sv:72$7718 ($aldff) from module edn.
Changing const-value async load to async reset on $flatten\u_reg.\u_ctrl_auto_req_mode.$verific$q_reg$prim_subreg.sv:72$7718 ($aldff) from module edn.
Changing const-value async load to async reset on $flatten\u_reg.\u_boot_ins_cmd.$verific$q_reg$prim_subreg.sv:72$7777 ($aldff) from module edn.
Changing const-value async load to async reset on $flatten\u_reg.\u_boot_gen_cmd.$verific$q_reg$prim_subreg.sv:72$7798 ($aldff) from module edn.
Changing const-value async load to async reset on $flatten\u_reg.$verific$intg_err_q_reg$edn_reg_top.sv:61$4651 ($aldff) from module edn.
Changing const-value async load to async reset on $flatten\gen_alert_tx[0].u_prim_alert_sender.\i_decode_ack.\gen_async.i_sync_p.\gen_generic.u_impl_generic.\u_sync_2.$verific$q_o_reg[0]$prim_generic_flop.sv:23$6954 ($aldff) from module edn.
Changing const-value async load to async reset on $flatten\u_edn_core.\u_prim_packer_fifo_cs.$verific$gen_unpack_mode.ptr_q_reg[0]$prim_packer_fifo.sv:128$7392 ($aldff) from module edn.
Changing const-value async load to async reset on $flatten\u_edn_core.\u_prim_packer_fifo_cs.$verific$depth_q_reg[0]$prim_packer_fifo.sv:87$7386 ($aldff) from module edn.
Changing const-value async load to async reset on $flatten\u_edn_core.\u_prim_packer_fifo_cs.$verific$data_q_reg$prim_packer_fifo.sv:87$7387 ($aldff) from module edn.
Changing const-value async load to async reset on $flatten\gen_alert_tx[0].u_prim_alert_sender.\i_decode_ack.\gen_async.i_sync_p.\gen_generic.u_impl_generic.\u_sync_1.$verific$q_o_reg[0]$prim_generic_flop.sv:23$6954 ($aldff) from module edn.
Changing const-value async load to async reset on $flatten\u_edn_core.\u_prim_fifo_sync_rescmd.$verific$gen_normal_fifo.fifo_wptr_reg$prim_fifo_sync.sv:89$6833 ($aldff) from module edn.
Changing const-value async load to async reset on $flatten\u_edn_core.\u_prim_fifo_sync_rescmd.$verific$gen_normal_fifo.fifo_rptr_reg$prim_fifo_sync.sv:103$6840 ($aldff) from module edn.
Changing const-value async load to async reset on $flatten\u_edn_core.\u_prim_fifo_sync_gencmd.$verific$gen_normal_fifo.fifo_wptr_reg$prim_fifo_sync.sv:89$6833 ($aldff) from module edn.
Changing const-value async load to async reset on $flatten\u_edn_core.\u_prim_fifo_sync_gencmd.$verific$gen_normal_fifo.fifo_rptr_reg$prim_fifo_sync.sv:103$6840 ($aldff) from module edn.
Changing const-value async load to async reset on $flatten\u_edn_core.\u_prim_count_max_reqs_cntr.\gen_cnts[0].u_cnt_flop.\gen_generic.u_impl_generic.$verific$q_o_reg$prim_generic_flop.sv:23$6937 ($aldff) from module edn.
Changing const-value async load to async reset on $flatten\u_edn_core.\u_prim_count_max_reqs_cntr.$verific$max_val_reg$prim_count.sv:82$6581 ($aldff) from module edn.
Changing const-value async load to async reset on $flatten\u_edn_core.\u_prim_count_max_reqs_cntr.$verific$gen_cross_cnt_hardening.down_cnt_reg$prim_count.sv:127$6664 ($aldff) from module edn.
Changing const-value async load to async reset on $flatten\gen_alert_tx[0].u_prim_alert_sender.\i_decode_ack.\gen_async.i_sync_n.\gen_generic.u_impl_generic.\u_sync_2.$verific$q_o_reg[0]$prim_generic_flop.sv:23$6971 ($aldff) from module edn.
Changing const-value async load to async reset on $flatten\u_edn_core.\u_prim_arbiter_ppc_packer_arb.$verific$gen_normal_case.mask_reg$prim_arbiter_ppc.sv:102$6515 ($aldff) from module edn.
Changing const-value async load to async reset on $flatten\u_edn_core.\u_intr_hw_edn_fatal_err.$verific$intr_o_reg[0]$prim_intr_hw.sv:46$6991 ($aldff) from module edn.
Changing const-value async load to async reset on $flatten\u_edn_core.\u_intr_hw_edn_cmd_req_done.$verific$intr_o_reg[0]$prim_intr_hw.sv:46$6991 ($aldff) from module edn.
Changing const-value async load to async reset on $flatten\u_edn_core.\u_edn_main_sm.\u_state_regs.\u_state_flop.\gen_generic.u_impl_generic.$verific$q_o_reg$prim_generic_flop.sv:23$7588 ($aldff) from module edn.
Changing const-value async load to async reset on $flatten\gen_alert_tx[0].u_prim_alert_sender.\i_decode_ack.\gen_async.i_sync_n.\gen_generic.u_impl_generic.\u_sync_1.$verific$q_o_reg[0]$prim_generic_flop.sv:23$6971 ($aldff) from module edn.
Changing const-value async load to async reset on $flatten\u_edn_core.\gen_ep_blk[7].u_prim_packer_fifo_ep.$verific$gen_unpack_mode.ptr_q_reg$prim_packer_fifo.sv:128$7474 ($aldff) from module edn.
Changing const-value async load to async reset on $flatten\u_edn_core.\gen_ep_blk[7].u_prim_packer_fifo_ep.$verific$depth_q_reg$prim_packer_fifo.sv:87$7468 ($aldff) from module edn.
Changing const-value async load to async reset on $flatten\u_edn_core.\gen_ep_blk[7].u_prim_packer_fifo_ep.$verific$data_q_reg$prim_packer_fifo.sv:87$7469 ($aldff) from module edn.
Changing const-value async load to async reset on $flatten\gen_alert_tx[0].u_prim_alert_sender.\i_decode_ack.$verific$level_q_reg$prim_diff_decode.sv:172$6766 ($aldff) from module edn.
Changing const-value async load to async reset on $flatten\u_edn_core.\gen_ep_blk[7].u_edn_ack_sm_ep.\u_state_regs.\u_state_flop.\gen_generic.u_impl_generic.$verific$q_o_reg$prim_generic_flop.sv:23$7549 ($aldff) from module edn.
Changing const-value async load to async reset on $flatten\u_edn_core.\gen_ep_blk[6].u_prim_packer_fifo_ep.$verific$gen_unpack_mode.ptr_q_reg$prim_packer_fifo.sv:128$7474 ($aldff) from module edn.
Changing const-value async load to async reset on $flatten\u_edn_core.\gen_ep_blk[6].u_prim_packer_fifo_ep.$verific$depth_q_reg$prim_packer_fifo.sv:87$7468 ($aldff) from module edn.
Changing const-value async load to async reset on $flatten\u_edn_core.\gen_ep_blk[6].u_prim_packer_fifo_ep.$verific$data_q_reg$prim_packer_fifo.sv:87$7469 ($aldff) from module edn.
Changing const-value async load to async reset on $flatten\u_edn_core.\gen_ep_blk[6].u_edn_ack_sm_ep.\u_state_regs.\u_state_flop.\gen_generic.u_impl_generic.$verific$q_o_reg$prim_generic_flop.sv:23$7549 ($aldff) from module edn.
Changing const-value async load to async reset on $flatten\u_edn_core.\gen_ep_blk[5].u_prim_packer_fifo_ep.$verific$gen_unpack_mode.ptr_q_reg$prim_packer_fifo.sv:128$7474 ($aldff) from module edn.
Changing const-value async load to async reset on $flatten\u_edn_core.\gen_ep_blk[5].u_prim_packer_fifo_ep.$verific$depth_q_reg$prim_packer_fifo.sv:87$7468 ($aldff) from module edn.
Changing const-value async load to async reset on $flatten\u_edn_core.\gen_ep_blk[5].u_prim_packer_fifo_ep.$verific$data_q_reg$prim_packer_fifo.sv:87$7469 ($aldff) from module edn.
Changing const-value async load to async reset on $flatten\u_edn_core.\gen_ep_blk[5].u_edn_ack_sm_ep.\u_state_regs.\u_state_flop.\gen_generic.u_impl_generic.$verific$q_o_reg$prim_generic_flop.sv:23$7549 ($aldff) from module edn.
Changing const-value async load to async reset on $flatten\u_edn_core.\gen_ep_blk[4].u_prim_packer_fifo_ep.$verific$gen_unpack_mode.ptr_q_reg$prim_packer_fifo.sv:128$7474 ($aldff) from module edn.
Changing const-value async load to async reset on $flatten\u_edn_core.\gen_ep_blk[4].u_prim_packer_fifo_ep.$verific$depth_q_reg$prim_packer_fifo.sv:87$7468 ($aldff) from module edn.
Changing const-value async load to async reset on $flatten\u_edn_core.\gen_ep_blk[4].u_prim_packer_fifo_ep.$verific$data_q_reg$prim_packer_fifo.sv:87$7469 ($aldff) from module edn.
Changing const-value async load to async reset on $flatten\gen_alert_tx[0].u_prim_alert_sender.\i_decode_ack.$verific$gen_async.state_q_reg$prim_diff_decode.sv:172$6763 ($aldff) from module edn.
Changing const-value async load to async reset on $flatten\u_edn_core.\gen_ep_blk[4].u_edn_ack_sm_ep.\u_state_regs.\u_state_flop.\gen_generic.u_impl_generic.$verific$q_o_reg$prim_generic_flop.sv:23$7549 ($aldff) from module edn.
Changing const-value async load to async reset on $flatten\gen_alert_tx[0].u_prim_alert_sender.\i_decode_ack.$verific$gen_async.diff_pq_reg$prim_diff_decode.sv:172$6764 ($aldff) from module edn.
Changing const-value async load to async reset on $flatten\gen_alert_tx[0].u_prim_alert_sender.\i_decode_ack.$verific$gen_async.diff_nq_reg$prim_diff_decode.sv:172$6765 ($aldff) from module edn.
Changing const-value async load to async reset on $flatten\u_edn_core.\gen_ep_blk[3].u_prim_packer_fifo_ep.$verific$gen_unpack_mode.ptr_q_reg$prim_packer_fifo.sv:128$7474 ($aldff) from module edn.
Changing const-value async load to async reset on $flatten\u_edn_core.\gen_ep_blk[3].u_prim_packer_fifo_ep.$verific$depth_q_reg$prim_packer_fifo.sv:87$7468 ($aldff) from module edn.
Changing const-value async load to async reset on $flatten\u_edn_core.\gen_ep_blk[3].u_prim_packer_fifo_ep.$verific$data_q_reg$prim_packer_fifo.sv:87$7469 ($aldff) from module edn.
Changing const-value async load to async reset on $flatten\u_edn_core.\gen_ep_blk[3].u_edn_ack_sm_ep.\u_state_regs.\u_state_flop.\gen_generic.u_impl_generic.$verific$q_o_reg$prim_generic_flop.sv:23$7549 ($aldff) from module edn.
Changing const-value async load to async reset on $flatten\u_edn_core.\gen_ep_blk[2].u_prim_packer_fifo_ep.$verific$gen_unpack_mode.ptr_q_reg$prim_packer_fifo.sv:128$7474 ($aldff) from module edn.
Changing const-value async load to async reset on $flatten\u_edn_core.\gen_ep_blk[2].u_prim_packer_fifo_ep.$verific$depth_q_reg$prim_packer_fifo.sv:87$7468 ($aldff) from module edn.
Changing const-value async load to async reset on $flatten\u_edn_core.\gen_ep_blk[2].u_prim_packer_fifo_ep.$verific$data_q_reg$prim_packer_fifo.sv:87$7469 ($aldff) from module edn.
Changing const-value async load to async reset on $flatten\u_edn_core.\gen_ep_blk[2].u_edn_ack_sm_ep.\u_state_regs.\u_state_flop.\gen_generic.u_impl_generic.$verific$q_o_reg$prim_generic_flop.sv:23$7549 ($aldff) from module edn.
Changing const-value async load to async reset on $flatten\u_edn_core.\gen_ep_blk[1].u_prim_packer_fifo_ep.$verific$gen_unpack_mode.ptr_q_reg$prim_packer_fifo.sv:128$7474 ($aldff) from module edn.
Changing const-value async load to async reset on $flatten\u_edn_core.\gen_ep_blk[1].u_prim_packer_fifo_ep.$verific$depth_q_reg$prim_packer_fifo.sv:87$7468 ($aldff) from module edn.
Changing const-value async load to async reset on $flatten\u_edn_core.\gen_ep_blk[1].u_prim_packer_fifo_ep.$verific$data_q_reg$prim_packer_fifo.sv:87$7469 ($aldff) from module edn.
Changing const-value async load to async reset on $flatten\u_edn_core.\gen_ep_blk[1].u_edn_ack_sm_ep.\u_state_regs.\u_state_flop.\gen_generic.u_impl_generic.$verific$q_o_reg$prim_generic_flop.sv:23$7549 ($aldff) from module edn.
Changing const-value async load to async reset on $flatten\gen_alert_tx[0].u_prim_alert_sender.$verific$state_q_reg$prim_alert_sender.sv:235$6327 ($aldff) from module edn.
Changing const-value async load to async reset on $flatten\u_edn_core.\gen_ep_blk[0].u_prim_packer_fifo_ep.$verific$gen_unpack_mode.ptr_q_reg$prim_packer_fifo.sv:128$7474 ($aldff) from module edn.
Changing const-value async load to async reset on $flatten\u_edn_core.\gen_ep_blk[0].u_prim_packer_fifo_ep.$verific$depth_q_reg$prim_packer_fifo.sv:87$7468 ($aldff) from module edn.
Changing const-value async load to async reset on $flatten\u_edn_core.\gen_ep_blk[0].u_prim_packer_fifo_ep.$verific$data_q_reg$prim_packer_fifo.sv:87$7469 ($aldff) from module edn.
Changing const-value async load to async reset on $flatten\u_edn_core.\gen_ep_blk[0].u_prim_packer_fifo_ep.$verific$clr_q_reg$prim_packer_fifo.sv:87$7470 ($aldff) from module edn.
Changing const-value async load to async reset on $flatten\u_edn_core.\gen_ep_blk[0].u_edn_ack_sm_ep.\u_state_regs.\u_state_flop.\gen_generic.u_impl_generic.$verific$q_o_reg$prim_generic_flop.sv:23$7549 ($aldff) from module edn.
Changing const-value async load to async reset on $flatten\u_edn_core.$verific$sw_rdy_sts_q_reg$edn_core.sv:213$1470 ($aldff) from module edn.
Changing const-value async load to async reset on $flatten\u_edn_core.$verific$send_rescmd_q_reg$edn_core.sv:213$1461 ($aldff) from module edn.
Changing const-value async load to async reset on $flatten\u_edn_core.$verific$send_gencmd_q_reg$edn_core.sv:213$1462 ($aldff) from module edn.
Changing const-value async load to async reset on $flatten\gen_alert_tx[0].u_prim_alert_sender.\i_decode_ping.$verific$gen_async.diff_nq_reg$prim_diff_decode.sv:172$6765 ($aldff) from module edn.
Changing const-value async load to async reset on $flatten\gen_alert_tx[0].u_prim_alert_sender.$verific$ping_set_q_reg$prim_alert_sender.sv:235$6331 ($aldff) from module edn.
Changing const-value async load to async reset on $flatten\gen_alert_tx[0].u_prim_alert_sender.$verific$alert_set_q_reg$prim_alert_sender.sv:235$6330 ($aldff) from module edn.
Changing const-value async load to async reset on $flatten\gen_alert_tx[0].u_prim_alert_sender.$verific$alert_pq_reg$prim_alert_sender.sv:235$6328 ($aldff) from module edn.
Changing const-value async load to async reset on $flatten\gen_alert_tx[0].u_prim_alert_sender.$verific$alert_nq_reg$prim_alert_sender.sv:235$6329 ($aldff) from module edn.
Changing const-value async load to async reset on $flatten\u_edn_core.$verific$edn_fips_q_reg$edn_core.sv:213$1464 ($aldff) from module edn.
Changing const-value async load to async reset on $flatten\u_edn_core.$verific$csrng_fips_q_reg$edn_core.sv:213$1463 ($aldff) from module edn.
Changing const-value async load to async reset on $flatten\u_edn_core.$verific$cs_rdata_capt_vld_q_reg$edn_core.sv:213$1469 ($aldff) from module edn.
Changing const-value async load to async reset on $flatten\u_edn_core.$verific$cs_rdata_capt_q_reg$edn_core.sv:213$1468 ($aldff) from module edn.
Changing const-value async load to async reset on $flatten\u_edn_core.$verific$cs_cmd_req_vld_q_reg$edn_core.sv:213$1457 ($aldff) from module edn.
Changing const-value async load to async reset on $flatten\u_edn_core.$verific$cs_cmd_req_vld_out_q_reg$edn_core.sv:213$1459 ($aldff) from module edn.
Changing const-value async load to async reset on $flatten\u_edn_core.$verific$cs_cmd_req_q_reg$edn_core.sv:213$1456 ($aldff) from module edn.
Changing const-value async load to async reset on $flatten\u_edn_core.$verific$cs_cmd_req_out_q_reg$edn_core.sv:213$1458 ($aldff) from module edn.
Changing const-value async load to async reset on $flatten\u_edn_core.$verific$cmd_fifo_cnt_q_reg$edn_core.sv:213$1460 ($aldff) from module edn.
Changing const-value async load to async reset on $flatten\u_edn_core.$verific$boot_req_q_reg$edn_core.sv:213$1465 ($aldff) from module edn.
Changing const-value async load to async reset on $flatten\u_edn_core.$verific$boot_auto_req_wack_q_reg$edn_core.sv:213$1466 ($aldff) from module edn.
Changing const-value async load to async reset on $flatten\u_edn_core.$verific$boot_auto_req_dly_q_reg$edn_core.sv:213$1467 ($aldff) from module edn.
Changing const-value async load to async reset on $flatten\gen_alert_tx[1].u_prim_alert_sender.\i_decode_ping.\gen_async.i_sync_p.\gen_generic.u_impl_generic.\u_sync_2.$verific$q_o_reg[0]$prim_generic_flop.sv:23$6954 ($aldff) from module edn.
Changing const-value async load to async reset on $flatten\gen_alert_tx[1].u_prim_alert_sender.\i_decode_ping.\gen_async.i_sync_p.\gen_generic.u_impl_generic.\u_sync_1.$verific$q_o_reg[0]$prim_generic_flop.sv:23$6954 ($aldff) from module edn.
Changing const-value async load to async reset on $flatten\gen_alert_tx[1].u_prim_alert_sender.\i_decode_ping.\gen_async.i_sync_n.\gen_generic.u_impl_generic.\u_sync_2.$verific$q_o_reg[0]$prim_generic_flop.sv:23$6971 ($aldff) from module edn.
Changing const-value async load to async reset on $flatten\gen_alert_tx[1].u_prim_alert_sender.\i_decode_ping.\gen_async.i_sync_n.\gen_generic.u_impl_generic.\u_sync_1.$verific$q_o_reg[0]$prim_generic_flop.sv:23$6971 ($aldff) from module edn.
Changing const-value async load to async reset on $flatten\gen_alert_tx[1].u_prim_alert_sender.\i_decode_ping.$verific$gen_async.state_q_reg$prim_diff_decode.sv:172$6763 ($aldff) from module edn.
Changing const-value async load to async reset on $flatten\gen_alert_tx[1].u_prim_alert_sender.\i_decode_ping.$verific$gen_async.diff_pq_reg$prim_diff_decode.sv:172$6764 ($aldff) from module edn.
Changing const-value async load to async reset on $flatten\gen_alert_tx[1].u_prim_alert_sender.\i_decode_ping.$verific$gen_async.diff_nq_reg$prim_diff_decode.sv:172$6765 ($aldff) from module edn.
Changing const-value async load to async reset on $flatten\gen_alert_tx[1].u_prim_alert_sender.\i_decode_ack.\gen_async.i_sync_p.\gen_generic.u_impl_generic.\u_sync_2.$verific$q_o_reg[0]$prim_generic_flop.sv:23$6954 ($aldff) from module edn.
Changing const-value async load to async reset on $flatten\gen_alert_tx[1].u_prim_alert_sender.\i_decode_ack.\gen_async.i_sync_p.\gen_generic.u_impl_generic.\u_sync_1.$verific$q_o_reg[0]$prim_generic_flop.sv:23$6954 ($aldff) from module edn.
Changing const-value async load to async reset on $flatten\gen_alert_tx[1].u_prim_alert_sender.\i_decode_ack.\gen_async.i_sync_n.\gen_generic.u_impl_generic.\u_sync_2.$verific$q_o_reg[0]$prim_generic_flop.sv:23$6971 ($aldff) from module edn.
Changing const-value async load to async reset on $flatten\gen_alert_tx[1].u_prim_alert_sender.\i_decode_ack.\gen_async.i_sync_n.\gen_generic.u_impl_generic.\u_sync_1.$verific$q_o_reg[0]$prim_generic_flop.sv:23$6971 ($aldff) from module edn.
Changing const-value async load to async reset on $flatten\gen_alert_tx[1].u_prim_alert_sender.\i_decode_ack.$verific$level_q_reg$prim_diff_decode.sv:172$6766 ($aldff) from module edn.
Changing const-value async load to async reset on $flatten\gen_alert_tx[1].u_prim_alert_sender.\i_decode_ack.$verific$gen_async.state_q_reg$prim_diff_decode.sv:172$6763 ($aldff) from module edn.
Changing const-value async load to async reset on $flatten\gen_alert_tx[1].u_prim_alert_sender.\i_decode_ack.$verific$gen_async.diff_pq_reg$prim_diff_decode.sv:172$6764 ($aldff) from module edn.
Changing const-value async load to async reset on $flatten\gen_alert_tx[1].u_prim_alert_sender.\i_decode_ack.$verific$gen_async.diff_nq_reg$prim_diff_decode.sv:172$6765 ($aldff) from module edn.
Changing const-value async load to async reset on $flatten\gen_alert_tx[1].u_prim_alert_sender.$verific$state_q_reg$prim_alert_sender.sv:235$6434 ($aldff) from module edn.
Changing const-value async load to async reset on $flatten\gen_alert_tx[1].u_prim_alert_sender.$verific$ping_set_q_reg$prim_alert_sender.sv:235$6438 ($aldff) from module edn.
Changing const-value async load to async reset on $flatten\gen_alert_tx[1].u_prim_alert_sender.$verific$alert_set_q_reg$prim_alert_sender.sv:235$6437 ($aldff) from module edn.
Changing const-value async load to async reset on $flatten\gen_alert_tx[1].u_prim_alert_sender.$verific$alert_pq_reg$prim_alert_sender.sv:235$6435 ($aldff) from module edn.
Changing const-value async load to async reset on $flatten\gen_alert_tx[1].u_prim_alert_sender.$verific$alert_nq_reg$prim_alert_sender.sv:235$6436 ($aldff) from module edn.
Changing const-value async load to async reset on $flatten\gen_alert_tx[0].u_prim_alert_sender.\i_decode_ping.\gen_async.i_sync_p.\gen_generic.u_impl_generic.\u_sync_2.$verific$q_o_reg[0]$prim_generic_flop.sv:23$6954 ($aldff) from module edn.
Changing const-value async load to async reset on $flatten\gen_alert_tx[0].u_prim_alert_sender.\i_decode_ping.\gen_async.i_sync_p.\gen_generic.u_impl_generic.\u_sync_1.$verific$q_o_reg[0]$prim_generic_flop.sv:23$6954 ($aldff) from module edn.
Changing const-value async load to async reset on $flatten\gen_alert_tx[0].u_prim_alert_sender.\i_decode_ping.\gen_async.i_sync_n.\gen_generic.u_impl_generic.\u_sync_2.$verific$q_o_reg[0]$prim_generic_flop.sv:23$6971 ($aldff) from module edn.
Changing const-value async load to async reset on $flatten\gen_alert_tx[0].u_prim_alert_sender.\i_decode_ping.\gen_async.i_sync_n.\gen_generic.u_impl_generic.\u_sync_1.$verific$q_o_reg[0]$prim_generic_flop.sv:23$6971 ($aldff) from module edn.
Changing const-value async load to async reset on $flatten\gen_alert_tx[0].u_prim_alert_sender.\i_decode_ping.$verific$gen_async.state_q_reg$prim_diff_decode.sv:172$6763 ($aldff) from module edn.
Setting constant 0-bit at position 1 on $flatten\u_edn_core.\u_prim_count_max_reqs_cntr.\gen_cnts[0].u_cnt_flop.\gen_generic.u_impl_generic.$verific$q_o_reg$prim_generic_flop.sv:23$6937 ($adff) from module edn.
Setting constant 0-bit at position 2 on $flatten\u_edn_core.\u_prim_count_max_reqs_cntr.\gen_cnts[0].u_cnt_flop.\gen_generic.u_impl_generic.$verific$q_o_reg$prim_generic_flop.sv:23$6937 ($adff) from module edn.
Setting constant 0-bit at position 3 on $flatten\u_edn_core.\u_prim_count_max_reqs_cntr.\gen_cnts[0].u_cnt_flop.\gen_generic.u_impl_generic.$verific$q_o_reg$prim_generic_flop.sv:23$6937 ($adff) from module edn.
Setting constant 0-bit at position 4 on $flatten\u_edn_core.\u_prim_count_max_reqs_cntr.\gen_cnts[0].u_cnt_flop.\gen_generic.u_impl_generic.$verific$q_o_reg$prim_generic_flop.sv:23$6937 ($adff) from module edn.
Setting constant 0-bit at position 5 on $flatten\u_edn_core.\u_prim_count_max_reqs_cntr.\gen_cnts[0].u_cnt_flop.\gen_generic.u_impl_generic.$verific$q_o_reg$prim_generic_flop.sv:23$6937 ($adff) from module edn.
Setting constant 0-bit at position 6 on $flatten\u_edn_core.\u_prim_count_max_reqs_cntr.\gen_cnts[0].u_cnt_flop.\gen_generic.u_impl_generic.$verific$q_o_reg$prim_generic_flop.sv:23$6937 ($adff) from module edn.
Setting constant 0-bit at position 7 on $flatten\u_edn_core.\u_prim_count_max_reqs_cntr.\gen_cnts[0].u_cnt_flop.\gen_generic.u_impl_generic.$verific$q_o_reg$prim_generic_flop.sv:23$6937 ($adff) from module edn.
Setting constant 0-bit at position 8 on $flatten\u_edn_core.\u_prim_count_max_reqs_cntr.\gen_cnts[0].u_cnt_flop.\gen_generic.u_impl_generic.$verific$q_o_reg$prim_generic_flop.sv:23$6937 ($adff) from module edn.
Setting constant 0-bit at position 9 on $flatten\u_edn_core.\u_prim_count_max_reqs_cntr.\gen_cnts[0].u_cnt_flop.\gen_generic.u_impl_generic.$verific$q_o_reg$prim_generic_flop.sv:23$6937 ($adff) from module edn.
Setting constant 0-bit at position 10 on $flatten\u_edn_core.\u_prim_count_max_reqs_cntr.\gen_cnts[0].u_cnt_flop.\gen_generic.u_impl_generic.$verific$q_o_reg$prim_generic_flop.sv:23$6937 ($adff) from module edn.
Setting constant 0-bit at position 11 on $flatten\u_edn_core.\u_prim_count_max_reqs_cntr.\gen_cnts[0].u_cnt_flop.\gen_generic.u_impl_generic.$verific$q_o_reg$prim_generic_flop.sv:23$6937 ($adff) from module edn.
Setting constant 0-bit at position 12 on $flatten\u_edn_core.\u_prim_count_max_reqs_cntr.\gen_cnts[0].u_cnt_flop.\gen_generic.u_impl_generic.$verific$q_o_reg$prim_generic_flop.sv:23$6937 ($adff) from module edn.
Setting constant 0-bit at position 13 on $flatten\u_edn_core.\u_prim_count_max_reqs_cntr.\gen_cnts[0].u_cnt_flop.\gen_generic.u_impl_generic.$verific$q_o_reg$prim_generic_flop.sv:23$6937 ($adff) from module edn.
Setting constant 0-bit at position 14 on $flatten\u_edn_core.\u_prim_count_max_reqs_cntr.\gen_cnts[0].u_cnt_flop.\gen_generic.u_impl_generic.$verific$q_o_reg$prim_generic_flop.sv:23$6937 ($adff) from module edn.
Setting constant 0-bit at position 15 on $flatten\u_edn_core.\u_prim_count_max_reqs_cntr.\gen_cnts[0].u_cnt_flop.\gen_generic.u_impl_generic.$verific$q_o_reg$prim_generic_flop.sv:23$6937 ($adff) from module edn.
Setting constant 0-bit at position 16 on $flatten\u_edn_core.\u_prim_count_max_reqs_cntr.\gen_cnts[0].u_cnt_flop.\gen_generic.u_impl_generic.$verific$q_o_reg$prim_generic_flop.sv:23$6937 ($adff) from module edn.
Setting constant 0-bit at position 17 on $flatten\u_edn_core.\u_prim_count_max_reqs_cntr.\gen_cnts[0].u_cnt_flop.\gen_generic.u_impl_generic.$verific$q_o_reg$prim_generic_flop.sv:23$6937 ($adff) from module edn.
Setting constant 0-bit at position 18 on $flatten\u_edn_core.\u_prim_count_max_reqs_cntr.\gen_cnts[0].u_cnt_flop.\gen_generic.u_impl_generic.$verific$q_o_reg$prim_generic_flop.sv:23$6937 ($adff) from module edn.
Setting constant 0-bit at position 19 on $flatten\u_edn_core.\u_prim_count_max_reqs_cntr.\gen_cnts[0].u_cnt_flop.\gen_generic.u_impl_generic.$verific$q_o_reg$prim_generic_flop.sv:23$6937 ($adff) from module edn.
Setting constant 0-bit at position 20 on $flatten\u_edn_core.\u_prim_count_max_reqs_cntr.\gen_cnts[0].u_cnt_flop.\gen_generic.u_impl_generic.$verific$q_o_reg$prim_generic_flop.sv:23$6937 ($adff) from module edn.
Setting constant 0-bit at position 21 on $flatten\u_edn_core.\u_prim_count_max_reqs_cntr.\gen_cnts[0].u_cnt_flop.\gen_generic.u_impl_generic.$verific$q_o_reg$prim_generic_flop.sv:23$6937 ($adff) from module edn.
Setting constant 0-bit at position 22 on $flatten\u_edn_core.\u_prim_count_max_reqs_cntr.\gen_cnts[0].u_cnt_flop.\gen_generic.u_impl_generic.$verific$q_o_reg$prim_generic_flop.sv:23$6937 ($adff) from module edn.
Setting constant 0-bit at position 23 on $flatten\u_edn_core.\u_prim_count_max_reqs_cntr.\gen_cnts[0].u_cnt_flop.\gen_generic.u_impl_generic.$verific$q_o_reg$prim_generic_flop.sv:23$6937 ($adff) from module edn.
Setting constant 0-bit at position 24 on $flatten\u_edn_core.\u_prim_count_max_reqs_cntr.\gen_cnts[0].u_cnt_flop.\gen_generic.u_impl_generic.$verific$q_o_reg$prim_generic_flop.sv:23$6937 ($adff) from module edn.
Setting constant 0-bit at position 25 on $flatten\u_edn_core.\u_prim_count_max_reqs_cntr.\gen_cnts[0].u_cnt_flop.\gen_generic.u_impl_generic.$verific$q_o_reg$prim_generic_flop.sv:23$6937 ($adff) from module edn.
Setting constant 0-bit at position 26 on $flatten\u_edn_core.\u_prim_count_max_reqs_cntr.\gen_cnts[0].u_cnt_flop.\gen_generic.u_impl_generic.$verific$q_o_reg$prim_generic_flop.sv:23$6937 ($adff) from module edn.
Setting constant 0-bit at position 27 on $flatten\u_edn_core.\u_prim_count_max_reqs_cntr.\gen_cnts[0].u_cnt_flop.\gen_generic.u_impl_generic.$verific$q_o_reg$prim_generic_flop.sv:23$6937 ($adff) from module edn.
Setting constant 0-bit at position 28 on $flatten\u_edn_core.\u_prim_count_max_reqs_cntr.\gen_cnts[0].u_cnt_flop.\gen_generic.u_impl_generic.$verific$q_o_reg$prim_generic_flop.sv:23$6937 ($adff) from module edn.
Setting constant 0-bit at position 29 on $flatten\u_edn_core.\u_prim_count_max_reqs_cntr.\gen_cnts[0].u_cnt_flop.\gen_generic.u_impl_generic.$verific$q_o_reg$prim_generic_flop.sv:23$6937 ($adff) from module edn.
Setting constant 0-bit at position 30 on $flatten\u_edn_core.\u_prim_count_max_reqs_cntr.\gen_cnts[0].u_cnt_flop.\gen_generic.u_impl_generic.$verific$q_o_reg$prim_generic_flop.sv:23$6937 ($adff) from module edn.
Setting constant 0-bit at position 31 on $flatten\u_edn_core.\u_prim_count_max_reqs_cntr.\gen_cnts[0].u_cnt_flop.\gen_generic.u_impl_generic.$verific$q_o_reg$prim_generic_flop.sv:23$6937 ($adff) from module edn.

yosys> opt_clean

3.23. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \edn..
Removed 10 unused cells and 58 unused wires.
<suppressed ~11 debug messages>

yosys> opt_expr

3.24. Executing OPT_EXPR pass (perform const folding).
Optimizing module edn.

yosys> opt_muxtree

3.25. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \edn..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Removed 0 multiplexer ports.
<suppressed ~165 debug messages>

yosys> opt_reduce

3.26. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \edn.
Performed a total of 0 changes.

yosys> opt_merge

3.27. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\edn'.
Removed a total of 0 cells.

yosys> opt_share

3.28. Executing OPT_SHARE pass.

yosys> opt_dff -nosdff -nodffe

3.29. Executing OPT_DFF pass (perform DFF optimizations).
Handling D = Q on $flatten\u_reg.\u_regwen.$verific$q_reg[0]$prim_subreg.sv:72$7680 ($adff) from module edn (removing D path).
Handling D = Q on $flatten\u_reg.\u_max_num_reqs_between_reseeds.$verific$q_reg$prim_subreg.sv:72$7756 ($adff) from module edn (removing D path).
Handling D = Q on $flatten\u_reg.\u_intr_enable_edn_fatal_err.$verific$q_reg[0]$prim_subreg.sv:72$7642 ($adff) from module edn (removing D path).
Handling D = Q on $flatten\u_reg.\u_intr_enable_edn_cmd_req_done.$verific$q_reg[0]$prim_subreg.sv:72$7642 ($adff) from module edn (removing D path).
Handling D = Q on $flatten\u_reg.\u_err_code_test.$verific$q_reg$prim_subreg.sv:72$7737 ($adff) from module edn (removing D path).
Handling D = Q on $flatten\u_reg.\u_ctrl_edn_enable.$verific$q_reg$prim_subreg.sv:72$7718 ($adff) from module edn (removing D path).
Handling D = Q on $flatten\u_reg.\u_ctrl_cmd_fifo_rst.$verific$q_reg$prim_subreg.sv:72$7718 ($adff) from module edn (removing D path).
Handling D = Q on $flatten\u_reg.\u_ctrl_boot_req_mode.$verific$q_reg$prim_subreg.sv:72$7718 ($adff) from module edn (removing D path).
Handling D = Q on $flatten\u_reg.\u_ctrl_auto_req_mode.$verific$q_reg$prim_subreg.sv:72$7718 ($adff) from module edn (removing D path).
Handling D = Q on $flatten\u_reg.\u_boot_ins_cmd.$verific$q_reg$prim_subreg.sv:72$7777 ($adff) from module edn (removing D path).
Handling D = Q on $flatten\u_reg.\u_boot_gen_cmd.$verific$q_reg$prim_subreg.sv:72$7798 ($adff) from module edn (removing D path).
Setting constant 1-bit at position 0 on $flatten\u_reg.\u_boot_gen_cmd.$verific$q_reg$prim_subreg.sv:72$7798 ($dlatch) from module edn.
Setting constant 1-bit at position 1 on $flatten\u_reg.\u_boot_gen_cmd.$verific$q_reg$prim_subreg.sv:72$7798 ($dlatch) from module edn.
Setting constant 0-bit at position 2 on $flatten\u_reg.\u_boot_gen_cmd.$verific$q_reg$prim_subreg.sv:72$7798 ($dlatch) from module edn.
Setting constant 0-bit at position 3 on $flatten\u_reg.\u_boot_gen_cmd.$verific$q_reg$prim_subreg.sv:72$7798 ($dlatch) from module edn.
Setting constant 0-bit at position 4 on $flatten\u_reg.\u_boot_gen_cmd.$verific$q_reg$prim_subreg.sv:72$7798 ($dlatch) from module edn.
Setting constant 0-bit at position 5 on $flatten\u_reg.\u_boot_gen_cmd.$verific$q_reg$prim_subreg.sv:72$7798 ($dlatch) from module edn.
Setting constant 0-bit at position 6 on $flatten\u_reg.\u_boot_gen_cmd.$verific$q_reg$prim_subreg.sv:72$7798 ($dlatch) from module edn.
Setting constant 0-bit at position 7 on $flatten\u_reg.\u_boot_gen_cmd.$verific$q_reg$prim_subreg.sv:72$7798 ($dlatch) from module edn.
Setting constant 0-bit at position 8 on $flatten\u_reg.\u_boot_gen_cmd.$verific$q_reg$prim_subreg.sv:72$7798 ($dlatch) from module edn.
Setting constant 0-bit at position 9 on $flatten\u_reg.\u_boot_gen_cmd.$verific$q_reg$prim_subreg.sv:72$7798 ($dlatch) from module edn.
Setting constant 0-bit at position 10 on $flatten\u_reg.\u_boot_gen_cmd.$verific$q_reg$prim_subreg.sv:72$7798 ($dlatch) from module edn.
Setting constant 0-bit at position 11 on $flatten\u_reg.\u_boot_gen_cmd.$verific$q_reg$prim_subreg.sv:72$7798 ($dlatch) from module edn.
Setting constant 1-bit at position 12 on $flatten\u_reg.\u_boot_gen_cmd.$verific$q_reg$prim_subreg.sv:72$7798 ($dlatch) from module edn.
Setting constant 1-bit at position 13 on $flatten\u_reg.\u_boot_gen_cmd.$verific$q_reg$prim_subreg.sv:72$7798 ($dlatch) from module edn.
Setting constant 1-bit at position 14 on $flatten\u_reg.\u_boot_gen_cmd.$verific$q_reg$prim_subreg.sv:72$7798 ($dlatch) from module edn.
Setting constant 1-bit at position 15 on $flatten\u_reg.\u_boot_gen_cmd.$verific$q_reg$prim_subreg.sv:72$7798 ($dlatch) from module edn.
Setting constant 1-bit at position 16 on $flatten\u_reg.\u_boot_gen_cmd.$verific$q_reg$prim_subreg.sv:72$7798 ($dlatch) from module edn.
Setting constant 1-bit at position 17 on $flatten\u_reg.\u_boot_gen_cmd.$verific$q_reg$prim_subreg.sv:72$7798 ($dlatch) from module edn.
Setting constant 1-bit at position 18 on $flatten\u_reg.\u_boot_gen_cmd.$verific$q_reg$prim_subreg.sv:72$7798 ($dlatch) from module edn.
Setting constant 1-bit at position 19 on $flatten\u_reg.\u_boot_gen_cmd.$verific$q_reg$prim_subreg.sv:72$7798 ($dlatch) from module edn.
Setting constant 1-bit at position 20 on $flatten\u_reg.\u_boot_gen_cmd.$verific$q_reg$prim_subreg.sv:72$7798 ($dlatch) from module edn.
Setting constant 1-bit at position 21 on $flatten\u_reg.\u_boot_gen_cmd.$verific$q_reg$prim_subreg.sv:72$7798 ($dlatch) from module edn.
Setting constant 1-bit at position 22 on $flatten\u_reg.\u_boot_gen_cmd.$verific$q_reg$prim_subreg.sv:72$7798 ($dlatch) from module edn.
Setting constant 1-bit at position 23 on $flatten\u_reg.\u_boot_gen_cmd.$verific$q_reg$prim_subreg.sv:72$7798 ($dlatch) from module edn.
Setting constant 0-bit at position 24 on $flatten\u_reg.\u_boot_gen_cmd.$verific$q_reg$prim_subreg.sv:72$7798 ($dlatch) from module edn.
Setting constant 0-bit at position 25 on $flatten\u_reg.\u_boot_gen_cmd.$verific$q_reg$prim_subreg.sv:72$7798 ($dlatch) from module edn.
Setting constant 0-bit at position 26 on $flatten\u_reg.\u_boot_gen_cmd.$verific$q_reg$prim_subreg.sv:72$7798 ($dlatch) from module edn.
Setting constant 0-bit at position 27 on $flatten\u_reg.\u_boot_gen_cmd.$verific$q_reg$prim_subreg.sv:72$7798 ($dlatch) from module edn.
Setting constant 0-bit at position 28 on $flatten\u_reg.\u_boot_gen_cmd.$verific$q_reg$prim_subreg.sv:72$7798 ($dlatch) from module edn.
Setting constant 0-bit at position 29 on $flatten\u_reg.\u_boot_gen_cmd.$verific$q_reg$prim_subreg.sv:72$7798 ($dlatch) from module edn.
Setting constant 0-bit at position 30 on $flatten\u_reg.\u_boot_gen_cmd.$verific$q_reg$prim_subreg.sv:72$7798 ($dlatch) from module edn.
Setting constant 0-bit at position 31 on $flatten\u_reg.\u_boot_gen_cmd.$verific$q_reg$prim_subreg.sv:72$7798 ($dlatch) from module edn.
Setting constant 1-bit at position 0 on $flatten\u_reg.\u_boot_ins_cmd.$verific$q_reg$prim_subreg.sv:72$7777 ($dlatch) from module edn.
Setting constant 0-bit at position 1 on $flatten\u_reg.\u_boot_ins_cmd.$verific$q_reg$prim_subreg.sv:72$7777 ($dlatch) from module edn.
Setting constant 0-bit at position 2 on $flatten\u_reg.\u_boot_ins_cmd.$verific$q_reg$prim_subreg.sv:72$7777 ($dlatch) from module edn.
Setting constant 0-bit at position 3 on $flatten\u_reg.\u_boot_ins_cmd.$verific$q_reg$prim_subreg.sv:72$7777 ($dlatch) from module edn.
Setting constant 0-bit at position 4 on $flatten\u_reg.\u_boot_ins_cmd.$verific$q_reg$prim_subreg.sv:72$7777 ($dlatch) from module edn.
Setting constant 0-bit at position 5 on $flatten\u_reg.\u_boot_ins_cmd.$verific$q_reg$prim_subreg.sv:72$7777 ($dlatch) from module edn.
Setting constant 0-bit at position 6 on $flatten\u_reg.\u_boot_ins_cmd.$verific$q_reg$prim_subreg.sv:72$7777 ($dlatch) from module edn.
Setting constant 0-bit at position 7 on $flatten\u_reg.\u_boot_ins_cmd.$verific$q_reg$prim_subreg.sv:72$7777 ($dlatch) from module edn.
Setting constant 0-bit at position 8 on $flatten\u_reg.\u_boot_ins_cmd.$verific$q_reg$prim_subreg.sv:72$7777 ($dlatch) from module edn.
Setting constant 0-bit at position 9 on $flatten\u_reg.\u_boot_ins_cmd.$verific$q_reg$prim_subreg.sv:72$7777 ($dlatch) from module edn.
Setting constant 0-bit at position 10 on $flatten\u_reg.\u_boot_ins_cmd.$verific$q_reg$prim_subreg.sv:72$7777 ($dlatch) from module edn.
Setting constant 0-bit at position 11 on $flatten\u_reg.\u_boot_ins_cmd.$verific$q_reg$prim_subreg.sv:72$7777 ($dlatch) from module edn.
Setting constant 0-bit at position 12 on $flatten\u_reg.\u_boot_ins_cmd.$verific$q_reg$prim_subreg.sv:72$7777 ($dlatch) from module edn.
Setting constant 0-bit at position 13 on $flatten\u_reg.\u_boot_ins_cmd.$verific$q_reg$prim_subreg.sv:72$7777 ($dlatch) from module edn.
Setting constant 0-bit at position 14 on $flatten\u_reg.\u_boot_ins_cmd.$verific$q_reg$prim_subreg.sv:72$7777 ($dlatch) from module edn.
Setting constant 0-bit at position 15 on $flatten\u_reg.\u_boot_ins_cmd.$verific$q_reg$prim_subreg.sv:72$7777 ($dlatch) from module edn.
Setting constant 0-bit at position 16 on $flatten\u_reg.\u_boot_ins_cmd.$verific$q_reg$prim_subreg.sv:72$7777 ($dlatch) from module edn.
Setting constant 0-bit at position 17 on $flatten\u_reg.\u_boot_ins_cmd.$verific$q_reg$prim_subreg.sv:72$7777 ($dlatch) from module edn.
Setting constant 0-bit at position 18 on $flatten\u_reg.\u_boot_ins_cmd.$verific$q_reg$prim_subreg.sv:72$7777 ($dlatch) from module edn.
Setting constant 0-bit at position 19 on $flatten\u_reg.\u_boot_ins_cmd.$verific$q_reg$prim_subreg.sv:72$7777 ($dlatch) from module edn.
Setting constant 0-bit at position 20 on $flatten\u_reg.\u_boot_ins_cmd.$verific$q_reg$prim_subreg.sv:72$7777 ($dlatch) from module edn.
Setting constant 0-bit at position 21 on $flatten\u_reg.\u_boot_ins_cmd.$verific$q_reg$prim_subreg.sv:72$7777 ($dlatch) from module edn.
Setting constant 0-bit at position 22 on $flatten\u_reg.\u_boot_ins_cmd.$verific$q_reg$prim_subreg.sv:72$7777 ($dlatch) from module edn.
Setting constant 0-bit at position 23 on $flatten\u_reg.\u_boot_ins_cmd.$verific$q_reg$prim_subreg.sv:72$7777 ($dlatch) from module edn.
Setting constant 0-bit at position 24 on $flatten\u_reg.\u_boot_ins_cmd.$verific$q_reg$prim_subreg.sv:72$7777 ($dlatch) from module edn.
Setting constant 0-bit at position 25 on $flatten\u_reg.\u_boot_ins_cmd.$verific$q_reg$prim_subreg.sv:72$7777 ($dlatch) from module edn.
Setting constant 0-bit at position 26 on $flatten\u_reg.\u_boot_ins_cmd.$verific$q_reg$prim_subreg.sv:72$7777 ($dlatch) from module edn.
Setting constant 0-bit at position 27 on $flatten\u_reg.\u_boot_ins_cmd.$verific$q_reg$prim_subreg.sv:72$7777 ($dlatch) from module edn.
Setting constant 0-bit at position 28 on $flatten\u_reg.\u_boot_ins_cmd.$verific$q_reg$prim_subreg.sv:72$7777 ($dlatch) from module edn.
Setting constant 0-bit at position 29 on $flatten\u_reg.\u_boot_ins_cmd.$verific$q_reg$prim_subreg.sv:72$7777 ($dlatch) from module edn.
Setting constant 0-bit at position 30 on $flatten\u_reg.\u_boot_ins_cmd.$verific$q_reg$prim_subreg.sv:72$7777 ($dlatch) from module edn.
Setting constant 0-bit at position 31 on $flatten\u_reg.\u_boot_ins_cmd.$verific$q_reg$prim_subreg.sv:72$7777 ($dlatch) from module edn.
Setting constant 1-bit at position 0 on $flatten\u_reg.\u_ctrl_auto_req_mode.$verific$q_reg$prim_subreg.sv:72$7718 ($dlatch) from module edn.
Setting constant 0-bit at position 1 on $flatten\u_reg.\u_ctrl_auto_req_mode.$verific$q_reg$prim_subreg.sv:72$7718 ($dlatch) from module edn.
Setting constant 1-bit at position 2 on $flatten\u_reg.\u_ctrl_auto_req_mode.$verific$q_reg$prim_subreg.sv:72$7718 ($dlatch) from module edn.
Setting constant 0-bit at position 3 on $flatten\u_reg.\u_ctrl_auto_req_mode.$verific$q_reg$prim_subreg.sv:72$7718 ($dlatch) from module edn.
Setting constant 1-bit at position 0 on $flatten\u_reg.\u_ctrl_boot_req_mode.$verific$q_reg$prim_subreg.sv:72$7718 ($dlatch) from module edn.
Setting constant 0-bit at position 1 on $flatten\u_reg.\u_ctrl_boot_req_mode.$verific$q_reg$prim_subreg.sv:72$7718 ($dlatch) from module edn.
Setting constant 1-bit at position 2 on $flatten\u_reg.\u_ctrl_boot_req_mode.$verific$q_reg$prim_subreg.sv:72$7718 ($dlatch) from module edn.
Setting constant 0-bit at position 3 on $flatten\u_reg.\u_ctrl_boot_req_mode.$verific$q_reg$prim_subreg.sv:72$7718 ($dlatch) from module edn.
Setting constant 1-bit at position 0 on $flatten\u_reg.\u_ctrl_cmd_fifo_rst.$verific$q_reg$prim_subreg.sv:72$7718 ($dlatch) from module edn.
Setting constant 0-bit at position 1 on $flatten\u_reg.\u_ctrl_cmd_fifo_rst.$verific$q_reg$prim_subreg.sv:72$7718 ($dlatch) from module edn.
Setting constant 1-bit at position 2 on $flatten\u_reg.\u_ctrl_cmd_fifo_rst.$verific$q_reg$prim_subreg.sv:72$7718 ($dlatch) from module edn.
Setting constant 0-bit at position 3 on $flatten\u_reg.\u_ctrl_cmd_fifo_rst.$verific$q_reg$prim_subreg.sv:72$7718 ($dlatch) from module edn.
Setting constant 1-bit at position 0 on $flatten\u_reg.\u_ctrl_edn_enable.$verific$q_reg$prim_subreg.sv:72$7718 ($dlatch) from module edn.
Setting constant 0-bit at position 1 on $flatten\u_reg.\u_ctrl_edn_enable.$verific$q_reg$prim_subreg.sv:72$7718 ($dlatch) from module edn.
Setting constant 1-bit at position 2 on $flatten\u_reg.\u_ctrl_edn_enable.$verific$q_reg$prim_subreg.sv:72$7718 ($dlatch) from module edn.
Setting constant 0-bit at position 3 on $flatten\u_reg.\u_ctrl_edn_enable.$verific$q_reg$prim_subreg.sv:72$7718 ($dlatch) from module edn.
Setting constant 0-bit at position 0 on $flatten\u_reg.\u_err_code_test.$verific$q_reg$prim_subreg.sv:72$7737 ($dlatch) from module edn.
Setting constant 0-bit at position 1 on $flatten\u_reg.\u_err_code_test.$verific$q_reg$prim_subreg.sv:72$7737 ($dlatch) from module edn.
Setting constant 0-bit at position 2 on $flatten\u_reg.\u_err_code_test.$verific$q_reg$prim_subreg.sv:72$7737 ($dlatch) from module edn.
Setting constant 0-bit at position 3 on $flatten\u_reg.\u_err_code_test.$verific$q_reg$prim_subreg.sv:72$7737 ($dlatch) from module edn.
Setting constant 0-bit at position 4 on $flatten\u_reg.\u_err_code_test.$verific$q_reg$prim_subreg.sv:72$7737 ($dlatch) from module edn.
Setting constant 0-bit at position 0 on $flatten\u_reg.\u_intr_enable_edn_cmd_req_done.$verific$q_reg[0]$prim_subreg.sv:72$7642 ($dlatch) from module edn.
Setting constant 0-bit at position 0 on $flatten\u_reg.\u_intr_enable_edn_fatal_err.$verific$q_reg[0]$prim_subreg.sv:72$7642 ($dlatch) from module edn.
Setting constant 0-bit at position 0 on $flatten\u_reg.\u_max_num_reqs_between_reseeds.$verific$q_reg$prim_subreg.sv:72$7756 ($dlatch) from module edn.
Setting constant 0-bit at position 1 on $flatten\u_reg.\u_max_num_reqs_between_reseeds.$verific$q_reg$prim_subreg.sv:72$7756 ($dlatch) from module edn.
Setting constant 0-bit at position 2 on $flatten\u_reg.\u_max_num_reqs_between_reseeds.$verific$q_reg$prim_subreg.sv:72$7756 ($dlatch) from module edn.
Setting constant 0-bit at position 3 on $flatten\u_reg.\u_max_num_reqs_between_reseeds.$verific$q_reg$prim_subreg.sv:72$7756 ($dlatch) from module edn.
Setting constant 0-bit at position 4 on $flatten\u_reg.\u_max_num_reqs_between_reseeds.$verific$q_reg$prim_subreg.sv:72$7756 ($dlatch) from module edn.
Setting constant 0-bit at position 5 on $flatten\u_reg.\u_max_num_reqs_between_reseeds.$verific$q_reg$prim_subreg.sv:72$7756 ($dlatch) from module edn.
Setting constant 0-bit at position 6 on $flatten\u_reg.\u_max_num_reqs_between_reseeds.$verific$q_reg$prim_subreg.sv:72$7756 ($dlatch) from module edn.
Setting constant 0-bit at position 7 on $flatten\u_reg.\u_max_num_reqs_between_reseeds.$verific$q_reg$prim_subreg.sv:72$7756 ($dlatch) from module edn.
Setting constant 0-bit at position 8 on $flatten\u_reg.\u_max_num_reqs_between_reseeds.$verific$q_reg$prim_subreg.sv:72$7756 ($dlatch) from module edn.
Setting constant 0-bit at position 9 on $flatten\u_reg.\u_max_num_reqs_between_reseeds.$verific$q_reg$prim_subreg.sv:72$7756 ($dlatch) from module edn.
Setting constant 0-bit at position 10 on $flatten\u_reg.\u_max_num_reqs_between_reseeds.$verific$q_reg$prim_subreg.sv:72$7756 ($dlatch) from module edn.
Setting constant 0-bit at position 11 on $flatten\u_reg.\u_max_num_reqs_between_reseeds.$verific$q_reg$prim_subreg.sv:72$7756 ($dlatch) from module edn.
Setting constant 0-bit at position 12 on $flatten\u_reg.\u_max_num_reqs_between_reseeds.$verific$q_reg$prim_subreg.sv:72$7756 ($dlatch) from module edn.
Setting constant 0-bit at position 13 on $flatten\u_reg.\u_max_num_reqs_between_reseeds.$verific$q_reg$prim_subreg.sv:72$7756 ($dlatch) from module edn.
Setting constant 0-bit at position 14 on $flatten\u_reg.\u_max_num_reqs_between_reseeds.$verific$q_reg$prim_subreg.sv:72$7756 ($dlatch) from module edn.
Setting constant 0-bit at position 15 on $flatten\u_reg.\u_max_num_reqs_between_reseeds.$verific$q_reg$prim_subreg.sv:72$7756 ($dlatch) from module edn.
Setting constant 0-bit at position 16 on $flatten\u_reg.\u_max_num_reqs_between_reseeds.$verific$q_reg$prim_subreg.sv:72$7756 ($dlatch) from module edn.
Setting constant 0-bit at position 17 on $flatten\u_reg.\u_max_num_reqs_between_reseeds.$verific$q_reg$prim_subreg.sv:72$7756 ($dlatch) from module edn.
Setting constant 0-bit at position 18 on $flatten\u_reg.\u_max_num_reqs_between_reseeds.$verific$q_reg$prim_subreg.sv:72$7756 ($dlatch) from module edn.
Setting constant 0-bit at position 19 on $flatten\u_reg.\u_max_num_reqs_between_reseeds.$verific$q_reg$prim_subreg.sv:72$7756 ($dlatch) from module edn.
Setting constant 0-bit at position 20 on $flatten\u_reg.\u_max_num_reqs_between_reseeds.$verific$q_reg$prim_subreg.sv:72$7756 ($dlatch) from module edn.
Setting constant 0-bit at position 21 on $flatten\u_reg.\u_max_num_reqs_between_reseeds.$verific$q_reg$prim_subreg.sv:72$7756 ($dlatch) from module edn.
Setting constant 0-bit at position 22 on $flatten\u_reg.\u_max_num_reqs_between_reseeds.$verific$q_reg$prim_subreg.sv:72$7756 ($dlatch) from module edn.
Setting constant 0-bit at position 23 on $flatten\u_reg.\u_max_num_reqs_between_reseeds.$verific$q_reg$prim_subreg.sv:72$7756 ($dlatch) from module edn.
Setting constant 0-bit at position 24 on $flatten\u_reg.\u_max_num_reqs_between_reseeds.$verific$q_reg$prim_subreg.sv:72$7756 ($dlatch) from module edn.
Setting constant 0-bit at position 25 on $flatten\u_reg.\u_max_num_reqs_between_reseeds.$verific$q_reg$prim_subreg.sv:72$7756 ($dlatch) from module edn.
Setting constant 0-bit at position 26 on $flatten\u_reg.\u_max_num_reqs_between_reseeds.$verific$q_reg$prim_subreg.sv:72$7756 ($dlatch) from module edn.
Setting constant 0-bit at position 27 on $flatten\u_reg.\u_max_num_reqs_between_reseeds.$verific$q_reg$prim_subreg.sv:72$7756 ($dlatch) from module edn.
Setting constant 0-bit at position 28 on $flatten\u_reg.\u_max_num_reqs_between_reseeds.$verific$q_reg$prim_subreg.sv:72$7756 ($dlatch) from module edn.
Setting constant 0-bit at position 29 on $flatten\u_reg.\u_max_num_reqs_between_reseeds.$verific$q_reg$prim_subreg.sv:72$7756 ($dlatch) from module edn.
Setting constant 0-bit at position 30 on $flatten\u_reg.\u_max_num_reqs_between_reseeds.$verific$q_reg$prim_subreg.sv:72$7756 ($dlatch) from module edn.
Setting constant 0-bit at position 31 on $flatten\u_reg.\u_max_num_reqs_between_reseeds.$verific$q_reg$prim_subreg.sv:72$7756 ($dlatch) from module edn.
Setting constant 1-bit at position 0 on $flatten\u_reg.\u_regwen.$verific$q_reg[0]$prim_subreg.sv:72$7680 ($dlatch) from module edn.

yosys> opt_clean

3.30. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \edn..

yosys> opt_expr

3.31. Executing OPT_EXPR pass (perform const folding).
Optimizing module edn.
<suppressed ~167 debug messages>

yosys> opt_muxtree

3.32. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \edn..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
    dead port 1/2 on $mux $flatten\u_edn_core.$verific$i325$edn_core.sv:445$1828.
    dead port 2/2 on $mux $flatten\u_edn_core.$verific$i325$edn_core.sv:445$1828.
    dead port 1/2 on $mux $flatten\u_edn_core.$verific$i336$edn_core.sv:460$1838.
    dead port 2/2 on $mux $flatten\u_edn_core.$verific$i336$edn_core.sv:460$1838.
    dead port 1/2 on $mux $flatten\u_edn_core.$verific$i337$edn_core.sv:460$1839.
    dead port 2/2 on $mux $flatten\u_edn_core.$verific$i337$edn_core.sv:460$1839.
    dead port 1/2 on $mux $flatten\u_edn_core.$verific$i338$edn_core.sv:460$1840.
    dead port 2/2 on $mux $flatten\u_edn_core.$verific$i338$edn_core.sv:460$1840.
    dead port 1/2 on $mux $flatten\u_edn_core.$verific$i439$edn_core.sv:653$2201.
    dead port 2/2 on $mux $flatten\u_edn_core.$verific$i439$edn_core.sv:653$2201.
    dead port 1/2 on $mux $flatten\u_edn_core.$verific$i440$edn_core.sv:653$2202.
    dead port 2/2 on $mux $flatten\u_edn_core.$verific$i440$edn_core.sv:653$2202.
    dead port 1/2 on $mux $flatten\u_edn_core.$verific$i479$edn_core.sv:717$2757.
    dead port 2/2 on $mux $flatten\u_edn_core.$verific$i479$edn_core.sv:717$2757.
    dead port 1/2 on $mux $flatten\u_edn_core.$verific$i487$edn_core.sv:736$2764.
    dead port 2/2 on $mux $flatten\u_edn_core.$verific$i487$edn_core.sv:736$2764.
    dead port 1/2 on $mux $flatten\u_edn_core.$verific$i505$edn_core.sv:777$2943.
    dead port 2/2 on $mux $flatten\u_edn_core.$verific$i505$edn_core.sv:777$2943.
    dead port 1/2 on $mux $flatten\u_edn_core.$verific$i519$edn_core.sv:777$3124.
    dead port 2/2 on $mux $flatten\u_edn_core.$verific$i519$edn_core.sv:777$3124.
    dead port 1/2 on $mux $flatten\u_edn_core.$verific$i533$edn_core.sv:777$3305.
    dead port 2/2 on $mux $flatten\u_edn_core.$verific$i533$edn_core.sv:777$3305.
    dead port 1/2 on $mux $flatten\u_edn_core.$verific$i547$edn_core.sv:777$3486.
    dead port 2/2 on $mux $flatten\u_edn_core.$verific$i547$edn_core.sv:777$3486.
    dead port 1/2 on $mux $flatten\u_edn_core.$verific$i561$edn_core.sv:777$3667.
    dead port 2/2 on $mux $flatten\u_edn_core.$verific$i561$edn_core.sv:777$3667.
    dead port 1/2 on $mux $flatten\u_edn_core.$verific$i575$edn_core.sv:777$3848.
    dead port 2/2 on $mux $flatten\u_edn_core.$verific$i575$edn_core.sv:777$3848.
    dead port 1/2 on $mux $flatten\u_edn_core.$verific$i589$edn_core.sv:777$4029.
    dead port 2/2 on $mux $flatten\u_edn_core.$verific$i589$edn_core.sv:777$4029.
    dead port 1/2 on $mux $flatten\u_edn_core.$verific$i603$edn_core.sv:777$4214.
    dead port 2/2 on $mux $flatten\u_edn_core.$verific$i603$edn_core.sv:777$4214.
    dead port 1/2 on $mux $flatten\u_edn_core.$verific$mux_307$edn_core.sv:429$1815.
    dead port 2/2 on $mux $flatten\u_edn_core.$verific$mux_307$edn_core.sv:429$1815.
    dead port 1/2 on $mux $flatten\u_edn_core.$verific$mux_308$edn_core.sv:429$1816.
    dead port 2/2 on $mux $flatten\u_edn_core.$verific$mux_308$edn_core.sv:429$1816.
    dead port 1/2 on $mux $flatten\u_edn_core.$verific$mux_317$edn_core.sv:440$1822.
    dead port 2/2 on $mux $flatten\u_edn_core.$verific$mux_317$edn_core.sv:440$1822.
    dead port 1/2 on $mux $flatten\u_edn_core.$verific$mux_318$edn_core.sv:440$1823.
    dead port 2/2 on $mux $flatten\u_edn_core.$verific$mux_318$edn_core.sv:440$1823.
    dead port 1/2 on $mux $flatten\u_edn_core.$verific$mux_319$edn_core.sv:440$1824.
    dead port 2/2 on $mux $flatten\u_edn_core.$verific$mux_319$edn_core.sv:440$1824.
    dead port 1/2 on $mux $flatten\u_edn_core.$verific$mux_401$edn_core.sv:610$2151.
    dead port 2/2 on $mux $flatten\u_edn_core.$verific$mux_401$edn_core.sv:610$2151.
    dead port 1/2 on $mux $flatten\u_edn_core.$verific$mux_402$edn_core.sv:610$2152.
    dead port 2/2 on $mux $flatten\u_edn_core.$verific$mux_402$edn_core.sv:610$2152.
    dead port 1/2 on $mux $flatten\u_edn_core.$verific$mux_403$edn_core.sv:610$2153.
    dead port 2/2 on $mux $flatten\u_edn_core.$verific$mux_403$edn_core.sv:610$2153.
    dead port 1/2 on $mux $flatten\u_edn_core.$verific$mux_404$edn_core.sv:610$2154.
    dead port 2/2 on $mux $flatten\u_edn_core.$verific$mux_404$edn_core.sv:610$2154.
    dead port 1/2 on $mux $flatten\u_edn_core.\gen_ep_blk[0].u_edn_ack_sm_ep.$verific$i7$edn_ack_sm.sv:82$4264.
    dead port 2/2 on $mux $flatten\u_edn_core.\gen_ep_blk[0].u_edn_ack_sm_ep.$verific$i7$edn_ack_sm.sv:82$4264.
    dead port 1/2 on $mux $flatten\u_edn_core.\gen_ep_blk[0].u_edn_ack_sm_ep.$verific$mux_11$edn_ack_sm.sv:91$4268.
    dead port 2/2 on $mux $flatten\u_edn_core.\gen_ep_blk[0].u_edn_ack_sm_ep.$verific$mux_11$edn_ack_sm.sv:91$4268.
    dead port 1/2 on $mux $flatten\u_edn_core.\gen_ep_blk[0].u_edn_ack_sm_ep.$verific$mux_7$edn_ack_sm.sv:82$4265.
    dead port 2/2 on $mux $flatten\u_edn_core.\gen_ep_blk[0].u_edn_ack_sm_ep.$verific$mux_7$edn_ack_sm.sv:82$4265.
    dead port 1/2 on $mux $flatten\u_edn_core.\gen_ep_blk[1].u_edn_ack_sm_ep.$verific$i7$edn_ack_sm.sv:82$4264.
    dead port 2/2 on $mux $flatten\u_edn_core.\gen_ep_blk[1].u_edn_ack_sm_ep.$verific$i7$edn_ack_sm.sv:82$4264.
    dead port 1/2 on $mux $flatten\u_edn_core.\gen_ep_blk[1].u_edn_ack_sm_ep.$verific$mux_11$edn_ack_sm.sv:91$4268.
    dead port 2/2 on $mux $flatten\u_edn_core.\gen_ep_blk[1].u_edn_ack_sm_ep.$verific$mux_11$edn_ack_sm.sv:91$4268.
    dead port 1/2 on $mux $flatten\u_edn_core.\gen_ep_blk[1].u_edn_ack_sm_ep.$verific$mux_7$edn_ack_sm.sv:82$4265.
    dead port 2/2 on $mux $flatten\u_edn_core.\gen_ep_blk[1].u_edn_ack_sm_ep.$verific$mux_7$edn_ack_sm.sv:82$4265.
    dead port 1/2 on $mux $flatten\u_edn_core.\gen_ep_blk[2].u_edn_ack_sm_ep.$verific$i7$edn_ack_sm.sv:82$4264.
    dead port 2/2 on $mux $flatten\u_edn_core.\gen_ep_blk[2].u_edn_ack_sm_ep.$verific$i7$edn_ack_sm.sv:82$4264.
    dead port 1/2 on $mux $flatten\u_edn_core.\gen_ep_blk[2].u_edn_ack_sm_ep.$verific$mux_11$edn_ack_sm.sv:91$4268.
    dead port 2/2 on $mux $flatten\u_edn_core.\gen_ep_blk[2].u_edn_ack_sm_ep.$verific$mux_11$edn_ack_sm.sv:91$4268.
    dead port 1/2 on $mux $flatten\u_edn_core.\gen_ep_blk[2].u_edn_ack_sm_ep.$verific$mux_7$edn_ack_sm.sv:82$4265.
    dead port 2/2 on $mux $flatten\u_edn_core.\gen_ep_blk[2].u_edn_ack_sm_ep.$verific$mux_7$edn_ack_sm.sv:82$4265.
    dead port 1/2 on $mux $flatten\u_edn_core.\gen_ep_blk[3].u_edn_ack_sm_ep.$verific$i7$edn_ack_sm.sv:82$4264.
    dead port 2/2 on $mux $flatten\u_edn_core.\gen_ep_blk[3].u_edn_ack_sm_ep.$verific$i7$edn_ack_sm.sv:82$4264.
    dead port 1/2 on $mux $flatten\u_edn_core.\gen_ep_blk[3].u_edn_ack_sm_ep.$verific$mux_11$edn_ack_sm.sv:91$4268.
    dead port 2/2 on $mux $flatten\u_edn_core.\gen_ep_blk[3].u_edn_ack_sm_ep.$verific$mux_11$edn_ack_sm.sv:91$4268.
    dead port 1/2 on $mux $flatten\u_edn_core.\gen_ep_blk[3].u_edn_ack_sm_ep.$verific$mux_7$edn_ack_sm.sv:82$4265.
    dead port 2/2 on $mux $flatten\u_edn_core.\gen_ep_blk[3].u_edn_ack_sm_ep.$verific$mux_7$edn_ack_sm.sv:82$4265.
    dead port 1/2 on $mux $flatten\u_edn_core.\gen_ep_blk[4].u_edn_ack_sm_ep.$verific$i7$edn_ack_sm.sv:82$4264.
    dead port 2/2 on $mux $flatten\u_edn_core.\gen_ep_blk[4].u_edn_ack_sm_ep.$verific$i7$edn_ack_sm.sv:82$4264.
    dead port 1/2 on $mux $flatten\u_edn_core.\gen_ep_blk[4].u_edn_ack_sm_ep.$verific$mux_11$edn_ack_sm.sv:91$4268.
    dead port 2/2 on $mux $flatten\u_edn_core.\gen_ep_blk[4].u_edn_ack_sm_ep.$verific$mux_11$edn_ack_sm.sv:91$4268.
    dead port 1/2 on $mux $flatten\u_edn_core.\gen_ep_blk[4].u_edn_ack_sm_ep.$verific$mux_7$edn_ack_sm.sv:82$4265.
    dead port 2/2 on $mux $flatten\u_edn_core.\gen_ep_blk[4].u_edn_ack_sm_ep.$verific$mux_7$edn_ack_sm.sv:82$4265.
    dead port 1/2 on $mux $flatten\u_edn_core.\gen_ep_blk[5].u_edn_ack_sm_ep.$verific$i7$edn_ack_sm.sv:82$4264.
    dead port 2/2 on $mux $flatten\u_edn_core.\gen_ep_blk[5].u_edn_ack_sm_ep.$verific$i7$edn_ack_sm.sv:82$4264.
    dead port 1/2 on $mux $flatten\u_edn_core.\gen_ep_blk[5].u_edn_ack_sm_ep.$verific$mux_11$edn_ack_sm.sv:91$4268.
    dead port 2/2 on $mux $flatten\u_edn_core.\gen_ep_blk[5].u_edn_ack_sm_ep.$verific$mux_11$edn_ack_sm.sv:91$4268.
    dead port 1/2 on $mux $flatten\u_edn_core.\gen_ep_blk[5].u_edn_ack_sm_ep.$verific$mux_7$edn_ack_sm.sv:82$4265.
    dead port 2/2 on $mux $flatten\u_edn_core.\gen_ep_blk[5].u_edn_ack_sm_ep.$verific$mux_7$edn_ack_sm.sv:82$4265.
    dead port 1/2 on $mux $flatten\u_edn_core.\gen_ep_blk[6].u_edn_ack_sm_ep.$verific$i7$edn_ack_sm.sv:82$4264.
    dead port 2/2 on $mux $flatten\u_edn_core.\gen_ep_blk[6].u_edn_ack_sm_ep.$verific$i7$edn_ack_sm.sv:82$4264.
    dead port 1/2 on $mux $flatten\u_edn_core.\gen_ep_blk[6].u_edn_ack_sm_ep.$verific$mux_11$edn_ack_sm.sv:91$4268.
    dead port 2/2 on $mux $flatten\u_edn_core.\gen_ep_blk[6].u_edn_ack_sm_ep.$verific$mux_11$edn_ack_sm.sv:91$4268.
    dead port 1/2 on $mux $flatten\u_edn_core.\gen_ep_blk[6].u_edn_ack_sm_ep.$verific$mux_7$edn_ack_sm.sv:82$4265.
    dead port 2/2 on $mux $flatten\u_edn_core.\gen_ep_blk[6].u_edn_ack_sm_ep.$verific$mux_7$edn_ack_sm.sv:82$4265.
    dead port 1/2 on $mux $flatten\u_edn_core.\gen_ep_blk[7].u_edn_ack_sm_ep.$verific$i7$edn_ack_sm.sv:82$4264.
    dead port 2/2 on $mux $flatten\u_edn_core.\gen_ep_blk[7].u_edn_ack_sm_ep.$verific$i7$edn_ack_sm.sv:82$4264.
    dead port 1/2 on $mux $flatten\u_edn_core.\gen_ep_blk[7].u_edn_ack_sm_ep.$verific$mux_11$edn_ack_sm.sv:91$4268.
    dead port 2/2 on $mux $flatten\u_edn_core.\gen_ep_blk[7].u_edn_ack_sm_ep.$verific$mux_11$edn_ack_sm.sv:91$4268.
    dead port 1/2 on $mux $flatten\u_edn_core.\gen_ep_blk[7].u_edn_ack_sm_ep.$verific$mux_7$edn_ack_sm.sv:82$4265.
    dead port 2/2 on $mux $flatten\u_edn_core.\gen_ep_blk[7].u_edn_ack_sm_ep.$verific$mux_7$edn_ack_sm.sv:82$4265.
    dead port 1/2 on $mux $flatten\u_edn_core.\u_prim_fifo_sync_gencmd.$verific$mux_64$prim_fifo_sync.sv:141$6851.
    dead port 2/2 on $mux $flatten\u_edn_core.\u_prim_fifo_sync_gencmd.$verific$mux_64$prim_fifo_sync.sv:141$6851.
    dead port 1/2 on $mux $flatten\u_edn_core.\u_prim_fifo_sync_rescmd.$verific$mux_64$prim_fifo_sync.sv:141$6851.
    dead port 2/2 on $mux $flatten\u_edn_core.\u_prim_fifo_sync_rescmd.$verific$mux_64$prim_fifo_sync.sv:141$6851.
Removed 102 multiplexer ports.
<suppressed ~130 debug messages>

yosys> opt_reduce

3.33. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \edn.
    New ctrl vector for $pmux cell $flatten\u_edn_core.\gen_ep_blk[0].u_edn_ack_sm_ep.$verific$select_19$edn_ack_sm.sv:102$4277: { $auto$opt_reduce.cc:134:opt_pmux$9013 $auto$opt_reduce.cc:134:opt_pmux$9011 $flatten\u_edn_core.\gen_ep_blk[0].u_edn_ack_sm_ep.$verific$n60$4240 }
    New ctrl vector for $pmux cell $flatten\u_edn_core.\gen_ep_blk[1].u_edn_ack_sm_ep.$verific$select_19$edn_ack_sm.sv:102$4277: { $auto$opt_reduce.cc:134:opt_pmux$9017 $auto$opt_reduce.cc:134:opt_pmux$9015 $flatten\u_edn_core.\gen_ep_blk[1].u_edn_ack_sm_ep.$verific$n60$4240 }
    New ctrl vector for $pmux cell $flatten\u_edn_core.\gen_ep_blk[2].u_edn_ack_sm_ep.$verific$select_19$edn_ack_sm.sv:102$4277: { $auto$opt_reduce.cc:134:opt_pmux$9021 $auto$opt_reduce.cc:134:opt_pmux$9019 $flatten\u_edn_core.\gen_ep_blk[2].u_edn_ack_sm_ep.$verific$n60$4240 }
    New ctrl vector for $pmux cell $flatten\u_edn_core.\gen_ep_blk[3].u_edn_ack_sm_ep.$verific$select_19$edn_ack_sm.sv:102$4277: { $auto$opt_reduce.cc:134:opt_pmux$9025 $auto$opt_reduce.cc:134:opt_pmux$9023 $flatten\u_edn_core.\gen_ep_blk[3].u_edn_ack_sm_ep.$verific$n60$4240 }
    New ctrl vector for $pmux cell $flatten\u_edn_core.\gen_ep_blk[4].u_edn_ack_sm_ep.$verific$select_19$edn_ack_sm.sv:102$4277: { $auto$opt_reduce.cc:134:opt_pmux$9029 $auto$opt_reduce.cc:134:opt_pmux$9027 $flatten\u_edn_core.\gen_ep_blk[4].u_edn_ack_sm_ep.$verific$n60$4240 }
    New ctrl vector for $pmux cell $flatten\u_edn_core.\gen_ep_blk[5].u_edn_ack_sm_ep.$verific$select_19$edn_ack_sm.sv:102$4277: { $auto$opt_reduce.cc:134:opt_pmux$9033 $auto$opt_reduce.cc:134:opt_pmux$9031 $flatten\u_edn_core.\gen_ep_blk[5].u_edn_ack_sm_ep.$verific$n60$4240 }
    New ctrl vector for $pmux cell $flatten\u_edn_core.\gen_ep_blk[6].u_edn_ack_sm_ep.$verific$select_19$edn_ack_sm.sv:102$4277: { $auto$opt_reduce.cc:134:opt_pmux$9037 $auto$opt_reduce.cc:134:opt_pmux$9035 $flatten\u_edn_core.\gen_ep_blk[6].u_edn_ack_sm_ep.$verific$n60$4240 }
    New ctrl vector for $pmux cell $flatten\u_edn_core.\gen_ep_blk[7].u_edn_ack_sm_ep.$verific$select_19$edn_ack_sm.sv:102$4277: { $auto$opt_reduce.cc:134:opt_pmux$9041 $auto$opt_reduce.cc:134:opt_pmux$9039 $flatten\u_edn_core.\gen_ep_blk[7].u_edn_ack_sm_ep.$verific$n60$4240 }
    New ctrl vector for $pmux cell $flatten\u_reg.$verific$select_305$edn_reg_top.sv:1268$6216: { \u_reg.addr_hit [0] $flatten\u_reg.$verific$n1575$4485 $flatten\u_reg.$verific$n1578$4488 $auto$opt_reduce.cc:134:opt_pmux$9043 $flatten\u_reg.$verific$n1584$4494 $flatten\u_reg.$verific$n1590$4500 $flatten\u_reg.$verific$n1602$4512 $flatten\u_reg.$verific$n1605$4515 $flatten\u_reg.$verific$n1610$4520 }
  Optimizing cells in module \edn.
Performed a total of 9 changes.

yosys> opt_merge

3.34. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\edn'.
<suppressed ~36 debug messages>
Removed a total of 12 cells.

yosys> opt_share

3.35. Executing OPT_SHARE pass.

yosys> opt_dff -nosdff -nodffe

3.36. Executing OPT_DFF pass (perform DFF optimizations).
Setting constant 0-bit at position 0 on $flatten\u_edn_core.$verific$boot_auto_req_dly_q_reg$edn_core.sv:213$1467 ($adff) from module edn.
Setting constant 0-bit at position 0 on $flatten\u_edn_core.$verific$boot_req_q_reg$edn_core.sv:213$1465 ($adff) from module edn.
Setting constant 0-bit at position 1 on $flatten\u_edn_core.$verific$boot_req_q_reg$edn_core.sv:213$1465 ($adff) from module edn.
Setting constant 0-bit at position 2 on $flatten\u_edn_core.$verific$boot_req_q_reg$edn_core.sv:213$1465 ($adff) from module edn.
Setting constant 0-bit at position 3 on $flatten\u_edn_core.$verific$boot_req_q_reg$edn_core.sv:213$1465 ($adff) from module edn.
Setting constant 0-bit at position 0 on $flatten\u_edn_core.$verific$cs_cmd_req_out_q_reg$edn_core.sv:213$1458 ($adff) from module edn.
Setting constant 0-bit at position 1 on $flatten\u_edn_core.$verific$cs_cmd_req_out_q_reg$edn_core.sv:213$1458 ($adff) from module edn.
Setting constant 0-bit at position 2 on $flatten\u_edn_core.$verific$cs_cmd_req_out_q_reg$edn_core.sv:213$1458 ($adff) from module edn.
Setting constant 0-bit at position 3 on $flatten\u_edn_core.$verific$cs_cmd_req_out_q_reg$edn_core.sv:213$1458 ($adff) from module edn.
Setting constant 0-bit at position 4 on $flatten\u_edn_core.$verific$cs_cmd_req_out_q_reg$edn_core.sv:213$1458 ($adff) from module edn.
Setting constant 0-bit at position 5 on $flatten\u_edn_core.$verific$cs_cmd_req_out_q_reg$edn_core.sv:213$1458 ($adff) from module edn.
Setting constant 0-bit at position 6 on $flatten\u_edn_core.$verific$cs_cmd_req_out_q_reg$edn_core.sv:213$1458 ($adff) from module edn.
Setting constant 0-bit at position 7 on $flatten\u_edn_core.$verific$cs_cmd_req_out_q_reg$edn_core.sv:213$1458 ($adff) from module edn.
Setting constant 0-bit at position 8 on $flatten\u_edn_core.$verific$cs_cmd_req_out_q_reg$edn_core.sv:213$1458 ($adff) from module edn.
Setting constant 0-bit at position 9 on $flatten\u_edn_core.$verific$cs_cmd_req_out_q_reg$edn_core.sv:213$1458 ($adff) from module edn.
Setting constant 0-bit at position 10 on $flatten\u_edn_core.$verific$cs_cmd_req_out_q_reg$edn_core.sv:213$1458 ($adff) from module edn.
Setting constant 0-bit at position 11 on $flatten\u_edn_core.$verific$cs_cmd_req_out_q_reg$edn_core.sv:213$1458 ($adff) from module edn.
Setting constant 0-bit at position 12 on $flatten\u_edn_core.$verific$cs_cmd_req_out_q_reg$edn_core.sv:213$1458 ($adff) from module edn.
Setting constant 0-bit at position 13 on $flatten\u_edn_core.$verific$cs_cmd_req_out_q_reg$edn_core.sv:213$1458 ($adff) from module edn.
Setting constant 0-bit at position 14 on $flatten\u_edn_core.$verific$cs_cmd_req_out_q_reg$edn_core.sv:213$1458 ($adff) from module edn.
Setting constant 0-bit at position 15 on $flatten\u_edn_core.$verific$cs_cmd_req_out_q_reg$edn_core.sv:213$1458 ($adff) from module edn.
Setting constant 0-bit at position 16 on $flatten\u_edn_core.$verific$cs_cmd_req_out_q_reg$edn_core.sv:213$1458 ($adff) from module edn.
Setting constant 0-bit at position 17 on $flatten\u_edn_core.$verific$cs_cmd_req_out_q_reg$edn_core.sv:213$1458 ($adff) from module edn.
Setting constant 0-bit at position 18 on $flatten\u_edn_core.$verific$cs_cmd_req_out_q_reg$edn_core.sv:213$1458 ($adff) from module edn.
Setting constant 0-bit at position 19 on $flatten\u_edn_core.$verific$cs_cmd_req_out_q_reg$edn_core.sv:213$1458 ($adff) from module edn.
Setting constant 0-bit at position 20 on $flatten\u_edn_core.$verific$cs_cmd_req_out_q_reg$edn_core.sv:213$1458 ($adff) from module edn.
Setting constant 0-bit at position 21 on $flatten\u_edn_core.$verific$cs_cmd_req_out_q_reg$edn_core.sv:213$1458 ($adff) from module edn.
Setting constant 0-bit at position 22 on $flatten\u_edn_core.$verific$cs_cmd_req_out_q_reg$edn_core.sv:213$1458 ($adff) from module edn.
Setting constant 0-bit at position 23 on $flatten\u_edn_core.$verific$cs_cmd_req_out_q_reg$edn_core.sv:213$1458 ($adff) from module edn.
Setting constant 0-bit at position 24 on $flatten\u_edn_core.$verific$cs_cmd_req_out_q_reg$edn_core.sv:213$1458 ($adff) from module edn.
Setting constant 0-bit at position 25 on $flatten\u_edn_core.$verific$cs_cmd_req_out_q_reg$edn_core.sv:213$1458 ($adff) from module edn.
Setting constant 0-bit at position 26 on $flatten\u_edn_core.$verific$cs_cmd_req_out_q_reg$edn_core.sv:213$1458 ($adff) from module edn.
Setting constant 0-bit at position 27 on $flatten\u_edn_core.$verific$cs_cmd_req_out_q_reg$edn_core.sv:213$1458 ($adff) from module edn.
Setting constant 0-bit at position 28 on $flatten\u_edn_core.$verific$cs_cmd_req_out_q_reg$edn_core.sv:213$1458 ($adff) from module edn.
Setting constant 0-bit at position 29 on $flatten\u_edn_core.$verific$cs_cmd_req_out_q_reg$edn_core.sv:213$1458 ($adff) from module edn.
Setting constant 0-bit at position 30 on $flatten\u_edn_core.$verific$cs_cmd_req_out_q_reg$edn_core.sv:213$1458 ($adff) from module edn.
Setting constant 0-bit at position 31 on $flatten\u_edn_core.$verific$cs_cmd_req_out_q_reg$edn_core.sv:213$1458 ($adff) from module edn.
Setting constant 0-bit at position 0 on $flatten\u_edn_core.$verific$edn_fips_q_reg$edn_core.sv:213$1464 ($adff) from module edn.
Setting constant 0-bit at position 1 on $flatten\u_edn_core.$verific$edn_fips_q_reg$edn_core.sv:213$1464 ($adff) from module edn.
Setting constant 0-bit at position 2 on $flatten\u_edn_core.$verific$edn_fips_q_reg$edn_core.sv:213$1464 ($adff) from module edn.
Setting constant 0-bit at position 3 on $flatten\u_edn_core.$verific$edn_fips_q_reg$edn_core.sv:213$1464 ($adff) from module edn.
Setting constant 0-bit at position 4 on $flatten\u_edn_core.$verific$edn_fips_q_reg$edn_core.sv:213$1464 ($adff) from module edn.
Setting constant 0-bit at position 5 on $flatten\u_edn_core.$verific$edn_fips_q_reg$edn_core.sv:213$1464 ($adff) from module edn.
Setting constant 0-bit at position 6 on $flatten\u_edn_core.$verific$edn_fips_q_reg$edn_core.sv:213$1464 ($adff) from module edn.
Setting constant 0-bit at position 7 on $flatten\u_edn_core.$verific$edn_fips_q_reg$edn_core.sv:213$1464 ($adff) from module edn.
Setting constant 1-bit at position 0 on $flatten\u_edn_core.\gen_ep_blk[0].u_prim_packer_fifo_ep.$verific$clr_q_reg$prim_packer_fifo.sv:87$7470 ($adff) from module edn.

yosys> opt_clean

3.37. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \edn..
Removed 117 unused cells and 313 unused wires.
<suppressed ~191 debug messages>

yosys> opt_expr

3.38. Executing OPT_EXPR pass (perform const folding).
Optimizing module edn.
<suppressed ~100 debug messages>

yosys> opt_muxtree

3.39. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \edn..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
    dead port 1/2 on $mux $flatten\u_edn_core.\u_edn_main_sm.$verific$i32$edn_main_sm.sv:141$4346.
    dead port 2/2 on $mux $flatten\u_edn_core.\u_edn_main_sm.$verific$i32$edn_main_sm.sv:141$4346.
    dead port 1/2 on $mux $flatten\u_edn_core.\u_edn_main_sm.$verific$i34$edn_main_sm.sv:141$4348.
    dead port 2/2 on $mux $flatten\u_edn_core.\u_edn_main_sm.$verific$i34$edn_main_sm.sv:141$4348.
Removed 4 multiplexer ports.
<suppressed ~78 debug messages>

yosys> opt_reduce

3.40. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \edn.
    New ctrl vector for $pmux cell $flatten\u_edn_core.\u_edn_main_sm.$verific$select_28$edn_main_sm.sv:141$4343: { $flatten\u_edn_core.\u_edn_main_sm.$verific$n77$4287 $flatten\u_edn_core.\u_edn_main_sm.$verific$n78$4288 $flatten\u_edn_core.\u_edn_main_sm.$verific$n79$4289 $flatten\u_edn_core.\u_edn_main_sm.$verific$n81$4291 $auto$opt_reduce.cc:134:opt_pmux$9045 $flatten\u_edn_core.\u_edn_main_sm.$verific$n84$4294 }
  Optimizing cells in module \edn.
Performed a total of 1 changes.

yosys> opt_merge

3.41. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\edn'.
<suppressed ~135 debug messages>
Removed a total of 45 cells.

yosys> opt_share

3.42. Executing OPT_SHARE pass.

yosys> opt_dff -nosdff -nodffe

3.43. Executing OPT_DFF pass (perform DFF optimizations).
Handling D = Q on $flatten\u_reg.\u_recov_alert_sts_edn_enable_field_alert.$verific$q_reg[0]$prim_subreg.sv:72$7659 ($adff) from module edn (removing D path).
Handling D = Q on $flatten\u_reg.\u_recov_alert_sts_cmd_fifo_rst_field_alert.$verific$q_reg[0]$prim_subreg.sv:72$7659 ($adff) from module edn (removing D path).
Handling D = Q on $flatten\u_reg.\u_recov_alert_sts_boot_req_mode_field_alert.$verific$q_reg[0]$prim_subreg.sv:72$7659 ($adff) from module edn (removing D path).
Handling D = Q on $flatten\u_reg.\u_recov_alert_sts_auto_req_mode_field_alert.$verific$q_reg[0]$prim_subreg.sv:72$7659 ($adff) from module edn (removing D path).
Handling D = Q on $flatten\u_reg.\u_err_code_sfifo_rescmd_err.$verific$q_reg[0]$prim_subreg.sv:72$7604 ($adff) from module edn (removing D path).
Handling D = Q on $flatten\u_reg.\u_err_code_sfifo_gencmd_err.$verific$q_reg[0]$prim_subreg.sv:72$7604 ($adff) from module edn (removing D path).
Handling D = Q on $flatten\u_reg.\u_err_code_fifo_write_err.$verific$q_reg[0]$prim_subreg.sv:72$7604 ($adff) from module edn (removing D path).
Handling D = Q on $flatten\u_reg.\u_err_code_fifo_state_err.$verific$q_reg[0]$prim_subreg.sv:72$7604 ($adff) from module edn (removing D path).
Handling D = Q on $flatten\u_reg.\u_err_code_fifo_read_err.$verific$q_reg[0]$prim_subreg.sv:72$7604 ($adff) from module edn (removing D path).
Handling D = Q on $flatten\u_reg.\u_err_code_edn_main_sm_err.$verific$q_reg[0]$prim_subreg.sv:72$7604 ($adff) from module edn (removing D path).
Handling D = Q on $flatten\u_reg.\u_err_code_edn_ack_sm_err.$verific$q_reg[0]$prim_subreg.sv:72$7604 ($adff) from module edn (removing D path).
Setting constant 0-bit at position 0 on $flatten\u_reg.\u_err_code_edn_ack_sm_err.$verific$q_reg[0]$prim_subreg.sv:72$7604 ($dlatch) from module edn.
Setting constant 0-bit at position 0 on $flatten\u_edn_core.\gen_ep_blk[0].u_prim_packer_fifo_ep.$verific$data_q_reg$prim_packer_fifo.sv:87$7469 ($adff) from module edn.
Setting constant 0-bit at position 1 on $flatten\u_edn_core.\gen_ep_blk[0].u_prim_packer_fifo_ep.$verific$data_q_reg$prim_packer_fifo.sv:87$7469 ($adff) from module edn.
Setting constant 0-bit at position 2 on $flatten\u_edn_core.\gen_ep_blk[0].u_prim_packer_fifo_ep.$verific$data_q_reg$prim_packer_fifo.sv:87$7469 ($adff) from module edn.
Setting constant 0-bit at position 3 on $flatten\u_edn_core.\gen_ep_blk[0].u_prim_packer_fifo_ep.$verific$data_q_reg$prim_packer_fifo.sv:87$7469 ($adff) from module edn.
Setting constant 0-bit at position 4 on $flatten\u_edn_core.\gen_ep_blk[0].u_prim_packer_fifo_ep.$verific$data_q_reg$prim_packer_fifo.sv:87$7469 ($adff) from module edn.
Setting constant 0-bit at position 5 on $flatten\u_edn_core.\gen_ep_blk[0].u_prim_packer_fifo_ep.$verific$data_q_reg$prim_packer_fifo.sv:87$7469 ($adff) from module edn.
Setting constant 0-bit at position 6 on $flatten\u_edn_core.\gen_ep_blk[0].u_prim_packer_fifo_ep.$verific$data_q_reg$prim_packer_fifo.sv:87$7469 ($adff) from module edn.
Setting constant 0-bit at position 7 on $flatten\u_edn_core.\gen_ep_blk[0].u_prim_packer_fifo_ep.$verific$data_q_reg$prim_packer_fifo.sv:87$7469 ($adff) from module edn.
Setting constant 0-bit at position 8 on $flatten\u_edn_core.\gen_ep_blk[0].u_prim_packer_fifo_ep.$verific$data_q_reg$prim_packer_fifo.sv:87$7469 ($adff) from module edn.
Setting constant 0-bit at position 9 on $flatten\u_edn_core.\gen_ep_blk[0].u_prim_packer_fifo_ep.$verific$data_q_reg$prim_packer_fifo.sv:87$7469 ($adff) from module edn.
Setting constant 0-bit at position 10 on $flatten\u_edn_core.\gen_ep_blk[0].u_prim_packer_fifo_ep.$verific$data_q_reg$prim_packer_fifo.sv:87$7469 ($adff) from module edn.
Setting constant 0-bit at position 11 on $flatten\u_edn_core.\gen_ep_blk[0].u_prim_packer_fifo_ep.$verific$data_q_reg$prim_packer_fifo.sv:87$7469 ($adff) from module edn.
Setting constant 0-bit at position 12 on $flatten\u_edn_core.\gen_ep_blk[0].u_prim_packer_fifo_ep.$verific$data_q_reg$prim_packer_fifo.sv:87$7469 ($adff) from module edn.
Setting constant 0-bit at position 13 on $flatten\u_edn_core.\gen_ep_blk[0].u_prim_packer_fifo_ep.$verific$data_q_reg$prim_packer_fifo.sv:87$7469 ($adff) from module edn.
Setting constant 0-bit at position 14 on $flatten\u_edn_core.\gen_ep_blk[0].u_prim_packer_fifo_ep.$verific$data_q_reg$prim_packer_fifo.sv:87$7469 ($adff) from module edn.
Setting constant 0-bit at position 15 on $flatten\u_edn_core.\gen_ep_blk[0].u_prim_packer_fifo_ep.$verific$data_q_reg$prim_packer_fifo.sv:87$7469 ($adff) from module edn.
Setting constant 0-bit at position 16 on $flatten\u_edn_core.\gen_ep_blk[0].u_prim_packer_fifo_ep.$verific$data_q_reg$prim_packer_fifo.sv:87$7469 ($adff) from module edn.
Setting constant 0-bit at position 17 on $flatten\u_edn_core.\gen_ep_blk[0].u_prim_packer_fifo_ep.$verific$data_q_reg$prim_packer_fifo.sv:87$7469 ($adff) from module edn.
Setting constant 0-bit at position 18 on $flatten\u_edn_core.\gen_ep_blk[0].u_prim_packer_fifo_ep.$verific$data_q_reg$prim_packer_fifo.sv:87$7469 ($adff) from module edn.
Setting constant 0-bit at position 19 on $flatten\u_edn_core.\gen_ep_blk[0].u_prim_packer_fifo_ep.$verific$data_q_reg$prim_packer_fifo.sv:87$7469 ($adff) from module edn.
Setting constant 0-bit at position 20 on $flatten\u_edn_core.\gen_ep_blk[0].u_prim_packer_fifo_ep.$verific$data_q_reg$prim_packer_fifo.sv:87$7469 ($adff) from module edn.
Setting constant 0-bit at position 21 on $flatten\u_edn_core.\gen_ep_blk[0].u_prim_packer_fifo_ep.$verific$data_q_reg$prim_packer_fifo.sv:87$7469 ($adff) from module edn.
Setting constant 0-bit at position 22 on $flatten\u_edn_core.\gen_ep_blk[0].u_prim_packer_fifo_ep.$verific$data_q_reg$prim_packer_fifo.sv:87$7469 ($adff) from module edn.
Setting constant 0-bit at position 23 on $flatten\u_edn_core.\gen_ep_blk[0].u_prim_packer_fifo_ep.$verific$data_q_reg$prim_packer_fifo.sv:87$7469 ($adff) from module edn.
Setting constant 0-bit at position 24 on $flatten\u_edn_core.\gen_ep_blk[0].u_prim_packer_fifo_ep.$verific$data_q_reg$prim_packer_fifo.sv:87$7469 ($adff) from module edn.
Setting constant 0-bit at position 25 on $flatten\u_edn_core.\gen_ep_blk[0].u_prim_packer_fifo_ep.$verific$data_q_reg$prim_packer_fifo.sv:87$7469 ($adff) from module edn.
Setting constant 0-bit at position 26 on $flatten\u_edn_core.\gen_ep_blk[0].u_prim_packer_fifo_ep.$verific$data_q_reg$prim_packer_fifo.sv:87$7469 ($adff) from module edn.
Setting constant 0-bit at position 27 on $flatten\u_edn_core.\gen_ep_blk[0].u_prim_packer_fifo_ep.$verific$data_q_reg$prim_packer_fifo.sv:87$7469 ($adff) from module edn.
Setting constant 0-bit at position 28 on $flatten\u_edn_core.\gen_ep_blk[0].u_prim_packer_fifo_ep.$verific$data_q_reg$prim_packer_fifo.sv:87$7469 ($adff) from module edn.
Setting constant 0-bit at position 29 on $flatten\u_edn_core.\gen_ep_blk[0].u_prim_packer_fifo_ep.$verific$data_q_reg$prim_packer_fifo.sv:87$7469 ($adff) from module edn.
Setting constant 0-bit at position 30 on $flatten\u_edn_core.\gen_ep_blk[0].u_prim_packer_fifo_ep.$verific$data_q_reg$prim_packer_fifo.sv:87$7469 ($adff) from module edn.
Setting constant 0-bit at position 31 on $flatten\u_edn_core.\gen_ep_blk[0].u_prim_packer_fifo_ep.$verific$data_q_reg$prim_packer_fifo.sv:87$7469 ($adff) from module edn.
Setting constant 0-bit at position 32 on $flatten\u_edn_core.\gen_ep_blk[0].u_prim_packer_fifo_ep.$verific$data_q_reg$prim_packer_fifo.sv:87$7469 ($adff) from module edn.
Setting constant 0-bit at position 33 on $flatten\u_edn_core.\gen_ep_blk[0].u_prim_packer_fifo_ep.$verific$data_q_reg$prim_packer_fifo.sv:87$7469 ($adff) from module edn.
Setting constant 0-bit at position 34 on $flatten\u_edn_core.\gen_ep_blk[0].u_prim_packer_fifo_ep.$verific$data_q_reg$prim_packer_fifo.sv:87$7469 ($adff) from module edn.
Setting constant 0-bit at position 35 on $flatten\u_edn_core.\gen_ep_blk[0].u_prim_packer_fifo_ep.$verific$data_q_reg$prim_packer_fifo.sv:87$7469 ($adff) from module edn.
Setting constant 0-bit at position 36 on $flatten\u_edn_core.\gen_ep_blk[0].u_prim_packer_fifo_ep.$verific$data_q_reg$prim_packer_fifo.sv:87$7469 ($adff) from module edn.
Setting constant 0-bit at position 37 on $flatten\u_edn_core.\gen_ep_blk[0].u_prim_packer_fifo_ep.$verific$data_q_reg$prim_packer_fifo.sv:87$7469 ($adff) from module edn.
Setting constant 0-bit at position 38 on $flatten\u_edn_core.\gen_ep_blk[0].u_prim_packer_fifo_ep.$verific$data_q_reg$prim_packer_fifo.sv:87$7469 ($adff) from module edn.
Setting constant 0-bit at position 39 on $flatten\u_edn_core.\gen_ep_blk[0].u_prim_packer_fifo_ep.$verific$data_q_reg$prim_packer_fifo.sv:87$7469 ($adff) from module edn.
Setting constant 0-bit at position 40 on $flatten\u_edn_core.\gen_ep_blk[0].u_prim_packer_fifo_ep.$verific$data_q_reg$prim_packer_fifo.sv:87$7469 ($adff) from module edn.
Setting constant 0-bit at position 41 on $flatten\u_edn_core.\gen_ep_blk[0].u_prim_packer_fifo_ep.$verific$data_q_reg$prim_packer_fifo.sv:87$7469 ($adff) from module edn.
Setting constant 0-bit at position 42 on $flatten\u_edn_core.\gen_ep_blk[0].u_prim_packer_fifo_ep.$verific$data_q_reg$prim_packer_fifo.sv:87$7469 ($adff) from module edn.
Setting constant 0-bit at position 43 on $flatten\u_edn_core.\gen_ep_blk[0].u_prim_packer_fifo_ep.$verific$data_q_reg$prim_packer_fifo.sv:87$7469 ($adff) from module edn.
Setting constant 0-bit at position 44 on $flatten\u_edn_core.\gen_ep_blk[0].u_prim_packer_fifo_ep.$verific$data_q_reg$prim_packer_fifo.sv:87$7469 ($adff) from module edn.
Setting constant 0-bit at position 45 on $flatten\u_edn_core.\gen_ep_blk[0].u_prim_packer_fifo_ep.$verific$data_q_reg$prim_packer_fifo.sv:87$7469 ($adff) from module edn.
Setting constant 0-bit at position 46 on $flatten\u_edn_core.\gen_ep_blk[0].u_prim_packer_fifo_ep.$verific$data_q_reg$prim_packer_fifo.sv:87$7469 ($adff) from module edn.
Setting constant 0-bit at position 47 on $flatten\u_edn_core.\gen_ep_blk[0].u_prim_packer_fifo_ep.$verific$data_q_reg$prim_packer_fifo.sv:87$7469 ($adff) from module edn.
Setting constant 0-bit at position 48 on $flatten\u_edn_core.\gen_ep_blk[0].u_prim_packer_fifo_ep.$verific$data_q_reg$prim_packer_fifo.sv:87$7469 ($adff) from module edn.
Setting constant 0-bit at position 49 on $flatten\u_edn_core.\gen_ep_blk[0].u_prim_packer_fifo_ep.$verific$data_q_reg$prim_packer_fifo.sv:87$7469 ($adff) from module edn.
Setting constant 0-bit at position 50 on $flatten\u_edn_core.\gen_ep_blk[0].u_prim_packer_fifo_ep.$verific$data_q_reg$prim_packer_fifo.sv:87$7469 ($adff) from module edn.
Setting constant 0-bit at position 51 on $flatten\u_edn_core.\gen_ep_blk[0].u_prim_packer_fifo_ep.$verific$data_q_reg$prim_packer_fifo.sv:87$7469 ($adff) from module edn.
Setting constant 0-bit at position 52 on $flatten\u_edn_core.\gen_ep_blk[0].u_prim_packer_fifo_ep.$verific$data_q_reg$prim_packer_fifo.sv:87$7469 ($adff) from module edn.
Setting constant 0-bit at position 53 on $flatten\u_edn_core.\gen_ep_blk[0].u_prim_packer_fifo_ep.$verific$data_q_reg$prim_packer_fifo.sv:87$7469 ($adff) from module edn.
Setting constant 0-bit at position 54 on $flatten\u_edn_core.\gen_ep_blk[0].u_prim_packer_fifo_ep.$verific$data_q_reg$prim_packer_fifo.sv:87$7469 ($adff) from module edn.
Setting constant 0-bit at position 55 on $flatten\u_edn_core.\gen_ep_blk[0].u_prim_packer_fifo_ep.$verific$data_q_reg$prim_packer_fifo.sv:87$7469 ($adff) from module edn.
Setting constant 0-bit at position 56 on $flatten\u_edn_core.\gen_ep_blk[0].u_prim_packer_fifo_ep.$verific$data_q_reg$prim_packer_fifo.sv:87$7469 ($adff) from module edn.
Setting constant 0-bit at position 57 on $flatten\u_edn_core.\gen_ep_blk[0].u_prim_packer_fifo_ep.$verific$data_q_reg$prim_packer_fifo.sv:87$7469 ($adff) from module edn.
Setting constant 0-bit at position 58 on $flatten\u_edn_core.\gen_ep_blk[0].u_prim_packer_fifo_ep.$verific$data_q_reg$prim_packer_fifo.sv:87$7469 ($adff) from module edn.
Setting constant 0-bit at position 59 on $flatten\u_edn_core.\gen_ep_blk[0].u_prim_packer_fifo_ep.$verific$data_q_reg$prim_packer_fifo.sv:87$7469 ($adff) from module edn.
Setting constant 0-bit at position 60 on $flatten\u_edn_core.\gen_ep_blk[0].u_prim_packer_fifo_ep.$verific$data_q_reg$prim_packer_fifo.sv:87$7469 ($adff) from module edn.
Setting constant 0-bit at position 61 on $flatten\u_edn_core.\gen_ep_blk[0].u_prim_packer_fifo_ep.$verific$data_q_reg$prim_packer_fifo.sv:87$7469 ($adff) from module edn.
Setting constant 0-bit at position 62 on $flatten\u_edn_core.\gen_ep_blk[0].u_prim_packer_fifo_ep.$verific$data_q_reg$prim_packer_fifo.sv:87$7469 ($adff) from module edn.
Setting constant 0-bit at position 63 on $flatten\u_edn_core.\gen_ep_blk[0].u_prim_packer_fifo_ep.$verific$data_q_reg$prim_packer_fifo.sv:87$7469 ($adff) from module edn.
Setting constant 0-bit at position 64 on $flatten\u_edn_core.\gen_ep_blk[0].u_prim_packer_fifo_ep.$verific$data_q_reg$prim_packer_fifo.sv:87$7469 ($adff) from module edn.
Setting constant 0-bit at position 65 on $flatten\u_edn_core.\gen_ep_blk[0].u_prim_packer_fifo_ep.$verific$data_q_reg$prim_packer_fifo.sv:87$7469 ($adff) from module edn.
Setting constant 0-bit at position 66 on $flatten\u_edn_core.\gen_ep_blk[0].u_prim_packer_fifo_ep.$verific$data_q_reg$prim_packer_fifo.sv:87$7469 ($adff) from module edn.
Setting constant 0-bit at position 67 on $flatten\u_edn_core.\gen_ep_blk[0].u_prim_packer_fifo_ep.$verific$data_q_reg$prim_packer_fifo.sv:87$7469 ($adff) from module edn.
Setting constant 0-bit at position 68 on $flatten\u_edn_core.\gen_ep_blk[0].u_prim_packer_fifo_ep.$verific$data_q_reg$prim_packer_fifo.sv:87$7469 ($adff) from module edn.
Setting constant 0-bit at position 69 on $flatten\u_edn_core.\gen_ep_blk[0].u_prim_packer_fifo_ep.$verific$data_q_reg$prim_packer_fifo.sv:87$7469 ($adff) from module edn.
Setting constant 0-bit at position 70 on $flatten\u_edn_core.\gen_ep_blk[0].u_prim_packer_fifo_ep.$verific$data_q_reg$prim_packer_fifo.sv:87$7469 ($adff) from module edn.
Setting constant 0-bit at position 71 on $flatten\u_edn_core.\gen_ep_blk[0].u_prim_packer_fifo_ep.$verific$data_q_reg$prim_packer_fifo.sv:87$7469 ($adff) from module edn.
Setting constant 0-bit at position 72 on $flatten\u_edn_core.\gen_ep_blk[0].u_prim_packer_fifo_ep.$verific$data_q_reg$prim_packer_fifo.sv:87$7469 ($adff) from module edn.
Setting constant 0-bit at position 73 on $flatten\u_edn_core.\gen_ep_blk[0].u_prim_packer_fifo_ep.$verific$data_q_reg$prim_packer_fifo.sv:87$7469 ($adff) from module edn.
Setting constant 0-bit at position 74 on $flatten\u_edn_core.\gen_ep_blk[0].u_prim_packer_fifo_ep.$verific$data_q_reg$prim_packer_fifo.sv:87$7469 ($adff) from module edn.
Setting constant 0-bit at position 75 on $flatten\u_edn_core.\gen_ep_blk[0].u_prim_packer_fifo_ep.$verific$data_q_reg$prim_packer_fifo.sv:87$7469 ($adff) from module edn.
Setting constant 0-bit at position 76 on $flatten\u_edn_core.\gen_ep_blk[0].u_prim_packer_fifo_ep.$verific$data_q_reg$prim_packer_fifo.sv:87$7469 ($adff) from module edn.
Setting constant 0-bit at position 77 on $flatten\u_edn_core.\gen_ep_blk[0].u_prim_packer_fifo_ep.$verific$data_q_reg$prim_packer_fifo.sv:87$7469 ($adff) from module edn.
Setting constant 0-bit at position 78 on $flatten\u_edn_core.\gen_ep_blk[0].u_prim_packer_fifo_ep.$verific$data_q_reg$prim_packer_fifo.sv:87$7469 ($adff) from module edn.
Setting constant 0-bit at position 79 on $flatten\u_edn_core.\gen_ep_blk[0].u_prim_packer_fifo_ep.$verific$data_q_reg$prim_packer_fifo.sv:87$7469 ($adff) from module edn.
Setting constant 0-bit at position 80 on $flatten\u_edn_core.\gen_ep_blk[0].u_prim_packer_fifo_ep.$verific$data_q_reg$prim_packer_fifo.sv:87$7469 ($adff) from module edn.
Setting constant 0-bit at position 81 on $flatten\u_edn_core.\gen_ep_blk[0].u_prim_packer_fifo_ep.$verific$data_q_reg$prim_packer_fifo.sv:87$7469 ($adff) from module edn.
Setting constant 0-bit at position 82 on $flatten\u_edn_core.\gen_ep_blk[0].u_prim_packer_fifo_ep.$verific$data_q_reg$prim_packer_fifo.sv:87$7469 ($adff) from module edn.
Setting constant 0-bit at position 83 on $flatten\u_edn_core.\gen_ep_blk[0].u_prim_packer_fifo_ep.$verific$data_q_reg$prim_packer_fifo.sv:87$7469 ($adff) from module edn.
Setting constant 0-bit at position 84 on $flatten\u_edn_core.\gen_ep_blk[0].u_prim_packer_fifo_ep.$verific$data_q_reg$prim_packer_fifo.sv:87$7469 ($adff) from module edn.
Setting constant 0-bit at position 85 on $flatten\u_edn_core.\gen_ep_blk[0].u_prim_packer_fifo_ep.$verific$data_q_reg$prim_packer_fifo.sv:87$7469 ($adff) from module edn.
Setting constant 0-bit at position 86 on $flatten\u_edn_core.\gen_ep_blk[0].u_prim_packer_fifo_ep.$verific$data_q_reg$prim_packer_fifo.sv:87$7469 ($adff) from module edn.
Setting constant 0-bit at position 87 on $flatten\u_edn_core.\gen_ep_blk[0].u_prim_packer_fifo_ep.$verific$data_q_reg$prim_packer_fifo.sv:87$7469 ($adff) from module edn.
Setting constant 0-bit at position 88 on $flatten\u_edn_core.\gen_ep_blk[0].u_prim_packer_fifo_ep.$verific$data_q_reg$prim_packer_fifo.sv:87$7469 ($adff) from module edn.
Setting constant 0-bit at position 89 on $flatten\u_edn_core.\gen_ep_blk[0].u_prim_packer_fifo_ep.$verific$data_q_reg$prim_packer_fifo.sv:87$7469 ($adff) from module edn.
Setting constant 0-bit at position 90 on $flatten\u_edn_core.\gen_ep_blk[0].u_prim_packer_fifo_ep.$verific$data_q_reg$prim_packer_fifo.sv:87$7469 ($adff) from module edn.
Setting constant 0-bit at position 91 on $flatten\u_edn_core.\gen_ep_blk[0].u_prim_packer_fifo_ep.$verific$data_q_reg$prim_packer_fifo.sv:87$7469 ($adff) from module edn.
Setting constant 0-bit at position 92 on $flatten\u_edn_core.\gen_ep_blk[0].u_prim_packer_fifo_ep.$verific$data_q_reg$prim_packer_fifo.sv:87$7469 ($adff) from module edn.
Setting constant 0-bit at position 93 on $flatten\u_edn_core.\gen_ep_blk[0].u_prim_packer_fifo_ep.$verific$data_q_reg$prim_packer_fifo.sv:87$7469 ($adff) from module edn.
Setting constant 0-bit at position 94 on $flatten\u_edn_core.\gen_ep_blk[0].u_prim_packer_fifo_ep.$verific$data_q_reg$prim_packer_fifo.sv:87$7469 ($adff) from module edn.
Setting constant 0-bit at position 95 on $flatten\u_edn_core.\gen_ep_blk[0].u_prim_packer_fifo_ep.$verific$data_q_reg$prim_packer_fifo.sv:87$7469 ($adff) from module edn.
Setting constant 0-bit at position 96 on $flatten\u_edn_core.\gen_ep_blk[0].u_prim_packer_fifo_ep.$verific$data_q_reg$prim_packer_fifo.sv:87$7469 ($adff) from module edn.
Setting constant 0-bit at position 97 on $flatten\u_edn_core.\gen_ep_blk[0].u_prim_packer_fifo_ep.$verific$data_q_reg$prim_packer_fifo.sv:87$7469 ($adff) from module edn.
Setting constant 0-bit at position 98 on $flatten\u_edn_core.\gen_ep_blk[0].u_prim_packer_fifo_ep.$verific$data_q_reg$prim_packer_fifo.sv:87$7469 ($adff) from module edn.
Setting constant 0-bit at position 99 on $flatten\u_edn_core.\gen_ep_blk[0].u_prim_packer_fifo_ep.$verific$data_q_reg$prim_packer_fifo.sv:87$7469 ($adff) from module edn.
Setting constant 0-bit at position 100 on $flatten\u_edn_core.\gen_ep_blk[0].u_prim_packer_fifo_ep.$verific$data_q_reg$prim_packer_fifo.sv:87$7469 ($adff) from module edn.
Setting constant 0-bit at position 101 on $flatten\u_edn_core.\gen_ep_blk[0].u_prim_packer_fifo_ep.$verific$data_q_reg$prim_packer_fifo.sv:87$7469 ($adff) from module edn.
Setting constant 0-bit at position 102 on $flatten\u_edn_core.\gen_ep_blk[0].u_prim_packer_fifo_ep.$verific$data_q_reg$prim_packer_fifo.sv:87$7469 ($adff) from module edn.
Setting constant 0-bit at position 103 on $flatten\u_edn_core.\gen_ep_blk[0].u_prim_packer_fifo_ep.$verific$data_q_reg$prim_packer_fifo.sv:87$7469 ($adff) from module edn.
Setting constant 0-bit at position 104 on $flatten\u_edn_core.\gen_ep_blk[0].u_prim_packer_fifo_ep.$verific$data_q_reg$prim_packer_fifo.sv:87$7469 ($adff) from module edn.
Setting constant 0-bit at position 105 on $flatten\u_edn_core.\gen_ep_blk[0].u_prim_packer_fifo_ep.$verific$data_q_reg$prim_packer_fifo.sv:87$7469 ($adff) from module edn.
Setting constant 0-bit at position 106 on $flatten\u_edn_core.\gen_ep_blk[0].u_prim_packer_fifo_ep.$verific$data_q_reg$prim_packer_fifo.sv:87$7469 ($adff) from module edn.
Setting constant 0-bit at position 107 on $flatten\u_edn_core.\gen_ep_blk[0].u_prim_packer_fifo_ep.$verific$data_q_reg$prim_packer_fifo.sv:87$7469 ($adff) from module edn.
Setting constant 0-bit at position 108 on $flatten\u_edn_core.\gen_ep_blk[0].u_prim_packer_fifo_ep.$verific$data_q_reg$prim_packer_fifo.sv:87$7469 ($adff) from module edn.
Setting constant 0-bit at position 109 on $flatten\u_edn_core.\gen_ep_blk[0].u_prim_packer_fifo_ep.$verific$data_q_reg$prim_packer_fifo.sv:87$7469 ($adff) from module edn.
Setting constant 0-bit at position 110 on $flatten\u_edn_core.\gen_ep_blk[0].u_prim_packer_fifo_ep.$verific$data_q_reg$prim_packer_fifo.sv:87$7469 ($adff) from module edn.
Setting constant 0-bit at position 111 on $flatten\u_edn_core.\gen_ep_blk[0].u_prim_packer_fifo_ep.$verific$data_q_reg$prim_packer_fifo.sv:87$7469 ($adff) from module edn.
Setting constant 0-bit at position 112 on $flatten\u_edn_core.\gen_ep_blk[0].u_prim_packer_fifo_ep.$verific$data_q_reg$prim_packer_fifo.sv:87$7469 ($adff) from module edn.
Setting constant 0-bit at position 113 on $flatten\u_edn_core.\gen_ep_blk[0].u_prim_packer_fifo_ep.$verific$data_q_reg$prim_packer_fifo.sv:87$7469 ($adff) from module edn.
Setting constant 0-bit at position 114 on $flatten\u_edn_core.\gen_ep_blk[0].u_prim_packer_fifo_ep.$verific$data_q_reg$prim_packer_fifo.sv:87$7469 ($adff) from module edn.
Setting constant 0-bit at position 115 on $flatten\u_edn_core.\gen_ep_blk[0].u_prim_packer_fifo_ep.$verific$data_q_reg$prim_packer_fifo.sv:87$7469 ($adff) from module edn.
Setting constant 0-bit at position 116 on $flatten\u_edn_core.\gen_ep_blk[0].u_prim_packer_fifo_ep.$verific$data_q_reg$prim_packer_fifo.sv:87$7469 ($adff) from module edn.
Setting constant 0-bit at position 117 on $flatten\u_edn_core.\gen_ep_blk[0].u_prim_packer_fifo_ep.$verific$data_q_reg$prim_packer_fifo.sv:87$7469 ($adff) from module edn.
Setting constant 0-bit at position 118 on $flatten\u_edn_core.\gen_ep_blk[0].u_prim_packer_fifo_ep.$verific$data_q_reg$prim_packer_fifo.sv:87$7469 ($adff) from module edn.
Setting constant 0-bit at position 119 on $flatten\u_edn_core.\gen_ep_blk[0].u_prim_packer_fifo_ep.$verific$data_q_reg$prim_packer_fifo.sv:87$7469 ($adff) from module edn.
Setting constant 0-bit at position 120 on $flatten\u_edn_core.\gen_ep_blk[0].u_prim_packer_fifo_ep.$verific$data_q_reg$prim_packer_fifo.sv:87$7469 ($adff) from module edn.
Setting constant 0-bit at position 121 on $flatten\u_edn_core.\gen_ep_blk[0].u_prim_packer_fifo_ep.$verific$data_q_reg$prim_packer_fifo.sv:87$7469 ($adff) from module edn.
Setting constant 0-bit at position 122 on $flatten\u_edn_core.\gen_ep_blk[0].u_prim_packer_fifo_ep.$verific$data_q_reg$prim_packer_fifo.sv:87$7469 ($adff) from module edn.
Setting constant 0-bit at position 123 on $flatten\u_edn_core.\gen_ep_blk[0].u_prim_packer_fifo_ep.$verific$data_q_reg$prim_packer_fifo.sv:87$7469 ($adff) from module edn.
Setting constant 0-bit at position 124 on $flatten\u_edn_core.\gen_ep_blk[0].u_prim_packer_fifo_ep.$verific$data_q_reg$prim_packer_fifo.sv:87$7469 ($adff) from module edn.
Setting constant 0-bit at position 125 on $flatten\u_edn_core.\gen_ep_blk[0].u_prim_packer_fifo_ep.$verific$data_q_reg$prim_packer_fifo.sv:87$7469 ($adff) from module edn.
Setting constant 0-bit at position 126 on $flatten\u_edn_core.\gen_ep_blk[0].u_prim_packer_fifo_ep.$verific$data_q_reg$prim_packer_fifo.sv:87$7469 ($adff) from module edn.
Setting constant 0-bit at position 127 on $flatten\u_edn_core.\gen_ep_blk[0].u_prim_packer_fifo_ep.$verific$data_q_reg$prim_packer_fifo.sv:87$7469 ($adff) from module edn.
Setting constant 0-bit at position 0 on $flatten\u_edn_core.\gen_ep_blk[0].u_prim_packer_fifo_ep.$verific$depth_q_reg$prim_packer_fifo.sv:87$7468 ($adff) from module edn.
Setting constant 0-bit at position 1 on $flatten\u_edn_core.\gen_ep_blk[0].u_prim_packer_fifo_ep.$verific$depth_q_reg$prim_packer_fifo.sv:87$7468 ($adff) from module edn.
Setting constant 0-bit at position 2 on $flatten\u_edn_core.\gen_ep_blk[0].u_prim_packer_fifo_ep.$verific$depth_q_reg$prim_packer_fifo.sv:87$7468 ($adff) from module edn.
Setting constant 0-bit at position 0 on $flatten\u_edn_core.\u_prim_packer_fifo_cs.$verific$depth_q_reg[0]$prim_packer_fifo.sv:87$7386 ($adff) from module edn.
Setting constant 0-bit at position 0 on $flatten\u_reg.\u_err_code_edn_main_sm_err.$verific$q_reg[0]$prim_subreg.sv:72$7604 ($dlatch) from module edn.
Setting constant 0-bit at position 0 on $flatten\u_reg.\u_err_code_fifo_read_err.$verific$q_reg[0]$prim_subreg.sv:72$7604 ($dlatch) from module edn.
Setting constant 0-bit at position 0 on $flatten\u_reg.\u_err_code_fifo_state_err.$verific$q_reg[0]$prim_subreg.sv:72$7604 ($dlatch) from module edn.
Setting constant 0-bit at position 0 on $flatten\u_reg.\u_err_code_fifo_write_err.$verific$q_reg[0]$prim_subreg.sv:72$7604 ($dlatch) from module edn.
Setting constant 0-bit at position 0 on $flatten\u_reg.\u_err_code_sfifo_gencmd_err.$verific$q_reg[0]$prim_subreg.sv:72$7604 ($dlatch) from module edn.
Setting constant 0-bit at position 0 on $flatten\u_reg.\u_err_code_sfifo_rescmd_err.$verific$q_reg[0]$prim_subreg.sv:72$7604 ($dlatch) from module edn.
Setting constant 0-bit at position 0 on $flatten\u_reg.\u_recov_alert_sts_auto_req_mode_field_alert.$verific$q_reg[0]$prim_subreg.sv:72$7659 ($dlatch) from module edn.
Setting constant 0-bit at position 0 on $flatten\u_reg.\u_recov_alert_sts_boot_req_mode_field_alert.$verific$q_reg[0]$prim_subreg.sv:72$7659 ($dlatch) from module edn.
Setting constant 0-bit at position 0 on $flatten\u_reg.\u_recov_alert_sts_cmd_fifo_rst_field_alert.$verific$q_reg[0]$prim_subreg.sv:72$7659 ($dlatch) from module edn.
Setting constant 0-bit at position 0 on $flatten\u_reg.\u_recov_alert_sts_edn_enable_field_alert.$verific$q_reg[0]$prim_subreg.sv:72$7659 ($dlatch) from module edn.

yosys> opt_clean

3.44. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \edn..
Removed 32 unused cells and 138 unused wires.
<suppressed ~84 debug messages>

yosys> opt_expr

3.45. Executing OPT_EXPR pass (perform const folding).
Optimizing module edn.
<suppressed ~1 debug messages>
MAX OPT ITERATION = 4

yosys> fsm -encoding binary

3.46. Executing FSM pass (extract and optimize FSM).

yosys> fsm_detect

3.46.1. Executing FSM_DETECT pass (finding FSMs in design).
Not marking edn.u_edn_core.gen_ep_blk[0].u_edn_ack_sm_ep.u_state_regs.u_state_flop.gen_generic.u_impl_generic.q_o as FSM state register:
    Circuit seems to be self-resetting.
Not marking edn.u_edn_core.gen_ep_blk[1].u_edn_ack_sm_ep.u_state_regs.u_state_flop.gen_generic.u_impl_generic.q_o as FSM state register:
    Circuit seems to be self-resetting.
Not marking edn.u_edn_core.gen_ep_blk[2].u_edn_ack_sm_ep.u_state_regs.u_state_flop.gen_generic.u_impl_generic.q_o as FSM state register:
    Circuit seems to be self-resetting.
Not marking edn.u_edn_core.gen_ep_blk[3].u_edn_ack_sm_ep.u_state_regs.u_state_flop.gen_generic.u_impl_generic.q_o as FSM state register:
    Circuit seems to be self-resetting.
Not marking edn.u_edn_core.gen_ep_blk[4].u_edn_ack_sm_ep.u_state_regs.u_state_flop.gen_generic.u_impl_generic.q_o as FSM state register:
    Circuit seems to be self-resetting.
Not marking edn.u_edn_core.gen_ep_blk[5].u_edn_ack_sm_ep.u_state_regs.u_state_flop.gen_generic.u_impl_generic.q_o as FSM state register:
    Circuit seems to be self-resetting.
Not marking edn.u_edn_core.gen_ep_blk[6].u_edn_ack_sm_ep.u_state_regs.u_state_flop.gen_generic.u_impl_generic.q_o as FSM state register:
    Circuit seems to be self-resetting.
Not marking edn.u_edn_core.gen_ep_blk[7].u_edn_ack_sm_ep.u_state_regs.u_state_flop.gen_generic.u_impl_generic.q_o as FSM state register:
    Circuit seems to be self-resetting.
Found FSM state register edn.u_edn_core.u_edn_main_sm.u_state_regs.u_state_flop.gen_generic.u_impl_generic.q_o.
Not marking edn.u_edn_core.u_prim_count_max_reqs_cntr.gen_cross_cnt_hardening.down_cnt as FSM state register:
    Users of register don't seem to benefit from recoding.
Not marking edn.u_edn_core.u_prim_count_max_reqs_cntr.max_val as FSM state register:
    Users of register don't seem to benefit from recoding.

yosys> fsm_extract

3.46.2. Executing FSM_EXTRACT pass (extracting FSM from design).
Extracting FSM `\u_edn_core.u_edn_main_sm.u_state_regs.u_state_flop.gen_generic.u_impl_generic.q_o' from module `\edn'.
  found $adff cell for state register: $flatten\u_edn_core.\u_edn_main_sm.\u_state_regs.\u_state_flop.\gen_generic.u_impl_generic.$verific$q_o_reg$prim_generic_flop.sv:23$7588
  root of input selection tree: \u_edn_core.u_edn_main_sm.state_d
  found reset state: 6'111011 (from async reset)
  found ctrl input: \u_edn_core.edn_cntr_err_sum
  found ctrl input: $flatten\u_edn_core.\u_edn_main_sm.$verific$n84$4294
  found ctrl input: $auto$opt_reduce.cc:134:opt_pmux$9045
  found ctrl input: $flatten\u_edn_core.\u_edn_main_sm.$verific$n81$4291
  found ctrl input: $flatten\u_edn_core.\u_edn_main_sm.$verific$n79$4289
  found ctrl input: $flatten\u_edn_core.\u_edn_main_sm.$verific$n78$4288
  found ctrl input: $flatten\u_edn_core.\u_edn_main_sm.$verific$n77$4287
  found state code: 6'000000
  found state code: 6'100101
  found state code: 6'000010
  found state code: 6'001001
  found ctrl input: \csrng_cmd_i.csrng_rsp_ack
  found state code: 6'011100
  found ctrl output: $flatten\u_edn_core.\u_edn_main_sm.$verific$n83$4293
  found ctrl output: $flatten\u_edn_core.\u_edn_main_sm.$verific$n82$4292
  found ctrl output: $flatten\u_edn_core.\u_edn_main_sm.$verific$n81$4291
  found ctrl output: $flatten\u_edn_core.\u_edn_main_sm.$verific$n80$4290
  found ctrl output: $flatten\u_edn_core.\u_edn_main_sm.$verific$n79$4289
  found ctrl output: $flatten\u_edn_core.\u_edn_main_sm.$verific$n78$4288
  found ctrl output: $flatten\u_edn_core.\u_edn_main_sm.$verific$n77$4287
  found ctrl output: $flatten\u_edn_core.$verific$n1444$1326
  ctrl inputs: { $auto$opt_reduce.cc:134:opt_pmux$9045 \u_edn_core.edn_cntr_err_sum $flatten\u_edn_core.\u_edn_main_sm.$verific$n84$4294 \csrng_cmd_i.csrng_rsp_ack }
  ctrl outputs: { $flatten\u_edn_core.$verific$n1444$1326 $flatten\u_edn_core.\u_edn_main_sm.$verific$n77$4287 $flatten\u_edn_core.\u_edn_main_sm.$verific$n78$4288 $flatten\u_edn_core.\u_edn_main_sm.$verific$n79$4289 $flatten\u_edn_core.\u_edn_main_sm.$verific$n80$4290 $flatten\u_edn_core.\u_edn_main_sm.$verific$n81$4291 $flatten\u_edn_core.\u_edn_main_sm.$verific$n82$4292 $flatten\u_edn_core.\u_edn_main_sm.$verific$n83$4293 \u_edn_core.u_edn_main_sm.state_d }
  transition:   6'000000 4'00-- ->   6'100101 14'00000000100101
  transition:   6'000000 4'-1-- ->   6'100101 14'00000000100101
  transition:   6'011100 4'-0-- ->   6'111011 14'00100000111011
  transition:   6'011100 4'-1-- ->   6'100101 14'00100000100101
  transition:   6'000010 4'-0-- ->   6'000010 14'00000010000010
  transition:   6'000010 4'-1-- ->   6'100101 14'00000010100101
  transition:   6'001001 4'-0-- ->   6'001001 14'00001000001001
  transition:   6'001001 4'-1-- ->   6'100101 14'00001000100101
  transition:   6'100101 4'-0-- ->   6'100101 14'00000001100101
  transition:   6'100101 4'-1-- ->   6'100101 14'00000001100101
  transition:   6'111011 4'-0-- ->   6'111011 14'10000000111011
  transition:   6'111011 4'-1-- ->   6'100101 14'10000000100101

yosys> fsm_opt

3.46.3. Executing FSM_OPT pass (simple optimizations of FSMs).
Optimizing FSM `$fsm$\u_edn_core.u_edn_main_sm.u_state_regs.u_state_flop.gen_generic.u_impl_generic.q_o$9046' from module `\edn'.
  Removing unreachable state 6'000000.
  Removing unreachable state 6'011100.
  Merging pattern 4'-0-- and 4'-1-- from group (2 2 14'00000001100101).
  Merging pattern 4'-1-- and 4'-0-- from group (2 2 14'00000001100101).
  Removing unused input signal $auto$opt_reduce.cc:134:opt_pmux$9045.
  Removing unused input signal $flatten\u_edn_core.\u_edn_main_sm.$verific$n84$4294.
  Removing unused input signal \csrng_cmd_i.csrng_rsp_ack.

yosys> opt_clean

3.46.4. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \edn..
Removed 15 unused cells and 19 unused wires.
<suppressed ~20 debug messages>

yosys> fsm_opt

3.46.5. Executing FSM_OPT pass (simple optimizations of FSMs).
Optimizing FSM `$fsm$\u_edn_core.u_edn_main_sm.u_state_regs.u_state_flop.gen_generic.u_impl_generic.q_o$9046' from module `\edn'.
  Removing unused output signal \u_edn_core.u_edn_main_sm.state_d [0].
  Removing unused output signal \u_edn_core.u_edn_main_sm.state_d [1].
  Removing unused output signal \u_edn_core.u_edn_main_sm.state_d [2].
  Removing unused output signal \u_edn_core.u_edn_main_sm.state_d [3].
  Removing unused output signal \u_edn_core.u_edn_main_sm.state_d [4].
  Removing unused output signal \u_edn_core.u_edn_main_sm.state_d [5].
  Removing unused output signal $flatten\u_edn_core.\u_edn_main_sm.$verific$n83$4293.
  Removing unused output signal $flatten\u_edn_core.\u_edn_main_sm.$verific$n82$4292.
  Removing unused output signal $flatten\u_edn_core.\u_edn_main_sm.$verific$n81$4291.
  Removing unused output signal $flatten\u_edn_core.\u_edn_main_sm.$verific$n80$4290.
  Removing unused output signal $flatten\u_edn_core.\u_edn_main_sm.$verific$n79$4289.
  Removing unused output signal $flatten\u_edn_core.\u_edn_main_sm.$verific$n77$4287.

yosys> fsm_recode -encoding binary

3.46.6. Executing FSM_RECODE pass (re-assigning FSM state encoding).
Recoding FSM `$fsm$\u_edn_core.u_edn_main_sm.u_state_regs.u_state_flop.gen_generic.u_impl_generic.q_o$9046' from module `\edn' using `auto' encoding:
  mapping auto encoding to `binary` for this FSM.
  000010 -> 01
  001001 -> 10
  100101 -> 11
  111011 -> 00

yosys> fsm_info

3.46.7. Executing FSM_INFO pass (dumping all available information on FSM cells).

FSM `$fsm$\u_edn_core.u_edn_main_sm.u_state_regs.u_state_flop.gen_generic.u_impl_generic.q_o$9046' from module `edn':
-------------------------------------

  Information on FSM $fsm$\u_edn_core.u_edn_main_sm.u_state_regs.u_state_flop.gen_generic.u_impl_generic.q_o$9046 (\u_edn_core.u_edn_main_sm.u_state_regs.u_state_flop.gen_generic.u_impl_generic.q_o):

  Number of input signals:    1
  Number of output signals:   2
  Number of state bits:       2

  Input signals:
    0: \u_edn_core.edn_cntr_err_sum

  Output signals:
    0: $flatten\u_edn_core.\u_edn_main_sm.$verific$n78$4288
    1: $flatten\u_edn_core.$verific$n1444$1326

  State encoding:
    0:       2'01
    1:       2'10
    2:       2'11
    3:       2'00  <RESET STATE>

  Transition Table (state_in, ctrl_in, state_out, ctrl_out):
      0:     0 1'0   ->     0 2'00
      1:     0 1'1   ->     2 2'00
      2:     1 1'0   ->     1 2'00
      3:     1 1'1   ->     2 2'00
      4:     2 1'-   ->     2 2'00
      5:     3 1'1   ->     2 2'10
      6:     3 1'0   ->     3 2'10

-------------------------------------

yosys> fsm_map

3.46.8. Executing FSM_MAP pass (mapping FSMs to basic logic).
Mapping FSM `$fsm$\u_edn_core.u_edn_main_sm.u_state_regs.u_state_flop.gen_generic.u_impl_generic.q_o$9046' from module `\edn'.

yosys> opt_expr

3.47. Executing OPT_EXPR pass (perform const folding).
Optimizing module edn.
<suppressed ~7 debug messages>

yosys> opt_merge -nomux

3.48. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\edn'.
<suppressed ~6 debug messages>
Removed a total of 2 cells.

yosys> opt_muxtree

3.49. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \edn..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Removed 0 multiplexer ports.
<suppressed ~75 debug messages>

yosys> opt_reduce

3.50. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \edn.
Performed a total of 0 changes.

yosys> opt_merge

3.51. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\edn'.
Removed a total of 0 cells.

yosys> opt_share

3.52. Executing OPT_SHARE pass.

yosys> opt_dff -nosdff -sat

3.53. Executing OPT_DFF pass (perform DFF optimizations).
Adding EN signal on $flatten\u_reg.\u_sw_cmd_sts_cmd_sts.$verific$q_reg[0]$prim_subreg.sv:72$7604 ($adff) from module edn (D = \csrng_cmd_i.csrng_rsp_sts, Q = \u_reg.u_sw_cmd_sts_cmd_sts.q).
Adding EN signal on $flatten\u_reg.\u_reg_if.$verific$rspop_reg$tlul_adapter_reg.sv:80$7886 ($adff) from module edn (D = { 2'00 \u_reg.u_reg_if.rd_req }, Q = \u_reg.u_reg_if.rspop).
Adding EN signal on $flatten\u_reg.\u_reg_if.$verific$reqsz_reg$tlul_adapter_reg.sv:80$7885 ($adff) from module edn (D = \tl_i.a_size, Q = \u_reg.u_reg_if.reqsz).
Adding EN signal on $flatten\u_reg.\u_reg_if.$verific$reqid_reg$tlul_adapter_reg.sv:80$7884 ($adff) from module edn (D = \tl_i.a_source, Q = \u_reg.u_reg_if.reqid).
Adding EN signal on $flatten\u_reg.\u_reg_if.$verific$rdata_reg$tlul_adapter_reg.sv:90$7894 ($adff) from module edn (D = $flatten\u_reg.\u_reg_if.$verific$n182$7844, Q = \u_reg.u_reg_if.rdata).
Adding EN signal on $flatten\u_reg.\u_reg_if.$verific$outstanding_reg$tlul_adapter_reg.sv:67$7874 ($adff) from module edn (D = $flatten\u_reg.\u_reg_if.$verific$n75$7824, Q = \u_reg.u_reg_if.outstanding).
Adding EN signal on $flatten\u_reg.\u_reg_if.$verific$error_reg$tlul_adapter_reg.sv:90$7895 ($adff) from module edn (D = $flatten\u_reg.\u_reg_if.$verific$n248$7826, Q = \u_reg.u_reg_if.error).
Handling D = Q on $flatten\u_reg.\u_recov_alert_sts_edn_bus_cmp_alert.$verific$q_reg[0]$prim_subreg.sv:72$7659 ($adff) from module edn (removing D path).
Adding EN signal on $flatten\u_reg.\u_intr_state_edn_fatal_err.$verific$q_reg[0]$prim_subreg.sv:72$7697 ($adff) from module edn (D = \u_edn_core.hw2reg.intr_state.edn_fatal_err.d, Q = \u_reg.u_intr_state_edn_fatal_err.q).
Adding EN signal on $flatten\u_reg.\u_intr_state_edn_cmd_req_done.$verific$q_reg[0]$prim_subreg.sv:72$7697 ($adff) from module edn (D = \u_edn_core.hw2reg.intr_state.edn_cmd_req_done.d, Q = \u_reg.u_intr_state_edn_cmd_req_done.q).
Adding EN signal on $flatten\u_reg.\u_err_code_edn_cntr_err.$verific$q_reg[0]$prim_subreg.sv:72$7604 ($adff) from module edn (D = 1'1, Q = \u_reg.u_err_code_edn_cntr_err.q).
Adding EN signal on $flatten\u_reg.$verific$intg_err_q_reg$edn_reg_top.sv:61$4651 ($adff) from module edn (D = 1'1, Q = \u_reg.intg_err_q).
Adding EN signal on $flatten\u_edn_core.\u_prim_count_max_reqs_cntr.$verific$max_val_reg$prim_count.sv:82$6581 ($adff) from module edn (D = 0, Q = \u_edn_core.u_prim_count_max_reqs_cntr.max_val).
Adding EN signal on $flatten\u_edn_core.\u_prim_count_max_reqs_cntr.$verific$gen_cross_cnt_hardening.down_cnt_reg$prim_count.sv:127$6664 ($adff) from module edn (D = 0, Q = \u_edn_core.u_prim_count_max_reqs_cntr.gen_cross_cnt_hardening.down_cnt).
Adding EN signal on $flatten\u_edn_core.\gen_ep_blk[7].u_edn_ack_sm_ep.\u_state_regs.\u_state_flop.\gen_generic.u_impl_generic.$verific$q_o_reg$prim_generic_flop.sv:23$7549 ($adff) from module edn (D = \u_edn_core.gen_ep_blk[7].u_edn_ack_sm_ep.state_d, Q = \u_edn_core.gen_ep_blk[7].u_edn_ack_sm_ep.u_state_regs.u_state_flop.gen_generic.u_impl_generic.q_o).
Adding EN signal on $flatten\u_edn_core.\gen_ep_blk[6].u_edn_ack_sm_ep.\u_state_regs.\u_state_flop.\gen_generic.u_impl_generic.$verific$q_o_reg$prim_generic_flop.sv:23$7549 ($adff) from module edn (D = \u_edn_core.gen_ep_blk[6].u_edn_ack_sm_ep.state_d, Q = \u_edn_core.gen_ep_blk[6].u_edn_ack_sm_ep.u_state_regs.u_state_flop.gen_generic.u_impl_generic.q_o).
Adding EN signal on $flatten\u_edn_core.\gen_ep_blk[5].u_edn_ack_sm_ep.\u_state_regs.\u_state_flop.\gen_generic.u_impl_generic.$verific$q_o_reg$prim_generic_flop.sv:23$7549 ($adff) from module edn (D = \u_edn_core.gen_ep_blk[5].u_edn_ack_sm_ep.state_d, Q = \u_edn_core.gen_ep_blk[5].u_edn_ack_sm_ep.u_state_regs.u_state_flop.gen_generic.u_impl_generic.q_o).
Adding EN signal on $flatten\u_edn_core.\gen_ep_blk[4].u_edn_ack_sm_ep.\u_state_regs.\u_state_flop.\gen_generic.u_impl_generic.$verific$q_o_reg$prim_generic_flop.sv:23$7549 ($adff) from module edn (D = \u_edn_core.gen_ep_blk[4].u_edn_ack_sm_ep.state_d, Q = \u_edn_core.gen_ep_blk[4].u_edn_ack_sm_ep.u_state_regs.u_state_flop.gen_generic.u_impl_generic.q_o).
Adding EN signal on $flatten\u_edn_core.\gen_ep_blk[3].u_edn_ack_sm_ep.\u_state_regs.\u_state_flop.\gen_generic.u_impl_generic.$verific$q_o_reg$prim_generic_flop.sv:23$7549 ($adff) from module edn (D = \u_edn_core.gen_ep_blk[3].u_edn_ack_sm_ep.state_d, Q = \u_edn_core.gen_ep_blk[3].u_edn_ack_sm_ep.u_state_regs.u_state_flop.gen_generic.u_impl_generic.q_o).
Adding EN signal on $flatten\u_edn_core.\gen_ep_blk[2].u_edn_ack_sm_ep.\u_state_regs.\u_state_flop.\gen_generic.u_impl_generic.$verific$q_o_reg$prim_generic_flop.sv:23$7549 ($adff) from module edn (D = \u_edn_core.gen_ep_blk[2].u_edn_ack_sm_ep.state_d, Q = \u_edn_core.gen_ep_blk[2].u_edn_ack_sm_ep.u_state_regs.u_state_flop.gen_generic.u_impl_generic.q_o).
Adding EN signal on $flatten\u_edn_core.\gen_ep_blk[1].u_edn_ack_sm_ep.\u_state_regs.\u_state_flop.\gen_generic.u_impl_generic.$verific$q_o_reg$prim_generic_flop.sv:23$7549 ($adff) from module edn (D = \u_edn_core.gen_ep_blk[1].u_edn_ack_sm_ep.state_d, Q = \u_edn_core.gen_ep_blk[1].u_edn_ack_sm_ep.u_state_regs.u_state_flop.gen_generic.u_impl_generic.q_o).
Adding EN signal on $flatten\u_edn_core.\gen_ep_blk[0].u_edn_ack_sm_ep.\u_state_regs.\u_state_flop.\gen_generic.u_impl_generic.$verific$q_o_reg$prim_generic_flop.sv:23$7549 ($adff) from module edn (D = \u_edn_core.gen_ep_blk[0].u_edn_ack_sm_ep.state_d, Q = \u_edn_core.gen_ep_blk[0].u_edn_ack_sm_ep.u_state_regs.u_state_flop.gen_generic.u_impl_generic.q_o).
Adding EN signal on $flatten\gen_alert_tx[1].u_prim_alert_sender.\i_decode_ping.$verific$gen_async.state_q_reg$prim_diff_decode.sv:172$6763 ($adff) from module edn (D = \gen_alert_tx[1].u_prim_alert_sender.i_decode_ping.gen_async.state_d, Q = \gen_alert_tx[1].u_prim_alert_sender.i_decode_ping.gen_async.state_q).
Adding EN signal on $flatten\gen_alert_tx[1].u_prim_alert_sender.\i_decode_ack.$verific$gen_async.state_q_reg$prim_diff_decode.sv:172$6763 ($adff) from module edn (D = \gen_alert_tx[1].u_prim_alert_sender.i_decode_ack.gen_async.state_d, Q = \gen_alert_tx[1].u_prim_alert_sender.i_decode_ack.gen_async.state_q).
Adding EN signal on $flatten\gen_alert_tx[1].u_prim_alert_sender.$verific$state_q_reg$prim_alert_sender.sv:235$6434 ($adff) from module edn (D = \gen_alert_tx[1].u_prim_alert_sender.state_d, Q = \gen_alert_tx[1].u_prim_alert_sender.state_q).
Adding EN signal on $flatten\gen_alert_tx[0].u_prim_alert_sender.\i_decode_ping.$verific$gen_async.state_q_reg$prim_diff_decode.sv:172$6763 ($adff) from module edn (D = \gen_alert_tx[0].u_prim_alert_sender.i_decode_ping.gen_async.state_d, Q = \gen_alert_tx[0].u_prim_alert_sender.i_decode_ping.gen_async.state_q).
Adding EN signal on $flatten\gen_alert_tx[0].u_prim_alert_sender.\i_decode_ack.$verific$gen_async.state_q_reg$prim_diff_decode.sv:172$6763 ($adff) from module edn (D = \gen_alert_tx[0].u_prim_alert_sender.i_decode_ack.gen_async.state_d, Q = \gen_alert_tx[0].u_prim_alert_sender.i_decode_ack.gen_async.state_q).
Adding EN signal on $flatten\gen_alert_tx[0].u_prim_alert_sender.$verific$state_q_reg$prim_alert_sender.sv:235$6327 ($adff) from module edn (D = \gen_alert_tx[0].u_prim_alert_sender.state_d, Q = \gen_alert_tx[0].u_prim_alert_sender.state_q).
Adding EN signal on $flatten\gen_alert_tx[0].u_prim_alert_sender.$verific$alert_set_q_reg$prim_alert_sender.sv:235$6330 ($adff) from module edn (D = 1'0, Q = \gen_alert_tx[0].u_prim_alert_sender.alert_set_q).
Adding EN signal on $auto$ff.cc:262:slice$9009 ($adff) from module edn (D = 1'0, Q = \u_edn_core.u_prim_count_max_reqs_cntr.gen_cnts[0].u_cnt_flop.gen_generic.u_impl_generic.q_o [0]).
Setting constant 0-bit at position 0 on $flatten\u_reg.\u_recov_alert_sts_edn_bus_cmp_alert.$verific$q_reg[0]$prim_subreg.sv:72$7659 ($dlatch) from module edn.
Setting constant 0-bit at position 0 on $auto$ff.cc:262:slice$9162 ($adffe) from module edn.
Setting constant 0-bit at position 0 on $auto$ff.cc:262:slice$9161 ($adffe) from module edn.
Setting constant 0-bit at position 1 on $auto$ff.cc:262:slice$9116 ($adffe) from module edn.
Setting constant 0-bit at position 4 on $auto$ff.cc:262:slice$9116 ($adffe) from module edn.
Setting constant 0-bit at position 1 on $auto$ff.cc:262:slice$9113 ($adffe) from module edn.
Setting constant 0-bit at position 4 on $auto$ff.cc:262:slice$9113 ($adffe) from module edn.
Setting constant 0-bit at position 1 on $auto$ff.cc:262:slice$9110 ($adffe) from module edn.
Setting constant 0-bit at position 4 on $auto$ff.cc:262:slice$9110 ($adffe) from module edn.
Setting constant 0-bit at position 1 on $auto$ff.cc:262:slice$9107 ($adffe) from module edn.
Setting constant 0-bit at position 4 on $auto$ff.cc:262:slice$9107 ($adffe) from module edn.
Setting constant 0-bit at position 1 on $auto$ff.cc:262:slice$9104 ($adffe) from module edn.
Setting constant 0-bit at position 4 on $auto$ff.cc:262:slice$9104 ($adffe) from module edn.
Setting constant 0-bit at position 1 on $auto$ff.cc:262:slice$9101 ($adffe) from module edn.
Setting constant 0-bit at position 4 on $auto$ff.cc:262:slice$9101 ($adffe) from module edn.
Setting constant 0-bit at position 1 on $auto$ff.cc:262:slice$9098 ($adffe) from module edn.
Setting constant 0-bit at position 4 on $auto$ff.cc:262:slice$9098 ($adffe) from module edn.
Setting constant 0-bit at position 1 on $auto$ff.cc:262:slice$9095 ($adffe) from module edn.
Setting constant 0-bit at position 4 on $auto$ff.cc:262:slice$9095 ($adffe) from module edn.
Setting constant 0-bit at position 1 on $auto$ff.cc:262:slice$9081 ($adffe) from module edn.
Setting constant 0-bit at position 2 on $auto$ff.cc:262:slice$9081 ($adffe) from module edn.

yosys> opt_clean

3.54. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \edn..
Removed 18 unused cells and 38 unused wires.
<suppressed ~31 debug messages>

yosys> opt_expr

3.55. Executing OPT_EXPR pass (perform const folding).
Optimizing module edn.
<suppressed ~53 debug messages>

yosys> opt_muxtree

3.56. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \edn..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
    dead port 3/4 on $pmux $flatten\u_edn_core.\gen_ep_blk[0].u_edn_ack_sm_ep.$verific$select_19$edn_ack_sm.sv:102$4277.
    dead port 3/4 on $pmux $flatten\u_edn_core.\gen_ep_blk[1].u_edn_ack_sm_ep.$verific$select_19$edn_ack_sm.sv:102$4277.
    dead port 3/4 on $pmux $flatten\u_edn_core.\gen_ep_blk[2].u_edn_ack_sm_ep.$verific$select_19$edn_ack_sm.sv:102$4277.
    dead port 3/4 on $pmux $flatten\u_edn_core.\gen_ep_blk[3].u_edn_ack_sm_ep.$verific$select_19$edn_ack_sm.sv:102$4277.
    dead port 3/4 on $pmux $flatten\u_edn_core.\gen_ep_blk[4].u_edn_ack_sm_ep.$verific$select_19$edn_ack_sm.sv:102$4277.
    dead port 3/4 on $pmux $flatten\u_edn_core.\gen_ep_blk[5].u_edn_ack_sm_ep.$verific$select_19$edn_ack_sm.sv:102$4277.
    dead port 3/4 on $pmux $flatten\u_edn_core.\gen_ep_blk[6].u_edn_ack_sm_ep.$verific$select_19$edn_ack_sm.sv:102$4277.
    dead port 3/4 on $pmux $flatten\u_edn_core.\gen_ep_blk[7].u_edn_ack_sm_ep.$verific$select_19$edn_ack_sm.sv:102$4277.
Removed 8 multiplexer ports.
<suppressed ~52 debug messages>

yosys> opt_reduce

3.57. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \edn.
    New input vector for $reduce_or cell $flatten\u_edn_core.\gen_ep_blk[7].u_edn_ack_sm_ep.$verific$reduce_nor_17$edn_ack_sm.sv:102$4274: { $flatten\u_edn_core.\gen_ep_blk[7].u_edn_ack_sm_ep.$verific$n56$4236 $flatten\u_edn_core.\gen_ep_blk[7].u_edn_ack_sm_ep.$verific$n59$4239 }
    New input vector for $reduce_or cell $flatten\u_edn_core.\gen_ep_blk[6].u_edn_ack_sm_ep.$verific$reduce_nor_17$edn_ack_sm.sv:102$4274: { $flatten\u_edn_core.\gen_ep_blk[6].u_edn_ack_sm_ep.$verific$n56$4236 $flatten\u_edn_core.\gen_ep_blk[6].u_edn_ack_sm_ep.$verific$n59$4239 }
    New input vector for $reduce_or cell $flatten\u_edn_core.\gen_ep_blk[5].u_edn_ack_sm_ep.$verific$reduce_nor_17$edn_ack_sm.sv:102$4274: { $flatten\u_edn_core.\gen_ep_blk[5].u_edn_ack_sm_ep.$verific$n56$4236 $flatten\u_edn_core.\gen_ep_blk[5].u_edn_ack_sm_ep.$verific$n59$4239 }
    New input vector for $reduce_or cell $flatten\u_edn_core.\gen_ep_blk[4].u_edn_ack_sm_ep.$verific$reduce_nor_17$edn_ack_sm.sv:102$4274: { $flatten\u_edn_core.\gen_ep_blk[4].u_edn_ack_sm_ep.$verific$n56$4236 $flatten\u_edn_core.\gen_ep_blk[4].u_edn_ack_sm_ep.$verific$n59$4239 }
    New input vector for $reduce_or cell $flatten\u_edn_core.\gen_ep_blk[3].u_edn_ack_sm_ep.$verific$reduce_nor_17$edn_ack_sm.sv:102$4274: { $flatten\u_edn_core.\gen_ep_blk[3].u_edn_ack_sm_ep.$verific$n56$4236 $flatten\u_edn_core.\gen_ep_blk[3].u_edn_ack_sm_ep.$verific$n59$4239 }
    New input vector for $reduce_or cell $flatten\u_edn_core.\gen_ep_blk[2].u_edn_ack_sm_ep.$verific$reduce_nor_17$edn_ack_sm.sv:102$4274: { $flatten\u_edn_core.\gen_ep_blk[2].u_edn_ack_sm_ep.$verific$n56$4236 $flatten\u_edn_core.\gen_ep_blk[2].u_edn_ack_sm_ep.$verific$n59$4239 }
    New input vector for $reduce_or cell $flatten\u_edn_core.\gen_ep_blk[1].u_edn_ack_sm_ep.$verific$reduce_nor_17$edn_ack_sm.sv:102$4274: { $flatten\u_edn_core.\gen_ep_blk[1].u_edn_ack_sm_ep.$verific$n56$4236 $flatten\u_edn_core.\gen_ep_blk[1].u_edn_ack_sm_ep.$verific$n59$4239 }
    New input vector for $reduce_or cell $flatten\u_edn_core.\gen_ep_blk[0].u_edn_ack_sm_ep.$verific$reduce_nor_17$edn_ack_sm.sv:102$4274: { $flatten\u_edn_core.\gen_ep_blk[0].u_edn_ack_sm_ep.$verific$n59$4239 $flatten\u_edn_core.\gen_ep_blk[0].u_edn_ack_sm_ep.$verific$n56$4236 }
    New ctrl vector for $pmux cell $flatten\u_reg.$verific$select_305$edn_reg_top.sv:1268$6216: { \u_reg.addr_hit [0] $flatten\u_reg.$verific$n1575$4485 $flatten\u_reg.$verific$n1578$4488 $auto$opt_reduce.cc:134:opt_pmux$9043 $flatten\u_reg.$verific$n1584$4494 $flatten\u_reg.$verific$n1590$4500 $flatten\u_reg.$verific$n1605$4515 $flatten\u_reg.$verific$n1610$4520 }
  Optimizing cells in module \edn.
Performed a total of 9 changes.

yosys> opt_merge

3.58. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\edn'.
<suppressed ~57 debug messages>
Removed a total of 19 cells.

yosys> opt_share

3.59. Executing OPT_SHARE pass.

yosys> opt_dff -nosdff -sat

3.60. Executing OPT_DFF pass (perform DFF optimizations).
Setting constant 0-bit at position 0 on $auto$fsm_map.cc:172:map_fsm$9057 ($adff) from module edn.
Setting constant 0-bit at position 1 on $auto$fsm_map.cc:172:map_fsm$9057 ($adff) from module edn.

yosys> opt_clean

3.61. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \edn..
Removed 58 unused cells and 115 unused wires.
<suppressed ~92 debug messages>

yosys> opt_expr

3.62. Executing OPT_EXPR pass (perform const folding).
Optimizing module edn.
<suppressed ~6 debug messages>

yosys> opt_muxtree

3.63. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \edn..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Removed 0 multiplexer ports.
<suppressed ~42 debug messages>

yosys> opt_reduce

3.64. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \edn.
Performed a total of 0 changes.

yosys> opt_merge

3.65. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\edn'.
Removed a total of 0 cells.

yosys> opt_share

3.66. Executing OPT_SHARE pass.

yosys> opt_dff -nosdff -sat

3.67. Executing OPT_DFF pass (perform DFF optimizations).
Setting constant 0-bit at position 0 on $flatten\u_reg.\u_sum_sts_req_mode_sm_sts.$verific$q_reg[0]$prim_subreg.sv:72$7642 ($adff) from module edn.

yosys> opt_clean

3.68. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \edn..
Removed 4 unused cells and 10 unused wires.
<suppressed ~12 debug messages>

yosys> opt_expr

3.69. Executing OPT_EXPR pass (perform const folding).
Optimizing module edn.

yosys> opt_muxtree

3.70. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \edn..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Removed 0 multiplexer ports.
<suppressed ~42 debug messages>

yosys> opt_reduce

3.71. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \edn.
    New ctrl vector for $pmux cell $flatten\u_reg.$verific$select_305$edn_reg_top.sv:1268$6216: { \u_reg.addr_hit [0] $flatten\u_reg.$verific$n1575$4485 $auto$opt_reduce.cc:134:opt_pmux$9043 $flatten\u_reg.$verific$n1584$4494 $flatten\u_reg.$verific$n1590$4500 $flatten\u_reg.$verific$n1605$4515 $flatten\u_reg.$verific$n1610$4520 }
  Optimizing cells in module \edn.
Performed a total of 1 changes.

yosys> opt_merge

3.72. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\edn'.
Removed a total of 0 cells.

yosys> opt_share

3.73. Executing OPT_SHARE pass.

yosys> opt_dff -nosdff -sat

3.74. Executing OPT_DFF pass (perform DFF optimizations).

yosys> opt_clean

3.75. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \edn..
Removed 2 unused cells and 2 unused wires.
<suppressed ~3 debug messages>

yosys> opt_expr

3.76. Executing OPT_EXPR pass (perform const folding).
Optimizing module edn.
MAX OPT ITERATION = 4

yosys> wreduce -keepdc

3.77. Executing WREDUCE pass (reducing word size of cells).
Removed top 2 bits (of 3) from port B of cell edn.$flatten\u_reg.\u_reg_if.$verific$equal_8$tlul_adapter_reg.sv:55$7854 ($eq).
Removed top 4 bits (of 5) from port B of cell edn.$flatten\u_reg.$verific$equal_25$edn_reg_top.sv:1062$6031 ($eq).
Removed top 3 bits (of 5) from port B of cell edn.$flatten\u_reg.$verific$equal_27$edn_reg_top.sv:1063$6032 ($eq).
Removed top 3 bits (of 5) from port B of cell edn.$flatten\u_reg.$verific$equal_29$edn_reg_top.sv:1064$6033 ($eq).
Removed top 2 bits (of 5) from port B of cell edn.$flatten\u_reg.$verific$equal_31$edn_reg_top.sv:1065$6034 ($eq).
Removed top 2 bits (of 5) from port B of cell edn.$flatten\u_reg.$verific$equal_33$edn_reg_top.sv:1066$6035 ($eq).
Removed top 2 bits (of 5) from port B of cell edn.$flatten\u_reg.$verific$equal_35$edn_reg_top.sv:1067$6036 ($eq).
Removed top 2 bits (of 5) from port B of cell edn.$flatten\u_reg.$verific$equal_37$edn_reg_top.sv:1068$6037 ($eq).
Removed top 1 bits (of 5) from port B of cell edn.$flatten\u_reg.$verific$equal_39$edn_reg_top.sv:1069$6038 ($eq).
Removed top 1 bits (of 5) from port B of cell edn.$flatten\u_reg.$verific$equal_41$edn_reg_top.sv:1070$6039 ($eq).
Removed top 1 bits (of 5) from port B of cell edn.$flatten\u_reg.$verific$equal_43$edn_reg_top.sv:1071$6040 ($eq).
Removed top 1 bits (of 5) from port B of cell edn.$flatten\u_reg.$verific$equal_45$edn_reg_top.sv:1072$6041 ($eq).
Removed top 1 bits (of 5) from port B of cell edn.$flatten\u_reg.$verific$equal_47$edn_reg_top.sv:1073$6042 ($eq).
Removed top 1 bits (of 5) from port B of cell edn.$flatten\u_reg.$verific$equal_49$edn_reg_top.sv:1074$6043 ($eq).
Removed top 1 bits (of 5) from port B of cell edn.$flatten\u_reg.$verific$equal_51$edn_reg_top.sv:1075$6044 ($eq).
Removed top 1 bits (of 5) from port B of cell edn.$flatten\u_reg.$verific$equal_53$edn_reg_top.sv:1076$6045 ($eq).
Removed top 31 bits (of 32) from port A of cell edn.$flatten\u_reg.\u_reg_if.\u_err.$verific$shift_left_18$tlul_err.sv:44$8503 ($shl).
Removed top 28 bits (of 32) from port Y of cell edn.$flatten\u_reg.\u_reg_if.\u_err.$verific$shift_left_18$tlul_err.sv:44$8503 ($shl).
Removed top 1 bits (of 5) from port B of cell edn.$auto$opt_dff.cc:195:make_patterns_logic$9158 ($ne).
Removed top 2 bits (of 5) from port B of cell edn.$auto$opt_dff.cc:195:make_patterns_logic$9156 ($ne).
Removed top 1 bits (of 3) from port B of cell edn.$auto$opt_dff.cc:195:make_patterns_logic$9151 ($ne).
Removed top 2 bits (of 3) from port B of cell edn.$auto$opt_dff.cc:195:make_patterns_logic$9130 ($ne).
Removed top 2 bits (of 5) from port B of cell edn.$auto$opt_dff.cc:195:make_patterns_logic$9135 ($ne).
Removed top 1 bits (of 5) from port B of cell edn.$auto$opt_dff.cc:195:make_patterns_logic$9137 ($ne).
Removed top 1 bits (of 3) from port B of cell edn.$auto$opt_dff.cc:195:make_patterns_logic$9144 ($ne).
Removed top 1 bits (of 3) from port B of cell edn.$auto$opt_dff.cc:195:make_patterns_logic$9123 ($ne).
Removed top 30 bits (of 31) from port A of cell edn.$flatten\u_edn_core.$verific$and_626$edn_core.sv:320$1577 ($and).
Removed top 8 bits (of 31) from port Y of cell edn.$flatten\u_edn_core.$verific$and_626$edn_core.sv:320$1577 ($and).
Removed top 8 bits (of 31) from port B of cell edn.$flatten\u_edn_core.$verific$and_626$edn_core.sv:320$1577 ($and).
Removed top 1 bits (of 3) from mux cell edn.$flatten\gen_alert_tx[1].u_prim_alert_sender.$verific$mux_22$prim_alert_sender.sv:142$6399 ($mux).
Removed top 1 bits (of 3) from mux cell edn.$flatten\gen_alert_tx[0].u_prim_alert_sender.$verific$mux_22$prim_alert_sender.sv:142$6292 ($mux).
Removed top 2 bits (of 4) from wire edn.$flatten\gen_alert_tx[0].u_prim_alert_sender.$auto$bmuxmap.cc:58:execute$8957.
Removed top 1 bits (of 4) from wire edn.$flatten\gen_alert_tx[0].u_prim_alert_sender.$auto$bmuxmap.cc:58:execute$8977.
Removed top 1 bits (of 4) from wire edn.$flatten\gen_alert_tx[0].u_prim_alert_sender.$auto$bmuxmap.cc:58:execute$8987.
Removed top 1 bits (of 3) from wire edn.$flatten\gen_alert_tx[0].u_prim_alert_sender.$verific$n38$6256.
Removed top 1 bits (of 2) from wire edn.$flatten\gen_alert_tx[0].u_prim_alert_sender.\i_decode_ping.$auto$bmuxmap.cc:58:execute$8882.
Removed top 1 bits (of 2) from wire edn.$flatten\gen_alert_tx[0].u_prim_alert_sender.\i_decode_ping.$auto$bmuxmap.cc:58:execute$8887.
Removed top 2 bits (of 4) from wire edn.$flatten\gen_alert_tx[1].u_prim_alert_sender.$auto$bmuxmap.cc:58:execute$8907.
Removed top 1 bits (of 2) from wire edn.$flatten\gen_alert_tx[1].u_prim_alert_sender.$auto$bmuxmap.cc:58:execute$8912.
Removed top 1 bits (of 4) from wire edn.$flatten\gen_alert_tx[1].u_prim_alert_sender.$auto$bmuxmap.cc:58:execute$8927.
Removed top 1 bits (of 4) from wire edn.$flatten\gen_alert_tx[1].u_prim_alert_sender.$auto$bmuxmap.cc:58:execute$8937.
Removed top 1 bits (of 3) from wire edn.$flatten\gen_alert_tx[1].u_prim_alert_sender.$verific$n38$6363.
Removed top 1 bits (of 2) from wire edn.$flatten\gen_alert_tx[1].u_prim_alert_sender.\i_decode_ping.$auto$bmuxmap.cc:58:execute$8882.
Removed top 1 bits (of 2) from wire edn.$flatten\gen_alert_tx[1].u_prim_alert_sender.\i_decode_ping.$auto$bmuxmap.cc:58:execute$8887.
Removed top 2 bits (of 4) from wire edn.$flatten\u_reg.$verific$n1003$4525.
Removed top 3 bits (of 4) from wire edn.$flatten\u_reg.$verific$n975$4524.

yosys> peepopt

3.78. Executing PEEPOPT pass (run peephole optimizers).

yosys> opt_clean

3.79. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \edn..
Removed 0 unused cells and 16 unused wires.
<suppressed ~1 debug messages>

yosys> bmuxmap

3.80. Executing BMUXMAP pass.

yosys> demuxmap

3.81. Executing DEMUXMAP pass.

yosys> clean_zerowidth

yosys> alumacc

3.82. Executing ALUMACC pass (create $alu and $macc cells).
Extracting $alu and $macc cells in module edn:
  created 0 $alu and 0 $macc cells.

yosys> opt_expr

3.83. Executing OPT_EXPR pass (perform const folding).
Optimizing module edn.

yosys> opt_merge -nomux

3.84. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\edn'.
Removed a total of 0 cells.

yosys> opt_muxtree

3.85. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \edn..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Removed 0 multiplexer ports.
<suppressed ~42 debug messages>

yosys> opt_reduce

3.86. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \edn.
Performed a total of 0 changes.

yosys> opt_merge

3.87. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\edn'.
Removed a total of 0 cells.

yosys> opt_share

3.88. Executing OPT_SHARE pass.

yosys> opt_dff -nosdff -nodffe

3.89. Executing OPT_DFF pass (perform DFF optimizations).

yosys> opt_clean

3.90. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \edn..

yosys> opt_expr

3.91. Executing OPT_EXPR pass (perform const folding).
Optimizing module edn.
MAX OPT ITERATION = 1

yosys> stat

3.92. Printing statistics.

=== edn ===

   Number of wires:               2768
   Number of wire bits:          13936
   Number of public wires:        2507
   Number of public wire bits:   13507
   Number of memories:               0
   Number of memory bits:            0
   Number of processes:              0
   Number of cells:                461
     $adff                          36
     $adffe                         17
     $and                           52
     $eq                            18
     $logic_not                      2
     $mux                          143
     $ne                            14
     $not                           53
     $or                            61
     $pmux                           1
     $reduce_and                     9
     $reduce_bool                    1
     $reduce_or                     13
     $reduce_xor                    28
     $shl                            1
     $xor                           12


yosys> memory -nomap

3.93. Executing MEMORY pass.

yosys> opt_mem

3.93.1. Executing OPT_MEM pass (optimize memories).
Performed a total of 0 transformations.

yosys> opt_mem_priority

3.93.2. Executing OPT_MEM_PRIORITY pass (removing unnecessary memory write priority relations).
Performed a total of 0 transformations.

yosys> opt_mem_feedback

3.93.3. Executing OPT_MEM_FEEDBACK pass (finding memory read-to-write feedback paths).

yosys> memory_bmux2rom

3.93.4. Executing MEMORY_BMUX2ROM pass (converting muxes to ROMs).

yosys> memory_dff

3.93.5. Executing MEMORY_DFF pass (merging $dff cells to $memrd).

yosys> opt_clean

3.93.6. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \edn..

yosys> memory_share

3.93.7. Executing MEMORY_SHARE pass (consolidating $memrd/$memwr cells).

yosys> opt_mem_widen

3.93.8. Executing OPT_MEM_WIDEN pass (optimize memories where all ports are wide).
Performed a total of 0 transformations.

yosys> opt_clean

3.93.9. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \edn..

yosys> memory_collect

3.93.10. Executing MEMORY_COLLECT pass (generating $mem cells).

yosys> stat

3.94. Printing statistics.

=== edn ===

   Number of wires:               2768
   Number of wire bits:          13936
   Number of public wires:        2507
   Number of public wire bits:   13507
   Number of memories:               0
   Number of memory bits:            0
   Number of processes:              0
   Number of cells:                461
     $adff                          36
     $adffe                         17
     $and                           52
     $eq                            18
     $logic_not                      2
     $mux                          143
     $ne                            14
     $not                           53
     $or                            61
     $pmux                           1
     $reduce_and                     9
     $reduce_bool                    1
     $reduce_or                     13
     $reduce_xor                    28
     $shl                            1
     $xor                           12


yosys> muxpack

3.95. Executing MUXPACK pass ($mux cell cascades to $pmux).
Converted 0 (p)mux cells into 0 pmux cells.
<suppressed ~126 debug messages>

yosys> opt_clean

3.96. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \edn..

yosys> pmuxtree

3.97. Executing PMUXTREE pass.

yosys> muxpack

3.98. Executing MUXPACK pass ($mux cell cascades to $pmux).
Converted 0 (p)mux cells into 0 pmux cells.
<suppressed ~132 debug messages>

yosys> memory_map

3.99. Executing MEMORY_MAP pass (converting memories to logic and flip-flops).

yosys> stat

3.100. Printing statistics.

=== edn ===

   Number of wires:               2780
   Number of wire bits:          14165
   Number of public wires:        2507
   Number of public wire bits:   13507
   Number of memories:               0
   Number of memory bits:            0
   Number of processes:              0
   Number of cells:                472
     $adff                          36
     $adffe                         17
     $and                           52
     $eq                            18
     $logic_not                      2
     $mux                          150
     $ne                            14
     $not                           54
     $or                            63
     $reduce_and                     9
     $reduce_bool                    1
     $reduce_or                     15
     $reduce_xor                    28
     $shl                            1
     $xor                           12


yosys> techmap -map +/techmap.v -map +/rapidsilicon/genesis/arith_map.v

3.101. Executing TECHMAP pass (map to technology primitives).

3.101.1. Executing Verilog-2005 frontend: /nfs_scratch/scratch/Vorak/aram/Workspace/Raptor/yosys_verific_rs/yosys/install/bin/../share/yosys/techmap.v
Parsing Verilog input from `/nfs_scratch/scratch/Vorak/aram/Workspace/Raptor/yosys_verific_rs/yosys/install/bin/../share/yosys/techmap.v' to AST representation.
Generating RTLIL representation for module `\_90_simplemap_bool_ops'.
Generating RTLIL representation for module `\_90_simplemap_reduce_ops'.
Generating RTLIL representation for module `\_90_simplemap_logic_ops'.
Generating RTLIL representation for module `\_90_simplemap_compare_ops'.
Generating RTLIL representation for module `\_90_simplemap_various'.
Generating RTLIL representation for module `\_90_simplemap_registers'.
Generating RTLIL representation for module `\_90_shift_ops_shr_shl_sshl_sshr'.
Generating RTLIL representation for module `\_90_shift_shiftx'.
Generating RTLIL representation for module `\_90_fa'.
Generating RTLIL representation for module `\_90_lcu'.
Generating RTLIL representation for module `\_90_alu'.
Generating RTLIL representation for module `\_90_macc'.
Generating RTLIL representation for module `\_90_alumacc'.
Generating RTLIL representation for module `\$__div_mod_u'.
Generating RTLIL representation for module `\$__div_mod_trunc'.
Generating RTLIL representation for module `\_90_div'.
Generating RTLIL representation for module `\_90_mod'.
Generating RTLIL representation for module `\$__div_mod_floor'.
Generating RTLIL representation for module `\_90_divfloor'.
Generating RTLIL representation for module `\_90_modfloor'.
Generating RTLIL representation for module `\_90_pow'.
Generating RTLIL representation for module `\_90_pmux'.
Generating RTLIL representation for module `\_90_demux'.
Generating RTLIL representation for module `\_90_lut'.
Successfully finished Verilog frontend.

3.101.2. Executing Verilog-2005 frontend: /nfs_scratch/scratch/Vorak/aram/Workspace/Raptor/yosys_verific_rs/yosys/install/bin/../share/yosys/rapidsilicon/genesis/arith_map.v
Parsing Verilog input from `/nfs_scratch/scratch/Vorak/aram/Workspace/Raptor/yosys_verific_rs/yosys/install/bin/../share/yosys/rapidsilicon/genesis/arith_map.v' to AST representation.
Generating RTLIL representation for module `\_80_rs_alu'.
Successfully finished Verilog frontend.

3.101.3. Continuing TECHMAP pass.
Using extmapper simplemap for cells of type $or.
Using extmapper simplemap for cells of type $mux.
Using extmapper simplemap for cells of type $reduce_or.
Using extmapper simplemap for cells of type $and.
Using extmapper simplemap for cells of type $reduce_xor.
Using extmapper simplemap for cells of type $not.
Using extmapper simplemap for cells of type $adffe.
Using extmapper simplemap for cells of type $eq.
Using extmapper simplemap for cells of type $logic_not.
Using extmapper simplemap for cells of type $reduce_and.
Using extmapper simplemap for cells of type $adff.
Using template $paramod$constmap:66d421c313e4e958be776b99540ac2de3b59fdbc$paramod$77562a466236eb4a6d905351a0995599b75075cb\_90_shift_ops_shr_shl_sshl_sshr for cells of type $shl.
Using extmapper simplemap for cells of type $ne.
Using extmapper simplemap for cells of type $reduce_bool.
Using extmapper simplemap for cells of type $xor.
No more expansions possible.
<suppressed ~726 debug messages>

yosys> stat

3.102. Printing statistics.

=== edn ===

   Number of wires:               3087
   Number of wire bits:          17118
   Number of public wires:        2507
   Number of public wire bits:   13507
   Number of memories:               0
   Number of memory bits:            0
   Number of processes:              0
   Number of cells:               1695
     $_AND_                         91
     $_DFFE_PN0P_                   64
     $_DFF_PN0_                     21
     $_DFF_PN1_                     15
     $_MUX_                        482
     $_NOT_                         82
     $_OR_                         228
     $_XOR_                        712


yosys> opt_expr

3.103. Executing OPT_EXPR pass (perform const folding).
Optimizing module edn.
<suppressed ~549 debug messages>

yosys> opt_merge -nomux

3.104. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\edn'.
<suppressed ~969 debug messages>
Removed a total of 323 cells.

yosys> opt_muxtree

3.105. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \edn..
  Creating internal representation of mux trees.
  No muxes found in this module.
Removed 0 multiplexer ports.

yosys> opt_reduce

3.106. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \edn.
Performed a total of 0 changes.

yosys> opt_merge

3.107. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\edn'.
Removed a total of 0 cells.

yosys> opt_share

3.108. Executing OPT_SHARE pass.

yosys> opt_dff -nosdff -nodffe

3.109. Executing OPT_DFF pass (perform DFF optimizations).
Handling never-active EN on $auto$ff.cc:262:slice$9766 ($_DFFE_PN0P_) from module edn (removing D path).
Setting constant 0-bit at position 0 on $auto$ff.cc:262:slice$9766 ($_DLATCH_N_) from module edn.

yosys> opt_clean

3.110. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \edn..
Removed 6 unused cells and 221 unused wires.
<suppressed ~9 debug messages>

yosys> opt_expr

3.111. Executing OPT_EXPR pass (perform const folding).
Optimizing module edn.
<suppressed ~24 debug messages>

yosys> opt_muxtree

3.112. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \edn..
  Creating internal representation of mux trees.
  No muxes found in this module.
Removed 0 multiplexer ports.

yosys> opt_reduce

3.113. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \edn.
Performed a total of 0 changes.

yosys> opt_merge

3.114. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\edn'.
<suppressed ~18 debug messages>
Removed a total of 6 cells.

yosys> opt_share

3.115. Executing OPT_SHARE pass.

yosys> opt_dff -nosdff -nodffe

3.116. Executing OPT_DFF pass (perform DFF optimizations).

yosys> opt_clean

3.117. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \edn..
Removed 0 unused cells and 8 unused wires.
<suppressed ~1 debug messages>

yosys> opt_expr

3.118. Executing OPT_EXPR pass (perform const folding).
Optimizing module edn.
<suppressed ~3 debug messages>

yosys> opt_muxtree

3.119. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \edn..
  Creating internal representation of mux trees.
  No muxes found in this module.
Removed 0 multiplexer ports.

yosys> opt_reduce

3.120. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \edn.
Performed a total of 0 changes.

yosys> opt_merge

3.121. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\edn'.
Removed a total of 0 cells.

yosys> opt_share

3.122. Executing OPT_SHARE pass.

yosys> opt_dff -nosdff -nodffe

3.123. Executing OPT_DFF pass (perform DFF optimizations).

yosys> opt_clean

3.124. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \edn..
Removed 0 unused cells and 1 unused wires.
<suppressed ~1 debug messages>

yosys> opt_expr

3.125. Executing OPT_EXPR pass (perform const folding).
Optimizing module edn.
MAX OPT ITERATION = 3

yosys> opt_expr -full

3.126. Executing OPT_EXPR pass (perform const folding).
Optimizing module edn.
<suppressed ~221 debug messages>

yosys> techmap -map +/techmap.v

3.127. Executing TECHMAP pass (map to technology primitives).

3.127.1. Executing Verilog-2005 frontend: /nfs_scratch/scratch/Vorak/aram/Workspace/Raptor/yosys_verific_rs/yosys/install/bin/../share/yosys/techmap.v
Parsing Verilog input from `/nfs_scratch/scratch/Vorak/aram/Workspace/Raptor/yosys_verific_rs/yosys/install/bin/../share/yosys/techmap.v' to AST representation.
Generating RTLIL representation for module `\_90_simplemap_bool_ops'.
Generating RTLIL representation for module `\_90_simplemap_reduce_ops'.
Generating RTLIL representation for module `\_90_simplemap_logic_ops'.
Generating RTLIL representation for module `\_90_simplemap_compare_ops'.
Generating RTLIL representation for module `\_90_simplemap_various'.
Generating RTLIL representation for module `\_90_simplemap_registers'.
Generating RTLIL representation for module `\_90_shift_ops_shr_shl_sshl_sshr'.
Generating RTLIL representation for module `\_90_shift_shiftx'.
Generating RTLIL representation for module `\_90_fa'.
Generating RTLIL representation for module `\_90_lcu'.
Generating RTLIL representation for module `\_90_alu'.
Generating RTLIL representation for module `\_90_macc'.
Generating RTLIL representation for module `\_90_alumacc'.
Generating RTLIL representation for module `\$__div_mod_u'.
Generating RTLIL representation for module `\$__div_mod_trunc'.
Generating RTLIL representation for module `\_90_div'.
Generating RTLIL representation for module `\_90_mod'.
Generating RTLIL representation for module `\$__div_mod_floor'.
Generating RTLIL representation for module `\_90_divfloor'.
Generating RTLIL representation for module `\_90_modfloor'.
Generating RTLIL representation for module `\_90_pow'.
Generating RTLIL representation for module `\_90_pmux'.
Generating RTLIL representation for module `\_90_demux'.
Generating RTLIL representation for module `\_90_lut'.
Successfully finished Verilog frontend.

3.127.2. Continuing TECHMAP pass.
No more expansions possible.
<suppressed ~71 debug messages>

yosys> opt_expr

3.128. Executing OPT_EXPR pass (perform const folding).
Optimizing module edn.

yosys> opt_merge -nomux

3.129. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\edn'.
<suppressed ~6 debug messages>
Removed a total of 2 cells.

yosys> opt_muxtree

3.130. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \edn..
  Creating internal representation of mux trees.
  No muxes found in this module.
Removed 0 multiplexer ports.

yosys> opt_reduce

3.131. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \edn.
Performed a total of 0 changes.

yosys> opt_merge

3.132. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\edn'.
Removed a total of 0 cells.

yosys> opt_dff -nosdff -nodffe -sat

3.133. Executing OPT_DFF pass (perform DFF optimizations).

yosys> opt_clean

3.134. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \edn..
Removed 0 unused cells and 12 unused wires.
<suppressed ~1 debug messages>

yosys> opt_expr

3.135. Executing OPT_EXPR pass (perform const folding).
Optimizing module edn.
MAX OPT ITERATION = 1

yosys> abc -dff

3.136. Executing ABC pass (technology mapping using ABC).

3.136.1. Summary of detected clock domains:
  12 cells in clk=\clk_i, en=\u_edn_core.u_intr_hw_edn_fatal_err.new_event, arst=!\rst_ni, srst={ }
  4 cells in clk=\clk_i, en=$auto$opt_dff.cc:194:make_patterns_logic$9086, arst=!\rst_ni, srst={ }
  9 cells in clk=\clk_i, en=\u_edn_core.u_intr_hw_edn_cmd_req_done.new_event, arst=!\rst_ni, srst={ }
  257 cells in clk=\clk_i, en=\u_reg.intg_err, arst=!\rst_ni, srst={ }
  20 cells in clk=\clk_i, en=$auto$opt_dff.cc:219:make_patterns_logic$9152, arst=!\rst_ni, srst={ }
  58 cells in clk=\clk_i, en=$auto$opt_dff.cc:219:make_patterns_logic$9159, arst=!\rst_ni, srst={ }
  27 cells in clk=\clk_i, en=$auto$opt_dff.cc:219:make_patterns_logic$9145, arst=!\rst_ni, srst={ }
  20 cells in clk=\clk_i, en=$auto$opt_dff.cc:219:make_patterns_logic$9131, arst=!\rst_ni, srst={ }
  62 cells in clk=\clk_i, en=$auto$opt_dff.cc:219:make_patterns_logic$9138, arst=!\rst_ni, srst={ }
  27 cells in clk=\clk_i, en=$auto$opt_dff.cc:219:make_patterns_logic$9124, arst=!\rst_ni, srst={ }
  270 cells in clk=\clk_i, en=\u_reg.u_reg_if.a_ack, arst=!\rst_ni, srst={ }
  2 cells in clk=\clk_i, en=\csrng_cmd_i.csrng_rsp_ack, arst=!\rst_ni, srst={ }
  106 cells in clk=\clk_i, en={ }, arst=!\rst_ni, srst={ }

3.136.2. Extracting gate netlist of module `\edn' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_i, enabled by \u_edn_core.u_intr_hw_edn_fatal_err.new_event, asynchronously reset by !\rst_ni
Extracted 12 gates and 21 wires to a netlist network with 8 inputs and 7 outputs.

3.136.2.1. Executing ABC.

3.136.3. Extracting gate netlist of module `\edn' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_i, enabled by $auto$opt_dff.cc:194:make_patterns_logic$9086, asynchronously reset by !\rst_ni
Extracted 4 gates and 6 wires to a netlist network with 2 inputs and 3 outputs.

3.136.3.1. Executing ABC.

3.136.4. Extracting gate netlist of module `\edn' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_i, enabled by \u_edn_core.u_intr_hw_edn_cmd_req_done.new_event, asynchronously reset by !\rst_ni
Extracted 9 gates and 18 wires to a netlist network with 8 inputs and 5 outputs.

3.136.4.1. Executing ABC.

3.136.5. Extracting gate netlist of module `\edn' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_i, enabled by \u_reg.intg_err, asynchronously reset by !\rst_ni
Extracted 257 gates and 348 wires to a netlist network with 90 inputs and 2 outputs.

3.136.5.1. Executing ABC.

3.136.6. Extracting gate netlist of module `\edn' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_i, enabled by $auto$opt_dff.cc:219:make_patterns_logic$9152, asynchronously reset by !\rst_ni
Extracted 20 gates and 26 wires to a netlist network with 5 inputs and 3 outputs.

3.136.6.1. Executing ABC.

3.136.7. Extracting gate netlist of module `\edn' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_i, enabled by $auto$opt_dff.cc:219:make_patterns_logic$9159, asynchronously reset by !\rst_ni
Extracted 58 gates and 65 wires to a netlist network with 5 inputs and 5 outputs.

3.136.7.1. Executing ABC.

3.136.8. Extracting gate netlist of module `\edn' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_i, enabled by $auto$opt_dff.cc:219:make_patterns_logic$9145, asynchronously reset by !\rst_ni
Extracted 27 gates and 35 wires to a netlist network with 7 inputs and 4 outputs.

3.136.8.1. Executing ABC.

3.136.9. Extracting gate netlist of module `\edn' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_i, enabled by $auto$opt_dff.cc:219:make_patterns_logic$9131, asynchronously reset by !\rst_ni
Extracted 20 gates and 26 wires to a netlist network with 5 inputs and 3 outputs.

3.136.9.1. Executing ABC.

3.136.10. Extracting gate netlist of module `\edn' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_i, enabled by $auto$opt_dff.cc:219:make_patterns_logic$9138, asynchronously reset by !\rst_ni
Extracted 62 gates and 70 wires to a netlist network with 6 inputs and 6 outputs.

3.136.10.1. Executing ABC.

3.136.11. Extracting gate netlist of module `\edn' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_i, enabled by $auto$opt_dff.cc:219:make_patterns_logic$9124, asynchronously reset by !\rst_ni
Extracted 27 gates and 35 wires to a netlist network with 7 inputs and 4 outputs.

3.136.11.1. Executing ABC.

3.136.12. Extracting gate netlist of module `\edn' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_i, enabled by \u_reg.u_reg_if.a_ack, asynchronously reset by !\rst_ni
Extracted 270 gates and 321 wires to a netlist network with 49 inputs and 36 outputs.

3.136.12.1. Executing ABC.

3.136.13. Extracting gate netlist of module `\edn' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_i, enabled by \csrng_cmd_i.csrng_rsp_ack, asynchronously reset by !\rst_ni
Extracted 2 gates and 5 wires to a netlist network with 2 inputs and 1 outputs.

3.136.13.1. Executing ABC.

3.136.14. Extracting gate netlist of module `\edn' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_i, asynchronously reset by !\rst_ni
Extracted 106 gates and 144 wires to a netlist network with 36 inputs and 48 outputs.

3.136.14.1. Executing ABC.

yosys> abc -dff

3.137. Executing ABC pass (technology mapping using ABC).

3.137.1. Summary of detected clock domains:
  225 cells in clk=\clk_i, en=$abc$11611$u_reg.intg_err, arst=!\rst_ni, srst={ }
  5 cells in clk=\clk_i, en=$abc$11601$u_edn_core.u_intr_hw_edn_cmd_req_done.new_event, arst=!\rst_ni, srst={ }
  16 cells in clk=\clk_i, en=$abc$11968$auto$opt_dff.cc:219:make_patterns_logic$9124, arst=!\rst_ni, srst={ }
  34 cells in clk=\clk_i, en=$abc$11929$auto$opt_dff.cc:219:make_patterns_logic$9138, arst=!\rst_ni, srst={ }
  4 cells in clk=\clk_i, en=$abc$11594$auto$opt_dff.cc:194:make_patterns_logic$9086, arst=!\rst_ni, srst={ }
  13 cells in clk=\clk_i, en=$abc$11838$auto$opt_dff.cc:219:make_patterns_logic$9152, arst=!\rst_ni, srst={ }
  13 cells in clk=\clk_i, en=$abc$11914$auto$opt_dff.cc:219:make_patterns_logic$9131, arst=!\rst_ni, srst={ }
  31 cells in clk=\clk_i, en=$abc$11852$auto$opt_dff.cc:219:make_patterns_logic$9159, arst=!\rst_ni, srst={ }
  13 cells in clk=\clk_i, en=$abc$11582$u_edn_core.u_intr_hw_edn_fatal_err.new_event, arst=!\rst_ni, srst={ }
  2 cells in clk=\clk_i, en=\csrng_cmd_i.csrng_rsp_ack, arst=!\rst_ni, srst={ }
  16 cells in clk=\clk_i, en=$abc$11891$auto$opt_dff.cc:219:make_patterns_logic$9145, arst=!\rst_ni, srst={ }
  172 cells in clk=\clk_i, en=$abc$11991$u_reg.u_reg_if.a_ack, arst=!\rst_ni, srst={ }
  131 cells in clk=\clk_i, en={ }, arst=!\rst_ni, srst={ }

3.137.2. Extracting gate netlist of module `\edn' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_i, enabled by $abc$11611$u_reg.intg_err, asynchronously reset by !\rst_ni
Extracted 225 gates and 316 wires to a netlist network with 90 inputs and 2 outputs.

3.137.2.1. Executing ABC.

3.137.3. Extracting gate netlist of module `\edn' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_i, enabled by $abc$11601$u_edn_core.u_intr_hw_edn_cmd_req_done.new_event, asynchronously reset by !\rst_ni
Extracted 5 gates and 9 wires to a netlist network with 4 inputs and 2 outputs.

3.137.3.1. Executing ABC.

3.137.4. Extracting gate netlist of module `\edn' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_i, enabled by $abc$11968$auto$opt_dff.cc:219:make_patterns_logic$9124, asynchronously reset by !\rst_ni
Extracted 16 gates and 20 wires to a netlist network with 4 inputs and 7 outputs.

3.137.4.1. Executing ABC.

3.137.5. Extracting gate netlist of module `\edn' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_i, enabled by $abc$11929$auto$opt_dff.cc:219:make_patterns_logic$9138, asynchronously reset by !\rst_ni
Extracted 34 gates and 43 wires to a netlist network with 9 inputs and 8 outputs.

3.137.5.1. Executing ABC.

3.137.6. Extracting gate netlist of module `\edn' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_i, enabled by $abc$11594$auto$opt_dff.cc:194:make_patterns_logic$9086, asynchronously reset by !\rst_ni
Extracted 4 gates and 6 wires to a netlist network with 2 inputs and 3 outputs.

3.137.6.1. Executing ABC.

3.137.7. Extracting gate netlist of module `\edn' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_i, enabled by $abc$11838$auto$opt_dff.cc:219:make_patterns_logic$9152, asynchronously reset by !\rst_ni
Extracted 13 gates and 19 wires to a netlist network with 6 inputs and 3 outputs.

3.137.7.1. Executing ABC.

3.137.8. Extracting gate netlist of module `\edn' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_i, enabled by $abc$11914$auto$opt_dff.cc:219:make_patterns_logic$9131, asynchronously reset by !\rst_ni
Extracted 13 gates and 19 wires to a netlist network with 6 inputs and 4 outputs.

3.137.8.1. Executing ABC.

3.137.9. Extracting gate netlist of module `\edn' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_i, enabled by $abc$11852$auto$opt_dff.cc:219:make_patterns_logic$9159, asynchronously reset by !\rst_ni
Extracted 31 gates and 38 wires to a netlist network with 7 inputs and 10 outputs.

3.137.9.1. Executing ABC.

3.137.10. Extracting gate netlist of module `\edn' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_i, enabled by $abc$11582$u_edn_core.u_intr_hw_edn_fatal_err.new_event, asynchronously reset by !\rst_ni
Extracted 13 gates and 22 wires to a netlist network with 9 inputs and 8 outputs.

3.137.10.1. Executing ABC.

3.137.11. Extracting gate netlist of module `\edn' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_i, enabled by \csrng_cmd_i.csrng_rsp_ack, asynchronously reset by !\rst_ni
Extracted 2 gates and 4 wires to a netlist network with 2 inputs and 1 outputs.

3.137.11.1. Executing ABC.

3.137.12. Extracting gate netlist of module `\edn' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_i, enabled by $abc$11891$auto$opt_dff.cc:219:make_patterns_logic$9145, asynchronously reset by !\rst_ni
Extracted 16 gates and 20 wires to a netlist network with 4 inputs and 7 outputs.

3.137.12.1. Executing ABC.

3.137.13. Extracting gate netlist of module `\edn' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_i, enabled by $abc$11991$u_reg.u_reg_if.a_ack, asynchronously reset by !\rst_ni
Extracted 172 gates and 219 wires to a netlist network with 47 inputs and 34 outputs.

3.137.13.1. Executing ABC.

3.137.14. Extracting gate netlist of module `\edn' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_i, asynchronously reset by !\rst_ni
Extracted 131 gates and 182 wires to a netlist network with 50 inputs and 42 outputs.

3.137.14.1. Executing ABC.

yosys> abc -dff

3.138. Executing ABC pass (technology mapping using ABC).

3.138.1. Summary of detected clock domains:
  224 cells in clk=\clk_i, en=$abc$12327$abc$11611$u_reg.intg_err, arst=!\rst_ni, srst={ }
  5 cells in clk=\clk_i, en=$abc$12553$abc$11601$u_edn_core.u_intr_hw_edn_cmd_req_done.new_event, arst=!\rst_ni, srst={ }
  2 cells in clk=\clk_i, en=\csrng_cmd_i.csrng_rsp_ack, arst=!\rst_ni, srst={ }
  11 cells in clk=\clk_i, en=$abc$12682$abc$11582$u_edn_core.u_intr_hw_edn_fatal_err.new_event, arst=!\rst_ni, srst={ }
  14 cells in clk=\clk_i, en=$abc$12559$abc$11968$auto$opt_dff.cc:219:make_patterns_logic$9124, arst=!\rst_ni, srst={ }
  4 cells in clk=\clk_i, en=$abc$12613$abc$11594$auto$opt_dff.cc:194:make_patterns_logic$9086, arst=!\rst_ni, srst={ }
  35 cells in clk=\clk_i, en=$abc$12577$abc$11929$auto$opt_dff.cc:219:make_patterns_logic$9138, arst=!\rst_ni, srst={ }
  165 cells in clk=\clk_i, en=$abc$12718$abc$11991$u_reg.u_reg_if.a_ack, arst=!\rst_ni, srst={ }
  12 cells in clk=\clk_i, en=$abc$12620$abc$11838$auto$opt_dff.cc:219:make_patterns_logic$9152, arst=!\rst_ni, srst={ }
  14 cells in clk=\clk_i, en=$abc$12635$abc$11914$auto$opt_dff.cc:219:make_patterns_logic$9131, arst=!\rst_ni, srst={ }
  32 cells in clk=\clk_i, en=$abc$12650$abc$11852$auto$opt_dff.cc:219:make_patterns_logic$9159, arst=!\rst_ni, srst={ }
  14 cells in clk=\clk_i, en=$abc$12700$abc$11891$auto$opt_dff.cc:219:make_patterns_logic$9145, arst=!\rst_ni, srst={ }
  135 cells in clk=\clk_i, en={ }, arst=!\rst_ni, srst={ }

3.138.2. Extracting gate netlist of module `\edn' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_i, enabled by $abc$12327$abc$11611$u_reg.intg_err, asynchronously reset by !\rst_ni
Extracted 224 gates and 315 wires to a netlist network with 90 inputs and 2 outputs.

3.138.2.1. Executing ABC.

3.138.3. Extracting gate netlist of module `\edn' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_i, enabled by $abc$12553$abc$11601$u_edn_core.u_intr_hw_edn_cmd_req_done.new_event, asynchronously reset by !\rst_ni
Extracted 5 gates and 9 wires to a netlist network with 4 inputs and 2 outputs.

3.138.3.1. Executing ABC.

3.138.4. Extracting gate netlist of module `\edn' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_i, enabled by \csrng_cmd_i.csrng_rsp_ack, asynchronously reset by !\rst_ni
Extracted 2 gates and 4 wires to a netlist network with 2 inputs and 1 outputs.

3.138.4.1. Executing ABC.

3.138.5. Extracting gate netlist of module `\edn' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_i, enabled by $abc$12682$abc$11582$u_edn_core.u_intr_hw_edn_fatal_err.new_event, asynchronously reset by !\rst_ni
Extracted 11 gates and 20 wires to a netlist network with 9 inputs and 7 outputs.

3.138.5.1. Executing ABC.

3.138.6. Extracting gate netlist of module `\edn' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_i, enabled by $abc$12559$abc$11968$auto$opt_dff.cc:219:make_patterns_logic$9124, asynchronously reset by !\rst_ni
Extracted 14 gates and 18 wires to a netlist network with 4 inputs and 7 outputs.

3.138.6.1. Executing ABC.

3.138.7. Extracting gate netlist of module `\edn' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_i, enabled by $abc$12613$abc$11594$auto$opt_dff.cc:194:make_patterns_logic$9086, asynchronously reset by !\rst_ni
Extracted 4 gates and 6 wires to a netlist network with 2 inputs and 3 outputs.

3.138.7.1. Executing ABC.

3.138.8. Extracting gate netlist of module `\edn' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_i, enabled by $abc$12577$abc$11929$auto$opt_dff.cc:219:make_patterns_logic$9138, asynchronously reset by !\rst_ni
Extracted 35 gates and 46 wires to a netlist network with 10 inputs and 9 outputs.

3.138.8.1. Executing ABC.

3.138.9. Extracting gate netlist of module `\edn' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_i, enabled by $abc$12718$abc$11991$u_reg.u_reg_if.a_ack, asynchronously reset by !\rst_ni
Extracted 165 gates and 211 wires to a netlist network with 46 inputs and 33 outputs.

3.138.9.1. Executing ABC.

3.138.10. Extracting gate netlist of module `\edn' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_i, enabled by $abc$12620$abc$11838$auto$opt_dff.cc:219:make_patterns_logic$9152, asynchronously reset by !\rst_ni
Extracted 12 gates and 16 wires to a netlist network with 4 inputs and 5 outputs.

3.138.10.1. Executing ABC.

3.138.11. Extracting gate netlist of module `\edn' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_i, enabled by $abc$12635$abc$11914$auto$opt_dff.cc:219:make_patterns_logic$9131, asynchronously reset by !\rst_ni
Extracted 14 gates and 20 wires to a netlist network with 6 inputs and 4 outputs.

3.138.11.1. Executing ABC.

3.138.12. Extracting gate netlist of module `\edn' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_i, enabled by $abc$12650$abc$11852$auto$opt_dff.cc:219:make_patterns_logic$9159, asynchronously reset by !\rst_ni
Extracted 32 gates and 42 wires to a netlist network with 10 inputs and 9 outputs.

3.138.12.1. Executing ABC.

3.138.13. Extracting gate netlist of module `\edn' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_i, enabled by $abc$12700$abc$11891$auto$opt_dff.cc:219:make_patterns_logic$9145, asynchronously reset by !\rst_ni
Extracted 14 gates and 18 wires to a netlist network with 4 inputs and 7 outputs.

3.138.13.1. Executing ABC.

3.138.14. Extracting gate netlist of module `\edn' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_i, asynchronously reset by !\rst_ni
Extracted 135 gates and 184 wires to a netlist network with 48 inputs and 44 outputs.

3.138.14.1. Executing ABC.

yosys> abc -dff

3.139. Executing ABC pass (technology mapping using ABC).

3.139.1. Summary of detected clock domains:
  228 cells in clk=\clk_i, en=$abc$13065$abc$12327$abc$11611$u_reg.intg_err, arst=!\rst_ni, srst={ }
  5 cells in clk=\clk_i, en=$abc$13295$abc$12553$abc$11601$u_edn_core.u_intr_hw_edn_cmd_req_done.new_event, arst=!\rst_ni, srst={ }
  2 cells in clk=\clk_i, en=\csrng_cmd_i.csrng_rsp_ack, arst=!\rst_ni, srst={ }
  11 cells in clk=\clk_i, en=$abc$13305$abc$12682$abc$11582$u_edn_core.u_intr_hw_edn_fatal_err.new_event, arst=!\rst_ni, srst={ }
  15 cells in clk=\clk_i, en=$abc$13317$abc$12559$abc$11968$auto$opt_dff.cc:219:make_patterns_logic$9124, arst=!\rst_ni, srst={ }
  4 cells in clk=\clk_i, en=$abc$13332$abc$12613$abc$11594$auto$opt_dff.cc:194:make_patterns_logic$9086, arst=!\rst_ni, srst={ }
  33 cells in clk=\clk_i, en=$abc$13585$abc$12650$abc$11852$auto$opt_dff.cc:219:make_patterns_logic$9159, arst=!\rst_ni, srst={ }
  15 cells in clk=\clk_i, en=$abc$13619$abc$12700$abc$11891$auto$opt_dff.cc:219:make_patterns_logic$9145, arst=!\rst_ni, srst={ }
  30 cells in clk=\clk_i, en=$abc$13339$abc$12577$abc$11929$auto$opt_dff.cc:219:make_patterns_logic$9138, arst=!\rst_ni, srst={ }
  158 cells in clk=\clk_i, en=$abc$13373$abc$12718$abc$11991$u_reg.u_reg_if.a_ack, arst=!\rst_ni, srst={ }
  12 cells in clk=\clk_i, en=$abc$13557$abc$12620$abc$11838$auto$opt_dff.cc:219:make_patterns_logic$9152, arst=!\rst_ni, srst={ }
  14 cells in clk=\clk_i, en=$abc$13570$abc$12635$abc$11914$auto$opt_dff.cc:219:make_patterns_logic$9131, arst=!\rst_ni, srst={ }
  138 cells in clk=\clk_i, en={ }, arst=!\rst_ni, srst={ }

3.139.2. Extracting gate netlist of module `\edn' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_i, enabled by $abc$13065$abc$12327$abc$11611$u_reg.intg_err, asynchronously reset by !\rst_ni
Extracted 228 gates and 319 wires to a netlist network with 90 inputs and 2 outputs.

3.139.2.1. Executing ABC.

3.139.3. Extracting gate netlist of module `\edn' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_i, enabled by $abc$13295$abc$12553$abc$11601$u_edn_core.u_intr_hw_edn_cmd_req_done.new_event, asynchronously reset by !\rst_ni
Extracted 5 gates and 9 wires to a netlist network with 4 inputs and 2 outputs.

3.139.3.1. Executing ABC.

3.139.4. Extracting gate netlist of module `\edn' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_i, enabled by \csrng_cmd_i.csrng_rsp_ack, asynchronously reset by !\rst_ni
Extracted 2 gates and 4 wires to a netlist network with 2 inputs and 1 outputs.

3.139.4.1. Executing ABC.

3.139.5. Extracting gate netlist of module `\edn' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_i, enabled by $abc$13305$abc$12682$abc$11582$u_edn_core.u_intr_hw_edn_fatal_err.new_event, asynchronously reset by !\rst_ni
Extracted 11 gates and 20 wires to a netlist network with 9 inputs and 7 outputs.

3.139.5.1. Executing ABC.

3.139.6. Extracting gate netlist of module `\edn' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_i, enabled by $abc$13317$abc$12559$abc$11968$auto$opt_dff.cc:219:make_patterns_logic$9124, asynchronously reset by !\rst_ni
Extracted 15 gates and 20 wires to a netlist network with 5 inputs and 7 outputs.

3.139.6.1. Executing ABC.

3.139.7. Extracting gate netlist of module `\edn' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_i, enabled by $abc$13332$abc$12613$abc$11594$auto$opt_dff.cc:194:make_patterns_logic$9086, asynchronously reset by !\rst_ni
Extracted 4 gates and 6 wires to a netlist network with 2 inputs and 3 outputs.

3.139.7.1. Executing ABC.

3.139.8. Extracting gate netlist of module `\edn' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_i, enabled by $abc$13585$abc$12650$abc$11852$auto$opt_dff.cc:219:make_patterns_logic$9159, asynchronously reset by !\rst_ni
Extracted 33 gates and 45 wires to a netlist network with 12 inputs and 9 outputs.

3.139.8.1. Executing ABC.

3.139.9. Extracting gate netlist of module `\edn' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_i, enabled by $abc$13619$abc$12700$abc$11891$auto$opt_dff.cc:219:make_patterns_logic$9145, asynchronously reset by !\rst_ni
Extracted 15 gates and 20 wires to a netlist network with 5 inputs and 7 outputs.

3.139.9.1. Executing ABC.

3.139.10. Extracting gate netlist of module `\edn' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_i, enabled by $abc$13339$abc$12577$abc$11929$auto$opt_dff.cc:219:make_patterns_logic$9138, asynchronously reset by !\rst_ni
Extracted 30 gates and 35 wires to a netlist network with 5 inputs and 9 outputs.

3.139.10.1. Executing ABC.

3.139.11. Extracting gate netlist of module `\edn' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_i, enabled by $abc$13373$abc$12718$abc$11991$u_reg.u_reg_if.a_ack, asynchronously reset by !\rst_ni
Extracted 158 gates and 204 wires to a netlist network with 46 inputs and 33 outputs.

3.139.11.1. Executing ABC.

3.139.12. Extracting gate netlist of module `\edn' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_i, enabled by $abc$13557$abc$12620$abc$11838$auto$opt_dff.cc:219:make_patterns_logic$9152, asynchronously reset by !\rst_ni
Extracted 12 gates and 16 wires to a netlist network with 4 inputs and 5 outputs.

3.139.12.1. Executing ABC.

3.139.13. Extracting gate netlist of module `\edn' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_i, enabled by $abc$13570$abc$12635$abc$11914$auto$opt_dff.cc:219:make_patterns_logic$9131, asynchronously reset by !\rst_ni
Extracted 14 gates and 20 wires to a netlist network with 6 inputs and 4 outputs.

3.139.13.1. Executing ABC.

3.139.14. Extracting gate netlist of module `\edn' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_i, asynchronously reset by !\rst_ni
Extracted 138 gates and 191 wires to a netlist network with 52 inputs and 47 outputs.

3.139.14.1. Executing ABC.

yosys> opt_ffinv

3.140. Executing OPT_FFINV pass (push inverters through FFs).
Discovering LUTs.
Pushed 0 inverters.

yosys> opt_expr

3.141. Executing OPT_EXPR pass (perform const folding).
Optimizing module edn.
<suppressed ~1 debug messages>

yosys> opt_merge -nomux

3.142. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\edn'.
<suppressed ~15 debug messages>
Removed a total of 5 cells.

yosys> opt_muxtree

3.143. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \edn..
  Creating internal representation of mux trees.
  No muxes found in this module.
Removed 0 multiplexer ports.

yosys> opt_reduce

3.144. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \edn.
Performed a total of 0 changes.

yosys> opt_merge

3.145. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\edn'.
Removed a total of 0 cells.

yosys> opt_share

3.146. Executing OPT_SHARE pass.

yosys> opt_dff -nosdff -sat

3.147. Executing OPT_DFF pass (perform DFF optimizations).

yosys> opt_clean

3.148. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \edn..
Removed 0 unused cells and 3814 unused wires.
<suppressed ~173 debug messages>

yosys> opt_expr

3.149. Executing OPT_EXPR pass (perform const folding).
Optimizing module edn.
MAX OPT ITERATION = 1

yosys> bmuxmap

3.150. Executing BMUXMAP pass.

yosys> demuxmap

3.151. Executing DEMUXMAP pass.

yosys> clean_zerowidth

yosys> abc -script /tmp/yosys_M8lVnP/abc_tmp_1.scr

3.152. Executing ABC pass (technology mapping using ABC).

3.152.1. Extracting gate netlist of module `\edn' to `<abc-temp-dir>/input.blif'..
Extracted 586 gates and 739 wires to a netlist network with 153 inputs and 62 outputs.

3.152.1.1. Executing ABC.
DE:   #PIs = 153  #Luts =   170  Max Lvl =   6  Avg Lvl =   2.39  [   0.24 sec. at Pass 0]{firstMap}
DE:   #PIs = 153  #Luts =   140  Max Lvl =  11  Avg Lvl =   3.15  [   2.52 sec. at Pass 1]{initMapFlow}
DE:   #PIs = 153  #Luts =   134  Max Lvl =  12  Avg Lvl =   3.26  [   0.90 sec. at Pass 2]{map}
DE:   #PIs = 153  #Luts =   134  Max Lvl =  11  Avg Lvl =   3.06  [   1.32 sec. at Pass 3]{postMap}
DE:   #PIs = 153  #Luts =   134  Max Lvl =  10  Avg Lvl =   3.00  [   0.98 sec. at Pass 4]{map}
DE:   #PIs = 153  #Luts =   133  Max Lvl =  10  Avg Lvl =   3.08  [   1.72 sec. at Pass 5]{postMap}
DE:   #PIs = 153  #Luts =   131  Max Lvl =  10  Avg Lvl =   3.08  [   1.23 sec. at Pass 6]{map}
DE:   #PIs = 153  #Luts =   131  Max Lvl =  10  Avg Lvl =   3.08  [   2.16 sec. at Pass 7]{postMap}
DE:   #PIs = 153  #Luts =   131  Max Lvl =  10  Avg Lvl =   3.08  [   1.36 sec. at Pass 8]{map}
DE:   #PIs = 153  #Luts =   130  Max Lvl =  10  Avg Lvl =   2.97  [   1.42 sec. at Pass 9]{postMap}
DE:   #PIs = 153  #Luts =   128  Max Lvl =   9  Avg Lvl =   2.77  [   1.97 sec. at Pass 10]{map}
DE:   #PIs = 153  #Luts =   128  Max Lvl =   9  Avg Lvl =   2.77  [   1.68 sec. at Pass 11]{postMap}
DE:   #PIs = 153  #Luts =   128  Max Lvl =   9  Avg Lvl =   2.77  [   1.55 sec. at Pass 12]{map}
DE:   #PIs = 153  #Luts =   128  Max Lvl =   9  Avg Lvl =   2.77  [   1.37 sec. at Pass 13]{postMap}
DE:   #PIs = 153  #Luts =   127  Max Lvl =  10  Avg Lvl =   2.95  [   2.00 sec. at Pass 14]{pushMap}
DE:   #PIs = 153  #Luts =   127  Max Lvl =  10  Avg Lvl =   2.95  [   1.40 sec. at Pass 15]{map}
DE:   #PIs = 153  #Luts =   127  Max Lvl =  10  Avg Lvl =   2.95  [   1.92 sec. at Pass 16]{postMap}
DE:   #PIs = 153  #Luts =   127  Max Lvl =  10  Avg Lvl =   2.95  [   1.29 sec. at Pass 17]{map}
DE:   #PIs = 153  #Luts =   126  Max Lvl =   9  Avg Lvl =   2.76  [   1.24 sec. at Pass 18]{pushMap}
DE:   #PIs = 153  #Luts =   126  Max Lvl =   9  Avg Lvl =   2.76  [   1.41 sec. at Pass 19]{postMap}
DE:   #PIs = 153  #Luts =   126  Max Lvl =   9  Avg Lvl =   2.76  [   1.30 sec. at Pass 20]{map}
DE:   #PIs = 153  #Luts =   126  Max Lvl =   9  Avg Lvl =   2.76  [   2.19 sec. at Pass 21]{postMap}
DE:   #PIs = 153  #Luts =   126  Max Lvl =   9  Avg Lvl =   2.76  [   1.75 sec. at Pass 22]{pushMap}
DE:   #PIs = 153  #Luts =   126  Max Lvl =   9  Avg Lvl =   2.76  [   0.42 sec. at Pass 23]{finalMap}

yosys> opt_expr

3.153. Executing OPT_EXPR pass (perform const folding).
Optimizing module edn.

yosys> opt_merge -nomux

3.154. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\edn'.
Removed a total of 0 cells.

yosys> opt_muxtree

3.155. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \edn..
  Creating internal representation of mux trees.
  No muxes found in this module.
Removed 0 multiplexer ports.

yosys> opt_reduce

3.156. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \edn.
Performed a total of 0 changes.

yosys> opt_merge

3.157. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\edn'.
Removed a total of 0 cells.

yosys> opt_share

3.158. Executing OPT_SHARE pass.

yosys> opt_dff -nosdff -nodffe

3.159. Executing OPT_DFF pass (perform DFF optimizations).

yosys> opt_clean

3.160. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \edn..
Removed 0 unused cells and 737 unused wires.
<suppressed ~20 debug messages>

yosys> opt_expr

3.161. Executing OPT_EXPR pass (perform const folding).
Optimizing module edn.
MAX OPT ITERATION = 1

yosys> opt_ffinv

3.162. Executing OPT_FFINV pass (push inverters through FFs).
Discovering LUTs.
Pushed 2 inverters.

yosys> stat

3.163. Printing statistics.

=== edn ===

   Number of wires:               2472
   Number of wire bits:          13421
   Number of public wires:        2314
   Number of public wire bits:   13263
   Number of memories:               0
   Number of memory bits:            0
   Number of processes:              0
   Number of cells:                195
     $_DFFE_PN0P_                   36
     $_DFF_PN0_                     33
     $_DFF_PN1_                      2
     $lut                          124


yosys> shregmap -minlen 8 -maxlen 20

3.164. Executing SHREGMAP pass (map shift registers).
Converted 0 dff cells into 0 shift registers.

yosys> dfflegalize -cell $_DFF_?_ 0 -cell $_DFF_???_ 0 -cell $_DFFE_????_ 0 -cell $_DFFSR_???_ 0 -cell $_DFFSRE_????_ 0 -cell $_DLATCHSR_PPP_ 0

3.165. Executing DFFLEGALIZE pass (convert FFs to types supported by the target).

yosys> stat

3.166. Printing statistics.

=== edn ===

   Number of wires:               2472
   Number of wire bits:          13421
   Number of public wires:        2314
   Number of public wire bits:   13263
   Number of memories:               0
   Number of memory bits:            0
   Number of processes:              0
   Number of cells:                195
     $_DFFE_PN0P_                   36
     $_DFF_PN0_                     33
     $_DFF_PN1_                      2
     $lut                          124


yosys> techmap -map +/techmap.v -map +/rapidsilicon/genesis/ffs_map.v

3.167. Executing TECHMAP pass (map to technology primitives).

3.167.1. Executing Verilog-2005 frontend: /nfs_scratch/scratch/Vorak/aram/Workspace/Raptor/yosys_verific_rs/yosys/install/bin/../share/yosys/techmap.v
Parsing Verilog input from `/nfs_scratch/scratch/Vorak/aram/Workspace/Raptor/yosys_verific_rs/yosys/install/bin/../share/yosys/techmap.v' to AST representation.
Generating RTLIL representation for module `\_90_simplemap_bool_ops'.
Generating RTLIL representation for module `\_90_simplemap_reduce_ops'.
Generating RTLIL representation for module `\_90_simplemap_logic_ops'.
Generating RTLIL representation for module `\_90_simplemap_compare_ops'.
Generating RTLIL representation for module `\_90_simplemap_various'.
Generating RTLIL representation for module `\_90_simplemap_registers'.
Generating RTLIL representation for module `\_90_shift_ops_shr_shl_sshl_sshr'.
Generating RTLIL representation for module `\_90_shift_shiftx'.
Generating RTLIL representation for module `\_90_fa'.
Generating RTLIL representation for module `\_90_lcu'.
Generating RTLIL representation for module `\_90_alu'.
Generating RTLIL representation for module `\_90_macc'.
Generating RTLIL representation for module `\_90_alumacc'.
Generating RTLIL representation for module `\$__div_mod_u'.
Generating RTLIL representation for module `\$__div_mod_trunc'.
Generating RTLIL representation for module `\_90_div'.
Generating RTLIL representation for module `\_90_mod'.
Generating RTLIL representation for module `\$__div_mod_floor'.
Generating RTLIL representation for module `\_90_divfloor'.
Generating RTLIL representation for module `\_90_modfloor'.
Generating RTLIL representation for module `\_90_pow'.
Generating RTLIL representation for module `\_90_pmux'.
Generating RTLIL representation for module `\_90_demux'.
Generating RTLIL representation for module `\_90_lut'.
Successfully finished Verilog frontend.

3.167.2. Executing Verilog-2005 frontend: /nfs_scratch/scratch/Vorak/aram/Workspace/Raptor/yosys_verific_rs/yosys/install/bin/../share/yosys/rapidsilicon/genesis/ffs_map.v
Parsing Verilog input from `/nfs_scratch/scratch/Vorak/aram/Workspace/Raptor/yosys_verific_rs/yosys/install/bin/../share/yosys/rapidsilicon/genesis/ffs_map.v' to AST representation.
Generating RTLIL representation for module `\$_DFF_P_'.
Generating RTLIL representation for module `\$_DFF_PP0_'.
Generating RTLIL representation for module `\$_DFF_PN0_'.
Generating RTLIL representation for module `\$_DFF_PP1_'.
Generating RTLIL representation for module `\$_DFF_PN1_'.
Generating RTLIL representation for module `\$_DFFE_PP_'.
Generating RTLIL representation for module `\$_DFFE_PN_'.
Generating RTLIL representation for module `\$_DFFE_PP0P_'.
Generating RTLIL representation for module `\$_DFFE_PP0N_'.
Generating RTLIL representation for module `\$_DFFE_PN0P_'.
Generating RTLIL representation for module `\$_DFFE_PN0N_'.
Generating RTLIL representation for module `\$_DFFE_PP1P_'.
Generating RTLIL representation for module `\$_DFFE_PP1N_'.
Generating RTLIL representation for module `\$_DFFE_PN1P_'.
Generating RTLIL representation for module `\$_DFFE_PN1N_'.
Generating RTLIL representation for module `\$_DFFSR_PPP_'.
Generating RTLIL representation for module `\$_DFFSR_PNP_'.
Generating RTLIL representation for module `\$_DFFSR_PNN_'.
Generating RTLIL representation for module `\$_DFFSR_PPN_'.
Generating RTLIL representation for module `\$_DFFSR_NPP_'.
Generating RTLIL representation for module `\$_DFFSR_NNP_'.
Generating RTLIL representation for module `\$_DFFSR_NNN_'.
Generating RTLIL representation for module `\$_DFFSR_NPN_'.
Generating RTLIL representation for module `\$_DFFSRE_PPPP_'.
Generating RTLIL representation for module `\$_DFFSRE_PNPP_'.
Generating RTLIL representation for module `\$_DFFSRE_PPNP_'.
Generating RTLIL representation for module `\$_DFFSRE_PNNP_'.
Generating RTLIL representation for module `\$_DFFSRE_PPPN_'.
Generating RTLIL representation for module `\$_DFFSRE_PNPN_'.
Generating RTLIL representation for module `\$_DFFSRE_PPNN_'.
Generating RTLIL representation for module `\$_DFFSRE_PNNN_'.
Generating RTLIL representation for module `\$_DLATCHSR_PPP_'.
Generating RTLIL representation for module `\$_DLATCHSR_NPP_'.
Generating RTLIL representation for module `\$_DFF_N_'.
Generating RTLIL representation for module `\$_DFF_NP0_'.
Generating RTLIL representation for module `\$_DFF_NN0_'.
Generating RTLIL representation for module `\$_DFF_NP1_'.
Generating RTLIL representation for module `\$_DFF_NN1_'.
Generating RTLIL representation for module `\$_DFFE_NP_'.
Generating RTLIL representation for module `\$_DFFE_NN_'.
Generating RTLIL representation for module `\$_DFFE_NP0P_'.
Generating RTLIL representation for module `\$_DFFE_NP0N_'.
Generating RTLIL representation for module `\$_DFFE_NN0P_'.
Generating RTLIL representation for module `\$_DFFE_NN0N_'.
Generating RTLIL representation for module `\$_DFFE_NP1P_'.
Generating RTLIL representation for module `\$_DFFE_NP1N_'.
Generating RTLIL representation for module `\$_DFFE_NN1P_'.
Generating RTLIL representation for module `\$_DFFE_NN1N_'.
Generating RTLIL representation for module `\$_DFFSRE_NPPP_'.
Generating RTLIL representation for module `\$_DFFSRE_NNPP_'.
Generating RTLIL representation for module `\$_DFFSRE_NPNP_'.
Generating RTLIL representation for module `\$_DFFSRE_NNNP_'.
Generating RTLIL representation for module `\$_DFFSRE_NPPN_'.
Generating RTLIL representation for module `\$_DFFSRE_NNPN_'.
Generating RTLIL representation for module `\$_DFFSRE_NPNN_'.
Generating RTLIL representation for module `\$_DFFSRE_NNNN_'.
Generating RTLIL representation for module `\$__SHREG_DFF_P_'.
Generating RTLIL representation for module `\$_SDFF_PP0_'.
Generating RTLIL representation for module `\$_SDFF_PN0_'.
Generating RTLIL representation for module `\$_SDFF_NP0_'.
Generating RTLIL representation for module `\$_SDFF_NN0_'.
Generating RTLIL representation for module `\$_SDFF_PP1_'.
Generating RTLIL representation for module `\$_SDFF_PN1_'.
Generating RTLIL representation for module `\$_SDFF_NP1_'.
Generating RTLIL representation for module `\$_SDFF_NN1_'.
Successfully finished Verilog frontend.

3.167.3. Continuing TECHMAP pass.
Using template \$_DFFE_PN0P_ for cells of type $_DFFE_PN0P_.
Using extmapper simplemap for cells of type $lut.
Using template \$_DFF_PN1_ for cells of type $_DFF_PN1_.
Using template \$_DFF_PN0_ for cells of type $_DFF_PN0_.
No more expansions possible.
<suppressed ~331 debug messages>

yosys> opt_expr -mux_undef

3.168. Executing OPT_EXPR pass (perform const folding).
Optimizing module edn.
<suppressed ~2793 debug messages>

yosys> simplemap

3.169. Executing SIMPLEMAP pass (map simple cells to gate primitives).

yosys> opt_expr

3.170. Executing OPT_EXPR pass (perform const folding).
Optimizing module edn.

yosys> opt_merge

3.171. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\edn'.
<suppressed ~4152 debug messages>
Removed a total of 1384 cells.

yosys> opt_dff -nodffe -nosdff

3.172. Executing OPT_DFF pass (perform DFF optimizations).

yosys> opt_clean

3.173. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \edn..
Removed 0 unused cells and 510 unused wires.
<suppressed ~1 debug messages>

yosys> opt_expr

3.174. Executing OPT_EXPR pass (perform const folding).
Optimizing module edn.
<suppressed ~16 debug messages>

yosys> opt_merge -nomux

3.175. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\edn'.
Removed a total of 0 cells.

yosys> opt_muxtree

3.176. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \edn..
  Creating internal representation of mux trees.
  No muxes found in this module.
Removed 0 multiplexer ports.

yosys> opt_reduce

3.177. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \edn.
Performed a total of 0 changes.

yosys> opt_merge

3.178. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\edn'.
Removed a total of 0 cells.

yosys> opt_share

3.179. Executing OPT_SHARE pass.

yosys> opt_dff -nosdff -nodffe

3.180. Executing OPT_DFF pass (perform DFF optimizations).

yosys> opt_clean

3.181. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \edn..
Removed 0 unused cells and 3 unused wires.
<suppressed ~1 debug messages>

yosys> opt_expr

3.182. Executing OPT_EXPR pass (perform const folding).
Optimizing module edn.
MAX OPT ITERATION = 1

yosys> abc -script /tmp/yosys_M8lVnP/abc_tmp_2.scr

3.183. Executing ABC pass (technology mapping using ABC).

3.183.1. Extracting gate netlist of module `\edn' to `<abc-temp-dir>/input.blif'..
Extracted 819 gates and 972 wires to a netlist network with 151 inputs and 60 outputs.

3.183.1.1. Executing ABC.
DE:   #PIs = 151  #Luts =   129  Max Lvl =   7  Avg Lvl =   2.53  [   0.09 sec. at Pass 0]{firstMap}
DE:   #PIs = 151  #Luts =   128  Max Lvl =  11  Avg Lvl =   3.33  [   2.12 sec. at Pass 1]{initMapFlow}
DE:   #PIs = 151  #Luts =   126  Max Lvl =  11  Avg Lvl =   3.28  [   0.43 sec. at Pass 2]{map}
DE:   #PIs = 151  #Luts =   126  Max Lvl =  11  Avg Lvl =   3.28  [   1.32 sec. at Pass 3]{postMap}
DE:   #PIs = 151  #Luts =   126  Max Lvl =  11  Avg Lvl =   3.28  [   1.04 sec. at Pass 4]{map}
DE:   #PIs = 151  #Luts =   126  Max Lvl =   9  Avg Lvl =   2.92  [   1.96 sec. at Pass 5]{postMap}
DE:   #PIs = 151  #Luts =   126  Max Lvl =   9  Avg Lvl =   2.92  [   1.76 sec. at Pass 6]{map}
DE:   #PIs = 151  #Luts =   124  Max Lvl =  11  Avg Lvl =   3.27  [   2.19 sec. at Pass 7]{postMap}
DE:   #PIs = 151  #Luts =   124  Max Lvl =  11  Avg Lvl =   3.27  [   2.00 sec. at Pass 8]{map}
DE:   #PIs = 151  #Luts =   124  Max Lvl =  11  Avg Lvl =   3.27  [   1.77 sec. at Pass 9]{postMap}
DE:   #PIs = 151  #Luts =   124  Max Lvl =  11  Avg Lvl =   3.27  [   1.13 sec. at Pass 10]{map}
DE:   #PIs = 151  #Luts =   124  Max Lvl =  11  Avg Lvl =   3.27  [   2.07 sec. at Pass 11]{pushMap}
DE:   #PIs = 151  #Luts =   124  Max Lvl =  11  Avg Lvl =   3.27  [   0.48 sec. at Pass 12]{finalMap}

yosys> opt_expr

3.184. Executing OPT_EXPR pass (perform const folding).
Optimizing module edn.

yosys> opt_merge -nomux

3.185. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\edn'.
Removed a total of 0 cells.

yosys> opt_muxtree

3.186. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \edn..
  Creating internal representation of mux trees.
  No muxes found in this module.
Removed 0 multiplexer ports.

yosys> opt_reduce

3.187. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \edn.
Performed a total of 0 changes.

yosys> opt_merge

3.188. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\edn'.
Removed a total of 0 cells.

yosys> opt_share

3.189. Executing OPT_SHARE pass.

yosys> opt_dff -nosdff -nodffe

3.190. Executing OPT_DFF pass (perform DFF optimizations).

yosys> opt_clean

3.191. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \edn..
Removed 0 unused cells and 681 unused wires.
<suppressed ~1 debug messages>

yosys> opt_expr

3.192. Executing OPT_EXPR pass (perform const folding).
Optimizing module edn.
MAX OPT ITERATION = 1

yosys> hierarchy -check

3.193. Executing HIERARCHY pass (managing design hierarchy).

3.193.1. Analyzing design hierarchy..
Top module:  \edn

3.193.2. Analyzing design hierarchy..
Top module:  \edn
Removed 0 unused modules.

yosys> stat

3.194. Printing statistics.

=== edn ===

   Number of wires:               2470
   Number of wire bits:          13419
   Number of public wires:        2314
   Number of public wire bits:   13263
   Number of memories:               0
   Number of memory bits:            0
   Number of processes:              0
   Number of cells:                195
     $lut                          124
     dffsre                         71


yosys> opt_clean -purge

3.195. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \edn..
Removed 0 unused cells and 2227 unused wires.
<suppressed ~2227 debug messages>

yosys> write_verilog -noattr -nohex synthesized.v

3.196. Executing Verilog backend.
Dumping module `\edn'.

Warnings: 192 unique messages, 192 total
End of script. Logfile hash: 263df3e436, CPU: user 8.64s system 0.12s, MEM: 66.11 MB peak
Yosys 0.18+10 (git sha1 7361c89db, gcc 9.4.0-1ubuntu1~20.04.1 -fPIC -Os)
Time spent: 95% 6x abc (156 sec), 1% 25x opt_clean (2 sec), ...
real 83.72
user 150.21
sys 14.47
