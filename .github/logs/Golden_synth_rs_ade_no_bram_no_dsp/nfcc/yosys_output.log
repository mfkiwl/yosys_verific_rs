
 /----------------------------------------------------------------------------\
 |                                                                            |
 |  yosys -- Yosys Open SYnthesis Suite                                       |
 |                                                                            |
 |  Copyright (C) 2012 - 2020  Claire Xenia Wolf <claire@yosyshq.com>         |
 |                                                                            |
 |  Permission to use, copy, modify, and/or distribute this software for any  |
 |  purpose with or without fee is hereby granted, provided that the above    |
 |  copyright notice and this permission notice appear in all copies.         |
 |                                                                            |
 |  THE SOFTWARE IS PROVIDED "AS IS" AND THE AUTHOR DISCLAIMS ALL WARRANTIES  |
 |  WITH REGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF          |
 |  MERCHANTABILITY AND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR   |
 |  ANY SPECIAL, DIRECT, INDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES    |
 |  WHATSOEVER RESULTING FROM LOSS OF USE, DATA OR PROFITS, WHETHER IN AN     |
 |  ACTION OF CONTRACT, NEGLIGENCE OR OTHER TORTIOUS ACTION, ARISING OUT OF   |
 |  OR IN CONNECTION WITH THE USE OR PERFORMANCE OF THIS SOFTWARE.            |
 |                                                                            |
 \----------------------------------------------------------------------------/

 Yosys-Verific 0.0.92
 Yosys 0.18+10 (git sha1 7361c89db, gcc 9.4.0-1ubuntu1~20.04.1 -fPIC -Os)


-- Executing script file `yosys.ys' --
echo on

yosys> plugin -i synth-rs

yosys> read -verific

yosys> read -incdir .

yosys> verific -vlog-incdir .

1. Executing VERIFIC (loading SystemVerilog and VHDL designs using Verific).
Built with Verific May22_SW_Release, released at Wed Jun  1 05:39:28 2022.

yosys> verilog_defaults -add -I.

yosys> read -vhdl kasumi.vhdl sbox.vhdl keyschedule.vhdl

yosys> verific -vhdl kasumi.vhdl sbox.vhdl keyschedule.vhdl

2. Executing VERIFIC (loading SystemVerilog and VHDL designs using Verific).
Built with Verific May22_SW_Release, released at Wed Jun  1 05:39:28 2022.
VERIFIC-INFO [VHDL-1504] default VHDL library search path is now "/nfs_scratch/scratch/Vorak/aram/Workspace/Raptor/yosys_verific_rs/yosys/install/share/yosys/verific/vhdl_vdbs_2008"
VERIFIC-COMMENT [VHDL-1481] Analyzing VHDL file 'kasumi.vhdl'
VERIFIC-COMMENT [VHDL-1493] Restoring VHDL unit 'ieee.std_logic_1164' from file '/nfs_scratch/scratch/Vorak/aram/Workspace/Raptor/yosys_verific_rs/yosys/install/share/yosys/verific/vhdl_vdbs_2008/ieee/std_logic_1164.vdb'
VERIFIC-COMMENT [VHDL-1493] Restoring VHDL unit 'std.standard' from file '/nfs_scratch/scratch/Vorak/aram/Workspace/Raptor/yosys_verific_rs/yosys/install/share/yosys/verific/vhdl_vdbs_2008/std/standard.vdb'
VERIFIC-COMMENT [VHDL-1493] Restoring VHDL unit 'std.textio' from file '/nfs_scratch/scratch/Vorak/aram/Workspace/Raptor/yosys_verific_rs/yosys/install/share/yosys/verific/vhdl_vdbs_2008/std/textio.vdb'
VERIFIC-COMMENT [VHDL-1493] Restoring VHDL unit 'ieee.std_logic_unsigned' from file '/nfs_scratch/scratch/Vorak/aram/Workspace/Raptor/yosys_verific_rs/yosys/install/share/yosys/verific/vhdl_vdbs_2008/ieee/std_logic_unsigned.vdb'
VERIFIC-COMMENT [VHDL-1493] Restoring VHDL unit 'ieee.std_logic_arith' from file '/nfs_scratch/scratch/Vorak/aram/Workspace/Raptor/yosys_verific_rs/yosys/install/share/yosys/verific/vhdl_vdbs_2008/ieee/std_logic_arith.vdb'
VERIFIC-INFO [VHDL-1012] kasumi.vhdl:34: analyzing entity 'kasumi'
VERIFIC-INFO [VHDL-1010] kasumi.vhdl:58: analyzing architecture 'phy'
VERIFIC-COMMENT [VHDL-1481] Analyzing VHDL file 'sbox.vhdl'
VERIFIC-INFO [VHDL-1012] sbox.vhdl:34: analyzing entity 'sbox'
VERIFIC-INFO [VHDL-1010] sbox.vhdl:43: analyzing architecture 'phy'
VERIFIC-COMMENT [VHDL-1481] Analyzing VHDL file 'keyschedule.vhdl'
VERIFIC-INFO [VHDL-1012] keyschedule.vhdl:34: analyzing entity 'keyschedule'
VERIFIC-INFO [VHDL-1010] keyschedule.vhdl:49: analyzing architecture 'phy'

yosys> synth_rs -top kasumi -tech genesis -goal area -de -no_dsp -no_bram -verilog synthesized.v

3. Executing synth_rs pass: v0.4.79

yosys> read_verilog -lib -specify -nomem2reg +/rapidsilicon/common/cells_sim.v +/rapidsilicon/genesis/cells_sim.v +/rapidsilicon/genesis/dsp_sim.v

3.1. Executing Verilog-2005 frontend: /nfs_scratch/scratch/Vorak/aram/Workspace/Raptor/yosys_verific_rs/yosys/install/bin/../share/yosys/rapidsilicon/common/cells_sim.v
Parsing Verilog input from `/nfs_scratch/scratch/Vorak/aram/Workspace/Raptor/yosys_verific_rs/yosys/install/bin/../share/yosys/rapidsilicon/common/cells_sim.v' to AST representation.
Generating RTLIL representation for module `\inv'.
Generating RTLIL representation for module `\buff'.
Generating RTLIL representation for module `\logic_0'.
Generating RTLIL representation for module `\logic_1'.
Generating RTLIL representation for module `\gclkbuff'.
Successfully finished Verilog frontend.

3.2. Executing Verilog-2005 frontend: /nfs_scratch/scratch/Vorak/aram/Workspace/Raptor/yosys_verific_rs/yosys/install/bin/../share/yosys/rapidsilicon/genesis/cells_sim.v
Parsing Verilog input from `/nfs_scratch/scratch/Vorak/aram/Workspace/Raptor/yosys_verific_rs/yosys/install/bin/../share/yosys/rapidsilicon/genesis/cells_sim.v' to AST representation.
Generating RTLIL representation for module `\dffsre'.
Generating RTLIL representation for module `\dffnsre'.
Generating RTLIL representation for module `\latchsre'.
Generating RTLIL representation for module `\latchnsre'.
Generating RTLIL representation for module `\io_scff'.
Generating RTLIL representation for module `\scff'.
Generating RTLIL representation for module `\sh_dff'.
Generating RTLIL representation for module `\adder_carry'.
Generating RTLIL representation for module `\sdffr'.
Generating RTLIL representation for module `\sdffs'.
Generating RTLIL representation for module `\TDP_BRAM18'.
Generating RTLIL representation for module `\TDP36K'.
Generating RTLIL representation for module `\BRAM2x18_TDP'.
Generating RTLIL representation for module `\BRAM2x18_SDP'.
Generating RTLIL representation for module `\_$_mem_v2_asymmetric'.
Successfully finished Verilog frontend.

3.3. Executing Verilog-2005 frontend: /nfs_scratch/scratch/Vorak/aram/Workspace/Raptor/yosys_verific_rs/yosys/install/bin/../share/yosys/rapidsilicon/genesis/dsp_sim.v
Parsing Verilog input from `/nfs_scratch/scratch/Vorak/aram/Workspace/Raptor/yosys_verific_rs/yosys/install/bin/../share/yosys/rapidsilicon/genesis/dsp_sim.v' to AST representation.
Generating RTLIL representation for module `\RS_DSP1'.
Generating RTLIL representation for module `\RS_DSP2'.
Generating RTLIL representation for module `\RS_DSP2_MULT'.
Generating RTLIL representation for module `\RS_DSP2_MULT_REGIN'.
Generating RTLIL representation for module `\RS_DSP2_MULT_REGOUT'.
Generating RTLIL representation for module `\RS_DSP2_MULT_REGIN_REGOUT'.
Generating RTLIL representation for module `\RS_DSP2_MULTADD'.
Generating RTLIL representation for module `\RS_DSP2_MULTADD_REGIN'.
Generating RTLIL representation for module `\RS_DSP2_MULTADD_REGOUT'.
Generating RTLIL representation for module `\RS_DSP2_MULTADD_REGIN_REGOUT'.
Generating RTLIL representation for module `\RS_DSP2_MULTACC'.
Generating RTLIL representation for module `\RS_DSP2_MULTACC_REGIN'.
Generating RTLIL representation for module `\RS_DSP2_MULTACC_REGOUT'.
Generating RTLIL representation for module `\RS_DSP2_MULTACC_REGIN_REGOUT'.
Generating RTLIL representation for module `\dsp_t1_20x18x64_cfg_ports'.
Generating RTLIL representation for module `\dsp_t1_10x9x32_cfg_ports'.
Generating RTLIL representation for module `\dsp_t1_sim_cfg_ports'.
Generating RTLIL representation for module `\RS_DSP3'.
Generating RTLIL representation for module `\RS_DSP3_MULT'.
Generating RTLIL representation for module `\RS_DSP3_MULT_REGIN'.
Generating RTLIL representation for module `\RS_DSP3_MULT_REGOUT'.
Generating RTLIL representation for module `\RS_DSP3_MULT_REGIN_REGOUT'.
Generating RTLIL representation for module `\RS_DSP3_MULTADD'.
Generating RTLIL representation for module `\RS_DSP3_MULTADD_REGIN'.
Generating RTLIL representation for module `\RS_DSP3_MULTADD_REGOUT'.
Generating RTLIL representation for module `\RS_DSP3_MULTADD_REGIN_REGOUT'.
Generating RTLIL representation for module `\RS_DSP3_MULTACC'.
Generating RTLIL representation for module `\RS_DSP3_MULTACC_REGIN'.
Generating RTLIL representation for module `\RS_DSP3_MULTACC_REGOUT'.
Generating RTLIL representation for module `\RS_DSP3_MULTACC_REGIN_REGOUT'.
Generating RTLIL representation for module `\dsp_t1_20x18x64_cfg_params'.
Generating RTLIL representation for module `\dsp_t1_10x9x32_cfg_params'.
Generating RTLIL representation for module `\dsp_t1_sim_cfg_params'.
Successfully finished Verilog frontend.

yosys> hierarchy -check -top kasumi

3.4. Executing HIERARCHY pass (managing design hierarchy).
VERIFIC-INFO [VHDL-1067] kasumi.vhdl:34: processing 'kasumi(phy)'
VERIFIC-INFO [VHDL-1067] sbox.vhdl:34: processing 'sbox(phy)'
VERIFIC-INFO [VHDL-1067] keyschedule.vhdl:34: processing 'keyschedule(phy)'
Importing module kasumi.
Importing module keyschedule(phy).
Importing module sbox(phy).

3.4.1. Analyzing design hierarchy..
Top module:  \kasumi
Used module:     \keyschedule(phy)
Used module:     \sbox(phy)

3.4.2. Analyzing design hierarchy..
Top module:  \kasumi
Used module:     \keyschedule(phy)
Used module:     \sbox(phy)
Removed 0 unused modules.

yosys> proc

3.5. Executing PROC pass (convert processes to netlists).

yosys> proc_clean

3.5.1. Executing PROC_CLEAN pass (remove empty switches from decision trees).
Cleaned up 0 empty switches.

yosys> proc_rmdead

3.5.2. Executing PROC_RMDEAD pass (remove dead branches from decision trees).
Removed a total of 0 dead cases.

yosys> proc_prune

3.5.3. Executing PROC_PRUNE pass (remove redundant assignments in processes).
Removed 0 redundant assignments.
Promoted 0 assignments to connections.

yosys> proc_init

3.5.4. Executing PROC_INIT pass (extract init attributes).

yosys> proc_arst

3.5.5. Executing PROC_ARST pass (detect async resets in processes).

yosys> proc_rom

3.5.6. Executing PROC_ROM pass (convert switches to ROMs).
Converted 0 switches.

yosys> proc_mux

3.5.7. Executing PROC_MUX pass (convert decision trees to multiplexers).

yosys> proc_dlatch

3.5.8. Executing PROC_DLATCH pass (convert process syncs to latches).

yosys> proc_dff

3.5.9. Executing PROC_DFF pass (convert process syncs to FFs).

yosys> proc_memwr

3.5.10. Executing PROC_MEMWR pass (convert process memory writes to cells).

yosys> proc_clean

3.5.11. Executing PROC_CLEAN pass (remove empty switches from decision trees).
Cleaned up 0 empty switches.

yosys> opt_expr -keepdc

3.5.12. Executing OPT_EXPR pass (perform const folding).
Optimizing module sbox(phy).
Optimizing module keyschedule(phy).
<suppressed ~3 debug messages>
Optimizing module kasumi.
<suppressed ~3 debug messages>

yosys> bmuxmap

3.6. Executing BMUXMAP pass.

yosys> demuxmap

3.7. Executing DEMUXMAP pass.

yosys> clean_zerowidth

yosys> flatten

3.8. Executing FLATTEN pass (flatten design).
Deleting now unused module keyschedule(phy).
Deleting now unused module sbox(phy).
<suppressed ~3 debug messages>

yosys> bmuxmap

3.9. Executing BMUXMAP pass.

yosys> demuxmap

3.10. Executing DEMUXMAP pass.

yosys> clean_zerowidth

yosys> tribuf -logic -formal

3.11. Executing TRIBUF pass.

yosys> deminout

3.12. Executing DEMINOUT pass (demote inout ports to input or output).

yosys> opt_expr

3.13. Executing OPT_EXPR pass (perform const folding).
Optimizing module kasumi.

yosys> opt_clean

3.14. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \kasumi..
Removed 0 unused cells and 119 unused wires.
<suppressed ~63 debug messages>

yosys> check

3.15. Executing CHECK pass (checking for obvious problems).
Checking module kasumi...
Warning: found logic loop in module kasumi:
    cell $verific$and_171$kasumi.vhdl:188$149 ($and)
    cell $verific$or_31$kasumi.vhdl:188$146 ($or)
    cell $verific$or_33$kasumi.vhdl:188$148 ($or)
    wire $verific$n441$30 [0]
    wire $verific$n447$32 [0]
    wire \c3b_cr [1]
Warning: found logic loop in module kasumi:
    cell $verific$and_171$kasumi.vhdl:188$149 ($and)
    cell $verific$or_31$kasumi.vhdl:188$146 ($or)
    cell $verific$or_33$kasumi.vhdl:188$148 ($or)
    wire $verific$n441$30 [1]
    wire $verific$n447$32 [0]
    wire \c3b_cr [1]
Warning: found logic loop in module kasumi:
    cell $verific$and_171$kasumi.vhdl:188$149 ($and)
    cell $verific$or_31$kasumi.vhdl:188$146 ($or)
    cell $verific$or_33$kasumi.vhdl:188$148 ($or)
    wire $verific$n444$31 [0]
    wire $verific$n447$32 [0]
    wire \c3b_cr [1]
Warning: found logic loop in module kasumi:
    cell $verific$and_171$kasumi.vhdl:188$149 ($and)
    cell $verific$or_31$kasumi.vhdl:188$146 ($or)
    cell $verific$or_33$kasumi.vhdl:188$148 ($or)
    wire $verific$n444$31 [1]
    wire $verific$n447$32 [0]
    wire \c3b_cr [1]
Warning: found logic loop in module kasumi:
    cell $verific$and_32$kasumi.vhdl:188$147 ($and)
    cell $verific$or_33$kasumi.vhdl:188$148 ($or)
    wire $verific$n450$33 [0]
    wire \c3b_cr [1]
Warning: found logic loop in module kasumi:
    cell $verific$xor_168$kasumi.vhdl:311$200 ($xor)
    wire \FI [0]
Warning: found logic loop in module kasumi:
    cell $verific$xor_168$kasumi.vhdl:311$200 ($xor)
    wire \FI [1]
Warning: found logic loop in module kasumi:
    cell $verific$xor_168$kasumi.vhdl:311$200 ($xor)
    wire \FI [2]
Warning: found logic loop in module kasumi:
    cell $verific$xor_168$kasumi.vhdl:311$200 ($xor)
    wire \FI [3]
Warning: found logic loop in module kasumi:
    cell $verific$xor_168$kasumi.vhdl:311$200 ($xor)
    wire \FI [4]
Warning: found logic loop in module kasumi:
    cell $verific$xor_168$kasumi.vhdl:311$200 ($xor)
    wire \FI [5]
Warning: found logic loop in module kasumi:
    cell $verific$xor_168$kasumi.vhdl:311$200 ($xor)
    wire \FI [6]
Found and reported 12 problems.

yosys> opt_expr

3.16. Executing OPT_EXPR pass (perform const folding).
Optimizing module kasumi.

yosys> opt_merge -nomux

3.17. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\kasumi'.
<suppressed ~3 debug messages>
Removed a total of 1 cells.

yosys> opt_muxtree

3.18. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \kasumi..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
    dead port 1/2 on $mux $verific$mux_95$kasumi.vhdl:269$173.
    dead port 1/2 on $mux $verific$mux_96$kasumi.vhdl:269$174.
Removed 2 multiplexer ports.
<suppressed ~17 debug messages>

yosys> opt_reduce

3.19. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \kasumi.
Performed a total of 0 changes.

yosys> opt_merge

3.20. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\kasumi'.
<suppressed ~24 debug messages>
Removed a total of 8 cells.

yosys> opt_share

3.21. Executing OPT_SHARE pass.

yosys> opt_dff -nosdff -nodffe

3.22. Executing OPT_DFF pass (perform DFF optimizations).
Removing never-active async load on $verific$rnd_reg$kasumi.vhdl:341$218 ($aldff) from module kasumi.
Removing never-active async load on $verific$ireg1_reg$kasumi.vhdl:329$209 ($aldff) from module kasumi.
Removing never-active async load on $verific$iptt_reg$kasumi.vhdl:173$139 ($aldff) from module kasumi.
Removing never-active async load on $verific$ipt_reg$kasumi.vhdl:173$138 ($aldff) from module kasumi.
Removing never-active async load on $verific$c3b_reg$kasumi.vhdl:198$154 ($aldff) from module kasumi.
Removing never-active async load on $verific$FL_reg$kasumi.vhdl:287$187 ($aldff) from module kasumi.
Removing never-active async load on $flatten\roundkey.$verific$keyreg2_reg$keyschedule.vhdl:111$283 ($aldff) from module kasumi.
Removing never-active async load on $flatten\roundkey.$verific$keyreg1_reg$keyschedule.vhdl:111$282 ($aldff) from module kasumi.

yosys> opt_clean

3.23. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \kasumi..
Removed 0 unused cells and 3 unused wires.
<suppressed ~1 debug messages>

yosys> opt_expr

3.24. Executing OPT_EXPR pass (perform const folding).
Optimizing module kasumi.
<suppressed ~2 debug messages>

yosys> opt_muxtree

3.25. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \kasumi..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Removed 0 multiplexer ports.
<suppressed ~19 debug messages>

yosys> opt_reduce

3.26. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \kasumi.
Performed a total of 0 changes.

yosys> opt_merge

3.27. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\kasumi'.
Removed a total of 0 cells.

yosys> opt_share

3.28. Executing OPT_SHARE pass.

yosys> opt_dff -nosdff -nodffe

3.29. Executing OPT_DFF pass (perform DFF optimizations).

yosys> opt_clean

3.30. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \kasumi..

yosys> opt_expr

3.31. Executing OPT_EXPR pass (perform const folding).
Optimizing module kasumi.
MAX OPT ITERATION = 2

yosys> fsm -encoding binary

3.32. Executing FSM pass (extract and optimize FSM).

yosys> fsm_detect

3.32.1. Executing FSM_DETECT pass (finding FSMs in design).

yosys> fsm_extract

3.32.2. Executing FSM_EXTRACT pass (extracting FSM from design).

yosys> fsm_opt

3.32.3. Executing FSM_OPT pass (simple optimizations of FSMs).

yosys> opt_clean

3.32.4. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \kasumi..

yosys> fsm_opt

3.32.5. Executing FSM_OPT pass (simple optimizations of FSMs).

yosys> fsm_recode -encoding binary

3.32.6. Executing FSM_RECODE pass (re-assigning FSM state encoding).

yosys> fsm_info

3.32.7. Executing FSM_INFO pass (dumping all available information on FSM cells).

yosys> fsm_map

3.32.8. Executing FSM_MAP pass (mapping FSMs to basic logic).

yosys> opt_expr

3.33. Executing OPT_EXPR pass (perform const folding).
Optimizing module kasumi.

yosys> opt_merge -nomux

3.34. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\kasumi'.
Removed a total of 0 cells.

yosys> opt_muxtree

3.35. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \kasumi..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Removed 0 multiplexer ports.
<suppressed ~19 debug messages>

yosys> opt_reduce

3.36. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \kasumi.
Performed a total of 0 changes.

yosys> opt_merge

3.37. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\kasumi'.
Removed a total of 0 cells.

yosys> opt_share

3.38. Executing OPT_SHARE pass.

yosys> opt_dff -nosdff -sat

3.39. Executing OPT_DFF pass (perform DFF optimizations).
Adding EN signal on $verific$rnd_reg$kasumi.vhdl:341$218 ($dff) from module kasumi (D = $verific$n2371$109, Q = \rnd).
Adding EN signal on $verific$ireg1_reg$kasumi.vhdl:329$209 ($dff) from module kasumi (D = $verific$n2222$103, Q = \ireg1).
Adding EN signal on $verific$even_reg$kasumi.vhdl:184$145 ($dff) from module kasumi (D = $verific$n432$13, Q = \even).
Adding EN signal on $flatten\roundkey.$verific$keyreg2_reg$keyschedule.vhdl:111$283 ($dff) from module kasumi (D = $flatten\roundkey.$verific$n1441$241, Q = \roundkey.keyreg2).
Adding EN signal on $flatten\roundkey.$verific$keyreg1_reg$keyschedule.vhdl:111$282 ($dff) from module kasumi (D = $flatten\roundkey.$verific$n1054$238, Q = \roundkey.keyreg1).

yosys> opt_clean

3.40. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \kasumi..

yosys> opt_expr

3.41. Executing OPT_EXPR pass (perform const folding).
Optimizing module kasumi.
<suppressed ~5 debug messages>

yosys> opt_muxtree

3.42. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \kasumi..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Removed 0 multiplexer ports.
<suppressed ~19 debug messages>

yosys> opt_reduce

3.43. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \kasumi.
Performed a total of 0 changes.

yosys> opt_merge

3.44. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\kasumi'.
<suppressed ~3 debug messages>
Removed a total of 1 cells.

yosys> opt_share

3.45. Executing OPT_SHARE pass.

yosys> opt_dff -nosdff -sat

3.46. Executing OPT_DFF pass (perform DFF optimizations).

yosys> opt_clean

3.47. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \kasumi..
Removed 0 unused cells and 1 unused wires.
<suppressed ~1 debug messages>

yosys> opt_expr

3.48. Executing OPT_EXPR pass (perform const folding).
Optimizing module kasumi.

yosys> opt_muxtree

3.49. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \kasumi..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Removed 0 multiplexer ports.
<suppressed ~19 debug messages>

yosys> opt_reduce

3.50. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \kasumi.
Performed a total of 0 changes.

yosys> opt_merge

3.51. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\kasumi'.
Removed a total of 0 cells.

yosys> opt_share

3.52. Executing OPT_SHARE pass.

yosys> opt_dff -nosdff -sat

3.53. Executing OPT_DFF pass (perform DFF optimizations).

yosys> opt_clean

3.54. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \kasumi..

yosys> opt_expr

3.55. Executing OPT_EXPR pass (perform const folding).
Optimizing module kasumi.
MAX OPT ITERATION = 3

yosys> wreduce -keepdc

3.56. Executing WREDUCE pass (reducing word size of cells).
Removed top 1 bits (of 2) from port B of cell kasumi.$verific$and_32$kasumi.vhdl:188$147 ($and).
Removed top 2 bits (of 3) from port A of cell kasumi.$verific$xor_36$kasumi.vhdl:196$150 ($xor).
Removed top 2 bits (of 9) from port A of cell kasumi.$verific$xor_119$kasumi.vhdl:305$192 ($xor).
Removed top 1 bits (of 2) from port A of cell kasumi.$verific$xor_144$kasumi.vhdl:339$213 ($xor).

yosys> peepopt

3.57. Executing PEEPOPT pass (run peephole optimizers).

yosys> opt_clean

3.58. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \kasumi..

yosys> bmuxmap

3.59. Executing BMUXMAP pass.

yosys> demuxmap

3.60. Executing DEMUXMAP pass.

yosys> clean_zerowidth

yosys> alumacc

3.61. Executing ALUMACC pass (create $alu and $macc cells).
Extracting $alu and $macc cells in module kasumi:
  created 0 $alu and 0 $macc cells.

yosys> opt_expr

3.62. Executing OPT_EXPR pass (perform const folding).
Optimizing module kasumi.

yosys> opt_merge -nomux

3.63. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\kasumi'.
Removed a total of 0 cells.

yosys> opt_muxtree

3.64. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \kasumi..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Removed 0 multiplexer ports.
<suppressed ~19 debug messages>

yosys> opt_reduce

3.65. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \kasumi.
Performed a total of 0 changes.

yosys> opt_merge

3.66. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\kasumi'.
Removed a total of 0 cells.

yosys> opt_share

3.67. Executing OPT_SHARE pass.

yosys> opt_dff -nosdff -nodffe

3.68. Executing OPT_DFF pass (perform DFF optimizations).

yosys> opt_clean

3.69. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \kasumi..

yosys> opt_expr

3.70. Executing OPT_EXPR pass (perform const folding).
Optimizing module kasumi.
MAX OPT ITERATION = 1

yosys> stat

3.71. Printing statistics.

=== kasumi ===

   Number of wires:                381
   Number of wire bits:           3995
   Number of public wires:          77
   Number of public wire bits:    1360
   Number of memories:               0
   Number of memory bits:            0
   Number of processes:              0
   Number of cells:                358
     $and                          146
     $dff                            7
     $dffe                           5
     $eq                             3
     $mux                           59
     $not                            5
     $or                             4
     $reduce_bool                    4
     $xor                          125


yosys> memory -nomap

3.72. Executing MEMORY pass.

yosys> opt_mem

3.72.1. Executing OPT_MEM pass (optimize memories).
Performed a total of 0 transformations.

yosys> opt_mem_priority

3.72.2. Executing OPT_MEM_PRIORITY pass (removing unnecessary memory write priority relations).
Performed a total of 0 transformations.

yosys> opt_mem_feedback

3.72.3. Executing OPT_MEM_FEEDBACK pass (finding memory read-to-write feedback paths).

yosys> memory_bmux2rom

3.72.4. Executing MEMORY_BMUX2ROM pass (converting muxes to ROMs).

yosys> memory_dff

3.72.5. Executing MEMORY_DFF pass (merging $dff cells to $memrd).

yosys> opt_clean

3.72.6. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \kasumi..

yosys> memory_share

3.72.7. Executing MEMORY_SHARE pass (consolidating $memrd/$memwr cells).

yosys> opt_mem_widen

3.72.8. Executing OPT_MEM_WIDEN pass (optimize memories where all ports are wide).
Performed a total of 0 transformations.

yosys> opt_clean

3.72.9. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \kasumi..

yosys> memory_collect

3.72.10. Executing MEMORY_COLLECT pass (generating $mem cells).

yosys> stat

3.73. Printing statistics.

=== kasumi ===

   Number of wires:                381
   Number of wire bits:           3995
   Number of public wires:          77
   Number of public wire bits:    1360
   Number of memories:               0
   Number of memory bits:            0
   Number of processes:              0
   Number of cells:                358
     $and                          146
     $dff                            7
     $dffe                           5
     $eq                             3
     $mux                           59
     $not                            5
     $or                             4
     $reduce_bool                    4
     $xor                          125


yosys> muxpack

3.74. Executing MUXPACK pass ($mux cell cascades to $pmux).
Converted 0 (p)mux cells into 0 pmux cells.
<suppressed ~59 debug messages>

yosys> opt_clean

3.75. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \kasumi..

yosys> pmuxtree

3.76. Executing PMUXTREE pass.

yosys> muxpack

3.77. Executing MUXPACK pass ($mux cell cascades to $pmux).
Converted 0 (p)mux cells into 0 pmux cells.
<suppressed ~59 debug messages>

yosys> memory_map

3.78. Executing MEMORY_MAP pass (converting memories to logic and flip-flops).

yosys> stat

3.79. Printing statistics.

=== kasumi ===

   Number of wires:                381
   Number of wire bits:           3995
   Number of public wires:          77
   Number of public wire bits:    1360
   Number of memories:               0
   Number of memory bits:            0
   Number of processes:              0
   Number of cells:                358
     $and                          146
     $dff                            7
     $dffe                           5
     $eq                             3
     $mux                           59
     $not                            5
     $or                             4
     $reduce_bool                    4
     $xor                          125


yosys> techmap -map +/techmap.v -map +/rapidsilicon/genesis/arith_map.v

3.80. Executing TECHMAP pass (map to technology primitives).

3.80.1. Executing Verilog-2005 frontend: /nfs_scratch/scratch/Vorak/aram/Workspace/Raptor/yosys_verific_rs/yosys/install/bin/../share/yosys/techmap.v
Parsing Verilog input from `/nfs_scratch/scratch/Vorak/aram/Workspace/Raptor/yosys_verific_rs/yosys/install/bin/../share/yosys/techmap.v' to AST representation.
Generating RTLIL representation for module `\_90_simplemap_bool_ops'.
Generating RTLIL representation for module `\_90_simplemap_reduce_ops'.
Generating RTLIL representation for module `\_90_simplemap_logic_ops'.
Generating RTLIL representation for module `\_90_simplemap_compare_ops'.
Generating RTLIL representation for module `\_90_simplemap_various'.
Generating RTLIL representation for module `\_90_simplemap_registers'.
Generating RTLIL representation for module `\_90_shift_ops_shr_shl_sshl_sshr'.
Generating RTLIL representation for module `\_90_shift_shiftx'.
Generating RTLIL representation for module `\_90_fa'.
Generating RTLIL representation for module `\_90_lcu'.
Generating RTLIL representation for module `\_90_alu'.
Generating RTLIL representation for module `\_90_macc'.
Generating RTLIL representation for module `\_90_alumacc'.
Generating RTLIL representation for module `\$__div_mod_u'.
Generating RTLIL representation for module `\$__div_mod_trunc'.
Generating RTLIL representation for module `\_90_div'.
Generating RTLIL representation for module `\_90_mod'.
Generating RTLIL representation for module `\$__div_mod_floor'.
Generating RTLIL representation for module `\_90_divfloor'.
Generating RTLIL representation for module `\_90_modfloor'.
Generating RTLIL representation for module `\_90_pow'.
Generating RTLIL representation for module `\_90_pmux'.
Generating RTLIL representation for module `\_90_demux'.
Generating RTLIL representation for module `\_90_lut'.
Successfully finished Verilog frontend.

3.80.2. Executing Verilog-2005 frontend: /nfs_scratch/scratch/Vorak/aram/Workspace/Raptor/yosys_verific_rs/yosys/install/bin/../share/yosys/rapidsilicon/genesis/arith_map.v
Parsing Verilog input from `/nfs_scratch/scratch/Vorak/aram/Workspace/Raptor/yosys_verific_rs/yosys/install/bin/../share/yosys/rapidsilicon/genesis/arith_map.v' to AST representation.
Generating RTLIL representation for module `\_80_rs_alu'.
Successfully finished Verilog frontend.

3.80.3. Continuing TECHMAP pass.
Using extmapper simplemap for cells of type $reduce_bool.
Using extmapper simplemap for cells of type $mux.
Using extmapper simplemap for cells of type $dff.
Using extmapper simplemap for cells of type $eq.
Using extmapper simplemap for cells of type $not.
Using extmapper simplemap for cells of type $dffe.
Using extmapper simplemap for cells of type $or.
Using extmapper simplemap for cells of type $and.
Using extmapper simplemap for cells of type $xor.
No more expansions possible.
<suppressed ~429 debug messages>

yosys> stat

3.81. Printing statistics.

=== kasumi ===

   Number of wires:                400
   Number of wire bits:           4027
   Number of public wires:          77
   Number of public wire bits:    1360
   Number of memories:               0
   Number of memory bits:            0
   Number of processes:              0
   Number of cells:               3113
     $_AND_                        319
     $_DFFE_PP_                    323
     $_DFF_P_                      102
     $_MUX_                       1677
     $_NOT_                         22
     $_OR_                          37
     $_XOR_                        633


yosys> opt_expr

3.82. Executing OPT_EXPR pass (perform const folding).
Optimizing module kasumi.
<suppressed ~357 debug messages>

yosys> opt_merge -nomux

3.83. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\kasumi'.
<suppressed ~411 debug messages>
Removed a total of 137 cells.

yosys> opt_muxtree

3.84. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \kasumi..
  Creating internal representation of mux trees.
  No muxes found in this module.
Removed 0 multiplexer ports.

yosys> opt_reduce

3.85. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \kasumi.
Performed a total of 0 changes.

yosys> opt_merge

3.86. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\kasumi'.
Removed a total of 0 cells.

yosys> opt_share

3.87. Executing OPT_SHARE pass.

yosys> opt_dff -nosdff -nodffe

3.88. Executing OPT_DFF pass (perform DFF optimizations).

yosys> opt_clean

3.89. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \kasumi..
Removed 0 unused cells and 44 unused wires.
<suppressed ~1 debug messages>

yosys> opt_expr

3.90. Executing OPT_EXPR pass (perform const folding).
Optimizing module kasumi.
MAX OPT ITERATION = 1

yosys> opt_expr -full

3.91. Executing OPT_EXPR pass (perform const folding).
Optimizing module kasumi.
<suppressed ~451 debug messages>

yosys> techmap -map +/techmap.v

3.92. Executing TECHMAP pass (map to technology primitives).

3.92.1. Executing Verilog-2005 frontend: /nfs_scratch/scratch/Vorak/aram/Workspace/Raptor/yosys_verific_rs/yosys/install/bin/../share/yosys/techmap.v
Parsing Verilog input from `/nfs_scratch/scratch/Vorak/aram/Workspace/Raptor/yosys_verific_rs/yosys/install/bin/../share/yosys/techmap.v' to AST representation.
Generating RTLIL representation for module `\_90_simplemap_bool_ops'.
Generating RTLIL representation for module `\_90_simplemap_reduce_ops'.
Generating RTLIL representation for module `\_90_simplemap_logic_ops'.
Generating RTLIL representation for module `\_90_simplemap_compare_ops'.
Generating RTLIL representation for module `\_90_simplemap_various'.
Generating RTLIL representation for module `\_90_simplemap_registers'.
Generating RTLIL representation for module `\_90_shift_ops_shr_shl_sshl_sshr'.
Generating RTLIL representation for module `\_90_shift_shiftx'.
Generating RTLIL representation for module `\_90_fa'.
Generating RTLIL representation for module `\_90_lcu'.
Generating RTLIL representation for module `\_90_alu'.
Generating RTLIL representation for module `\_90_macc'.
Generating RTLIL representation for module `\_90_alumacc'.
Generating RTLIL representation for module `\$__div_mod_u'.
Generating RTLIL representation for module `\$__div_mod_trunc'.
Generating RTLIL representation for module `\_90_div'.
Generating RTLIL representation for module `\_90_mod'.
Generating RTLIL representation for module `\$__div_mod_floor'.
Generating RTLIL representation for module `\_90_divfloor'.
Generating RTLIL representation for module `\_90_modfloor'.
Generating RTLIL representation for module `\_90_pow'.
Generating RTLIL representation for module `\_90_pmux'.
Generating RTLIL representation for module `\_90_demux'.
Generating RTLIL representation for module `\_90_lut'.
Successfully finished Verilog frontend.

3.92.2. Continuing TECHMAP pass.
No more expansions possible.
<suppressed ~71 debug messages>

yosys> opt_expr

3.93. Executing OPT_EXPR pass (perform const folding).
Optimizing module kasumi.

yosys> opt_merge -nomux

3.94. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\kasumi'.
Removed a total of 0 cells.

yosys> opt_muxtree

3.95. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \kasumi..
  Creating internal representation of mux trees.
  No muxes found in this module.
Removed 0 multiplexer ports.

yosys> opt_reduce

3.96. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \kasumi.
Performed a total of 0 changes.

yosys> opt_merge

3.97. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\kasumi'.
Removed a total of 0 cells.

yosys> opt_dff -nosdff -nodffe -sat

3.98. Executing OPT_DFF pass (perform DFF optimizations).

yosys> opt_clean

3.99. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \kasumi..
Removed 0 unused cells and 5 unused wires.
<suppressed ~1 debug messages>

yosys> opt_expr

3.100. Executing OPT_EXPR pass (perform const folding).
Optimizing module kasumi.
MAX OPT ITERATION = 1

yosys> abc -dff

3.101. Executing ABC pass (technology mapping using ABC).

3.101.1. Summary of detected clock domains:
  994 cells in clk=\clk, en=$auto$opt_dff.cc:194:make_patterns_logic$625, arst={ }, srst={ }
  11 cells in clk=\clk, en=$auto$opt_dff.cc:194:make_patterns_logic$616, arst={ }, srst={ }
  225 cells in clk=\clk, en=$auto$opt_dff.cc:194:make_patterns_logic$619, arst={ }, srst={ }
  55 cells in clk=\clk, en=$auto$opt_dff.cc:194:make_patterns_logic$622, arst={ }, srst={ }
  1350 cells in clk=\clk, en={ }, arst={ }, srst={ }

3.101.2. Extracting gate netlist of module `\kasumi' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk, enabled by $auto$opt_dff.cc:194:make_patterns_logic$625
Extracted 994 gates and 1063 wires to a netlist network with 68 inputs and 129 outputs.

3.101.2.1. Executing ABC.

3.101.3. Extracting gate netlist of module `\kasumi' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk, enabled by $auto$opt_dff.cc:194:make_patterns_logic$616
Extracted 11 gates and 16 wires to a netlist network with 4 inputs and 5 outputs.

3.101.3.1. Executing ABC.

3.101.4. Extracting gate netlist of module `\kasumi' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk, enabled by $auto$opt_dff.cc:194:make_patterns_logic$619
Extracted 225 gates and 358 wires to a netlist network with 132 inputs and 161 outputs.

3.101.4.1. Executing ABC.

3.101.5. Extracting gate netlist of module `\kasumi' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk, enabled by $auto$opt_dff.cc:194:make_patterns_logic$622
Extracted 55 gates and 156 wires to a netlist network with 100 inputs and 53 outputs.

3.101.5.1. Executing ABC.

3.101.6. Extracting gate netlist of module `\kasumi' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk
Extracted 1350 gates and 1724 wires to a netlist network with 373 inputs and 230 outputs.

3.101.6.1. Executing ABC.

yosys> abc -dff

3.102. Executing ABC pass (technology mapping using ABC).

3.102.1. Summary of detected clock domains:
  10 cells in clk=\clk, en=$abc$4582$auto$opt_dff.cc:194:make_patterns_logic$616, arst={ }, srst={ }
  480 cells in clk=\clk, en=$abc$4884$auto$opt_dff.cc:194:make_patterns_logic$622, arst={ }, srst={ }
  619 cells in clk=\clk, en=$abc$3962$auto$opt_dff.cc:194:make_patterns_logic$625, arst={ }, srst={ }
  285 cells in clk=\clk, en=$abc$4594$auto$opt_dff.cc:194:make_patterns_logic$619, arst={ }, srst={ }
  1065 cells in clk=\clk, en={ }, arst={ }, srst={ }

3.102.2. Extracting gate netlist of module `\kasumi' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk, enabled by $abc$4582$auto$opt_dff.cc:194:make_patterns_logic$616
Extracted 10 gates and 14 wires to a netlist network with 4 inputs and 4 outputs.

3.102.2.1. Executing ABC.

3.102.3. Extracting gate netlist of module `\kasumi' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk, enabled by $abc$4884$auto$opt_dff.cc:194:make_patterns_logic$622
Extracted 480 gates and 809 wires to a netlist network with 329 inputs and 56 outputs.

3.102.3.1. Executing ABC.

3.102.4. Extracting gate netlist of module `\kasumi' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk, enabled by $abc$3962$auto$opt_dff.cc:194:make_patterns_logic$625
Extracted 619 gates and 687 wires to a netlist network with 68 inputs and 129 outputs.

3.102.4.1. Executing ABC.

3.102.5. Extracting gate netlist of module `\kasumi' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk, enabled by $abc$4594$auto$opt_dff.cc:194:make_patterns_logic$619
Extracted 285 gates and 417 wires to a netlist network with 132 inputs and 157 outputs.

3.102.5.1. Executing ABC.

3.102.6. Extracting gate netlist of module `\kasumi' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk
Extracted 1065 gates and 1268 wires to a netlist network with 203 inputs and 304 outputs.

3.102.6.1. Executing ABC.

yosys> abc -dff

3.103. Executing ABC pass (technology mapping using ABC).

3.103.1. Summary of detected clock domains:
  10 cells in clk=\clk, en=$abc$6525$abc$4582$auto$opt_dff.cc:194:make_patterns_logic$616, arst={ }, srst={ }
  337 cells in clk=\clk, en=$abc$6536$abc$4884$auto$opt_dff.cc:194:make_patterns_logic$622, arst={ }, srst={ }
  284 cells in clk=\clk, en=$abc$7761$abc$4594$auto$opt_dff.cc:194:make_patterns_logic$619, arst={ }, srst={ }
  619 cells in clk=\clk, en=$abc$7141$abc$3962$auto$opt_dff.cc:194:make_patterns_logic$625, arst={ }, srst={ }
  1394 cells in clk=\clk, en={ }, arst={ }, srst={ }

3.103.2. Extracting gate netlist of module `\kasumi' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk, enabled by $abc$6525$abc$4582$auto$opt_dff.cc:194:make_patterns_logic$616
Extracted 10 gates and 14 wires to a netlist network with 4 inputs and 4 outputs.

3.103.2.1. Executing ABC.

3.103.3. Extracting gate netlist of module `\kasumi' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk, enabled by $abc$6536$abc$4884$auto$opt_dff.cc:194:make_patterns_logic$622
Extracted 337 gates and 532 wires to a netlist network with 195 inputs and 79 outputs.

3.103.3.1. Executing ABC.

3.103.4. Extracting gate netlist of module `\kasumi' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk, enabled by $abc$7761$abc$4594$auto$opt_dff.cc:194:make_patterns_logic$619
Extracted 284 gates and 412 wires to a netlist network with 128 inputs and 155 outputs.

3.103.4.1. Executing ABC.

3.103.5. Extracting gate netlist of module `\kasumi' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk, enabled by $abc$7141$abc$3962$auto$opt_dff.cc:194:make_patterns_logic$625
Extracted 619 gates and 687 wires to a netlist network with 68 inputs and 129 outputs.

3.103.5.1. Executing ABC.

3.103.6. Extracting gate netlist of module `\kasumi' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk
Extracted 1394 gates and 1644 wires to a netlist network with 250 inputs and 218 outputs.

3.103.6.1. Executing ABC.

yosys> abc -dff

3.104. Executing ABC pass (technology mapping using ABC).

3.104.1. Summary of detected clock domains:
  188 cells in clk=\clk, en=$abc$9317$abc$6536$abc$4884$auto$opt_dff.cc:194:make_patterns_logic$622, arst={ }, srst={ }
  10 cells in clk=\clk, en=$abc$9306$abc$6525$abc$4582$auto$opt_dff.cc:194:make_patterns_logic$616, arst={ }, srst={ }
  619 cells in clk=\clk, en=$abc$10021$abc$7141$abc$3962$auto$opt_dff.cc:194:make_patterns_logic$625, arst={ }, srst={ }
  262 cells in clk=\clk, en=$abc$9672$abc$7761$abc$4594$auto$opt_dff.cc:194:make_patterns_logic$619, arst={ }, srst={ }
  1600 cells in clk=\clk, en={ }, arst={ }, srst={ }

3.104.2. Extracting gate netlist of module `\kasumi' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk, enabled by $abc$9317$abc$6536$abc$4884$auto$opt_dff.cc:194:make_patterns_logic$622
Extracted 188 gates and 337 wires to a netlist network with 149 inputs and 77 outputs.

3.104.2.1. Executing ABC.

3.104.3. Extracting gate netlist of module `\kasumi' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk, enabled by $abc$9306$abc$6525$abc$4582$auto$opt_dff.cc:194:make_patterns_logic$616
Extracted 10 gates and 14 wires to a netlist network with 4 inputs and 4 outputs.

3.104.3.1. Executing ABC.

3.104.4. Extracting gate netlist of module `\kasumi' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk, enabled by $abc$10021$abc$7141$abc$3962$auto$opt_dff.cc:194:make_patterns_logic$625
Extracted 619 gates and 687 wires to a netlist network with 68 inputs and 129 outputs.

3.104.4.1. Executing ABC.

3.104.5. Extracting gate netlist of module `\kasumi' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk, enabled by $abc$9672$abc$7761$abc$4594$auto$opt_dff.cc:194:make_patterns_logic$619
Extracted 262 gates and 381 wires to a netlist network with 119 inputs and 133 outputs.

3.104.5.1. Executing ABC.

3.104.6. Extracting gate netlist of module `\kasumi' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk
Extracted 1600 gates and 1881 wires to a netlist network with 281 inputs and 192 outputs.

3.104.6.1. Executing ABC.

yosys> opt_ffinv

3.105. Executing OPT_FFINV pass (push inverters through FFs).
Discovering LUTs.
Pushed 0 inverters.

yosys> opt_expr

3.106. Executing OPT_EXPR pass (perform const folding).
Optimizing module kasumi.
<suppressed ~12 debug messages>

yosys> opt_merge -nomux

3.107. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\kasumi'.
<suppressed ~6 debug messages>
Removed a total of 2 cells.

yosys> opt_muxtree

3.108. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \kasumi..
  Creating internal representation of mux trees.
  No muxes found in this module.
Removed 0 multiplexer ports.

yosys> opt_reduce

3.109. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \kasumi.
Performed a total of 0 changes.

yosys> opt_merge

3.110. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\kasumi'.
Removed a total of 0 cells.

yosys> opt_share

3.111. Executing OPT_SHARE pass.

yosys> opt_dff -nosdff -sat

3.112. Executing OPT_DFF pass (perform DFF optimizations).

yosys> opt_clean

3.113. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \kasumi..
Removed 0 unused cells and 11461 unused wires.
<suppressed ~38 debug messages>

yosys> opt_expr

3.114. Executing OPT_EXPR pass (perform const folding).
Optimizing module kasumi.
MAX OPT ITERATION = 1

yosys> bmuxmap

3.115. Executing BMUXMAP pass.

yosys> demuxmap

3.116. Executing DEMUXMAP pass.

yosys> clean_zerowidth

yosys> abc -script /tmp/yosys_CDKWFW/abc_tmp_1.scr

3.117. Executing ABC pass (technology mapping using ABC).

3.117.1. Extracting gate netlist of module `\kasumi' to `<abc-temp-dir>/input.blif'..
Extracted 2398 gates and 2797 wires to a netlist network with 399 inputs and 305 outputs.

3.117.1.1. Executing ABC.
DE:   #PIs = 399  #Luts =   844  Max Lvl =   8  Avg Lvl =   2.29  [   0.17 sec. at Pass 0]{firstMap}
DE:   #PIs = 399  #Luts =   757  Max Lvl =  13  Avg Lvl =   2.98  [   8.31 sec. at Pass 1]{initMapFlow}
DE:   #PIs = 399  #Luts =   744  Max Lvl =  13  Avg Lvl =   2.92  [   1.16 sec. at Pass 2]{map}
DE:   #PIs = 399  #Luts =   709  Max Lvl =  13  Avg Lvl =   2.93  [   2.32 sec. at Pass 3]{postMap}
DE:   #PIs = 399  #Luts =   703  Max Lvl =  13  Avg Lvl =   2.92  [   1.47 sec. at Pass 4]{map}
DE:   #PIs = 399  #Luts =   697  Max Lvl =  13  Avg Lvl =   2.91  [   4.52 sec. at Pass 5]{postMap}
DE:   #PIs = 399  #Luts =   697  Max Lvl =  13  Avg Lvl =   2.91  [   1.81 sec. at Pass 6]{map}
DE:   #PIs = 399  #Luts =   695  Max Lvl =  13  Avg Lvl =   2.91  [   6.87 sec. at Pass 7]{postMap}
DE:   #PIs = 399  #Luts =   692  Max Lvl =  13  Avg Lvl =   2.95  [   2.50 sec. at Pass 8]{map}
DE:   #PIs = 399  #Luts =   692  Max Lvl =  13  Avg Lvl =   2.95  [   5.60 sec. at Pass 9]{postMap}
DE:   #PIs = 399  #Luts =   688  Max Lvl =  13  Avg Lvl =   2.87  [   3.25 sec. at Pass 10]{map}
DE:   #PIs = 399  #Luts =   688  Max Lvl =  13  Avg Lvl =   2.87  [   6.19 sec. at Pass 11]{postMap}
DE:   #PIs = 399  #Luts =   687  Max Lvl =  13  Avg Lvl =   2.85  [   2.63 sec. at Pass 12]{map}
DE:   #PIs = 399  #Luts =   686  Max Lvl =  13  Avg Lvl =   2.83  [   6.22 sec. at Pass 13]{postMap}
DE:   #PIs = 399  #Luts =   683  Max Lvl =  12  Avg Lvl =   2.84  [   2.73 sec. at Pass 14]{map}
DE:   #PIs = 399  #Luts =   683  Max Lvl =  12  Avg Lvl =   2.84  [   4.92 sec. at Pass 15]{postMap}
DE:   #PIs = 399  #Luts =   681  Max Lvl =  13  Avg Lvl =   2.85  [   2.37 sec. at Pass 16]{map}
DE:   #PIs = 399  #Luts =   681  Max Lvl =  13  Avg Lvl =   2.85  [   4.59 sec. at Pass 17]{postMap}
DE:   #PIs = 399  #Luts =   681  Max Lvl =  12  Avg Lvl =   2.83  [   2.81 sec. at Pass 18]{map}
DE:   #PIs = 399  #Luts =   681  Max Lvl =  12  Avg Lvl =   2.83  [   4.96 sec. at Pass 19]{postMap}
DE:   #PIs = 399  #Luts =   679  Max Lvl =  12  Avg Lvl =   2.86  [   1.53 sec. at Pass 20]{map}
DE:   #PIs = 399  #Luts =   679  Max Lvl =  12  Avg Lvl =   2.86  [   3.27 sec. at Pass 21]{postMap}
DE:   #PIs = 399  #Luts =   679  Max Lvl =  12  Avg Lvl =   2.86  [   1.78 sec. at Pass 22]{map}
DE:   #PIs = 399  #Luts =   679  Max Lvl =  12  Avg Lvl =   2.86  [   2.98 sec. at Pass 23]{postMap}
DE:   #PIs = 399  #Luts =   679  Max Lvl =  12  Avg Lvl =   2.86  [   0.37 sec. at Pass 24]{finalMap}

yosys> opt_expr

3.118. Executing OPT_EXPR pass (perform const folding).
Optimizing module kasumi.

yosys> opt_merge -nomux

3.119. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\kasumi'.
Removed a total of 0 cells.

yosys> opt_muxtree

3.120. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \kasumi..
  Creating internal representation of mux trees.
  No muxes found in this module.
Removed 0 multiplexer ports.

yosys> opt_reduce

3.121. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \kasumi.
Performed a total of 0 changes.

yosys> opt_merge

3.122. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\kasumi'.
Removed a total of 0 cells.

yosys> opt_share

3.123. Executing OPT_SHARE pass.

yosys> opt_dff -nosdff -nodffe

3.124. Executing OPT_DFF pass (perform DFF optimizations).

yosys> opt_clean

3.125. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \kasumi..
Removed 0 unused cells and 2726 unused wires.
<suppressed ~7 debug messages>

yosys> opt_expr

3.126. Executing OPT_EXPR pass (perform const folding).
Optimizing module kasumi.
MAX OPT ITERATION = 1

yosys> opt_ffinv

3.127. Executing OPT_FFINV pass (push inverters through FFs).
Discovering LUTs.
Pushed 0 inverters.

yosys> stat

3.128. Printing statistics.

=== kasumi ===

   Number of wires:                915
   Number of wire bits:           1437
   Number of public wires:          34
   Number of public wire bits:     556
   Number of memories:               0
   Number of memory bits:            0
   Number of processes:              0
   Number of cells:                980
     $_DFFE_PP_                    199
     $_DFF_P_                      102
     $lut                          679


yosys> shregmap -minlen 8 -maxlen 20

3.129. Executing SHREGMAP pass (map shift registers).
Converted 0 dff cells into 0 shift registers.

yosys> dfflegalize -cell $_DFF_?_ 0 -cell $_DFF_???_ 0 -cell $_DFFE_????_ 0 -cell $_DFFSR_???_ 0 -cell $_DFFSRE_????_ 0 -cell $_DLATCHSR_PPP_ 0

3.130. Executing DFFLEGALIZE pass (convert FFs to types supported by the target).

yosys> stat

3.131. Printing statistics.

=== kasumi ===

   Number of wires:                915
   Number of wire bits:           1437
   Number of public wires:          34
   Number of public wire bits:     556
   Number of memories:               0
   Number of memory bits:            0
   Number of processes:              0
   Number of cells:                980
     $_DFFE_PP0P_                  199
     $_DFF_P_                      102
     $lut                          679


yosys> techmap -map +/techmap.v -map +/rapidsilicon/genesis/ffs_map.v

3.132. Executing TECHMAP pass (map to technology primitives).

3.132.1. Executing Verilog-2005 frontend: /nfs_scratch/scratch/Vorak/aram/Workspace/Raptor/yosys_verific_rs/yosys/install/bin/../share/yosys/techmap.v
Parsing Verilog input from `/nfs_scratch/scratch/Vorak/aram/Workspace/Raptor/yosys_verific_rs/yosys/install/bin/../share/yosys/techmap.v' to AST representation.
Generating RTLIL representation for module `\_90_simplemap_bool_ops'.
Generating RTLIL representation for module `\_90_simplemap_reduce_ops'.
Generating RTLIL representation for module `\_90_simplemap_logic_ops'.
Generating RTLIL representation for module `\_90_simplemap_compare_ops'.
Generating RTLIL representation for module `\_90_simplemap_various'.
Generating RTLIL representation for module `\_90_simplemap_registers'.
Generating RTLIL representation for module `\_90_shift_ops_shr_shl_sshl_sshr'.
Generating RTLIL representation for module `\_90_shift_shiftx'.
Generating RTLIL representation for module `\_90_fa'.
Generating RTLIL representation for module `\_90_lcu'.
Generating RTLIL representation for module `\_90_alu'.
Generating RTLIL representation for module `\_90_macc'.
Generating RTLIL representation for module `\_90_alumacc'.
Generating RTLIL representation for module `\$__div_mod_u'.
Generating RTLIL representation for module `\$__div_mod_trunc'.
Generating RTLIL representation for module `\_90_div'.
Generating RTLIL representation for module `\_90_mod'.
Generating RTLIL representation for module `\$__div_mod_floor'.
Generating RTLIL representation for module `\_90_divfloor'.
Generating RTLIL representation for module `\_90_modfloor'.
Generating RTLIL representation for module `\_90_pow'.
Generating RTLIL representation for module `\_90_pmux'.
Generating RTLIL representation for module `\_90_demux'.
Generating RTLIL representation for module `\_90_lut'.
Successfully finished Verilog frontend.

3.132.2. Executing Verilog-2005 frontend: /nfs_scratch/scratch/Vorak/aram/Workspace/Raptor/yosys_verific_rs/yosys/install/bin/../share/yosys/rapidsilicon/genesis/ffs_map.v
Parsing Verilog input from `/nfs_scratch/scratch/Vorak/aram/Workspace/Raptor/yosys_verific_rs/yosys/install/bin/../share/yosys/rapidsilicon/genesis/ffs_map.v' to AST representation.
Generating RTLIL representation for module `\$_DFF_P_'.
Generating RTLIL representation for module `\$_DFF_PP0_'.
Generating RTLIL representation for module `\$_DFF_PN0_'.
Generating RTLIL representation for module `\$_DFF_PP1_'.
Generating RTLIL representation for module `\$_DFF_PN1_'.
Generating RTLIL representation for module `\$_DFFE_PP_'.
Generating RTLIL representation for module `\$_DFFE_PN_'.
Generating RTLIL representation for module `\$_DFFE_PP0P_'.
Generating RTLIL representation for module `\$_DFFE_PP0N_'.
Generating RTLIL representation for module `\$_DFFE_PN0P_'.
Generating RTLIL representation for module `\$_DFFE_PN0N_'.
Generating RTLIL representation for module `\$_DFFE_PP1P_'.
Generating RTLIL representation for module `\$_DFFE_PP1N_'.
Generating RTLIL representation for module `\$_DFFE_PN1P_'.
Generating RTLIL representation for module `\$_DFFE_PN1N_'.
Generating RTLIL representation for module `\$_DFFSR_PPP_'.
Generating RTLIL representation for module `\$_DFFSR_PNP_'.
Generating RTLIL representation for module `\$_DFFSR_PNN_'.
Generating RTLIL representation for module `\$_DFFSR_PPN_'.
Generating RTLIL representation for module `\$_DFFSR_NPP_'.
Generating RTLIL representation for module `\$_DFFSR_NNP_'.
Generating RTLIL representation for module `\$_DFFSR_NNN_'.
Generating RTLIL representation for module `\$_DFFSR_NPN_'.
Generating RTLIL representation for module `\$_DFFSRE_PPPP_'.
Generating RTLIL representation for module `\$_DFFSRE_PNPP_'.
Generating RTLIL representation for module `\$_DFFSRE_PPNP_'.
Generating RTLIL representation for module `\$_DFFSRE_PNNP_'.
Generating RTLIL representation for module `\$_DFFSRE_PPPN_'.
Generating RTLIL representation for module `\$_DFFSRE_PNPN_'.
Generating RTLIL representation for module `\$_DFFSRE_PPNN_'.
Generating RTLIL representation for module `\$_DFFSRE_PNNN_'.
Generating RTLIL representation for module `\$_DLATCHSR_PPP_'.
Generating RTLIL representation for module `\$_DLATCHSR_NPP_'.
Generating RTLIL representation for module `\$_DFF_N_'.
Generating RTLIL representation for module `\$_DFF_NP0_'.
Generating RTLIL representation for module `\$_DFF_NN0_'.
Generating RTLIL representation for module `\$_DFF_NP1_'.
Generating RTLIL representation for module `\$_DFF_NN1_'.
Generating RTLIL representation for module `\$_DFFE_NP_'.
Generating RTLIL representation for module `\$_DFFE_NN_'.
Generating RTLIL representation for module `\$_DFFE_NP0P_'.
Generating RTLIL representation for module `\$_DFFE_NP0N_'.
Generating RTLIL representation for module `\$_DFFE_NN0P_'.
Generating RTLIL representation for module `\$_DFFE_NN0N_'.
Generating RTLIL representation for module `\$_DFFE_NP1P_'.
Generating RTLIL representation for module `\$_DFFE_NP1N_'.
Generating RTLIL representation for module `\$_DFFE_NN1P_'.
Generating RTLIL representation for module `\$_DFFE_NN1N_'.
Generating RTLIL representation for module `\$_DFFSRE_NPPP_'.
Generating RTLIL representation for module `\$_DFFSRE_NNPP_'.
Generating RTLIL representation for module `\$_DFFSRE_NPNP_'.
Generating RTLIL representation for module `\$_DFFSRE_NNNP_'.
Generating RTLIL representation for module `\$_DFFSRE_NPPN_'.
Generating RTLIL representation for module `\$_DFFSRE_NNPN_'.
Generating RTLIL representation for module `\$_DFFSRE_NPNN_'.
Generating RTLIL representation for module `\$_DFFSRE_NNNN_'.
Generating RTLIL representation for module `\$__SHREG_DFF_P_'.
Generating RTLIL representation for module `\$_SDFF_PP0_'.
Generating RTLIL representation for module `\$_SDFF_PN0_'.
Generating RTLIL representation for module `\$_SDFF_NP0_'.
Generating RTLIL representation for module `\$_SDFF_NN0_'.
Generating RTLIL representation for module `\$_SDFF_PP1_'.
Generating RTLIL representation for module `\$_SDFF_PN1_'.
Generating RTLIL representation for module `\$_SDFF_NP1_'.
Generating RTLIL representation for module `\$_SDFF_NN1_'.
Successfully finished Verilog frontend.

3.132.3. Continuing TECHMAP pass.
Using template \$_DFFE_PP0P_ for cells of type $_DFFE_PP0P_.
Using extmapper simplemap for cells of type $lut.
Using template \$_DFF_P_ for cells of type $_DFF_P_.
Using extmapper simplemap for cells of type $logic_not.
No more expansions possible.
<suppressed ~1315 debug messages>

yosys> opt_expr -mux_undef

3.133. Executing OPT_EXPR pass (perform const folding).
Optimizing module kasumi.
<suppressed ~13824 debug messages>

yosys> simplemap

3.134. Executing SIMPLEMAP pass (map simple cells to gate primitives).

yosys> opt_expr

3.135. Executing OPT_EXPR pass (perform const folding).
Optimizing module kasumi.

yosys> opt_merge

3.136. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\kasumi'.
<suppressed ~8700 debug messages>
Removed a total of 2900 cells.

yosys> opt_dff -nodffe -nosdff

3.137. Executing OPT_DFF pass (perform DFF optimizations).

yosys> opt_clean

3.138. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \kasumi..
Removed 0 unused cells and 2962 unused wires.
<suppressed ~1 debug messages>

yosys> opt_expr

3.139. Executing OPT_EXPR pass (perform const folding).
Optimizing module kasumi.
<suppressed ~574 debug messages>

yosys> opt_merge -nomux

3.140. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\kasumi'.
<suppressed ~48 debug messages>
Removed a total of 16 cells.

yosys> opt_muxtree

3.141. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \kasumi..
  Creating internal representation of mux trees.
  No muxes found in this module.
Removed 0 multiplexer ports.

yosys> opt_reduce

3.142. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \kasumi.
Performed a total of 0 changes.

yosys> opt_merge

3.143. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\kasumi'.
Removed a total of 0 cells.

yosys> opt_share

3.144. Executing OPT_SHARE pass.

yosys> opt_dff -nosdff -nodffe

3.145. Executing OPT_DFF pass (perform DFF optimizations).

yosys> opt_clean

3.146. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \kasumi..
Removed 0 unused cells and 121 unused wires.
<suppressed ~1 debug messages>

yosys> opt_expr

3.147. Executing OPT_EXPR pass (perform const folding).
Optimizing module kasumi.
MAX OPT ITERATION = 1

yosys> abc -script /tmp/yosys_CDKWFW/abc_tmp_2.scr

3.148. Executing ABC pass (technology mapping using ABC).

3.148.1. Extracting gate netlist of module `\kasumi' to `<abc-temp-dir>/input.blif'..
Extracted 3278 gates and 3679 wires to a netlist network with 399 inputs and 305 outputs.

3.148.1.1. Executing ABC.
DE:   #PIs = 399  #Luts =   700  Max Lvl =  10  Avg Lvl =   2.52  [   0.20 sec. at Pass 0]{firstMap}
DE:   #PIs = 399  #Luts =   687  Max Lvl =  11  Avg Lvl =   2.76  [   6.52 sec. at Pass 1]{initMapFlow}
DE:   #PIs = 399  #Luts =   678  Max Lvl =  14  Avg Lvl =   2.95  [   1.44 sec. at Pass 2]{map}
DE:   #PIs = 399  #Luts =   675  Max Lvl =  13  Avg Lvl =   2.86  [   3.14 sec. at Pass 3]{postMap}
DE:   #PIs = 399  #Luts =   675  Max Lvl =  13  Avg Lvl =   2.86  [   1.67 sec. at Pass 4]{map}
DE:   #PIs = 399  #Luts =   672  Max Lvl =  13  Avg Lvl =   2.79  [   4.02 sec. at Pass 5]{postMap}
DE:   #PIs = 399  #Luts =   669  Max Lvl =  13  Avg Lvl =   2.90  [   2.16 sec. at Pass 6]{map}
DE:   #PIs = 399  #Luts =   669  Max Lvl =  13  Avg Lvl =   2.90  [   3.90 sec. at Pass 7]{postMap}
DE:   #PIs = 399  #Luts =   668  Max Lvl =  12  Avg Lvl =   2.81  [   1.87 sec. at Pass 8]{map}
DE:   #PIs = 399  #Luts =   665  Max Lvl =  13  Avg Lvl =   2.81  [   3.54 sec. at Pass 9]{postMap}
DE:   #PIs = 399  #Luts =   665  Max Lvl =  13  Avg Lvl =   2.81  [   2.82 sec. at Pass 10]{map}
DE:   #PIs = 399  #Luts =   665  Max Lvl =  13  Avg Lvl =   2.81  [   4.83 sec. at Pass 11]{postMap}
DE:   #PIs = 399  #Luts =   665  Max Lvl =  13  Avg Lvl =   2.81  [   1.75 sec. at Pass 12]{map}
DE:   #PIs = 399  #Luts =   665  Max Lvl =  13  Avg Lvl =   2.81  [   0.50 sec. at Pass 13]{finalMap}

yosys> opt_expr

3.149. Executing OPT_EXPR pass (perform const folding).
Optimizing module kasumi.

yosys> opt_merge -nomux

3.150. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\kasumi'.
Removed a total of 0 cells.

yosys> opt_muxtree

3.151. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \kasumi..
  Creating internal representation of mux trees.
  No muxes found in this module.
Removed 0 multiplexer ports.

yosys> opt_reduce

3.152. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \kasumi.
Performed a total of 0 changes.

yosys> opt_merge

3.153. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\kasumi'.
Removed a total of 0 cells.

yosys> opt_share

3.154. Executing OPT_SHARE pass.

yosys> opt_dff -nosdff -nodffe

3.155. Executing OPT_DFF pass (perform DFF optimizations).

yosys> opt_clean

3.156. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \kasumi..
Removed 0 unused cells and 2460 unused wires.
<suppressed ~1 debug messages>

yosys> opt_expr

3.157. Executing OPT_EXPR pass (perform const folding).
Optimizing module kasumi.
MAX OPT ITERATION = 1

yosys> hierarchy -check

3.158. Executing HIERARCHY pass (managing design hierarchy).

3.158.1. Analyzing design hierarchy..
Top module:  \kasumi

3.158.2. Analyzing design hierarchy..
Top module:  \kasumi
Removed 0 unused modules.

yosys> stat

3.159. Printing statistics.

=== kasumi ===

   Number of wires:                901
   Number of wire bits:           1423
   Number of public wires:          34
   Number of public wire bits:     556
   Number of memories:               0
   Number of memory bits:            0
   Number of processes:              0
   Number of cells:                966
     $lut                          665
     dffsre                        301


yosys> opt_clean -purge

3.160. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \kasumi..
Removed 0 unused cells and 21 unused wires.
<suppressed ~21 debug messages>

yosys> write_verilog -noattr -nohex synthesized.v

3.161. Executing Verilog backend.
Dumping module `\kasumi'.

Warnings: 12 unique messages, 12 total
End of script. Logfile hash: dd36544f8f, CPU: user 6.44s system 0.11s, MEM: 74.76 MB peak
Yosys 0.18+10 (git sha1 7361c89db, gcc 9.4.0-1ubuntu1~20.04.1 -fPIC -Os)
Time spent: 99% 6x abc (701 sec), 0% 26x opt_expr (2 sec), ...
real 143.50
user 653.47
sys 54.29
