
 /----------------------------------------------------------------------------\
 |                                                                            |
 |  yosys -- Yosys Open SYnthesis Suite                                       |
 |                                                                            |
 |  Copyright (C) 2012 - 2020  Claire Xenia Wolf <claire@yosyshq.com>         |
 |                                                                            |
 |  Permission to use, copy, modify, and/or distribute this software for any  |
 |  purpose with or without fee is hereby granted, provided that the above    |
 |  copyright notice and this permission notice appear in all copies.         |
 |                                                                            |
 |  THE SOFTWARE IS PROVIDED "AS IS" AND THE AUTHOR DISCLAIMS ALL WARRANTIES  |
 |  WITH REGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF          |
 |  MERCHANTABILITY AND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR   |
 |  ANY SPECIAL, DIRECT, INDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES    |
 |  WHATSOEVER RESULTING FROM LOSS OF USE, DATA OR PROFITS, WHETHER IN AN     |
 |  ACTION OF CONTRACT, NEGLIGENCE OR OTHER TORTIOUS ACTION, ARISING OUT OF   |
 |  OR IN CONNECTION WITH THE USE OR PERFORMANCE OF THIS SOFTWARE.            |
 |                                                                            |
 \----------------------------------------------------------------------------/

 Yosys-Verific 0.0.92
 Yosys 0.18+10 (git sha1 7361c89db, gcc 9.4.0-1ubuntu1~20.04.1 -fPIC -Os)


-- Executing script file `yosys.ys' --
echo on

yosys> plugin -i synth-rs

yosys> read -verific

yosys> read -incdir .

yosys> verific -vlog-incdir .

1. Executing VERIFIC (loading SystemVerilog and VHDL designs using Verific).
Built with Verific May22_SW_Release, released at Wed Jun  1 05:39:28 2022.

yosys> verilog_defaults -add -I.

yosys> read -vlog2k cf_fir_24_16_16.v

yosys> verific -vlog2k cf_fir_24_16_16.v

2. Executing VERIFIC (loading SystemVerilog and VHDL designs using Verific).
Built with Verific May22_SW_Release, released at Wed Jun  1 05:39:28 2022.
VERIFIC-COMMENT [VERI-1482] Analyzing Verilog file 'cf_fir_24_16_16.v'

yosys> synth_rs -top cf_fir_24_16_16 -tech genesis -goal area -de -no_dsp -no_bram -verilog synthesized.v

3. Executing synth_rs pass: v0.4.79

yosys> read_verilog -lib -specify -nomem2reg +/rapidsilicon/common/cells_sim.v +/rapidsilicon/genesis/cells_sim.v +/rapidsilicon/genesis/dsp_sim.v

3.1. Executing Verilog-2005 frontend: /nfs_scratch/scratch/Vorak/aram/Workspace/Raptor/yosys_verific_rs/yosys/install/bin/../share/yosys/rapidsilicon/common/cells_sim.v
Parsing Verilog input from `/nfs_scratch/scratch/Vorak/aram/Workspace/Raptor/yosys_verific_rs/yosys/install/bin/../share/yosys/rapidsilicon/common/cells_sim.v' to AST representation.
Generating RTLIL representation for module `\inv'.
Generating RTLIL representation for module `\buff'.
Generating RTLIL representation for module `\logic_0'.
Generating RTLIL representation for module `\logic_1'.
Generating RTLIL representation for module `\gclkbuff'.
Successfully finished Verilog frontend.

3.2. Executing Verilog-2005 frontend: /nfs_scratch/scratch/Vorak/aram/Workspace/Raptor/yosys_verific_rs/yosys/install/bin/../share/yosys/rapidsilicon/genesis/cells_sim.v
Parsing Verilog input from `/nfs_scratch/scratch/Vorak/aram/Workspace/Raptor/yosys_verific_rs/yosys/install/bin/../share/yosys/rapidsilicon/genesis/cells_sim.v' to AST representation.
Generating RTLIL representation for module `\dffsre'.
Generating RTLIL representation for module `\dffnsre'.
Generating RTLIL representation for module `\latchsre'.
Generating RTLIL representation for module `\latchnsre'.
Generating RTLIL representation for module `\io_scff'.
Generating RTLIL representation for module `\scff'.
Generating RTLIL representation for module `\sh_dff'.
Generating RTLIL representation for module `\adder_carry'.
Generating RTLIL representation for module `\sdffr'.
Generating RTLIL representation for module `\sdffs'.
Generating RTLIL representation for module `\TDP_BRAM18'.
Generating RTLIL representation for module `\TDP36K'.
Generating RTLIL representation for module `\BRAM2x18_TDP'.
Generating RTLIL representation for module `\BRAM2x18_SDP'.
Generating RTLIL representation for module `\_$_mem_v2_asymmetric'.
Successfully finished Verilog frontend.

3.3. Executing Verilog-2005 frontend: /nfs_scratch/scratch/Vorak/aram/Workspace/Raptor/yosys_verific_rs/yosys/install/bin/../share/yosys/rapidsilicon/genesis/dsp_sim.v
Parsing Verilog input from `/nfs_scratch/scratch/Vorak/aram/Workspace/Raptor/yosys_verific_rs/yosys/install/bin/../share/yosys/rapidsilicon/genesis/dsp_sim.v' to AST representation.
Generating RTLIL representation for module `\RS_DSP1'.
Generating RTLIL representation for module `\RS_DSP2'.
Generating RTLIL representation for module `\RS_DSP2_MULT'.
Generating RTLIL representation for module `\RS_DSP2_MULT_REGIN'.
Generating RTLIL representation for module `\RS_DSP2_MULT_REGOUT'.
Generating RTLIL representation for module `\RS_DSP2_MULT_REGIN_REGOUT'.
Generating RTLIL representation for module `\RS_DSP2_MULTADD'.
Generating RTLIL representation for module `\RS_DSP2_MULTADD_REGIN'.
Generating RTLIL representation for module `\RS_DSP2_MULTADD_REGOUT'.
Generating RTLIL representation for module `\RS_DSP2_MULTADD_REGIN_REGOUT'.
Generating RTLIL representation for module `\RS_DSP2_MULTACC'.
Generating RTLIL representation for module `\RS_DSP2_MULTACC_REGIN'.
Generating RTLIL representation for module `\RS_DSP2_MULTACC_REGOUT'.
Generating RTLIL representation for module `\RS_DSP2_MULTACC_REGIN_REGOUT'.
Generating RTLIL representation for module `\dsp_t1_20x18x64_cfg_ports'.
Generating RTLIL representation for module `\dsp_t1_10x9x32_cfg_ports'.
Generating RTLIL representation for module `\dsp_t1_sim_cfg_ports'.
Generating RTLIL representation for module `\RS_DSP3'.
Generating RTLIL representation for module `\RS_DSP3_MULT'.
Generating RTLIL representation for module `\RS_DSP3_MULT_REGIN'.
Generating RTLIL representation for module `\RS_DSP3_MULT_REGOUT'.
Generating RTLIL representation for module `\RS_DSP3_MULT_REGIN_REGOUT'.
Generating RTLIL representation for module `\RS_DSP3_MULTADD'.
Generating RTLIL representation for module `\RS_DSP3_MULTADD_REGIN'.
Generating RTLIL representation for module `\RS_DSP3_MULTADD_REGOUT'.
Generating RTLIL representation for module `\RS_DSP3_MULTADD_REGIN_REGOUT'.
Generating RTLIL representation for module `\RS_DSP3_MULTACC'.
Generating RTLIL representation for module `\RS_DSP3_MULTACC_REGIN'.
Generating RTLIL representation for module `\RS_DSP3_MULTACC_REGOUT'.
Generating RTLIL representation for module `\RS_DSP3_MULTACC_REGIN_REGOUT'.
Generating RTLIL representation for module `\dsp_t1_20x18x64_cfg_params'.
Generating RTLIL representation for module `\dsp_t1_10x9x32_cfg_params'.
Generating RTLIL representation for module `\dsp_t1_sim_cfg_params'.
Successfully finished Verilog frontend.

yosys> hierarchy -check -top cf_fir_24_16_16

3.4. Executing HIERARCHY pass (managing design hierarchy).
VERIFIC-INFO [VERI-1018] cf_fir_24_16_16.v:94: compiling module 'cf_fir_24_16_16'
VERIFIC-INFO [VERI-1018] cf_fir_24_16_16.v:129: compiling module 'cf_fir_24_16_16_1'
VERIFIC-INFO [VERI-1018] cf_fir_24_16_16.v:168: compiling module 'cf_fir_24_16_16_2'
VERIFIC-INFO [VERI-1018] cf_fir_24_16_16.v:1833: compiling module 'cf_fir_24_16_16_24'
VERIFIC-INFO [VERI-1018] cf_fir_24_16_16.v:1949: compiling module 'cf_fir_24_16_16_25'
VERIFIC-INFO [VERI-1018] cf_fir_24_16_16.v:2044: compiling module 'cf_fir_24_16_16_26'
VERIFIC-INFO [VERI-1018] cf_fir_24_16_16.v:1180: compiling module 'cf_fir_24_16_16_18'
VERIFIC-INFO [VERI-1018] cf_fir_24_16_16.v:1339: compiling module 'cf_fir_24_16_16_19'
VERIFIC-INFO [VERI-1018] cf_fir_24_16_16.v:1478: compiling module 'cf_fir_24_16_16_20'
VERIFIC-INFO [VERI-1018] cf_fir_24_16_16.v:1597: compiling module 'cf_fir_24_16_16_21'
VERIFIC-INFO [VERI-1018] cf_fir_24_16_16.v:1696: compiling module 'cf_fir_24_16_16_22'
VERIFIC-INFO [VERI-1018] cf_fir_24_16_16.v:1775: compiling module 'cf_fir_24_16_16_23'
VERIFIC-INFO [VERI-1018] cf_fir_24_16_16.v:283: compiling module 'cf_fir_24_16_16_3'
VERIFIC-INFO [VERI-1018] cf_fir_24_16_16.v:749: compiling module 'cf_fir_24_16_16_12'
VERIFIC-INFO [VERI-1018] cf_fir_24_16_16.v:847: compiling module 'cf_fir_24_16_16_13'
VERIFIC-INFO [VERI-1018] cf_fir_24_16_16.v:935: compiling module 'cf_fir_24_16_16_14'
VERIFIC-INFO [VERI-1018] cf_fir_24_16_16.v:1013: compiling module 'cf_fir_24_16_16_15'
VERIFIC-INFO [VERI-1018] cf_fir_24_16_16.v:1081: compiling module 'cf_fir_24_16_16_16'
VERIFIC-INFO [VERI-1018] cf_fir_24_16_16.v:1139: compiling module 'cf_fir_24_16_16_17'
VERIFIC-INFO [VERI-1018] cf_fir_24_16_16.v:348: compiling module 'cf_fir_24_16_16_4'
VERIFIC-INFO [VERI-1018] cf_fir_24_16_16.v:582: compiling module 'cf_fir_24_16_16_9'
VERIFIC-INFO [VERI-1018] cf_fir_24_16_16.v:650: compiling module 'cf_fir_24_16_16_10'
VERIFIC-INFO [VERI-1018] cf_fir_24_16_16.v:708: compiling module 'cf_fir_24_16_16_11'
VERIFIC-INFO [VERI-1018] cf_fir_24_16_16.v:395: compiling module 'cf_fir_24_16_16_5'
VERIFIC-INFO [VERI-1018] cf_fir_24_16_16.v:534: compiling module 'cf_fir_24_16_16_8'
VERIFIC-INFO [VERI-1018] cf_fir_24_16_16.v:435: compiling module 'cf_fir_24_16_16_6'
VERIFIC-INFO [VERI-1018] cf_fir_24_16_16.v:493: compiling module 'cf_fir_24_16_16_7'
Importing module cf_fir_24_16_16.
Importing module cf_fir_24_16_16_1.
Importing module cf_fir_24_16_16_2.
Importing module cf_fir_24_16_16_18.
Importing module cf_fir_24_16_16_19.
Importing module cf_fir_24_16_16_20.
Importing module cf_fir_24_16_16_21.
Importing module cf_fir_24_16_16_22.
Importing module cf_fir_24_16_16_23.
Importing module cf_fir_24_16_16_24.
Importing module cf_fir_24_16_16_25.
Importing module cf_fir_24_16_16_26.
Importing module cf_fir_24_16_16_3.
Importing module cf_fir_24_16_16_12.
Importing module cf_fir_24_16_16_13.
Importing module cf_fir_24_16_16_14.
Importing module cf_fir_24_16_16_15.
Importing module cf_fir_24_16_16_16.
Importing module cf_fir_24_16_16_17.
Importing module cf_fir_24_16_16_4.
Importing module cf_fir_24_16_16_5.
Importing module cf_fir_24_16_16_6.
Importing module cf_fir_24_16_16_7.
Importing module cf_fir_24_16_16_8.
Importing module cf_fir_24_16_16_9.
Importing module cf_fir_24_16_16_10.
Importing module cf_fir_24_16_16_11.

3.4.1. Analyzing design hierarchy..
Top module:  \cf_fir_24_16_16
Used module:     \cf_fir_24_16_16_1
Used module:         \cf_fir_24_16_16_2
Used module:             \cf_fir_24_16_16_3
Used module:                 \cf_fir_24_16_16_4
Used module:                     \cf_fir_24_16_16_5
Used module:                         \cf_fir_24_16_16_6
Used module:                             \cf_fir_24_16_16_7
Used module:                         \cf_fir_24_16_16_8
Used module:                     \cf_fir_24_16_16_9
Used module:                         \cf_fir_24_16_16_10
Used module:                             \cf_fir_24_16_16_11
Used module:                 \cf_fir_24_16_16_12
Used module:                     \cf_fir_24_16_16_13
Used module:                         \cf_fir_24_16_16_14
Used module:                             \cf_fir_24_16_16_15
Used module:                                 \cf_fir_24_16_16_16
Used module:                                     \cf_fir_24_16_16_17
Used module:             \cf_fir_24_16_16_18
Used module:                 \cf_fir_24_16_16_19
Used module:                     \cf_fir_24_16_16_20
Used module:                         \cf_fir_24_16_16_21
Used module:                             \cf_fir_24_16_16_22
Used module:                                 \cf_fir_24_16_16_23
Used module:             \cf_fir_24_16_16_24
Used module:                 \cf_fir_24_16_16_25
Used module:                     \cf_fir_24_16_16_26

3.4.2. Analyzing design hierarchy..
Top module:  \cf_fir_24_16_16
Used module:     \cf_fir_24_16_16_1
Used module:         \cf_fir_24_16_16_2
Used module:             \cf_fir_24_16_16_3
Used module:                 \cf_fir_24_16_16_4
Used module:                     \cf_fir_24_16_16_5
Used module:                         \cf_fir_24_16_16_6
Used module:                             \cf_fir_24_16_16_7
Used module:                         \cf_fir_24_16_16_8
Used module:                     \cf_fir_24_16_16_9
Used module:                         \cf_fir_24_16_16_10
Used module:                             \cf_fir_24_16_16_11
Used module:                 \cf_fir_24_16_16_12
Used module:                     \cf_fir_24_16_16_13
Used module:                         \cf_fir_24_16_16_14
Used module:                             \cf_fir_24_16_16_15
Used module:                                 \cf_fir_24_16_16_16
Used module:                                     \cf_fir_24_16_16_17
Used module:             \cf_fir_24_16_16_18
Used module:                 \cf_fir_24_16_16_19
Used module:                     \cf_fir_24_16_16_20
Used module:                         \cf_fir_24_16_16_21
Used module:                             \cf_fir_24_16_16_22
Used module:                                 \cf_fir_24_16_16_23
Used module:             \cf_fir_24_16_16_24
Used module:                 \cf_fir_24_16_16_25
Used module:                     \cf_fir_24_16_16_26
Removed 0 unused modules.

yosys> proc

3.5. Executing PROC pass (convert processes to netlists).

yosys> proc_clean

3.5.1. Executing PROC_CLEAN pass (remove empty switches from decision trees).
Cleaned up 0 empty switches.

yosys> proc_rmdead

3.5.2. Executing PROC_RMDEAD pass (remove dead branches from decision trees).
Removed a total of 0 dead cases.

yosys> proc_prune

3.5.3. Executing PROC_PRUNE pass (remove redundant assignments in processes).
Removed 0 redundant assignments.
Promoted 0 assignments to connections.

yosys> proc_init

3.5.4. Executing PROC_INIT pass (extract init attributes).

yosys> proc_arst

3.5.5. Executing PROC_ARST pass (detect async resets in processes).

yosys> proc_rom

3.5.6. Executing PROC_ROM pass (convert switches to ROMs).
Converted 0 switches.

yosys> proc_mux

3.5.7. Executing PROC_MUX pass (convert decision trees to multiplexers).

yosys> proc_dlatch

3.5.8. Executing PROC_DLATCH pass (convert process syncs to latches).

yosys> proc_dff

3.5.9. Executing PROC_DFF pass (convert process syncs to FFs).

yosys> proc_memwr

3.5.10. Executing PROC_MEMWR pass (convert process memory writes to cells).

yosys> proc_clean

3.5.11. Executing PROC_CLEAN pass (remove empty switches from decision trees).
Cleaned up 0 empty switches.

yosys> opt_expr -keepdc

3.5.12. Executing OPT_EXPR pass (perform const folding).
Optimizing module cf_fir_24_16_16_11.
<suppressed ~1 debug messages>
Optimizing module cf_fir_24_16_16_10.
<suppressed ~1 debug messages>
Optimizing module cf_fir_24_16_16_9.
<suppressed ~1 debug messages>
Optimizing module cf_fir_24_16_16_8.
<suppressed ~1 debug messages>
Optimizing module cf_fir_24_16_16_7.
<suppressed ~1 debug messages>
Optimizing module cf_fir_24_16_16_6.
<suppressed ~1 debug messages>
Optimizing module cf_fir_24_16_16_5.
<suppressed ~1 debug messages>
Optimizing module cf_fir_24_16_16_4.
<suppressed ~1 debug messages>
Optimizing module cf_fir_24_16_16_17.
<suppressed ~1 debug messages>
Optimizing module cf_fir_24_16_16_16.
<suppressed ~1 debug messages>
Optimizing module cf_fir_24_16_16_15.
<suppressed ~1 debug messages>
Optimizing module cf_fir_24_16_16_14.
<suppressed ~1 debug messages>
Optimizing module cf_fir_24_16_16_13.
<suppressed ~1 debug messages>
Optimizing module cf_fir_24_16_16_12.
<suppressed ~1 debug messages>
Optimizing module cf_fir_24_16_16_3.
<suppressed ~1 debug messages>
Optimizing module cf_fir_24_16_16_26.
<suppressed ~1 debug messages>
Optimizing module cf_fir_24_16_16_25.
<suppressed ~1 debug messages>
Optimizing module cf_fir_24_16_16_24.
<suppressed ~1 debug messages>
Optimizing module cf_fir_24_16_16_23.
<suppressed ~1 debug messages>
Optimizing module cf_fir_24_16_16_22.
<suppressed ~1 debug messages>
Optimizing module cf_fir_24_16_16_21.
<suppressed ~1 debug messages>
Optimizing module cf_fir_24_16_16_20.
<suppressed ~1 debug messages>
Optimizing module cf_fir_24_16_16_19.
<suppressed ~1 debug messages>
Optimizing module cf_fir_24_16_16_18.
<suppressed ~1 debug messages>
Optimizing module cf_fir_24_16_16_2.
<suppressed ~2 debug messages>
Optimizing module cf_fir_24_16_16_1.
Optimizing module cf_fir_24_16_16.

yosys> bmuxmap

3.6. Executing BMUXMAP pass.

yosys> demuxmap

3.7. Executing DEMUXMAP pass.

yosys> clean_zerowidth

yosys> flatten

3.8. Executing FLATTEN pass (flatten design).
Deleting now unused module cf_fir_24_16_16_1.
Deleting now unused module cf_fir_24_16_16_10.
Deleting now unused module cf_fir_24_16_16_11.
Deleting now unused module cf_fir_24_16_16_12.
Deleting now unused module cf_fir_24_16_16_13.
Deleting now unused module cf_fir_24_16_16_14.
Deleting now unused module cf_fir_24_16_16_15.
Deleting now unused module cf_fir_24_16_16_16.
Deleting now unused module cf_fir_24_16_16_17.
Deleting now unused module cf_fir_24_16_16_18.
Deleting now unused module cf_fir_24_16_16_19.
Deleting now unused module cf_fir_24_16_16_2.
Deleting now unused module cf_fir_24_16_16_20.
Deleting now unused module cf_fir_24_16_16_21.
Deleting now unused module cf_fir_24_16_16_22.
Deleting now unused module cf_fir_24_16_16_23.
Deleting now unused module cf_fir_24_16_16_24.
Deleting now unused module cf_fir_24_16_16_25.
Deleting now unused module cf_fir_24_16_16_26.
Deleting now unused module cf_fir_24_16_16_3.
Deleting now unused module cf_fir_24_16_16_4.
Deleting now unused module cf_fir_24_16_16_5.
Deleting now unused module cf_fir_24_16_16_6.
Deleting now unused module cf_fir_24_16_16_7.
Deleting now unused module cf_fir_24_16_16_8.
Deleting now unused module cf_fir_24_16_16_9.
<suppressed ~26 debug messages>

yosys> bmuxmap

3.9. Executing BMUXMAP pass.

yosys> demuxmap

3.10. Executing DEMUXMAP pass.

yosys> clean_zerowidth

yosys> tribuf -logic -formal

3.11. Executing TRIBUF pass.

yosys> deminout

3.12. Executing DEMINOUT pass (demote inout ports to input or output).

yosys> opt_expr

3.13. Executing OPT_EXPR pass (perform const folding).
Optimizing module cf_fir_24_16_16.

yosys> opt_clean

3.14. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \cf_fir_24_16_16..
Removed 0 unused cells and 14655 unused wires.
<suppressed ~428 debug messages>

yosys> check

3.15. Executing CHECK pass (checking for obvious problems).
Checking module cf_fir_24_16_16...
Found and reported 0 problems.

yosys> opt_expr

3.16. Executing OPT_EXPR pass (perform const folding).
Optimizing module cf_fir_24_16_16.
<suppressed ~129 debug messages>

yosys> opt_merge -nomux

3.17. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\cf_fir_24_16_16'.
Removed a total of 0 cells.

yosys> opt_muxtree

3.18. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \cf_fir_24_16_16..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Removed 0 multiplexer ports.
<suppressed ~25 debug messages>

yosys> opt_reduce

3.19. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \cf_fir_24_16_16.
Performed a total of 0 changes.

yosys> opt_merge

3.20. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\cf_fir_24_16_16'.
Removed a total of 0 cells.

yosys> opt_share

3.21. Executing OPT_SHARE pass.

yosys> opt_dff -nosdff -nodffe

3.22. Executing OPT_DFF pass (perform DFF optimizations).
Removing never-active async load on $flatten\s1.\s3.\s8.\s8.\s8.\s8.\s13.$verific$n9_reg$cf_fir_24_16_16.v:529$14907 ($aldff) from module cf_fir_24_16_16.
Removing never-active async load on $flatten\s1.\s3.\s8.\s8.\s8.\s8.\s13.$verific$n6_reg$cf_fir_24_16_16.v:521$14901 ($aldff) from module cf_fir_24_16_16.
Removing never-active async load on $flatten\s1.\s3.\s7.\s9.$verific$n6_reg$cf_fir_24_16_16.v:1447$5103 ($aldff) from module cf_fir_24_16_16.
Removing never-active async load on $flatten\s1.\s3.\s7.\s9.$verific$n8_reg$cf_fir_24_16_16.v:1454$5109 ($aldff) from module cf_fir_24_16_16.
Removing never-active async load on $flatten\s1.\s3.\s8.\s8.\s8.\s8.$verific$n6_reg$cf_fir_24_16_16.v:474$14689 ($aldff) from module cf_fir_24_16_16.
Removing never-active async load on $flatten\s1.\s3.\s8.\s8.\s8.\s8.$verific$n12_reg$cf_fir_24_16_16.v:485$14699 ($aldff) from module cf_fir_24_16_16.
Removing never-active async load on $flatten\s1.\s3.\s8.\s8.\s8.\s7.$verific$n6_reg$cf_fir_24_16_16.v:566$14933 ($aldff) from module cf_fir_24_16_16.
Removing never-active async load on $flatten\s1.\s3.\s8.\s8.\s8.\s7.$verific$n12_reg$cf_fir_24_16_16.v:577$14943 ($aldff) from module cf_fir_24_16_16.
Removing never-active async load on $flatten\s1.\s3.\s6.$verific$n6_reg$cf_fir_24_16_16.v:1917$7976 ($aldff) from module cf_fir_24_16_16.
Removing never-active async load on $flatten\s1.\s3.\s6.$verific$n5_reg$cf_fir_24_16_16.v:1911$7972 ($aldff) from module cf_fir_24_16_16.
Removing never-active async load on $flatten\s1.\s3.\s6.$verific$n7_reg$cf_fir_24_16_16.v:1923$7980 ($aldff) from module cf_fir_24_16_16.
Removing never-active async load on $flatten\s1.\s3.\s8.\s8.\s8.$verific$n6_reg$cf_fir_24_16_16.v:429$14068 ($aldff) from module cf_fir_24_16_16.
Removing never-active async load on $flatten\s1.\s3.\s7.\s9.$verific$n4_reg$cf_fir_24_16_16.v:1440$5097 ($aldff) from module cf_fir_24_16_16.
Removing never-active async load on $flatten\s1.\s3.\s8.\s8.\s7.\s13.\s13.$verific$n9_reg$cf_fir_24_16_16.v:744$15592 ($aldff) from module cf_fir_24_16_16.
Removing never-active async load on $flatten\s1.\s3.\s8.\s8.\s7.\s13.\s13.$verific$n6_reg$cf_fir_24_16_16.v:736$15586 ($aldff) from module cf_fir_24_16_16.
Removing never-active async load on $flatten\s1.\s3.\s6.\s8.$verific$n5_reg$cf_fir_24_16_16.v:2013$8308 ($aldff) from module cf_fir_24_16_16.
Removing never-active async load on $flatten\s1.\s3.\s6.\s8.$verific$n4_reg$cf_fir_24_16_16.v:2007$8304 ($aldff) from module cf_fir_24_16_16.
Removing never-active async load on $flatten\s1.\s3.\s6.\s8.$verific$n3_reg$cf_fir_24_16_16.v:2001$8300 ($aldff) from module cf_fir_24_16_16.
Removing never-active async load on $flatten\s1.\s3.\s6.\s8.$verific$n2_reg$cf_fir_24_16_16.v:1995$8296 ($aldff) from module cf_fir_24_16_16.
Removing never-active async load on $flatten\s1.\s3.\s8.\s8.\s7.\s13.$verific$n6_reg$cf_fir_24_16_16.v:689$15379 ($aldff) from module cf_fir_24_16_16.
Removing never-active async load on $flatten\s1.\s3.\s8.\s8.\s7.\s13.$verific$n12_reg$cf_fir_24_16_16.v:700$15389 ($aldff) from module cf_fir_24_16_16.
Removing never-active async load on $flatten\s1.\s3.\s7.\s9.$verific$n2_reg$cf_fir_24_16_16.v:1433$5091 ($aldff) from module cf_fir_24_16_16.
Removing never-active async load on $flatten\s1.\s3.\s6.\s8.$verific$n1_reg$cf_fir_24_16_16.v:1989$8292 ($aldff) from module cf_fir_24_16_16.
Removing never-active async load on $flatten\s1.\s3.\s8.\s8.\s7.$verific$n6_reg$cf_fir_24_16_16.v:629$14969 ($aldff) from module cf_fir_24_16_16.
Removing never-active async load on $flatten\s1.\s3.\s8.\s8.\s7.$verific$n12_reg$cf_fir_24_16_16.v:640$14979 ($aldff) from module cf_fir_24_16_16.
Removing never-active async load on $flatten\s1.\s3.\s6.\s8.$verific$n7_reg$cf_fir_24_16_16.v:2025$8316 ($aldff) from module cf_fir_24_16_16.
Removing never-active async load on $flatten\s1.\s3.\s6.\s8.$verific$n6_reg$cf_fir_24_16_16.v:2019$8312 ($aldff) from module cf_fir_24_16_16.
Removing never-active async load on $flatten\s1.\s3.\s8.\s8.$verific$n6_reg$cf_fir_24_16_16.v:389$13199 ($aldff) from module cf_fir_24_16_16.
Removing never-active async load on $flatten\s1.\s3.\s6.$verific$n4_reg$cf_fir_24_16_16.v:1905$7968 ($aldff) from module cf_fir_24_16_16.
Removing never-active async load on $flatten\s1.\s3.\s6.$verific$n3_reg$cf_fir_24_16_16.v:1899$7964 ($aldff) from module cf_fir_24_16_16.
Removing never-active async load on $flatten\s1.\s3.\s8.\s7.\s13.\s13.\s13.\s13.\s13.$verific$n9_reg$cf_fir_24_16_16.v:1175$13177 ($aldff) from module cf_fir_24_16_16.
Removing never-active async load on $flatten\s1.\s3.\s8.\s7.\s13.\s13.\s13.\s13.\s13.$verific$n6_reg$cf_fir_24_16_16.v:1167$13171 ($aldff) from module cf_fir_24_16_16.
Removing never-active async load on $flatten\s1.\s3.\s7.\s9.\s9.$verific$n6_reg$cf_fir_24_16_16.v:1570$6196 ($aldff) from module cf_fir_24_16_16.
Removing never-active async load on $flatten\s1.\s3.\s7.\s9.\s9.$verific$n4_reg$cf_fir_24_16_16.v:1563$6190 ($aldff) from module cf_fir_24_16_16.
Removing never-active async load on $flatten\s1.\s3.\s8.\s7.\s13.\s13.\s13.\s13.$verific$n6_reg$cf_fir_24_16_16.v:1120$12969 ($aldff) from module cf_fir_24_16_16.
Removing never-active async load on $flatten\s1.\s3.\s8.\s7.\s13.\s13.\s13.\s13.$verific$n12_reg$cf_fir_24_16_16.v:1131$12979 ($aldff) from module cf_fir_24_16_16.
Removing never-active async load on $flatten\s1.\s3.\s7.\s9.\s9.$verific$n2_reg$cf_fir_24_16_16.v:1556$6184 ($aldff) from module cf_fir_24_16_16.
Removing never-active async load on $flatten\s1.\s3.\s8.\s7.\s13.\s13.\s13.$verific$n6_reg$cf_fir_24_16_16.v:1060$12570 ($aldff) from module cf_fir_24_16_16.
Removing never-active async load on $flatten\s1.\s3.\s8.\s7.\s13.\s13.\s13.$verific$n12_reg$cf_fir_24_16_16.v:1071$12580 ($aldff) from module cf_fir_24_16_16.
Removing never-active async load on $flatten\s1.\s3.\s7.\s9.\s9.$verific$n8_reg$cf_fir_24_16_16.v:1577$6202 ($aldff) from module cf_fir_24_16_16.
Removing never-active async load on $flatten\s1.\s3.\s8.\s7.\s13.\s13.$verific$n6_reg$cf_fir_24_16_16.v:990$11975 ($aldff) from module cf_fir_24_16_16.
Removing never-active async load on $flatten\s1.\s3.\s8.\s7.\s13.\s13.$verific$n12_reg$cf_fir_24_16_16.v:1001$11985 ($aldff) from module cf_fir_24_16_16.
Removing never-active async load on $flatten\s1.\s3.$verific$n2_reg$cf_fir_24_16_16.v:263$948 ($aldff) from module cf_fir_24_16_16.
Removing never-active async load on $flatten\s1.\s3.$verific$n1_reg$cf_fir_24_16_16.v:257$944 ($aldff) from module cf_fir_24_16_16.
Removing never-active async load on $flatten\s1.\s3.$verific$n5_reg$cf_fir_24_16_16.v:276$959 ($aldff) from module cf_fir_24_16_16.
Removing never-active async load on $flatten\s1.\s3.$verific$n3_reg$cf_fir_24_16_16.v:269$952 ($aldff) from module cf_fir_24_16_16.
Removing never-active async load on $flatten\s1.\s3.\s8.\s7.\s13.$verific$n6_reg$cf_fir_24_16_16.v:910$11184 ($aldff) from module cf_fir_24_16_16.
Removing never-active async load on $flatten\s1.\s3.\s8.\s7.\s13.$verific$n12_reg$cf_fir_24_16_16.v:921$11194 ($aldff) from module cf_fir_24_16_16.
Removing never-active async load on $flatten\s1.\s3.\s6.$verific$n2_reg$cf_fir_24_16_16.v:1893$7960 ($aldff) from module cf_fir_24_16_16.
Removing never-active async load on $flatten\s1.\s3.\s6.$verific$n1_reg$cf_fir_24_16_16.v:1887$7956 ($aldff) from module cf_fir_24_16_16.
Removing never-active async load on $flatten\s1.\s3.\s8.\s7.$verific$n6_reg$cf_fir_24_16_16.v:820$10197 ($aldff) from module cf_fir_24_16_16.
Removing never-active async load on $flatten\s1.\s3.\s8.\s7.$verific$n12_reg$cf_fir_24_16_16.v:831$10207 ($aldff) from module cf_fir_24_16_16.
Removing never-active async load on $flatten\s1.\s3.\s8.$verific$n6_reg$cf_fir_24_16_16.v:342$8568 ($aldff) from module cf_fir_24_16_16.
Removing never-active async load on $flatten\s1.\s3.\s7.$verific$n2_reg$cf_fir_24_16_16.v:1290$3738 ($aldff) from module cf_fir_24_16_16.
Removing never-active async load on $flatten\s1.\s3.\s7.\s9.\s9.\s9.\s9.\s9.$verific$n8_reg$cf_fir_24_16_16.v:1826$7921 ($aldff) from module cf_fir_24_16_16.
Removing never-active async load on $flatten\s1.\s3.\s7.\s9.\s9.\s9.\s9.\s9.$verific$n6_reg$cf_fir_24_16_16.v:1819$7915 ($aldff) from module cf_fir_24_16_16.
Removing never-active async load on $flatten\s1.\s3.\s7.\s9.\s9.\s9.\s9.\s9.$verific$n4_reg$cf_fir_24_16_16.v:1812$7909 ($aldff) from module cf_fir_24_16_16.
Removing never-active async load on $flatten\s1.\s3.\s7.\s9.\s9.\s9.\s9.\s9.$verific$n2_reg$cf_fir_24_16_16.v:1805$7903 ($aldff) from module cf_fir_24_16_16.
Removing never-active async load on $flatten\s1.\s3.\s6.\s8.\s8.$verific$n6_reg$cf_fir_24_16_16.v:2100$8532 ($aldff) from module cf_fir_24_16_16.
Removing never-active async load on $flatten\s1.\s3.\s6.\s8.\s8.$verific$n5_reg$cf_fir_24_16_16.v:2094$8528 ($aldff) from module cf_fir_24_16_16.
Removing never-active async load on $flatten\s1.\s3.\s6.\s8.\s8.$verific$n8_reg$cf_fir_24_16_16.v:2112$8540 ($aldff) from module cf_fir_24_16_16.
Removing never-active async load on $flatten\s1.\s3.\s6.\s8.\s8.$verific$n7_reg$cf_fir_24_16_16.v:2106$8536 ($aldff) from module cf_fir_24_16_16.
Removing never-active async load on $flatten\s1.\s3.\s7.\s9.\s9.\s9.\s9.$verific$n8_reg$cf_fir_24_16_16.v:1763$7608 ($aldff) from module cf_fir_24_16_16.
Removing never-active async load on $flatten\s1.\s3.\s7.\s9.\s9.\s9.\s9.$verific$n6_reg$cf_fir_24_16_16.v:1756$7602 ($aldff) from module cf_fir_24_16_16.
Removing never-active async load on $flatten\s1.\s3.\s7.\s9.\s9.\s9.\s9.$verific$n4_reg$cf_fir_24_16_16.v:1749$7596 ($aldff) from module cf_fir_24_16_16.
Removing never-active async load on $flatten\s1.\s3.\s7.\s9.\s9.\s9.\s9.$verific$n2_reg$cf_fir_24_16_16.v:1742$7590 ($aldff) from module cf_fir_24_16_16.
Removing never-active async load on $flatten\s1.\s3.\s7.$verific$n4_reg$cf_fir_24_16_16.v:1297$3744 ($aldff) from module cf_fir_24_16_16.
Removing never-active async load on $flatten\s1.\s3.\s7.$verific$n6_reg$cf_fir_24_16_16.v:1304$3750 ($aldff) from module cf_fir_24_16_16.
Removing never-active async load on $flatten\s1.\s3.\s7.$verific$n8_reg$cf_fir_24_16_16.v:1311$3756 ($aldff) from module cf_fir_24_16_16.
Removing never-active async load on $flatten\s1.\s3.\s7.\s9.\s9.\s9.$verific$n8_reg$cf_fir_24_16_16.v:1680$7035 ($aldff) from module cf_fir_24_16_16.
Removing never-active async load on $flatten\s1.\s3.\s7.\s9.\s9.\s9.$verific$n6_reg$cf_fir_24_16_16.v:1673$7029 ($aldff) from module cf_fir_24_16_16.
Removing never-active async load on $flatten\s1.\s3.\s7.\s9.\s9.\s9.$verific$n4_reg$cf_fir_24_16_16.v:1666$7023 ($aldff) from module cf_fir_24_16_16.
Removing never-active async load on $flatten\s1.\s3.\s7.\s9.\s9.\s9.$verific$n2_reg$cf_fir_24_16_16.v:1659$7017 ($aldff) from module cf_fir_24_16_16.
Removing never-active async load on $flatten\s1.\s3.\s6.\s8.\s8.$verific$n2_reg$cf_fir_24_16_16.v:2076$8516 ($aldff) from module cf_fir_24_16_16.
Removing never-active async load on $flatten\s1.\s3.\s6.\s8.\s8.$verific$n1_reg$cf_fir_24_16_16.v:2070$8512 ($aldff) from module cf_fir_24_16_16.
Removing never-active async load on $flatten\s1.\s3.\s6.\s8.\s8.$verific$n4_reg$cf_fir_24_16_16.v:2088$8524 ($aldff) from module cf_fir_24_16_16.
Removing never-active async load on $flatten\s1.\s3.\s6.\s8.\s8.$verific$n3_reg$cf_fir_24_16_16.v:2082$8520 ($aldff) from module cf_fir_24_16_16.

yosys> opt_clean

3.23. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \cf_fir_24_16_16..
Removed 0 unused cells and 129 unused wires.
<suppressed ~1 debug messages>

yosys> opt_expr

3.24. Executing OPT_EXPR pass (perform const folding).
Optimizing module cf_fir_24_16_16.
MAX OPT ITERATION = 1

yosys> fsm -encoding binary

3.25. Executing FSM pass (extract and optimize FSM).

yosys> fsm_detect

3.25.1. Executing FSM_DETECT pass (finding FSMs in design).

yosys> fsm_extract

3.25.2. Executing FSM_EXTRACT pass (extracting FSM from design).

yosys> fsm_opt

3.25.3. Executing FSM_OPT pass (simple optimizations of FSMs).

yosys> opt_clean

3.25.4. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \cf_fir_24_16_16..

yosys> fsm_opt

3.25.5. Executing FSM_OPT pass (simple optimizations of FSMs).

yosys> fsm_recode -encoding binary

3.25.6. Executing FSM_RECODE pass (re-assigning FSM state encoding).

yosys> fsm_info

3.25.7. Executing FSM_INFO pass (dumping all available information on FSM cells).

yosys> fsm_map

3.25.8. Executing FSM_MAP pass (mapping FSMs to basic logic).

yosys> opt_expr

3.26. Executing OPT_EXPR pass (perform const folding).
Optimizing module cf_fir_24_16_16.

yosys> opt_merge -nomux

3.27. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\cf_fir_24_16_16'.
Removed a total of 0 cells.

yosys> opt_muxtree

3.28. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \cf_fir_24_16_16..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Removed 0 multiplexer ports.
<suppressed ~25 debug messages>

yosys> opt_reduce

3.29. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \cf_fir_24_16_16.
Performed a total of 0 changes.

yosys> opt_merge

3.30. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\cf_fir_24_16_16'.
Removed a total of 0 cells.

yosys> opt_share

3.31. Executing OPT_SHARE pass.

yosys> opt_dff -nosdff -sat

3.32. Executing OPT_DFF pass (perform DFF optimizations).

yosys> opt_clean

3.33. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \cf_fir_24_16_16..

yosys> opt_expr

3.34. Executing OPT_EXPR pass (perform const folding).
Optimizing module cf_fir_24_16_16.
MAX OPT ITERATION = 1

yosys> wreduce -keepdc

3.35. Executing WREDUCE pass (reducing word size of cells).
Removed top 1 bits (of 34) from FF cell cf_fir_24_16_16.$flatten\s1.\s3.\s8.\s8.\s7.\s13.\s13.$verific$n9_reg$cf_fir_24_16_16.v:744$15592 ($dff).
Removed top 1 bits (of 33) from FF cell cf_fir_24_16_16.$flatten\s1.\s3.\s8.\s7.\s13.\s13.\s13.\s13.\s13.$verific$n9_reg$cf_fir_24_16_16.v:1175$13177 ($dff).
Removed top 2 bits (of 35) from FF cell cf_fir_24_16_16.$flatten\s1.\s3.\s8.\s8.\s8.\s8.\s13.$verific$n9_reg$cf_fir_24_16_16.v:529$14907 ($dff).
Removed top 1 bits (of 33) from FF cell cf_fir_24_16_16.$flatten\s1.\s3.\s8.\s8.\s7.\s13.\s13.$verific$n9_reg$cf_fir_24_16_16.v:744$15592 ($dff).
Removed top 1 bits (of 33) from FF cell cf_fir_24_16_16.$flatten\s1.\s3.\s8.\s8.\s8.\s8.\s13.$verific$n9_reg$cf_fir_24_16_16.v:529$14907 ($dff).

yosys> peepopt

3.36. Executing PEEPOPT pass (run peephole optimizers).

yosys> opt_clean

3.37. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \cf_fir_24_16_16..

yosys> bmuxmap

3.38. Executing BMUXMAP pass.

yosys> demuxmap

3.39. Executing DEMUXMAP pass.

yosys> clean_zerowidth

yosys> alumacc

3.40. Executing ALUMACC pass (create $alu and $macc cells).
Extracting $alu and $macc cells in module cf_fir_24_16_16:
  creating $macc model for $flatten\s1.\s3.$verific$mult_27$cf_fir_24_16_16.v:270$953 ($mul).
  creating $macc model for $flatten\s1.\s3.\s7.$verific$mult_13$cf_fir_24_16_16.v:1291$3739 ($mul).
  creating $macc model for $flatten\s1.\s3.\s7.$verific$mult_23$cf_fir_24_16_16.v:1298$3745 ($mul).
  creating $macc model for $flatten\s1.\s3.\s7.$verific$mult_3$cf_fir_24_16_16.v:1284$3732 ($mul).
  creating $macc model for $flatten\s1.\s3.\s7.$verific$mult_33$cf_fir_24_16_16.v:1305$3751 ($mul).
  creating $macc model for $flatten\s1.\s3.\s7.\s9.$verific$mult_13$cf_fir_24_16_16.v:1434$5092 ($mul).
  creating $macc model for $flatten\s1.\s3.\s7.\s9.$verific$mult_23$cf_fir_24_16_16.v:1441$5098 ($mul).
  creating $macc model for $flatten\s1.\s3.\s7.\s9.$verific$mult_3$cf_fir_24_16_16.v:1427$5085 ($mul).
  creating $macc model for $flatten\s1.\s3.\s7.\s9.$verific$mult_33$cf_fir_24_16_16.v:1448$5104 ($mul).
  creating $macc model for $flatten\s1.\s3.\s7.\s9.\s9.$verific$mult_13$cf_fir_24_16_16.v:1557$6185 ($mul).
  creating $macc model for $flatten\s1.\s3.\s7.\s9.\s9.$verific$mult_23$cf_fir_24_16_16.v:1564$6191 ($mul).
  creating $macc model for $flatten\s1.\s3.\s7.\s9.\s9.$verific$mult_3$cf_fir_24_16_16.v:1550$6178 ($mul).
  creating $macc model for $flatten\s1.\s3.\s7.\s9.\s9.$verific$mult_33$cf_fir_24_16_16.v:1571$6197 ($mul).
  creating $macc model for $flatten\s1.\s3.\s7.\s9.\s9.\s9.$verific$mult_13$cf_fir_24_16_16.v:1660$7018 ($mul).
  creating $macc model for $flatten\s1.\s3.\s7.\s9.\s9.\s9.$verific$mult_23$cf_fir_24_16_16.v:1667$7024 ($mul).
  creating $macc model for $flatten\s1.\s3.\s7.\s9.\s9.\s9.$verific$mult_3$cf_fir_24_16_16.v:1653$7011 ($mul).
  creating $macc model for $flatten\s1.\s3.\s7.\s9.\s9.\s9.$verific$mult_33$cf_fir_24_16_16.v:1674$7030 ($mul).
  creating $macc model for $flatten\s1.\s3.\s7.\s9.\s9.\s9.\s9.$verific$mult_13$cf_fir_24_16_16.v:1743$7591 ($mul).
  creating $macc model for $flatten\s1.\s3.\s7.\s9.\s9.\s9.\s9.$verific$mult_23$cf_fir_24_16_16.v:1750$7597 ($mul).
  creating $macc model for $flatten\s1.\s3.\s7.\s9.\s9.\s9.\s9.$verific$mult_3$cf_fir_24_16_16.v:1736$7584 ($mul).
  creating $macc model for $flatten\s1.\s3.\s7.\s9.\s9.\s9.\s9.$verific$mult_33$cf_fir_24_16_16.v:1757$7603 ($mul).
  creating $macc model for $flatten\s1.\s3.\s7.\s9.\s9.\s9.\s9.\s9.$verific$mult_13$cf_fir_24_16_16.v:1806$7904 ($mul).
  creating $macc model for $flatten\s1.\s3.\s7.\s9.\s9.\s9.\s9.\s9.$verific$mult_23$cf_fir_24_16_16.v:1813$7910 ($mul).
  creating $macc model for $flatten\s1.\s3.\s7.\s9.\s9.\s9.\s9.\s9.$verific$mult_3$cf_fir_24_16_16.v:1799$7897 ($mul).
  creating $macc model for $flatten\s1.\s3.\s7.\s9.\s9.\s9.\s9.\s9.$verific$mult_33$cf_fir_24_16_16.v:1820$7916 ($mul).
  creating $macc model for $flatten\s1.\s3.\s8.$verific$add_7$cf_fir_24_16_16.v:336$8562 ($add).
  creating $macc model for $flatten\s1.\s3.\s8.\s7.$verific$add_21$cf_fir_24_16_16.v:825$10202 ($add).
  creating $macc model for $flatten\s1.\s3.\s8.\s7.$verific$add_7$cf_fir_24_16_16.v:814$10191 ($add).
  creating $macc model for $flatten\s1.\s3.\s8.\s7.\s13.$verific$add_21$cf_fir_24_16_16.v:915$11189 ($add).
  creating $macc model for $flatten\s1.\s3.\s8.\s7.\s13.$verific$add_7$cf_fir_24_16_16.v:904$11178 ($add).
  creating $macc model for $flatten\s1.\s3.\s8.\s7.\s13.\s13.$verific$add_21$cf_fir_24_16_16.v:995$11980 ($add).
  creating $macc model for $flatten\s1.\s3.\s8.\s7.\s13.\s13.$verific$add_7$cf_fir_24_16_16.v:984$11969 ($add).
  creating $macc model for $flatten\s1.\s3.\s8.\s7.\s13.\s13.\s13.$verific$add_21$cf_fir_24_16_16.v:1065$12575 ($add).
  creating $macc model for $flatten\s1.\s3.\s8.\s7.\s13.\s13.\s13.$verific$add_7$cf_fir_24_16_16.v:1054$12564 ($add).
  creating $macc model for $flatten\s1.\s3.\s8.\s7.\s13.\s13.\s13.\s13.$verific$add_21$cf_fir_24_16_16.v:1125$12974 ($add).
  creating $macc model for $flatten\s1.\s3.\s8.\s7.\s13.\s13.\s13.\s13.$verific$add_7$cf_fir_24_16_16.v:1114$12963 ($add).
  creating $macc model for $flatten\s1.\s3.\s8.\s7.\s13.\s13.\s13.\s13.\s13.$verific$add_7$cf_fir_24_16_16.v:1161$13165 ($add).
  creating $macc model for $flatten\s1.\s3.\s8.\s8.$verific$add_7$cf_fir_24_16_16.v:383$13193 ($add).
  creating $macc model for $flatten\s1.\s3.\s8.\s8.\s7.$verific$add_21$cf_fir_24_16_16.v:634$14974 ($add).
  creating $macc model for $flatten\s1.\s3.\s8.\s8.\s7.$verific$add_7$cf_fir_24_16_16.v:623$14963 ($add).
  creating $macc model for $flatten\s1.\s3.\s8.\s8.\s7.\s13.$verific$add_21$cf_fir_24_16_16.v:694$15384 ($add).
  creating $macc model for $flatten\s1.\s3.\s8.\s8.\s7.\s13.$verific$add_7$cf_fir_24_16_16.v:683$15373 ($add).
  creating $macc model for $flatten\s1.\s3.\s8.\s8.\s7.\s13.\s13.$verific$add_7$cf_fir_24_16_16.v:730$15580 ($add).
  creating $macc model for $flatten\s1.\s3.\s8.\s8.\s8.$verific$add_7$cf_fir_24_16_16.v:423$14062 ($add).
  creating $macc model for $flatten\s1.\s3.\s8.\s8.\s8.\s7.$verific$add_21$cf_fir_24_16_16.v:571$14938 ($add).
  creating $macc model for $flatten\s1.\s3.\s8.\s8.\s8.\s7.$verific$add_7$cf_fir_24_16_16.v:560$14927 ($add).
  creating $macc model for $flatten\s1.\s3.\s8.\s8.\s8.\s8.$verific$add_21$cf_fir_24_16_16.v:479$14694 ($add).
  creating $macc model for $flatten\s1.\s3.\s8.\s8.\s8.\s8.$verific$add_7$cf_fir_24_16_16.v:468$14683 ($add).
  creating $macc model for $flatten\s1.\s3.\s8.\s8.\s8.\s8.\s13.$verific$add_7$cf_fir_24_16_16.v:515$14895 ($add).
  creating $alu model for $macc $flatten\s1.\s3.\s8.\s8.\s8.\s8.\s13.$verific$add_7$cf_fir_24_16_16.v:515$14895.
  creating $alu model for $macc $flatten\s1.\s3.\s8.\s8.\s8.\s8.$verific$add_7$cf_fir_24_16_16.v:468$14683.
  creating $alu model for $macc $flatten\s1.\s3.\s8.\s8.\s8.\s8.$verific$add_21$cf_fir_24_16_16.v:479$14694.
  creating $alu model for $macc $flatten\s1.\s3.\s8.\s8.\s8.\s7.$verific$add_7$cf_fir_24_16_16.v:560$14927.
  creating $alu model for $macc $flatten\s1.\s3.\s8.\s8.\s8.\s7.$verific$add_21$cf_fir_24_16_16.v:571$14938.
  creating $alu model for $macc $flatten\s1.\s3.\s8.\s8.\s8.$verific$add_7$cf_fir_24_16_16.v:423$14062.
  creating $alu model for $macc $flatten\s1.\s3.\s8.\s8.\s7.\s13.\s13.$verific$add_7$cf_fir_24_16_16.v:730$15580.
  creating $alu model for $macc $flatten\s1.\s3.\s8.\s8.\s7.\s13.$verific$add_7$cf_fir_24_16_16.v:683$15373.
  creating $alu model for $macc $flatten\s1.\s3.\s8.\s8.\s7.\s13.$verific$add_21$cf_fir_24_16_16.v:694$15384.
  creating $alu model for $macc $flatten\s1.\s3.\s8.\s8.\s7.$verific$add_7$cf_fir_24_16_16.v:623$14963.
  creating $alu model for $macc $flatten\s1.\s3.\s8.\s8.\s7.$verific$add_21$cf_fir_24_16_16.v:634$14974.
  creating $alu model for $macc $flatten\s1.\s3.\s8.\s8.$verific$add_7$cf_fir_24_16_16.v:383$13193.
  creating $alu model for $macc $flatten\s1.\s3.\s8.\s7.\s13.\s13.\s13.\s13.\s13.$verific$add_7$cf_fir_24_16_16.v:1161$13165.
  creating $alu model for $macc $flatten\s1.\s3.\s8.\s7.\s13.\s13.\s13.\s13.$verific$add_7$cf_fir_24_16_16.v:1114$12963.
  creating $alu model for $macc $flatten\s1.\s3.\s8.\s7.\s13.\s13.\s13.\s13.$verific$add_21$cf_fir_24_16_16.v:1125$12974.
  creating $alu model for $macc $flatten\s1.\s3.\s8.\s7.\s13.\s13.\s13.$verific$add_7$cf_fir_24_16_16.v:1054$12564.
  creating $alu model for $macc $flatten\s1.\s3.\s8.\s7.\s13.\s13.\s13.$verific$add_21$cf_fir_24_16_16.v:1065$12575.
  creating $alu model for $macc $flatten\s1.\s3.\s8.\s7.\s13.\s13.$verific$add_7$cf_fir_24_16_16.v:984$11969.
  creating $alu model for $macc $flatten\s1.\s3.\s8.\s7.\s13.\s13.$verific$add_21$cf_fir_24_16_16.v:995$11980.
  creating $alu model for $macc $flatten\s1.\s3.\s8.\s7.\s13.$verific$add_7$cf_fir_24_16_16.v:904$11178.
  creating $alu model for $macc $flatten\s1.\s3.\s8.\s7.\s13.$verific$add_21$cf_fir_24_16_16.v:915$11189.
  creating $alu model for $macc $flatten\s1.\s3.\s8.\s7.$verific$add_7$cf_fir_24_16_16.v:814$10191.
  creating $alu model for $macc $flatten\s1.\s3.\s8.\s7.$verific$add_21$cf_fir_24_16_16.v:825$10202.
  creating $alu model for $macc $flatten\s1.\s3.\s8.$verific$add_7$cf_fir_24_16_16.v:336$8562.
  creating $macc cell for $flatten\s1.\s3.\s7.\s9.\s9.\s9.\s9.\s9.$verific$mult_33$cf_fir_24_16_16.v:1820$7916: $auto$alumacc.cc:365:replace_macc$15595
  creating $macc cell for $flatten\s1.\s3.\s7.\s9.\s9.\s9.\s9.\s9.$verific$mult_3$cf_fir_24_16_16.v:1799$7897: $auto$alumacc.cc:365:replace_macc$15596
  creating $macc cell for $flatten\s1.\s3.\s7.\s9.\s9.\s9.\s9.\s9.$verific$mult_23$cf_fir_24_16_16.v:1813$7910: $auto$alumacc.cc:365:replace_macc$15597
  creating $macc cell for $flatten\s1.\s3.\s7.\s9.\s9.\s9.\s9.\s9.$verific$mult_13$cf_fir_24_16_16.v:1806$7904: $auto$alumacc.cc:365:replace_macc$15598
  creating $macc cell for $flatten\s1.\s3.\s7.\s9.\s9.\s9.\s9.$verific$mult_33$cf_fir_24_16_16.v:1757$7603: $auto$alumacc.cc:365:replace_macc$15599
  creating $macc cell for $flatten\s1.\s3.\s7.\s9.\s9.\s9.\s9.$verific$mult_3$cf_fir_24_16_16.v:1736$7584: $auto$alumacc.cc:365:replace_macc$15600
  creating $macc cell for $flatten\s1.\s3.\s7.\s9.\s9.\s9.\s9.$verific$mult_23$cf_fir_24_16_16.v:1750$7597: $auto$alumacc.cc:365:replace_macc$15601
  creating $macc cell for $flatten\s1.\s3.\s7.\s9.\s9.\s9.\s9.$verific$mult_13$cf_fir_24_16_16.v:1743$7591: $auto$alumacc.cc:365:replace_macc$15602
  creating $macc cell for $flatten\s1.\s3.\s7.\s9.\s9.\s9.$verific$mult_33$cf_fir_24_16_16.v:1674$7030: $auto$alumacc.cc:365:replace_macc$15603
  creating $macc cell for $flatten\s1.\s3.\s7.\s9.\s9.\s9.$verific$mult_3$cf_fir_24_16_16.v:1653$7011: $auto$alumacc.cc:365:replace_macc$15604
  creating $macc cell for $flatten\s1.\s3.\s7.\s9.\s9.\s9.$verific$mult_23$cf_fir_24_16_16.v:1667$7024: $auto$alumacc.cc:365:replace_macc$15605
  creating $macc cell for $flatten\s1.\s3.\s7.\s9.\s9.\s9.$verific$mult_13$cf_fir_24_16_16.v:1660$7018: $auto$alumacc.cc:365:replace_macc$15606
  creating $macc cell for $flatten\s1.\s3.\s7.\s9.\s9.$verific$mult_33$cf_fir_24_16_16.v:1571$6197: $auto$alumacc.cc:365:replace_macc$15607
  creating $macc cell for $flatten\s1.\s3.\s7.\s9.\s9.$verific$mult_3$cf_fir_24_16_16.v:1550$6178: $auto$alumacc.cc:365:replace_macc$15608
  creating $macc cell for $flatten\s1.\s3.\s7.\s9.\s9.$verific$mult_23$cf_fir_24_16_16.v:1564$6191: $auto$alumacc.cc:365:replace_macc$15609
  creating $macc cell for $flatten\s1.\s3.\s7.\s9.\s9.$verific$mult_13$cf_fir_24_16_16.v:1557$6185: $auto$alumacc.cc:365:replace_macc$15610
  creating $macc cell for $flatten\s1.\s3.\s7.\s9.$verific$mult_33$cf_fir_24_16_16.v:1448$5104: $auto$alumacc.cc:365:replace_macc$15611
  creating $macc cell for $flatten\s1.\s3.\s7.\s9.$verific$mult_3$cf_fir_24_16_16.v:1427$5085: $auto$alumacc.cc:365:replace_macc$15612
  creating $macc cell for $flatten\s1.\s3.\s7.\s9.$verific$mult_23$cf_fir_24_16_16.v:1441$5098: $auto$alumacc.cc:365:replace_macc$15613
  creating $macc cell for $flatten\s1.\s3.\s7.\s9.$verific$mult_13$cf_fir_24_16_16.v:1434$5092: $auto$alumacc.cc:365:replace_macc$15614
  creating $macc cell for $flatten\s1.\s3.\s7.$verific$mult_33$cf_fir_24_16_16.v:1305$3751: $auto$alumacc.cc:365:replace_macc$15615
  creating $macc cell for $flatten\s1.\s3.\s7.$verific$mult_3$cf_fir_24_16_16.v:1284$3732: $auto$alumacc.cc:365:replace_macc$15616
  creating $macc cell for $flatten\s1.\s3.\s7.$verific$mult_23$cf_fir_24_16_16.v:1298$3745: $auto$alumacc.cc:365:replace_macc$15617
  creating $macc cell for $flatten\s1.\s3.\s7.$verific$mult_13$cf_fir_24_16_16.v:1291$3739: $auto$alumacc.cc:365:replace_macc$15618
  creating $macc cell for $flatten\s1.\s3.$verific$mult_27$cf_fir_24_16_16.v:270$953: $auto$alumacc.cc:365:replace_macc$15619
  creating $alu cell for $flatten\s1.\s3.\s8.$verific$add_7$cf_fir_24_16_16.v:336$8562: $auto$alumacc.cc:485:replace_alu$15620
  creating $alu cell for $flatten\s1.\s3.\s8.\s7.$verific$add_21$cf_fir_24_16_16.v:825$10202: $auto$alumacc.cc:485:replace_alu$15623
  creating $alu cell for $flatten\s1.\s3.\s8.\s7.$verific$add_7$cf_fir_24_16_16.v:814$10191: $auto$alumacc.cc:485:replace_alu$15626
  creating $alu cell for $flatten\s1.\s3.\s8.\s7.\s13.$verific$add_21$cf_fir_24_16_16.v:915$11189: $auto$alumacc.cc:485:replace_alu$15629
  creating $alu cell for $flatten\s1.\s3.\s8.\s7.\s13.$verific$add_7$cf_fir_24_16_16.v:904$11178: $auto$alumacc.cc:485:replace_alu$15632
  creating $alu cell for $flatten\s1.\s3.\s8.\s7.\s13.\s13.$verific$add_21$cf_fir_24_16_16.v:995$11980: $auto$alumacc.cc:485:replace_alu$15635
  creating $alu cell for $flatten\s1.\s3.\s8.\s7.\s13.\s13.$verific$add_7$cf_fir_24_16_16.v:984$11969: $auto$alumacc.cc:485:replace_alu$15638
  creating $alu cell for $flatten\s1.\s3.\s8.\s7.\s13.\s13.\s13.$verific$add_21$cf_fir_24_16_16.v:1065$12575: $auto$alumacc.cc:485:replace_alu$15641
  creating $alu cell for $flatten\s1.\s3.\s8.\s7.\s13.\s13.\s13.$verific$add_7$cf_fir_24_16_16.v:1054$12564: $auto$alumacc.cc:485:replace_alu$15644
  creating $alu cell for $flatten\s1.\s3.\s8.\s7.\s13.\s13.\s13.\s13.$verific$add_21$cf_fir_24_16_16.v:1125$12974: $auto$alumacc.cc:485:replace_alu$15647
  creating $alu cell for $flatten\s1.\s3.\s8.\s7.\s13.\s13.\s13.\s13.$verific$add_7$cf_fir_24_16_16.v:1114$12963: $auto$alumacc.cc:485:replace_alu$15650
  creating $alu cell for $flatten\s1.\s3.\s8.\s7.\s13.\s13.\s13.\s13.\s13.$verific$add_7$cf_fir_24_16_16.v:1161$13165: $auto$alumacc.cc:485:replace_alu$15653
  creating $alu cell for $flatten\s1.\s3.\s8.\s8.$verific$add_7$cf_fir_24_16_16.v:383$13193: $auto$alumacc.cc:485:replace_alu$15656
  creating $alu cell for $flatten\s1.\s3.\s8.\s8.\s7.$verific$add_21$cf_fir_24_16_16.v:634$14974: $auto$alumacc.cc:485:replace_alu$15659
  creating $alu cell for $flatten\s1.\s3.\s8.\s8.\s7.$verific$add_7$cf_fir_24_16_16.v:623$14963: $auto$alumacc.cc:485:replace_alu$15662
  creating $alu cell for $flatten\s1.\s3.\s8.\s8.\s7.\s13.$verific$add_21$cf_fir_24_16_16.v:694$15384: $auto$alumacc.cc:485:replace_alu$15665
  creating $alu cell for $flatten\s1.\s3.\s8.\s8.\s7.\s13.$verific$add_7$cf_fir_24_16_16.v:683$15373: $auto$alumacc.cc:485:replace_alu$15668
  creating $alu cell for $flatten\s1.\s3.\s8.\s8.\s7.\s13.\s13.$verific$add_7$cf_fir_24_16_16.v:730$15580: $auto$alumacc.cc:485:replace_alu$15671
  creating $alu cell for $flatten\s1.\s3.\s8.\s8.\s8.$verific$add_7$cf_fir_24_16_16.v:423$14062: $auto$alumacc.cc:485:replace_alu$15674
  creating $alu cell for $flatten\s1.\s3.\s8.\s8.\s8.\s7.$verific$add_21$cf_fir_24_16_16.v:571$14938: $auto$alumacc.cc:485:replace_alu$15677
  creating $alu cell for $flatten\s1.\s3.\s8.\s8.\s8.\s7.$verific$add_7$cf_fir_24_16_16.v:560$14927: $auto$alumacc.cc:485:replace_alu$15680
  creating $alu cell for $flatten\s1.\s3.\s8.\s8.\s8.\s8.$verific$add_21$cf_fir_24_16_16.v:479$14694: $auto$alumacc.cc:485:replace_alu$15683
  creating $alu cell for $flatten\s1.\s3.\s8.\s8.\s8.\s8.$verific$add_7$cf_fir_24_16_16.v:468$14683: $auto$alumacc.cc:485:replace_alu$15686
  creating $alu cell for $flatten\s1.\s3.\s8.\s8.\s8.\s8.\s13.$verific$add_7$cf_fir_24_16_16.v:515$14895: $auto$alumacc.cc:485:replace_alu$15689
  created 24 $alu and 25 $macc cells.

yosys> opt_expr

3.41. Executing OPT_EXPR pass (perform const folding).
Optimizing module cf_fir_24_16_16.

yosys> opt_merge -nomux

3.42. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\cf_fir_24_16_16'.
Removed a total of 0 cells.

yosys> opt_muxtree

3.43. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \cf_fir_24_16_16..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Removed 0 multiplexer ports.
<suppressed ~25 debug messages>

yosys> opt_reduce

3.44. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \cf_fir_24_16_16.
Performed a total of 0 changes.

yosys> opt_merge

3.45. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\cf_fir_24_16_16'.
Removed a total of 0 cells.

yosys> opt_share

3.46. Executing OPT_SHARE pass.

yosys> opt_dff -nosdff -nodffe

3.47. Executing OPT_DFF pass (perform DFF optimizations).

yosys> opt_clean

3.48. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \cf_fir_24_16_16..

yosys> opt_expr

3.49. Executing OPT_EXPR pass (perform const folding).
Optimizing module cf_fir_24_16_16.
MAX OPT ITERATION = 1

yosys> stat

3.50. Printing statistics.

=== cf_fir_24_16_16 ===

   Number of wires:               1183
   Number of wire bits:          28116
   Number of public wires:        1110
   Number of public wire bits:   26088
   Number of memories:               0
   Number of memory bits:            0
   Number of processes:              0
   Number of cells:                151
     $alu                           24
     $dff                           77
     $macc                          25
     $mux                           25


yosys> memory -nomap

3.51. Executing MEMORY pass.

yosys> opt_mem

3.51.1. Executing OPT_MEM pass (optimize memories).
Performed a total of 0 transformations.

yosys> opt_mem_priority

3.51.2. Executing OPT_MEM_PRIORITY pass (removing unnecessary memory write priority relations).
Performed a total of 0 transformations.

yosys> opt_mem_feedback

3.51.3. Executing OPT_MEM_FEEDBACK pass (finding memory read-to-write feedback paths).

yosys> memory_bmux2rom

3.51.4. Executing MEMORY_BMUX2ROM pass (converting muxes to ROMs).

yosys> memory_dff

3.51.5. Executing MEMORY_DFF pass (merging $dff cells to $memrd).

yosys> opt_clean

3.51.6. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \cf_fir_24_16_16..

yosys> memory_share

3.51.7. Executing MEMORY_SHARE pass (consolidating $memrd/$memwr cells).

yosys> opt_mem_widen

3.51.8. Executing OPT_MEM_WIDEN pass (optimize memories where all ports are wide).
Performed a total of 0 transformations.

yosys> opt_clean

3.51.9. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \cf_fir_24_16_16..

yosys> memory_collect

3.51.10. Executing MEMORY_COLLECT pass (generating $mem cells).

yosys> stat

3.52. Printing statistics.

=== cf_fir_24_16_16 ===

   Number of wires:               1183
   Number of wire bits:          28116
   Number of public wires:        1110
   Number of public wire bits:   26088
   Number of memories:               0
   Number of memory bits:            0
   Number of processes:              0
   Number of cells:                151
     $alu                           24
     $dff                           77
     $macc                          25
     $mux                           25


yosys> muxpack

3.53. Executing MUXPACK pass ($mux cell cascades to $pmux).
Converted 0 (p)mux cells into 0 pmux cells.
<suppressed ~25 debug messages>

yosys> opt_clean

3.54. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \cf_fir_24_16_16..

yosys> pmuxtree

3.55. Executing PMUXTREE pass.

yosys> muxpack

3.56. Executing MUXPACK pass ($mux cell cascades to $pmux).
Converted 0 (p)mux cells into 0 pmux cells.
<suppressed ~25 debug messages>

yosys> memory_map

3.57. Executing MEMORY_MAP pass (converting memories to logic and flip-flops).

yosys> stat

3.58. Printing statistics.

=== cf_fir_24_16_16 ===

   Number of wires:               1183
   Number of wire bits:          28116
   Number of public wires:        1110
   Number of public wire bits:   26088
   Number of memories:               0
   Number of memory bits:            0
   Number of processes:              0
   Number of cells:                151
     $alu                           24
     $dff                           77
     $macc                          25
     $mux                           25


yosys> techmap -map +/techmap.v -map +/rapidsilicon/genesis/arith_map.v

3.59. Executing TECHMAP pass (map to technology primitives).

3.59.1. Executing Verilog-2005 frontend: /nfs_scratch/scratch/Vorak/aram/Workspace/Raptor/yosys_verific_rs/yosys/install/bin/../share/yosys/techmap.v
Parsing Verilog input from `/nfs_scratch/scratch/Vorak/aram/Workspace/Raptor/yosys_verific_rs/yosys/install/bin/../share/yosys/techmap.v' to AST representation.
Generating RTLIL representation for module `\_90_simplemap_bool_ops'.
Generating RTLIL representation for module `\_90_simplemap_reduce_ops'.
Generating RTLIL representation for module `\_90_simplemap_logic_ops'.
Generating RTLIL representation for module `\_90_simplemap_compare_ops'.
Generating RTLIL representation for module `\_90_simplemap_various'.
Generating RTLIL representation for module `\_90_simplemap_registers'.
Generating RTLIL representation for module `\_90_shift_ops_shr_shl_sshl_sshr'.
Generating RTLIL representation for module `\_90_shift_shiftx'.
Generating RTLIL representation for module `\_90_fa'.
Generating RTLIL representation for module `\_90_lcu'.
Generating RTLIL representation for module `\_90_alu'.
Generating RTLIL representation for module `\_90_macc'.
Generating RTLIL representation for module `\_90_alumacc'.
Generating RTLIL representation for module `\$__div_mod_u'.
Generating RTLIL representation for module `\$__div_mod_trunc'.
Generating RTLIL representation for module `\_90_div'.
Generating RTLIL representation for module `\_90_mod'.
Generating RTLIL representation for module `\$__div_mod_floor'.
Generating RTLIL representation for module `\_90_divfloor'.
Generating RTLIL representation for module `\_90_modfloor'.
Generating RTLIL representation for module `\_90_pow'.
Generating RTLIL representation for module `\_90_pmux'.
Generating RTLIL representation for module `\_90_demux'.
Generating RTLIL representation for module `\_90_lut'.
Successfully finished Verilog frontend.

3.59.2. Executing Verilog-2005 frontend: /nfs_scratch/scratch/Vorak/aram/Workspace/Raptor/yosys_verific_rs/yosys/install/bin/../share/yosys/rapidsilicon/genesis/arith_map.v
Parsing Verilog input from `/nfs_scratch/scratch/Vorak/aram/Workspace/Raptor/yosys_verific_rs/yosys/install/bin/../share/yosys/rapidsilicon/genesis/arith_map.v' to AST representation.
Generating RTLIL representation for module `\_80_rs_alu'.
Successfully finished Verilog frontend.

3.59.3. Continuing TECHMAP pass.
Using extmapper maccmap for cells of type $macc.
  add \k24_i * \s1.s3.s6.s8.s8.n8 (16x16 bits, unsigned)
Using extmapper simplemap for cells of type $dff.
Using extmapper simplemap for cells of type $mux.
Using template $paramod$5030a10823ed71fc93d30a8f70ad7915e2e2ef92\_80_rs_alu for cells of type $alu.
Using template $paramod$a2ca127b29d90cb5185f64ad52e7d585239d0c49\_80_rs_alu for cells of type $alu.
Using template $paramod$672b960779eb221571e928cb5b2e3f12c11445d6\_80_rs_alu for cells of type $alu.
Using template $paramod$7d53733be90b4f6decda9d83b89a52b4cd1ea488\_80_rs_alu for cells of type $alu.
Using template $paramod$7ff9b7d2c704977b3beff47161e1598672161854\_80_rs_alu for cells of type $alu.
  add \k5_i * \s1.s3.s6.n3 (16x16 bits, unsigned)
  add \k7_i * \s1.s3.s6.n5 (16x16 bits, unsigned)
  add \k6_i * \s1.s3.s6.n4 (16x16 bits, unsigned)
  add \k4_i * \s1.s3.s6.n2 (16x16 bits, unsigned)
  add \k13_i * \s1.s3.s6.s8.n4 (16x16 bits, unsigned)
  add \k15_i * \s1.s3.s6.s8.n6 (16x16 bits, unsigned)
  add \k14_i * \s1.s3.s6.s8.n5 (16x16 bits, unsigned)
  add \k12_i * \s1.s3.s6.s8.n3 (16x16 bits, unsigned)
  add \k21_i * \s1.s3.s6.s8.s8.n5 (16x16 bits, unsigned)
  add \k23_i * \s1.s3.s6.s8.s8.n7 (16x16 bits, unsigned)
  add \k22_i * \s1.s3.s6.s8.s8.n6 (16x16 bits, unsigned)
  add \k20_i * \s1.s3.s6.s8.s8.n4 (16x16 bits, unsigned)
  add \k16_i * \s1.s3.s6.s8.n7 (16x16 bits, unsigned)
  add \k18_i * \s1.s3.s6.s8.s8.n2 (16x16 bits, unsigned)
  add \k19_i * \s1.s3.s6.s8.s8.n3 (16x16 bits, unsigned)
  add \k17_i * \s1.s3.s6.s8.s8.n1 (16x16 bits, unsigned)
  add \k8_i * \s1.s3.s6.n6 (16x16 bits, unsigned)
  add \k10_i * \s1.s3.s6.s8.n1 (16x16 bits, unsigned)
  add \k11_i * \s1.s3.s6.s8.n2 (16x16 bits, unsigned)
  add \k9_i * \s1.s3.s6.n7 (16x16 bits, unsigned)
  add \k0_i * \s1.s3.n1 (16x16 bits, unsigned)
  add \k2_i * \s1.s3.n3 (16x16 bits, unsigned)
  add \k3_i * \s1.s3.s6.n1 (16x16 bits, unsigned)
  add \k1_i * \s1.s3.n2 (16x16 bits, unsigned)
Using template $paramod\_90_fa\WIDTH=32'00000000000000000000000000100000 for cells of type $fa.
Using template $paramod$fbc7873bff55778c0b3173955b7e4bce1d9d6834\_90_alu for cells of type $alu.
Using extmapper simplemap for cells of type $and.
Using extmapper simplemap for cells of type $pos.
Using extmapper simplemap for cells of type $not.
Using extmapper simplemap for cells of type $xor.
Using extmapper simplemap for cells of type $or.
Using template $paramod\_90_lcu\WIDTH=32'00000000000000000000000000100000 for cells of type $lcu.
No more expansions possible.
<suppressed ~7148 debug messages>

yosys> stat

3.60. Printing statistics.

=== cf_fir_24_16_16 ===

   Number of wires:              10811
   Number of wire bits:         268178
   Number of public wires:        1110
   Number of public wire bits:   26088
   Number of memories:               0
   Number of memory bits:            0
   Number of processes:              0
   Number of cells:              82237
     $_AND_                      38100
     $_DFF_P_                     2110
     $_MUX_                       2062
     $_NOT_                       1614
     $_OR_                       12650
     $_XOR_                      24887
     adder_carry                   814


yosys> opt_expr

3.61. Executing OPT_EXPR pass (perform const folding).
Optimizing module cf_fir_24_16_16.
<suppressed ~37340 debug messages>

yosys> opt_merge -nomux

3.62. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\cf_fir_24_16_16'.
<suppressed ~153 debug messages>
Removed a total of 51 cells.

yosys> opt_muxtree

3.63. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \cf_fir_24_16_16..
  Creating internal representation of mux trees.
  No muxes found in this module.
Removed 0 multiplexer ports.

yosys> opt_reduce

3.64. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \cf_fir_24_16_16.
Performed a total of 0 changes.

yosys> opt_merge

3.65. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\cf_fir_24_16_16'.
Removed a total of 0 cells.

yosys> opt_share

3.66. Executing OPT_SHARE pass.

yosys> opt_dff -nosdff -nodffe

3.67. Executing OPT_DFF pass (perform DFF optimizations).

yosys> opt_clean

3.68. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \cf_fir_24_16_16..
Removed 1915 unused cells and 5345 unused wires.
<suppressed ~1916 debug messages>

yosys> opt_expr

3.69. Executing OPT_EXPR pass (perform const folding).
Optimizing module cf_fir_24_16_16.

yosys> opt_muxtree

3.70. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \cf_fir_24_16_16..
  Creating internal representation of mux trees.
  No muxes found in this module.
Removed 0 multiplexer ports.

yosys> opt_reduce

3.71. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \cf_fir_24_16_16.
Performed a total of 0 changes.

yosys> opt_merge

3.72. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\cf_fir_24_16_16'.
Removed a total of 0 cells.

yosys> opt_share

3.73. Executing OPT_SHARE pass.

yosys> opt_dff -nosdff -nodffe

3.74. Executing OPT_DFF pass (perform DFF optimizations).

yosys> opt_clean

3.75. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \cf_fir_24_16_16..

yosys> opt_expr

3.76. Executing OPT_EXPR pass (perform const folding).
Optimizing module cf_fir_24_16_16.
MAX OPT ITERATION = 2

yosys> opt_expr -full

3.77. Executing OPT_EXPR pass (perform const folding).
Optimizing module cf_fir_24_16_16.

yosys> techmap -map +/techmap.v

3.78. Executing TECHMAP pass (map to technology primitives).

3.78.1. Executing Verilog-2005 frontend: /nfs_scratch/scratch/Vorak/aram/Workspace/Raptor/yosys_verific_rs/yosys/install/bin/../share/yosys/techmap.v
Parsing Verilog input from `/nfs_scratch/scratch/Vorak/aram/Workspace/Raptor/yosys_verific_rs/yosys/install/bin/../share/yosys/techmap.v' to AST representation.
Generating RTLIL representation for module `\_90_simplemap_bool_ops'.
Generating RTLIL representation for module `\_90_simplemap_reduce_ops'.
Generating RTLIL representation for module `\_90_simplemap_logic_ops'.
Generating RTLIL representation for module `\_90_simplemap_compare_ops'.
Generating RTLIL representation for module `\_90_simplemap_various'.
Generating RTLIL representation for module `\_90_simplemap_registers'.
Generating RTLIL representation for module `\_90_shift_ops_shr_shl_sshl_sshr'.
Generating RTLIL representation for module `\_90_shift_shiftx'.
Generating RTLIL representation for module `\_90_fa'.
Generating RTLIL representation for module `\_90_lcu'.
Generating RTLIL representation for module `\_90_alu'.
Generating RTLIL representation for module `\_90_macc'.
Generating RTLIL representation for module `\_90_alumacc'.
Generating RTLIL representation for module `\$__div_mod_u'.
Generating RTLIL representation for module `\$__div_mod_trunc'.
Generating RTLIL representation for module `\_90_div'.
Generating RTLIL representation for module `\_90_mod'.
Generating RTLIL representation for module `\$__div_mod_floor'.
Generating RTLIL representation for module `\_90_divfloor'.
Generating RTLIL representation for module `\_90_modfloor'.
Generating RTLIL representation for module `\_90_pow'.
Generating RTLIL representation for module `\_90_pmux'.
Generating RTLIL representation for module `\_90_demux'.
Generating RTLIL representation for module `\_90_lut'.
Successfully finished Verilog frontend.

3.78.2. Continuing TECHMAP pass.
No more expansions possible.
<suppressed ~71 debug messages>

yosys> opt_expr

3.79. Executing OPT_EXPR pass (perform const folding).
Optimizing module cf_fir_24_16_16.

yosys> opt_merge -nomux

3.80. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\cf_fir_24_16_16'.
Removed a total of 0 cells.

yosys> opt_muxtree

3.81. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \cf_fir_24_16_16..
  Creating internal representation of mux trees.
  No muxes found in this module.
Removed 0 multiplexer ports.

yosys> opt_reduce

3.82. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \cf_fir_24_16_16.
Performed a total of 0 changes.

yosys> opt_merge

3.83. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\cf_fir_24_16_16'.
Removed a total of 0 cells.

yosys> opt_dff -nosdff -nodffe -sat

3.84. Executing OPT_DFF pass (perform DFF optimizations).

yosys> opt_clean

3.85. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \cf_fir_24_16_16..

yosys> opt_expr

3.86. Executing OPT_EXPR pass (perform const folding).
Optimizing module cf_fir_24_16_16.
MAX OPT ITERATION = 1

yosys> abc -dff

3.87. Executing ABC pass (technology mapping using ABC).

3.87.1. Summary of detected clock domains:
  42931 cells in clk=\clock_c, en={ }, arst={ }, srst={ }

3.87.2. Extracting gate netlist of module `\cf_fir_24_16_16' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clock_c
Extracted 42117 gates and 43325 wires to a netlist network with 1207 inputs and 1569 outputs.

3.87.2.1. Executing ABC.

yosys> abc -dff

3.88. Executing ABC pass (technology mapping using ABC).

3.88.1. Summary of detected clock domains:
  41263 cells in clk=\clock_c, en={ }, arst={ }, srst={ }

3.88.2. Extracting gate netlist of module `\cf_fir_24_16_16' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clock_c
Extracted 40449 gates and 41656 wires to a netlist network with 1207 inputs and 1569 outputs.

3.88.2.1. Executing ABC.

yosys> abc -dff

3.89. Executing ABC pass (technology mapping using ABC).

3.89.1. Summary of detected clock domains:
  41222 cells in clk=\clock_c, en={ }, arst={ }, srst={ }

3.89.2. Extracting gate netlist of module `\cf_fir_24_16_16' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clock_c
Extracted 40408 gates and 41615 wires to a netlist network with 1207 inputs and 1569 outputs.

3.89.2.1. Executing ABC.

yosys> abc -dff

3.90. Executing ABC pass (technology mapping using ABC).

3.90.1. Summary of detected clock domains:
  41205 cells in clk=\clock_c, en={ }, arst={ }, srst={ }

3.90.2. Extracting gate netlist of module `\cf_fir_24_16_16' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clock_c
Extracted 40391 gates and 41598 wires to a netlist network with 1207 inputs and 1569 outputs.

3.90.2.1. Executing ABC.

yosys> opt_ffinv

3.91. Executing OPT_FFINV pass (push inverters through FFs).
Discovering LUTs.
Pushed 0 inverters.

yosys> opt_expr

3.92. Executing OPT_EXPR pass (perform const folding).
Optimizing module cf_fir_24_16_16.

yosys> opt_merge -nomux

3.93. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\cf_fir_24_16_16'.
Removed a total of 0 cells.

yosys> opt_muxtree

3.94. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \cf_fir_24_16_16..
  Creating internal representation of mux trees.
  No muxes found in this module.
Removed 0 multiplexer ports.

yosys> opt_reduce

3.95. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \cf_fir_24_16_16.
Performed a total of 0 changes.

yosys> opt_merge

3.96. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\cf_fir_24_16_16'.
Removed a total of 0 cells.

yosys> opt_share

3.97. Executing OPT_SHARE pass.

yosys> opt_dff -nosdff -sat

3.98. Executing OPT_DFF pass (perform DFF optimizations).

yosys> opt_clean

3.99. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \cf_fir_24_16_16..
Removed 0 unused cells and 139207 unused wires.
<suppressed ~519 debug messages>

yosys> opt_expr

3.100. Executing OPT_EXPR pass (perform const folding).
Optimizing module cf_fir_24_16_16.
MAX OPT ITERATION = 1

yosys> bmuxmap

3.101. Executing BMUXMAP pass.

yosys> demuxmap

3.102. Executing DEMUXMAP pass.

yosys> clean_zerowidth

yosys> abc -script /tmp/yosys_ebtW4I/abc_tmp_1.scr

3.103. Executing ABC pass (technology mapping using ABC).

3.103.1. Extracting gate netlist of module `\cf_fir_24_16_16' to `<abc-temp-dir>/input.blif'..
Extracted 38651 gates and 40289 wires to a netlist network with 1638 inputs and 1606 outputs.

3.103.1.1. Executing ABC.
DE:   #PIs = 1638  #Luts = 12883  Max Lvl =  15  Avg Lvl =   4.59  [   1.72 sec. at Pass 0]{firstMap}
DE:   #PIs = 1638  #Luts = 12883  Max Lvl =  15  Avg Lvl =   4.59  [ 173.32 sec. at Pass 1]{initMapFlow}
DE:   #PIs = 1638  #Luts = 11857  Max Lvl =  28  Avg Lvl =   6.43  [  20.23 sec. at Pass 2]{map}
DE:   #PIs = 1638  #Luts = 11843  Max Lvl =  25  Avg Lvl =   6.34  [  49.32 sec. at Pass 3]{postMap}
DE:   #PIs = 1638  #Luts = 11609  Max Lvl =  23  Avg Lvl =   6.28  [  21.09 sec. at Pass 4]{map}
DE:   #PIs = 1638  #Luts = 11609  Max Lvl =  23  Avg Lvl =   6.28  [  65.12 sec. at Pass 5]{postMap}
DE:   #PIs = 1638  #Luts = 11578  Max Lvl =  25  Avg Lvl =   6.23  [   5.80 sec. at Pass 6]{finalMap}

yosys> opt_expr

3.104. Executing OPT_EXPR pass (perform const folding).
Optimizing module cf_fir_24_16_16.

yosys> opt_merge -nomux

3.105. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\cf_fir_24_16_16'.
Removed a total of 0 cells.

yosys> opt_muxtree

3.106. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \cf_fir_24_16_16..
  Creating internal representation of mux trees.
  No muxes found in this module.
Removed 0 multiplexer ports.

yosys> opt_reduce

3.107. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \cf_fir_24_16_16.
Performed a total of 0 changes.

yosys> opt_merge

3.108. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\cf_fir_24_16_16'.
Removed a total of 0 cells.

yosys> opt_share

3.109. Executing OPT_SHARE pass.

yosys> opt_dff -nosdff -nodffe

3.110. Executing OPT_DFF pass (perform DFF optimizations).

yosys> opt_clean

3.111. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \cf_fir_24_16_16..
Removed 0 unused cells and 40289 unused wires.
<suppressed ~1 debug messages>

yosys> opt_expr

3.112. Executing OPT_EXPR pass (perform const folding).
Optimizing module cf_fir_24_16_16.
MAX OPT ITERATION = 1

yosys> opt_ffinv

3.113. Executing OPT_FFINV pass (push inverters through FFs).
Discovering LUTs.
Pushed 4 inverters.

yosys> stat

3.114. Printing statistics.

=== cf_fir_24_16_16 ===

   Number of wires:              12400
   Number of wire bits:          26765
   Number of public wires:         592
   Number of public wire bits:   13353
   Number of memories:               0
   Number of memory bits:            0
   Number of processes:              0
   Number of cells:              14119
     $_DFF_P_                     1727
     $lut                        11578
     adder_carry                   814


yosys> shregmap -minlen 8 -maxlen 20

3.115. Executing SHREGMAP pass (map shift registers).
Converted 0 dff cells into 0 shift registers.

yosys> dfflegalize -cell $_DFF_?_ 0 -cell $_DFF_???_ 0 -cell $_DFFE_????_ 0 -cell $_DFFSR_???_ 0 -cell $_DFFSRE_????_ 0 -cell $_DLATCHSR_PPP_ 0

3.116. Executing DFFLEGALIZE pass (convert FFs to types supported by the target).

yosys> stat

3.117. Printing statistics.

=== cf_fir_24_16_16 ===

   Number of wires:              12408
   Number of wire bits:          26773
   Number of public wires:         592
   Number of public wire bits:   13353
   Number of memories:               0
   Number of memory bits:            0
   Number of processes:              0
   Number of cells:              14127
     $_DFF_P_                     1727
     $_NOT_                          8
     $lut                        11578
     adder_carry                   814


yosys> techmap -map +/techmap.v -map +/rapidsilicon/genesis/ffs_map.v

3.118. Executing TECHMAP pass (map to technology primitives).

3.118.1. Executing Verilog-2005 frontend: /nfs_scratch/scratch/Vorak/aram/Workspace/Raptor/yosys_verific_rs/yosys/install/bin/../share/yosys/techmap.v
Parsing Verilog input from `/nfs_scratch/scratch/Vorak/aram/Workspace/Raptor/yosys_verific_rs/yosys/install/bin/../share/yosys/techmap.v' to AST representation.
Generating RTLIL representation for module `\_90_simplemap_bool_ops'.
Generating RTLIL representation for module `\_90_simplemap_reduce_ops'.
Generating RTLIL representation for module `\_90_simplemap_logic_ops'.
Generating RTLIL representation for module `\_90_simplemap_compare_ops'.
Generating RTLIL representation for module `\_90_simplemap_various'.
Generating RTLIL representation for module `\_90_simplemap_registers'.
Generating RTLIL representation for module `\_90_shift_ops_shr_shl_sshl_sshr'.
Generating RTLIL representation for module `\_90_shift_shiftx'.
Generating RTLIL representation for module `\_90_fa'.
Generating RTLIL representation for module `\_90_lcu'.
Generating RTLIL representation for module `\_90_alu'.
Generating RTLIL representation for module `\_90_macc'.
Generating RTLIL representation for module `\_90_alumacc'.
Generating RTLIL representation for module `\$__div_mod_u'.
Generating RTLIL representation for module `\$__div_mod_trunc'.
Generating RTLIL representation for module `\_90_div'.
Generating RTLIL representation for module `\_90_mod'.
Generating RTLIL representation for module `\$__div_mod_floor'.
Generating RTLIL representation for module `\_90_divfloor'.
Generating RTLIL representation for module `\_90_modfloor'.
Generating RTLIL representation for module `\_90_pow'.
Generating RTLIL representation for module `\_90_pmux'.
Generating RTLIL representation for module `\_90_demux'.
Generating RTLIL representation for module `\_90_lut'.
Successfully finished Verilog frontend.

3.118.2. Executing Verilog-2005 frontend: /nfs_scratch/scratch/Vorak/aram/Workspace/Raptor/yosys_verific_rs/yosys/install/bin/../share/yosys/rapidsilicon/genesis/ffs_map.v
Parsing Verilog input from `/nfs_scratch/scratch/Vorak/aram/Workspace/Raptor/yosys_verific_rs/yosys/install/bin/../share/yosys/rapidsilicon/genesis/ffs_map.v' to AST representation.
Generating RTLIL representation for module `\$_DFF_P_'.
Generating RTLIL representation for module `\$_DFF_PP0_'.
Generating RTLIL representation for module `\$_DFF_PN0_'.
Generating RTLIL representation for module `\$_DFF_PP1_'.
Generating RTLIL representation for module `\$_DFF_PN1_'.
Generating RTLIL representation for module `\$_DFFE_PP_'.
Generating RTLIL representation for module `\$_DFFE_PN_'.
Generating RTLIL representation for module `\$_DFFE_PP0P_'.
Generating RTLIL representation for module `\$_DFFE_PP0N_'.
Generating RTLIL representation for module `\$_DFFE_PN0P_'.
Generating RTLIL representation for module `\$_DFFE_PN0N_'.
Generating RTLIL representation for module `\$_DFFE_PP1P_'.
Generating RTLIL representation for module `\$_DFFE_PP1N_'.
Generating RTLIL representation for module `\$_DFFE_PN1P_'.
Generating RTLIL representation for module `\$_DFFE_PN1N_'.
Generating RTLIL representation for module `\$_DFFSR_PPP_'.
Generating RTLIL representation for module `\$_DFFSR_PNP_'.
Generating RTLIL representation for module `\$_DFFSR_PNN_'.
Generating RTLIL representation for module `\$_DFFSR_PPN_'.
Generating RTLIL representation for module `\$_DFFSR_NPP_'.
Generating RTLIL representation for module `\$_DFFSR_NNP_'.
Generating RTLIL representation for module `\$_DFFSR_NNN_'.
Generating RTLIL representation for module `\$_DFFSR_NPN_'.
Generating RTLIL representation for module `\$_DFFSRE_PPPP_'.
Generating RTLIL representation for module `\$_DFFSRE_PNPP_'.
Generating RTLIL representation for module `\$_DFFSRE_PPNP_'.
Generating RTLIL representation for module `\$_DFFSRE_PNNP_'.
Generating RTLIL representation for module `\$_DFFSRE_PPPN_'.
Generating RTLIL representation for module `\$_DFFSRE_PNPN_'.
Generating RTLIL representation for module `\$_DFFSRE_PPNN_'.
Generating RTLIL representation for module `\$_DFFSRE_PNNN_'.
Generating RTLIL representation for module `\$_DLATCHSR_PPP_'.
Generating RTLIL representation for module `\$_DLATCHSR_NPP_'.
Generating RTLIL representation for module `\$_DFF_N_'.
Generating RTLIL representation for module `\$_DFF_NP0_'.
Generating RTLIL representation for module `\$_DFF_NN0_'.
Generating RTLIL representation for module `\$_DFF_NP1_'.
Generating RTLIL representation for module `\$_DFF_NN1_'.
Generating RTLIL representation for module `\$_DFFE_NP_'.
Generating RTLIL representation for module `\$_DFFE_NN_'.
Generating RTLIL representation for module `\$_DFFE_NP0P_'.
Generating RTLIL representation for module `\$_DFFE_NP0N_'.
Generating RTLIL representation for module `\$_DFFE_NN0P_'.
Generating RTLIL representation for module `\$_DFFE_NN0N_'.
Generating RTLIL representation for module `\$_DFFE_NP1P_'.
Generating RTLIL representation for module `\$_DFFE_NP1N_'.
Generating RTLIL representation for module `\$_DFFE_NN1P_'.
Generating RTLIL representation for module `\$_DFFE_NN1N_'.
Generating RTLIL representation for module `\$_DFFSRE_NPPP_'.
Generating RTLIL representation for module `\$_DFFSRE_NNPP_'.
Generating RTLIL representation for module `\$_DFFSRE_NPNP_'.
Generating RTLIL representation for module `\$_DFFSRE_NNNP_'.
Generating RTLIL representation for module `\$_DFFSRE_NPPN_'.
Generating RTLIL representation for module `\$_DFFSRE_NNPN_'.
Generating RTLIL representation for module `\$_DFFSRE_NPNN_'.
Generating RTLIL representation for module `\$_DFFSRE_NNNN_'.
Generating RTLIL representation for module `\$__SHREG_DFF_P_'.
Generating RTLIL representation for module `\$_SDFF_PP0_'.
Generating RTLIL representation for module `\$_SDFF_PN0_'.
Generating RTLIL representation for module `\$_SDFF_NP0_'.
Generating RTLIL representation for module `\$_SDFF_NN0_'.
Generating RTLIL representation for module `\$_SDFF_PP1_'.
Generating RTLIL representation for module `\$_SDFF_PN1_'.
Generating RTLIL representation for module `\$_SDFF_NP1_'.
Generating RTLIL representation for module `\$_SDFF_NN1_'.
Successfully finished Verilog frontend.

3.118.3. Continuing TECHMAP pass.
Using extmapper simplemap for cells of type $lut.
Using template \$_DFF_P_ for cells of type $_DFF_P_.
No more expansions possible.
<suppressed ~13441 debug messages>

yosys> opt_expr -mux_undef

3.119. Executing OPT_EXPR pass (perform const folding).
Optimizing module cf_fir_24_16_16.
<suppressed ~228460 debug messages>

yosys> simplemap

3.120. Executing SIMPLEMAP pass (map simple cells to gate primitives).

yosys> opt_expr

3.121. Executing OPT_EXPR pass (perform const folding).
Optimizing module cf_fir_24_16_16.

yosys> opt_merge

3.122. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\cf_fir_24_16_16'.
<suppressed ~367611 debug messages>
Removed a total of 122537 cells.

yosys> opt_dff -nodffe -nosdff

3.123. Executing OPT_DFF pass (perform DFF optimizations).

yosys> opt_clean

3.124. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \cf_fir_24_16_16..
Removed 0 unused cells and 24404 unused wires.
<suppressed ~1 debug messages>

yosys> opt_expr

3.125. Executing OPT_EXPR pass (perform const folding).
Optimizing module cf_fir_24_16_16.
<suppressed ~9140 debug messages>

yosys> opt_merge -nomux

3.126. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\cf_fir_24_16_16'.
<suppressed ~48 debug messages>
Removed a total of 16 cells.

yosys> opt_muxtree

3.127. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \cf_fir_24_16_16..
  Creating internal representation of mux trees.
  No muxes found in this module.
Removed 0 multiplexer ports.

yosys> opt_reduce

3.128. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \cf_fir_24_16_16.
Performed a total of 0 changes.

yosys> opt_merge

3.129. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\cf_fir_24_16_16'.
Removed a total of 0 cells.

yosys> opt_share

3.130. Executing OPT_SHARE pass.

yosys> opt_dff -nosdff -nodffe

3.131. Executing OPT_DFF pass (perform DFF optimizations).

yosys> opt_clean

3.132. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \cf_fir_24_16_16..
Removed 0 unused cells and 19 unused wires.
<suppressed ~1 debug messages>

yosys> opt_expr

3.133. Executing OPT_EXPR pass (perform const folding).
Optimizing module cf_fir_24_16_16.
MAX OPT ITERATION = 1

yosys> abc -script /tmp/yosys_ebtW4I/abc_tmp_2.scr

3.134. Executing ABC pass (technology mapping using ABC).

3.134.1. Extracting gate netlist of module `\cf_fir_24_16_16' to `<abc-temp-dir>/input.blif'..
Extracted 81447 gates and 83087 wires to a netlist network with 1638 inputs and 1606 outputs.

3.134.1.1. Executing ABC.
DE:   #PIs = 1638  #Luts = 11651  Max Lvl =  20  Avg Lvl =   5.60  [   2.32 sec. at Pass 0]{firstMap}
DE:   #PIs = 1638  #Luts = 11651  Max Lvl =  20  Avg Lvl =   5.60  [ 167.58 sec. at Pass 1]{initMapFlow}
DE:   #PIs = 1638  #Luts = 11488  Max Lvl =  25  Avg Lvl =   6.13  [  27.20 sec. at Pass 2]{map}
DE:   #PIs = 1638  #Luts = 11488  Max Lvl =  25  Avg Lvl =   6.13  [  49.91 sec. at Pass 3]{postMap}
DE:   #PIs = 1638  #Luts = 11467  Max Lvl =  25  Avg Lvl =   6.08  [  30.14 sec. at Pass 4]{map}
DE:   #PIs = 1638  #Luts = 11467  Max Lvl =  25  Avg Lvl =   6.08  [ 109.36 sec. at Pass 5]{postMap}
DE:   #PIs = 1638  #Luts = 11405  Max Lvl =  24  Avg Lvl =   6.13  [  11.01 sec. at Pass 6]{finalMap}

yosys> opt_expr

3.135. Executing OPT_EXPR pass (perform const folding).
Optimizing module cf_fir_24_16_16.

yosys> opt_merge -nomux

3.136. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\cf_fir_24_16_16'.
Removed a total of 0 cells.

yosys> opt_muxtree

3.137. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \cf_fir_24_16_16..
  Creating internal representation of mux trees.
  No muxes found in this module.
Removed 0 multiplexer ports.

yosys> opt_reduce

3.138. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \cf_fir_24_16_16.
Performed a total of 0 changes.

yosys> opt_merge

3.139. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\cf_fir_24_16_16'.
Removed a total of 0 cells.

yosys> opt_share

3.140. Executing OPT_SHARE pass.

yosys> opt_dff -nosdff -nodffe

3.141. Executing OPT_DFF pass (perform DFF optimizations).

yosys> opt_clean

3.142. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \cf_fir_24_16_16..
Removed 0 unused cells and 49169 unused wires.
<suppressed ~1 debug messages>

yosys> opt_expr

3.143. Executing OPT_EXPR pass (perform const folding).
Optimizing module cf_fir_24_16_16.
MAX OPT ITERATION = 1

yosys> hierarchy -check

3.144. Executing HIERARCHY pass (managing design hierarchy).

3.144.1. Analyzing design hierarchy..
Top module:  \cf_fir_24_16_16

3.144.2. Analyzing design hierarchy..
Top module:  \cf_fir_24_16_16
Removed 0 unused modules.

yosys> stat

3.145. Printing statistics.

=== cf_fir_24_16_16 ===

   Number of wires:              12227
   Number of wire bits:          26592
   Number of public wires:         592
   Number of public wire bits:   13353
   Number of memories:               0
   Number of memory bits:            0
   Number of processes:              0
   Number of cells:              13946
     $lut                        11405
     adder_carry                   814
     dffsre                       1727


yosys> opt_clean -purge

3.146. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \cf_fir_24_16_16..
Removed 0 unused cells and 515 unused wires.
<suppressed ~515 debug messages>

yosys> write_verilog -noattr -nohex synthesized.v

3.147. Executing Verilog backend.
Dumping module `\cf_fir_24_16_16'.

End of script. Logfile hash: 5de0da0b57, CPU: user 148.72s system 0.75s, MEM: 822.50 MB peak
Yosys 0.18+10 (git sha1 7361c89db, gcc 9.4.0-1ubuntu1~20.04.1 -fPIC -Os)
Time spent: 95% 6x abc (3104 sec), 1% 26x opt_expr (61 sec), ...
real 1014.61
user 3132.51
sys 109.49
