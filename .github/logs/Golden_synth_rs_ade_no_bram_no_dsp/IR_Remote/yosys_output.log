
 /----------------------------------------------------------------------------\
 |                                                                            |
 |  yosys -- Yosys Open SYnthesis Suite                                       |
 |                                                                            |
 |  Copyright (C) 2012 - 2020  Claire Xenia Wolf <claire@yosyshq.com>         |
 |                                                                            |
 |  Permission to use, copy, modify, and/or distribute this software for any  |
 |  purpose with or without fee is hereby granted, provided that the above    |
 |  copyright notice and this permission notice appear in all copies.         |
 |                                                                            |
 |  THE SOFTWARE IS PROVIDED "AS IS" AND THE AUTHOR DISCLAIMS ALL WARRANTIES  |
 |  WITH REGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF          |
 |  MERCHANTABILITY AND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR   |
 |  ANY SPECIAL, DIRECT, INDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES    |
 |  WHATSOEVER RESULTING FROM LOSS OF USE, DATA OR PROFITS, WHETHER IN AN     |
 |  ACTION OF CONTRACT, NEGLIGENCE OR OTHER TORTIOUS ACTION, ARISING OUT OF   |
 |  OR IN CONNECTION WITH THE USE OR PERFORMANCE OF THIS SOFTWARE.            |
 |                                                                            |
 \----------------------------------------------------------------------------/

 Yosys-Verific 0.0.92
 Yosys 0.18+10 (git sha1 7361c89db, gcc 9.4.0-1ubuntu1~20.04.1 -fPIC -Os)


-- Executing script file `yosys.ys' --
echo on

yosys> plugin -i synth-rs

yosys> read -verific

yosys> read -incdir .

yosys> verific -vlog-incdir .

1. Executing VERIFIC (loading SystemVerilog and VHDL designs using Verific).
Built with Verific May22_SW_Release, released at Wed Jun  1 05:39:28 2022.

yosys> verilog_defaults -add -I.

yosys> read -vlog2k IR_Emitter_Interface.v IR_Emitter_Registers.v i2cSlaveTop.v IR_Emitter_Modulator.v i2cSlaveSerialInterface.v r1024x9_1024x9.v IR_Emitter_Carrier_Generator.v IR_Remote.v i2cSlave.v

yosys> verific -vlog2k IR_Emitter_Interface.v IR_Emitter_Registers.v i2cSlaveTop.v IR_Emitter_Modulator.v i2cSlaveSerialInterface.v r1024x9_1024x9.v IR_Emitter_Carrier_Generator.v IR_Remote.v i2cSlave.v

2. Executing VERIFIC (loading SystemVerilog and VHDL designs using Verific).
Built with Verific May22_SW_Release, released at Wed Jun  1 05:39:28 2022.
VERIFIC-COMMENT [VERI-1482] Analyzing Verilog file 'IR_Emitter_Interface.v'
VERIFIC-INFO [VERI-2561] IR_Emitter_Interface.v:263: undeclared symbol 'IR_Emitter_MemRd_Stb', assumed default net type 'wire'
VERIFIC-COMMENT [VERI-1482] Analyzing Verilog file 'IR_Emitter_Registers.v'
VERIFIC-COMMENT [VERI-1482] Analyzing Verilog file 'i2cSlaveTop.v'
VERIFIC-COMMENT [VERI-1482] Analyzing Verilog file 'IR_Emitter_Modulator.v'
VERIFIC-COMMENT [VERI-1482] Analyzing Verilog file 'i2cSlaveSerialInterface.v'
VERIFIC-COMMENT [VERI-1482] Analyzing Verilog file 'r1024x9_1024x9.v'
VERIFIC-COMMENT [VERI-1482] Analyzing Verilog file 'IR_Emitter_Carrier_Generator.v'
VERIFIC-COMMENT [VERI-1482] Analyzing Verilog file 'IR_Remote.v'
VERIFIC-WARNING [VERI-1407] IR_Remote.v:125: attribute target identifier 'hierarchy' not found in this scope
VERIFIC-WARNING [VERI-1407] IR_Remote.v:124: attribute target identifier 'ql_pack' not found in this scope
VERIFIC-COMMENT [VERI-1482] Analyzing Verilog file 'i2cSlave.v'

yosys> synth_rs -top top -tech genesis -goal area -de -no_dsp -no_bram -verilog synthesized.v

3. Executing synth_rs pass: v0.4.79

yosys> read_verilog -lib -specify -nomem2reg +/rapidsilicon/common/cells_sim.v +/rapidsilicon/genesis/cells_sim.v +/rapidsilicon/genesis/dsp_sim.v

3.1. Executing Verilog-2005 frontend: /nfs_scratch/scratch/Vorak/aram/Workspace/Raptor/yosys_verific_rs/yosys/install/bin/../share/yosys/rapidsilicon/common/cells_sim.v
Parsing Verilog input from `/nfs_scratch/scratch/Vorak/aram/Workspace/Raptor/yosys_verific_rs/yosys/install/bin/../share/yosys/rapidsilicon/common/cells_sim.v' to AST representation.
Generating RTLIL representation for module `\inv'.
Generating RTLIL representation for module `\buff'.
Generating RTLIL representation for module `\logic_0'.
Generating RTLIL representation for module `\logic_1'.
Generating RTLIL representation for module `\gclkbuff'.
Successfully finished Verilog frontend.

3.2. Executing Verilog-2005 frontend: /nfs_scratch/scratch/Vorak/aram/Workspace/Raptor/yosys_verific_rs/yosys/install/bin/../share/yosys/rapidsilicon/genesis/cells_sim.v
Parsing Verilog input from `/nfs_scratch/scratch/Vorak/aram/Workspace/Raptor/yosys_verific_rs/yosys/install/bin/../share/yosys/rapidsilicon/genesis/cells_sim.v' to AST representation.
Generating RTLIL representation for module `\dffsre'.
Generating RTLIL representation for module `\dffnsre'.
Generating RTLIL representation for module `\latchsre'.
Generating RTLIL representation for module `\latchnsre'.
Generating RTLIL representation for module `\io_scff'.
Generating RTLIL representation for module `\scff'.
Generating RTLIL representation for module `\sh_dff'.
Generating RTLIL representation for module `\adder_carry'.
Generating RTLIL representation for module `\sdffr'.
Generating RTLIL representation for module `\sdffs'.
Generating RTLIL representation for module `\TDP_BRAM18'.
Generating RTLIL representation for module `\TDP36K'.
Generating RTLIL representation for module `\BRAM2x18_TDP'.
Generating RTLIL representation for module `\BRAM2x18_SDP'.
Generating RTLIL representation for module `\_$_mem_v2_asymmetric'.
Successfully finished Verilog frontend.

3.3. Executing Verilog-2005 frontend: /nfs_scratch/scratch/Vorak/aram/Workspace/Raptor/yosys_verific_rs/yosys/install/bin/../share/yosys/rapidsilicon/genesis/dsp_sim.v
Parsing Verilog input from `/nfs_scratch/scratch/Vorak/aram/Workspace/Raptor/yosys_verific_rs/yosys/install/bin/../share/yosys/rapidsilicon/genesis/dsp_sim.v' to AST representation.
Generating RTLIL representation for module `\RS_DSP1'.
Generating RTLIL representation for module `\RS_DSP2'.
Generating RTLIL representation for module `\RS_DSP2_MULT'.
Generating RTLIL representation for module `\RS_DSP2_MULT_REGIN'.
Generating RTLIL representation for module `\RS_DSP2_MULT_REGOUT'.
Generating RTLIL representation for module `\RS_DSP2_MULT_REGIN_REGOUT'.
Generating RTLIL representation for module `\RS_DSP2_MULTADD'.
Generating RTLIL representation for module `\RS_DSP2_MULTADD_REGIN'.
Generating RTLIL representation for module `\RS_DSP2_MULTADD_REGOUT'.
Generating RTLIL representation for module `\RS_DSP2_MULTADD_REGIN_REGOUT'.
Generating RTLIL representation for module `\RS_DSP2_MULTACC'.
Generating RTLIL representation for module `\RS_DSP2_MULTACC_REGIN'.
Generating RTLIL representation for module `\RS_DSP2_MULTACC_REGOUT'.
Generating RTLIL representation for module `\RS_DSP2_MULTACC_REGIN_REGOUT'.
Generating RTLIL representation for module `\dsp_t1_20x18x64_cfg_ports'.
Generating RTLIL representation for module `\dsp_t1_10x9x32_cfg_ports'.
Generating RTLIL representation for module `\dsp_t1_sim_cfg_ports'.
Generating RTLIL representation for module `\RS_DSP3'.
Generating RTLIL representation for module `\RS_DSP3_MULT'.
Generating RTLIL representation for module `\RS_DSP3_MULT_REGIN'.
Generating RTLIL representation for module `\RS_DSP3_MULT_REGOUT'.
Generating RTLIL representation for module `\RS_DSP3_MULT_REGIN_REGOUT'.
Generating RTLIL representation for module `\RS_DSP3_MULTADD'.
Generating RTLIL representation for module `\RS_DSP3_MULTADD_REGIN'.
Generating RTLIL representation for module `\RS_DSP3_MULTADD_REGOUT'.
Generating RTLIL representation for module `\RS_DSP3_MULTADD_REGIN_REGOUT'.
Generating RTLIL representation for module `\RS_DSP3_MULTACC'.
Generating RTLIL representation for module `\RS_DSP3_MULTACC_REGIN'.
Generating RTLIL representation for module `\RS_DSP3_MULTACC_REGOUT'.
Generating RTLIL representation for module `\RS_DSP3_MULTACC_REGIN_REGOUT'.
Generating RTLIL representation for module `\dsp_t1_20x18x64_cfg_params'.
Generating RTLIL representation for module `\dsp_t1_10x9x32_cfg_params'.
Generating RTLIL representation for module `\dsp_t1_sim_cfg_params'.
Successfully finished Verilog frontend.

yosys> hierarchy -check -top top

3.4. Executing HIERARCHY pass (managing design hierarchy).
VERIFIC-INFO [VERI-1018] IR_Remote.v:29: compiling module 'top'
VERIFIC-INFO [VERI-1018] i2cSlaveTop.v:47: compiling module 'i2cSlaveTop(I2C_ADDRESS=7'b0101010)'
VERIFIC-INFO [VERI-1018] i2cSlave.v:48: compiling module 'i2cSlave(I2C_ADDRESS=7'b0101010)'
VERIFIC-INFO [VERI-1018] i2cSlaveSerialInterface.v:58: compiling module 'i2cSlaveSerialInterface(I2C_ADDRESS=7'b0101010)'
VERIFIC-INFO [VERI-1018] IR_Emitter_Interface.v:29: compiling module 'IR_Emitter_Interface'
VERIFIC-INFO [VERI-1018] IR_Emitter_Carrier_Generator.v:32: compiling module 'IR_Emitter_Carrier_Generator'
VERIFIC-WARNING [VERI-1209] IR_Emitter_Carrier_Generator.v:236: expression size 32 truncated to fit in target size 8
VERIFIC-WARNING [VERI-1209] IR_Emitter_Carrier_Generator.v:264: expression size 32 truncated to fit in target size 8
VERIFIC-WARNING [VERI-1209] IR_Emitter_Carrier_Generator.v:438: expression size 32 truncated to fit in target size 8
VERIFIC-WARNING [VERI-1209] IR_Emitter_Carrier_Generator.v:466: expression size 32 truncated to fit in target size 8
VERIFIC-INFO [VERI-1018] IR_Emitter_Modulator.v:32: compiling module 'IR_Emitter_Modulator'
VERIFIC-WARNING [VERI-1209] IR_Emitter_Modulator.v:478: expression size 14 truncated to fit in target size 13
VERIFIC-WARNING [VERI-1209] IR_Emitter_Modulator.v:508: expression size 32 truncated to fit in target size 16
VERIFIC-INFO [VERI-1018] IR_Emitter_Registers.v:31: compiling module 'IR_Emitter_Registers'
VERIFIC-INFO [VERI-1018] r1024x9_1024x9.v:17: compiling module 'r1024x9_1024x9'
VERIFIC-WARNING [VERI-1209] r1024x9_1024x9.v:40: expression size 22 truncated to fit in target size 9
Importing module top.
Importing module IR_Emitter_Interface.
Importing module IR_Emitter_Carrier_Generator.
Importing module IR_Emitter_Modulator.
Importing module IR_Emitter_Registers.
Importing module i2cSlaveTop(I2C_ADDRESS=7'b0101010).
Importing module i2cSlave(I2C_ADDRESS=7'b0101010).
Importing module i2cSlaveSerialInterface(I2C_ADDRESS=7'b0101010).
Importing module r1024x9_1024x9.

3.4.1. Analyzing design hierarchy..
Top module:  \top
Used module:     \IR_Emitter_Interface
Used module:         \r1024x9_1024x9
Used module:         \IR_Emitter_Registers
Used module:         \IR_Emitter_Modulator
Used module:         \IR_Emitter_Carrier_Generator
Used module:     \i2cSlaveTop(I2C_ADDRESS=7'b0101010)
Used module:         \i2cSlave(I2C_ADDRESS=7'b0101010)
Used module:             \i2cSlaveSerialInterface(I2C_ADDRESS=7'b0101010)

3.4.2. Analyzing design hierarchy..
Top module:  \top
Used module:     \IR_Emitter_Interface
Used module:         \r1024x9_1024x9
Used module:         \IR_Emitter_Registers
Used module:         \IR_Emitter_Modulator
Used module:         \IR_Emitter_Carrier_Generator
Used module:     \i2cSlaveTop(I2C_ADDRESS=7'b0101010)
Used module:         \i2cSlave(I2C_ADDRESS=7'b0101010)
Used module:             \i2cSlaveSerialInterface(I2C_ADDRESS=7'b0101010)
Removed 0 unused modules.

yosys> proc

3.5. Executing PROC pass (convert processes to netlists).

yosys> proc_clean

3.5.1. Executing PROC_CLEAN pass (remove empty switches from decision trees).
Cleaned up 0 empty switches.

yosys> proc_rmdead

3.5.2. Executing PROC_RMDEAD pass (remove dead branches from decision trees).
Removed a total of 0 dead cases.

yosys> proc_prune

3.5.3. Executing PROC_PRUNE pass (remove redundant assignments in processes).
Removed 0 redundant assignments.
Promoted 0 assignments to connections.

yosys> proc_init

3.5.4. Executing PROC_INIT pass (extract init attributes).

yosys> proc_arst

3.5.5. Executing PROC_ARST pass (detect async resets in processes).

yosys> proc_rom

3.5.6. Executing PROC_ROM pass (convert switches to ROMs).
Converted 0 switches.

yosys> proc_mux

3.5.7. Executing PROC_MUX pass (convert decision trees to multiplexers).

yosys> proc_dlatch

3.5.8. Executing PROC_DLATCH pass (convert process syncs to latches).

yosys> proc_dff

3.5.9. Executing PROC_DFF pass (convert process syncs to FFs).

yosys> proc_memwr

3.5.10. Executing PROC_MEMWR pass (convert process memory writes to cells).

yosys> proc_clean

3.5.11. Executing PROC_CLEAN pass (remove empty switches from decision trees).
Cleaned up 0 empty switches.

yosys> opt_expr -keepdc

3.5.12. Executing OPT_EXPR pass (perform const folding).
Optimizing module r1024x9_1024x9.
Optimizing module i2cSlaveSerialInterface(I2C_ADDRESS=7'b0101010).
<suppressed ~20 debug messages>
Optimizing module i2cSlave(I2C_ADDRESS=7'b0101010).
<suppressed ~3 debug messages>
Optimizing module i2cSlaveTop(I2C_ADDRESS=7'b0101010).
Optimizing module IR_Emitter_Registers.
<suppressed ~7 debug messages>
Optimizing module IR_Emitter_Modulator.
<suppressed ~8 debug messages>
Optimizing module IR_Emitter_Carrier_Generator.
<suppressed ~11 debug messages>
Optimizing module IR_Emitter_Interface.
<suppressed ~3 debug messages>
Optimizing module top.

yosys> bmuxmap

3.6. Executing BMUXMAP pass.

yosys> demuxmap

3.7. Executing DEMUXMAP pass.

yosys> clean_zerowidth

yosys> flatten

3.8. Executing FLATTEN pass (flatten design).
Deleting now unused module IR_Emitter_Carrier_Generator.
Deleting now unused module IR_Emitter_Interface.
Deleting now unused module IR_Emitter_Modulator.
Deleting now unused module IR_Emitter_Registers.
Deleting now unused module i2cSlave(I2C_ADDRESS=7'b0101010).
Deleting now unused module i2cSlaveSerialInterface(I2C_ADDRESS=7'b0101010).
Deleting now unused module i2cSlaveTop(I2C_ADDRESS=7'b0101010).
Deleting now unused module r1024x9_1024x9.
<suppressed ~15 debug messages>

yosys> bmuxmap

3.9. Executing BMUXMAP pass.

yosys> demuxmap

3.10. Executing DEMUXMAP pass.

yosys> clean_zerowidth

yosys> tribuf -logic -formal

3.11. Executing TRIBUF pass.

yosys> deminout

3.12. Executing DEMINOUT pass (demote inout ports to input or output).
Demoting inout port top.CpuScl to input.
Demoting inout port top.CpuSda to output.
Demoting inout port top.IR_Emitter_Gpio_Port_io to output.

yosys> opt_expr

3.13. Executing OPT_EXPR pass (perform const folding).
Optimizing module top.
<suppressed ~108 debug messages>

yosys> opt_clean

3.14. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \top..
Removed 0 unused cells and 1092 unused wires.
<suppressed ~181 debug messages>

yosys> check

3.15. Executing CHECK pass (checking for obvious problems).
Checking module top...
Found and reported 0 problems.

yosys> opt_expr

3.16. Executing OPT_EXPR pass (perform const folding).
Optimizing module top.
<suppressed ~57 debug messages>

yosys> opt_merge -nomux

3.17. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\top'.
Removed a total of 0 cells.

yosys> opt_muxtree

3.18. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \top..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
      Replacing known input bits on port B of cell $flatten\u_i2cSlaveTop.\u_i2cSlave.\u_i2cSlaveSerialInterface.$verific$mux_96$i2cSlaveSerialInterface.v:323$1760: \u_i2cSlaveTop.u_i2cSlave.u_i2cSlaveSerialInterface.CurrState_SISt -> 4'0111
      Replacing known input bits on port B of cell $flatten\u_i2cSlaveTop.\u_i2cSlave.\u_i2cSlaveSerialInterface.$auto$bmuxmap.cc:60:execute$2086: \u_i2cSlaveTop.u_i2cSlave.u_i2cSlaveSerialInterface.streamSt -> 2'11
      Replacing known input bits on port B of cell $flatten\u_i2cSlaveTop.\u_i2cSlave.\u_i2cSlaveSerialInterface.$auto$bmuxmap.cc:60:execute$2085: \u_i2cSlaveTop.u_i2cSlave.u_i2cSlaveSerialInterface.streamSt -> 2'01
      Replacing known input bits on port A of cell $flatten\u_i2cSlaveTop.\u_i2cSlave.\u_i2cSlaveSerialInterface.$verific$mux_123$i2cSlaveSerialInterface.v:348$1776: \u_i2cSlaveTop.u_i2cSlave.u_i2cSlaveSerialInterface.streamSt -> 2'00
  Analyzing evaluation results.
Removed 0 multiplexer ports.
<suppressed ~102 debug messages>

yosys> opt_reduce

3.19. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \top.
    New ctrl vector for $pmux cell $flatten\u_IR_Emitter_Interface.\u_IR_Emitter_Carrier_Generator.$verific$Select_125$IR_Emitter_Carrier_Generator.v:383$955: { $flatten\u_IR_Emitter_Interface.\u_IR_Emitter_Carrier_Generator.$verific$n318$807 $flatten\u_IR_Emitter_Interface.\u_IR_Emitter_Carrier_Generator.$verific$n326$812 }
    New ctrl vector for $pmux cell $flatten\u_IR_Emitter_Interface.\u_IR_Emitter_Carrier_Generator.$verific$select_122$IR_Emitter_Carrier_Generator.v:383$952: { $flatten\u_IR_Emitter_Interface.\u_IR_Emitter_Carrier_Generator.$verific$n319$808 $auto$opt_reduce.cc:134:opt_pmux$2224 }
    New ctrl vector for $pmux cell $flatten\u_IR_Emitter_Interface.\u_IR_Emitter_Carrier_Generator.$verific$select_140$IR_Emitter_Carrier_Generator.v:409$962: { $flatten\u_IR_Emitter_Interface.\u_IR_Emitter_Carrier_Generator.$verific$n203$787 $flatten\u_IR_Emitter_Interface.\u_IR_Emitter_Carrier_Generator.$verific$n347$816 }
    New ctrl vector for $pmux cell $flatten\u_IR_Emitter_Interface.\u_IR_Emitter_Modulator.$verific$Select_153$IR_Emitter_Modulator.v:442$1140: { $flatten\u_IR_Emitter_Interface.\u_IR_Emitter_Modulator.$verific$n296$1022 $flatten\u_IR_Emitter_Interface.\u_IR_Emitter_Modulator.$verific$n298$1024 }
    New ctrl vector for $pmux cell $flatten\u_IR_Emitter_Interface.\u_IR_Emitter_Modulator.$verific$select_143$IR_Emitter_Modulator.v:442$1136: { $flatten\u_IR_Emitter_Interface.\u_IR_Emitter_Modulator.$verific$n296$1022 $flatten\u_IR_Emitter_Interface.\u_IR_Emitter_Modulator.$verific$n298$1024 }
    New ctrl vector for $pmux cell $flatten\u_IR_Emitter_Interface.\u_IR_Emitter_Registers.$verific$select_80$IR_Emitter_Registers.v:312$1323: { $flatten\u_IR_Emitter_Interface.\u_IR_Emitter_Registers.$verific$n207$1210 $flatten\u_IR_Emitter_Interface.\u_IR_Emitter_Registers.$verific$n208$1211 $flatten\u_IR_Emitter_Interface.\u_IR_Emitter_Registers.$verific$n209$1212 $flatten\u_IR_Emitter_Interface.\u_IR_Emitter_Registers.$verific$n6$1184 $flatten\u_IR_Emitter_Interface.\u_IR_Emitter_Registers.$verific$n9$1186 $flatten\u_IR_Emitter_Interface.\u_IR_Emitter_Registers.$verific$n12$1188 $flatten\u_IR_Emitter_Interface.\u_IR_Emitter_Registers.$verific$n15$1190 $flatten\u_IR_Emitter_Interface.\u_IR_Emitter_Registers.$verific$n18$1192 $flatten\u_IR_Emitter_Interface.\u_IR_Emitter_Registers.$verific$n21$1194 $flatten\u_IR_Emitter_Interface.\u_IR_Emitter_Registers.$verific$n24$1196 $flatten\u_IR_Emitter_Interface.\u_IR_Emitter_Registers.$verific$n27$1198 $flatten\u_IR_Emitter_Interface.\u_IR_Emitter_Registers.$verific$n30$1200 $flatten\u_IR_Emitter_Interface.\u_IR_Emitter_Registers.$verific$n33$1202 $flatten\u_IR_Emitter_Interface.\u_IR_Emitter_Registers.$verific$n36$1204 $flatten\u_IR_Emitter_Interface.\u_IR_Emitter_Registers.$verific$n39$1206 $flatten\u_IR_Emitter_Interface.\u_IR_Emitter_Registers.$verific$n42$1208 }
    New ctrl vector for $pmux cell $flatten\u_i2cSlaveTop.\u_i2cSlave.\u_i2cSlaveSerialInterface.$verific$Select_235$i2cSlaveSerialInterface.v:474$1852: { $flatten\u_i2cSlaveTop.\u_i2cSlave.\u_i2cSlaveSerialInterface.$verific$n956$1585 $flatten\u_i2cSlaveTop.\u_i2cSlave.\u_i2cSlaveSerialInterface.$verific$n957$1586 }
    New ctrl vector for $pmux cell $flatten\u_i2cSlaveTop.\u_i2cSlave.\u_i2cSlaveSerialInterface.$verific$select_79$i2cSlaveSerialInterface.v:309$1757: { $flatten\u_i2cSlaveTop.\u_i2cSlave.\u_i2cSlaveSerialInterface.$verific$n323$1564 $auto$opt_reduce.cc:134:opt_pmux$2226 }
    New ctrl vector for $pmux cell $flatten\u_i2cSlaveTop.\u_i2cSlave.\u_i2cSlaveSerialInterface.$verific$select_81$i2cSlaveSerialInterface.v:309$1758: $auto$opt_reduce.cc:134:opt_pmux$2228
    New ctrl vector for $pmux cell $flatten\u_i2cSlaveTop.\u_i2cSlave.\u_i2cSlaveSerialInterface.$verific$select_94$i2cSlaveSerialInterface.v:322$1759: $auto$opt_reduce.cc:134:opt_pmux$2230
  Optimizing cells in module \top.
Performed a total of 11 changes.

yosys> opt_merge

3.20. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\top'.
<suppressed ~48 debug messages>
Removed a total of 16 cells.

yosys> opt_share

3.21. Executing OPT_SHARE pass.

yosys> opt_dff -nosdff -nodffe

3.22. Executing OPT_DFF pass (perform DFF optimizations).
Removing never-active async load on $flatten\u_i2cSlaveTop.\u_i2cSlave.\u_i2cSlaveSerialInterface.$verific$txData_reg$i2cSlaveSerialInterface.v:449$1839 ($aldff) from module top.
Removing never-active async load on $flatten\u_i2cSlaveTop.\u_i2cSlave.\u_i2cSlaveSerialInterface.$verific$streamSt_reg$i2cSlaveSerialInterface.v:449$1838 ($aldff) from module top.
Removing never-active async load on $flatten\u_i2cSlaveTop.\u_i2cSlave.\u_i2cSlaveSerialInterface.$verific$rxData_reg$i2cSlaveSerialInterface.v:449$1840 ($aldff) from module top.
Removing never-active async load on $flatten\u_i2cSlaveTop.\u_i2cSlave.\u_i2cSlaveSerialInterface.$verific$regAddr_reg$i2cSlaveSerialInterface.v:449$1842 ($aldff) from module top.
Removing never-active async load on $flatten\u_i2cSlaveTop.\u_i2cSlave.\u_i2cSlaveSerialInterface.$verific$dataOut_reg$i2cSlaveSerialInterface.v:449$1836 ($aldff) from module top.
Removing never-active async load on $flatten\u_i2cSlaveTop.\u_i2cSlave.\u_i2cSlaveSerialInterface.$verific$bitCnt_reg$i2cSlaveSerialInterface.v:449$1841 ($aldff) from module top.
Removing never-active async load on $flatten\u_i2cSlaveTop.\u_i2cSlave.\u_i2cSlaveSerialInterface.$verific$CurrState_SISt_reg$i2cSlaveSerialInterface.v:424$1815 ($aldff) from module top.
Removing never-active async load on $flatten\u_i2cSlaveTop.\u_i2cSlave.$verific$startStopDetState_reg$i2cSlave.v:245$1508 ($aldff) from module top.
Removing never-active async load on $flatten\u_i2cSlaveTop.\u_i2cSlave.$verific$sdaPipe_reg$i2cSlave.v:191$1482 ($aldff) from module top.
Removing never-active async load on $flatten\u_i2cSlaveTop.\u_i2cSlave.$verific$sdaDelayed_reg$i2cSlave.v:214$1491 ($aldff) from module top.
Removing never-active async load on $flatten\u_i2cSlaveTop.\u_i2cSlave.$verific$sclPipe_reg$i2cSlave.v:191$1484 ($aldff) from module top.
Removing never-active async load on $flatten\u_i2cSlaveTop.\u_i2cSlave.$verific$sclDelayed_reg$i2cSlave.v:214$1490 ($aldff) from module top.
Removing never-active async load on $flatten\u_i2cSlaveTop.\u_i2cSlave.$verific$rstPipe_reg$i2cSlave.v:158$1464 ($aldff) from module top.
Changing const-value async load to async reset on $flatten\u_IR_Emitter_Interface.$verific$RegAddr_i_1ff_reg$IR_Emitter_Interface.v:324$186 ($aldff) from module top.
Removing never-active async load on $flatten\u_IR_Emitter_Interface.\u_IR_Emitter_SRAM_7.$verific$RAM9bit_reg$r1024x9_1024x9.v:41$1883 ($aldff) from module top.
Removing never-active async load on $flatten\u_IR_Emitter_Interface.\u_IR_Emitter_SRAM_6.$verific$RAM9bit_reg$r1024x9_1024x9.v:41$1883 ($aldff) from module top.
Removing never-active async load on $flatten\u_IR_Emitter_Interface.\u_IR_Emitter_SRAM_5.$verific$RAM9bit_reg$r1024x9_1024x9.v:41$1883 ($aldff) from module top.
Removing never-active async load on $flatten\u_IR_Emitter_Interface.\u_IR_Emitter_SRAM_4.$verific$RAM9bit_reg$r1024x9_1024x9.v:41$1883 ($aldff) from module top.
Removing never-active async load on $flatten\u_IR_Emitter_Interface.\u_IR_Emitter_SRAM_3.$verific$RAM9bit_reg$r1024x9_1024x9.v:41$1883 ($aldff) from module top.
Removing never-active async load on $flatten\u_IR_Emitter_Interface.\u_IR_Emitter_SRAM_2.$verific$RAM9bit_reg$r1024x9_1024x9.v:41$1883 ($aldff) from module top.
Removing never-active async load on $flatten\u_IR_Emitter_Interface.\u_IR_Emitter_SRAM_1.$verific$RAM9bit_reg$r1024x9_1024x9.v:41$1883 ($aldff) from module top.
Removing never-active async load on $flatten\u_IR_Emitter_Interface.\u_IR_Emitter_SRAM_0.$verific$RAM9bit_reg$r1024x9_1024x9.v:41$1883 ($aldff) from module top.
Changing const-value async load to async reset on $flatten\u_IR_Emitter_Interface.\u_IR_Emitter_Registers.$verific$RegData_o_reg$IR_Emitter_Registers.v:408$1365 ($aldff) from module top.
Changing const-value async load to async reset on $flatten\u_IR_Emitter_Interface.\u_IR_Emitter_Registers.$verific$RegAddr_i_1ff_reg$IR_Emitter_Registers.v:408$1364 ($aldff) from module top.
Changing const-value async load to async reset on $flatten\u_IR_Emitter_Interface.\u_IR_Emitter_Registers.$verific$IR_LED_Gpio_o_reg$IR_Emitter_Registers.v:408$1374 ($aldff) from module top.
Changing const-value async load to async reset on $flatten\u_IR_Emitter_Interface.\u_IR_Emitter_Registers.$verific$IR_LED_Gpio_Polarity_o_reg$IR_Emitter_Registers.v:408$1373 ($aldff) from module top.
Changing const-value async load to async reset on $flatten\u_IR_Emitter_Interface.\u_IR_Emitter_Registers.$verific$IR_Emitter_Run_Modulator_o_reg$IR_Emitter_Registers.v:408$1366 ($aldff) from module top.
Changing const-value async load to async reset on $flatten\u_IR_Emitter_Interface.\u_IR_Emitter_Registers.$verific$IR_Emitter_Mode_Modulator_o_reg$IR_Emitter_Registers.v:408$1367 ($aldff) from module top.
Changing const-value async load to async reset on $flatten\u_IR_Emitter_Interface.\u_IR_Emitter_Registers.$verific$IR_Emitter_MemRd_Stop_o_reg$IR_Emitter_Registers.v:408$1371 ($aldff) from module top.
Changing const-value async load to async reset on $flatten\u_IR_Emitter_Interface.\u_IR_Emitter_Registers.$verific$IR_Emitter_MemRd_Start_o_reg$IR_Emitter_Registers.v:408$1370 ($aldff) from module top.
Changing const-value async load to async reset on $flatten\u_IR_Emitter_Interface.\u_IR_Emitter_Registers.$verific$IR_Emitter_MemAddr_Reg_o_reg$IR_Emitter_Registers.v:408$1372 ($aldff) from module top.
Changing const-value async load to async reset on $flatten\u_IR_Emitter_Interface.\u_IR_Emitter_Registers.$verific$IR_Emitter_Interrupt_reg$IR_Emitter_Registers.v:408$1378 ($aldff) from module top.
Changing const-value async load to async reset on $flatten\u_IR_Emitter_Interface.\u_IR_Emitter_Registers.$verific$IR_Emitter_Interrupt_Enable_reg$IR_Emitter_Registers.v:408$1379 ($aldff) from module top.
Changing const-value async load to async reset on $flatten\u_IR_Emitter_Interface.\u_IR_Emitter_Registers.$verific$IR_Emitter_Gpio_Port_o_reg$IR_Emitter_Registers.v:408$1375 ($aldff) from module top.
Changing const-value async load to async reset on $flatten\u_IR_Emitter_Interface.\u_IR_Emitter_Registers.$verific$IR_Emitter_Gpio_Dir_o_reg$IR_Emitter_Registers.v:408$1376 ($aldff) from module top.
Changing const-value async load to async reset on $flatten\u_IR_Emitter_Interface.\u_IR_Emitter_Registers.$verific$IR_Emitter_Carrier_Duty_Len_o_reg$IR_Emitter_Registers.v:408$1369 ($aldff) from module top.
Changing const-value async load to async reset on $flatten\u_IR_Emitter_Interface.\u_IR_Emitter_Registers.$verific$IR_Emitter_Carrier_Cycle_Len_o_reg$IR_Emitter_Registers.v:408$1368 ($aldff) from module top.
Changing const-value async load to async reset on $flatten\u_IR_Emitter_Interface.\u_IR_Emitter_Registers.$verific$IR_Emitter_Busy_Modulator_i_1ff_reg$IR_Emitter_Registers.v:408$1377 ($aldff) from module top.
Changing const-value async load to async reset on $flatten\u_IR_Emitter_Interface.\u_IR_Emitter_Modulator.$verific$IR_LED_En_o_reg$IR_Emitter_Modulator.v:260$1113 ($aldff) from module top.
Changing const-value async load to async reset on $flatten\u_IR_Emitter_Interface.\u_IR_Emitter_Modulator.$verific$IR_Emitter_Pulse_Modulator_o_tc_reg$IR_Emitter_Modulator.v:260$1109 ($aldff) from module top.
Changing const-value async load to async reset on $flatten\u_IR_Emitter_Interface.\u_IR_Emitter_Modulator.$verific$IR_Emitter_Pulse_Modulator_o_reg$IR_Emitter_Modulator.v:260$1106 ($aldff) from module top.
Changing const-value async load to async reset on $flatten\u_IR_Emitter_Interface.\u_IR_Emitter_Modulator.$verific$IR_Emitter_Pulse_Modulator_o_ld_upr_reg$IR_Emitter_Modulator.v:260$1108 ($aldff) from module top.
Changing const-value async load to async reset on $flatten\u_IR_Emitter_Interface.\u_IR_Emitter_Modulator.$verific$IR_Emitter_Pulse_Modulator_o_ld_lwr_reg$IR_Emitter_Modulator.v:260$1107 ($aldff) from module top.
Changing const-value async load to async reset on $flatten\u_IR_Emitter_Interface.\u_IR_Emitter_Modulator.$verific$IR_Emitter_Pulse_Modulator_Signal_reg$IR_Emitter_Modulator.v:260$1112 ($aldff) from module top.
Changing const-value async load to async reset on $flatten\u_IR_Emitter_Interface.\u_IR_Emitter_Modulator.$verific$IR_Emitter_Modulator_State_reg$IR_Emitter_Modulator.v:260$1114 ($aldff) from module top.
Changing const-value async load to async reset on $flatten\u_IR_Emitter_Interface.\u_IR_Emitter_Modulator.$verific$IR_Emitter_MemData_lwr_reg$IR_Emitter_Modulator.v:260$1110 ($aldff) from module top.
Changing const-value async load to async reset on $flatten\u_IR_Emitter_Interface.\u_IR_Emitter_Modulator.$verific$IR_Emitter_MemAddr_Modulator_o_tc_upr_reg$IR_Emitter_Modulator.v:260$1105 ($aldff) from module top.
Changing const-value async load to async reset on $flatten\u_IR_Emitter_Interface.\u_IR_Emitter_Modulator.$verific$IR_Emitter_MemAddr_Modulator_o_tc_lwr_reg$IR_Emitter_Modulator.v:260$1104 ($aldff) from module top.
Changing const-value async load to async reset on $flatten\u_IR_Emitter_Interface.\u_IR_Emitter_Modulator.$verific$IR_Emitter_MemAddr_Modulator_o_reg$IR_Emitter_Modulator.v:260$1101 ($aldff) from module top.
Changing const-value async load to async reset on $flatten\u_IR_Emitter_Interface.\u_IR_Emitter_Modulator.$verific$IR_Emitter_MemAddr_Modulator_o_ld_reg$IR_Emitter_Modulator.v:260$1103 ($aldff) from module top.
Changing const-value async load to async reset on $flatten\u_IR_Emitter_Interface.\u_IR_Emitter_Modulator.$verific$IR_Emitter_MemAddr_Modulator_o_ce_reg$IR_Emitter_Modulator.v:260$1102 ($aldff) from module top.
Changing const-value async load to async reset on $flatten\u_IR_Emitter_Interface.\u_IR_Emitter_Modulator.$verific$IR_Emitter_Carrier_Enable_o_reg$IR_Emitter_Modulator.v:260$1099 ($aldff) from module top.
Changing const-value async load to async reset on $flatten\u_IR_Emitter_Interface.\u_IR_Emitter_Modulator.$verific$IR_Emitter_Busy_Modulator_o_reg$IR_Emitter_Modulator.v:260$1100 ($aldff) from module top.
Changing const-value async load to async reset on $flatten\u_IR_Emitter_Interface.$verific$RegRd_En_i_1ff_reg$IR_Emitter_Interface.v:324$185 ($aldff) from module top.
Changing const-value async load to async reset on $flatten\u_IR_Emitter_Interface.\u_IR_Emitter_Carrier_Generator.$verific$IR_Emitter_Carrier_Signal_o_reg$IR_Emitter_Carrier_Generator.v:216$910 ($aldff) from module top.
Changing const-value async load to async reset on $flatten\u_IR_Emitter_Interface.\u_IR_Emitter_Carrier_Generator.$verific$IR_Emitter_Carrier_Duty_ld_tc_reg$IR_Emitter_Carrier_Generator.v:216$908 ($aldff) from module top.
Changing const-value async load to async reset on $flatten\u_IR_Emitter_Interface.\u_IR_Emitter_Carrier_Generator.$verific$IR_Emitter_Carrier_Duty_cntr_tc_reg$IR_Emitter_Carrier_Generator.v:216$907 ($aldff) from module top.
Changing const-value async load to async reset on $flatten\u_IR_Emitter_Interface.\u_IR_Emitter_Carrier_Generator.$verific$IR_Emitter_Carrier_Duty_cntr_ld_reg$IR_Emitter_Carrier_Generator.v:216$906 ($aldff) from module top.
Changing const-value async load to async reset on $flatten\u_IR_Emitter_Interface.\u_IR_Emitter_Carrier_Generator.$verific$IR_Emitter_Carrier_Duty_State_reg$IR_Emitter_Carrier_Generator.v:216$909 ($aldff) from module top.
Changing const-value async load to async reset on $flatten\u_IR_Emitter_Interface.\u_IR_Emitter_Carrier_Generator.$verific$IR_Emitter_Carrier_Duty_1_cntr_tc_reg$IR_Emitter_Carrier_Generator.v:216$905 ($aldff) from module top.
Changing const-value async load to async reset on $flatten\u_IR_Emitter_Interface.\u_IR_Emitter_Carrier_Generator.$verific$IR_Emitter_Carrier_Duty_1_cntr_reg$IR_Emitter_Carrier_Generator.v:216$904 ($aldff) from module top.
Changing const-value async load to async reset on $flatten\u_IR_Emitter_Interface.\u_IR_Emitter_Carrier_Generator.$verific$IR_Emitter_Carrier_Duty_0_cntr_tc_reg$IR_Emitter_Carrier_Generator.v:216$903 ($aldff) from module top.
Changing const-value async load to async reset on $flatten\u_IR_Emitter_Interface.\u_IR_Emitter_Carrier_Generator.$verific$IR_Emitter_Carrier_Duty_0_cntr_reg$IR_Emitter_Carrier_Generator.v:216$902 ($aldff) from module top.
Changing const-value async load to async reset on $flatten\u_IR_Emitter_Interface.\u_IR_Emitter_Carrier_Generator.$verific$IR_Emitter_Carrier_Cycle_Enable_o_reg$IR_Emitter_Carrier_Generator.v:216$901 ($aldff) from module top.
Changing const-value async load to async reset on $flatten\u_IR_Emitter_Interface.\u_IR_Emitter_Carrier_Generator.$verific$IR_Emitter_Carrier_Cycle_1_cntr_tc_reg$IR_Emitter_Carrier_Generator.v:216$900 ($aldff) from module top.
Changing const-value async load to async reset on $flatten\u_IR_Emitter_Interface.\u_IR_Emitter_Carrier_Generator.$verific$IR_Emitter_Carrier_Cycle_1_cntr_reg$IR_Emitter_Carrier_Generator.v:216$899 ($aldff) from module top.
Changing const-value async load to async reset on $flatten\u_IR_Emitter_Interface.\u_IR_Emitter_Carrier_Generator.$verific$IR_Emitter_Carrier_Cycle_0_cntr_tc_reg$IR_Emitter_Carrier_Generator.v:216$898 ($aldff) from module top.
Changing const-value async load to async reset on $flatten\u_IR_Emitter_Interface.\u_IR_Emitter_Carrier_Generator.$verific$IR_Emitter_Carrier_Cycle_0_cntr_reg$IR_Emitter_Carrier_Generator.v:216$897 ($aldff) from module top.

yosys> opt_clean

3.23. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \top..
Removed 9 unused cells and 21 unused wires.
<suppressed ~10 debug messages>

yosys> opt_expr

3.24. Executing OPT_EXPR pass (perform const folding).
Optimizing module top.
<suppressed ~1 debug messages>

yosys> opt_muxtree

3.25. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \top..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Removed 0 multiplexer ports.
<suppressed ~103 debug messages>

yosys> opt_reduce

3.26. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \top.
Performed a total of 0 changes.

yosys> opt_merge

3.27. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\top'.
Removed a total of 0 cells.

yosys> opt_share

3.28. Executing OPT_SHARE pass.

yosys> opt_dff -nosdff -nodffe

3.29. Executing OPT_DFF pass (perform DFF optimizations).

yosys> opt_clean

3.30. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \top..
Removed 0 unused cells and 1 unused wires.
<suppressed ~1 debug messages>

yosys> opt_expr

3.31. Executing OPT_EXPR pass (perform const folding).
Optimizing module top.
MAX OPT ITERATION = 2

yosys> fsm -encoding binary

3.32. Executing FSM pass (extract and optimize FSM).

yosys> fsm_detect

3.32.1. Executing FSM_DETECT pass (finding FSMs in design).
Not marking top.u_IR_Emitter_Interface.u_IR_Emitter_Carrier_Generator.IR_Emitter_Carrier_Duty_State as FSM state register:
    Users of register don't seem to benefit from recoding.
Not marking top.u_IR_Emitter_Interface.u_IR_Emitter_Modulator.IR_Emitter_Modulator_State as FSM state register:
    Users of register don't seem to benefit from recoding.
Found FSM state register top.u_i2cSlaveTop.u_i2cSlave.startStopDetState.
Not marking top.u_i2cSlaveTop.u_i2cSlave.u_i2cSlaveSerialInterface.streamSt as FSM state register:
    Users of register don't seem to benefit from recoding.

yosys> fsm_extract

3.32.2. Executing FSM_EXTRACT pass (extracting FSM from design).
Extracting FSM `\u_i2cSlaveTop.u_i2cSlave.startStopDetState' from module `\top'.
  found $dff cell for state register: $flatten\u_i2cSlaveTop.\u_i2cSlave.$verific$startStopDetState_reg$i2cSlave.v:245$1508
  root of input selection tree: $flatten\u_i2cSlaveTop.\u_i2cSlave.$verific$n176$1457
  found reset state: 2'00 (guessed from mux tree)
  found ctrl input: \u_i2cSlaveTop.u_i2cSlave.rstPipe [1]
  found ctrl input: \u_i2cSlaveTop.u_i2cSlave.u_i2cSlaveSerialInterface.clearStartStopDet
  found ctrl input: \u_i2cSlaveTop.u_i2cSlave.sclDeb
  found ctrl input: $flatten\u_i2cSlaveTop.\u_i2cSlave.$verific$n154$1431
  found ctrl input: $flatten\u_i2cSlaveTop.\u_i2cSlave.$verific$n160$1432
  found state code: 2'01
  found state code: 2'10
  found state code: 2'00
  found ctrl output: $flatten\u_i2cSlaveTop.\u_i2cSlave.\u_i2cSlaveSerialInterface.$verific$n291$1559
  found ctrl output: $flatten\u_i2cSlaveTop.\u_i2cSlave.\u_i2cSlaveSerialInterface.$verific$n323$1564
  found ctrl output: $flatten\u_i2cSlaveTop.\u_i2cSlave.\u_i2cSlaveSerialInterface.$verific$n324$1565
  ctrl inputs: { \u_i2cSlaveTop.u_i2cSlave.u_i2cSlaveSerialInterface.clearStartStopDet $flatten\u_i2cSlaveTop.\u_i2cSlave.$verific$n154$1431 $flatten\u_i2cSlaveTop.\u_i2cSlave.$verific$n160$1432 \u_i2cSlaveTop.u_i2cSlave.rstPipe [1] \u_i2cSlaveTop.u_i2cSlave.sclDeb }
  ctrl outputs: { $flatten\u_i2cSlaveTop.\u_i2cSlave.\u_i2cSlaveSerialInterface.$verific$n324$1565 $flatten\u_i2cSlaveTop.\u_i2cSlave.\u_i2cSlaveSerialInterface.$verific$n323$1564 $flatten\u_i2cSlaveTop.\u_i2cSlave.\u_i2cSlaveSerialInterface.$verific$n291$1559 $flatten\u_i2cSlaveTop.\u_i2cSlave.$verific$n176$1457 }
  transition:       2'00 5'0--00 ->       2'00 5'01000
  transition:       2'00 5'00001 ->       2'00 5'01000
  transition:       2'00 5'00101 ->       2'01 5'01001
  transition:       2'00 5'01-01 ->       2'10 5'01010
  transition:       2'00 5'1--0- ->       2'00 5'01000
  transition:       2'00 5'---1- ->       2'00 5'01000
  transition:       2'10 5'0--00 ->       2'10 5'00110
  transition:       2'10 5'00001 ->       2'10 5'00110
  transition:       2'10 5'00101 ->       2'01 5'00101
  transition:       2'10 5'01-01 ->       2'10 5'00110
  transition:       2'10 5'1--0- ->       2'00 5'00100
  transition:       2'10 5'---1- ->       2'00 5'00100
  transition:       2'01 5'0--00 ->       2'01 5'10001
  transition:       2'01 5'00001 ->       2'01 5'10001
  transition:       2'01 5'00101 ->       2'01 5'10001
  transition:       2'01 5'01-01 ->       2'10 5'10010
  transition:       2'01 5'1--0- ->       2'00 5'10000
  transition:       2'01 5'---1- ->       2'00 5'10000

yosys> fsm_opt

3.32.3. Executing FSM_OPT pass (simple optimizations of FSMs).
Optimizing FSM `$fsm$\u_i2cSlaveTop.u_i2cSlave.startStopDetState$2231' from module `\top'.
  Merging pattern 5'00001 and 5'00101 from group (2 2 5'10001).
  Merging pattern 5'00101 and 5'00001 from group (2 2 5'10001).

yosys> opt_clean

3.32.4. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \top..
Removed 9 unused cells and 10 unused wires.
<suppressed ~11 debug messages>

yosys> fsm_opt

3.32.5. Executing FSM_OPT pass (simple optimizations of FSMs).
Optimizing FSM `$fsm$\u_i2cSlaveTop.u_i2cSlave.startStopDetState$2231' from module `\top'.
  Removing unused output signal $flatten\u_i2cSlaveTop.\u_i2cSlave.$verific$n176$1457 [0].
  Removing unused output signal $flatten\u_i2cSlaveTop.\u_i2cSlave.$verific$n176$1457 [1].

yosys> fsm_recode -encoding binary

3.32.6. Executing FSM_RECODE pass (re-assigning FSM state encoding).
Recoding FSM `$fsm$\u_i2cSlaveTop.u_i2cSlave.startStopDetState$2231' from module `\top' using `auto' encoding:
  mapping auto encoding to `binary` for this FSM.
  existing encoding is already a packed binary encoding.

yosys> fsm_info

3.32.7. Executing FSM_INFO pass (dumping all available information on FSM cells).

FSM `$fsm$\u_i2cSlaveTop.u_i2cSlave.startStopDetState$2231' from module `top':
-------------------------------------

  Information on FSM $fsm$\u_i2cSlaveTop.u_i2cSlave.startStopDetState$2231 (\u_i2cSlaveTop.u_i2cSlave.startStopDetState):

  Number of input signals:    5
  Number of output signals:   3
  Number of state bits:       2

  Input signals:
    0: \u_i2cSlaveTop.u_i2cSlave.sclDeb
    1: \u_i2cSlaveTop.u_i2cSlave.rstPipe [1]
    2: $flatten\u_i2cSlaveTop.\u_i2cSlave.$verific$n160$1432
    3: $flatten\u_i2cSlaveTop.\u_i2cSlave.$verific$n154$1431
    4: \u_i2cSlaveTop.u_i2cSlave.u_i2cSlaveSerialInterface.clearStartStopDet

  Output signals:
    0: $flatten\u_i2cSlaveTop.\u_i2cSlave.\u_i2cSlaveSerialInterface.$verific$n291$1559
    1: $flatten\u_i2cSlaveTop.\u_i2cSlave.\u_i2cSlaveSerialInterface.$verific$n323$1564
    2: $flatten\u_i2cSlaveTop.\u_i2cSlave.\u_i2cSlaveSerialInterface.$verific$n324$1565

  State encoding:
    0:       2'00  <RESET STATE>
    1:       2'10
    2:       2'01

  Transition Table (state_in, ctrl_in, state_out, ctrl_out):
      0:     0 5'0--00   ->     0 3'010
      1:     0 5'00001   ->     0 3'010
      2:     0 5'1--0-   ->     0 3'010
      3:     0 5'---1-   ->     0 3'010
      4:     0 5'01-01   ->     1 3'010
      5:     0 5'00101   ->     2 3'010
      6:     1 5'1--0-   ->     0 3'001
      7:     1 5'---1-   ->     0 3'001
      8:     1 5'0--00   ->     1 3'001
      9:     1 5'00001   ->     1 3'001
     10:     1 5'01-01   ->     1 3'001
     11:     1 5'00101   ->     2 3'001
     12:     2 5'1--0-   ->     0 3'100
     13:     2 5'---1-   ->     0 3'100
     14:     2 5'01-01   ->     1 3'100
     15:     2 5'0--00   ->     2 3'100
     16:     2 5'00-01   ->     2 3'100

-------------------------------------

yosys> fsm_map

3.32.8. Executing FSM_MAP pass (mapping FSMs to basic logic).
Mapping FSM `$fsm$\u_i2cSlaveTop.u_i2cSlave.startStopDetState$2231' from module `\top'.

yosys> opt_expr

3.33. Executing OPT_EXPR pass (perform const folding).
Optimizing module top.
<suppressed ~5 debug messages>

yosys> opt_merge -nomux

3.34. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\top'.
<suppressed ~9 debug messages>
Removed a total of 3 cells.

yosys> opt_muxtree

3.35. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \top..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Removed 0 multiplexer ports.
<suppressed ~103 debug messages>

yosys> opt_reduce

3.36. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \top.
Performed a total of 0 changes.

yosys> opt_merge

3.37. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\top'.
Removed a total of 0 cells.

yosys> opt_share

3.38. Executing OPT_SHARE pass.

yosys> opt_dff -nosdff -sat

3.39. Executing OPT_DFF pass (perform DFF optimizations).
Adding EN signal on $flatten\u_i2cSlaveTop.\u_i2cSlave.\u_i2cSlaveSerialInterface.$verific$writeEn_reg$i2cSlaveSerialInterface.v:449$1835 ($dff) from module top (D = $flatten\u_i2cSlaveTop.\u_i2cSlave.\u_i2cSlaveSerialInterface.$verific$n856$1581, Q = \u_i2cSlaveTop.u_i2cSlave.u_i2cSlaveSerialInterface.writeEn).
Adding EN signal on $flatten\u_i2cSlaveTop.\u_i2cSlave.\u_i2cSlaveSerialInterface.$verific$txData_reg$i2cSlaveSerialInterface.v:449$1839 ($dff) from module top (D = $flatten\u_i2cSlaveTop.\u_i2cSlave.\u_i2cSlaveSerialInterface.$verific$n870$1699, Q = \u_i2cSlaveTop.u_i2cSlave.u_i2cSlaveSerialInterface.txData).
Adding EN signal on $flatten\u_i2cSlaveTop.\u_i2cSlave.\u_i2cSlaveSerialInterface.$verific$streamSt_reg$i2cSlaveSerialInterface.v:449$1838 ($dff) from module top (D = $flatten\u_i2cSlaveTop.\u_i2cSlave.\u_i2cSlaveSerialInterface.$verific$n867$1698, Q = \u_i2cSlaveTop.u_i2cSlave.u_i2cSlaveSerialInterface.streamSt).
Adding EN signal on $flatten\u_i2cSlaveTop.\u_i2cSlave.\u_i2cSlaveSerialInterface.$verific$sdaOut_reg$i2cSlaveSerialInterface.v:449$1834 ($dff) from module top (D = $flatten\u_i2cSlaveTop.\u_i2cSlave.\u_i2cSlaveSerialInterface.$verific$n855$1580, Q = \u_i2cSlaveTop.u_i2cSlave.u_i2cSlaveSerialInterface.sdaOut).
Adding EN signal on $flatten\u_i2cSlaveTop.\u_i2cSlave.\u_i2cSlaveSerialInterface.$verific$rxData_reg$i2cSlaveSerialInterface.v:449$1840 ($dff) from module top (D = $flatten\u_i2cSlaveTop.\u_i2cSlave.\u_i2cSlaveSerialInterface.$verific$n879$1700, Q = \u_i2cSlaveTop.u_i2cSlave.u_i2cSlaveSerialInterface.rxData).
Adding EN signal on $flatten\u_i2cSlaveTop.\u_i2cSlave.\u_i2cSlaveSerialInterface.$verific$regAddr_reg$i2cSlaveSerialInterface.v:449$1842 ($dff) from module top (D = \u_i2cSlaveTop.u_i2cSlave.u_i2cSlaveSerialInterface.next_regAddr, Q = \u_i2cSlaveTop.u_i2cSlave.u_i2cSlaveSerialInterface.regAddr).
Adding EN signal on $flatten\u_i2cSlaveTop.\u_i2cSlave.\u_i2cSlaveSerialInterface.$verific$dataOut_reg$i2cSlaveSerialInterface.v:449$1836 ($dff) from module top (D = $flatten\u_i2cSlaveTop.\u_i2cSlave.\u_i2cSlaveSerialInterface.$verific$n857$1697, Q = \u_i2cSlaveTop.u_i2cSlave.u_i2cSlaveSerialInterface.dataOut).
Adding EN signal on $flatten\u_i2cSlaveTop.\u_i2cSlave.\u_i2cSlaveSerialInterface.$verific$clearStartStopDet_reg$i2cSlaveSerialInterface.v:449$1837 ($dff) from module top (D = $flatten\u_i2cSlaveTop.\u_i2cSlave.\u_i2cSlaveSerialInterface.$verific$n866$1582, Q = \u_i2cSlaveTop.u_i2cSlave.u_i2cSlaveSerialInterface.clearStartStopDet).
Adding EN signal on $flatten\u_i2cSlaveTop.\u_i2cSlave.\u_i2cSlaveSerialInterface.$verific$bitCnt_reg$i2cSlaveSerialInterface.v:449$1841 ($dff) from module top (D = $flatten\u_i2cSlaveTop.\u_i2cSlave.\u_i2cSlaveSerialInterface.$verific$n888$1701, Q = \u_i2cSlaveTop.u_i2cSlave.u_i2cSlaveSerialInterface.bitCnt).
Adding EN signal on $flatten\u_i2cSlaveTop.\u_i2cSlave.\u_i2cSlaveSerialInterface.$verific$I2CReadDataLatchedOut_reg$i2cSlaveSerialInterface.v:476$1854 ($dff) from module top (D = $flatten\u_i2cSlaveTop.\u_i2cSlave.\u_i2cSlaveSerialInterface.$verific$n960$1589, Q = \u_i2cSlaveTop.u_i2cSlave.u_i2cSlaveSerialInterface.I2CReadDataLatchedOut).
Adding EN signal on $flatten\u_i2cSlaveTop.\u_i2cSlave.\u_i2cSlaveSerialInterface.$verific$CurrState_SISt_reg$i2cSlaveSerialInterface.v:424$1815 ($dff) from module top (D = $flatten\u_i2cSlaveTop.\u_i2cSlave.\u_i2cSlaveSerialInterface.$verific$n761$1685, Q = \u_i2cSlaveTop.u_i2cSlave.u_i2cSlaveSerialInterface.CurrState_SISt).
Adding EN signal on $flatten\u_i2cSlaveTop.\u_i2cSlave.$verific$sdaDeb_reg$i2cSlave.v:191$1483 ($dff) from module top (D = $flatten\u_i2cSlaveTop.\u_i2cSlave.$verific$n73$1424, Q = \u_i2cSlaveTop.u_i2cSlave.sdaDeb).
Adding EN signal on $flatten\u_i2cSlaveTop.\u_i2cSlave.$verific$sclDeb_reg$i2cSlave.v:191$1485 ($dff) from module top (D = $flatten\u_i2cSlaveTop.\u_i2cSlave.$verific$n80$1425, Q = \u_i2cSlaveTop.u_i2cSlave.sclDeb).
Adding EN signal on $flatten\u_IR_Emitter_Interface.\u_IR_Emitter_SRAM_7.$verific$RAM9bit_reg$r1024x9_1024x9.v:41$1883 ($dff) from module top (D = $flatten\u_IR_Emitter_Interface.\u_IR_Emitter_SRAM_7.$verific$n37$1865 [8:0], Q = \u_IR_Emitter_Interface.u_IR_Emitter_SRAM_7.RAM9bit).
Adding EN signal on $flatten\u_IR_Emitter_Interface.\u_IR_Emitter_SRAM_6.$verific$RAM9bit_reg$r1024x9_1024x9.v:41$1883 ($dff) from module top (D = $flatten\u_IR_Emitter_Interface.\u_IR_Emitter_SRAM_6.$verific$n37$1865 [8:0], Q = \u_IR_Emitter_Interface.u_IR_Emitter_SRAM_6.RAM9bit).
Adding EN signal on $flatten\u_IR_Emitter_Interface.\u_IR_Emitter_SRAM_5.$verific$RAM9bit_reg$r1024x9_1024x9.v:41$1883 ($dff) from module top (D = $flatten\u_IR_Emitter_Interface.\u_IR_Emitter_SRAM_5.$verific$n37$1865 [8:0], Q = \u_IR_Emitter_Interface.u_IR_Emitter_SRAM_5.RAM9bit).
Adding EN signal on $flatten\u_IR_Emitter_Interface.\u_IR_Emitter_SRAM_4.$verific$RAM9bit_reg$r1024x9_1024x9.v:41$1883 ($dff) from module top (D = $flatten\u_IR_Emitter_Interface.\u_IR_Emitter_SRAM_4.$verific$n37$1865 [8:0], Q = \u_IR_Emitter_Interface.u_IR_Emitter_SRAM_4.RAM9bit).
Adding EN signal on $flatten\u_IR_Emitter_Interface.\u_IR_Emitter_SRAM_3.$verific$RAM9bit_reg$r1024x9_1024x9.v:41$1883 ($dff) from module top (D = $flatten\u_IR_Emitter_Interface.\u_IR_Emitter_SRAM_3.$verific$n37$1865 [8:0], Q = \u_IR_Emitter_Interface.u_IR_Emitter_SRAM_3.RAM9bit).
Adding EN signal on $flatten\u_IR_Emitter_Interface.\u_IR_Emitter_SRAM_2.$verific$RAM9bit_reg$r1024x9_1024x9.v:41$1883 ($dff) from module top (D = $flatten\u_IR_Emitter_Interface.\u_IR_Emitter_SRAM_2.$verific$n37$1865 [8:0], Q = \u_IR_Emitter_Interface.u_IR_Emitter_SRAM_2.RAM9bit).
Adding EN signal on $flatten\u_IR_Emitter_Interface.\u_IR_Emitter_SRAM_1.$verific$RAM9bit_reg$r1024x9_1024x9.v:41$1883 ($dff) from module top (D = $flatten\u_IR_Emitter_Interface.\u_IR_Emitter_SRAM_1.$verific$n37$1865 [8:0], Q = \u_IR_Emitter_Interface.u_IR_Emitter_SRAM_1.RAM9bit).
Adding EN signal on $flatten\u_IR_Emitter_Interface.\u_IR_Emitter_SRAM_0.$verific$RAM9bit_reg$r1024x9_1024x9.v:41$1883 ($dff) from module top (D = $flatten\u_IR_Emitter_Interface.\u_IR_Emitter_SRAM_0.$verific$n37$1865 [8:0], Q = \u_IR_Emitter_Interface.u_IR_Emitter_SRAM_0.RAM9bit).
Adding EN signal on $flatten\u_IR_Emitter_Interface.\u_IR_Emitter_Registers.$verific$IR_LED_Gpio_o_reg$IR_Emitter_Registers.v:408$1374 ($adff) from module top (D = \u_i2cSlaveTop.u_i2cSlave.u_i2cSlaveSerialInterface.dataOut [2], Q = \u_IR_Emitter_Interface.u_IR_Emitter_Registers.IR_LED_Gpio_o).
Adding EN signal on $flatten\u_IR_Emitter_Interface.\u_IR_Emitter_Registers.$verific$IR_LED_Gpio_Polarity_o_reg$IR_Emitter_Registers.v:408$1373 ($adff) from module top (D = \u_i2cSlaveTop.u_i2cSlave.u_i2cSlaveSerialInterface.dataOut [3], Q = \u_IR_Emitter_Interface.u_IR_Emitter_Registers.IR_LED_Gpio_Polarity_o).
Adding EN signal on $flatten\u_IR_Emitter_Interface.\u_IR_Emitter_Registers.$verific$IR_Emitter_Mode_Modulator_o_reg$IR_Emitter_Registers.v:408$1367 ($adff) from module top (D = \u_i2cSlaveTop.u_i2cSlave.u_i2cSlaveSerialInterface.dataOut [1:0], Q = \u_IR_Emitter_Interface.u_IR_Emitter_Registers.IR_Emitter_Mode_Modulator_o).
Adding EN signal on $flatten\u_IR_Emitter_Interface.\u_IR_Emitter_Registers.$verific$IR_Emitter_MemRd_Stop_o_reg$IR_Emitter_Registers.v:408$1371 ($adff) from module top (D = \u_i2cSlaveTop.u_i2cSlave.u_i2cSlaveSerialInterface.dataOut, Q = \u_IR_Emitter_Interface.u_IR_Emitter_Registers.IR_Emitter_MemRd_Stop_o [7:0]).
Adding EN signal on $flatten\u_IR_Emitter_Interface.\u_IR_Emitter_Registers.$verific$IR_Emitter_MemRd_Stop_o_reg$IR_Emitter_Registers.v:408$1371 ($adff) from module top (D = \u_i2cSlaveTop.u_i2cSlave.u_i2cSlaveSerialInterface.dataOut [4:0], Q = \u_IR_Emitter_Interface.u_IR_Emitter_Registers.IR_Emitter_MemRd_Stop_o [12:8]).
Adding EN signal on $flatten\u_IR_Emitter_Interface.\u_IR_Emitter_Registers.$verific$IR_Emitter_MemRd_Start_o_reg$IR_Emitter_Registers.v:408$1370 ($adff) from module top (D = \u_i2cSlaveTop.u_i2cSlave.u_i2cSlaveSerialInterface.dataOut, Q = \u_IR_Emitter_Interface.u_IR_Emitter_Registers.IR_Emitter_MemRd_Start_o [7:0]).
Adding EN signal on $flatten\u_IR_Emitter_Interface.\u_IR_Emitter_Registers.$verific$IR_Emitter_MemRd_Start_o_reg$IR_Emitter_Registers.v:408$1370 ($adff) from module top (D = \u_i2cSlaveTop.u_i2cSlave.u_i2cSlaveSerialInterface.dataOut [4:0], Q = \u_IR_Emitter_Interface.u_IR_Emitter_Registers.IR_Emitter_MemRd_Start_o [12:8]).
Adding EN signal on $flatten\u_IR_Emitter_Interface.\u_IR_Emitter_Registers.$verific$IR_Emitter_MemAddr_Reg_o_reg$IR_Emitter_Registers.v:408$1372 ($adff) from module top (D = \u_i2cSlaveTop.u_i2cSlave.u_i2cSlaveSerialInterface.dataOut [5:0], Q = \u_IR_Emitter_Interface.u_IR_Emitter_Registers.IR_Emitter_MemAddr_Reg_o).
Adding EN signal on $flatten\u_IR_Emitter_Interface.\u_IR_Emitter_Registers.$verific$IR_Emitter_Interrupt_reg$IR_Emitter_Registers.v:408$1378 ($adff) from module top (D = $flatten\u_IR_Emitter_Interface.\u_IR_Emitter_Registers.$verific$n386$1229, Q = \u_IR_Emitter_Interface.u_IR_Emitter_Registers.IR_Emitter_Interrupt).
Adding EN signal on $flatten\u_IR_Emitter_Interface.\u_IR_Emitter_Registers.$verific$IR_Emitter_Interrupt_Enable_reg$IR_Emitter_Registers.v:408$1379 ($adff) from module top (D = \u_i2cSlaveTop.u_i2cSlave.u_i2cSlaveSerialInterface.dataOut [5], Q = \u_IR_Emitter_Interface.u_IR_Emitter_Registers.IR_Emitter_Interrupt_Enable).
Adding EN signal on $flatten\u_IR_Emitter_Interface.\u_IR_Emitter_Registers.$verific$IR_Emitter_Gpio_Port_o_reg$IR_Emitter_Registers.v:408$1375 ($adff) from module top (D = \u_i2cSlaveTop.u_i2cSlave.u_i2cSlaveSerialInterface.dataOut, Q = \u_IR_Emitter_Interface.u_IR_Emitter_Registers.IR_Emitter_Gpio_Port_o).
Adding EN signal on $flatten\u_IR_Emitter_Interface.\u_IR_Emitter_Registers.$verific$IR_Emitter_Gpio_Dir_o_reg$IR_Emitter_Registers.v:408$1376 ($adff) from module top (D = \u_i2cSlaveTop.u_i2cSlave.u_i2cSlaveSerialInterface.dataOut, Q = \u_IR_Emitter_Interface.u_IR_Emitter_Registers.IR_Emitter_Gpio_Dir_o).
Adding EN signal on $flatten\u_IR_Emitter_Interface.\u_IR_Emitter_Registers.$verific$IR_Emitter_Carrier_Duty_Len_o_reg$IR_Emitter_Registers.v:408$1369 ($adff) from module top (D = \u_i2cSlaveTop.u_i2cSlave.u_i2cSlaveSerialInterface.dataOut, Q = \u_IR_Emitter_Interface.u_IR_Emitter_Registers.IR_Emitter_Carrier_Duty_Len_o [7:0]).
Adding EN signal on $flatten\u_IR_Emitter_Interface.\u_IR_Emitter_Registers.$verific$IR_Emitter_Carrier_Duty_Len_o_reg$IR_Emitter_Registers.v:408$1369 ($adff) from module top (D = \u_i2cSlaveTop.u_i2cSlave.u_i2cSlaveSerialInterface.dataOut, Q = \u_IR_Emitter_Interface.u_IR_Emitter_Registers.IR_Emitter_Carrier_Duty_Len_o [15:8]).
Adding EN signal on $flatten\u_IR_Emitter_Interface.\u_IR_Emitter_Registers.$verific$IR_Emitter_Carrier_Cycle_Len_o_reg$IR_Emitter_Registers.v:408$1368 ($adff) from module top (D = \u_i2cSlaveTop.u_i2cSlave.u_i2cSlaveSerialInterface.dataOut, Q = \u_IR_Emitter_Interface.u_IR_Emitter_Registers.IR_Emitter_Carrier_Cycle_Len_o [7:0]).
Adding EN signal on $flatten\u_IR_Emitter_Interface.\u_IR_Emitter_Registers.$verific$IR_Emitter_Carrier_Cycle_Len_o_reg$IR_Emitter_Registers.v:408$1368 ($adff) from module top (D = \u_i2cSlaveTop.u_i2cSlave.u_i2cSlaveSerialInterface.dataOut, Q = \u_IR_Emitter_Interface.u_IR_Emitter_Registers.IR_Emitter_Carrier_Cycle_Len_o [15:8]).
Adding EN signal on $flatten\u_IR_Emitter_Interface.\u_IR_Emitter_Modulator.$verific$IR_Emitter_Pulse_Modulator_o_tc_reg$IR_Emitter_Modulator.v:260$1109 ($adff) from module top (D = \u_IR_Emitter_Interface.u_IR_Emitter_Modulator.IR_Emitter_Pulse_Modulator_o_tc_nxt, Q = \u_IR_Emitter_Interface.u_IR_Emitter_Modulator.IR_Emitter_Pulse_Modulator_o_tc).
Adding EN signal on $flatten\u_IR_Emitter_Interface.\u_IR_Emitter_Modulator.$verific$IR_Emitter_Pulse_Modulator_o_reg$IR_Emitter_Modulator.v:260$1106 ($adff) from module top (D = \u_IR_Emitter_Interface.u_IR_Emitter_Modulator.IR_Emitter_Pulse_Modulator_o_nxt, Q = \u_IR_Emitter_Interface.u_IR_Emitter_Modulator.IR_Emitter_Pulse_Modulator_o).
Adding EN signal on $flatten\u_IR_Emitter_Interface.\u_IR_Emitter_Modulator.$verific$IR_Emitter_Pulse_Modulator_Signal_reg$IR_Emitter_Modulator.v:260$1112 ($adff) from module top (D = \u_IR_Emitter_Interface.u_IR_Emitter_Modulator.IR_Emitter_Pulse_Modulator_Signal_nxt, Q = \u_IR_Emitter_Interface.u_IR_Emitter_Modulator.IR_Emitter_Pulse_Modulator_Signal).
Adding EN signal on $flatten\u_IR_Emitter_Interface.\u_IR_Emitter_Modulator.$verific$IR_Emitter_MemData_lwr_reg$IR_Emitter_Modulator.v:260$1110 ($adff) from module top (D = \u_IR_Emitter_Interface.IR_Emitter_MemData_o, Q = \u_IR_Emitter_Interface.u_IR_Emitter_Modulator.IR_Emitter_MemData_lwr).
Adding EN signal on $flatten\u_IR_Emitter_Interface.\u_IR_Emitter_Modulator.$verific$IR_Emitter_MemAddr_Modulator_o_tc_upr_reg$IR_Emitter_Modulator.v:260$1105 ($adff) from module top (D = \u_IR_Emitter_Interface.u_IR_Emitter_Modulator.IR_Emitter_MemAddr_Modulator_o_tc_lwr, Q = \u_IR_Emitter_Interface.u_IR_Emitter_Modulator.IR_Emitter_MemAddr_Modulator_o_tc_upr).
Adding EN signal on $flatten\u_IR_Emitter_Interface.\u_IR_Emitter_Modulator.$verific$IR_Emitter_MemAddr_Modulator_o_tc_lwr_reg$IR_Emitter_Modulator.v:260$1104 ($adff) from module top (D = \u_IR_Emitter_Interface.u_IR_Emitter_Modulator.IR_Emitter_MemAddr_Modulator_o_tc_nxt, Q = \u_IR_Emitter_Interface.u_IR_Emitter_Modulator.IR_Emitter_MemAddr_Modulator_o_tc_lwr).
Adding EN signal on $flatten\u_IR_Emitter_Interface.\u_IR_Emitter_Modulator.$verific$IR_Emitter_MemAddr_Modulator_o_reg$IR_Emitter_Modulator.v:260$1101 ($adff) from module top (D = \u_IR_Emitter_Interface.u_IR_Emitter_Modulator.IR_Emitter_MemAddr_Modulator_o_nxt, Q = \u_IR_Emitter_Interface.u_IR_Emitter_Modulator.IR_Emitter_MemAddr_Modulator_o).
Adding EN signal on $flatten\u_IR_Emitter_Interface.\u_IR_Emitter_Carrier_Generator.$verific$IR_Emitter_Carrier_Duty_1_cntr_tc_reg$IR_Emitter_Carrier_Generator.v:216$905 ($adff) from module top (D = \u_IR_Emitter_Interface.u_IR_Emitter_Carrier_Generator.IR_Emitter_Carrier_Duty_1_cntr_tc_nxt, Q = \u_IR_Emitter_Interface.u_IR_Emitter_Carrier_Generator.IR_Emitter_Carrier_Duty_1_cntr_tc).
Adding EN signal on $flatten\u_IR_Emitter_Interface.\u_IR_Emitter_Carrier_Generator.$verific$IR_Emitter_Carrier_Duty_1_cntr_reg$IR_Emitter_Carrier_Generator.v:216$904 ($adff) from module top (D = \u_IR_Emitter_Interface.u_IR_Emitter_Carrier_Generator.IR_Emitter_Carrier_Duty_1_cntr_nxt, Q = \u_IR_Emitter_Interface.u_IR_Emitter_Carrier_Generator.IR_Emitter_Carrier_Duty_1_cntr).
Adding EN signal on $flatten\u_IR_Emitter_Interface.\u_IR_Emitter_Carrier_Generator.$verific$IR_Emitter_Carrier_Cycle_1_cntr_tc_reg$IR_Emitter_Carrier_Generator.v:216$900 ($adff) from module top (D = \u_IR_Emitter_Interface.u_IR_Emitter_Carrier_Generator.IR_Emitter_Carrier_Cycle_1_cntr_tc_nxt, Q = \u_IR_Emitter_Interface.u_IR_Emitter_Carrier_Generator.IR_Emitter_Carrier_Cycle_1_cntr_tc).
Adding EN signal on $flatten\u_IR_Emitter_Interface.\u_IR_Emitter_Carrier_Generator.$verific$IR_Emitter_Carrier_Cycle_1_cntr_reg$IR_Emitter_Carrier_Generator.v:216$899 ($adff) from module top (D = \u_IR_Emitter_Interface.u_IR_Emitter_Carrier_Generator.IR_Emitter_Carrier_Cycle_1_cntr_nxt, Q = \u_IR_Emitter_Interface.u_IR_Emitter_Carrier_Generator.IR_Emitter_Carrier_Cycle_1_cntr).

yosys> opt_clean

3.40. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \top..
Removed 35 unused cells and 42 unused wires.
<suppressed ~36 debug messages>

yosys> opt_expr

3.41. Executing OPT_EXPR pass (perform const folding).
Optimizing module top.
<suppressed ~8 debug messages>

yosys> opt_muxtree

3.42. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \top..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Removed 0 multiplexer ports.
<suppressed ~77 debug messages>

yosys> opt_reduce

3.43. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \top.
Performed a total of 0 changes.

yosys> opt_merge

3.44. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\top'.
<suppressed ~117 debug messages>
Removed a total of 39 cells.

yosys> opt_share

3.45. Executing OPT_SHARE pass.

yosys> opt_dff -nosdff -sat

3.46. Executing OPT_DFF pass (perform DFF optimizations).

yosys> opt_clean

3.47. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \top..
Removed 0 unused cells and 42 unused wires.
<suppressed ~1 debug messages>

yosys> opt_expr

3.48. Executing OPT_EXPR pass (perform const folding).
Optimizing module top.

yosys> opt_muxtree

3.49. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \top..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Removed 0 multiplexer ports.
<suppressed ~77 debug messages>

yosys> opt_reduce

3.50. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \top.
Performed a total of 0 changes.

yosys> opt_merge

3.51. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\top'.
Removed a total of 0 cells.

yosys> opt_share

3.52. Executing OPT_SHARE pass.

yosys> opt_dff -nosdff -sat

3.53. Executing OPT_DFF pass (perform DFF optimizations).

yosys> opt_clean

3.54. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \top..

yosys> opt_expr

3.55. Executing OPT_EXPR pass (perform const folding).
Optimizing module top.
MAX OPT ITERATION = 3

yosys> wreduce -keepdc

3.56. Executing WREDUCE pass (reducing word size of cells).
Removed top 2 bits (of 7) from port B of cell top.$auto$opt_dff.cc:195:make_patterns_logic$2285 ($ne).
Removed top 1 bits (of 2) from port B of cell top.$auto$fsm_map.cc:215:map_fsm$2241 ($eq).
Removed top 7 bits (of 8) from port B of cell top.$flatten\u_i2cSlaveTop.\u_i2cSlave.\u_i2cSlaveSerialInterface.$verific$add_25$i2cSlaveSerialInterface.v:245$1721 ($add).
Removed top 2 bits (of 3) from port B of cell top.$flatten\u_i2cSlaveTop.\u_i2cSlave.\u_i2cSlaveSerialInterface.$verific$add_48$i2cSlaveSerialInterface.v:280$1737 ($add).
Removed top 1 bits (of 7) from port B of cell top.$flatten\u_i2cSlaveTop.\u_i2cSlave.\u_i2cSlaveSerialInterface.$verific$equal_115$i2cSlaveSerialInterface.v:342$1772 ($eq).
Removed top 1 bits (of 2) from port B of cell top.$flatten\u_i2cSlaveTop.\u_i2cSlave.\u_i2cSlaveSerialInterface.$verific$equal_22$i2cSlaveSerialInterface.v:241$1719 ($eq).
Removed top 1 bits (of 4) from port B of cell top.$flatten\u_i2cSlaveTop.\u_i2cSlave.\u_i2cSlaveSerialInterface.$verific$equal_232$i2cSlaveSerialInterface.v:462$1847 ($eq).
Removed top 1 bits (of 4) from mux cell top.$flatten\u_i2cSlaveTop.\u_i2cSlave.\u_i2cSlaveSerialInterface.$verific$mux_138$i2cSlaveSerialInterface.v:366$1786 ($mux).
Removed top 1 bits (of 4) from mux cell top.$flatten\u_i2cSlaveTop.\u_i2cSlave.\u_i2cSlaveSerialInterface.$verific$mux_50$i2cSlaveSerialInterface.v:282$1739 ($mux).
Removed top 1 bits (of 6) from port B of cell top.$auto$opt_dff.cc:195:make_patterns_logic$2281 ($ne).
Removed top 4 bits (of 5) from port B of cell top.$auto$fsm_map.cc:77:implement_pattern_cache$2261 ($eq).
Removed top 1 bits (of 4) from port B of cell top.$auto$fsm_map.cc:77:implement_pattern_cache$2265 ($eq).
Removed top 3 bits (of 5) from port B of cell top.$auto$opt_dff.cc:195:make_patterns_logic$2304 ($ne).
Removed top 1 bits (of 2) from port B of cell top.$auto$opt_dff.cc:195:make_patterns_logic$2308 ($ne).
Removed top 2 bits (of 7) from port B of cell top.$auto$opt_dff.cc:195:make_patterns_logic$2313 ($ne).
Removed top 2 bits (of 6) from port B of cell top.$auto$opt_dff.cc:195:make_patterns_logic$2317 ($ne).
Removed top 2 bits (of 7) from port B of cell top.$auto$opt_dff.cc:195:make_patterns_logic$2319 ($ne).
Removed top 4 bits (of 5) from port B of cell top.$auto$opt_dff.cc:195:make_patterns_logic$2325 ($ne).
Removed top 2 bits (of 4) from port B of cell top.$auto$opt_dff.cc:195:make_patterns_logic$2327 ($ne).
Removed top 1 bits (of 3) from port B of cell top.$auto$opt_dff.cc:195:make_patterns_logic$2333 ($ne).
Removed top 2 bits (of 5) from port B of cell top.$auto$opt_dff.cc:195:make_patterns_logic$2344 ($ne).
Removed top 1 bits (of 5) from port B of cell top.$auto$opt_dff.cc:195:make_patterns_logic$2348 ($ne).
Removed top 2 bits (of 4) from port B of cell top.$auto$opt_dff.cc:195:make_patterns_logic$2354 ($ne).
Removed top 1 bits (of 4) from port B of cell top.$auto$opt_dff.cc:195:make_patterns_logic$2356 ($ne).
Removed top 1 bits (of 6) from port B of cell top.$auto$opt_dff.cc:195:make_patterns_logic$2361 ($ne).
Removed top 1 bits (of 6) from port B of cell top.$auto$opt_dff.cc:195:make_patterns_logic$2363 ($ne).
Removed top 4 bits (of 6) from port B of cell top.$auto$opt_dff.cc:195:make_patterns_logic$2367 ($ne).
Removed top 1 bits (of 5) from port B of cell top.$auto$opt_dff.cc:195:make_patterns_logic$2369 ($ne).
Removed top 2 bits (of 5) from port B of cell top.$auto$opt_dff.cc:195:make_patterns_logic$2371 ($ne).
Removed top 1 bits (of 5) from port B of cell top.$auto$opt_dff.cc:195:make_patterns_logic$2373 ($ne).
Removed top 1 bits (of 6) from port B of cell top.$auto$opt_dff.cc:195:make_patterns_logic$2388 ($ne).
Removed top 3 bits (of 5) from port B of cell top.$auto$opt_dff.cc:195:make_patterns_logic$2390 ($ne).
Removed top 1 bits (of 5) from port B of cell top.$auto$opt_dff.cc:195:make_patterns_logic$2396 ($ne).
Removed top 2 bits (of 3) from port B of cell top.$auto$opt_dff.cc:195:make_patterns_logic$2402 ($ne).
Removed top 1 bits (of 2) from port B of cell top.$auto$opt_dff.cc:195:make_patterns_logic$2406 ($ne).
Removed top 2 bits (of 6) from port B of cell top.$auto$opt_dff.cc:195:make_patterns_logic$2434 ($ne).
Removed top 1 bits (of 5) from port B of cell top.$auto$opt_dff.cc:195:make_patterns_logic$2436 ($ne).
Removed top 1 bits (of 3) from port B of cell top.$auto$opt_dff.cc:195:make_patterns_logic$2446 ($ne).
Removed top 2 bits (of 6) from port B of cell top.$auto$opt_dff.cc:195:make_patterns_logic$2455 ($ne).
Removed top 1 bits (of 6) from port B of cell top.$auto$opt_dff.cc:195:make_patterns_logic$2457 ($ne).
Removed top 2 bits (of 5) from port B of cell top.$auto$opt_dff.cc:195:make_patterns_logic$2463 ($ne).
Removed top 1 bits (of 3) from port B of cell top.$auto$opt_dff.cc:195:make_patterns_logic$2474 ($ne).
Removed top 2 bits (of 3) from port B of cell top.$auto$opt_dff.cc:195:make_patterns_logic$2476 ($ne).
Removed top 1 bits (of 6) from port B of cell top.$auto$opt_dff.cc:195:make_patterns_logic$2485 ($ne).
Removed top 3 bits (of 6) from port B of cell top.$auto$opt_dff.cc:195:make_patterns_logic$2487 ($ne).
Removed top 1 bits (of 6) from port B of cell top.$auto$opt_dff.cc:195:make_patterns_logic$2491 ($ne).
Removed top 1 bits (of 6) from port B of cell top.$auto$opt_dff.cc:195:make_patterns_logic$2495 ($ne).
Removed top 2 bits (of 6) from port B of cell top.$auto$opt_dff.cc:195:make_patterns_logic$2497 ($ne).
Removed top 1 bits (of 3) from port B of cell top.$auto$opt_dff.cc:195:make_patterns_logic$2502 ($ne).
Removed top 1 bits (of 3) from port B of cell top.$auto$opt_dff.cc:195:make_patterns_logic$2505 ($ne).
Removed top 1 bits (of 3) from port B of cell top.$auto$opt_dff.cc:195:make_patterns_logic$2542 ($ne).
Removed top 1 bits (of 9) from port A of cell top.$flatten\u_IR_Emitter_Interface.\u_IR_Emitter_Carrier_Generator.$verific$sub_56$IR_Emitter_Carrier_Generator.v:236$911 ($sub).
Removed top 8 bits (of 9) from port B of cell top.$flatten\u_IR_Emitter_Interface.\u_IR_Emitter_Carrier_Generator.$verific$sub_56$IR_Emitter_Carrier_Generator.v:236$911 ($sub).
Removed top 1 bits (of 9) from port Y of cell top.$flatten\u_IR_Emitter_Interface.\u_IR_Emitter_Carrier_Generator.$verific$sub_56$IR_Emitter_Carrier_Generator.v:236$911 ($sub).
Removed top 1 bits (of 9) from port A of cell top.$flatten\u_IR_Emitter_Interface.\u_IR_Emitter_Carrier_Generator.$verific$sub_164$IR_Emitter_Carrier_Generator.v:466$981 ($sub).
Removed top 8 bits (of 9) from port B of cell top.$flatten\u_IR_Emitter_Interface.\u_IR_Emitter_Carrier_Generator.$verific$sub_164$IR_Emitter_Carrier_Generator.v:466$981 ($sub).
Removed top 1 bits (of 9) from port Y of cell top.$flatten\u_IR_Emitter_Interface.\u_IR_Emitter_Carrier_Generator.$verific$sub_164$IR_Emitter_Carrier_Generator.v:466$981 ($sub).
Removed top 1 bits (of 9) from port A of cell top.$flatten\u_IR_Emitter_Interface.\u_IR_Emitter_Carrier_Generator.$verific$sub_149$IR_Emitter_Carrier_Generator.v:438$968 ($sub).
Removed top 8 bits (of 9) from port B of cell top.$flatten\u_IR_Emitter_Interface.\u_IR_Emitter_Carrier_Generator.$verific$sub_149$IR_Emitter_Carrier_Generator.v:438$968 ($sub).
Removed top 1 bits (of 9) from port Y of cell top.$flatten\u_IR_Emitter_Interface.\u_IR_Emitter_Carrier_Generator.$verific$sub_149$IR_Emitter_Carrier_Generator.v:438$968 ($sub).
Removed top 15 bits (of 16) from port B of cell top.$flatten\u_IR_Emitter_Interface.\u_IR_Emitter_Carrier_Generator.$verific$equal_89$IR_Emitter_Carrier_Generator.v:302$937 ($eq).
Removed top 7 bits (of 8) from port B of cell top.$flatten\u_IR_Emitter_Interface.\u_IR_Emitter_Carrier_Generator.$verific$equal_77$IR_Emitter_Carrier_Generator.v:272$928 ($eq).
Removed top 7 bits (of 8) from port B of cell top.$flatten\u_IR_Emitter_Interface.\u_IR_Emitter_Carrier_Generator.$verific$equal_65$IR_Emitter_Carrier_Generator.v:245$920 ($eq).
Removed top 6 bits (of 8) from port B of cell top.$flatten\u_IR_Emitter_Interface.\u_IR_Emitter_Carrier_Generator.$verific$equal_62$IR_Emitter_Carrier_Generator.v:243$917 ($eq).
Removed top 7 bits (of 8) from port B of cell top.$flatten\u_IR_Emitter_Interface.\u_IR_Emitter_Carrier_Generator.$verific$equal_170$IR_Emitter_Carrier_Generator.v:474$987 ($eq).
Removed top 7 bits (of 8) from port B of cell top.$flatten\u_IR_Emitter_Interface.\u_IR_Emitter_Carrier_Generator.$verific$equal_158$IR_Emitter_Carrier_Generator.v:447$977 ($eq).
Removed top 6 bits (of 8) from port B of cell top.$flatten\u_IR_Emitter_Interface.\u_IR_Emitter_Carrier_Generator.$verific$equal_155$IR_Emitter_Carrier_Generator.v:445$974 ($eq).
Removed top 1 bits (of 2) from mux cell top.$flatten\u_IR_Emitter_Interface.\u_IR_Emitter_Carrier_Generator.$auto$bmuxmap.cc:60:execute$2212 ($mux).
Removed top 14 bits (of 16) from port B of cell top.$flatten\u_IR_Emitter_Interface.\u_IR_Emitter_Modulator.$verific$equal_196$IR_Emitter_Modulator.v:529$1176 ($eq).
Removed top 15 bits (of 16) from port B of cell top.$flatten\u_IR_Emitter_Interface.\u_IR_Emitter_Modulator.$verific$equal_193$IR_Emitter_Modulator.v:528$1173 ($eq).
Removed top 1 bits (of 2) from port B of cell top.$flatten\u_IR_Emitter_Interface.\u_IR_Emitter_Modulator.$verific$equal_188$IR_Emitter_Modulator.v:507$1166 ($eq).
Removed top 1 bits (of 2) from port B of cell top.$flatten\u_IR_Emitter_Interface.\u_IR_Emitter_Modulator.$verific$equal_176$IR_Emitter_Modulator.v:477$1153 ($eq).
Removed top 12 bits (of 13) from port B of cell top.$flatten\u_IR_Emitter_Interface.\u_IR_Emitter_Modulator.$verific$add_173$IR_Emitter_Modulator.v:478$1152 ($add).
Removed top 1 bits (of 5) from port B of cell top.$auto$opt_dff.cc:195:make_patterns_logic$2287 ($ne).
Removed top 2 bits (of 3) from mux cell top.$flatten\u_IR_Emitter_Interface.\u_IR_Emitter_Modulator.$auto$bmuxmap.cc:60:execute$2190 ($mux).
Removed top 1 bits (of 3) from mux cell top.$flatten\u_IR_Emitter_Interface.\u_IR_Emitter_Modulator.$auto$bmuxmap.cc:60:execute$2180 ($mux).
Removed top 1 bits (of 4) from port B of cell top.$auto$opt_dff.cc:195:make_patterns_logic$2289 ($ne).
Removed top 3 bits (of 4) from port B of cell top.$auto$opt_dff.cc:195:make_patterns_logic$2291 ($ne).
Removed top 1 bits (of 4) from port B of cell top.$auto$opt_dff.cc:195:make_patterns_logic$2293 ($ne).
Removed top 2 bits (of 3) from port B of cell top.$auto$opt_dff.cc:195:make_patterns_logic$2295 ($ne).
Removed top 3 bits (of 6) from port B of cell top.$auto$opt_dff.cc:195:make_patterns_logic$2300 ($ne).
Removed top 3 bits (of 4) from port B of cell top.$auto$fsm_map.cc:77:implement_pattern_cache$2274 ($eq).
Removed top 5 bits (of 8) from port B of cell top.$flatten\u_IR_Emitter_Interface.\u_IR_Emitter_Registers.$verific$equal_8$IR_Emitter_Registers.v:240$1280 ($eq).
Removed top 2 bits (of 5) from port B of cell top.$auto$fsm_map.cc:77:implement_pattern_cache$2272 ($eq).
Removed top 6 bits (of 8) from port B of cell top.$flatten\u_IR_Emitter_Interface.\u_IR_Emitter_Registers.$verific$equal_64$IR_Emitter_Registers.v:285$1318 ($eq).
Removed top 7 bits (of 8) from port B of cell top.$flatten\u_IR_Emitter_Interface.\u_IR_Emitter_Registers.$verific$equal_63$IR_Emitter_Registers.v:283$1317 ($eq).
Removed top 5 bits (of 8) from port B of cell top.$flatten\u_IR_Emitter_Interface.\u_IR_Emitter_Registers.$verific$equal_5$IR_Emitter_Registers.v:239$1277 ($eq).
Removed top 3 bits (of 8) from port B of cell top.$flatten\u_IR_Emitter_Interface.\u_IR_Emitter_Registers.$verific$equal_41$IR_Emitter_Registers.v:257$1313 ($eq).
Removed top 3 bits (of 8) from port B of cell top.$flatten\u_IR_Emitter_Interface.\u_IR_Emitter_Registers.$verific$equal_38$IR_Emitter_Registers.v:256$1310 ($eq).
Removed top 4 bits (of 8) from port B of cell top.$flatten\u_IR_Emitter_Interface.\u_IR_Emitter_Registers.$verific$equal_35$IR_Emitter_Registers.v:254$1307 ($eq).
Removed top 4 bits (of 8) from port B of cell top.$flatten\u_IR_Emitter_Interface.\u_IR_Emitter_Registers.$verific$equal_32$IR_Emitter_Registers.v:252$1304 ($eq).
Removed top 4 bits (of 8) from port B of cell top.$flatten\u_IR_Emitter_Interface.\u_IR_Emitter_Registers.$verific$equal_29$IR_Emitter_Registers.v:251$1301 ($eq).
Removed top 4 bits (of 8) from port B of cell top.$flatten\u_IR_Emitter_Interface.\u_IR_Emitter_Registers.$verific$equal_26$IR_Emitter_Registers.v:249$1298 ($eq).
Removed top 4 bits (of 8) from port B of cell top.$flatten\u_IR_Emitter_Interface.\u_IR_Emitter_Registers.$verific$equal_23$IR_Emitter_Registers.v:248$1295 ($eq).
Removed top 4 bits (of 8) from port B of cell top.$flatten\u_IR_Emitter_Interface.\u_IR_Emitter_Registers.$verific$equal_20$IR_Emitter_Registers.v:246$1292 ($eq).
Removed top 4 bits (of 8) from port B of cell top.$flatten\u_IR_Emitter_Interface.\u_IR_Emitter_Registers.$verific$equal_17$IR_Emitter_Registers.v:245$1289 ($eq).
Removed top 5 bits (of 8) from port B of cell top.$flatten\u_IR_Emitter_Interface.\u_IR_Emitter_Registers.$verific$equal_14$IR_Emitter_Registers.v:243$1286 ($eq).
Removed top 5 bits (of 8) from port B of cell top.$flatten\u_IR_Emitter_Interface.\u_IR_Emitter_Registers.$verific$equal_11$IR_Emitter_Registers.v:242$1283 ($eq).
Removed top 4 bits (of 6) from port B of cell top.$auto$opt_dff.cc:195:make_patterns_logic$2302 ($ne).
Removed top 2 bits (of 3) from port B of cell top.$flatten\u_IR_Emitter_Interface.$verific$equal_45$IR_Emitter_Interface.v:280$155 ($eq).
Removed top 1 bits (of 3) from port B of cell top.$flatten\u_IR_Emitter_Interface.$verific$equal_48$IR_Emitter_Interface.v:281$156 ($eq).
Removed top 1 bits (of 3) from port B of cell top.$flatten\u_IR_Emitter_Interface.$verific$equal_51$IR_Emitter_Interface.v:282$157 ($eq).
Removed top 2 bits (of 3) from port B of cell top.$flatten\u_IR_Emitter_Interface.$verific$equal_69$IR_Emitter_Interface.v:294$164 ($eq).
Removed top 1 bits (of 3) from port B of cell top.$flatten\u_IR_Emitter_Interface.$verific$equal_72$IR_Emitter_Interface.v:295$165 ($eq).
Removed top 1 bits (of 3) from port B of cell top.$flatten\u_IR_Emitter_Interface.$verific$equal_75$IR_Emitter_Interface.v:296$166 ($eq).
Removed top 1 bits (of 9) from port A of cell top.$flatten\u_IR_Emitter_Interface.\u_IR_Emitter_Carrier_Generator.$verific$sub_71$IR_Emitter_Carrier_Generator.v:264$924 ($sub).
Removed top 8 bits (of 9) from port B of cell top.$flatten\u_IR_Emitter_Interface.\u_IR_Emitter_Carrier_Generator.$verific$sub_71$IR_Emitter_Carrier_Generator.v:264$924 ($sub).
Removed top 1 bits (of 9) from port Y of cell top.$flatten\u_IR_Emitter_Interface.\u_IR_Emitter_Carrier_Generator.$verific$sub_71$IR_Emitter_Carrier_Generator.v:264$924 ($sub).
Removed top 1 bits (of 17) from port A of cell top.$flatten\u_IR_Emitter_Interface.\u_IR_Emitter_Modulator.$verific$sub_185$IR_Emitter_Modulator.v:508$1164 ($sub).
Removed top 16 bits (of 17) from port B of cell top.$flatten\u_IR_Emitter_Interface.\u_IR_Emitter_Modulator.$verific$sub_185$IR_Emitter_Modulator.v:508$1164 ($sub).
Removed top 1 bits (of 17) from port Y of cell top.$flatten\u_IR_Emitter_Interface.\u_IR_Emitter_Modulator.$verific$sub_185$IR_Emitter_Modulator.v:508$1164 ($sub).
Removed top 1 bits (of 9) from port B of cell top.$flatten\u_IR_Emitter_Interface.\u_IR_Emitter_SRAM_0.$verific$xor_22$r1024x9_1024x9.v:40$1879 ($xor).
Removed top 1 bits (of 9) from port B of cell top.$flatten\u_IR_Emitter_Interface.\u_IR_Emitter_SRAM_1.$verific$xor_22$r1024x9_1024x9.v:40$1879 ($xor).
Removed top 1 bits (of 9) from port B of cell top.$flatten\u_IR_Emitter_Interface.\u_IR_Emitter_SRAM_2.$verific$xor_22$r1024x9_1024x9.v:40$1879 ($xor).
Removed top 1 bits (of 9) from port B of cell top.$flatten\u_IR_Emitter_Interface.\u_IR_Emitter_SRAM_3.$verific$xor_22$r1024x9_1024x9.v:40$1879 ($xor).
Removed top 1 bits (of 9) from port B of cell top.$flatten\u_IR_Emitter_Interface.\u_IR_Emitter_SRAM_4.$verific$xor_22$r1024x9_1024x9.v:40$1879 ($xor).
Removed top 1 bits (of 9) from port B of cell top.$flatten\u_IR_Emitter_Interface.\u_IR_Emitter_SRAM_5.$verific$xor_22$r1024x9_1024x9.v:40$1879 ($xor).
Removed top 1 bits (of 9) from port B of cell top.$flatten\u_IR_Emitter_Interface.\u_IR_Emitter_SRAM_6.$verific$xor_22$r1024x9_1024x9.v:40$1879 ($xor).
Removed top 1 bits (of 9) from port B of cell top.$flatten\u_IR_Emitter_Interface.\u_IR_Emitter_SRAM_7.$verific$xor_22$r1024x9_1024x9.v:40$1879 ($xor).
Removed top 1 bits (of 2) from wire top.$flatten\u_IR_Emitter_Interface.\u_IR_Emitter_Carrier_Generator.$auto$bmuxmap.cc:58:execute$2211.
Removed top 1 bits (of 9) from wire top.$flatten\u_IR_Emitter_Interface.\u_IR_Emitter_Carrier_Generator.$verific$n175$843.
Removed top 1 bits (of 9) from wire top.$flatten\u_IR_Emitter_Interface.\u_IR_Emitter_Carrier_Generator.$verific$n223$846.
Removed top 1 bits (of 9) from wire top.$flatten\u_IR_Emitter_Interface.\u_IR_Emitter_Carrier_Generator.$verific$n364$862.
Removed top 1 bits (of 9) from wire top.$flatten\u_IR_Emitter_Interface.\u_IR_Emitter_Carrier_Generator.$verific$n412$865.
Removed top 1 bits (of 4) from wire top.$flatten\u_IR_Emitter_Interface.\u_IR_Emitter_Modulator.$auto$bmuxmap.cc:58:execute$2099.
Removed top 1 bits (of 4) from wire top.$flatten\u_IR_Emitter_Interface.\u_IR_Emitter_Modulator.$auto$bmuxmap.cc:58:execute$2109.
Removed top 2 bits (of 4) from wire top.$flatten\u_IR_Emitter_Interface.\u_IR_Emitter_Modulator.$auto$bmuxmap.cc:58:execute$2119.
Removed top 1 bits (of 4) from wire top.$flatten\u_IR_Emitter_Interface.\u_IR_Emitter_Modulator.$auto$bmuxmap.cc:58:execute$2129.
Removed top 3 bits (of 4) from wire top.$flatten\u_IR_Emitter_Interface.\u_IR_Emitter_Modulator.$auto$bmuxmap.cc:58:execute$2139.
Removed top 1 bits (of 4) from wire top.$flatten\u_IR_Emitter_Interface.\u_IR_Emitter_Modulator.$auto$bmuxmap.cc:58:execute$2149.
Removed top 3 bits (of 12) from wire top.$flatten\u_IR_Emitter_Interface.\u_IR_Emitter_Modulator.$auto$bmuxmap.cc:58:execute$2179.
Removed top 2 bits (of 3) from wire top.$flatten\u_IR_Emitter_Interface.\u_IR_Emitter_Modulator.$auto$bmuxmap.cc:58:execute$2189.
Removed top 1 bits (of 17) from wire top.$flatten\u_IR_Emitter_Interface.\u_IR_Emitter_Modulator.$verific$n432$1070.
Removed top 13 bits (of 22) from wire top.$flatten\u_IR_Emitter_Interface.\u_IR_Emitter_SRAM_0.$verific$n37$1865.
Removed top 13 bits (of 22) from wire top.$flatten\u_IR_Emitter_Interface.\u_IR_Emitter_SRAM_1.$verific$n37$1865.
Removed top 13 bits (of 22) from wire top.$flatten\u_IR_Emitter_Interface.\u_IR_Emitter_SRAM_2.$verific$n37$1865.
Removed top 13 bits (of 22) from wire top.$flatten\u_IR_Emitter_Interface.\u_IR_Emitter_SRAM_3.$verific$n37$1865.
Removed top 13 bits (of 22) from wire top.$flatten\u_IR_Emitter_Interface.\u_IR_Emitter_SRAM_4.$verific$n37$1865.
Removed top 13 bits (of 22) from wire top.$flatten\u_IR_Emitter_Interface.\u_IR_Emitter_SRAM_5.$verific$n37$1865.
Removed top 13 bits (of 22) from wire top.$flatten\u_IR_Emitter_Interface.\u_IR_Emitter_SRAM_6.$verific$n37$1865.
Removed top 13 bits (of 22) from wire top.$flatten\u_IR_Emitter_Interface.\u_IR_Emitter_SRAM_7.$verific$n37$1865.
Removed top 1 bits (of 2) from wire top.$flatten\u_i2cSlaveTop.\u_i2cSlave.\u_i2cSlaveSerialInterface.$auto$bmuxmap.cc:58:execute$2074.
Removed top 2 bits (of 4) from wire top.$flatten\u_i2cSlaveTop.\u_i2cSlave.\u_i2cSlaveSerialInterface.$auto$bmuxmap.cc:58:execute$2084.
Removed top 1 bits (of 4) from wire top.$flatten\u_i2cSlaveTop.\u_i2cSlave.\u_i2cSlaveSerialInterface.$verific$n247$1624.
Removed top 1 bits (of 4) from wire top.$flatten\u_i2cSlaveTop.\u_i2cSlave.\u_i2cSlaveSerialInterface.$verific$n559$1665.

yosys> peepopt

3.57. Executing PEEPOPT pass (run peephole optimizers).

yosys> opt_clean

3.58. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \top..
Removed 0 unused cells and 31 unused wires.
<suppressed ~1 debug messages>

yosys> bmuxmap

3.59. Executing BMUXMAP pass.

yosys> demuxmap

3.60. Executing DEMUXMAP pass.

yosys> clean_zerowidth

yosys> alumacc

3.61. Executing ALUMACC pass (create $alu and $macc cells).
Extracting $alu and $macc cells in module top:
  creating $macc model for $flatten\u_IR_Emitter_Interface.\u_IR_Emitter_Carrier_Generator.$verific$sub_149$IR_Emitter_Carrier_Generator.v:438$968 ($sub).
  creating $macc model for $flatten\u_IR_Emitter_Interface.\u_IR_Emitter_Carrier_Generator.$verific$sub_164$IR_Emitter_Carrier_Generator.v:466$981 ($sub).
  creating $macc model for $flatten\u_IR_Emitter_Interface.\u_IR_Emitter_Carrier_Generator.$verific$sub_56$IR_Emitter_Carrier_Generator.v:236$911 ($sub).
  creating $macc model for $flatten\u_IR_Emitter_Interface.\u_IR_Emitter_Carrier_Generator.$verific$sub_71$IR_Emitter_Carrier_Generator.v:264$924 ($sub).
  creating $macc model for $flatten\u_IR_Emitter_Interface.\u_IR_Emitter_Modulator.$verific$add_173$IR_Emitter_Modulator.v:478$1152 ($add).
  creating $macc model for $flatten\u_IR_Emitter_Interface.\u_IR_Emitter_Modulator.$verific$sub_185$IR_Emitter_Modulator.v:508$1164 ($sub).
  creating $macc model for $flatten\u_i2cSlaveTop.\u_i2cSlave.\u_i2cSlaveSerialInterface.$verific$add_25$i2cSlaveSerialInterface.v:245$1721 ($add).
  creating $macc model for $flatten\u_i2cSlaveTop.\u_i2cSlave.\u_i2cSlaveSerialInterface.$verific$add_48$i2cSlaveSerialInterface.v:280$1737 ($add).
  creating $alu model for $macc $flatten\u_i2cSlaveTop.\u_i2cSlave.\u_i2cSlaveSerialInterface.$verific$add_48$i2cSlaveSerialInterface.v:280$1737.
  creating $alu model for $macc $flatten\u_i2cSlaveTop.\u_i2cSlave.\u_i2cSlaveSerialInterface.$verific$add_25$i2cSlaveSerialInterface.v:245$1721.
  creating $alu model for $macc $flatten\u_IR_Emitter_Interface.\u_IR_Emitter_Modulator.$verific$sub_185$IR_Emitter_Modulator.v:508$1164.
  creating $alu model for $macc $flatten\u_IR_Emitter_Interface.\u_IR_Emitter_Modulator.$verific$add_173$IR_Emitter_Modulator.v:478$1152.
  creating $alu model for $macc $flatten\u_IR_Emitter_Interface.\u_IR_Emitter_Carrier_Generator.$verific$sub_71$IR_Emitter_Carrier_Generator.v:264$924.
  creating $alu model for $macc $flatten\u_IR_Emitter_Interface.\u_IR_Emitter_Carrier_Generator.$verific$sub_56$IR_Emitter_Carrier_Generator.v:236$911.
  creating $alu model for $macc $flatten\u_IR_Emitter_Interface.\u_IR_Emitter_Carrier_Generator.$verific$sub_164$IR_Emitter_Carrier_Generator.v:466$981.
  creating $alu model for $macc $flatten\u_IR_Emitter_Interface.\u_IR_Emitter_Carrier_Generator.$verific$sub_149$IR_Emitter_Carrier_Generator.v:438$968.
  creating $alu cell for $flatten\u_IR_Emitter_Interface.\u_IR_Emitter_Carrier_Generator.$verific$sub_149$IR_Emitter_Carrier_Generator.v:438$968: $auto$alumacc.cc:485:replace_alu$2581
  creating $alu cell for $flatten\u_IR_Emitter_Interface.\u_IR_Emitter_Carrier_Generator.$verific$sub_164$IR_Emitter_Carrier_Generator.v:466$981: $auto$alumacc.cc:485:replace_alu$2584
  creating $alu cell for $flatten\u_IR_Emitter_Interface.\u_IR_Emitter_Carrier_Generator.$verific$sub_56$IR_Emitter_Carrier_Generator.v:236$911: $auto$alumacc.cc:485:replace_alu$2587
  creating $alu cell for $flatten\u_IR_Emitter_Interface.\u_IR_Emitter_Carrier_Generator.$verific$sub_71$IR_Emitter_Carrier_Generator.v:264$924: $auto$alumacc.cc:485:replace_alu$2590
  creating $alu cell for $flatten\u_IR_Emitter_Interface.\u_IR_Emitter_Modulator.$verific$add_173$IR_Emitter_Modulator.v:478$1152: $auto$alumacc.cc:485:replace_alu$2593
  creating $alu cell for $flatten\u_IR_Emitter_Interface.\u_IR_Emitter_Modulator.$verific$sub_185$IR_Emitter_Modulator.v:508$1164: $auto$alumacc.cc:485:replace_alu$2596
  creating $alu cell for $flatten\u_i2cSlaveTop.\u_i2cSlave.\u_i2cSlaveSerialInterface.$verific$add_25$i2cSlaveSerialInterface.v:245$1721: $auto$alumacc.cc:485:replace_alu$2599
  creating $alu cell for $flatten\u_i2cSlaveTop.\u_i2cSlave.\u_i2cSlaveSerialInterface.$verific$add_48$i2cSlaveSerialInterface.v:280$1737: $auto$alumacc.cc:485:replace_alu$2602
  created 8 $alu and 0 $macc cells.

yosys> opt_expr

3.62. Executing OPT_EXPR pass (perform const folding).
Optimizing module top.

yosys> opt_merge -nomux

3.63. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\top'.
Removed a total of 0 cells.

yosys> opt_muxtree

3.64. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \top..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Removed 0 multiplexer ports.
<suppressed ~77 debug messages>

yosys> opt_reduce

3.65. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \top.
Performed a total of 0 changes.

yosys> opt_merge

3.66. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\top'.
<suppressed ~6 debug messages>
Removed a total of 2 cells.

yosys> opt_share

3.67. Executing OPT_SHARE pass.

yosys> opt_dff -nosdff -nodffe

3.68. Executing OPT_DFF pass (perform DFF optimizations).

yosys> opt_clean

3.69. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \top..
Removed 0 unused cells and 2 unused wires.
<suppressed ~1 debug messages>

yosys> opt_expr

3.70. Executing OPT_EXPR pass (perform const folding).
Optimizing module top.

yosys> opt_muxtree

3.71. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \top..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Removed 0 multiplexer ports.
<suppressed ~79 debug messages>

yosys> opt_reduce

3.72. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \top.
Performed a total of 0 changes.

yosys> opt_merge

3.73. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\top'.
Removed a total of 0 cells.

yosys> opt_share

3.74. Executing OPT_SHARE pass.

yosys> opt_dff -nosdff -nodffe

3.75. Executing OPT_DFF pass (perform DFF optimizations).

yosys> opt_clean

3.76. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \top..

yosys> opt_expr

3.77. Executing OPT_EXPR pass (perform const folding).
Optimizing module top.
MAX OPT ITERATION = 2

yosys> stat

3.78. Printing statistics.

=== top ===

   Number of wires:                735
   Number of wire bits:           3069
   Number of public wires:         343
   Number of public wire bits:    1384
   Number of memories:               0
   Number of memory bits:            0
   Number of processes:              0
   Number of cells:                601
     $adff                          24
     $adffe                         27
     $alu                            8
     $and                           44
     $dff                            7
     $dffe                          21
     $eq                            64
     $logic_not                     14
     $mux                          255
     $ne                            57
     $not                           17
     $or                            11
     $pmux                          16
     $reduce_and                    14
     $reduce_bool                    2
     $reduce_or                     12
     $xor                            8


yosys> memory -nomap

3.79. Executing MEMORY pass.

yosys> opt_mem

3.79.1. Executing OPT_MEM pass (optimize memories).
Performed a total of 0 transformations.

yosys> opt_mem_priority

3.79.2. Executing OPT_MEM_PRIORITY pass (removing unnecessary memory write priority relations).
Performed a total of 0 transformations.

yosys> opt_mem_feedback

3.79.3. Executing OPT_MEM_FEEDBACK pass (finding memory read-to-write feedback paths).

yosys> memory_bmux2rom

3.79.4. Executing MEMORY_BMUX2ROM pass (converting muxes to ROMs).

yosys> memory_dff

3.79.5. Executing MEMORY_DFF pass (merging $dff cells to $memrd).

yosys> opt_clean

3.79.6. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \top..

yosys> memory_share

3.79.7. Executing MEMORY_SHARE pass (consolidating $memrd/$memwr cells).

yosys> opt_mem_widen

3.79.8. Executing OPT_MEM_WIDEN pass (optimize memories where all ports are wide).
Performed a total of 0 transformations.

yosys> opt_clean

3.79.9. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \top..

yosys> memory_collect

3.79.10. Executing MEMORY_COLLECT pass (generating $mem cells).

yosys> stat

3.80. Printing statistics.

=== top ===

   Number of wires:                735
   Number of wire bits:           3069
   Number of public wires:         343
   Number of public wire bits:    1384
   Number of memories:               0
   Number of memory bits:            0
   Number of processes:              0
   Number of cells:                601
     $adff                          24
     $adffe                         27
     $alu                            8
     $and                           44
     $dff                            7
     $dffe                          21
     $eq                            64
     $logic_not                     14
     $mux                          255
     $ne                            57
     $not                           17
     $or                            11
     $pmux                          16
     $reduce_and                    14
     $reduce_bool                    2
     $reduce_or                     12
     $xor                            8


yosys> muxpack

3.81. Executing MUXPACK pass ($mux cell cascades to $pmux).
Converted 0 (p)mux cells into 0 pmux cells.
<suppressed ~219 debug messages>

yosys> opt_clean

3.82. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \top..

yosys> pmuxtree

3.83. Executing PMUXTREE pass.

yosys> muxpack

3.84. Executing MUXPACK pass ($mux cell cascades to $pmux).
Converting top.$auto$pmuxtree.cc:65:recursive_mux_generator$2755 ... top.$auto$pmuxtree.cc:65:recursive_mux_generator$2757 to a pmux with 2 cases.
Converting top.$auto$pmuxtree.cc:65:recursive_mux_generator$2633 ... top.$auto$pmuxtree.cc:65:recursive_mux_generator$2635 to a pmux with 2 cases.
Converted 4 (p)mux cells into 2 pmux cells.
<suppressed ~260 debug messages>

yosys> memory_map

3.85. Executing MEMORY_MAP pass (converting memories to logic and flip-flops).

yosys> stat

3.86. Printing statistics.

=== top ===

   Number of wires:                826
   Number of wire bits:           3423
   Number of public wires:         343
   Number of public wire bits:    1384
   Number of memories:               0
   Number of memory bits:            0
   Number of processes:              0
   Number of cells:                674
     $adff                          24
     $adffe                         27
     $alu                            8
     $and                           44
     $dff                            7
     $dffe                          21
     $eq                            64
     $logic_not                     14
     $mux                          300
     $ne                            57
     $not                           33
     $or                            18
     $pmux                           2
     $reduce_and                    14
     $reduce_bool                    2
     $reduce_or                     31
     $xor                            8


yosys> techmap -map +/techmap.v -map +/rapidsilicon/genesis/arith_map.v

3.87. Executing TECHMAP pass (map to technology primitives).

3.87.1. Executing Verilog-2005 frontend: /nfs_scratch/scratch/Vorak/aram/Workspace/Raptor/yosys_verific_rs/yosys/install/bin/../share/yosys/techmap.v
Parsing Verilog input from `/nfs_scratch/scratch/Vorak/aram/Workspace/Raptor/yosys_verific_rs/yosys/install/bin/../share/yosys/techmap.v' to AST representation.
Generating RTLIL representation for module `\_90_simplemap_bool_ops'.
Generating RTLIL representation for module `\_90_simplemap_reduce_ops'.
Generating RTLIL representation for module `\_90_simplemap_logic_ops'.
Generating RTLIL representation for module `\_90_simplemap_compare_ops'.
Generating RTLIL representation for module `\_90_simplemap_various'.
Generating RTLIL representation for module `\_90_simplemap_registers'.
Generating RTLIL representation for module `\_90_shift_ops_shr_shl_sshl_sshr'.
Generating RTLIL representation for module `\_90_shift_shiftx'.
Generating RTLIL representation for module `\_90_fa'.
Generating RTLIL representation for module `\_90_lcu'.
Generating RTLIL representation for module `\_90_alu'.
Generating RTLIL representation for module `\_90_macc'.
Generating RTLIL representation for module `\_90_alumacc'.
Generating RTLIL representation for module `\$__div_mod_u'.
Generating RTLIL representation for module `\$__div_mod_trunc'.
Generating RTLIL representation for module `\_90_div'.
Generating RTLIL representation for module `\_90_mod'.
Generating RTLIL representation for module `\$__div_mod_floor'.
Generating RTLIL representation for module `\_90_divfloor'.
Generating RTLIL representation for module `\_90_modfloor'.
Generating RTLIL representation for module `\_90_pow'.
Generating RTLIL representation for module `\_90_pmux'.
Generating RTLIL representation for module `\_90_demux'.
Generating RTLIL representation for module `\_90_lut'.
Successfully finished Verilog frontend.

3.87.2. Executing Verilog-2005 frontend: /nfs_scratch/scratch/Vorak/aram/Workspace/Raptor/yosys_verific_rs/yosys/install/bin/../share/yosys/rapidsilicon/genesis/arith_map.v
Parsing Verilog input from `/nfs_scratch/scratch/Vorak/aram/Workspace/Raptor/yosys_verific_rs/yosys/install/bin/../share/yosys/rapidsilicon/genesis/arith_map.v' to AST representation.
Generating RTLIL representation for module `\_80_rs_alu'.
Successfully finished Verilog frontend.

3.87.3. Continuing TECHMAP pass.
Using extmapper simplemap for cells of type $ne.
Using extmapper simplemap for cells of type $eq.
Using extmapper simplemap for cells of type $not.
Using extmapper simplemap for cells of type $and.
Using extmapper simplemap for cells of type $mux.
Using template $paramod$403a3c2fa431a154c52a6a5429d7a6260b5d144f\_90_alu for cells of type $alu.
Using extmapper simplemap for cells of type $dffe.
Using extmapper simplemap for cells of type $dff.
Using extmapper simplemap for cells of type $reduce_or.
Using extmapper simplemap for cells of type $reduce_and.
Using extmapper simplemap for cells of type $or.
Using template $paramod$3ef7d3dd227da7627a99c5e5a6a4deb817573e39\_90_alu for cells of type $alu.
Using extmapper simplemap for cells of type $logic_not.
Using extmapper simplemap for cells of type $reduce_bool.
Using template $paramod$521ce43182eecb9f60c72393a788160d2c356bf5\_90_pmux for cells of type $pmux.
Using extmapper simplemap for cells of type $adffe.
Using extmapper simplemap for cells of type $adff.
Using template $paramod$a1665ef28c749ebcdbe9aecd466e644647b56463\_90_alu for cells of type $alu.
Using template $paramod$fc16b9f758000d363d24f130038bd99b46b4fa1b\_90_pmux for cells of type $pmux.
Using template $paramod$215440792383f7884e57d9c95f84e9552d0bf4ac\_90_alu for cells of type $alu.
Using template $paramod$c3cd1564c35d873179656addd6052d7ea8b6d991\_90_alu for cells of type $alu.
Using extmapper simplemap for cells of type $xor.
Using template $paramod\_90_lcu\WIDTH=32'00000000000000000000000000001000 for cells of type $lcu.
Using extmapper simplemap for cells of type $pos.
Using template $paramod\_90_lcu\WIDTH=32'00000000000000000000000000010000 for cells of type $lcu.
Using template $paramod\_90_lcu\WIDTH=32'00000000000000000000000000001101 for cells of type $lcu.
Using template $paramod\_90_lcu\WIDTH=32'00000000000000000000000000000011 for cells of type $lcu.
No more expansions possible.
<suppressed ~2068 debug messages>

yosys> stat

3.88. Printing statistics.

=== top ===

   Number of wires:               1872
   Number of wire bits:          15239
   Number of public wires:         343
   Number of public wire bits:    1384
   Number of memories:               0
   Number of memory bits:            0
   Number of processes:              0
   Number of cells:               3859
     $_AND_                        388
     $_DFFE_PN0P_                  136
     $_DFFE_PN1P_                    9
     $_DFFE_PP_                    119
     $_DFF_PN0_                     61
     $_DFF_P_                       22
     $_MUX_                       1289
     $_NOT_                        183
     $_OR_                         794
     $_XOR_                        858


yosys> opt_expr

3.89. Executing OPT_EXPR pass (perform const folding).
Optimizing module top.
<suppressed ~1306 debug messages>

yosys> opt_merge -nomux

3.90. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\top'.
<suppressed ~1923 debug messages>
Removed a total of 641 cells.

yosys> opt_muxtree

3.91. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \top..
  Creating internal representation of mux trees.
  No muxes found in this module.
Removed 0 multiplexer ports.

yosys> opt_reduce

3.92. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \top.
Performed a total of 0 changes.

yosys> opt_merge

3.93. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\top'.
Removed a total of 0 cells.

yosys> opt_share

3.94. Executing OPT_SHARE pass.

yosys> opt_dff -nosdff -nodffe

3.95. Executing OPT_DFF pass (perform DFF optimizations).

yosys> opt_clean

3.96. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \top..
Removed 85 unused cells and 1027 unused wires.
<suppressed ~86 debug messages>

yosys> opt_expr

3.97. Executing OPT_EXPR pass (perform const folding).
Optimizing module top.

yosys> opt_muxtree

3.98. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \top..
  Creating internal representation of mux trees.
  No muxes found in this module.
Removed 0 multiplexer ports.

yosys> opt_reduce

3.99. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \top.
Performed a total of 0 changes.

yosys> opt_merge

3.100. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\top'.
Removed a total of 0 cells.

yosys> opt_share

3.101. Executing OPT_SHARE pass.

yosys> opt_dff -nosdff -nodffe

3.102. Executing OPT_DFF pass (perform DFF optimizations).

yosys> opt_clean

3.103. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \top..

yosys> opt_expr

3.104. Executing OPT_EXPR pass (perform const folding).
Optimizing module top.
MAX OPT ITERATION = 2

yosys> opt_expr -full

3.105. Executing OPT_EXPR pass (perform const folding).
Optimizing module top.
<suppressed ~530 debug messages>

yosys> techmap -map +/techmap.v

3.106. Executing TECHMAP pass (map to technology primitives).

3.106.1. Executing Verilog-2005 frontend: /nfs_scratch/scratch/Vorak/aram/Workspace/Raptor/yosys_verific_rs/yosys/install/bin/../share/yosys/techmap.v
Parsing Verilog input from `/nfs_scratch/scratch/Vorak/aram/Workspace/Raptor/yosys_verific_rs/yosys/install/bin/../share/yosys/techmap.v' to AST representation.
Generating RTLIL representation for module `\_90_simplemap_bool_ops'.
Generating RTLIL representation for module `\_90_simplemap_reduce_ops'.
Generating RTLIL representation for module `\_90_simplemap_logic_ops'.
Generating RTLIL representation for module `\_90_simplemap_compare_ops'.
Generating RTLIL representation for module `\_90_simplemap_various'.
Generating RTLIL representation for module `\_90_simplemap_registers'.
Generating RTLIL representation for module `\_90_shift_ops_shr_shl_sshl_sshr'.
Generating RTLIL representation for module `\_90_shift_shiftx'.
Generating RTLIL representation for module `\_90_fa'.
Generating RTLIL representation for module `\_90_lcu'.
Generating RTLIL representation for module `\_90_alu'.
Generating RTLIL representation for module `\_90_macc'.
Generating RTLIL representation for module `\_90_alumacc'.
Generating RTLIL representation for module `\$__div_mod_u'.
Generating RTLIL representation for module `\$__div_mod_trunc'.
Generating RTLIL representation for module `\_90_div'.
Generating RTLIL representation for module `\_90_mod'.
Generating RTLIL representation for module `\$__div_mod_floor'.
Generating RTLIL representation for module `\_90_divfloor'.
Generating RTLIL representation for module `\_90_modfloor'.
Generating RTLIL representation for module `\_90_pow'.
Generating RTLIL representation for module `\_90_pmux'.
Generating RTLIL representation for module `\_90_demux'.
Generating RTLIL representation for module `\_90_lut'.
Successfully finished Verilog frontend.

3.106.2. Continuing TECHMAP pass.
No more expansions possible.
<suppressed ~71 debug messages>

yosys> opt_expr

3.107. Executing OPT_EXPR pass (perform const folding).
Optimizing module top.

yosys> opt_merge -nomux

3.108. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\top'.
<suppressed ~18 debug messages>
Removed a total of 6 cells.

yosys> opt_muxtree

3.109. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \top..
  Creating internal representation of mux trees.
  No muxes found in this module.
Removed 0 multiplexer ports.

yosys> opt_reduce

3.110. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \top.
Performed a total of 0 changes.

yosys> opt_merge

3.111. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\top'.
Removed a total of 0 cells.

yosys> opt_dff -nosdff -nodffe -sat

3.112. Executing OPT_DFF pass (perform DFF optimizations).

yosys> opt_clean

3.113. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \top..
Removed 0 unused cells and 61 unused wires.
<suppressed ~1 debug messages>

yosys> opt_expr

3.114. Executing OPT_EXPR pass (perform const folding).
Optimizing module top.
<suppressed ~1 debug messages>

yosys> opt_muxtree

3.115. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \top..
  Creating internal representation of mux trees.
  No muxes found in this module.
Removed 0 multiplexer ports.

yosys> opt_reduce

3.116. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \top.
Performed a total of 0 changes.

yosys> opt_merge

3.117. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\top'.
Removed a total of 0 cells.

yosys> opt_dff -nosdff -nodffe -sat

3.118. Executing OPT_DFF pass (perform DFF optimizations).

yosys> opt_clean

3.119. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \top..

yosys> opt_expr

3.120. Executing OPT_EXPR pass (perform const folding).
Optimizing module top.
MAX OPT ITERATION = 2

yosys> abc -dff

3.121. Executing ABC pass (technology mapping using ABC).

3.121.1. Summary of detected clock domains:
  35 cells in clk=\Clock_i, en=\u_IR_Emitter_Interface.u_IR_Emitter_SRAM_6.WD_SEL, arst={ }, srst={ }
  26 cells in clk=\Clock_i, en=\u_IR_Emitter_Interface.u_IR_Emitter_SRAM_5.WD_SEL, arst={ }, srst={ }
  26 cells in clk=\Clock_i, en=\u_IR_Emitter_Interface.u_IR_Emitter_SRAM_4.WD_SEL, arst={ }, srst={ }
  27 cells in clk=\Clock_i, en=\u_IR_Emitter_Interface.u_IR_Emitter_SRAM_3.WD_SEL, arst={ }, srst={ }
  24 cells in clk=\Clock_i, en=\u_IR_Emitter_Interface.u_IR_Emitter_SRAM_2.WD_SEL, arst={ }, srst={ }
  24 cells in clk=\Clock_i, en=\u_IR_Emitter_Interface.u_IR_Emitter_SRAM_1.WD_SEL, arst={ }, srst={ }
  24 cells in clk=\Clock_i, en=\u_IR_Emitter_Interface.u_IR_Emitter_SRAM_0.WD_SEL, arst={ }, srst={ }
  48 cells in clk=\Clock_i, en=\u_IR_Emitter_Interface.u_IR_Emitter_Registers.IR_Emitter_Carrier_Cycle_Len_L_we_dcd, arst=!\Reset_i_N, srst={ }
  48 cells in clk=\Clock_i, en=\u_IR_Emitter_Interface.u_IR_Emitter_Registers.IR_Emitter_Carrier_Duty_Len_L_we_dcd, arst=!\Reset_i_N, srst={ }
  36 cells in clk=\Clock_i, en=\u_IR_Emitter_Interface.u_IR_Emitter_Registers.IR_Emitter_Gpio_Dir_Reg_L_we_dcd, arst=!\Reset_i_N, srst={ }
  12 cells in clk=\Clock_i, en=\u_IR_Emitter_Interface.u_IR_Emitter_Registers.IR_Emitter_Gpio_Port_Reg_L_we_dcd, arst=!\Reset_i_N, srst={ }
  3 cells in clk=\Clock_i, en=$auto$opt_dff.cc:194:make_patterns_logic$2523, arst=!\Reset_i_N, srst={ }
  30 cells in clk=\Clock_i, en=\u_IR_Emitter_Interface.u_IR_Emitter_Registers.IR_Emitter_MemAddr_Reg_L_we_dcd, arst=!\Reset_i_N, srst={ }
  28 cells in clk=\Clock_i, en=\u_IR_Emitter_Interface.u_IR_Emitter_Registers.IR_Emitter_MemRd_Start_L_we_dcd, arst=!\Reset_i_N, srst={ }
  29 cells in clk=\Clock_i, en=\u_IR_Emitter_Interface.u_IR_Emitter_Registers.IR_Emitter_MemRd_Stop_L_we_dcd, arst=!\Reset_i_N, srst={ }
  16 cells in clk=\Clock_i, en=\u_IR_Emitter_Interface.u_IR_Emitter_Registers.control_reg_we_dcd, arst=!\Reset_i_N, srst={ }
  80 cells in clk=\Clock_i, en=$auto$opt_dff.cc:194:make_patterns_logic$2549, arst=!\Reset_i_N, srst={ }
  4 cells in clk=\Clock_i, en=\u_IR_Emitter_Interface.u_IR_Emitter_Modulator.IR_Emitter_Pulse_Modulator_o_ld_upr, arst=!\Reset_i_N, srst={ }
  105 cells in clk=\Clock_i, en=\u_IR_Emitter_Interface.u_IR_Emitter_Modulator.IR_Emitter_Pulse_Modulator_o_ld_lwr, arst=!\Reset_i_N, srst={ }
  6 cells in clk=\Clock_i, en=$auto$opt_dff.cc:219:make_patterns_logic$2543, arst=!\Reset_i_N, srst={ }
  165 cells in clk=\Clock_i, en=$auto$opt_dff.cc:194:make_patterns_logic$2533, arst=!\Reset_i_N, srst={ }
  71 cells in clk=\Clock_i, en=$flatten\u_IR_Emitter_Interface.\u_IR_Emitter_Carrier_Generator.$verific$n63$771, arst=!\Reset_i_N, srst={ }
  73 cells in clk=\Clock_i, en=$flatten\u_IR_Emitter_Interface.\u_IR_Emitter_Carrier_Generator.$verific$n99$780, arst=!\Reset_i_N, srst={ }
  363 cells in clk=\Clock_i, en={ }, arst=!\Reset_i_N, srst={ }
  17 cells in clk=\Clock_i, en=\u_IR_Emitter_Interface.u_IR_Emitter_Registers.IR_Emitter_Carrier_Cycle_Len_H_we_dcd, arst=!\Reset_i_N, srst={ }
  16 cells in clk=\Clock_i, en=\u_IR_Emitter_Interface.u_IR_Emitter_Registers.IR_Emitter_Carrier_Duty_Len_H_we_dcd, arst=!\Reset_i_N, srst={ }
  14 cells in clk=\Clock_i, en=\u_IR_Emitter_Interface.u_IR_Emitter_Registers.IR_Emitter_MemRd_Start_H_we_dcd, arst=!\Reset_i_N, srst={ }
  9 cells in clk=\Clock_i, en=\u_IR_Emitter_Interface.u_IR_Emitter_Registers.IR_Emitter_MemRd_Stop_H_we_dcd, arst=!\Reset_i_N, srst={ }
  31 cells in clk=\Clock_i, en=$auto$opt_dff.cc:219:make_patterns_logic$2309, arst={ }, srst={ }
  41 cells in clk=\Clock_i, en=$auto$opt_dff.cc:219:make_patterns_logic$2334, arst={ }, srst={ }
  18 cells in clk=\Clock_i, en=$auto$opt_dff.cc:219:make_patterns_logic$2357, arst={ }, srst={ }
  85 cells in clk=\Clock_i, en=$auto$opt_dff.cc:219:make_patterns_logic$2380, arst={ }, srst={ }
  57 cells in clk=\Clock_i, en=$auto$opt_dff.cc:219:make_patterns_logic$2409, arst={ }, srst={ }
  23 cells in clk=\Clock_i, en=$auto$opt_dff.cc:219:make_patterns_logic$2430, arst={ }, srst={ }
  29 cells in clk=\Clock_i, en=$auto$opt_dff.cc:219:make_patterns_logic$2447, arst={ }, srst={ }
  36 cells in clk=\Clock_i, en=$auto$opt_dff.cc:219:make_patterns_logic$2470, arst={ }, srst={ }
  11 cells in clk=\Clock_i, en=$auto$opt_dff.cc:219:make_patterns_logic$2477, arst={ }, srst={ }
  128 cells in clk=\Clock_i, en=$auto$opt_dff.cc:219:make_patterns_logic$2498, arst={ }, srst={ }
  6 cells in clk=\Clock_i, en=$auto$opt_dff.cc:194:make_patterns_logic$2501, arst={ }, srst={ }
  24 cells in clk=\Clock_i, en=\u_IR_Emitter_Interface.u_IR_Emitter_SRAM_7.WD_SEL, arst={ }, srst={ }
  5 cells in clk=\Clock_i, en=$auto$opt_dff.cc:194:make_patterns_logic$2504, arst={ }, srst={ }
  91 cells in clk=\Clock_i, en={ }, arst={ }, srst={ }
  24 cells in clk=\Clock_i, en=$auto$opt_dff.cc:219:make_patterns_logic$2296, arst={ }, srst={ }

3.121.2. Extracting gate netlist of module `\top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \Clock_i, enabled by \u_IR_Emitter_Interface.u_IR_Emitter_SRAM_6.WD_SEL
Extracted 35 gates and 59 wires to a netlist network with 24 inputs and 20 outputs.

3.121.2.1. Executing ABC.

3.121.3. Extracting gate netlist of module `\top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \Clock_i, enabled by \u_IR_Emitter_Interface.u_IR_Emitter_SRAM_5.WD_SEL
Extracted 26 gates and 42 wires to a netlist network with 16 inputs and 11 outputs.

3.121.3.1. Executing ABC.

3.121.4. Extracting gate netlist of module `\top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \Clock_i, enabled by \u_IR_Emitter_Interface.u_IR_Emitter_SRAM_4.WD_SEL
Extracted 26 gates and 42 wires to a netlist network with 16 inputs and 11 outputs.

3.121.4.1. Executing ABC.

3.121.5. Extracting gate netlist of module `\top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \Clock_i, enabled by \u_IR_Emitter_Interface.u_IR_Emitter_SRAM_3.WD_SEL
Extracted 27 gates and 42 wires to a netlist network with 15 inputs and 13 outputs.

3.121.5.1. Executing ABC.

3.121.6. Extracting gate netlist of module `\top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \Clock_i, enabled by \u_IR_Emitter_Interface.u_IR_Emitter_SRAM_2.WD_SEL
Extracted 24 gates and 38 wires to a netlist network with 14 inputs and 10 outputs.

3.121.6.1. Executing ABC.

3.121.7. Extracting gate netlist of module `\top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \Clock_i, enabled by \u_IR_Emitter_Interface.u_IR_Emitter_SRAM_1.WD_SEL
Extracted 24 gates and 38 wires to a netlist network with 14 inputs and 10 outputs.

3.121.7.1. Executing ABC.

3.121.8. Extracting gate netlist of module `\top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \Clock_i, enabled by \u_IR_Emitter_Interface.u_IR_Emitter_SRAM_0.WD_SEL
Extracted 24 gates and 38 wires to a netlist network with 14 inputs and 10 outputs.

3.121.8.1. Executing ABC.

3.121.9. Extracting gate netlist of module `\top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \Clock_i, enabled by \u_IR_Emitter_Interface.u_IR_Emitter_Registers.IR_Emitter_Carrier_Cycle_Len_L_we_dcd, asynchronously reset by !\Reset_i_N
Extracted 48 gates and 82 wires to a netlist network with 33 inputs and 25 outputs.

3.121.9.1. Executing ABC.

3.121.10. Extracting gate netlist of module `\top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \Clock_i, enabled by \u_IR_Emitter_Interface.u_IR_Emitter_Registers.IR_Emitter_Carrier_Duty_Len_L_we_dcd, asynchronously reset by !\Reset_i_N
Extracted 48 gates and 84 wires to a netlist network with 35 inputs and 23 outputs.

3.121.10.1. Executing ABC.

3.121.11. Extracting gate netlist of module `\top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \Clock_i, enabled by \u_IR_Emitter_Interface.u_IR_Emitter_Registers.IR_Emitter_Gpio_Dir_Reg_L_we_dcd, asynchronously reset by !\Reset_i_N
Extracted 36 gates and 66 wires to a netlist network with 29 inputs and 20 outputs.

3.121.11.1. Executing ABC.

3.121.12. Extracting gate netlist of module `\top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \Clock_i, enabled by \u_IR_Emitter_Interface.u_IR_Emitter_Registers.IR_Emitter_Gpio_Port_Reg_L_we_dcd, asynchronously reset by !\Reset_i_N
Extracted 12 gates and 24 wires to a netlist network with 12 inputs and 11 outputs.

3.121.12.1. Executing ABC.

3.121.13. Extracting gate netlist of module `\top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \Clock_i, enabled by $auto$opt_dff.cc:194:make_patterns_logic$2523, asynchronously reset by !\Reset_i_N
Extracted 3 gates and 7 wires to a netlist network with 3 inputs and 2 outputs.

3.121.13.1. Executing ABC.

3.121.14. Extracting gate netlist of module `\top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \Clock_i, enabled by \u_IR_Emitter_Interface.u_IR_Emitter_Registers.IR_Emitter_MemAddr_Reg_L_we_dcd, asynchronously reset by !\Reset_i_N
Extracted 30 gates and 50 wires to a netlist network with 19 inputs and 20 outputs.

3.121.14.1. Executing ABC.

3.121.15. Extracting gate netlist of module `\top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \Clock_i, enabled by \u_IR_Emitter_Interface.u_IR_Emitter_Registers.IR_Emitter_MemRd_Start_L_we_dcd, asynchronously reset by !\Reset_i_N
Extracted 28 gates and 50 wires to a netlist network with 21 inputs and 18 outputs.

3.121.15.1. Executing ABC.

3.121.16. Extracting gate netlist of module `\top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \Clock_i, enabled by \u_IR_Emitter_Interface.u_IR_Emitter_Registers.IR_Emitter_MemRd_Stop_L_we_dcd, asynchronously reset by !\Reset_i_N
Extracted 29 gates and 56 wires to a netlist network with 26 inputs and 19 outputs.

3.121.16.1. Executing ABC.

3.121.17. Extracting gate netlist of module `\top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \Clock_i, enabled by \u_IR_Emitter_Interface.u_IR_Emitter_Registers.control_reg_we_dcd, asynchronously reset by !\Reset_i_N
Extracted 16 gates and 30 wires to a netlist network with 14 inputs and 9 outputs.

3.121.17.1. Executing ABC.

3.121.18. Extracting gate netlist of module `\top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \Clock_i, enabled by $auto$opt_dff.cc:194:make_patterns_logic$2549, asynchronously reset by !\Reset_i_N
Extracted 80 gates and 100 wires to a netlist network with 20 inputs and 29 outputs.

3.121.18.1. Executing ABC.

3.121.19. Extracting gate netlist of module `\top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \Clock_i, enabled by \u_IR_Emitter_Interface.u_IR_Emitter_Modulator.IR_Emitter_Pulse_Modulator_o_ld_upr, asynchronously reset by !\Reset_i_N
Extracted 4 gates and 6 wires to a netlist network with 2 inputs and 3 outputs.

3.121.19.1. Executing ABC.

3.121.20. Extracting gate netlist of module `\top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \Clock_i, enabled by \u_IR_Emitter_Interface.u_IR_Emitter_Modulator.IR_Emitter_Pulse_Modulator_o_ld_lwr, asynchronously reset by !\Reset_i_N
Extracted 105 gates and 199 wires to a netlist network with 93 inputs and 22 outputs.

3.121.20.1. Executing ABC.

3.121.21. Extracting gate netlist of module `\top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \Clock_i, enabled by $auto$opt_dff.cc:219:make_patterns_logic$2543, asynchronously reset by !\Reset_i_N
Extracted 6 gates and 12 wires to a netlist network with 6 inputs and 4 outputs.

3.121.21.1. Executing ABC.

3.121.22. Extracting gate netlist of module `\top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \Clock_i, enabled by $auto$opt_dff.cc:194:make_patterns_logic$2533, asynchronously reset by !\Reset_i_N
Extracted 165 gates and 190 wires to a netlist network with 24 inputs and 2 outputs.

3.121.22.1. Executing ABC.

3.121.23. Extracting gate netlist of module `\top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \Clock_i, enabled by $flatten\u_IR_Emitter_Interface.\u_IR_Emitter_Carrier_Generator.$verific$n63$771, asynchronously reset by !\Reset_i_N
Extracted 71 gates and 85 wires to a netlist network with 13 inputs and 1 outputs.

3.121.23.1. Executing ABC.

3.121.24. Extracting gate netlist of module `\top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \Clock_i, enabled by $flatten\u_IR_Emitter_Interface.\u_IR_Emitter_Carrier_Generator.$verific$n99$780, asynchronously reset by !\Reset_i_N
Extracted 73 gates and 90 wires to a netlist network with 16 inputs and 3 outputs.

3.121.24.1. Executing ABC.

3.121.25. Extracting gate netlist of module `\top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \Clock_i, asynchronously reset by !\Reset_i_N
Extracted 363 gates and 487 wires to a netlist network with 122 inputs and 80 outputs.

3.121.25.1. Executing ABC.

3.121.26. Extracting gate netlist of module `\top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \Clock_i, enabled by \u_IR_Emitter_Interface.u_IR_Emitter_Registers.IR_Emitter_Carrier_Cycle_Len_H_we_dcd, asynchronously reset by !\Reset_i_N
Extracted 17 gates and 30 wires to a netlist network with 13 inputs and 15 outputs.

3.121.26.1. Executing ABC.

3.121.27. Extracting gate netlist of module `\top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \Clock_i, enabled by \u_IR_Emitter_Interface.u_IR_Emitter_Registers.IR_Emitter_Carrier_Duty_Len_H_we_dcd, asynchronously reset by !\Reset_i_N
Extracted 16 gates and 28 wires to a netlist network with 12 inputs and 14 outputs.

3.121.27.1. Executing ABC.

3.121.28. Extracting gate netlist of module `\top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \Clock_i, enabled by \u_IR_Emitter_Interface.u_IR_Emitter_Registers.IR_Emitter_MemRd_Start_H_we_dcd, asynchronously reset by !\Reset_i_N
Extracted 14 gates and 25 wires to a netlist network with 10 inputs and 12 outputs.

3.121.28.1. Executing ABC.

3.121.29. Extracting gate netlist of module `\top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \Clock_i, enabled by \u_IR_Emitter_Interface.u_IR_Emitter_Registers.IR_Emitter_MemRd_Stop_H_we_dcd, asynchronously reset by !\Reset_i_N
Extracted 9 gates and 18 wires to a netlist network with 9 inputs and 7 outputs.

3.121.29.1. Executing ABC.

3.121.30. Extracting gate netlist of module `\top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \Clock_i, enabled by $auto$opt_dff.cc:219:make_patterns_logic$2309
Extracted 31 gates and 50 wires to a netlist network with 17 inputs and 4 outputs.

3.121.30.1. Executing ABC.

3.121.31. Extracting gate netlist of module `\top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \Clock_i, enabled by $auto$opt_dff.cc:219:make_patterns_logic$2334
Extracted 41 gates and 65 wires to a netlist network with 23 inputs and 16 outputs.

3.121.31.1. Executing ABC.

3.121.32. Extracting gate netlist of module `\top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \Clock_i, enabled by $auto$opt_dff.cc:219:make_patterns_logic$2357
Extracted 18 gates and 35 wires to a netlist network with 16 inputs and 4 outputs.

3.121.32.1. Executing ABC.

3.121.33. Extracting gate netlist of module `\top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \Clock_i, enabled by $auto$opt_dff.cc:219:make_patterns_logic$2380
Extracted 85 gates and 122 wires to a netlist network with 36 inputs and 35 outputs.

3.121.33.1. Executing ABC.

3.121.34. Extracting gate netlist of module `\top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \Clock_i, enabled by $auto$opt_dff.cc:219:make_patterns_logic$2409
Extracted 57 gates and 86 wires to a netlist network with 29 inputs and 20 outputs.

3.121.34.1. Executing ABC.

3.121.35. Extracting gate netlist of module `\top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \Clock_i, enabled by $auto$opt_dff.cc:219:make_patterns_logic$2430
Extracted 23 gates and 40 wires to a netlist network with 16 inputs and 11 outputs.

3.121.35.1. Executing ABC.

3.121.36. Extracting gate netlist of module `\top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \Clock_i, enabled by $auto$opt_dff.cc:219:make_patterns_logic$2447
Extracted 29 gates and 48 wires to a netlist network with 18 inputs and 11 outputs.

3.121.36.1. Executing ABC.

3.121.37. Extracting gate netlist of module `\top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \Clock_i, enabled by $auto$opt_dff.cc:219:make_patterns_logic$2470
Extracted 36 gates and 58 wires to a netlist network with 21 inputs and 11 outputs.

3.121.37.1. Executing ABC.

3.121.38. Extracting gate netlist of module `\top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \Clock_i, enabled by $auto$opt_dff.cc:219:make_patterns_logic$2477
Extracted 11 gates and 20 wires to a netlist network with 7 inputs and 4 outputs.

3.121.38.1. Executing ABC.

3.121.39. Extracting gate netlist of module `\top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \Clock_i, enabled by $auto$opt_dff.cc:219:make_patterns_logic$2498
Extracted 128 gates and 173 wires to a netlist network with 43 inputs and 53 outputs.

3.121.39.1. Executing ABC.

3.121.40. Extracting gate netlist of module `\top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \Clock_i, enabled by $auto$opt_dff.cc:194:make_patterns_logic$2501
Extracted 6 gates and 11 wires to a netlist network with 5 inputs and 4 outputs.

3.121.40.1. Executing ABC.

3.121.41. Extracting gate netlist of module `\top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \Clock_i, enabled by \u_IR_Emitter_Interface.u_IR_Emitter_SRAM_7.WD_SEL
Extracted 24 gates and 39 wires to a netlist network with 15 inputs and 11 outputs.

3.121.41.1. Executing ABC.

3.121.42. Extracting gate netlist of module `\top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \Clock_i, enabled by $auto$opt_dff.cc:194:make_patterns_logic$2504
Extracted 5 gates and 10 wires to a netlist network with 5 inputs and 5 outputs.

3.121.42.1. Executing ABC.

3.121.43. Extracting gate netlist of module `\top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \Clock_i
Extracted 91 gates and 110 wires to a netlist network with 17 inputs and 21 outputs.

3.121.43.1. Executing ABC.

3.121.44. Extracting gate netlist of module `\top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \Clock_i, enabled by $auto$opt_dff.cc:219:make_patterns_logic$2296
Extracted 24 gates and 43 wires to a netlist network with 18 inputs and 10 outputs.

3.121.44.1. Executing ABC.

yosys> abc -dff

3.122. Executing ABC pass (technology mapping using ABC).

3.122.1. Summary of detected clock domains:
  8 cells in clk=\Clock_i, en=$abc$10496$auto$opt_dff.cc:194:make_patterns_logic$2504, arst={ }, srst={ }
  3 cells in clk=\Clock_i, en=$abc$9534$lo25, arst=!\Reset_i_N, srst={ }
  22 cells in clk=\Clock_i, en=$abc$10046$auto$opt_dff.cc:219:make_patterns_logic$2357, arst={ }, srst={ }
  7 cells in clk=\Clock_i, en=$abc$10456$auto$opt_dff.cc:194:make_patterns_logic$2501, arst={ }, srst={ }
  10 cells in clk=\Clock_i, en=$abc$9328$auto$opt_dff.cc:219:make_patterns_logic$2543, arst=!\Reset_i_N, srst={ }
  5 cells in clk=\Clock_i, en=$abc$8993$auto$opt_dff.cc:194:make_patterns_logic$2523, arst=!\Reset_i_N, srst={ }
  16 cells in clk=\Clock_i, en=$abc$9956$u_IR_Emitter_Interface.u_IR_Emitter_Registers.IR_Emitter_MemRd_Stop_H_we_dcd, arst=!\Reset_i_N, srst={ }
  19 cells in clk=\Clock_i, en=$abc$9932$u_IR_Emitter_Interface.u_IR_Emitter_Registers.IR_Emitter_MemRd_Start_H_we_dcd, arst=!\Reset_i_N, srst={ }
  23 cells in clk=\Clock_i, en=$abc$8998$u_IR_Emitter_Interface.u_IR_Emitter_Registers.IR_Emitter_MemAddr_Reg_L_we_dcd, arst=!\Reset_i_N, srst={ }
  61 cells in clk=\Clock_i, en=$abc$10144$auto$opt_dff.cc:219:make_patterns_logic$2409, arst={ }, srst={ }
  30 cells in clk=\Clock_i, en=$abc$9867$u_IR_Emitter_Interface.u_IR_Emitter_Registers.IR_Emitter_Carrier_Cycle_Len_H_we_dcd, arst=!\Reset_i_N, srst={ }
  12 cells in clk=\Clock_i, en=$abc$10301$auto$opt_dff.cc:219:make_patterns_logic$2477, arst={ }, srst={ }
  20 cells in clk=\Clock_i, en=$abc$10236$auto$opt_dff.cc:219:make_patterns_logic$2447, arst={ }, srst={ }
  24 cells in clk=\Clock_i, en=$abc$9032$u_IR_Emitter_Interface.u_IR_Emitter_Registers.IR_Emitter_MemRd_Start_L_we_dcd, arst=!\Reset_i_N, srst={ }
  70 cells in clk=\Clock_i, en=$abc$10064$auto$opt_dff.cc:219:make_patterns_logic$2380, arst={ }, srst={ }
  16 cells in clk=\Clock_i, en=$abc$9068$u_IR_Emitter_Interface.u_IR_Emitter_Registers.IR_Emitter_MemRd_Stop_L_we_dcd, arst=!\Reset_i_N, srst={ }
  28 cells in clk=\Clock_i, en=$abc$8912$u_IR_Emitter_Interface.u_IR_Emitter_Registers.IR_Emitter_Gpio_Dir_Reg_L_we_dcd, arst=!\Reset_i_N, srst={ }
  28 cells in clk=\Clock_i, en=$abc$8865$u_IR_Emitter_Interface.u_IR_Emitter_Registers.IR_Emitter_Carrier_Duty_Len_L_we_dcd, arst=!\Reset_i_N, srst={ }
  38 cells in clk=\Clock_i, en=$abc$9534$lo15, arst=!\Reset_i_N, srst={ }
  40 cells in clk=\Clock_i, en=$abc$9486$flatten\u_IR_Emitter_Interface.\u_IR_Emitter_Carrier_Generator.$verific$n99$780, arst=!\Reset_i_N, srst={ }
  74 cells in clk=\Clock_i, en=$abc$9129$auto$opt_dff.cc:194:make_patterns_logic$2549, arst=!\Reset_i_N, srst={ }
  16 cells in clk=\Clock_i, en=$abc$9105$u_IR_Emitter_Interface.u_IR_Emitter_Registers.control_reg_we_dcd, arst=!\Reset_i_N, srst={ }
  23 cells in clk=\Clock_i, en=$abc$9900$u_IR_Emitter_Interface.u_IR_Emitter_Registers.IR_Emitter_Carrier_Duty_Len_H_we_dcd, arst=!\Reset_i_N, srst={ }
  26 cells in clk=\Clock_i, en=$abc$8623$u_IR_Emitter_Interface.u_IR_Emitter_SRAM_5.WD_SEL, arst={ }, srst={ }
  24 cells in clk=\Clock_i, en=$abc$8656$u_IR_Emitter_Interface.u_IR_Emitter_SRAM_4.WD_SEL, arst={ }, srst={ }
  23 cells in clk=\Clock_i, en=$abc$8754$u_IR_Emitter_Interface.u_IR_Emitter_SRAM_1.WD_SEL, arst={ }, srst={ }
  25 cells in clk=\Clock_i, en=$abc$8723$u_IR_Emitter_Interface.u_IR_Emitter_SRAM_2.WD_SEL, arst={ }, srst={ }
  25 cells in clk=\Clock_i, en=$abc$8689$u_IR_Emitter_Interface.u_IR_Emitter_SRAM_3.WD_SEL, arst={ }, srst={ }
  107 cells in clk=\Clock_i, en=$abc$9337$auto$opt_dff.cc:194:make_patterns_logic$2533, arst=!\Reset_i_N, srst={ }
  34 cells in clk=\Clock_i, en=$abc$8816$u_IR_Emitter_Interface.u_IR_Emitter_Registers.IR_Emitter_Carrier_Cycle_Len_L_we_dcd, arst=!\Reset_i_N, srst={ }
  31 cells in clk=\Clock_i, en=$abc$8581$u_IR_Emitter_Interface.u_IR_Emitter_SRAM_6.WD_SEL, arst={ }, srst={ }
  102 cells in clk=\Clock_i, en=$abc$9534$lo26, arst=!\Reset_i_N, srst={ }
  22 cells in clk=\Clock_i, en=$abc$8785$u_IR_Emitter_Interface.u_IR_Emitter_SRAM_0.WD_SEL, arst={ }, srst={ }
  25 cells in clk=\Clock_i, en=$abc$8965$u_IR_Emitter_Interface.u_IR_Emitter_Registers.IR_Emitter_Gpio_Port_Reg_L_we_dcd, arst=!\Reset_i_N, srst={ }
  25 cells in clk=\Clock_i, en=$abc$10464$u_IR_Emitter_Interface.u_IR_Emitter_SRAM_7.WD_SEL, arst={ }, srst={ }
  134 cells in clk=\Clock_i, en=$abc$10312$auto$opt_dff.cc:219:make_patterns_logic$2498, arst={ }, srst={ }
  44 cells in clk=\Clock_i, en=$abc$10262$auto$opt_dff.cc:219:make_patterns_logic$2470, arst={ }, srst={ }
  28 cells in clk=\Clock_i, en=$abc$10204$auto$opt_dff.cc:219:make_patterns_logic$2430, arst={ }, srst={ }
  78 cells in clk=\Clock_i, en={ }, arst={ }, srst={ }
  32 cells in clk=\Clock_i, en=$abc$10008$auto$opt_dff.cc:219:make_patterns_logic$2334, arst={ }, srst={ }
  34 cells in clk=\Clock_i, en=$abc$9975$auto$opt_dff.cc:219:make_patterns_logic$2309, arst={ }, srst={ }
  295 cells in clk=\Clock_i, en={ }, arst=!\Reset_i_N, srst={ }
  25 cells in clk=\Clock_i, en=$abc$10586$auto$opt_dff.cc:219:make_patterns_logic$2296, arst={ }, srst={ }

3.122.2. Extracting gate netlist of module `\top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \Clock_i, enabled by $abc$10496$auto$opt_dff.cc:194:make_patterns_logic$2504
Extracted 8 gates and 13 wires to a netlist network with 5 inputs and 5 outputs.

3.122.2.1. Executing ABC.

3.122.3. Extracting gate netlist of module `\top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \Clock_i, enabled by $abc$9534$lo25, asynchronously reset by !\Reset_i_N
Extracted 3 gates and 5 wires to a netlist network with 2 inputs and 2 outputs.

3.122.3.1. Executing ABC.

3.122.4. Extracting gate netlist of module `\top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \Clock_i, enabled by $abc$10046$auto$opt_dff.cc:219:make_patterns_logic$2357
Extracted 22 gates and 43 wires to a netlist network with 21 inputs and 5 outputs.

3.122.4.1. Executing ABC.

3.122.5. Extracting gate netlist of module `\top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \Clock_i, enabled by $abc$10456$auto$opt_dff.cc:194:make_patterns_logic$2501
Extracted 7 gates and 13 wires to a netlist network with 6 inputs and 4 outputs.

3.122.5.1. Executing ABC.

3.122.6. Extracting gate netlist of module `\top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \Clock_i, enabled by $abc$9328$auto$opt_dff.cc:219:make_patterns_logic$2543, asynchronously reset by !\Reset_i_N
Extracted 10 gates and 18 wires to a netlist network with 8 inputs and 3 outputs.

3.122.6.1. Executing ABC.

3.122.7. Extracting gate netlist of module `\top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \Clock_i, enabled by $abc$8993$auto$opt_dff.cc:194:make_patterns_logic$2523, asynchronously reset by !\Reset_i_N
Extracted 5 gates and 11 wires to a netlist network with 6 inputs and 3 outputs.

3.122.7.1. Executing ABC.

3.122.8. Extracting gate netlist of module `\top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \Clock_i, enabled by $abc$9956$u_IR_Emitter_Interface.u_IR_Emitter_Registers.IR_Emitter_MemRd_Stop_H_we_dcd, asynchronously reset by !\Reset_i_N
Extracted 16 gates and 34 wires to a netlist network with 18 inputs and 13 outputs.

3.122.8.1. Executing ABC.

3.122.9. Extracting gate netlist of module `\top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \Clock_i, enabled by $abc$9932$u_IR_Emitter_Interface.u_IR_Emitter_Registers.IR_Emitter_MemRd_Start_H_we_dcd, asynchronously reset by !\Reset_i_N
Extracted 19 gates and 35 wires to a netlist network with 16 inputs and 13 outputs.

3.122.9.1. Executing ABC.

3.122.10. Extracting gate netlist of module `\top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \Clock_i, enabled by $abc$8998$u_IR_Emitter_Interface.u_IR_Emitter_Registers.IR_Emitter_MemAddr_Reg_L_we_dcd, asynchronously reset by !\Reset_i_N
Extracted 23 gates and 38 wires to a netlist network with 15 inputs and 19 outputs.

3.122.10.1. Executing ABC.

3.122.11. Extracting gate netlist of module `\top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \Clock_i, enabled by $abc$10144$auto$opt_dff.cc:219:make_patterns_logic$2409
Extracted 61 gates and 109 wires to a netlist network with 48 inputs and 30 outputs.

3.122.11.1. Executing ABC.

3.122.12. Extracting gate netlist of module `\top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \Clock_i, enabled by $abc$9867$u_IR_Emitter_Interface.u_IR_Emitter_Registers.IR_Emitter_Carrier_Cycle_Len_H_we_dcd, asynchronously reset by !\Reset_i_N
Extracted 30 gates and 59 wires to a netlist network with 29 inputs and 23 outputs.

3.122.12.1. Executing ABC.

3.122.13. Extracting gate netlist of module `\top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \Clock_i, enabled by $abc$10301$auto$opt_dff.cc:219:make_patterns_logic$2477
Extracted 12 gates and 20 wires to a netlist network with 8 inputs and 6 outputs.

3.122.13.1. Executing ABC.

3.122.14. Extracting gate netlist of module `\top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \Clock_i, enabled by $abc$10236$auto$opt_dff.cc:219:make_patterns_logic$2447
Extracted 20 gates and 37 wires to a netlist network with 17 inputs and 9 outputs.

3.122.14.1. Executing ABC.

3.122.15. Extracting gate netlist of module `\top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \Clock_i, enabled by $abc$9032$u_IR_Emitter_Interface.u_IR_Emitter_Registers.IR_Emitter_MemRd_Start_L_we_dcd, asynchronously reset by !\Reset_i_N
Extracted 24 gates and 42 wires to a netlist network with 18 inputs and 18 outputs.

3.122.15.1. Executing ABC.

3.122.16. Extracting gate netlist of module `\top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \Clock_i, enabled by $abc$10064$auto$opt_dff.cc:219:make_patterns_logic$2380
Extracted 70 gates and 104 wires to a netlist network with 34 inputs and 29 outputs.

3.122.16.1. Executing ABC.

3.122.17. Extracting gate netlist of module `\top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \Clock_i, enabled by $abc$9068$u_IR_Emitter_Interface.u_IR_Emitter_Registers.IR_Emitter_MemRd_Stop_L_we_dcd, asynchronously reset by !\Reset_i_N
Extracted 16 gates and 30 wires to a netlist network with 14 inputs and 15 outputs.

3.122.17.1. Executing ABC.

3.122.18. Extracting gate netlist of module `\top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \Clock_i, enabled by $abc$8912$u_IR_Emitter_Interface.u_IR_Emitter_Registers.IR_Emitter_Gpio_Dir_Reg_L_we_dcd, asynchronously reset by !\Reset_i_N
Extracted 28 gates and 42 wires to a netlist network with 14 inputs and 18 outputs.

3.122.18.1. Executing ABC.

3.122.19. Extracting gate netlist of module `\top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \Clock_i, enabled by $abc$8865$u_IR_Emitter_Interface.u_IR_Emitter_Registers.IR_Emitter_Carrier_Duty_Len_L_we_dcd, asynchronously reset by !\Reset_i_N
Extracted 28 gates and 53 wires to a netlist network with 25 inputs and 20 outputs.

3.122.19.1. Executing ABC.

3.122.20. Extracting gate netlist of module `\top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \Clock_i, enabled by $abc$9534$lo15, asynchronously reset by !\Reset_i_N
Extracted 38 gates and 52 wires to a netlist network with 14 inputs and 9 outputs.

3.122.20.1. Executing ABC.

3.122.21. Extracting gate netlist of module `\top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \Clock_i, enabled by $abc$9486$flatten\u_IR_Emitter_Interface.\u_IR_Emitter_Carrier_Generator.$verific$n99$780, asynchronously reset by !\Reset_i_N
Extracted 40 gates and 55 wires to a netlist network with 15 inputs and 6 outputs.

3.122.21.1. Executing ABC.

3.122.22. Extracting gate netlist of module `\top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \Clock_i, enabled by $abc$9129$auto$opt_dff.cc:194:make_patterns_logic$2549, asynchronously reset by !\Reset_i_N
Extracted 74 gates and 100 wires to a netlist network with 26 inputs and 31 outputs.

3.122.22.1. Executing ABC.

3.122.23. Extracting gate netlist of module `\top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \Clock_i, enabled by $abc$9105$u_IR_Emitter_Interface.u_IR_Emitter_Registers.control_reg_we_dcd, asynchronously reset by !\Reset_i_N
Extracted 16 gates and 30 wires to a netlist network with 14 inputs and 11 outputs.

3.122.23.1. Executing ABC.

3.122.24. Extracting gate netlist of module `\top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \Clock_i, enabled by $abc$9900$u_IR_Emitter_Interface.u_IR_Emitter_Registers.IR_Emitter_Carrier_Duty_Len_H_we_dcd, asynchronously reset by !\Reset_i_N
Extracted 23 gates and 44 wires to a netlist network with 21 inputs and 19 outputs.

3.122.24.1. Executing ABC.

3.122.25. Extracting gate netlist of module `\top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \Clock_i, enabled by $abc$8623$u_IR_Emitter_Interface.u_IR_Emitter_SRAM_5.WD_SEL
Extracted 26 gates and 45 wires to a netlist network with 19 inputs and 14 outputs.

3.122.25.1. Executing ABC.

3.122.26. Extracting gate netlist of module `\top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \Clock_i, enabled by $abc$8656$u_IR_Emitter_Interface.u_IR_Emitter_SRAM_4.WD_SEL
Extracted 24 gates and 40 wires to a netlist network with 16 inputs and 11 outputs.

3.122.26.1. Executing ABC.

3.122.27. Extracting gate netlist of module `\top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \Clock_i, enabled by $abc$8754$u_IR_Emitter_Interface.u_IR_Emitter_SRAM_1.WD_SEL
Extracted 23 gates and 38 wires to a netlist network with 15 inputs and 11 outputs.

3.122.27.1. Executing ABC.

3.122.28. Extracting gate netlist of module `\top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \Clock_i, enabled by $abc$8723$u_IR_Emitter_Interface.u_IR_Emitter_SRAM_2.WD_SEL
Extracted 25 gates and 42 wires to a netlist network with 17 inputs and 13 outputs.

3.122.28.1. Executing ABC.

3.122.29. Extracting gate netlist of module `\top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \Clock_i, enabled by $abc$8689$u_IR_Emitter_Interface.u_IR_Emitter_SRAM_3.WD_SEL
Extracted 25 gates and 41 wires to a netlist network with 16 inputs and 13 outputs.

3.122.29.1. Executing ABC.

3.122.30. Extracting gate netlist of module `\top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \Clock_i, enabled by $abc$9337$auto$opt_dff.cc:194:make_patterns_logic$2533, asynchronously reset by !\Reset_i_N
Extracted 107 gates and 138 wires to a netlist network with 31 inputs and 8 outputs.

3.122.30.1. Executing ABC.

3.122.31. Extracting gate netlist of module `\top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \Clock_i, enabled by $abc$8816$u_IR_Emitter_Interface.u_IR_Emitter_Registers.IR_Emitter_Carrier_Cycle_Len_L_we_dcd, asynchronously reset by !\Reset_i_N
Extracted 34 gates and 62 wires to a netlist network with 28 inputs and 21 outputs.

3.122.31.1. Executing ABC.

3.122.32. Extracting gate netlist of module `\top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \Clock_i, enabled by $abc$8581$u_IR_Emitter_Interface.u_IR_Emitter_SRAM_6.WD_SEL
Extracted 31 gates and 53 wires to a netlist network with 22 inputs and 11 outputs.

3.122.32.1. Executing ABC.

3.122.33. Extracting gate netlist of module `\top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \Clock_i, enabled by $abc$9534$lo26, asynchronously reset by !\Reset_i_N
Extracted 102 gates and 195 wires to a netlist network with 93 inputs and 30 outputs.

3.122.33.1. Executing ABC.

3.122.34. Extracting gate netlist of module `\top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \Clock_i, enabled by $abc$8785$u_IR_Emitter_Interface.u_IR_Emitter_SRAM_0.WD_SEL
Extracted 22 gates and 36 wires to a netlist network with 14 inputs and 10 outputs.

3.122.34.1. Executing ABC.

3.122.35. Extracting gate netlist of module `\top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \Clock_i, enabled by $abc$8965$u_IR_Emitter_Interface.u_IR_Emitter_Registers.IR_Emitter_Gpio_Port_Reg_L_we_dcd, asynchronously reset by !\Reset_i_N
Extracted 25 gates and 52 wires to a netlist network with 27 inputs and 12 outputs.

3.122.35.1. Executing ABC.

3.122.36. Extracting gate netlist of module `\top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \Clock_i, enabled by $abc$10464$u_IR_Emitter_Interface.u_IR_Emitter_SRAM_7.WD_SEL
Extracted 25 gates and 41 wires to a netlist network with 16 inputs and 12 outputs.

3.122.36.1. Executing ABC.

3.122.37. Extracting gate netlist of module `\top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \Clock_i, enabled by $abc$10312$auto$opt_dff.cc:219:make_patterns_logic$2498
Extracted 134 gates and 186 wires to a netlist network with 52 inputs and 59 outputs.

3.122.37.1. Executing ABC.

3.122.38. Extracting gate netlist of module `\top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \Clock_i, enabled by $abc$10262$auto$opt_dff.cc:219:make_patterns_logic$2470
Extracted 44 gates and 70 wires to a netlist network with 26 inputs and 13 outputs.

3.122.38.1. Executing ABC.

3.122.39. Extracting gate netlist of module `\top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \Clock_i, enabled by $abc$10204$auto$opt_dff.cc:219:make_patterns_logic$2430
Extracted 28 gates and 47 wires to a netlist network with 19 inputs and 16 outputs.

3.122.39.1. Executing ABC.

3.122.40. Extracting gate netlist of module `\top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \Clock_i
Extracted 78 gates and 91 wires to a netlist network with 13 inputs and 16 outputs.

3.122.40.1. Executing ABC.

3.122.41. Extracting gate netlist of module `\top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \Clock_i, enabled by $abc$10008$auto$opt_dff.cc:219:make_patterns_logic$2334
Extracted 32 gates and 53 wires to a netlist network with 21 inputs and 13 outputs.

3.122.41.1. Executing ABC.

3.122.42. Extracting gate netlist of module `\top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \Clock_i, enabled by $abc$9975$auto$opt_dff.cc:219:make_patterns_logic$2309
Extracted 34 gates and 53 wires to a netlist network with 19 inputs and 6 outputs.

3.122.42.1. Executing ABC.

3.122.43. Extracting gate netlist of module `\top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \Clock_i, asynchronously reset by !\Reset_i_N
Extracted 295 gates and 417 wires to a netlist network with 122 inputs and 77 outputs.

3.122.43.1. Executing ABC.

3.122.44. Extracting gate netlist of module `\top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \Clock_i, enabled by $abc$10586$auto$opt_dff.cc:219:make_patterns_logic$2296
Extracted 25 gates and 44 wires to a netlist network with 19 inputs and 11 outputs.

3.122.44.1. Executing ABC.

yosys> abc -dff

3.123. Executing ABC pass (technology mapping using ABC).

3.123.1. Summary of detected clock domains:
  8 cells in clk=\Clock_i, en=$abc$10610$abc$10496$auto$opt_dff.cc:194:make_patterns_logic$2504, arst={ }, srst={ }
  3 cells in clk=\Clock_i, en=$abc$12283$lo33, arst=!\Reset_i_N, srst={ }
  23 cells in clk=\Clock_i, en=$abc$10624$abc$10046$auto$opt_dff.cc:219:make_patterns_logic$2357, arst={ }, srst={ }
  6 cells in clk=\Clock_i, en=$abc$10648$abc$10456$auto$opt_dff.cc:194:make_patterns_logic$2501, arst={ }, srst={ }
  7 cells in clk=\Clock_i, en=$abc$10656$abc$9328$auto$opt_dff.cc:219:make_patterns_logic$2543, arst=!\Reset_i_N, srst={ }
  4 cells in clk=\Clock_i, en=$abc$10665$abc$8993$auto$opt_dff.cc:194:make_patterns_logic$2523, arst=!\Reset_i_N, srst={ }
  16 cells in clk=\Clock_i, en=$abc$10671$abc$9956$u_IR_Emitter_Interface.u_IR_Emitter_Registers.IR_Emitter_MemRd_Stop_H_we_dcd, arst=!\Reset_i_N, srst={ }
  16 cells in clk=\Clock_i, en=$abc$10696$abc$9932$u_IR_Emitter_Interface.u_IR_Emitter_Registers.IR_Emitter_MemRd_Start_H_we_dcd, arst=!\Reset_i_N, srst={ }
  21 cells in clk=\Clock_i, en=$abc$10723$abc$8998$u_IR_Emitter_Interface.u_IR_Emitter_Registers.IR_Emitter_MemAddr_Reg_L_we_dcd, arst=!\Reset_i_N, srst={ }
  58 cells in clk=\Clock_i, en=$abc$10756$abc$10144$auto$opt_dff.cc:219:make_patterns_logic$2409, arst={ }, srst={ }
  76 cells in clk=\Clock_i, en={ }, arst={ }, srst={ }
  9 cells in clk=\Clock_i, en=$abc$10867$abc$10301$auto$opt_dff.cc:219:make_patterns_logic$2477, arst={ }, srst={ }
  17 cells in clk=\Clock_i, en=$abc$10880$abc$10236$auto$opt_dff.cc:219:make_patterns_logic$2447, arst={ }, srst={ }
  25 cells in clk=\Clock_i, en=$abc$10901$abc$9032$u_IR_Emitter_Interface.u_IR_Emitter_Registers.IR_Emitter_MemRd_Start_L_we_dcd, arst=!\Reset_i_N, srst={ }
  77 cells in clk=\Clock_i, en=$abc$10937$abc$10064$auto$opt_dff.cc:219:make_patterns_logic$2380, arst={ }, srst={ }
  25 cells in clk=\Clock_i, en=$abc$11011$abc$9068$u_IR_Emitter_Interface.u_IR_Emitter_Registers.IR_Emitter_MemRd_Stop_L_we_dcd, arst=!\Reset_i_N, srst={ }
  31 cells in clk=\Clock_i, en=$abc$11043$abc$8912$u_IR_Emitter_Interface.u_IR_Emitter_Registers.IR_Emitter_Gpio_Dir_Reg_L_we_dcd, arst=!\Reset_i_N, srst={ }
  29 cells in clk=\Clock_i, en=$abc$11078$abc$8865$u_IR_Emitter_Interface.u_IR_Emitter_Registers.IR_Emitter_Carrier_Duty_Len_L_we_dcd, arst=!\Reset_i_N, srst={ }
  40 cells in clk=\Clock_i, en=$abc$12283$lo11, arst=!\Reset_i_N, srst={ }
  42 cells in clk=\Clock_i, en=$abc$11165$abc$9486$flatten\u_IR_Emitter_Interface.\u_IR_Emitter_Carrier_Generator.$verific$n99$780, arst=!\Reset_i_N, srst={ }
  66 cells in clk=\Clock_i, en=$abc$11211$abc$9129$auto$opt_dff.cc:194:make_patterns_logic$2549, arst=!\Reset_i_N, srst={ }
  14 cells in clk=\Clock_i, en=$abc$11294$abc$9105$u_IR_Emitter_Interface.u_IR_Emitter_Registers.control_reg_we_dcd, arst=!\Reset_i_N, srst={ }
  22 cells in clk=\Clock_i, en=$abc$11320$abc$9900$u_IR_Emitter_Interface.u_IR_Emitter_Registers.IR_Emitter_Carrier_Duty_Len_H_we_dcd, arst=!\Reset_i_N, srst={ }
  26 cells in clk=\Clock_i, en=$abc$11357$abc$8623$u_IR_Emitter_Interface.u_IR_Emitter_SRAM_5.WD_SEL, arst={ }, srst={ }
  25 cells in clk=\Clock_i, en=$abc$11392$abc$8656$u_IR_Emitter_Interface.u_IR_Emitter_SRAM_4.WD_SEL, arst={ }, srst={ }
  27 cells in clk=\Clock_i, en=$abc$11425$abc$8754$u_IR_Emitter_Interface.u_IR_Emitter_SRAM_1.WD_SEL, arst={ }, srst={ }
  27 cells in clk=\Clock_i, en=$abc$11457$abc$8723$u_IR_Emitter_Interface.u_IR_Emitter_SRAM_2.WD_SEL, arst={ }, srst={ }
  25 cells in clk=\Clock_i, en=$abc$11491$abc$8689$u_IR_Emitter_Interface.u_IR_Emitter_SRAM_3.WD_SEL, arst={ }, srst={ }
  105 cells in clk=\Clock_i, en=$abc$11525$abc$9337$auto$opt_dff.cc:194:make_patterns_logic$2533, arst=!\Reset_i_N, srst={ }
  37 cells in clk=\Clock_i, en=$abc$11630$abc$8816$u_IR_Emitter_Interface.u_IR_Emitter_Registers.IR_Emitter_Carrier_Cycle_Len_L_we_dcd, arst=!\Reset_i_N, srst={ }
  30 cells in clk=\Clock_i, en=$abc$11674$abc$8581$u_IR_Emitter_Interface.u_IR_Emitter_SRAM_6.WD_SEL, arst={ }, srst={ }
  102 cells in clk=\Clock_i, en=$abc$12283$lo23, arst=!\Reset_i_N, srst={ }
  23 cells in clk=\Clock_i, en=$abc$11811$abc$8785$u_IR_Emitter_Interface.u_IR_Emitter_SRAM_0.WD_SEL, arst={ }, srst={ }
  23 cells in clk=\Clock_i, en=$abc$11842$abc$8965$u_IR_Emitter_Interface.u_IR_Emitter_Registers.IR_Emitter_Gpio_Port_Reg_L_we_dcd, arst=!\Reset_i_N, srst={ }
  25 cells in clk=\Clock_i, en=$abc$11878$abc$10464$u_IR_Emitter_Interface.u_IR_Emitter_SRAM_7.WD_SEL, arst={ }, srst={ }
  23 cells in clk=\Clock_i, en=$abc$10826$abc$9867$u_IR_Emitter_Interface.u_IR_Emitter_Registers.IR_Emitter_Carrier_Cycle_Len_H_we_dcd, arst=!\Reset_i_N, srst={ }
  124 cells in clk=\Clock_i, en=$abc$11912$abc$10312$auto$opt_dff.cc:219:make_patterns_logic$2498, arst={ }, srst={ }
  46 cells in clk=\Clock_i, en=$abc$12053$abc$10262$auto$opt_dff.cc:219:make_patterns_logic$2470, arst={ }, srst={ }
  36 cells in clk=\Clock_i, en=$abc$12247$abc$9975$auto$opt_dff.cc:219:make_patterns_logic$2309, arst={ }, srst={ }
  30 cells in clk=\Clock_i, en=$abc$12097$abc$10204$auto$opt_dff.cc:219:make_patterns_logic$2430, arst={ }, srst={ }
  31 cells in clk=\Clock_i, en=$abc$12214$abc$10008$auto$opt_dff.cc:219:make_patterns_logic$2334, arst={ }, srst={ }
  315 cells in clk=\Clock_i, en={ }, arst=!\Reset_i_N, srst={ }
  25 cells in clk=\Clock_i, en=$abc$12637$abc$10586$auto$opt_dff.cc:219:make_patterns_logic$2296, arst={ }, srst={ }

3.123.2. Extracting gate netlist of module `\top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \Clock_i, enabled by $abc$10610$abc$10496$auto$opt_dff.cc:194:make_patterns_logic$2504
Extracted 8 gates and 13 wires to a netlist network with 5 inputs and 5 outputs.

3.123.2.1. Executing ABC.

3.123.3. Extracting gate netlist of module `\top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \Clock_i, enabled by $abc$12283$lo33, asynchronously reset by !\Reset_i_N
Extracted 3 gates and 5 wires to a netlist network with 2 inputs and 2 outputs.

3.123.3.1. Executing ABC.

3.123.4. Extracting gate netlist of module `\top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \Clock_i, enabled by $abc$10624$abc$10046$auto$opt_dff.cc:219:make_patterns_logic$2357
Extracted 23 gates and 45 wires to a netlist network with 22 inputs and 5 outputs.

3.123.4.1. Executing ABC.

3.123.5. Extracting gate netlist of module `\top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \Clock_i, enabled by $abc$10648$abc$10456$auto$opt_dff.cc:194:make_patterns_logic$2501
Extracted 6 gates and 12 wires to a netlist network with 6 inputs and 4 outputs.

3.123.5.1. Executing ABC.

3.123.6. Extracting gate netlist of module `\top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \Clock_i, enabled by $abc$10656$abc$9328$auto$opt_dff.cc:219:make_patterns_logic$2543, asynchronously reset by !\Reset_i_N
Extracted 7 gates and 16 wires to a netlist network with 9 inputs and 4 outputs.

3.123.6.1. Executing ABC.

3.123.7. Extracting gate netlist of module `\top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \Clock_i, enabled by $abc$10665$abc$8993$auto$opt_dff.cc:194:make_patterns_logic$2523, asynchronously reset by !\Reset_i_N
Extracted 4 gates and 8 wires to a netlist network with 4 inputs and 3 outputs.

3.123.7.1. Executing ABC.

3.123.8. Extracting gate netlist of module `\top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \Clock_i, enabled by $abc$10671$abc$9956$u_IR_Emitter_Interface.u_IR_Emitter_Registers.IR_Emitter_MemRd_Stop_H_we_dcd, asynchronously reset by !\Reset_i_N
Extracted 16 gates and 34 wires to a netlist network with 18 inputs and 12 outputs.

3.123.8.1. Executing ABC.

3.123.9. Extracting gate netlist of module `\top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \Clock_i, enabled by $abc$10696$abc$9932$u_IR_Emitter_Interface.u_IR_Emitter_Registers.IR_Emitter_MemRd_Start_H_we_dcd, asynchronously reset by !\Reset_i_N
Extracted 16 gates and 30 wires to a netlist network with 14 inputs and 13 outputs.

3.123.9.1. Executing ABC.

3.123.10. Extracting gate netlist of module `\top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \Clock_i, enabled by $abc$10723$abc$8998$u_IR_Emitter_Interface.u_IR_Emitter_Registers.IR_Emitter_MemAddr_Reg_L_we_dcd, asynchronously reset by !\Reset_i_N
Extracted 21 gates and 33 wires to a netlist network with 12 inputs and 18 outputs.

3.123.10.1. Executing ABC.

3.123.11. Extracting gate netlist of module `\top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \Clock_i, enabled by $abc$10756$abc$10144$auto$opt_dff.cc:219:make_patterns_logic$2409
Extracted 58 gates and 101 wires to a netlist network with 43 inputs and 27 outputs.

3.123.11.1. Executing ABC.

3.123.12. Extracting gate netlist of module `\top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \Clock_i
Extracted 76 gates and 88 wires to a netlist network with 12 inputs and 16 outputs.

3.123.12.1. Executing ABC.

3.123.13. Extracting gate netlist of module `\top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \Clock_i, enabled by $abc$10867$abc$10301$auto$opt_dff.cc:219:make_patterns_logic$2477
Extracted 9 gates and 16 wires to a netlist network with 7 inputs and 4 outputs.

3.123.13.1. Executing ABC.

3.123.14. Extracting gate netlist of module `\top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \Clock_i, enabled by $abc$10880$abc$10236$auto$opt_dff.cc:219:make_patterns_logic$2447
Extracted 17 gates and 32 wires to a netlist network with 15 inputs and 7 outputs.

3.123.14.1. Executing ABC.

3.123.15. Extracting gate netlist of module `\top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \Clock_i, enabled by $abc$10901$abc$9032$u_IR_Emitter_Interface.u_IR_Emitter_Registers.IR_Emitter_MemRd_Start_L_we_dcd, asynchronously reset by !\Reset_i_N
Extracted 25 gates and 44 wires to a netlist network with 19 inputs and 18 outputs.

3.123.15.1. Executing ABC.

3.123.16. Extracting gate netlist of module `\top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \Clock_i, enabled by $abc$10937$abc$10064$auto$opt_dff.cc:219:make_patterns_logic$2380
Extracted 77 gates and 111 wires to a netlist network with 34 inputs and 26 outputs.

3.123.16.1. Executing ABC.

3.123.17. Extracting gate netlist of module `\top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \Clock_i, enabled by $abc$11011$abc$9068$u_IR_Emitter_Interface.u_IR_Emitter_Registers.IR_Emitter_MemRd_Stop_L_we_dcd, asynchronously reset by !\Reset_i_N
Extracted 25 gates and 47 wires to a netlist network with 22 inputs and 18 outputs.

3.123.17.1. Executing ABC.

3.123.18. Extracting gate netlist of module `\top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \Clock_i, enabled by $abc$11043$abc$8912$u_IR_Emitter_Interface.u_IR_Emitter_Registers.IR_Emitter_Gpio_Dir_Reg_L_we_dcd, asynchronously reset by !\Reset_i_N
Extracted 31 gates and 47 wires to a netlist network with 16 inputs and 18 outputs.

3.123.18.1. Executing ABC.

3.123.19. Extracting gate netlist of module `\top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \Clock_i, enabled by $abc$11078$abc$8865$u_IR_Emitter_Interface.u_IR_Emitter_Registers.IR_Emitter_Carrier_Duty_Len_L_we_dcd, asynchronously reset by !\Reset_i_N
Extracted 29 gates and 54 wires to a netlist network with 25 inputs and 22 outputs.

3.123.19.1. Executing ABC.

3.123.20. Extracting gate netlist of module `\top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \Clock_i, enabled by $abc$12283$lo11, asynchronously reset by !\Reset_i_N
Extracted 40 gates and 54 wires to a netlist network with 14 inputs and 4 outputs.

3.123.20.1. Executing ABC.

3.123.21. Extracting gate netlist of module `\top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \Clock_i, enabled by $abc$11165$abc$9486$flatten\u_IR_Emitter_Interface.\u_IR_Emitter_Carrier_Generator.$verific$n99$780, asynchronously reset by !\Reset_i_N
Extracted 42 gates and 56 wires to a netlist network with 14 inputs and 8 outputs.

3.123.21.1. Executing ABC.

3.123.22. Extracting gate netlist of module `\top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \Clock_i, enabled by $abc$11211$abc$9129$auto$opt_dff.cc:194:make_patterns_logic$2549, asynchronously reset by !\Reset_i_N
Extracted 66 gates and 83 wires to a netlist network with 17 inputs and 27 outputs.

3.123.22.1. Executing ABC.

3.123.23. Extracting gate netlist of module `\top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \Clock_i, enabled by $abc$11294$abc$9105$u_IR_Emitter_Interface.u_IR_Emitter_Registers.control_reg_we_dcd, asynchronously reset by !\Reset_i_N
Extracted 14 gates and 28 wires to a netlist network with 14 inputs and 10 outputs.

3.123.23.1. Executing ABC.

3.123.24. Extracting gate netlist of module `\top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \Clock_i, enabled by $abc$11320$abc$9900$u_IR_Emitter_Interface.u_IR_Emitter_Registers.IR_Emitter_Carrier_Duty_Len_H_we_dcd, asynchronously reset by !\Reset_i_N
Extracted 22 gates and 44 wires to a netlist network with 22 inputs and 18 outputs.

3.123.24.1. Executing ABC.

3.123.25. Extracting gate netlist of module `\top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \Clock_i, enabled by $abc$11357$abc$8623$u_IR_Emitter_Interface.u_IR_Emitter_SRAM_5.WD_SEL
Extracted 26 gates and 46 wires to a netlist network with 20 inputs and 13 outputs.

3.123.25.1. Executing ABC.

3.123.26. Extracting gate netlist of module `\top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \Clock_i, enabled by $abc$11392$abc$8656$u_IR_Emitter_Interface.u_IR_Emitter_SRAM_4.WD_SEL
Extracted 25 gates and 41 wires to a netlist network with 16 inputs and 12 outputs.

3.123.26.1. Executing ABC.

3.123.27. Extracting gate netlist of module `\top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \Clock_i, enabled by $abc$11425$abc$8754$u_IR_Emitter_Interface.u_IR_Emitter_SRAM_1.WD_SEL
Extracted 27 gates and 46 wires to a netlist network with 19 inputs and 14 outputs.

3.123.27.1. Executing ABC.

3.123.28. Extracting gate netlist of module `\top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \Clock_i, enabled by $abc$11457$abc$8723$u_IR_Emitter_Interface.u_IR_Emitter_SRAM_2.WD_SEL
Extracted 27 gates and 46 wires to a netlist network with 19 inputs and 12 outputs.

3.123.28.1. Executing ABC.

3.123.29. Extracting gate netlist of module `\top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \Clock_i, enabled by $abc$11491$abc$8689$u_IR_Emitter_Interface.u_IR_Emitter_SRAM_3.WD_SEL
Extracted 25 gates and 41 wires to a netlist network with 16 inputs and 11 outputs.

3.123.29.1. Executing ABC.

3.123.30. Extracting gate netlist of module `\top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \Clock_i, enabled by $abc$11525$abc$9337$auto$opt_dff.cc:194:make_patterns_logic$2533, asynchronously reset by !\Reset_i_N
Extracted 105 gates and 137 wires to a netlist network with 32 inputs and 10 outputs.

3.123.30.1. Executing ABC.

3.123.31. Extracting gate netlist of module `\top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \Clock_i, enabled by $abc$11630$abc$8816$u_IR_Emitter_Interface.u_IR_Emitter_Registers.IR_Emitter_Carrier_Cycle_Len_L_we_dcd, asynchronously reset by !\Reset_i_N
Extracted 37 gates and 68 wires to a netlist network with 31 inputs and 23 outputs.

3.123.31.1. Executing ABC.

3.123.32. Extracting gate netlist of module `\top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \Clock_i, enabled by $abc$11674$abc$8581$u_IR_Emitter_Interface.u_IR_Emitter_SRAM_6.WD_SEL
Extracted 30 gates and 52 wires to a netlist network with 22 inputs and 10 outputs.

3.123.32.1. Executing ABC.

3.123.33. Extracting gate netlist of module `\top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \Clock_i, enabled by $abc$12283$lo23, asynchronously reset by !\Reset_i_N
Extracted 102 gates and 195 wires to a netlist network with 93 inputs and 30 outputs.

3.123.33.1. Executing ABC.

3.123.34. Extracting gate netlist of module `\top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \Clock_i, enabled by $abc$11811$abc$8785$u_IR_Emitter_Interface.u_IR_Emitter_SRAM_0.WD_SEL
Extracted 23 gates and 38 wires to a netlist network with 15 inputs and 11 outputs.

3.123.34.1. Executing ABC.

3.123.35. Extracting gate netlist of module `\top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \Clock_i, enabled by $abc$11842$abc$8965$u_IR_Emitter_Interface.u_IR_Emitter_Registers.IR_Emitter_Gpio_Port_Reg_L_we_dcd, asynchronously reset by !\Reset_i_N
Extracted 23 gates and 48 wires to a netlist network with 25 inputs and 12 outputs.

3.123.35.1. Executing ABC.

3.123.36. Extracting gate netlist of module `\top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \Clock_i, enabled by $abc$11878$abc$10464$u_IR_Emitter_Interface.u_IR_Emitter_SRAM_7.WD_SEL
Extracted 25 gates and 42 wires to a netlist network with 17 inputs and 12 outputs.

3.123.36.1. Executing ABC.

3.123.37. Extracting gate netlist of module `\top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \Clock_i, enabled by $abc$10826$abc$9867$u_IR_Emitter_Interface.u_IR_Emitter_Registers.IR_Emitter_Carrier_Cycle_Len_H_we_dcd, asynchronously reset by !\Reset_i_N
Extracted 23 gates and 45 wires to a netlist network with 22 inputs and 20 outputs.

3.123.37.1. Executing ABC.

3.123.38. Extracting gate netlist of module `\top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \Clock_i, enabled by $abc$11912$abc$10312$auto$opt_dff.cc:219:make_patterns_logic$2498
Extracted 124 gates and 169 wires to a netlist network with 45 inputs and 57 outputs.

3.123.38.1. Executing ABC.

3.123.39. Extracting gate netlist of module `\top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \Clock_i, enabled by $abc$12053$abc$10262$auto$opt_dff.cc:219:make_patterns_logic$2470
Extracted 46 gates and 73 wires to a netlist network with 27 inputs and 12 outputs.

3.123.39.1. Executing ABC.

3.123.40. Extracting gate netlist of module `\top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \Clock_i, enabled by $abc$12247$abc$9975$auto$opt_dff.cc:219:make_patterns_logic$2309
Extracted 36 gates and 55 wires to a netlist network with 19 inputs and 6 outputs.

3.123.40.1. Executing ABC.

3.123.41. Extracting gate netlist of module `\top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \Clock_i, enabled by $abc$12097$abc$10204$auto$opt_dff.cc:219:make_patterns_logic$2430
Extracted 30 gates and 50 wires to a netlist network with 20 inputs and 17 outputs.

3.123.41.1. Executing ABC.

3.123.42. Extracting gate netlist of module `\top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \Clock_i, enabled by $abc$12214$abc$10008$auto$opt_dff.cc:219:make_patterns_logic$2334
Extracted 31 gates and 51 wires to a netlist network with 20 inputs and 12 outputs.

3.123.42.1. Executing ABC.

3.123.43. Extracting gate netlist of module `\top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \Clock_i, asynchronously reset by !\Reset_i_N
Extracted 315 gates and 448 wires to a netlist network with 133 inputs and 79 outputs.

3.123.43.1. Executing ABC.

3.123.44. Extracting gate netlist of module `\top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \Clock_i, enabled by $abc$12637$abc$10586$auto$opt_dff.cc:219:make_patterns_logic$2296
Extracted 25 gates and 44 wires to a netlist network with 19 inputs and 11 outputs.

3.123.44.1. Executing ABC.

yosys> abc -dff

3.124. Executing ABC pass (technology mapping using ABC).

3.124.1. Summary of detected clock domains:
  8 cells in clk=\Clock_i, en=$abc$12663$abc$10610$abc$10496$auto$opt_dff.cc:194:make_patterns_logic$2504, arst={ }, srst={ }
  3 cells in clk=\Clock_i, en=$abc$14322$lo09, arst=!\Reset_i_N, srst={ }
  24 cells in clk=\Clock_i, en=$abc$12677$abc$10624$abc$10046$auto$opt_dff.cc:219:make_patterns_logic$2357, arst={ }, srst={ }
  7 cells in clk=\Clock_i, en=$abc$12701$abc$10648$abc$10456$auto$opt_dff.cc:194:make_patterns_logic$2501, arst={ }, srst={ }
  8 cells in clk=\Clock_i, en=$abc$12709$abc$10656$abc$9328$auto$opt_dff.cc:219:make_patterns_logic$2543, arst=!\Reset_i_N, srst={ }
  2 cells in clk=\Clock_i, en=$abc$12718$abc$10665$abc$8993$auto$opt_dff.cc:194:make_patterns_logic$2523, arst=!\Reset_i_N, srst={ }
  13 cells in clk=\Clock_i, en=$abc$12724$abc$10671$abc$9956$u_IR_Emitter_Interface.u_IR_Emitter_Registers.IR_Emitter_MemRd_Stop_H_we_dcd, arst=!\Reset_i_N, srst={ }
  16 cells in clk=\Clock_i, en=$abc$12748$abc$10696$abc$9932$u_IR_Emitter_Interface.u_IR_Emitter_Registers.IR_Emitter_MemRd_Start_H_we_dcd, arst=!\Reset_i_N, srst={ }
  24 cells in clk=\Clock_i, en=$abc$12773$abc$10723$abc$8998$u_IR_Emitter_Interface.u_IR_Emitter_Registers.IR_Emitter_MemAddr_Reg_L_we_dcd, arst=!\Reset_i_N, srst={ }
  63 cells in clk=\Clock_i, en=$abc$12805$abc$10756$abc$10144$auto$opt_dff.cc:219:make_patterns_logic$2409, arst={ }, srst={ }
  10 cells in clk=\Clock_i, en=$abc$12953$abc$10867$abc$10301$auto$opt_dff.cc:219:make_patterns_logic$2477, arst={ }, srst={ }
  18 cells in clk=\Clock_i, en=$abc$12964$abc$10880$abc$10236$auto$opt_dff.cc:219:make_patterns_logic$2447, arst={ }, srst={ }
  25 cells in clk=\Clock_i, en=$abc$12982$abc$10901$abc$9032$u_IR_Emitter_Interface.u_IR_Emitter_Registers.IR_Emitter_MemRd_Start_L_we_dcd, arst=!\Reset_i_N, srst={ }
  76 cells in clk=\Clock_i, en=$abc$13018$abc$10937$abc$10064$auto$opt_dff.cc:219:make_patterns_logic$2380, arst={ }, srst={ }
  25 cells in clk=\Clock_i, en=$abc$13095$abc$11011$abc$9068$u_IR_Emitter_Interface.u_IR_Emitter_Registers.IR_Emitter_MemRd_Stop_L_we_dcd, arst=!\Reset_i_N, srst={ }
  25 cells in clk=\Clock_i, en=$abc$13131$abc$11043$abc$8912$u_IR_Emitter_Interface.u_IR_Emitter_Registers.IR_Emitter_Gpio_Dir_Reg_L_we_dcd, arst=!\Reset_i_N, srst={ }
  30 cells in clk=\Clock_i, en=$abc$13166$abc$11078$abc$8865$u_IR_Emitter_Interface.u_IR_Emitter_Registers.IR_Emitter_Carrier_Duty_Len_L_we_dcd, arst=!\Reset_i_N, srst={ }
  40 cells in clk=\Clock_i, en=$abc$14322$lo43, arst=!\Reset_i_N, srst={ }
  41 cells in clk=\Clock_i, en=$abc$13256$abc$11165$abc$9486$flatten\u_IR_Emitter_Interface.\u_IR_Emitter_Carrier_Generator.$verific$n99$780, arst=!\Reset_i_N, srst={ }
  68 cells in clk=\Clock_i, en=$abc$13300$abc$11211$abc$9129$auto$opt_dff.cc:194:make_patterns_logic$2549, arst=!\Reset_i_N, srst={ }
  15 cells in clk=\Clock_i, en=$abc$13379$abc$11294$abc$9105$u_IR_Emitter_Interface.u_IR_Emitter_Registers.control_reg_we_dcd, arst=!\Reset_i_N, srst={ }
  23 cells in clk=\Clock_i, en=$abc$13402$abc$11320$abc$9900$u_IR_Emitter_Interface.u_IR_Emitter_Registers.IR_Emitter_Carrier_Duty_Len_H_we_dcd, arst=!\Reset_i_N, srst={ }
  27 cells in clk=\Clock_i, en=$abc$13439$abc$11357$abc$8623$u_IR_Emitter_Interface.u_IR_Emitter_SRAM_5.WD_SEL, arst={ }, srst={ }
  30 cells in clk=\Clock_i, en=$abc$13473$abc$11392$abc$8656$u_IR_Emitter_Interface.u_IR_Emitter_SRAM_4.WD_SEL, arst={ }, srst={ }
  26 cells in clk=\Clock_i, en=$abc$13507$abc$11425$abc$8754$u_IR_Emitter_Interface.u_IR_Emitter_SRAM_1.WD_SEL, arst={ }, srst={ }
  25 cells in clk=\Clock_i, en=$abc$13542$abc$11457$abc$8723$u_IR_Emitter_Interface.u_IR_Emitter_SRAM_2.WD_SEL, arst={ }, srst={ }
  25 cells in clk=\Clock_i, en=$abc$13575$abc$11491$abc$8689$u_IR_Emitter_Interface.u_IR_Emitter_SRAM_3.WD_SEL, arst={ }, srst={ }
  101 cells in clk=\Clock_i, en=$abc$13607$abc$11525$abc$9337$auto$opt_dff.cc:194:make_patterns_logic$2533, arst=!\Reset_i_N, srst={ }
  28 cells in clk=\Clock_i, en=$abc$13713$abc$11630$abc$8816$u_IR_Emitter_Interface.u_IR_Emitter_Registers.IR_Emitter_Carrier_Cycle_Len_L_we_dcd, arst=!\Reset_i_N, srst={ }
  28 cells in clk=\Clock_i, en=$abc$13760$abc$11674$abc$8581$u_IR_Emitter_Interface.u_IR_Emitter_SRAM_6.WD_SEL, arst={ }, srst={ }
  102 cells in clk=\Clock_i, en=$abc$14322$lo32, arst=!\Reset_i_N, srst={ }
  25 cells in clk=\Clock_i, en=$abc$13928$abc$11842$abc$8965$u_IR_Emitter_Interface.u_IR_Emitter_Registers.IR_Emitter_Gpio_Port_Reg_L_we_dcd, arst=!\Reset_i_N, srst={ }
  24 cells in clk=\Clock_i, en=$abc$13964$abc$11878$abc$10464$u_IR_Emitter_Interface.u_IR_Emitter_SRAM_7.WD_SEL, arst={ }, srst={ }
  26 cells in clk=\Clock_i, en=$abc$13998$abc$10826$abc$9867$u_IR_Emitter_Interface.u_IR_Emitter_Registers.IR_Emitter_Carrier_Cycle_Len_H_we_dcd, arst=!\Reset_i_N, srst={ }
  119 cells in clk=\Clock_i, en=$abc$14036$abc$11912$abc$10312$auto$opt_dff.cc:219:make_patterns_logic$2498, arst={ }, srst={ }
  22 cells in clk=\Clock_i, en=$abc$13896$abc$11811$abc$8785$u_IR_Emitter_Interface.u_IR_Emitter_SRAM_0.WD_SEL, arst={ }, srst={ }
  30 cells in clk=\Clock_i, en=$abc$14290$abc$12214$abc$10008$auto$opt_dff.cc:219:make_patterns_logic$2334, arst={ }, srst={ }
  75 cells in clk=\Clock_i, en={ }, arst={ }, srst={ }
  50 cells in clk=\Clock_i, en=$abc$14168$abc$12053$abc$10262$auto$opt_dff.cc:219:make_patterns_logic$2470, arst={ }, srst={ }
  33 cells in clk=\Clock_i, en=$abc$14213$abc$12247$abc$9975$auto$opt_dff.cc:219:make_patterns_logic$2309, arst={ }, srst={ }
  39 cells in clk=\Clock_i, en=$abc$14251$abc$12097$abc$10204$auto$opt_dff.cc:219:make_patterns_logic$2430, arst={ }, srst={ }
  331 cells in clk=\Clock_i, en={ }, arst=!\Reset_i_N, srst={ }
  23 cells in clk=\Clock_i, en=$abc$14689$abc$12637$abc$10586$auto$opt_dff.cc:219:make_patterns_logic$2296, arst={ }, srst={ }

3.124.2. Extracting gate netlist of module `\top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \Clock_i, enabled by $abc$12663$abc$10610$abc$10496$auto$opt_dff.cc:194:make_patterns_logic$2504
Extracted 8 gates and 13 wires to a netlist network with 5 inputs and 5 outputs.

3.124.2.1. Executing ABC.

3.124.3. Extracting gate netlist of module `\top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \Clock_i, enabled by $abc$14322$lo09, asynchronously reset by !\Reset_i_N
Extracted 3 gates and 5 wires to a netlist network with 2 inputs and 2 outputs.

3.124.3.1. Executing ABC.

3.124.4. Extracting gate netlist of module `\top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \Clock_i, enabled by $abc$12677$abc$10624$abc$10046$auto$opt_dff.cc:219:make_patterns_logic$2357
Extracted 24 gates and 46 wires to a netlist network with 22 inputs and 7 outputs.

3.124.4.1. Executing ABC.

3.124.5. Extracting gate netlist of module `\top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \Clock_i, enabled by $abc$12701$abc$10648$abc$10456$auto$opt_dff.cc:194:make_patterns_logic$2501
Extracted 7 gates and 13 wires to a netlist network with 6 inputs and 4 outputs.

3.124.5.1. Executing ABC.

3.124.6. Extracting gate netlist of module `\top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \Clock_i, enabled by $abc$12709$abc$10656$abc$9328$auto$opt_dff.cc:219:make_patterns_logic$2543, asynchronously reset by !\Reset_i_N
Extracted 8 gates and 17 wires to a netlist network with 9 inputs and 3 outputs.

3.124.6.1. Executing ABC.

3.124.7. Extracting gate netlist of module `\top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \Clock_i, enabled by $abc$12718$abc$10665$abc$8993$auto$opt_dff.cc:194:make_patterns_logic$2523, asynchronously reset by !\Reset_i_N
Extracted 2 gates and 5 wires to a netlist network with 3 inputs and 2 outputs.

3.124.7.1. Executing ABC.

3.124.8. Extracting gate netlist of module `\top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \Clock_i, enabled by $abc$12724$abc$10671$abc$9956$u_IR_Emitter_Interface.u_IR_Emitter_Registers.IR_Emitter_MemRd_Stop_H_we_dcd, asynchronously reset by !\Reset_i_N
Extracted 13 gates and 28 wires to a netlist network with 15 inputs and 11 outputs.

3.124.8.1. Executing ABC.

3.124.9. Extracting gate netlist of module `\top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \Clock_i, enabled by $abc$12748$abc$10696$abc$9932$u_IR_Emitter_Interface.u_IR_Emitter_Registers.IR_Emitter_MemRd_Start_H_we_dcd, asynchronously reset by !\Reset_i_N
Extracted 16 gates and 29 wires to a netlist network with 13 inputs and 14 outputs.

3.124.9.1. Executing ABC.

3.124.10. Extracting gate netlist of module `\top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \Clock_i, enabled by $abc$12773$abc$10723$abc$8998$u_IR_Emitter_Interface.u_IR_Emitter_Registers.IR_Emitter_MemAddr_Reg_L_we_dcd, asynchronously reset by !\Reset_i_N
Extracted 24 gates and 40 wires to a netlist network with 16 inputs and 19 outputs.

3.124.10.1. Executing ABC.

3.124.11. Extracting gate netlist of module `\top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \Clock_i, enabled by $abc$12805$abc$10756$abc$10144$auto$opt_dff.cc:219:make_patterns_logic$2409
Extracted 63 gates and 114 wires to a netlist network with 51 inputs and 33 outputs.

3.124.11.1. Executing ABC.

3.124.12. Extracting gate netlist of module `\top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \Clock_i, enabled by $abc$12953$abc$10867$abc$10301$auto$opt_dff.cc:219:make_patterns_logic$2477
Extracted 10 gates and 18 wires to a netlist network with 8 inputs and 5 outputs.

3.124.12.1. Executing ABC.

3.124.13. Extracting gate netlist of module `\top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \Clock_i, enabled by $abc$12964$abc$10880$abc$10236$auto$opt_dff.cc:219:make_patterns_logic$2447
Extracted 18 gates and 33 wires to a netlist network with 15 inputs and 7 outputs.

3.124.13.1. Executing ABC.

3.124.14. Extracting gate netlist of module `\top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \Clock_i, enabled by $abc$12982$abc$10901$abc$9032$u_IR_Emitter_Interface.u_IR_Emitter_Registers.IR_Emitter_MemRd_Start_L_we_dcd, asynchronously reset by !\Reset_i_N
Extracted 25 gates and 44 wires to a netlist network with 19 inputs and 18 outputs.

3.124.14.1. Executing ABC.

3.124.15. Extracting gate netlist of module `\top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \Clock_i, enabled by $abc$13018$abc$10937$abc$10064$auto$opt_dff.cc:219:make_patterns_logic$2380
Extracted 76 gates and 111 wires to a netlist network with 35 inputs and 27 outputs.

3.124.15.1. Executing ABC.

3.124.16. Extracting gate netlist of module `\top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \Clock_i, enabled by $abc$13095$abc$11011$abc$9068$u_IR_Emitter_Interface.u_IR_Emitter_Registers.IR_Emitter_MemRd_Stop_L_we_dcd, asynchronously reset by !\Reset_i_N
Extracted 25 gates and 49 wires to a netlist network with 24 inputs and 17 outputs.

3.124.16.1. Executing ABC.

3.124.17. Extracting gate netlist of module `\top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \Clock_i, enabled by $abc$13131$abc$11043$abc$8912$u_IR_Emitter_Interface.u_IR_Emitter_Registers.IR_Emitter_Gpio_Dir_Reg_L_we_dcd, asynchronously reset by !\Reset_i_N
Extracted 25 gates and 39 wires to a netlist network with 14 inputs and 18 outputs.

3.124.17.1. Executing ABC.

3.124.18. Extracting gate netlist of module `\top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \Clock_i, enabled by $abc$13166$abc$11078$abc$8865$u_IR_Emitter_Interface.u_IR_Emitter_Registers.IR_Emitter_Carrier_Duty_Len_L_we_dcd, asynchronously reset by !\Reset_i_N
Extracted 30 gates and 55 wires to a netlist network with 25 inputs and 23 outputs.

3.124.18.1. Executing ABC.

3.124.19. Extracting gate netlist of module `\top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \Clock_i, enabled by $abc$14322$lo43, asynchronously reset by !\Reset_i_N
Extracted 40 gates and 54 wires to a netlist network with 14 inputs and 7 outputs.

3.124.19.1. Executing ABC.

3.124.20. Extracting gate netlist of module `\top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \Clock_i, enabled by $abc$13256$abc$11165$abc$9486$flatten\u_IR_Emitter_Interface.\u_IR_Emitter_Carrier_Generator.$verific$n99$780, asynchronously reset by !\Reset_i_N
Extracted 41 gates and 56 wires to a netlist network with 15 inputs and 8 outputs.

3.124.20.1. Executing ABC.

3.124.21. Extracting gate netlist of module `\top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \Clock_i, enabled by $abc$13300$abc$11211$abc$9129$auto$opt_dff.cc:194:make_patterns_logic$2549, asynchronously reset by !\Reset_i_N
Extracted 68 gates and 88 wires to a netlist network with 20 inputs and 28 outputs.

3.124.21.1. Executing ABC.

3.124.22. Extracting gate netlist of module `\top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \Clock_i, enabled by $abc$13379$abc$11294$abc$9105$u_IR_Emitter_Interface.u_IR_Emitter_Registers.control_reg_we_dcd, asynchronously reset by !\Reset_i_N
Extracted 15 gates and 31 wires to a netlist network with 16 inputs and 11 outputs.

3.124.22.1. Executing ABC.

3.124.23. Extracting gate netlist of module `\top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \Clock_i, enabled by $abc$13402$abc$11320$abc$9900$u_IR_Emitter_Interface.u_IR_Emitter_Registers.IR_Emitter_Carrier_Duty_Len_H_we_dcd, asynchronously reset by !\Reset_i_N
Extracted 23 gates and 45 wires to a netlist network with 22 inputs and 19 outputs.

3.124.23.1. Executing ABC.

3.124.24. Extracting gate netlist of module `\top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \Clock_i, enabled by $abc$13439$abc$11357$abc$8623$u_IR_Emitter_Interface.u_IR_Emitter_SRAM_5.WD_SEL
Extracted 27 gates and 46 wires to a netlist network with 19 inputs and 13 outputs.

3.124.24.1. Executing ABC.

3.124.25. Extracting gate netlist of module `\top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \Clock_i, enabled by $abc$13473$abc$11392$abc$8656$u_IR_Emitter_Interface.u_IR_Emitter_SRAM_4.WD_SEL
Extracted 30 gates and 51 wires to a netlist network with 21 inputs and 17 outputs.

3.124.25.1. Executing ABC.

3.124.26. Extracting gate netlist of module `\top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \Clock_i, enabled by $abc$13507$abc$11425$abc$8754$u_IR_Emitter_Interface.u_IR_Emitter_SRAM_1.WD_SEL
Extracted 26 gates and 43 wires to a netlist network with 17 inputs and 10 outputs.

3.124.26.1. Executing ABC.

3.124.27. Extracting gate netlist of module `\top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \Clock_i, enabled by $abc$13542$abc$11457$abc$8723$u_IR_Emitter_Interface.u_IR_Emitter_SRAM_2.WD_SEL
Extracted 25 gates and 42 wires to a netlist network with 17 inputs and 11 outputs.

3.124.27.1. Executing ABC.

3.124.28. Extracting gate netlist of module `\top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \Clock_i, enabled by $abc$13575$abc$11491$abc$8689$u_IR_Emitter_Interface.u_IR_Emitter_SRAM_3.WD_SEL
Extracted 25 gates and 41 wires to a netlist network with 16 inputs and 11 outputs.

3.124.28.1. Executing ABC.

3.124.29. Extracting gate netlist of module `\top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \Clock_i, enabled by $abc$13607$abc$11525$abc$9337$auto$opt_dff.cc:194:make_patterns_logic$2533, asynchronously reset by !\Reset_i_N
Extracted 101 gates and 130 wires to a netlist network with 29 inputs and 6 outputs.

3.124.29.1. Executing ABC.

3.124.30. Extracting gate netlist of module `\top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \Clock_i, enabled by $abc$13713$abc$11630$abc$8816$u_IR_Emitter_Interface.u_IR_Emitter_Registers.IR_Emitter_Carrier_Cycle_Len_L_we_dcd, asynchronously reset by !\Reset_i_N
Extracted 28 gates and 51 wires to a netlist network with 23 inputs and 22 outputs.

3.124.30.1. Executing ABC.

3.124.31. Extracting gate netlist of module `\top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \Clock_i, enabled by $abc$13760$abc$11674$abc$8581$u_IR_Emitter_Interface.u_IR_Emitter_SRAM_6.WD_SEL
Extracted 28 gates and 47 wires to a netlist network with 19 inputs and 10 outputs.

3.124.31.1. Executing ABC.

3.124.32. Extracting gate netlist of module `\top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \Clock_i, enabled by $abc$14322$lo32, asynchronously reset by !\Reset_i_N
Extracted 102 gates and 195 wires to a netlist network with 93 inputs and 30 outputs.

3.124.32.1. Executing ABC.

3.124.33. Extracting gate netlist of module `\top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \Clock_i, enabled by $abc$13928$abc$11842$abc$8965$u_IR_Emitter_Interface.u_IR_Emitter_Registers.IR_Emitter_Gpio_Port_Reg_L_we_dcd, asynchronously reset by !\Reset_i_N
Extracted 25 gates and 52 wires to a netlist network with 27 inputs and 12 outputs.

3.124.33.1. Executing ABC.

3.124.34. Extracting gate netlist of module `\top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \Clock_i, enabled by $abc$13964$abc$11878$abc$10464$u_IR_Emitter_Interface.u_IR_Emitter_SRAM_7.WD_SEL
Extracted 24 gates and 40 wires to a netlist network with 16 inputs and 11 outputs.

3.124.34.1. Executing ABC.

3.124.35. Extracting gate netlist of module `\top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \Clock_i, enabled by $abc$13998$abc$10826$abc$9867$u_IR_Emitter_Interface.u_IR_Emitter_Registers.IR_Emitter_Carrier_Cycle_Len_H_we_dcd, asynchronously reset by !\Reset_i_N
Extracted 26 gates and 50 wires to a netlist network with 24 inputs and 21 outputs.

3.124.35.1. Executing ABC.

3.124.36. Extracting gate netlist of module `\top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \Clock_i, enabled by $abc$14036$abc$11912$abc$10312$auto$opt_dff.cc:219:make_patterns_logic$2498
Extracted 119 gates and 159 wires to a netlist network with 40 inputs and 53 outputs.

3.124.36.1. Executing ABC.

3.124.37. Extracting gate netlist of module `\top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \Clock_i, enabled by $abc$13896$abc$11811$abc$8785$u_IR_Emitter_Interface.u_IR_Emitter_SRAM_0.WD_SEL
Extracted 22 gates and 36 wires to a netlist network with 14 inputs and 10 outputs.

3.124.37.1. Executing ABC.

3.124.38. Extracting gate netlist of module `\top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \Clock_i, enabled by $abc$14290$abc$12214$abc$10008$auto$opt_dff.cc:219:make_patterns_logic$2334
Extracted 30 gates and 50 wires to a netlist network with 20 inputs and 12 outputs.

3.124.38.1. Executing ABC.

3.124.39. Extracting gate netlist of module `\top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \Clock_i
Extracted 75 gates and 88 wires to a netlist network with 13 inputs and 17 outputs.

3.124.39.1. Executing ABC.

3.124.40. Extracting gate netlist of module `\top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \Clock_i, enabled by $abc$14168$abc$12053$abc$10262$auto$opt_dff.cc:219:make_patterns_logic$2470
Extracted 50 gates and 78 wires to a netlist network with 28 inputs and 13 outputs.

3.124.40.1. Executing ABC.

3.124.41. Extracting gate netlist of module `\top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \Clock_i, enabled by $abc$14213$abc$12247$abc$9975$auto$opt_dff.cc:219:make_patterns_logic$2309
Extracted 33 gates and 54 wires to a netlist network with 21 inputs and 8 outputs.

3.124.41.1. Executing ABC.

3.124.42. Extracting gate netlist of module `\top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \Clock_i, enabled by $abc$14251$abc$12097$abc$10204$auto$opt_dff.cc:219:make_patterns_logic$2430
Extracted 39 gates and 60 wires to a netlist network with 21 inputs and 26 outputs.

3.124.42.1. Executing ABC.

3.124.43. Extracting gate netlist of module `\top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \Clock_i, asynchronously reset by !\Reset_i_N
Extracted 331 gates and 457 wires to a netlist network with 126 inputs and 71 outputs.

3.124.43.1. Executing ABC.

3.124.44. Extracting gate netlist of module `\top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \Clock_i, enabled by $abc$14689$abc$12637$abc$10586$auto$opt_dff.cc:219:make_patterns_logic$2296
Extracted 23 gates and 43 wires to a netlist network with 20 inputs and 11 outputs.

3.124.44.1. Executing ABC.

yosys> opt_ffinv

3.125. Executing OPT_FFINV pass (push inverters through FFs).
Discovering LUTs.
Pushed 2 inverters.

yosys> opt_expr

3.126. Executing OPT_EXPR pass (perform const folding).
Optimizing module top.
<suppressed ~8 debug messages>

yosys> opt_merge -nomux

3.127. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\top'.
<suppressed ~162 debug messages>
Removed a total of 54 cells.

yosys> opt_muxtree

3.128. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \top..
  Creating internal representation of mux trees.
  No muxes found in this module.
Removed 0 multiplexer ports.

yosys> opt_reduce

3.129. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \top.
Performed a total of 0 changes.

yosys> opt_merge

3.130. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\top'.
Removed a total of 0 cells.

yosys> opt_share

3.131. Executing OPT_SHARE pass.

yosys> opt_dff -nosdff -sat

3.132. Executing OPT_DFF pass (perform DFF optimizations).

yosys> opt_clean

3.133. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \top..
Removed 3 unused cells and 11309 unused wires.
<suppressed ~126 debug messages>

yosys> opt_expr

3.134. Executing OPT_EXPR pass (perform const folding).
Optimizing module top.

yosys> opt_muxtree

3.135. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \top..
  Creating internal representation of mux trees.
  No muxes found in this module.
Removed 0 multiplexer ports.

yosys> opt_reduce

3.136. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \top.
Performed a total of 0 changes.

yosys> opt_merge

3.137. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\top'.
Removed a total of 0 cells.

yosys> opt_share

3.138. Executing OPT_SHARE pass.

yosys> opt_dff -nosdff -sat

3.139. Executing OPT_DFF pass (perform DFF optimizations).

yosys> opt_clean

3.140. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \top..

yosys> opt_expr

3.141. Executing OPT_EXPR pass (perform const folding).
Optimizing module top.
MAX OPT ITERATION = 2

yosys> bmuxmap

3.142. Executing BMUXMAP pass.

yosys> demuxmap

3.143. Executing DEMUXMAP pass.

yosys> clean_zerowidth

yosys> abc -script /tmp/yosys_hJV4W4/abc_tmp_1.scr

3.144. Executing ABC pass (technology mapping using ABC).

3.144.1. Extracting gate netlist of module `\top' to `<abc-temp-dir>/input.blif'..
Extracted 1365 gates and 1703 wires to a netlist network with 338 inputs and 239 outputs.

3.144.1.1. Executing ABC.
DE:   #PIs = 338  #Luts =   463  Max Lvl =   5  Avg Lvl =   2.01  [   0.22 sec. at Pass 0]{firstMap}
DE:   #PIs = 338  #Luts =   406  Max Lvl =   6  Avg Lvl =   2.38  [   2.87 sec. at Pass 1]{initMapFlow}
DE:   #PIs = 338  #Luts =   398  Max Lvl =   7  Avg Lvl =   2.41  [   0.98 sec. at Pass 2]{map}
DE:   #PIs = 338  #Luts =   398  Max Lvl =   7  Avg Lvl =   2.41  [   0.88 sec. at Pass 3]{postMap}
DE:   #PIs = 338  #Luts =   393  Max Lvl =   7  Avg Lvl =   2.31  [   0.68 sec. at Pass 4]{map}
DE:   #PIs = 338  #Luts =   389  Max Lvl =   7  Avg Lvl =   2.37  [   1.85 sec. at Pass 5]{postMap}
DE:   #PIs = 338  #Luts =   388  Max Lvl =   7  Avg Lvl =   2.36  [   0.88 sec. at Pass 6]{map}
DE:   #PIs = 338  #Luts =   387  Max Lvl =   7  Avg Lvl =   2.32  [   0.97 sec. at Pass 7]{postMap}
DE:   #PIs = 338  #Luts =   387  Max Lvl =   7  Avg Lvl =   2.32  [   1.65 sec. at Pass 8]{map}
DE:   #PIs = 338  #Luts =   387  Max Lvl =   7  Avg Lvl =   2.32  [   1.39 sec. at Pass 9]{postMap}
DE:   #PIs = 338  #Luts =   387  Max Lvl =   7  Avg Lvl =   2.32  [   1.06 sec. at Pass 10]{map}
DE:   #PIs = 338  #Luts =   379  Max Lvl =   7  Avg Lvl =   2.30  [   4.80 sec. at Pass 11]{pushMap}
DE:   #PIs = 338  #Luts =   379  Max Lvl =   7  Avg Lvl =   2.30  [   1.24 sec. at Pass 12]{postMap}
DE:   #PIs = 338  #Luts =   379  Max Lvl =   7  Avg Lvl =   2.30  [   1.41 sec. at Pass 13]{map}
DE:   #PIs = 338  #Luts =   379  Max Lvl =   7  Avg Lvl =   2.30  [   1.87 sec. at Pass 14]{postMap}
DE:   #PIs = 338  #Luts =   378  Max Lvl =   6  Avg Lvl =   2.29  [   4.90 sec. at Pass 15]{pushMap}
DE:   #PIs = 338  #Luts =   378  Max Lvl =   6  Avg Lvl =   2.29  [   1.17 sec. at Pass 16]{map}
DE:   #PIs = 338  #Luts =   378  Max Lvl =   6  Avg Lvl =   2.29  [   1.62 sec. at Pass 17]{postMap}
DE:   #PIs = 338  #Luts =   378  Max Lvl =   6  Avg Lvl =   2.29  [   1.39 sec. at Pass 18]{map}
DE:   #PIs = 338  #Luts =   377  Max Lvl =   7  Avg Lvl =   2.30  [   4.10 sec. at Pass 19]{pushMap}
DE:   #PIs = 338  #Luts =   377  Max Lvl =   7  Avg Lvl =   2.30  [   1.39 sec. at Pass 20]{postMap}
DE:   #PIs = 338  #Luts =   377  Max Lvl =   7  Avg Lvl =   2.30  [   0.78 sec. at Pass 21]{map}
DE:   #PIs = 338  #Luts =   377  Max Lvl =   7  Avg Lvl =   2.30  [   0.95 sec. at Pass 22]{postMap}
DE:   #PIs = 338  #Luts =   376  Max Lvl =   7  Avg Lvl =   2.30  [   4.32 sec. at Pass 23]{pushMap}
DE:   #PIs = 338  #Luts =   376  Max Lvl =   7  Avg Lvl =   2.30  [   1.45 sec. at Pass 24]{map}
DE:   #PIs = 338  #Luts =   376  Max Lvl =   7  Avg Lvl =   2.30  [   1.57 sec. at Pass 25]{postMap}
DE:   #PIs = 338  #Luts =   376  Max Lvl =   6  Avg Lvl =   2.35  [   1.00 sec. at Pass 26]{map}
DE:   #PIs = 338  #Luts =   376  Max Lvl =   6  Avg Lvl =   2.35  [   2.06 sec. at Pass 27]{postMap}
DE:   #PIs = 338  #Luts =   376  Max Lvl =   6  Avg Lvl =   2.35  [   1.41 sec. at Pass 28]{map}
DE:   #PIs = 338  #Luts =   376  Max Lvl =   6  Avg Lvl =   2.35  [   1.11 sec. at Pass 29]{postMap}
DE:   #PIs = 338  #Luts =   376  Max Lvl =   6  Avg Lvl =   2.35  [   0.67 sec. at Pass 30]{finalMap}

yosys> opt_expr

3.145. Executing OPT_EXPR pass (perform const folding).
Optimizing module top.

yosys> opt_merge -nomux

3.146. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\top'.
Removed a total of 0 cells.

yosys> opt_muxtree

3.147. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \top..
  Creating internal representation of mux trees.
  No muxes found in this module.
Removed 0 multiplexer ports.

yosys> opt_reduce

3.148. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \top.
Performed a total of 0 changes.

yosys> opt_merge

3.149. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\top'.
Removed a total of 0 cells.

yosys> opt_share

3.150. Executing OPT_SHARE pass.

yosys> opt_dff -nosdff -nodffe

3.151. Executing OPT_DFF pass (perform DFF optimizations).

yosys> opt_clean

3.152. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \top..
Removed 9 unused cells and 1621 unused wires.
<suppressed ~36 debug messages>

yosys> opt_expr

3.153. Executing OPT_EXPR pass (perform const folding).
Optimizing module top.

yosys> opt_muxtree

3.154. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \top..
  Creating internal representation of mux trees.
  No muxes found in this module.
Removed 0 multiplexer ports.

yosys> opt_reduce

3.155. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \top.
Performed a total of 0 changes.

yosys> opt_merge

3.156. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\top'.
Removed a total of 0 cells.

yosys> opt_share

3.157. Executing OPT_SHARE pass.

yosys> opt_dff -nosdff -nodffe

3.158. Executing OPT_DFF pass (perform DFF optimizations).

yosys> opt_clean

3.159. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \top..

yosys> opt_expr

3.160. Executing OPT_EXPR pass (perform const folding).
Optimizing module top.
MAX OPT ITERATION = 2

yosys> opt_ffinv

3.161. Executing OPT_FFINV pass (push inverters through FFs).
Discovering LUTs.
Pushed 8 inverters.

yosys> stat

3.162. Printing statistics.

=== top ===

   Number of wires:                809
   Number of wire bits:           1351
   Number of public wires:         195
   Number of public wire bits:     737
   Number of memories:               0
   Number of memory bits:            0
   Number of processes:              0
   Number of cells:                706
     $_DFFE_PN0P_                  137
     $_DFFE_PN1P_                    8
     $_DFFE_PP_                    111
     $_DFF_PN0_                     52
     $_DFF_PN1_                      1
     $_DFF_P_                       22
     $lut                          375


yosys> shregmap -minlen 8 -maxlen 20

3.163. Executing SHREGMAP pass (map shift registers).
Converted 0 dff cells into 0 shift registers.

yosys> dfflegalize -cell $_DFF_?_ 0 -cell $_DFF_???_ 0 -cell $_DFFE_????_ 0 -cell $_DFFSR_???_ 0 -cell $_DFFSRE_????_ 0 -cell $_DLATCHSR_PPP_ 0

3.164. Executing DFFLEGALIZE pass (convert FFs to types supported by the target).

yosys> stat

3.165. Printing statistics.

=== top ===

   Number of wires:                809
   Number of wire bits:           1351
   Number of public wires:         195
   Number of public wire bits:     737
   Number of memories:               0
   Number of memory bits:            0
   Number of processes:              0
   Number of cells:                706
     $_DFFE_PN0P_                  137
     $_DFFE_PN1P_                    8
     $_DFFE_PP0P_                  111
     $_DFF_PN0_                     52
     $_DFF_PN1_                      1
     $_DFF_P_                       22
     $lut                          375


yosys> techmap -map +/techmap.v -map +/rapidsilicon/genesis/ffs_map.v

3.166. Executing TECHMAP pass (map to technology primitives).

3.166.1. Executing Verilog-2005 frontend: /nfs_scratch/scratch/Vorak/aram/Workspace/Raptor/yosys_verific_rs/yosys/install/bin/../share/yosys/techmap.v
Parsing Verilog input from `/nfs_scratch/scratch/Vorak/aram/Workspace/Raptor/yosys_verific_rs/yosys/install/bin/../share/yosys/techmap.v' to AST representation.
Generating RTLIL representation for module `\_90_simplemap_bool_ops'.
Generating RTLIL representation for module `\_90_simplemap_reduce_ops'.
Generating RTLIL representation for module `\_90_simplemap_logic_ops'.
Generating RTLIL representation for module `\_90_simplemap_compare_ops'.
Generating RTLIL representation for module `\_90_simplemap_various'.
Generating RTLIL representation for module `\_90_simplemap_registers'.
Generating RTLIL representation for module `\_90_shift_ops_shr_shl_sshl_sshr'.
Generating RTLIL representation for module `\_90_shift_shiftx'.
Generating RTLIL representation for module `\_90_fa'.
Generating RTLIL representation for module `\_90_lcu'.
Generating RTLIL representation for module `\_90_alu'.
Generating RTLIL representation for module `\_90_macc'.
Generating RTLIL representation for module `\_90_alumacc'.
Generating RTLIL representation for module `\$__div_mod_u'.
Generating RTLIL representation for module `\$__div_mod_trunc'.
Generating RTLIL representation for module `\_90_div'.
Generating RTLIL representation for module `\_90_mod'.
Generating RTLIL representation for module `\$__div_mod_floor'.
Generating RTLIL representation for module `\_90_divfloor'.
Generating RTLIL representation for module `\_90_modfloor'.
Generating RTLIL representation for module `\_90_pow'.
Generating RTLIL representation for module `\_90_pmux'.
Generating RTLIL representation for module `\_90_demux'.
Generating RTLIL representation for module `\_90_lut'.
Successfully finished Verilog frontend.

3.166.2. Executing Verilog-2005 frontend: /nfs_scratch/scratch/Vorak/aram/Workspace/Raptor/yosys_verific_rs/yosys/install/bin/../share/yosys/rapidsilicon/genesis/ffs_map.v
Parsing Verilog input from `/nfs_scratch/scratch/Vorak/aram/Workspace/Raptor/yosys_verific_rs/yosys/install/bin/../share/yosys/rapidsilicon/genesis/ffs_map.v' to AST representation.
Generating RTLIL representation for module `\$_DFF_P_'.
Generating RTLIL representation for module `\$_DFF_PP0_'.
Generating RTLIL representation for module `\$_DFF_PN0_'.
Generating RTLIL representation for module `\$_DFF_PP1_'.
Generating RTLIL representation for module `\$_DFF_PN1_'.
Generating RTLIL representation for module `\$_DFFE_PP_'.
Generating RTLIL representation for module `\$_DFFE_PN_'.
Generating RTLIL representation for module `\$_DFFE_PP0P_'.
Generating RTLIL representation for module `\$_DFFE_PP0N_'.
Generating RTLIL representation for module `\$_DFFE_PN0P_'.
Generating RTLIL representation for module `\$_DFFE_PN0N_'.
Generating RTLIL representation for module `\$_DFFE_PP1P_'.
Generating RTLIL representation for module `\$_DFFE_PP1N_'.
Generating RTLIL representation for module `\$_DFFE_PN1P_'.
Generating RTLIL representation for module `\$_DFFE_PN1N_'.
Generating RTLIL representation for module `\$_DFFSR_PPP_'.
Generating RTLIL representation for module `\$_DFFSR_PNP_'.
Generating RTLIL representation for module `\$_DFFSR_PNN_'.
Generating RTLIL representation for module `\$_DFFSR_PPN_'.
Generating RTLIL representation for module `\$_DFFSR_NPP_'.
Generating RTLIL representation for module `\$_DFFSR_NNP_'.
Generating RTLIL representation for module `\$_DFFSR_NNN_'.
Generating RTLIL representation for module `\$_DFFSR_NPN_'.
Generating RTLIL representation for module `\$_DFFSRE_PPPP_'.
Generating RTLIL representation for module `\$_DFFSRE_PNPP_'.
Generating RTLIL representation for module `\$_DFFSRE_PPNP_'.
Generating RTLIL representation for module `\$_DFFSRE_PNNP_'.
Generating RTLIL representation for module `\$_DFFSRE_PPPN_'.
Generating RTLIL representation for module `\$_DFFSRE_PNPN_'.
Generating RTLIL representation for module `\$_DFFSRE_PPNN_'.
Generating RTLIL representation for module `\$_DFFSRE_PNNN_'.
Generating RTLIL representation for module `\$_DLATCHSR_PPP_'.
Generating RTLIL representation for module `\$_DLATCHSR_NPP_'.
Generating RTLIL representation for module `\$_DFF_N_'.
Generating RTLIL representation for module `\$_DFF_NP0_'.
Generating RTLIL representation for module `\$_DFF_NN0_'.
Generating RTLIL representation for module `\$_DFF_NP1_'.
Generating RTLIL representation for module `\$_DFF_NN1_'.
Generating RTLIL representation for module `\$_DFFE_NP_'.
Generating RTLIL representation for module `\$_DFFE_NN_'.
Generating RTLIL representation for module `\$_DFFE_NP0P_'.
Generating RTLIL representation for module `\$_DFFE_NP0N_'.
Generating RTLIL representation for module `\$_DFFE_NN0P_'.
Generating RTLIL representation for module `\$_DFFE_NN0N_'.
Generating RTLIL representation for module `\$_DFFE_NP1P_'.
Generating RTLIL representation for module `\$_DFFE_NP1N_'.
Generating RTLIL representation for module `\$_DFFE_NN1P_'.
Generating RTLIL representation for module `\$_DFFE_NN1N_'.
Generating RTLIL representation for module `\$_DFFSRE_NPPP_'.
Generating RTLIL representation for module `\$_DFFSRE_NNPP_'.
Generating RTLIL representation for module `\$_DFFSRE_NPNP_'.
Generating RTLIL representation for module `\$_DFFSRE_NNNP_'.
Generating RTLIL representation for module `\$_DFFSRE_NPPN_'.
Generating RTLIL representation for module `\$_DFFSRE_NNPN_'.
Generating RTLIL representation for module `\$_DFFSRE_NPNN_'.
Generating RTLIL representation for module `\$_DFFSRE_NNNN_'.
Generating RTLIL representation for module `\$__SHREG_DFF_P_'.
Generating RTLIL representation for module `\$_SDFF_PP0_'.
Generating RTLIL representation for module `\$_SDFF_PN0_'.
Generating RTLIL representation for module `\$_SDFF_NP0_'.
Generating RTLIL representation for module `\$_SDFF_NN0_'.
Generating RTLIL representation for module `\$_SDFF_PP1_'.
Generating RTLIL representation for module `\$_SDFF_PN1_'.
Generating RTLIL representation for module `\$_SDFF_NP1_'.
Generating RTLIL representation for module `\$_SDFF_NN1_'.
Successfully finished Verilog frontend.

3.166.3. Continuing TECHMAP pass.
Using template \$_DFFE_PP0P_ for cells of type $_DFFE_PP0P_.
Using template \$_DFFE_PN0P_ for cells of type $_DFFE_PN0P_.
Using extmapper simplemap for cells of type $lut.
Using template \$_DFFE_PN1P_ for cells of type $_DFFE_PN1P_.
Using template \$_DFF_PN0_ for cells of type $_DFF_PN0_.
Using template \$_DFF_P_ for cells of type $_DFF_P_.
Using template \$_DFF_PN1_ for cells of type $_DFF_PN1_.
Using extmapper simplemap for cells of type $logic_not.
No more expansions possible.
<suppressed ~953 debug messages>

yosys> opt_expr -mux_undef

3.167. Executing OPT_EXPR pass (perform const folding).
Optimizing module top.
<suppressed ~9284 debug messages>

yosys> simplemap

3.168. Executing SIMPLEMAP pass (map simple cells to gate primitives).

yosys> opt_expr

3.169. Executing OPT_EXPR pass (perform const folding).
Optimizing module top.

yosys> opt_merge

3.170. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\top'.
<suppressed ~2046 debug messages>
Removed a total of 682 cells.

yosys> opt_dff -nodffe -nosdff

3.171. Executing OPT_DFF pass (perform DFF optimizations).

yosys> opt_clean

3.172. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \top..
Removed 8 unused cells and 2407 unused wires.
<suppressed ~9 debug messages>

yosys> opt_expr

3.173. Executing OPT_EXPR pass (perform const folding).
Optimizing module top.
<suppressed ~163 debug messages>

yosys> opt_merge -nomux

3.174. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\top'.
<suppressed ~6 debug messages>
Removed a total of 2 cells.

yosys> opt_muxtree

3.175. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \top..
  Creating internal representation of mux trees.
  No muxes found in this module.
Removed 0 multiplexer ports.

yosys> opt_reduce

3.176. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \top.
Performed a total of 0 changes.

yosys> opt_merge

3.177. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\top'.
Removed a total of 0 cells.

yosys> opt_share

3.178. Executing OPT_SHARE pass.

yosys> opt_dff -nosdff -nodffe

3.179. Executing OPT_DFF pass (perform DFF optimizations).

yosys> opt_clean

3.180. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \top..
Removed 0 unused cells and 28 unused wires.
<suppressed ~1 debug messages>

yosys> opt_expr

3.181. Executing OPT_EXPR pass (perform const folding).
Optimizing module top.
MAX OPT ITERATION = 1

yosys> abc -script /tmp/yosys_hJV4W4/abc_tmp_2.scr

3.182. Executing ABC pass (technology mapping using ABC).

3.182.1. Extracting gate netlist of module `\top' to `<abc-temp-dir>/input.blif'..
Extracted 1585 gates and 1917 wires to a netlist network with 330 inputs and 230 outputs.

3.182.1.1. Executing ABC.
DE:   #PIs = 330  #Luts =   375  Max Lvl =   5  Avg Lvl =   2.01  [   0.22 sec. at Pass 0]{firstMap}
DE:   #PIs = 330  #Luts =   370  Max Lvl =   8  Avg Lvl =   2.50  [   2.97 sec. at Pass 1]{initMapFlow}
DE:   #PIs = 330  #Luts =   370  Max Lvl =   8  Avg Lvl =   2.50  [   0.68 sec. at Pass 2]{map}
DE:   #PIs = 330  #Luts =   369  Max Lvl =   7  Avg Lvl =   2.47  [   0.69 sec. at Pass 3]{postMap}
DE:   #PIs = 330  #Luts =   369  Max Lvl =   7  Avg Lvl =   2.47  [   0.90 sec. at Pass 4]{map}
DE:   #PIs = 330  #Luts =   369  Max Lvl =   7  Avg Lvl =   2.47  [   1.83 sec. at Pass 5]{postMap}
DE:   #PIs = 330  #Luts =   369  Max Lvl =   7  Avg Lvl =   2.47  [   0.85 sec. at Pass 6]{map}
DE:   #PIs = 330  #Luts =   369  Max Lvl =   7  Avg Lvl =   2.47  [   3.86 sec. at Pass 7]{pushMap}
DE:   #PIs = 330  #Luts =   369  Max Lvl =   7  Avg Lvl =   2.47  [   0.59 sec. at Pass 8]{finalMap}

yosys> opt_expr

3.183. Executing OPT_EXPR pass (perform const folding).
Optimizing module top.

yosys> opt_merge -nomux

3.184. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\top'.
Removed a total of 0 cells.

yosys> opt_muxtree

3.185. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \top..
  Creating internal representation of mux trees.
  No muxes found in this module.
Removed 0 multiplexer ports.

yosys> opt_reduce

3.186. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \top.
Performed a total of 0 changes.

yosys> opt_merge

3.187. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\top'.
Removed a total of 0 cells.

yosys> opt_share

3.188. Executing OPT_SHARE pass.

yosys> opt_dff -nosdff -nodffe

3.189. Executing OPT_DFF pass (perform DFF optimizations).

yosys> opt_clean

3.190. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \top..
Removed 0 unused cells and 1609 unused wires.
<suppressed ~1 debug messages>

yosys> opt_expr

3.191. Executing OPT_EXPR pass (perform const folding).
Optimizing module top.
MAX OPT ITERATION = 1

yosys> hierarchy -check

3.192. Executing HIERARCHY pass (managing design hierarchy).

3.192.1. Analyzing design hierarchy..
Top module:  \top

3.192.2. Analyzing design hierarchy..
Top module:  \top
Removed 0 unused modules.

yosys> stat

3.193. Printing statistics.

=== top ===

   Number of wires:                803
   Number of wire bits:           1345
   Number of public wires:         195
   Number of public wire bits:     737
   Number of memories:               0
   Number of memory bits:            0
   Number of processes:              0
   Number of cells:                700
     $lut                          369
     dffsre                        331


yosys> opt_clean -purge

3.194. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \top..
Removed 0 unused cells and 146 unused wires.
<suppressed ~146 debug messages>

yosys> write_verilog -noattr -nohex synthesized.v

3.195. Executing Verilog backend.
Dumping module `\top'.

Warnings: 9 unique messages, 9 total
End of script. Logfile hash: e573944343, CPU: user 7.55s system 0.17s, MEM: 61.83 MB peak
Yosys 0.18+10 (git sha1 7361c89db, gcc 9.4.0-1ubuntu1~20.04.1 -fPIC -Os)
Time spent: 98% 6x abc (292 sec), 0% 39x opt_expr (1 sec), ...
real 105.27
user 276.58
sys 22.33
