
 /----------------------------------------------------------------------------\
 |                                                                            |
 |  yosys -- Yosys Open SYnthesis Suite                                       |
 |                                                                            |
 |  Copyright (C) 2012 - 2020  Claire Xenia Wolf <claire@yosyshq.com>         |
 |                                                                            |
 |  Permission to use, copy, modify, and/or distribute this software for any  |
 |  purpose with or without fee is hereby granted, provided that the above    |
 |  copyright notice and this permission notice appear in all copies.         |
 |                                                                            |
 |  THE SOFTWARE IS PROVIDED "AS IS" AND THE AUTHOR DISCLAIMS ALL WARRANTIES  |
 |  WITH REGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF          |
 |  MERCHANTABILITY AND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR   |
 |  ANY SPECIAL, DIRECT, INDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES    |
 |  WHATSOEVER RESULTING FROM LOSS OF USE, DATA OR PROFITS, WHETHER IN AN     |
 |  ACTION OF CONTRACT, NEGLIGENCE OR OTHER TORTIOUS ACTION, ARISING OUT OF   |
 |  OR IN CONNECTION WITH THE USE OR PERFORMANCE OF THIS SOFTWARE.            |
 |                                                                            |
 \----------------------------------------------------------------------------/

 Yosys-Verific 0.0.92
 Yosys 0.18+10 (git sha1 7361c89db, gcc 9.4.0-1ubuntu1~20.04.1 -fPIC -Os)


-- Executing script file `yosys.ys' --
echo on

yosys> plugin -i synth-rs

yosys> read -verific

yosys> read -incdir .

yosys> verific -vlog-incdir .

1. Executing VERIFIC (loading SystemVerilog and VHDL designs using Verific).
Built with Verific May22_SW_Release, released at Wed Jun  1 05:39:28 2022.

yosys> verilog_defaults -add -I.

yosys> read -vhdl rtea.vhdl

yosys> verific -vhdl rtea.vhdl

2. Executing VERIFIC (loading SystemVerilog and VHDL designs using Verific).
Built with Verific May22_SW_Release, released at Wed Jun  1 05:39:28 2022.
VERIFIC-INFO [VHDL-1504] default VHDL library search path is now "/nfs_scratch/scratch/Vorak/aram/Workspace/Raptor/yosys_verific_rs/yosys/install/share/yosys/verific/vhdl_vdbs_2008"
VERIFIC-COMMENT [VHDL-1481] Analyzing VHDL file 'rtea.vhdl'
VERIFIC-COMMENT [VHDL-1493] Restoring VHDL unit 'ieee.std_logic_1164' from file '/nfs_scratch/scratch/Vorak/aram/Workspace/Raptor/yosys_verific_rs/yosys/install/share/yosys/verific/vhdl_vdbs_2008/ieee/std_logic_1164.vdb'
VERIFIC-COMMENT [VHDL-1493] Restoring VHDL unit 'std.standard' from file '/nfs_scratch/scratch/Vorak/aram/Workspace/Raptor/yosys_verific_rs/yosys/install/share/yosys/verific/vhdl_vdbs_2008/std/standard.vdb'
VERIFIC-COMMENT [VHDL-1493] Restoring VHDL unit 'std.textio' from file '/nfs_scratch/scratch/Vorak/aram/Workspace/Raptor/yosys_verific_rs/yosys/install/share/yosys/verific/vhdl_vdbs_2008/std/textio.vdb'
VERIFIC-COMMENT [VHDL-1493] Restoring VHDL unit 'ieee.numeric_std' from file '/nfs_scratch/scratch/Vorak/aram/Workspace/Raptor/yosys_verific_rs/yosys/install/share/yosys/verific/vhdl_vdbs_2008/ieee/numeric_std.vdb'
VERIFIC-INFO [VHDL-1012] rtea.vhdl:20: analyzing entity 'rtea'
VERIFIC-INFO [VHDL-1010] rtea.vhdl:34: analyzing architecture 'behave'

yosys> synth_rs -top rtea -tech genesis -goal area -de -no_dsp -no_bram -verilog synthesized.v

3. Executing synth_rs pass: v0.4.79

yosys> read_verilog -lib -specify -nomem2reg +/rapidsilicon/common/cells_sim.v +/rapidsilicon/genesis/cells_sim.v +/rapidsilicon/genesis/dsp_sim.v

3.1. Executing Verilog-2005 frontend: /nfs_scratch/scratch/Vorak/aram/Workspace/Raptor/yosys_verific_rs/yosys/install/bin/../share/yosys/rapidsilicon/common/cells_sim.v
Parsing Verilog input from `/nfs_scratch/scratch/Vorak/aram/Workspace/Raptor/yosys_verific_rs/yosys/install/bin/../share/yosys/rapidsilicon/common/cells_sim.v' to AST representation.
Generating RTLIL representation for module `\inv'.
Generating RTLIL representation for module `\buff'.
Generating RTLIL representation for module `\logic_0'.
Generating RTLIL representation for module `\logic_1'.
Generating RTLIL representation for module `\gclkbuff'.
Successfully finished Verilog frontend.

3.2. Executing Verilog-2005 frontend: /nfs_scratch/scratch/Vorak/aram/Workspace/Raptor/yosys_verific_rs/yosys/install/bin/../share/yosys/rapidsilicon/genesis/cells_sim.v
Parsing Verilog input from `/nfs_scratch/scratch/Vorak/aram/Workspace/Raptor/yosys_verific_rs/yosys/install/bin/../share/yosys/rapidsilicon/genesis/cells_sim.v' to AST representation.
Generating RTLIL representation for module `\dffsre'.
Generating RTLIL representation for module `\dffnsre'.
Generating RTLIL representation for module `\latchsre'.
Generating RTLIL representation for module `\latchnsre'.
Generating RTLIL representation for module `\io_scff'.
Generating RTLIL representation for module `\scff'.
Generating RTLIL representation for module `\sh_dff'.
Generating RTLIL representation for module `\adder_carry'.
Generating RTLIL representation for module `\sdffr'.
Generating RTLIL representation for module `\sdffs'.
Generating RTLIL representation for module `\TDP_BRAM18'.
Generating RTLIL representation for module `\TDP36K'.
Generating RTLIL representation for module `\BRAM2x18_TDP'.
Generating RTLIL representation for module `\BRAM2x18_SDP'.
Generating RTLIL representation for module `\_$_mem_v2_asymmetric'.
Successfully finished Verilog frontend.

3.3. Executing Verilog-2005 frontend: /nfs_scratch/scratch/Vorak/aram/Workspace/Raptor/yosys_verific_rs/yosys/install/bin/../share/yosys/rapidsilicon/genesis/dsp_sim.v
Parsing Verilog input from `/nfs_scratch/scratch/Vorak/aram/Workspace/Raptor/yosys_verific_rs/yosys/install/bin/../share/yosys/rapidsilicon/genesis/dsp_sim.v' to AST representation.
Generating RTLIL representation for module `\RS_DSP1'.
Generating RTLIL representation for module `\RS_DSP2'.
Generating RTLIL representation for module `\RS_DSP2_MULT'.
Generating RTLIL representation for module `\RS_DSP2_MULT_REGIN'.
Generating RTLIL representation for module `\RS_DSP2_MULT_REGOUT'.
Generating RTLIL representation for module `\RS_DSP2_MULT_REGIN_REGOUT'.
Generating RTLIL representation for module `\RS_DSP2_MULTADD'.
Generating RTLIL representation for module `\RS_DSP2_MULTADD_REGIN'.
Generating RTLIL representation for module `\RS_DSP2_MULTADD_REGOUT'.
Generating RTLIL representation for module `\RS_DSP2_MULTADD_REGIN_REGOUT'.
Generating RTLIL representation for module `\RS_DSP2_MULTACC'.
Generating RTLIL representation for module `\RS_DSP2_MULTACC_REGIN'.
Generating RTLIL representation for module `\RS_DSP2_MULTACC_REGOUT'.
Generating RTLIL representation for module `\RS_DSP2_MULTACC_REGIN_REGOUT'.
Generating RTLIL representation for module `\dsp_t1_20x18x64_cfg_ports'.
Generating RTLIL representation for module `\dsp_t1_10x9x32_cfg_ports'.
Generating RTLIL representation for module `\dsp_t1_sim_cfg_ports'.
Generating RTLIL representation for module `\RS_DSP3'.
Generating RTLIL representation for module `\RS_DSP3_MULT'.
Generating RTLIL representation for module `\RS_DSP3_MULT_REGIN'.
Generating RTLIL representation for module `\RS_DSP3_MULT_REGOUT'.
Generating RTLIL representation for module `\RS_DSP3_MULT_REGIN_REGOUT'.
Generating RTLIL representation for module `\RS_DSP3_MULTADD'.
Generating RTLIL representation for module `\RS_DSP3_MULTADD_REGIN'.
Generating RTLIL representation for module `\RS_DSP3_MULTADD_REGOUT'.
Generating RTLIL representation for module `\RS_DSP3_MULTADD_REGIN_REGOUT'.
Generating RTLIL representation for module `\RS_DSP3_MULTACC'.
Generating RTLIL representation for module `\RS_DSP3_MULTACC_REGIN'.
Generating RTLIL representation for module `\RS_DSP3_MULTACC_REGOUT'.
Generating RTLIL representation for module `\RS_DSP3_MULTACC_REGIN_REGOUT'.
Generating RTLIL representation for module `\dsp_t1_20x18x64_cfg_params'.
Generating RTLIL representation for module `\dsp_t1_10x9x32_cfg_params'.
Generating RTLIL representation for module `\dsp_t1_sim_cfg_params'.
Successfully finished Verilog frontend.

yosys> hierarchy -check -top rtea

3.4. Executing HIERARCHY pass (managing design hierarchy).
VERIFIC-INFO [VHDL-1067] rtea.vhdl:20: processing 'rtea(behave)'
Importing module rtea.

3.4.1. Analyzing design hierarchy..
Top module:  \rtea

3.4.2. Analyzing design hierarchy..
Top module:  \rtea
Removed 0 unused modules.

yosys> proc

3.5. Executing PROC pass (convert processes to netlists).

yosys> proc_clean

3.5.1. Executing PROC_CLEAN pass (remove empty switches from decision trees).
Cleaned up 0 empty switches.

yosys> proc_rmdead

3.5.2. Executing PROC_RMDEAD pass (remove dead branches from decision trees).
Removed a total of 0 dead cases.

yosys> proc_prune

3.5.3. Executing PROC_PRUNE pass (remove redundant assignments in processes).
Removed 0 redundant assignments.
Promoted 0 assignments to connections.

yosys> proc_init

3.5.4. Executing PROC_INIT pass (extract init attributes).

yosys> proc_arst

3.5.5. Executing PROC_ARST pass (detect async resets in processes).

yosys> proc_rom

3.5.6. Executing PROC_ROM pass (convert switches to ROMs).
Converted 0 switches.

yosys> proc_mux

3.5.7. Executing PROC_MUX pass (convert decision trees to multiplexers).

yosys> proc_dlatch

3.5.8. Executing PROC_DLATCH pass (convert process syncs to latches).

yosys> proc_dff

3.5.9. Executing PROC_DFF pass (convert process syncs to FFs).

yosys> proc_memwr

3.5.10. Executing PROC_MEMWR pass (convert process memory writes to cells).

yosys> proc_clean

3.5.11. Executing PROC_CLEAN pass (remove empty switches from decision trees).
Cleaned up 0 empty switches.

yosys> opt_expr -keepdc

3.5.12. Executing OPT_EXPR pass (perform const folding).
Optimizing module rtea.
<suppressed ~14 debug messages>

yosys> bmuxmap

3.6. Executing BMUXMAP pass.

yosys> demuxmap

3.7. Executing DEMUXMAP pass.

yosys> clean_zerowidth

yosys> flatten

3.8. Executing FLATTEN pass (flatten design).

yosys> bmuxmap

3.9. Executing BMUXMAP pass.

yosys> demuxmap

3.10. Executing DEMUXMAP pass.

yosys> clean_zerowidth

yosys> tribuf -logic -formal

3.11. Executing TRIBUF pass.

yosys> deminout

3.12. Executing DEMINOUT pass (demote inout ports to input or output).

yosys> opt_expr

3.13. Executing OPT_EXPR pass (perform const folding).
Optimizing module rtea.

yosys> opt_clean

3.14. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \rtea..
Removed 2 unused cells and 25 unused wires.
<suppressed ~19 debug messages>

yosys> check

3.15. Executing CHECK pass (checking for obvious problems).
Checking module rtea...
Found and reported 0 problems.

yosys> opt_expr

3.16. Executing OPT_EXPR pass (perform const folding).
Optimizing module rtea.

yosys> opt_merge -nomux

3.17. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\rtea'.
Removed a total of 0 cells.

yosys> opt_muxtree

3.18. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \rtea..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Removed 0 multiplexer ports.
<suppressed ~7 debug messages>

yosys> opt_reduce

3.19. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \rtea.
Performed a total of 0 changes.

yosys> opt_merge

3.20. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\rtea'.
Removed a total of 0 cells.

yosys> opt_share

3.21. Executing OPT_SHARE pass.

yosys> opt_dff -nosdff -nodffe

3.22. Executing OPT_DFF pass (perform DFF optimizations).
Removing never-active async load on $verific$round_reg$rtea.vhdl:118$127 ($aldff) from module rtea.
Removing never-active async load on $verific$r_reg$rtea.vhdl:118$124 ($aldff) from module rtea.
Removing never-active async load on $verific$l_reg$rtea.vhdl:118$123 ($aldff) from module rtea.
Removing never-active async load on $verific$dout_reg$rtea.vhdl:118$128 ($aldff) from module rtea.

yosys> opt_clean

3.23. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \rtea..

yosys> opt_expr

3.24. Executing OPT_EXPR pass (perform const folding).
Optimizing module rtea.
MAX OPT ITERATION = 1

yosys> fsm -encoding binary

3.25. Executing FSM pass (extract and optimize FSM).

yosys> fsm_detect

3.25.1. Executing FSM_DETECT pass (finding FSMs in design).

yosys> fsm_extract

3.25.2. Executing FSM_EXTRACT pass (extracting FSM from design).

yosys> fsm_opt

3.25.3. Executing FSM_OPT pass (simple optimizations of FSMs).

yosys> opt_clean

3.25.4. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \rtea..

yosys> fsm_opt

3.25.5. Executing FSM_OPT pass (simple optimizations of FSMs).

yosys> fsm_recode -encoding binary

3.25.6. Executing FSM_RECODE pass (re-assigning FSM state encoding).

yosys> fsm_info

3.25.7. Executing FSM_INFO pass (dumping all available information on FSM cells).

yosys> fsm_map

3.25.8. Executing FSM_MAP pass (mapping FSMs to basic logic).

yosys> opt_expr

3.26. Executing OPT_EXPR pass (perform const folding).
Optimizing module rtea.

yosys> opt_merge -nomux

3.27. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\rtea'.
Removed a total of 0 cells.

yosys> opt_muxtree

3.28. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \rtea..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Removed 0 multiplexer ports.
<suppressed ~7 debug messages>

yosys> opt_reduce

3.29. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \rtea.
Performed a total of 0 changes.

yosys> opt_merge

3.30. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\rtea'.
Removed a total of 0 cells.

yosys> opt_share

3.31. Executing OPT_SHARE pass.

yosys> opt_dff -nosdff -sat

3.32. Executing OPT_DFF pass (perform DFF optimizations).
Adding EN signal on $verific$run_reg$rtea.vhdl:118$126 ($dff) from module rtea (D = $verific$n1231$18, Q = \run).
Adding EN signal on $verific$round_reg$rtea.vhdl:118$127 ($dff) from module rtea (D = $verific$n1232$59, Q = \round).
Adding EN signal on $verific$r_reg$rtea.vhdl:118$124 ($dff) from module rtea (D = $verific$n1197$58, Q = \r).
Adding EN signal on $verific$mode_reg_reg$rtea.vhdl:118$125 ($dff) from module rtea (D = \mode, Q = \mode_reg).
Adding EN signal on $verific$l_reg$rtea.vhdl:118$123 ($dff) from module rtea (D = $verific$n1164$57, Q = \l).
Adding EN signal on $verific$dout_reg$rtea.vhdl:118$128 ($dff) from module rtea (D = { \r \l }, Q = \dout).

yosys> opt_clean

3.33. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \rtea..
Removed 3 unused cells and 3 unused wires.
<suppressed ~4 debug messages>

yosys> opt_expr

3.34. Executing OPT_EXPR pass (perform const folding).
Optimizing module rtea.

yosys> opt_muxtree

3.35. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \rtea..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Removed 0 multiplexer ports.
<suppressed ~5 debug messages>

yosys> opt_reduce

3.36. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \rtea.
Performed a total of 0 changes.

yosys> opt_merge

3.37. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\rtea'.
<suppressed ~3 debug messages>
Removed a total of 1 cells.

yosys> opt_share

3.38. Executing OPT_SHARE pass.

yosys> opt_dff -nosdff -sat

3.39. Executing OPT_DFF pass (perform DFF optimizations).

yosys> opt_clean

3.40. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \rtea..
Removed 0 unused cells and 1 unused wires.
<suppressed ~1 debug messages>

yosys> opt_expr

3.41. Executing OPT_EXPR pass (perform const folding).
Optimizing module rtea.

yosys> opt_muxtree

3.42. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \rtea..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Removed 0 multiplexer ports.
<suppressed ~5 debug messages>

yosys> opt_reduce

3.43. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \rtea.
Performed a total of 0 changes.

yosys> opt_merge

3.44. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\rtea'.
Removed a total of 0 cells.

yosys> opt_share

3.45. Executing OPT_SHARE pass.

yosys> opt_dff -nosdff -sat

3.46. Executing OPT_DFF pass (perform DFF optimizations).

yosys> opt_clean

3.47. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \rtea..

yosys> opt_expr

3.48. Executing OPT_EXPR pass (perform const folding).
Optimizing module rtea.
MAX OPT ITERATION = 3

yosys> wreduce -keepdc

3.49. Executing WREDUCE pass (reducing word size of cells).
Removed top 1 bits (of 3) from port B of cell rtea.$auto$opt_dff.cc:195:make_patterns_logic$134 ($ne).
Removed top 1 bits (of 2) from port B of cell rtea.$auto$opt_dff.cc:195:make_patterns_logic$146 ($ne).
Removed top 2 bits (of 3) from port B of cell rtea.$auto$opt_dff.cc:195:make_patterns_logic$132 ($ne).
Removed top 1 bits (of 2) from port B of cell rtea.$verific$equal_5$rtea.vhdl:67$66 ($eq).
Removed top 26 bits (of 32) from port B of cell rtea.$verific$add_12$rtea.vhdl:74$73 ($add).
Removed top 8 bits (of 32) from port B of cell rtea.$verific$xor_14$../vhdl_packages/vhdl_2008/src/numeric_std-body.vhdl:3548$75 ($xor).
Removed top 26 bits (of 32) from port B of cell rtea.$verific$add_18$rtea.vhdl:75$79 ($add).
Removed top 8 bits (of 32) from port B of cell rtea.$verific$xor_20$../vhdl_packages/vhdl_2008/src/numeric_std-body.vhdl:3548$81 ($xor).
Removed top 1 bits (of 33) from port A of cell rtea.$verific$sub_38$rtea.vhdl:96$94 ($sub).
Removed top 1 bits (of 33) from port B of cell rtea.$verific$sub_38$rtea.vhdl:96$94 ($sub).
Removed top 1 bits (of 33) from port Y of cell rtea.$verific$sub_38$rtea.vhdl:96$94 ($sub).
Removed top 5 bits (of 6) from port B of cell rtea.$verific$add_51$../vhdl_packages/vhdl_2008/src/numeric_std-body.vhdl:482$105 ($add).
Removed top 1 bits (of 7) from port A of cell rtea.$verific$sub_57$../vhdl_packages/vhdl_2008/src/numeric_std-body.vhdl:593$110 ($sub).
Removed top 6 bits (of 7) from port B of cell rtea.$verific$sub_57$../vhdl_packages/vhdl_2008/src/numeric_std-body.vhdl:593$110 ($sub).
Removed top 1 bits (of 7) from port Y of cell rtea.$verific$sub_57$../vhdl_packages/vhdl_2008/src/numeric_std-body.vhdl:593$110 ($sub).
Removed top 1 bits (of 7) from wire rtea.$verific$n1133$53.
Removed top 1 bits (of 33) from wire rtea.$verific$n742$40.

yosys> peepopt

3.50. Executing PEEPOPT pass (run peephole optimizers).

yosys> opt_clean

3.51. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \rtea..
Removed 0 unused cells and 4 unused wires.
<suppressed ~1 debug messages>

yosys> bmuxmap

3.52. Executing BMUXMAP pass.

yosys> demuxmap

3.53. Executing DEMUXMAP pass.

yosys> clean_zerowidth

yosys> alumacc

3.54. Executing ALUMACC pass (create $alu and $macc cells).
Extracting $alu and $macc cells in module rtea:
  creating $macc model for $verific$add_12$rtea.vhdl:74$73 ($add).
  creating $macc model for $verific$add_13$rtea.vhdl:74$74 ($add).
  creating $macc model for $verific$add_16$rtea.vhdl:74$77 ($add).
  creating $macc model for $verific$add_18$rtea.vhdl:75$79 ($add).
  creating $macc model for $verific$add_19$rtea.vhdl:75$80 ($add).
  creating $macc model for $verific$add_22$rtea.vhdl:75$83 ($add).
  creating $macc model for $verific$add_35$rtea.vhdl:93$93 ($add).
  creating $macc model for $verific$add_51$../vhdl_packages/vhdl_2008/src/numeric_std-body.vhdl:482$105 ($add).
  creating $macc model for $verific$sub_38$rtea.vhdl:96$94 ($sub).
  creating $macc model for $verific$sub_57$../vhdl_packages/vhdl_2008/src/numeric_std-body.vhdl:593$110 ($sub).
  merging $macc model for $verific$add_22$rtea.vhdl:75$83 into $verific$sub_38$rtea.vhdl:96$94.
  merging $macc model for $verific$add_19$rtea.vhdl:75$80 into $verific$sub_38$rtea.vhdl:96$94.
  merging $macc model for $verific$add_18$rtea.vhdl:75$79 into $verific$sub_38$rtea.vhdl:96$94.
  merging $macc model for $verific$add_16$rtea.vhdl:74$77 into $verific$add_35$rtea.vhdl:93$93.
  merging $macc model for $verific$add_13$rtea.vhdl:74$74 into $verific$add_35$rtea.vhdl:93$93.
  merging $macc model for $verific$add_12$rtea.vhdl:74$73 into $verific$add_35$rtea.vhdl:93$93.
  creating $alu model for $macc $verific$add_51$../vhdl_packages/vhdl_2008/src/numeric_std-body.vhdl:482$105.
  creating $alu model for $macc $verific$sub_57$../vhdl_packages/vhdl_2008/src/numeric_std-body.vhdl:593$110.
  creating $macc cell for $verific$sub_38$rtea.vhdl:96$94: $auto$alumacc.cc:365:replace_macc$158
  creating $macc cell for $verific$add_35$rtea.vhdl:93$93: $auto$alumacc.cc:365:replace_macc$159
  creating $alu cell for $verific$sub_57$../vhdl_packages/vhdl_2008/src/numeric_std-body.vhdl:593$110: $auto$alumacc.cc:485:replace_alu$160
  creating $alu cell for $verific$add_51$../vhdl_packages/vhdl_2008/src/numeric_std-body.vhdl:482$105: $auto$alumacc.cc:485:replace_alu$163
  created 2 $alu and 2 $macc cells.

yosys> opt_expr

3.55. Executing OPT_EXPR pass (perform const folding).
Optimizing module rtea.

yosys> opt_merge -nomux

3.56. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\rtea'.
Removed a total of 0 cells.

yosys> opt_muxtree

3.57. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \rtea..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Removed 0 multiplexer ports.
<suppressed ~5 debug messages>

yosys> opt_reduce

3.58. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \rtea.
Performed a total of 0 changes.

yosys> opt_merge

3.59. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\rtea'.
Removed a total of 0 cells.

yosys> opt_share

3.60. Executing OPT_SHARE pass.

yosys> opt_dff -nosdff -nodffe

3.61. Executing OPT_DFF pass (perform DFF optimizations).

yosys> opt_clean

3.62. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \rtea..
Removed 6 unused cells and 6 unused wires.
<suppressed ~9 debug messages>

yosys> opt_expr

3.63. Executing OPT_EXPR pass (perform const folding).
Optimizing module rtea.

yosys> opt_muxtree

3.64. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \rtea..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Removed 0 multiplexer ports.
<suppressed ~5 debug messages>

yosys> opt_reduce

3.65. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \rtea.
Performed a total of 0 changes.

yosys> opt_merge

3.66. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\rtea'.
Removed a total of 0 cells.

yosys> opt_share

3.67. Executing OPT_SHARE pass.

yosys> opt_dff -nosdff -nodffe

3.68. Executing OPT_DFF pass (perform DFF optimizations).

yosys> opt_clean

3.69. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \rtea..

yosys> opt_expr

3.70. Executing OPT_EXPR pass (perform const folding).
Optimizing module rtea.
MAX OPT ITERATION = 2

yosys> stat

3.71. Printing statistics.

=== rtea ===

   Number of wires:                 55
   Number of wire bits:            840
   Number of public wires:          14
   Number of public wire bits:     370
   Number of memories:               0
   Number of memory bits:            0
   Number of processes:              0
   Number of cells:                 44
     $alu                            2
     $dffe                           6
     $eq                             3
     $logic_not                      2
     $macc                           2
     $mux                           18
     $ne                             5
     $not                            1
     $reduce_and                     3
     $xor                            2


yosys> memory -nomap

3.72. Executing MEMORY pass.

yosys> opt_mem

3.72.1. Executing OPT_MEM pass (optimize memories).
Performed a total of 0 transformations.

yosys> opt_mem_priority

3.72.2. Executing OPT_MEM_PRIORITY pass (removing unnecessary memory write priority relations).
Performed a total of 0 transformations.

yosys> opt_mem_feedback

3.72.3. Executing OPT_MEM_FEEDBACK pass (finding memory read-to-write feedback paths).

yosys> memory_bmux2rom

3.72.4. Executing MEMORY_BMUX2ROM pass (converting muxes to ROMs).

yosys> memory_dff

3.72.5. Executing MEMORY_DFF pass (merging $dff cells to $memrd).

yosys> opt_clean

3.72.6. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \rtea..

yosys> memory_share

3.72.7. Executing MEMORY_SHARE pass (consolidating $memrd/$memwr cells).

yosys> opt_mem_widen

3.72.8. Executing OPT_MEM_WIDEN pass (optimize memories where all ports are wide).
Performed a total of 0 transformations.

yosys> opt_clean

3.72.9. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \rtea..

yosys> memory_collect

3.72.10. Executing MEMORY_COLLECT pass (generating $mem cells).

yosys> stat

3.73. Printing statistics.

=== rtea ===

   Number of wires:                 55
   Number of wire bits:            840
   Number of public wires:          14
   Number of public wire bits:     370
   Number of memories:               0
   Number of memory bits:            0
   Number of processes:              0
   Number of cells:                 44
     $alu                            2
     $dffe                           6
     $eq                             3
     $logic_not                      2
     $macc                           2
     $mux                           18
     $ne                             5
     $not                            1
     $reduce_and                     3
     $xor                            2


yosys> muxpack

3.74. Executing MUXPACK pass ($mux cell cascades to $pmux).
Converting rtea.$verific$mux_7$rtea.vhdl:68$68 ... rtea.$verific$mux_9$rtea.vhdl:69$70 to a pmux with 3 cases.
Converted 3 (p)mux cells into 1 pmux cells.
<suppressed ~17 debug messages>

yosys> opt_clean

3.75. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \rtea..
Removed 0 unused cells and 2 unused wires.
<suppressed ~1 debug messages>

yosys> pmuxtree

3.76. Executing PMUXTREE pass.

yosys> muxpack

3.77. Executing MUXPACK pass ($mux cell cascades to $pmux).
Converted 0 (p)mux cells into 0 pmux cells.
<suppressed ~17 debug messages>

yosys> memory_map

3.78. Executing MEMORY_MAP pass (converting memories to logic and flip-flops).

yosys> stat

3.79. Printing statistics.

=== rtea ===

   Number of wires:                 59
   Number of wire bits:            875
   Number of public wires:          14
   Number of public wire bits:     370
   Number of memories:               0
   Number of memory bits:            0
   Number of processes:              0
   Number of cells:                 47
     $alu                            2
     $dffe                           6
     $eq                             3
     $logic_not                      2
     $macc                           2
     $mux                           18
     $ne                             5
     $not                            2
     $or                             1
     $reduce_and                     3
     $reduce_or                      1
     $xor                            2


yosys> techmap -map +/techmap.v -map +/rapidsilicon/genesis/arith_map.v

3.80. Executing TECHMAP pass (map to technology primitives).

3.80.1. Executing Verilog-2005 frontend: /nfs_scratch/scratch/Vorak/aram/Workspace/Raptor/yosys_verific_rs/yosys/install/bin/../share/yosys/techmap.v
Parsing Verilog input from `/nfs_scratch/scratch/Vorak/aram/Workspace/Raptor/yosys_verific_rs/yosys/install/bin/../share/yosys/techmap.v' to AST representation.
Generating RTLIL representation for module `\_90_simplemap_bool_ops'.
Generating RTLIL representation for module `\_90_simplemap_reduce_ops'.
Generating RTLIL representation for module `\_90_simplemap_logic_ops'.
Generating RTLIL representation for module `\_90_simplemap_compare_ops'.
Generating RTLIL representation for module `\_90_simplemap_various'.
Generating RTLIL representation for module `\_90_simplemap_registers'.
Generating RTLIL representation for module `\_90_shift_ops_shr_shl_sshl_sshr'.
Generating RTLIL representation for module `\_90_shift_shiftx'.
Generating RTLIL representation for module `\_90_fa'.
Generating RTLIL representation for module `\_90_lcu'.
Generating RTLIL representation for module `\_90_alu'.
Generating RTLIL representation for module `\_90_macc'.
Generating RTLIL representation for module `\_90_alumacc'.
Generating RTLIL representation for module `\$__div_mod_u'.
Generating RTLIL representation for module `\$__div_mod_trunc'.
Generating RTLIL representation for module `\_90_div'.
Generating RTLIL representation for module `\_90_mod'.
Generating RTLIL representation for module `\$__div_mod_floor'.
Generating RTLIL representation for module `\_90_divfloor'.
Generating RTLIL representation for module `\_90_modfloor'.
Generating RTLIL representation for module `\_90_pow'.
Generating RTLIL representation for module `\_90_pmux'.
Generating RTLIL representation for module `\_90_demux'.
Generating RTLIL representation for module `\_90_lut'.
Successfully finished Verilog frontend.

3.80.2. Executing Verilog-2005 frontend: /nfs_scratch/scratch/Vorak/aram/Workspace/Raptor/yosys_verific_rs/yosys/install/bin/../share/yosys/rapidsilicon/genesis/arith_map.v
Parsing Verilog input from `/nfs_scratch/scratch/Vorak/aram/Workspace/Raptor/yosys_verific_rs/yosys/install/bin/../share/yosys/rapidsilicon/genesis/arith_map.v' to AST representation.
Generating RTLIL representation for module `\_80_rs_alu'.
Successfully finished Verilog frontend.

3.80.3. Continuing TECHMAP pass.
Using extmapper simplemap for cells of type $dffe.
Using extmapper simplemap for cells of type $ne.
Using extmapper simplemap for cells of type $not.
Using extmapper simplemap for cells of type $or.
Using extmapper simplemap for cells of type $reduce_or.
Using extmapper simplemap for cells of type $mux.
Using extmapper simplemap for cells of type $reduce_and.
Using extmapper maccmap for cells of type $macc.
  add \r (32 bits, unsigned)
  sub \l (32 bits, unsigned)
  sub $verific$n416$29 (32 bits, unsigned)
  sub \key_slice (32 bits, unsigned)
  sub \round (6 bits, unsigned)
  packed 4 (1) bits / 1 words into adder tree
Using extmapper simplemap for cells of type $logic_not.
Using extmapper simplemap for cells of type $eq.
Using extmapper simplemap for cells of type $xor.
Using template $paramod$a04dd9d4d8b430140c4ff94b50470fb380fda2a0\_90_alu for cells of type $alu.
  add \l (32 bits, unsigned)
  add \r (32 bits, unsigned)
  add $verific$n215$24 (32 bits, unsigned)
  add \key_slice (32 bits, unsigned)
  add \round (6 bits, unsigned)
Using template $paramod$32efbfac1c4dc57230cf86180788fdfd12e3b511\_90_alu for cells of type $alu.
Using template $paramod\_90_fa\WIDTH=32'00000000000000000000000000100000 for cells of type $fa.
Using template $paramod$61e2435132e1ce40c0d75c6c88e4344ff37fc23f\_80_rs_alu for cells of type $alu.
Using extmapper simplemap for cells of type $and.
Using template $paramod\_90_lcu\WIDTH=32'00000000000000000000000000000110 for cells of type $lcu.
Using extmapper simplemap for cells of type $pos.
Using template $paramod$fbc7873bff55778c0b3173955b7e4bce1d9d6834\_90_alu for cells of type $alu.
Using template $paramod\_90_lcu\WIDTH=32'00000000000000000000000000100000 for cells of type $lcu.
No more expansions possible.
<suppressed ~951 debug messages>

yosys> stat

3.81. Printing statistics.

=== rtea ===

   Number of wires:                424
   Number of wire bits:           8822
   Number of public wires:          14
   Number of public wire bits:     370
   Number of memories:               0
   Number of memory bits:            0
   Number of processes:              0
   Number of cells:               2202
     $_AND_                        535
     $_DFFE_PN_                      1
     $_DFFE_PP_                    135
     $_MUX_                        400
     $_NOT_                        211
     $_OR_                         291
     $_XOR_                        597
     adder_carry                    32


yosys> opt_expr

3.82. Executing OPT_EXPR pass (perform const folding).
Optimizing module rtea.
<suppressed ~436 debug messages>

yosys> opt_merge -nomux

3.83. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\rtea'.
<suppressed ~129 debug messages>
Removed a total of 43 cells.

yosys> opt_muxtree

3.84. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \rtea..
  Creating internal representation of mux trees.
  No muxes found in this module.
Removed 0 multiplexer ports.

yosys> opt_reduce

3.85. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \rtea.
Performed a total of 0 changes.

yosys> opt_merge

3.86. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\rtea'.
Removed a total of 0 cells.

yosys> opt_share

3.87. Executing OPT_SHARE pass.

yosys> opt_dff -nosdff -nodffe

3.88. Executing OPT_DFF pass (perform DFF optimizations).

yosys> opt_clean

3.89. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \rtea..
Removed 103 unused cells and 265 unused wires.
<suppressed ~104 debug messages>

yosys> opt_expr

3.90. Executing OPT_EXPR pass (perform const folding).
Optimizing module rtea.

yosys> opt_muxtree

3.91. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \rtea..
  Creating internal representation of mux trees.
  No muxes found in this module.
Removed 0 multiplexer ports.

yosys> opt_reduce

3.92. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \rtea.
Performed a total of 0 changes.

yosys> opt_merge

3.93. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\rtea'.
Removed a total of 0 cells.

yosys> opt_share

3.94. Executing OPT_SHARE pass.

yosys> opt_dff -nosdff -nodffe

3.95. Executing OPT_DFF pass (perform DFF optimizations).

yosys> opt_clean

3.96. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \rtea..

yosys> opt_expr

3.97. Executing OPT_EXPR pass (perform const folding).
Optimizing module rtea.
MAX OPT ITERATION = 2

yosys> opt_expr -full

3.98. Executing OPT_EXPR pass (perform const folding).
Optimizing module rtea.
<suppressed ~81 debug messages>

yosys> techmap -map +/techmap.v

3.99. Executing TECHMAP pass (map to technology primitives).

3.99.1. Executing Verilog-2005 frontend: /nfs_scratch/scratch/Vorak/aram/Workspace/Raptor/yosys_verific_rs/yosys/install/bin/../share/yosys/techmap.v
Parsing Verilog input from `/nfs_scratch/scratch/Vorak/aram/Workspace/Raptor/yosys_verific_rs/yosys/install/bin/../share/yosys/techmap.v' to AST representation.
Generating RTLIL representation for module `\_90_simplemap_bool_ops'.
Generating RTLIL representation for module `\_90_simplemap_reduce_ops'.
Generating RTLIL representation for module `\_90_simplemap_logic_ops'.
Generating RTLIL representation for module `\_90_simplemap_compare_ops'.
Generating RTLIL representation for module `\_90_simplemap_various'.
Generating RTLIL representation for module `\_90_simplemap_registers'.
Generating RTLIL representation for module `\_90_shift_ops_shr_shl_sshl_sshr'.
Generating RTLIL representation for module `\_90_shift_shiftx'.
Generating RTLIL representation for module `\_90_fa'.
Generating RTLIL representation for module `\_90_lcu'.
Generating RTLIL representation for module `\_90_alu'.
Generating RTLIL representation for module `\_90_macc'.
Generating RTLIL representation for module `\_90_alumacc'.
Generating RTLIL representation for module `\$__div_mod_u'.
Generating RTLIL representation for module `\$__div_mod_trunc'.
Generating RTLIL representation for module `\_90_div'.
Generating RTLIL representation for module `\_90_mod'.
Generating RTLIL representation for module `\$__div_mod_floor'.
Generating RTLIL representation for module `\_90_divfloor'.
Generating RTLIL representation for module `\_90_modfloor'.
Generating RTLIL representation for module `\_90_pow'.
Generating RTLIL representation for module `\_90_pmux'.
Generating RTLIL representation for module `\_90_demux'.
Generating RTLIL representation for module `\_90_lut'.
Successfully finished Verilog frontend.

3.99.2. Continuing TECHMAP pass.
No more expansions possible.
<suppressed ~71 debug messages>

yosys> opt_expr

3.100. Executing OPT_EXPR pass (perform const folding).
Optimizing module rtea.

yosys> opt_merge -nomux

3.101. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\rtea'.
<suppressed ~3 debug messages>
Removed a total of 1 cells.

yosys> opt_muxtree

3.102. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \rtea..
  Creating internal representation of mux trees.
  No muxes found in this module.
Removed 0 multiplexer ports.

yosys> opt_reduce

3.103. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \rtea.
Performed a total of 0 changes.

yosys> opt_merge

3.104. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\rtea'.
Removed a total of 0 cells.

yosys> opt_dff -nosdff -nodffe -sat

3.105. Executing OPT_DFF pass (perform DFF optimizations).

yosys> opt_clean

3.106. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \rtea..
Removed 0 unused cells and 8 unused wires.
<suppressed ~1 debug messages>

yosys> opt_expr

3.107. Executing OPT_EXPR pass (perform const folding).
Optimizing module rtea.
MAX OPT ITERATION = 1

yosys> abc -dff

3.108. Executing ABC pass (technology mapping using ABC).

3.108.1. Summary of detected clock domains:
  68 cells in clk=\clk, en=$auto$opt_dff.cc:219:make_patterns_logic$142, arst={ }, srst={ }
  1514 cells in clk=\clk, en=$auto$opt_dff.cc:194:make_patterns_logic$145, arst={ }, srst={ }
  12 cells in clk=\clk, en=!\start, arst={ }, srst={ }
  65 cells in clk=\clk, en=$auto$opt_dff.cc:219:make_patterns_logic$154, arst={ }, srst={ }
  8 cells in clk=\clk, en=$auto$opt_dff.cc:219:make_patterns_logic$135, arst={ }, srst={ }

3.108.2. Extracting gate netlist of module `\rtea' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk, enabled by $auto$opt_dff.cc:219:make_patterns_logic$142
Extracted 68 gates and 84 wires to a netlist network with 16 inputs and 35 outputs.

3.108.2.1. Executing ABC.

3.108.3. Extracting gate netlist of module `\rtea' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk, enabled by $auto$opt_dff.cc:194:make_patterns_logic$145
Extracted 1482 gates and 1730 wires to a netlist network with 248 inputs and 125 outputs.

3.108.3.1. Executing ABC.

3.108.4. Extracting gate netlist of module `\rtea' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk, enabled by !\start
Extracted 12 gates and 28 wires to a netlist network with 16 inputs and 8 outputs.

3.108.4.1. Executing ABC.

3.108.5. Extracting gate netlist of module `\rtea' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk, enabled by $auto$opt_dff.cc:219:make_patterns_logic$154
Extracted 65 gates and 131 wires to a netlist network with 66 inputs and 65 outputs.

3.108.5.1. Executing ABC.

3.108.6. Extracting gate netlist of module `\rtea' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk, enabled by $auto$opt_dff.cc:219:make_patterns_logic$135
Extracted 8 gates and 13 wires to a netlist network with 5 inputs and 4 outputs.

3.108.6.1. Executing ABC.

yosys> abc -dff

3.109. Executing ABC pass (technology mapping using ABC).

3.109.1. Summary of detected clock domains:
  553 cells in clk=\clk, en=!\start, arst={ }, srst={ }
  44 cells in clk=\clk, en=$abc$2942$auto$opt_dff.cc:219:make_patterns_logic$142, arst={ }, srst={ }
  1014 cells in clk=\clk, en=$abc$2997$auto$opt_dff.cc:194:make_patterns_logic$145, arst={ }, srst={ }
  65 cells in clk=\clk, en=$abc$4589$auto$opt_dff.cc:219:make_patterns_logic$154, arst={ }, srst={ }
  6 cells in clk=\clk, en=$abc$4783$auto$opt_dff.cc:219:make_patterns_logic$135, arst={ }, srst={ }

3.109.2. Extracting gate netlist of module `\rtea' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk, enabled by !\start
Extracted 525 gates and 826 wires to a netlist network with 301 inputs and 161 outputs.

3.109.2.1. Executing ABC.

3.109.3. Extracting gate netlist of module `\rtea' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk, enabled by $abc$2942$auto$opt_dff.cc:219:make_patterns_logic$142
Extracted 44 gates and 58 wires to a netlist network with 14 inputs and 31 outputs.

3.109.3.1. Executing ABC.

3.109.4. Extracting gate netlist of module `\rtea' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk, enabled by $abc$2997$auto$opt_dff.cc:194:make_patterns_logic$145
Extracted 1010 gates and 1258 wires to a netlist network with 248 inputs and 202 outputs.

3.109.4.1. Executing ABC.

3.109.5. Extracting gate netlist of module `\rtea' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk, enabled by $abc$4589$auto$opt_dff.cc:219:make_patterns_logic$154
Extracted 65 gates and 131 wires to a netlist network with 66 inputs and 65 outputs.

3.109.5.1. Executing ABC.

3.109.6. Extracting gate netlist of module `\rtea' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk, enabled by $abc$4783$auto$opt_dff.cc:219:make_patterns_logic$135
Extracted 6 gates and 11 wires to a netlist network with 5 inputs and 3 outputs.

3.109.6.1. Executing ABC.

yosys> abc -dff

3.110. Executing ABC pass (technology mapping using ABC).

3.110.1. Summary of detected clock domains:
  471 cells in clk=\clk, en=!\start, arst={ }, srst={ }
  48 cells in clk=\clk, en=$abc$5287$abc$2942$auto$opt_dff.cc:219:make_patterns_logic$142, arst={ }, srst={ }
  1064 cells in clk=\clk, en=$abc$5334$abc$2997$auto$opt_dff.cc:194:make_patterns_logic$145, arst={ }, srst={ }
  65 cells in clk=\clk, en=$abc$6414$abc$4589$auto$opt_dff.cc:219:make_patterns_logic$154, arst={ }, srst={ }
  6 cells in clk=\clk, en=$abc$6608$abc$4783$auto$opt_dff.cc:219:make_patterns_logic$135, arst={ }, srst={ }

3.110.2. Extracting gate netlist of module `\rtea' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk, enabled by !\start
Extracted 443 gates and 724 wires to a netlist network with 281 inputs and 151 outputs.

3.110.2.1. Executing ABC.

3.110.3. Extracting gate netlist of module `\rtea' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk, enabled by $abc$5287$abc$2942$auto$opt_dff.cc:219:make_patterns_logic$142
Extracted 48 gates and 62 wires to a netlist network with 14 inputs and 31 outputs.

3.110.3.1. Executing ABC.

3.110.4. Extracting gate netlist of module `\rtea' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk, enabled by $abc$5334$abc$2997$auto$opt_dff.cc:194:make_patterns_logic$145
Extracted 1060 gates and 1302 wires to a netlist network with 242 inputs and 189 outputs.

3.110.4.1. Executing ABC.

3.110.5. Extracting gate netlist of module `\rtea' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk, enabled by $abc$6414$abc$4589$auto$opt_dff.cc:219:make_patterns_logic$154
Extracted 65 gates and 131 wires to a netlist network with 66 inputs and 65 outputs.

3.110.5.1. Executing ABC.

3.110.6. Extracting gate netlist of module `\rtea' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk, enabled by $abc$6608$abc$4783$auto$opt_dff.cc:219:make_patterns_logic$135
Extracted 6 gates and 11 wires to a netlist network with 5 inputs and 3 outputs.

3.110.6.1. Executing ABC.

yosys> abc -dff

3.111. Executing ABC pass (technology mapping using ABC).

3.111.1. Summary of detected clock domains:
  344 cells in clk=\clk, en=!\start, arst={ }, srst={ }
  45 cells in clk=\clk, en=$abc$7043$abc$5287$abc$2942$auto$opt_dff.cc:219:make_patterns_logic$142, arst={ }, srst={ }
  1199 cells in clk=\clk, en=$abc$7094$abc$5334$abc$2997$auto$opt_dff.cc:194:make_patterns_logic$145, arst={ }, srst={ }
  65 cells in clk=\clk, en=$abc$8243$abc$6414$abc$4589$auto$opt_dff.cc:219:make_patterns_logic$154, arst={ }, srst={ }
  6 cells in clk=\clk, en=$abc$8437$abc$6608$abc$4783$auto$opt_dff.cc:219:make_patterns_logic$135, arst={ }, srst={ }

3.111.2. Extracting gate netlist of module `\rtea' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk, enabled by !\start
Extracted 324 gates and 555 wires to a netlist network with 231 inputs and 131 outputs.

3.111.2.1. Executing ABC.

3.111.3. Extracting gate netlist of module `\rtea' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk, enabled by $abc$7043$abc$5287$abc$2942$auto$opt_dff.cc:219:make_patterns_logic$142
Extracted 45 gates and 56 wires to a netlist network with 11 inputs and 29 outputs.

3.111.3.1. Executing ABC.

3.111.4. Extracting gate netlist of module `\rtea' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk, enabled by $abc$7094$abc$5334$abc$2997$auto$opt_dff.cc:194:make_patterns_logic$145
Extracted 1187 gates and 1451 wires to a netlist network with 264 inputs and 201 outputs.

3.111.4.1. Executing ABC.

3.111.5. Extracting gate netlist of module `\rtea' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk, enabled by $abc$8243$abc$6414$abc$4589$auto$opt_dff.cc:219:make_patterns_logic$154
Extracted 65 gates and 131 wires to a netlist network with 66 inputs and 65 outputs.

3.111.5.1. Executing ABC.

3.111.6. Extracting gate netlist of module `\rtea' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk, enabled by $abc$8437$abc$6608$abc$4783$auto$opt_dff.cc:219:make_patterns_logic$135
Extracted 6 gates and 11 wires to a netlist network with 5 inputs and 3 outputs.

3.111.6.1. Executing ABC.

yosys> opt_ffinv

3.112. Executing OPT_FFINV pass (push inverters through FFs).
Discovering LUTs.
Pushed 0 inverters.

yosys> opt_expr

3.113. Executing OPT_EXPR pass (perform const folding).
Optimizing module rtea.
<suppressed ~17 debug messages>

yosys> opt_merge -nomux

3.114. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\rtea'.
<suppressed ~9 debug messages>
Removed a total of 3 cells.

yosys> opt_muxtree

3.115. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \rtea..
  Creating internal representation of mux trees.
  No muxes found in this module.
Removed 0 multiplexer ports.

yosys> opt_reduce

3.116. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \rtea.
Performed a total of 0 changes.

yosys> opt_merge

3.117. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\rtea'.
Removed a total of 0 cells.

yosys> opt_share

3.118. Executing OPT_SHARE pass.

yosys> opt_dff -nosdff -sat

3.119. Executing OPT_DFF pass (perform DFF optimizations).

yosys> opt_clean

3.120. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \rtea..
Removed 1 unused cells and 8242 unused wires.
<suppressed ~3 debug messages>

yosys> opt_expr

3.121. Executing OPT_EXPR pass (perform const folding).
Optimizing module rtea.

yosys> opt_muxtree

3.122. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \rtea..
  Creating internal representation of mux trees.
  No muxes found in this module.
Removed 0 multiplexer ports.

yosys> opt_reduce

3.123. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \rtea.
Performed a total of 0 changes.

yosys> opt_merge

3.124. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\rtea'.
Removed a total of 0 cells.

yosys> opt_share

3.125. Executing OPT_SHARE pass.

yosys> opt_dff -nosdff -sat

3.126. Executing OPT_DFF pass (perform DFF optimizations).

yosys> opt_clean

3.127. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \rtea..

yosys> opt_expr

3.128. Executing OPT_EXPR pass (perform const folding).
Optimizing module rtea.
MAX OPT ITERATION = 2

yosys> bmuxmap

3.129. Executing BMUXMAP pass.

yosys> demuxmap

3.130. Executing DEMUXMAP pass.

yosys> clean_zerowidth

yosys> abc -script /tmp/yosys_Hq66dD/abc_tmp_1.scr

3.131. Executing ABC pass (technology mapping using ABC).

3.131.1. Extracting gate netlist of module `\rtea' to `<abc-temp-dir>/input.blif'..
Extracted 1483 gates and 1780 wires to a netlist network with 297 inputs and 136 outputs.

3.131.1.1. Executing ABC.
DE:   #PIs = 297  #Luts =   478  Max Lvl =  15  Avg Lvl =   3.74  [   0.05 sec. at Pass 0]{firstMap}
DE:   #PIs = 297  #Luts =   444  Max Lvl =  28  Avg Lvl =   5.69  [   4.17 sec. at Pass 1]{initMapFlow}
DE:   #PIs = 297  #Luts =   423  Max Lvl =  22  Avg Lvl =   4.74  [   0.75 sec. at Pass 2]{map}
DE:   #PIs = 297  #Luts =   423  Max Lvl =  21  Avg Lvl =   4.69  [   1.06 sec. at Pass 3]{postMap}
DE:   #PIs = 297  #Luts =   418  Max Lvl =  21  Avg Lvl =   4.85  [   1.76 sec. at Pass 4]{map}
DE:   #PIs = 297  #Luts =   417  Max Lvl =  22  Avg Lvl =   4.87  [   1.86 sec. at Pass 5]{postMap}
DE:   #PIs = 297  #Luts =   414  Max Lvl =  23  Avg Lvl =   4.94  [   2.09 sec. at Pass 6]{map}
DE:   #PIs = 297  #Luts =   414  Max Lvl =  23  Avg Lvl =   4.94  [   2.61 sec. at Pass 7]{postMap}
DE:   #PIs = 297  #Luts =   414  Max Lvl =  23  Avg Lvl =   4.94  [   1.52 sec. at Pass 8]{map}
DE:   #PIs = 297  #Luts =   414  Max Lvl =  23  Avg Lvl =   4.94  [   1.97 sec. at Pass 9]{postMap}
DE:   #PIs = 297  #Luts =   405  Max Lvl =  22  Avg Lvl =   5.01  [   5.90 sec. at Pass 10]{pushMap}
DE:   #PIs = 297  #Luts =   405  Max Lvl =  22  Avg Lvl =   5.01  [   1.31 sec. at Pass 11]{map}
DE:   #PIs = 297  #Luts =   405  Max Lvl =  22  Avg Lvl =   5.01  [   2.43 sec. at Pass 12]{postMap}
DE:   #PIs = 297  #Luts =   405  Max Lvl =  22  Avg Lvl =   5.01  [   2.11 sec. at Pass 13]{map}
DE:   #PIs = 297  #Luts =   405  Max Lvl =  22  Avg Lvl =   5.01  [  12.67 sec. at Pass 14]{pushMap}
DE:   #PIs = 297  #Luts =   403  Max Lvl =  23  Avg Lvl =   5.23  [   0.60 sec. at Pass 15]{finalMap}

yosys> opt_expr

3.132. Executing OPT_EXPR pass (perform const folding).
Optimizing module rtea.

yosys> opt_merge -nomux

3.133. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\rtea'.
Removed a total of 0 cells.

yosys> opt_muxtree

3.134. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \rtea..
  Creating internal representation of mux trees.
  No muxes found in this module.
Removed 0 multiplexer ports.

yosys> opt_reduce

3.135. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \rtea.
Performed a total of 0 changes.

yosys> opt_merge

3.136. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\rtea'.
Removed a total of 0 cells.

yosys> opt_share

3.137. Executing OPT_SHARE pass.

yosys> opt_dff -nosdff -nodffe

3.138. Executing OPT_DFF pass (perform DFF optimizations).

yosys> opt_clean

3.139. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \rtea..
Removed 0 unused cells and 1773 unused wires.
<suppressed ~1 debug messages>

yosys> opt_expr

3.140. Executing OPT_EXPR pass (perform const folding).
Optimizing module rtea.
MAX OPT ITERATION = 1

yosys> opt_ffinv

3.141. Executing OPT_FFINV pass (push inverters through FFs).
Discovering LUTs.
Pushed 0 inverters.

yosys> stat

3.142. Printing statistics.

=== rtea ===

   Number of wires:                367
   Number of wire bits:            822
   Number of public wires:          13
   Number of public wire bits:     338
   Number of memories:               0
   Number of memory bits:            0
   Number of processes:              0
   Number of cells:                571
     $_DFFE_PN_                      1
     $_DFFE_PP_                    135
     $lut                          403
     adder_carry                    32


yosys> shregmap -minlen 8 -maxlen 20

3.143. Executing SHREGMAP pass (map shift registers).
Converted 0 dff cells into 0 shift registers.

yosys> dfflegalize -cell $_DFF_?_ 0 -cell $_DFF_???_ 0 -cell $_DFFE_????_ 0 -cell $_DFFSR_???_ 0 -cell $_DFFSRE_????_ 0 -cell $_DLATCHSR_PPP_ 0

3.144. Executing DFFLEGALIZE pass (convert FFs to types supported by the target).

yosys> stat

3.145. Printing statistics.

=== rtea ===

   Number of wires:                367
   Number of wire bits:            822
   Number of public wires:          13
   Number of public wire bits:     338
   Number of memories:               0
   Number of memory bits:            0
   Number of processes:              0
   Number of cells:                571
     $_DFFE_PP0N_                    1
     $_DFFE_PP0P_                  135
     $lut                          403
     adder_carry                    32


yosys> techmap -map +/techmap.v -map +/rapidsilicon/genesis/ffs_map.v

3.146. Executing TECHMAP pass (map to technology primitives).

3.146.1. Executing Verilog-2005 frontend: /nfs_scratch/scratch/Vorak/aram/Workspace/Raptor/yosys_verific_rs/yosys/install/bin/../share/yosys/techmap.v
Parsing Verilog input from `/nfs_scratch/scratch/Vorak/aram/Workspace/Raptor/yosys_verific_rs/yosys/install/bin/../share/yosys/techmap.v' to AST representation.
Generating RTLIL representation for module `\_90_simplemap_bool_ops'.
Generating RTLIL representation for module `\_90_simplemap_reduce_ops'.
Generating RTLIL representation for module `\_90_simplemap_logic_ops'.
Generating RTLIL representation for module `\_90_simplemap_compare_ops'.
Generating RTLIL representation for module `\_90_simplemap_various'.
Generating RTLIL representation for module `\_90_simplemap_registers'.
Generating RTLIL representation for module `\_90_shift_ops_shr_shl_sshl_sshr'.
Generating RTLIL representation for module `\_90_shift_shiftx'.
Generating RTLIL representation for module `\_90_fa'.
Generating RTLIL representation for module `\_90_lcu'.
Generating RTLIL representation for module `\_90_alu'.
Generating RTLIL representation for module `\_90_macc'.
Generating RTLIL representation for module `\_90_alumacc'.
Generating RTLIL representation for module `\$__div_mod_u'.
Generating RTLIL representation for module `\$__div_mod_trunc'.
Generating RTLIL representation for module `\_90_div'.
Generating RTLIL representation for module `\_90_mod'.
Generating RTLIL representation for module `\$__div_mod_floor'.
Generating RTLIL representation for module `\_90_divfloor'.
Generating RTLIL representation for module `\_90_modfloor'.
Generating RTLIL representation for module `\_90_pow'.
Generating RTLIL representation for module `\_90_pmux'.
Generating RTLIL representation for module `\_90_demux'.
Generating RTLIL representation for module `\_90_lut'.
Successfully finished Verilog frontend.

3.146.2. Executing Verilog-2005 frontend: /nfs_scratch/scratch/Vorak/aram/Workspace/Raptor/yosys_verific_rs/yosys/install/bin/../share/yosys/rapidsilicon/genesis/ffs_map.v
Parsing Verilog input from `/nfs_scratch/scratch/Vorak/aram/Workspace/Raptor/yosys_verific_rs/yosys/install/bin/../share/yosys/rapidsilicon/genesis/ffs_map.v' to AST representation.
Generating RTLIL representation for module `\$_DFF_P_'.
Generating RTLIL representation for module `\$_DFF_PP0_'.
Generating RTLIL representation for module `\$_DFF_PN0_'.
Generating RTLIL representation for module `\$_DFF_PP1_'.
Generating RTLIL representation for module `\$_DFF_PN1_'.
Generating RTLIL representation for module `\$_DFFE_PP_'.
Generating RTLIL representation for module `\$_DFFE_PN_'.
Generating RTLIL representation for module `\$_DFFE_PP0P_'.
Generating RTLIL representation for module `\$_DFFE_PP0N_'.
Generating RTLIL representation for module `\$_DFFE_PN0P_'.
Generating RTLIL representation for module `\$_DFFE_PN0N_'.
Generating RTLIL representation for module `\$_DFFE_PP1P_'.
Generating RTLIL representation for module `\$_DFFE_PP1N_'.
Generating RTLIL representation for module `\$_DFFE_PN1P_'.
Generating RTLIL representation for module `\$_DFFE_PN1N_'.
Generating RTLIL representation for module `\$_DFFSR_PPP_'.
Generating RTLIL representation for module `\$_DFFSR_PNP_'.
Generating RTLIL representation for module `\$_DFFSR_PNN_'.
Generating RTLIL representation for module `\$_DFFSR_PPN_'.
Generating RTLIL representation for module `\$_DFFSR_NPP_'.
Generating RTLIL representation for module `\$_DFFSR_NNP_'.
Generating RTLIL representation for module `\$_DFFSR_NNN_'.
Generating RTLIL representation for module `\$_DFFSR_NPN_'.
Generating RTLIL representation for module `\$_DFFSRE_PPPP_'.
Generating RTLIL representation for module `\$_DFFSRE_PNPP_'.
Generating RTLIL representation for module `\$_DFFSRE_PPNP_'.
Generating RTLIL representation for module `\$_DFFSRE_PNNP_'.
Generating RTLIL representation for module `\$_DFFSRE_PPPN_'.
Generating RTLIL representation for module `\$_DFFSRE_PNPN_'.
Generating RTLIL representation for module `\$_DFFSRE_PPNN_'.
Generating RTLIL representation for module `\$_DFFSRE_PNNN_'.
Generating RTLIL representation for module `\$_DLATCHSR_PPP_'.
Generating RTLIL representation for module `\$_DLATCHSR_NPP_'.
Generating RTLIL representation for module `\$_DFF_N_'.
Generating RTLIL representation for module `\$_DFF_NP0_'.
Generating RTLIL representation for module `\$_DFF_NN0_'.
Generating RTLIL representation for module `\$_DFF_NP1_'.
Generating RTLIL representation for module `\$_DFF_NN1_'.
Generating RTLIL representation for module `\$_DFFE_NP_'.
Generating RTLIL representation for module `\$_DFFE_NN_'.
Generating RTLIL representation for module `\$_DFFE_NP0P_'.
Generating RTLIL representation for module `\$_DFFE_NP0N_'.
Generating RTLIL representation for module `\$_DFFE_NN0P_'.
Generating RTLIL representation for module `\$_DFFE_NN0N_'.
Generating RTLIL representation for module `\$_DFFE_NP1P_'.
Generating RTLIL representation for module `\$_DFFE_NP1N_'.
Generating RTLIL representation for module `\$_DFFE_NN1P_'.
Generating RTLIL representation for module `\$_DFFE_NN1N_'.
Generating RTLIL representation for module `\$_DFFSRE_NPPP_'.
Generating RTLIL representation for module `\$_DFFSRE_NNPP_'.
Generating RTLIL representation for module `\$_DFFSRE_NPNP_'.
Generating RTLIL representation for module `\$_DFFSRE_NNNP_'.
Generating RTLIL representation for module `\$_DFFSRE_NPPN_'.
Generating RTLIL representation for module `\$_DFFSRE_NNPN_'.
Generating RTLIL representation for module `\$_DFFSRE_NPNN_'.
Generating RTLIL representation for module `\$_DFFSRE_NNNN_'.
Generating RTLIL representation for module `\$__SHREG_DFF_P_'.
Generating RTLIL representation for module `\$_SDFF_PP0_'.
Generating RTLIL representation for module `\$_SDFF_PN0_'.
Generating RTLIL representation for module `\$_SDFF_NP0_'.
Generating RTLIL representation for module `\$_SDFF_NN0_'.
Generating RTLIL representation for module `\$_SDFF_PP1_'.
Generating RTLIL representation for module `\$_SDFF_PN1_'.
Generating RTLIL representation for module `\$_SDFF_NP1_'.
Generating RTLIL representation for module `\$_SDFF_NN1_'.
Successfully finished Verilog frontend.

3.146.3. Continuing TECHMAP pass.
Using template \$_DFFE_PP0P_ for cells of type $_DFFE_PP0P_.
Using template \$_DFFE_PP0N_ for cells of type $_DFFE_PP0N_.
Using extmapper simplemap for cells of type $lut.
Using extmapper simplemap for cells of type $logic_not.
No more expansions possible.
<suppressed ~812 debug messages>

yosys> opt_expr -mux_undef

3.147. Executing OPT_EXPR pass (perform const folding).
Optimizing module rtea.
<suppressed ~8408 debug messages>

yosys> simplemap

3.148. Executing SIMPLEMAP pass (map simple cells to gate primitives).

yosys> opt_expr

3.149. Executing OPT_EXPR pass (perform const folding).
Optimizing module rtea.

yosys> opt_merge

3.150. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\rtea'.
<suppressed ~9072 debug messages>
Removed a total of 3024 cells.

yosys> opt_dff -nodffe -nosdff

3.151. Executing OPT_DFF pass (perform DFF optimizations).

yosys> opt_clean

3.152. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \rtea..
Removed 0 unused cells and 1663 unused wires.
<suppressed ~1 debug messages>

yosys> opt_expr

3.153. Executing OPT_EXPR pass (perform const folding).
Optimizing module rtea.
<suppressed ~69 debug messages>

yosys> opt_merge -nomux

3.154. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\rtea'.
<suppressed ~6 debug messages>
Removed a total of 2 cells.

yosys> opt_muxtree

3.155. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \rtea..
  Creating internal representation of mux trees.
  No muxes found in this module.
Removed 0 multiplexer ports.

yosys> opt_reduce

3.156. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \rtea.
Performed a total of 0 changes.

yosys> opt_merge

3.157. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\rtea'.
Removed a total of 0 cells.

yosys> opt_share

3.158. Executing OPT_SHARE pass.

yosys> opt_dff -nosdff -nodffe

3.159. Executing OPT_DFF pass (perform DFF optimizations).

yosys> opt_clean

3.160. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \rtea..
Removed 0 unused cells and 25 unused wires.
<suppressed ~1 debug messages>

yosys> opt_expr

3.161. Executing OPT_EXPR pass (perform const folding).
Optimizing module rtea.
MAX OPT ITERATION = 1

yosys> abc -script /tmp/yosys_Hq66dD/abc_tmp_2.scr

3.162. Executing ABC pass (technology mapping using ABC).

3.162.1. Extracting gate netlist of module `\rtea' to `<abc-temp-dir>/input.blif'..
Extracted 2545 gates and 2844 wires to a netlist network with 297 inputs and 136 outputs.

3.162.1.1. Executing ABC.
DE:   #PIs = 297  #Luts =   406  Max Lvl =  19  Avg Lvl =   4.51  [   0.29 sec. at Pass 0]{firstMap}
DE:   #PIs = 297  #Luts =   406  Max Lvl =  19  Avg Lvl =   4.51  [   9.39 sec. at Pass 1]{initMapFlow}
DE:   #PIs = 297  #Luts =   406  Max Lvl =  19  Avg Lvl =   4.51  [   1.82 sec. at Pass 2]{map}
DE:   #PIs = 297  #Luts =   406  Max Lvl =  19  Avg Lvl =   4.51  [   3.02 sec. at Pass 3]{postMap}
DE:   #PIs = 297  #Luts =   406  Max Lvl =  19  Avg Lvl =   4.51  [   2.31 sec. at Pass 4]{map}
DE:   #PIs = 297  #Luts =   406  Max Lvl =  19  Avg Lvl =   4.51  [   3.42 sec. at Pass 5]{postMap}
DE:   #PIs = 297  #Luts =   402  Max Lvl =  23  Avg Lvl =   5.01  [  11.40 sec. at Pass 6]{pushMap}
DE:   #PIs = 297  #Luts =   402  Max Lvl =  23  Avg Lvl =   5.01  [   2.25 sec. at Pass 7]{map}
DE:   #PIs = 297  #Luts =   402  Max Lvl =  23  Avg Lvl =   5.01  [   2.74 sec. at Pass 8]{postMap}
DE:   #PIs = 297  #Luts =   402  Max Lvl =  23  Avg Lvl =   5.01  [   2.82 sec. at Pass 9]{map}
DE:   #PIs = 297  #Luts =   401  Max Lvl =  24  Avg Lvl =   5.27  [  16.78 sec. at Pass 10]{pushMap}
DE:   #PIs = 297  #Luts =   401  Max Lvl =  24  Avg Lvl =   5.27  [   5.54 sec. at Pass 11]{postMap}
DE:   #PIs = 297  #Luts =   401  Max Lvl =  24  Avg Lvl =   5.27  [   2.61 sec. at Pass 12]{map}
DE:   #PIs = 297  #Luts =   401  Max Lvl =  24  Avg Lvl =   5.27  [   4.01 sec. at Pass 13]{postMap}
DE:   #PIs = 297  #Luts =   398  Max Lvl =  24  Avg Lvl =   5.40  [  15.70 sec. at Pass 14]{pushMap}
DE:   #PIs = 297  #Luts =   398  Max Lvl =  24  Avg Lvl =   5.40  [   2.14 sec. at Pass 15]{map}
DE:   #PIs = 297  #Luts =   398  Max Lvl =  24  Avg Lvl =   5.40  [   4.45 sec. at Pass 16]{postMap}
DE:   #PIs = 297  #Luts =   398  Max Lvl =  24  Avg Lvl =   5.40  [   1.97 sec. at Pass 17]{map}
DE:   #PIs = 297  #Luts =   395  Max Lvl =  23  Avg Lvl =   5.21  [  11.79 sec. at Pass 18]{pushMap}
DE:   #PIs = 297  #Luts =   395  Max Lvl =  23  Avg Lvl =   5.21  [   3.21 sec. at Pass 19]{postMap}
DE:   #PIs = 297  #Luts =   395  Max Lvl =  23  Avg Lvl =   5.21  [   2.13 sec. at Pass 20]{map}
DE:   #PIs = 297  #Luts =   395  Max Lvl =  23  Avg Lvl =   5.21  [   3.26 sec. at Pass 21]{postMap}
DE:   #PIs = 297  #Luts =   395  Max Lvl =  23  Avg Lvl =   5.21  [   0.66 sec. at Pass 22]{finalMap}

yosys> opt_expr

3.163. Executing OPT_EXPR pass (perform const folding).
Optimizing module rtea.

yosys> opt_merge -nomux

3.164. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\rtea'.
Removed a total of 0 cells.

yosys> opt_muxtree

3.165. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \rtea..
  Creating internal representation of mux trees.
  No muxes found in this module.
Removed 0 multiplexer ports.

yosys> opt_reduce

3.166. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \rtea.
Performed a total of 0 changes.

yosys> opt_merge

3.167. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\rtea'.
Removed a total of 0 cells.

yosys> opt_share

3.168. Executing OPT_SHARE pass.

yosys> opt_dff -nosdff -nodffe

3.169. Executing OPT_DFF pass (perform DFF optimizations).

yosys> opt_clean

3.170. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \rtea..
Removed 0 unused cells and 1741 unused wires.
<suppressed ~1 debug messages>

yosys> opt_expr

3.171. Executing OPT_EXPR pass (perform const folding).
Optimizing module rtea.
MAX OPT ITERATION = 1

yosys> hierarchy -check

3.172. Executing HIERARCHY pass (managing design hierarchy).

3.172.1. Analyzing design hierarchy..
Top module:  \rtea

3.172.2. Analyzing design hierarchy..
Top module:  \rtea
Removed 0 unused modules.

yosys> stat

3.173. Printing statistics.

=== rtea ===

   Number of wires:                359
   Number of wire bits:            814
   Number of public wires:          13
   Number of public wire bits:     338
   Number of memories:               0
   Number of memory bits:            0
   Number of processes:              0
   Number of cells:                563
     $lut                          395
     adder_carry                    32
     dffsre                        136


yosys> opt_clean -purge

3.174. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \rtea..
Removed 0 unused cells and 3 unused wires.
<suppressed ~3 debug messages>

yosys> write_verilog -noattr -nohex synthesized.v

3.175. Executing Verilog backend.
Dumping module `\rtea'.

End of script. Logfile hash: 712290e976, CPU: user 4.99s system 0.09s, MEM: 61.53 MB peak
Yosys 0.18+10 (git sha1 7361c89db, gcc 9.4.0-1ubuntu1~20.04.1 -fPIC -Os)
Time spent: 99% 6x abc (809 sec), 0% 32x opt_expr (1 sec), ...
real 174.88
user 772.21
sys 41.92
