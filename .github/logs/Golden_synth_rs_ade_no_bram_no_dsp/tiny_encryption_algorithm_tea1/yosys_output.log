
 /----------------------------------------------------------------------------\
 |                                                                            |
 |  yosys -- Yosys Open SYnthesis Suite                                       |
 |                                                                            |
 |  Copyright (C) 2012 - 2020  Claire Xenia Wolf <claire@yosyshq.com>         |
 |                                                                            |
 |  Permission to use, copy, modify, and/or distribute this software for any  |
 |  purpose with or without fee is hereby granted, provided that the above    |
 |  copyright notice and this permission notice appear in all copies.         |
 |                                                                            |
 |  THE SOFTWARE IS PROVIDED "AS IS" AND THE AUTHOR DISCLAIMS ALL WARRANTIES  |
 |  WITH REGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF          |
 |  MERCHANTABILITY AND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR   |
 |  ANY SPECIAL, DIRECT, INDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES    |
 |  WHATSOEVER RESULTING FROM LOSS OF USE, DATA OR PROFITS, WHETHER IN AN     |
 |  ACTION OF CONTRACT, NEGLIGENCE OR OTHER TORTIOUS ACTION, ARISING OUT OF   |
 |  OR IN CONNECTION WITH THE USE OR PERFORMANCE OF THIS SOFTWARE.            |
 |                                                                            |
 \----------------------------------------------------------------------------/

 Yosys-Verific 0.0.92
 Yosys 0.18+10 (git sha1 7361c89db, gcc 9.4.0-1ubuntu1~20.04.1 -fPIC -Os)


-- Executing script file `yosys.ys' --
echo on

yosys> plugin -i synth-rs

yosys> read -verific

yosys> read -incdir .

yosys> verific -vlog-incdir .

1. Executing VERIFIC (loading SystemVerilog and VHDL designs using Verific).
Built with Verific May22_SW_Release, released at Wed Jun  1 05:39:28 2022.

yosys> verilog_defaults -add -I.

yosys> read -vhdl tea1.vhd

yosys> verific -vhdl tea1.vhd

2. Executing VERIFIC (loading SystemVerilog and VHDL designs using Verific).
Built with Verific May22_SW_Release, released at Wed Jun  1 05:39:28 2022.
VERIFIC-INFO [VHDL-1504] default VHDL library search path is now "/nfs_scratch/scratch/Vorak/aram/Workspace/Raptor/yosys_verific_rs/yosys/install/share/yosys/verific/vhdl_vdbs_2008"
VERIFIC-COMMENT [VHDL-1481] Analyzing VHDL file 'tea1.vhd'
VERIFIC-COMMENT [VHDL-1493] Restoring VHDL unit 'ieee.std_logic_1164' from file '/nfs_scratch/scratch/Vorak/aram/Workspace/Raptor/yosys_verific_rs/yosys/install/share/yosys/verific/vhdl_vdbs_2008/ieee/std_logic_1164.vdb'
VERIFIC-COMMENT [VHDL-1493] Restoring VHDL unit 'std.standard' from file '/nfs_scratch/scratch/Vorak/aram/Workspace/Raptor/yosys_verific_rs/yosys/install/share/yosys/verific/vhdl_vdbs_2008/std/standard.vdb'
VERIFIC-COMMENT [VHDL-1493] Restoring VHDL unit 'std.textio' from file '/nfs_scratch/scratch/Vorak/aram/Workspace/Raptor/yosys_verific_rs/yosys/install/share/yosys/verific/vhdl_vdbs_2008/std/textio.vdb'
VERIFIC-COMMENT [VHDL-1493] Restoring VHDL unit 'ieee.numeric_std' from file '/nfs_scratch/scratch/Vorak/aram/Workspace/Raptor/yosys_verific_rs/yosys/install/share/yosys/verific/vhdl_vdbs_2008/ieee/numeric_std.vdb'
VERIFIC-COMMENT [VHDL-1493] Restoring VHDL unit 'ieee.std_logic_unsigned' from file '/nfs_scratch/scratch/Vorak/aram/Workspace/Raptor/yosys_verific_rs/yosys/install/share/yosys/verific/vhdl_vdbs_2008/ieee/std_logic_unsigned.vdb'
VERIFIC-COMMENT [VHDL-1493] Restoring VHDL unit 'ieee.std_logic_arith' from file '/nfs_scratch/scratch/Vorak/aram/Workspace/Raptor/yosys_verific_rs/yosys/install/share/yosys/verific/vhdl_vdbs_2008/ieee/std_logic_arith.vdb'
VERIFIC-INFO [VHDL-1012] tea1.vhd:6: analyzing entity 'tea1'
VERIFIC-INFO [VHDL-1010] tea1.vhd:17: analyzing architecture 'behavioral'

yosys> synth_rs -top tea1 -tech genesis -goal area -de -no_dsp -no_bram -verilog synthesized.v

3. Executing synth_rs pass: v0.4.79

yosys> read_verilog -lib -specify -nomem2reg +/rapidsilicon/common/cells_sim.v +/rapidsilicon/genesis/cells_sim.v +/rapidsilicon/genesis/dsp_sim.v

3.1. Executing Verilog-2005 frontend: /nfs_scratch/scratch/Vorak/aram/Workspace/Raptor/yosys_verific_rs/yosys/install/bin/../share/yosys/rapidsilicon/common/cells_sim.v
Parsing Verilog input from `/nfs_scratch/scratch/Vorak/aram/Workspace/Raptor/yosys_verific_rs/yosys/install/bin/../share/yosys/rapidsilicon/common/cells_sim.v' to AST representation.
Generating RTLIL representation for module `\inv'.
Generating RTLIL representation for module `\buff'.
Generating RTLIL representation for module `\logic_0'.
Generating RTLIL representation for module `\logic_1'.
Generating RTLIL representation for module `\gclkbuff'.
Successfully finished Verilog frontend.

3.2. Executing Verilog-2005 frontend: /nfs_scratch/scratch/Vorak/aram/Workspace/Raptor/yosys_verific_rs/yosys/install/bin/../share/yosys/rapidsilicon/genesis/cells_sim.v
Parsing Verilog input from `/nfs_scratch/scratch/Vorak/aram/Workspace/Raptor/yosys_verific_rs/yosys/install/bin/../share/yosys/rapidsilicon/genesis/cells_sim.v' to AST representation.
Generating RTLIL representation for module `\dffsre'.
Generating RTLIL representation for module `\dffnsre'.
Generating RTLIL representation for module `\latchsre'.
Generating RTLIL representation for module `\latchnsre'.
Generating RTLIL representation for module `\io_scff'.
Generating RTLIL representation for module `\scff'.
Generating RTLIL representation for module `\sh_dff'.
Generating RTLIL representation for module `\adder_carry'.
Generating RTLIL representation for module `\sdffr'.
Generating RTLIL representation for module `\sdffs'.
Generating RTLIL representation for module `\TDP_BRAM18'.
Generating RTLIL representation for module `\TDP36K'.
Generating RTLIL representation for module `\BRAM2x18_TDP'.
Generating RTLIL representation for module `\BRAM2x18_SDP'.
Generating RTLIL representation for module `\_$_mem_v2_asymmetric'.
Successfully finished Verilog frontend.

3.3. Executing Verilog-2005 frontend: /nfs_scratch/scratch/Vorak/aram/Workspace/Raptor/yosys_verific_rs/yosys/install/bin/../share/yosys/rapidsilicon/genesis/dsp_sim.v
Parsing Verilog input from `/nfs_scratch/scratch/Vorak/aram/Workspace/Raptor/yosys_verific_rs/yosys/install/bin/../share/yosys/rapidsilicon/genesis/dsp_sim.v' to AST representation.
Generating RTLIL representation for module `\RS_DSP1'.
Generating RTLIL representation for module `\RS_DSP2'.
Generating RTLIL representation for module `\RS_DSP2_MULT'.
Generating RTLIL representation for module `\RS_DSP2_MULT_REGIN'.
Generating RTLIL representation for module `\RS_DSP2_MULT_REGOUT'.
Generating RTLIL representation for module `\RS_DSP2_MULT_REGIN_REGOUT'.
Generating RTLIL representation for module `\RS_DSP2_MULTADD'.
Generating RTLIL representation for module `\RS_DSP2_MULTADD_REGIN'.
Generating RTLIL representation for module `\RS_DSP2_MULTADD_REGOUT'.
Generating RTLIL representation for module `\RS_DSP2_MULTADD_REGIN_REGOUT'.
Generating RTLIL representation for module `\RS_DSP2_MULTACC'.
Generating RTLIL representation for module `\RS_DSP2_MULTACC_REGIN'.
Generating RTLIL representation for module `\RS_DSP2_MULTACC_REGOUT'.
Generating RTLIL representation for module `\RS_DSP2_MULTACC_REGIN_REGOUT'.
Generating RTLIL representation for module `\dsp_t1_20x18x64_cfg_ports'.
Generating RTLIL representation for module `\dsp_t1_10x9x32_cfg_ports'.
Generating RTLIL representation for module `\dsp_t1_sim_cfg_ports'.
Generating RTLIL representation for module `\RS_DSP3'.
Generating RTLIL representation for module `\RS_DSP3_MULT'.
Generating RTLIL representation for module `\RS_DSP3_MULT_REGIN'.
Generating RTLIL representation for module `\RS_DSP3_MULT_REGOUT'.
Generating RTLIL representation for module `\RS_DSP3_MULT_REGIN_REGOUT'.
Generating RTLIL representation for module `\RS_DSP3_MULTADD'.
Generating RTLIL representation for module `\RS_DSP3_MULTADD_REGIN'.
Generating RTLIL representation for module `\RS_DSP3_MULTADD_REGOUT'.
Generating RTLIL representation for module `\RS_DSP3_MULTADD_REGIN_REGOUT'.
Generating RTLIL representation for module `\RS_DSP3_MULTACC'.
Generating RTLIL representation for module `\RS_DSP3_MULTACC_REGIN'.
Generating RTLIL representation for module `\RS_DSP3_MULTACC_REGOUT'.
Generating RTLIL representation for module `\RS_DSP3_MULTACC_REGIN_REGOUT'.
Generating RTLIL representation for module `\dsp_t1_20x18x64_cfg_params'.
Generating RTLIL representation for module `\dsp_t1_10x9x32_cfg_params'.
Generating RTLIL representation for module `\dsp_t1_sim_cfg_params'.
Successfully finished Verilog frontend.

yosys> hierarchy -check -top tea1

3.4. Executing HIERARCHY pass (managing design hierarchy).
VERIFIC-INFO [VHDL-1067] tea1.vhd:6: processing 'tea1(Behavioral)'
Importing module tea1.

3.4.1. Analyzing design hierarchy..
Top module:  \tea1

3.4.2. Analyzing design hierarchy..
Top module:  \tea1
Removed 0 unused modules.

yosys> proc

3.5. Executing PROC pass (convert processes to netlists).

yosys> proc_clean

3.5.1. Executing PROC_CLEAN pass (remove empty switches from decision trees).
Cleaned up 0 empty switches.

yosys> proc_rmdead

3.5.2. Executing PROC_RMDEAD pass (remove dead branches from decision trees).
Removed a total of 0 dead cases.

yosys> proc_prune

3.5.3. Executing PROC_PRUNE pass (remove redundant assignments in processes).
Removed 0 redundant assignments.
Promoted 0 assignments to connections.

yosys> proc_init

3.5.4. Executing PROC_INIT pass (extract init attributes).

yosys> proc_arst

3.5.5. Executing PROC_ARST pass (detect async resets in processes).

yosys> proc_rom

3.5.6. Executing PROC_ROM pass (convert switches to ROMs).
Converted 0 switches.

yosys> proc_mux

3.5.7. Executing PROC_MUX pass (convert decision trees to multiplexers).

yosys> proc_dlatch

3.5.8. Executing PROC_DLATCH pass (convert process syncs to latches).

yosys> proc_dff

3.5.9. Executing PROC_DFF pass (convert process syncs to FFs).

yosys> proc_memwr

3.5.10. Executing PROC_MEMWR pass (convert process memory writes to cells).

yosys> proc_clean

3.5.11. Executing PROC_CLEAN pass (remove empty switches from decision trees).
Cleaned up 0 empty switches.

yosys> opt_expr -keepdc

3.5.12. Executing OPT_EXPR pass (perform const folding).
Optimizing module tea1.
<suppressed ~3 debug messages>

yosys> bmuxmap

3.6. Executing BMUXMAP pass.

yosys> demuxmap

3.7. Executing DEMUXMAP pass.

yosys> clean_zerowidth

yosys> flatten

3.8. Executing FLATTEN pass (flatten design).

yosys> bmuxmap

3.9. Executing BMUXMAP pass.

yosys> demuxmap

3.10. Executing DEMUXMAP pass.

yosys> clean_zerowidth

yosys> tribuf -logic -formal

3.11. Executing TRIBUF pass.

yosys> deminout

3.12. Executing DEMINOUT pass (demote inout ports to input or output).

yosys> opt_expr

3.13. Executing OPT_EXPR pass (perform const folding).
Optimizing module tea1.

yosys> opt_clean

3.14. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \tea1..
Removed 0 unused cells and 24 unused wires.
<suppressed ~18 debug messages>

yosys> check

3.15. Executing CHECK pass (checking for obvious problems).
Checking module tea1...
Found and reported 0 problems.

yosys> opt_expr

3.16. Executing OPT_EXPR pass (perform const folding).
Optimizing module tea1.

yosys> opt_merge -nomux

3.17. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\tea1'.
Removed a total of 0 cells.

yosys> opt_muxtree

3.18. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \tea1..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
      Replacing known input bits on port A of cell $verific$mux_6$tea1.vhd:30$48: \cnt -> { 1'1 \cnt [5:0] }
  Analyzing evaluation results.
Removed 0 multiplexer ports.
<suppressed ~10 debug messages>

yosys> opt_reduce

3.19. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \tea1.
Performed a total of 0 changes.

yosys> opt_merge

3.20. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\tea1'.
Removed a total of 0 cells.

yosys> opt_share

3.21. Executing OPT_SHARE pass.

yosys> opt_dff -nosdff -nodffe

3.22. Executing OPT_DFF pass (perform DFF optimizations).
Removing never-active async load on $verific$v1_reg$tea1.vhd:55$80 ($aldff) from module tea1.
Removing never-active async load on $verific$v0_reg$tea1.vhd:55$79 ($aldff) from module tea1.
Removing never-active async load on $verific$sum_reg$tea1.vhd:55$74 ($aldff) from module tea1.
Removing never-active async load on $verific$k3_reg$tea1.vhd:55$78 ($aldff) from module tea1.
Removing never-active async load on $verific$k2_reg$tea1.vhd:55$77 ($aldff) from module tea1.
Removing never-active async load on $verific$k1_reg$tea1.vhd:55$76 ($aldff) from module tea1.
Removing never-active async load on $verific$k0_reg$tea1.vhd:55$75 ($aldff) from module tea1.
Removing never-active async load on $verific$cnt_reg$tea1.vhd:34$53 ($aldff) from module tea1.

yosys> opt_clean

3.23. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \tea1..

yosys> opt_expr

3.24. Executing OPT_EXPR pass (perform const folding).
Optimizing module tea1.
MAX OPT ITERATION = 1

yosys> fsm -encoding binary

3.25. Executing FSM pass (extract and optimize FSM).

yosys> fsm_detect

3.25.1. Executing FSM_DETECT pass (finding FSMs in design).

yosys> fsm_extract

3.25.2. Executing FSM_EXTRACT pass (extracting FSM from design).

yosys> fsm_opt

3.25.3. Executing FSM_OPT pass (simple optimizations of FSMs).

yosys> opt_clean

3.25.4. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \tea1..

yosys> fsm_opt

3.25.5. Executing FSM_OPT pass (simple optimizations of FSMs).

yosys> fsm_recode -encoding binary

3.25.6. Executing FSM_RECODE pass (re-assigning FSM state encoding).

yosys> fsm_info

3.25.7. Executing FSM_INFO pass (dumping all available information on FSM cells).

yosys> fsm_map

3.25.8. Executing FSM_MAP pass (mapping FSMs to basic logic).

yosys> opt_expr

3.26. Executing OPT_EXPR pass (perform const folding).
Optimizing module tea1.

yosys> opt_merge -nomux

3.27. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\tea1'.
Removed a total of 0 cells.

yosys> opt_muxtree

3.28. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \tea1..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Removed 0 multiplexer ports.
<suppressed ~10 debug messages>

yosys> opt_reduce

3.29. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \tea1.
Performed a total of 0 changes.

yosys> opt_merge

3.30. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\tea1'.
Removed a total of 0 cells.

yosys> opt_share

3.31. Executing OPT_SHARE pass.

yosys> opt_dff -nosdff -sat

3.32. Executing OPT_DFF pass (perform DFF optimizations).
Adding EN signal on $verific$sum_reg$tea1.vhd:55$74 ($dff) from module tea1 (D = $verific$n568$26, Q = \sum).
Adding EN signal on $verific$k3_reg$tea1.vhd:55$78 ($dff) from module tea1 (D = \key [127:96], Q = \k3).
Adding EN signal on $verific$k2_reg$tea1.vhd:55$77 ($dff) from module tea1 (D = \key [95:64], Q = \k2).
Adding EN signal on $verific$k1_reg$tea1.vhd:55$76 ($dff) from module tea1 (D = \key [63:32], Q = \k1).
Adding EN signal on $verific$k0_reg$tea1.vhd:55$75 ($dff) from module tea1 (D = \key [31:0], Q = \k0).
Adding EN signal on $verific$cnt_reg$tea1.vhd:34$53 ($dff) from module tea1 (D = $verific$n54$10 [5:0], Q = \cnt [5:0]).

yosys> opt_clean

3.33. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \tea1..
Removed 4 unused cells and 4 unused wires.
<suppressed ~5 debug messages>

yosys> opt_expr

3.34. Executing OPT_EXPR pass (perform const folding).
Optimizing module tea1.
<suppressed ~1 debug messages>

yosys> opt_muxtree

3.35. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \tea1..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Removed 0 multiplexer ports.
<suppressed ~6 debug messages>

yosys> opt_reduce

3.36. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \tea1.
Performed a total of 0 changes.

yosys> opt_merge

3.37. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\tea1'.
Removed a total of 0 cells.

yosys> opt_share

3.38. Executing OPT_SHARE pass.

yosys> opt_dff -nosdff -sat

3.39. Executing OPT_DFF pass (perform DFF optimizations).

yosys> opt_clean

3.40. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \tea1..

yosys> opt_expr

3.41. Executing OPT_EXPR pass (perform const folding).
Optimizing module tea1.
MAX OPT ITERATION = 2

yosys> wreduce -keepdc

3.42. Executing WREDUCE pass (reducing word size of cells).
Removed top 6 bits (of 7) from port B of cell tea1.$verific$add_7$tea1.vhd:32$49 ($add).
Removed top 5 bits (of 32) from port A of cell tea1.$verific$add_53$../vhdl_packages/vhdl_2008/src/syn_arit.vhd:838$88 ($add).

yosys> peepopt

3.43. Executing PEEPOPT pass (run peephole optimizers).

yosys> opt_clean

3.44. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \tea1..

yosys> bmuxmap

3.45. Executing BMUXMAP pass.

yosys> demuxmap

3.46. Executing DEMUXMAP pass.

yosys> clean_zerowidth

yosys> alumacc

3.47. Executing ALUMACC pass (create $alu and $macc cells).
Extracting $alu and $macc cells in module tea1:
  creating $macc model for $verific$add_20$../vhdl_packages/vhdl_2008/src/syn_arit.vhd:838$59 ($add).
  creating $macc model for $verific$add_24$../vhdl_packages/vhdl_2008/src/syn_arit.vhd:838$63 ($add).
  creating $macc model for $verific$add_48$../vhdl_packages/vhdl_2008/src/syn_arit.vhd:838$85 ($add).
  creating $macc model for $verific$add_50$../vhdl_packages/vhdl_2008/src/syn_arit.vhd:838$86 ($add).
  creating $macc model for $verific$add_53$../vhdl_packages/vhdl_2008/src/syn_arit.vhd:838$88 ($add).
  creating $macc model for $verific$add_7$tea1.vhd:32$49 ($add).
  creating $alu model for $macc $verific$add_7$tea1.vhd:32$49.
  creating $alu model for $macc $verific$add_53$../vhdl_packages/vhdl_2008/src/syn_arit.vhd:838$88.
  creating $alu model for $macc $verific$add_50$../vhdl_packages/vhdl_2008/src/syn_arit.vhd:838$86.
  creating $alu model for $macc $verific$add_48$../vhdl_packages/vhdl_2008/src/syn_arit.vhd:838$85.
  creating $alu model for $macc $verific$add_24$../vhdl_packages/vhdl_2008/src/syn_arit.vhd:838$63.
  creating $alu model for $macc $verific$add_20$../vhdl_packages/vhdl_2008/src/syn_arit.vhd:838$59.
  creating $alu cell for $verific$add_20$../vhdl_packages/vhdl_2008/src/syn_arit.vhd:838$59: $auto$alumacc.cc:485:replace_alu$106
  creating $alu cell for $verific$add_24$../vhdl_packages/vhdl_2008/src/syn_arit.vhd:838$63: $auto$alumacc.cc:485:replace_alu$109
  creating $alu cell for $verific$add_48$../vhdl_packages/vhdl_2008/src/syn_arit.vhd:838$85: $auto$alumacc.cc:485:replace_alu$112
  creating $alu cell for $verific$add_50$../vhdl_packages/vhdl_2008/src/syn_arit.vhd:838$86: $auto$alumacc.cc:485:replace_alu$115
  creating $alu cell for $verific$add_53$../vhdl_packages/vhdl_2008/src/syn_arit.vhd:838$88: $auto$alumacc.cc:485:replace_alu$118
  creating $alu cell for $verific$add_7$tea1.vhd:32$49: $auto$alumacc.cc:485:replace_alu$121
  created 6 $alu and 0 $macc cells.

yosys> opt_expr

3.48. Executing OPT_EXPR pass (perform const folding).
Optimizing module tea1.

yosys> opt_merge -nomux

3.49. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\tea1'.
Removed a total of 0 cells.

yosys> opt_muxtree

3.50. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \tea1..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Removed 0 multiplexer ports.
<suppressed ~6 debug messages>

yosys> opt_reduce

3.51. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \tea1.
Performed a total of 0 changes.

yosys> opt_merge

3.52. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\tea1'.
Removed a total of 0 cells.

yosys> opt_share

3.53. Executing OPT_SHARE pass.

yosys> opt_dff -nosdff -nodffe

3.54. Executing OPT_DFF pass (perform DFF optimizations).

yosys> opt_clean

3.55. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \tea1..

yosys> opt_expr

3.56. Executing OPT_EXPR pass (perform const folding).
Optimizing module tea1.
MAX OPT ITERATION = 1

yosys> stat

3.57. Printing statistics.

=== tea1 ===

   Number of wires:                 46
   Number of wire bits:           1259
   Number of public wires:          18
   Number of public wire bits:     587
   Number of memories:               0
   Number of memory bits:            0
   Number of processes:              0
   Number of cells:                 28
     $alu                            6
     $dff                            3
     $dffe                           6
     $mux                            9
     $ne                             1
     $reduce_bool                    1
     $xor                            2


yosys> memory -nomap

3.58. Executing MEMORY pass.

yosys> opt_mem

3.58.1. Executing OPT_MEM pass (optimize memories).
Performed a total of 0 transformations.

yosys> opt_mem_priority

3.58.2. Executing OPT_MEM_PRIORITY pass (removing unnecessary memory write priority relations).
Performed a total of 0 transformations.

yosys> opt_mem_feedback

3.58.3. Executing OPT_MEM_FEEDBACK pass (finding memory read-to-write feedback paths).

yosys> memory_bmux2rom

3.58.4. Executing MEMORY_BMUX2ROM pass (converting muxes to ROMs).

yosys> memory_dff

3.58.5. Executing MEMORY_DFF pass (merging $dff cells to $memrd).

yosys> opt_clean

3.58.6. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \tea1..

yosys> memory_share

3.58.7. Executing MEMORY_SHARE pass (consolidating $memrd/$memwr cells).

yosys> opt_mem_widen

3.58.8. Executing OPT_MEM_WIDEN pass (optimize memories where all ports are wide).
Performed a total of 0 transformations.

yosys> opt_clean

3.58.9. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \tea1..

yosys> memory_collect

3.58.10. Executing MEMORY_COLLECT pass (generating $mem cells).

yosys> stat

3.59. Printing statistics.

=== tea1 ===

   Number of wires:                 46
   Number of wire bits:           1259
   Number of public wires:          18
   Number of public wire bits:     587
   Number of memories:               0
   Number of memory bits:            0
   Number of processes:              0
   Number of cells:                 28
     $alu                            6
     $dff                            3
     $dffe                           6
     $mux                            9
     $ne                             1
     $reduce_bool                    1
     $xor                            2


yosys> muxpack

3.60. Executing MUXPACK pass ($mux cell cascades to $pmux).
Converted 0 (p)mux cells into 0 pmux cells.
<suppressed ~9 debug messages>

yosys> opt_clean

3.61. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \tea1..

yosys> pmuxtree

3.62. Executing PMUXTREE pass.

yosys> muxpack

3.63. Executing MUXPACK pass ($mux cell cascades to $pmux).
Converted 0 (p)mux cells into 0 pmux cells.
<suppressed ~9 debug messages>

yosys> memory_map

3.64. Executing MEMORY_MAP pass (converting memories to logic and flip-flops).

yosys> stat

3.65. Printing statistics.

=== tea1 ===

   Number of wires:                 46
   Number of wire bits:           1259
   Number of public wires:          18
   Number of public wire bits:     587
   Number of memories:               0
   Number of memory bits:            0
   Number of processes:              0
   Number of cells:                 28
     $alu                            6
     $dff                            3
     $dffe                           6
     $mux                            9
     $ne                             1
     $reduce_bool                    1
     $xor                            2


yosys> techmap -map +/techmap.v -map +/rapidsilicon/genesis/arith_map.v

3.66. Executing TECHMAP pass (map to technology primitives).

3.66.1. Executing Verilog-2005 frontend: /nfs_scratch/scratch/Vorak/aram/Workspace/Raptor/yosys_verific_rs/yosys/install/bin/../share/yosys/techmap.v
Parsing Verilog input from `/nfs_scratch/scratch/Vorak/aram/Workspace/Raptor/yosys_verific_rs/yosys/install/bin/../share/yosys/techmap.v' to AST representation.
Generating RTLIL representation for module `\_90_simplemap_bool_ops'.
Generating RTLIL representation for module `\_90_simplemap_reduce_ops'.
Generating RTLIL representation for module `\_90_simplemap_logic_ops'.
Generating RTLIL representation for module `\_90_simplemap_compare_ops'.
Generating RTLIL representation for module `\_90_simplemap_various'.
Generating RTLIL representation for module `\_90_simplemap_registers'.
Generating RTLIL representation for module `\_90_shift_ops_shr_shl_sshl_sshr'.
Generating RTLIL representation for module `\_90_shift_shiftx'.
Generating RTLIL representation for module `\_90_fa'.
Generating RTLIL representation for module `\_90_lcu'.
Generating RTLIL representation for module `\_90_alu'.
Generating RTLIL representation for module `\_90_macc'.
Generating RTLIL representation for module `\_90_alumacc'.
Generating RTLIL representation for module `\$__div_mod_u'.
Generating RTLIL representation for module `\$__div_mod_trunc'.
Generating RTLIL representation for module `\_90_div'.
Generating RTLIL representation for module `\_90_mod'.
Generating RTLIL representation for module `\$__div_mod_floor'.
Generating RTLIL representation for module `\_90_divfloor'.
Generating RTLIL representation for module `\_90_modfloor'.
Generating RTLIL representation for module `\_90_pow'.
Generating RTLIL representation for module `\_90_pmux'.
Generating RTLIL representation for module `\_90_demux'.
Generating RTLIL representation for module `\_90_lut'.
Successfully finished Verilog frontend.

3.66.2. Executing Verilog-2005 frontend: /nfs_scratch/scratch/Vorak/aram/Workspace/Raptor/yosys_verific_rs/yosys/install/bin/../share/yosys/rapidsilicon/genesis/arith_map.v
Parsing Verilog input from `/nfs_scratch/scratch/Vorak/aram/Workspace/Raptor/yosys_verific_rs/yosys/install/bin/../share/yosys/rapidsilicon/genesis/arith_map.v' to AST representation.
Generating RTLIL representation for module `\_80_rs_alu'.
Successfully finished Verilog frontend.

3.66.3. Continuing TECHMAP pass.
Using extmapper simplemap for cells of type $dffe.
Using extmapper simplemap for cells of type $reduce_bool.
Using template $paramod$fbc7873bff55778c0b3173955b7e4bce1d9d6834\_90_alu for cells of type $alu.
Using extmapper simplemap for cells of type $ne.
Using extmapper simplemap for cells of type $dff.
Using extmapper simplemap for cells of type $mux.
Using template $paramod$be80489e44a49c29884f59fd81c31ed03229cfc1\_80_rs_alu for cells of type $alu.
Using template $paramod$a956358b3023cded48ed5b8b78d4da812e8a9ce4\_80_rs_alu for cells of type $alu.
Using template $paramod$62a9e1f6b6a22c94f58bcb1cbfe24600db0272fe\_80_rs_alu for cells of type $alu.
Using extmapper simplemap for cells of type $xor.
Using template $paramod$103b4016182df467cceab67bcf3e18e6361ec0fd\_90_alu for cells of type $alu.
Using extmapper simplemap for cells of type $and.
Using template $paramod\_90_lcu\WIDTH=32'00000000000000000000000000100000 for cells of type $lcu.
Using extmapper simplemap for cells of type $pos.
Using extmapper simplemap for cells of type $not.
Using template $paramod\_90_lcu\WIDTH=32'00000000000000000000000000000111 for cells of type $lcu.
Using extmapper simplemap for cells of type $or.
No more expansions possible.
<suppressed ~895 debug messages>

yosys> stat

3.67. Printing statistics.

=== tea1 ===

   Number of wires:                311
   Number of wire bits:           6074
   Number of public wires:          18
   Number of public wire bits:     587
   Number of memories:               0
   Number of memory bits:            0
   Number of processes:              0
   Number of cells:               1385
     $_AND_                        134
     $_DFFE_PP_                    166
     $_DFF_P_                       65
     $_MUX_                        384
     $_NOT_                        163
     $_OR_                          70
     $_XOR_                        279
     adder_carry                   124


yosys> opt_expr

3.68. Executing OPT_EXPR pass (perform const folding).
Optimizing module tea1.
<suppressed ~323 debug messages>

yosys> opt_merge -nomux

3.69. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\tea1'.
<suppressed ~81 debug messages>
Removed a total of 27 cells.

yosys> opt_muxtree

3.70. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \tea1..
  Creating internal representation of mux trees.
  No muxes found in this module.
Removed 0 multiplexer ports.

yosys> opt_reduce

3.71. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \tea1.
Performed a total of 0 changes.

yosys> opt_merge

3.72. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\tea1'.
Removed a total of 0 cells.

yosys> opt_share

3.73. Executing OPT_SHARE pass.

yosys> opt_dff -nosdff -nodffe

3.74. Executing OPT_DFF pass (perform DFF optimizations).

yosys> opt_clean

3.75. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \tea1..
Removed 126 unused cells and 205 unused wires.
<suppressed ~127 debug messages>

yosys> opt_expr

3.76. Executing OPT_EXPR pass (perform const folding).
Optimizing module tea1.

yosys> opt_muxtree

3.77. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \tea1..
  Creating internal representation of mux trees.
  No muxes found in this module.
Removed 0 multiplexer ports.

yosys> opt_reduce

3.78. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \tea1.
Performed a total of 0 changes.

yosys> opt_merge

3.79. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\tea1'.
Removed a total of 0 cells.

yosys> opt_share

3.80. Executing OPT_SHARE pass.

yosys> opt_dff -nosdff -nodffe

3.81. Executing OPT_DFF pass (perform DFF optimizations).

yosys> opt_clean

3.82. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \tea1..

yosys> opt_expr

3.83. Executing OPT_EXPR pass (perform const folding).
Optimizing module tea1.
MAX OPT ITERATION = 2

yosys> opt_expr -full

3.84. Executing OPT_EXPR pass (perform const folding).
Optimizing module tea1.
<suppressed ~61 debug messages>

yosys> techmap -map +/techmap.v

3.85. Executing TECHMAP pass (map to technology primitives).

3.85.1. Executing Verilog-2005 frontend: /nfs_scratch/scratch/Vorak/aram/Workspace/Raptor/yosys_verific_rs/yosys/install/bin/../share/yosys/techmap.v
Parsing Verilog input from `/nfs_scratch/scratch/Vorak/aram/Workspace/Raptor/yosys_verific_rs/yosys/install/bin/../share/yosys/techmap.v' to AST representation.
Generating RTLIL representation for module `\_90_simplemap_bool_ops'.
Generating RTLIL representation for module `\_90_simplemap_reduce_ops'.
Generating RTLIL representation for module `\_90_simplemap_logic_ops'.
Generating RTLIL representation for module `\_90_simplemap_compare_ops'.
Generating RTLIL representation for module `\_90_simplemap_various'.
Generating RTLIL representation for module `\_90_simplemap_registers'.
Generating RTLIL representation for module `\_90_shift_ops_shr_shl_sshl_sshr'.
Generating RTLIL representation for module `\_90_shift_shiftx'.
Generating RTLIL representation for module `\_90_fa'.
Generating RTLIL representation for module `\_90_lcu'.
Generating RTLIL representation for module `\_90_alu'.
Generating RTLIL representation for module `\_90_macc'.
Generating RTLIL representation for module `\_90_alumacc'.
Generating RTLIL representation for module `\$__div_mod_u'.
Generating RTLIL representation for module `\$__div_mod_trunc'.
Generating RTLIL representation for module `\_90_div'.
Generating RTLIL representation for module `\_90_mod'.
Generating RTLIL representation for module `\$__div_mod_floor'.
Generating RTLIL representation for module `\_90_divfloor'.
Generating RTLIL representation for module `\_90_modfloor'.
Generating RTLIL representation for module `\_90_pow'.
Generating RTLIL representation for module `\_90_pmux'.
Generating RTLIL representation for module `\_90_demux'.
Generating RTLIL representation for module `\_90_lut'.
Successfully finished Verilog frontend.

3.85.2. Continuing TECHMAP pass.
No more expansions possible.
<suppressed ~71 debug messages>

yosys> opt_expr

3.86. Executing OPT_EXPR pass (perform const folding).
Optimizing module tea1.

yosys> opt_merge -nomux

3.87. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\tea1'.
Removed a total of 0 cells.

yosys> opt_muxtree

3.88. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \tea1..
  Creating internal representation of mux trees.
  No muxes found in this module.
Removed 0 multiplexer ports.

yosys> opt_reduce

3.89. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \tea1.
Performed a total of 0 changes.

yosys> opt_merge

3.90. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\tea1'.
Removed a total of 0 cells.

yosys> opt_dff -nosdff -nodffe -sat

3.91. Executing OPT_DFF pass (perform DFF optimizations).

yosys> opt_clean

3.92. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \tea1..
Removed 0 unused cells and 1 unused wires.
<suppressed ~1 debug messages>

yosys> opt_expr

3.93. Executing OPT_EXPR pass (perform const folding).
Optimizing module tea1.
MAX OPT ITERATION = 1

yosys> abc -dff

3.94. Executing ABC pass (technology mapping using ABC).

3.94.1. Summary of detected clock domains:
  27 cells in clk=\clock, en=$auto$opt_dff.cc:194:make_patterns_logic$103, arst={ }, srst={ }
  192 cells in clk=\clock, en=\cnt [6], arst={ }, srst={ }
  540 cells in clk=\clock, en={ }, arst={ }, srst={ }
  139 cells in clk=\clock, en=$auto$opt_dff.cc:194:make_patterns_logic$96, arst={ }, srst={ }

3.94.2. Extracting gate netlist of module `\tea1' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clock, enabled by $auto$opt_dff.cc:194:make_patterns_logic$103
Extracted 27 gates and 37 wires to a netlist network with 10 inputs and 11 outputs.

3.94.2.1. Executing ABC.

3.94.3. Extracting gate netlist of module `\tea1' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clock, enabled by \cnt [6]
Extracted 192 gates and 321 wires to a netlist network with 129 inputs and 64 outputs.

3.94.3.1. Executing ABC.

3.94.4. Extracting gate netlist of module `\tea1' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clock
Extracted 416 gates and 765 wires to a netlist network with 348 inputs and 226 outputs.

3.94.4.1. Executing ABC.

3.94.5. Extracting gate netlist of module `\tea1' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clock, enabled by $abc$1842$auto$opt_dff.cc:194:make_patterns_logic$96
Extracted 139 gates and 180 wires to a netlist network with 41 inputs and 93 outputs.

3.94.5.1. Executing ABC.

yosys> abc -dff

3.95. Executing ABC pass (technology mapping using ABC).

3.95.1. Summary of detected clock domains:
  478 cells in clk=\clock, en={ }, arst={ }, srst={ }
  25 cells in clk=\clock, en=$abc$1842$auto$opt_dff.cc:194:make_patterns_logic$103, arst={ }, srst={ }
  192 cells in clk=\clock, en=$abc$2191$lo00, arst={ }, srst={ }
  173 cells in clk=\clock, en=$abc$1842$auto$opt_dff.cc:194:make_patterns_logic$96, arst={ }, srst={ }

3.95.2. Extracting gate netlist of module `\tea1' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clock
Extracted 354 gates and 655 wires to a netlist network with 301 inputs and 199 outputs.

3.95.2.1. Executing ABC.

3.95.3. Extracting gate netlist of module `\tea1' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clock, enabled by $abc$1842$auto$opt_dff.cc:194:make_patterns_logic$103
Extracted 25 gates and 34 wires to a netlist network with 9 inputs and 10 outputs.

3.95.3.1. Executing ABC.

3.95.4. Extracting gate netlist of module `\tea1' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clock, enabled by $abc$2848$lo54
Extracted 192 gates and 321 wires to a netlist network with 129 inputs and 64 outputs.

3.95.4.1. Executing ABC.

3.95.5. Extracting gate netlist of module `\tea1' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clock, enabled by $abc$2848$abc$1842$auto$opt_dff.cc:194:make_patterns_logic$96
Extracted 173 gates and 187 wires to a netlist network with 14 inputs and 45 outputs.

3.95.5.1. Executing ABC.

yosys> abc -dff

3.96. Executing ABC pass (technology mapping using ABC).

3.96.1. Summary of detected clock domains:
  478 cells in clk=\clock, en={ }, arst={ }, srst={ }
  25 cells in clk=\clock, en=$abc$3268$abc$1842$auto$opt_dff.cc:194:make_patterns_logic$103, arst={ }, srst={ }
  192 cells in clk=\clock, en=$abc$2848$lo54, arst={ }, srst={ }
  131 cells in clk=\clock, en=$abc$2848$abc$1842$auto$opt_dff.cc:194:make_patterns_logic$96, arst={ }, srst={ }

3.96.2. Extracting gate netlist of module `\tea1' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clock
Extracted 354 gates and 655 wires to a netlist network with 301 inputs and 199 outputs.

3.96.2.1. Executing ABC.

3.96.3. Extracting gate netlist of module `\tea1' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clock, enabled by $abc$3268$abc$1842$auto$opt_dff.cc:194:make_patterns_logic$103
Extracted 25 gates and 34 wires to a netlist network with 9 inputs and 10 outputs.

3.96.3.1. Executing ABC.

3.96.4. Extracting gate netlist of module `\tea1' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clock, enabled by $abc$3793$lo54
Extracted 192 gates and 321 wires to a netlist network with 129 inputs and 64 outputs.

3.96.4.1. Executing ABC.

3.96.5. Extracting gate netlist of module `\tea1' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clock, enabled by $abc$3793$abc$2848$abc$1842$auto$opt_dff.cc:194:make_patterns_logic$96
Extracted 131 gates and 145 wires to a netlist network with 14 inputs and 45 outputs.

3.96.5.1. Executing ABC.

yosys> abc -dff

3.97. Executing ABC pass (technology mapping using ABC).

3.97.1. Summary of detected clock domains:
  37 cells in clk=\clock, en=$abc$4213$abc$3268$abc$1842$auto$opt_dff.cc:194:make_patterns_logic$103, arst={ }, srst={ }
  477 cells in clk=\clock, en={ }, arst={ }, srst={ }
  181 cells in clk=\clock, en=$abc$3793$lo54, arst={ }, srst={ }
  131 cells in clk=\clock, en=$abc$3793$abc$2848$abc$1842$auto$opt_dff.cc:194:make_patterns_logic$96, arst={ }, srst={ }

3.97.2. Extracting gate netlist of module `\tea1' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clock, enabled by $abc$4213$abc$3268$abc$1842$auto$opt_dff.cc:194:make_patterns_logic$103
Extracted 37 gates and 69 wires to a netlist network with 32 inputs and 22 outputs.

3.97.2.1. Executing ABC.

3.97.3. Extracting gate netlist of module `\tea1' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clock
Extracted 353 gates and 653 wires to a netlist network with 300 inputs and 198 outputs.

3.97.3.1. Executing ABC.

3.97.4. Extracting gate netlist of module `\tea1' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clock, enabled by $abc$4777$lo54
Extracted 181 gates and 310 wires to a netlist network with 129 inputs and 75 outputs.

3.97.4.1. Executing ABC.

3.97.5. Extracting gate netlist of module `\tea1' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clock, enabled by $abc$4738$abc$3793$abc$2848$abc$1842$auto$opt_dff.cc:194:make_patterns_logic$96
Extracted 131 gates and 145 wires to a netlist network with 14 inputs and 45 outputs.

3.97.5.1. Executing ABC.

yosys> opt_ffinv

3.98. Executing OPT_FFINV pass (push inverters through FFs).
Discovering LUTs.
Pushed 0 inverters.

yosys> opt_expr

3.99. Executing OPT_EXPR pass (perform const folding).
Optimizing module tea1.
<suppressed ~2 debug messages>

yosys> opt_merge -nomux

3.100. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\tea1'.
Removed a total of 0 cells.

yosys> opt_muxtree

3.101. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \tea1..
  Creating internal representation of mux trees.
  No muxes found in this module.
Removed 0 multiplexer ports.

yosys> opt_reduce

3.102. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \tea1.
Performed a total of 0 changes.

yosys> opt_merge

3.103. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\tea1'.
Removed a total of 0 cells.

yosys> opt_share

3.104. Executing OPT_SHARE pass.

yosys> opt_dff -nosdff -sat

3.105. Executing OPT_DFF pass (perform DFF optimizations).

yosys> opt_clean

3.106. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \tea1..
Removed 0 unused cells and 5442 unused wires.
<suppressed ~6 debug messages>

yosys> opt_expr

3.107. Executing OPT_EXPR pass (perform const folding).
Optimizing module tea1.
MAX OPT ITERATION = 1

yosys> bmuxmap

3.108. Executing BMUXMAP pass.

yosys> demuxmap

3.109. Executing DEMUXMAP pass.

yosys> clean_zerowidth

yosys> abc -script /tmp/yosys_Lo13sI/abc_tmp_1.scr

3.110. Executing ABC pass (technology mapping using ABC).

3.110.1. Extracting gate netlist of module `\tea1' to `<abc-temp-dir>/input.blif'..
Extracted 471 gates and 888 wires to a netlist network with 417 inputs and 221 outputs.

3.110.1.1. Executing ABC.
DE:   #PIs = 417  #Luts =   240  Max Lvl =   7  Avg Lvl =   1.43  [   0.11 sec. at Pass 0]{firstMap}
DE:   #PIs = 417  #Luts =   238  Max Lvl =   9  Avg Lvl =   1.58  [   0.78 sec. at Pass 1]{initMapFlow}
DE:   #PIs = 417  #Luts =   238  Max Lvl =   9  Avg Lvl =   1.58  [   0.15 sec. at Pass 2]{map}
DE:   #PIs = 417  #Luts =   236  Max Lvl =   8  Avg Lvl =   1.56  [   0.32 sec. at Pass 3]{postMap}
DE:   #PIs = 417  #Luts =   236  Max Lvl =   8  Avg Lvl =   1.56  [   0.53 sec. at Pass 4]{map}
DE:   #PIs = 417  #Luts =   236  Max Lvl =   8  Avg Lvl =   1.56  [   0.54 sec. at Pass 5]{postMap}
DE:   #PIs = 417  #Luts =   236  Max Lvl =   8  Avg Lvl =   1.56  [   0.75 sec. at Pass 6]{map}
DE:   #PIs = 417  #Luts =   235  Max Lvl =   8  Avg Lvl =   1.56  [   0.57 sec. at Pass 7]{pushMap}
DE:   #PIs = 417  #Luts =   235  Max Lvl =   8  Avg Lvl =   1.56  [   0.74 sec. at Pass 8]{postMap}
DE:   #PIs = 417  #Luts =   235  Max Lvl =   8  Avg Lvl =   1.56  [   0.27 sec. at Pass 9]{map}
DE:   #PIs = 417  #Luts =   235  Max Lvl =   8  Avg Lvl =   1.56  [   0.63 sec. at Pass 10]{postMap}
DE:   #PIs = 417  #Luts =   235  Max Lvl =   8  Avg Lvl =   1.56  [   0.50 sec. at Pass 11]{pushMap}
DE:   #PIs = 417  #Luts =   235  Max Lvl =   8  Avg Lvl =   1.56  [   0.14 sec. at Pass 12]{finalMap}

yosys> opt_expr

3.111. Executing OPT_EXPR pass (perform const folding).
Optimizing module tea1.

yosys> opt_merge -nomux

3.112. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\tea1'.
Removed a total of 0 cells.

yosys> opt_muxtree

3.113. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \tea1..
  Creating internal representation of mux trees.
  No muxes found in this module.
Removed 0 multiplexer ports.

yosys> opt_reduce

3.114. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \tea1.
Performed a total of 0 changes.

yosys> opt_merge

3.115. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\tea1'.
Removed a total of 0 cells.

yosys> opt_share

3.116. Executing OPT_SHARE pass.

yosys> opt_dff -nosdff -nodffe

3.117. Executing OPT_DFF pass (perform DFF optimizations).

yosys> opt_clean

3.118. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \tea1..
Removed 0 unused cells and 813 unused wires.
<suppressed ~2 debug messages>

yosys> opt_expr

3.119. Executing OPT_EXPR pass (perform const folding).
Optimizing module tea1.
MAX OPT ITERATION = 1

yosys> opt_ffinv

3.120. Executing OPT_FFINV pass (push inverters through FFs).
Discovering LUTs.
Pushed 0 inverters.

yosys> stat

3.121. Printing statistics.

=== tea1 ===

   Number of wires:                280
   Number of wire bits:           1027
   Number of public wires:          12
   Number of public wire bits:     395
   Number of memories:               0
   Number of memory bits:            0
   Number of processes:              0
   Number of cells:                590
     $_DFFE_PP_                    166
     $_DFF_P_                       65
     $lut                          235
     adder_carry                   124


yosys> shregmap -minlen 8 -maxlen 20

3.122. Executing SHREGMAP pass (map shift registers).
Converted 0 dff cells into 0 shift registers.

yosys> dfflegalize -cell $_DFF_?_ 0 -cell $_DFF_???_ 0 -cell $_DFFE_????_ 0 -cell $_DFFSR_???_ 0 -cell $_DFFSRE_????_ 0 -cell $_DLATCHSR_PPP_ 0

3.123. Executing DFFLEGALIZE pass (convert FFs to types supported by the target).

yosys> stat

3.124. Printing statistics.

=== tea1 ===

   Number of wires:                280
   Number of wire bits:           1027
   Number of public wires:          12
   Number of public wire bits:     395
   Number of memories:               0
   Number of memory bits:            0
   Number of processes:              0
   Number of cells:                590
     $_DFFE_PP0P_                  166
     $_DFF_P_                       65
     $lut                          235
     adder_carry                   124


yosys> techmap -map +/techmap.v -map +/rapidsilicon/genesis/ffs_map.v

3.125. Executing TECHMAP pass (map to technology primitives).

3.125.1. Executing Verilog-2005 frontend: /nfs_scratch/scratch/Vorak/aram/Workspace/Raptor/yosys_verific_rs/yosys/install/bin/../share/yosys/techmap.v
Parsing Verilog input from `/nfs_scratch/scratch/Vorak/aram/Workspace/Raptor/yosys_verific_rs/yosys/install/bin/../share/yosys/techmap.v' to AST representation.
Generating RTLIL representation for module `\_90_simplemap_bool_ops'.
Generating RTLIL representation for module `\_90_simplemap_reduce_ops'.
Generating RTLIL representation for module `\_90_simplemap_logic_ops'.
Generating RTLIL representation for module `\_90_simplemap_compare_ops'.
Generating RTLIL representation for module `\_90_simplemap_various'.
Generating RTLIL representation for module `\_90_simplemap_registers'.
Generating RTLIL representation for module `\_90_shift_ops_shr_shl_sshl_sshr'.
Generating RTLIL representation for module `\_90_shift_shiftx'.
Generating RTLIL representation for module `\_90_fa'.
Generating RTLIL representation for module `\_90_lcu'.
Generating RTLIL representation for module `\_90_alu'.
Generating RTLIL representation for module `\_90_macc'.
Generating RTLIL representation for module `\_90_alumacc'.
Generating RTLIL representation for module `\$__div_mod_u'.
Generating RTLIL representation for module `\$__div_mod_trunc'.
Generating RTLIL representation for module `\_90_div'.
Generating RTLIL representation for module `\_90_mod'.
Generating RTLIL representation for module `\$__div_mod_floor'.
Generating RTLIL representation for module `\_90_divfloor'.
Generating RTLIL representation for module `\_90_modfloor'.
Generating RTLIL representation for module `\_90_pow'.
Generating RTLIL representation for module `\_90_pmux'.
Generating RTLIL representation for module `\_90_demux'.
Generating RTLIL representation for module `\_90_lut'.
Successfully finished Verilog frontend.

3.125.2. Executing Verilog-2005 frontend: /nfs_scratch/scratch/Vorak/aram/Workspace/Raptor/yosys_verific_rs/yosys/install/bin/../share/yosys/rapidsilicon/genesis/ffs_map.v
Parsing Verilog input from `/nfs_scratch/scratch/Vorak/aram/Workspace/Raptor/yosys_verific_rs/yosys/install/bin/../share/yosys/rapidsilicon/genesis/ffs_map.v' to AST representation.
Generating RTLIL representation for module `\$_DFF_P_'.
Generating RTLIL representation for module `\$_DFF_PP0_'.
Generating RTLIL representation for module `\$_DFF_PN0_'.
Generating RTLIL representation for module `\$_DFF_PP1_'.
Generating RTLIL representation for module `\$_DFF_PN1_'.
Generating RTLIL representation for module `\$_DFFE_PP_'.
Generating RTLIL representation for module `\$_DFFE_PN_'.
Generating RTLIL representation for module `\$_DFFE_PP0P_'.
Generating RTLIL representation for module `\$_DFFE_PP0N_'.
Generating RTLIL representation for module `\$_DFFE_PN0P_'.
Generating RTLIL representation for module `\$_DFFE_PN0N_'.
Generating RTLIL representation for module `\$_DFFE_PP1P_'.
Generating RTLIL representation for module `\$_DFFE_PP1N_'.
Generating RTLIL representation for module `\$_DFFE_PN1P_'.
Generating RTLIL representation for module `\$_DFFE_PN1N_'.
Generating RTLIL representation for module `\$_DFFSR_PPP_'.
Generating RTLIL representation for module `\$_DFFSR_PNP_'.
Generating RTLIL representation for module `\$_DFFSR_PNN_'.
Generating RTLIL representation for module `\$_DFFSR_PPN_'.
Generating RTLIL representation for module `\$_DFFSR_NPP_'.
Generating RTLIL representation for module `\$_DFFSR_NNP_'.
Generating RTLIL representation for module `\$_DFFSR_NNN_'.
Generating RTLIL representation for module `\$_DFFSR_NPN_'.
Generating RTLIL representation for module `\$_DFFSRE_PPPP_'.
Generating RTLIL representation for module `\$_DFFSRE_PNPP_'.
Generating RTLIL representation for module `\$_DFFSRE_PPNP_'.
Generating RTLIL representation for module `\$_DFFSRE_PNNP_'.
Generating RTLIL representation for module `\$_DFFSRE_PPPN_'.
Generating RTLIL representation for module `\$_DFFSRE_PNPN_'.
Generating RTLIL representation for module `\$_DFFSRE_PPNN_'.
Generating RTLIL representation for module `\$_DFFSRE_PNNN_'.
Generating RTLIL representation for module `\$_DLATCHSR_PPP_'.
Generating RTLIL representation for module `\$_DLATCHSR_NPP_'.
Generating RTLIL representation for module `\$_DFF_N_'.
Generating RTLIL representation for module `\$_DFF_NP0_'.
Generating RTLIL representation for module `\$_DFF_NN0_'.
Generating RTLIL representation for module `\$_DFF_NP1_'.
Generating RTLIL representation for module `\$_DFF_NN1_'.
Generating RTLIL representation for module `\$_DFFE_NP_'.
Generating RTLIL representation for module `\$_DFFE_NN_'.
Generating RTLIL representation for module `\$_DFFE_NP0P_'.
Generating RTLIL representation for module `\$_DFFE_NP0N_'.
Generating RTLIL representation for module `\$_DFFE_NN0P_'.
Generating RTLIL representation for module `\$_DFFE_NN0N_'.
Generating RTLIL representation for module `\$_DFFE_NP1P_'.
Generating RTLIL representation for module `\$_DFFE_NP1N_'.
Generating RTLIL representation for module `\$_DFFE_NN1P_'.
Generating RTLIL representation for module `\$_DFFE_NN1N_'.
Generating RTLIL representation for module `\$_DFFSRE_NPPP_'.
Generating RTLIL representation for module `\$_DFFSRE_NNPP_'.
Generating RTLIL representation for module `\$_DFFSRE_NPNP_'.
Generating RTLIL representation for module `\$_DFFSRE_NNNP_'.
Generating RTLIL representation for module `\$_DFFSRE_NPPN_'.
Generating RTLIL representation for module `\$_DFFSRE_NNPN_'.
Generating RTLIL representation for module `\$_DFFSRE_NPNN_'.
Generating RTLIL representation for module `\$_DFFSRE_NNNN_'.
Generating RTLIL representation for module `\$__SHREG_DFF_P_'.
Generating RTLIL representation for module `\$_SDFF_PP0_'.
Generating RTLIL representation for module `\$_SDFF_PN0_'.
Generating RTLIL representation for module `\$_SDFF_NP0_'.
Generating RTLIL representation for module `\$_SDFF_NN0_'.
Generating RTLIL representation for module `\$_SDFF_PP1_'.
Generating RTLIL representation for module `\$_SDFF_PN1_'.
Generating RTLIL representation for module `\$_SDFF_NP1_'.
Generating RTLIL representation for module `\$_SDFF_NN1_'.
Successfully finished Verilog frontend.

3.125.3. Continuing TECHMAP pass.
Using extmapper simplemap for cells of type $lut.
Using template \$_DFF_P_ for cells of type $_DFF_P_.
Using template \$_DFFE_PP0P_ for cells of type $_DFFE_PP0P_.
Using extmapper simplemap for cells of type $logic_not.
No more expansions possible.
<suppressed ~768 debug messages>

yosys> opt_expr -mux_undef

3.126. Executing OPT_EXPR pass (perform const folding).
Optimizing module tea1.
<suppressed ~2559 debug messages>

yosys> simplemap

3.127. Executing SIMPLEMAP pass (map simple cells to gate primitives).

yosys> opt_expr

3.128. Executing OPT_EXPR pass (perform const folding).
Optimizing module tea1.

yosys> opt_merge

3.129. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\tea1'.
<suppressed ~1239 debug messages>
Removed a total of 413 cells.

yosys> opt_dff -nodffe -nosdff

3.130. Executing OPT_DFF pass (perform DFF optimizations).

yosys> opt_clean

3.131. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \tea1..
Removed 0 unused cells and 1608 unused wires.
<suppressed ~1 debug messages>

yosys> opt_expr

3.132. Executing OPT_EXPR pass (perform const folding).
Optimizing module tea1.
<suppressed ~68 debug messages>

yosys> opt_merge -nomux

3.133. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\tea1'.
Removed a total of 0 cells.

yosys> opt_muxtree

3.134. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \tea1..
  Creating internal representation of mux trees.
  No muxes found in this module.
Removed 0 multiplexer ports.

yosys> opt_reduce

3.135. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \tea1.
Performed a total of 0 changes.

yosys> opt_merge

3.136. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\tea1'.
Removed a total of 0 cells.

yosys> opt_share

3.137. Executing OPT_SHARE pass.

yosys> opt_dff -nosdff -nodffe

3.138. Executing OPT_DFF pass (perform DFF optimizations).

yosys> opt_clean

3.139. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \tea1..
Removed 0 unused cells and 1 unused wires.
<suppressed ~1 debug messages>

yosys> opt_expr

3.140. Executing OPT_EXPR pass (perform const folding).
Optimizing module tea1.
MAX OPT ITERATION = 1

yosys> abc -script /tmp/yosys_Lo13sI/abc_tmp_2.scr

3.141. Executing ABC pass (technology mapping using ABC).

3.141.1. Extracting gate netlist of module `\tea1' to `<abc-temp-dir>/input.blif'..
Extracted 919 gates and 1338 wires to a netlist network with 417 inputs and 221 outputs.

3.141.1.1. Executing ABC.
DE:   #PIs = 417  #Luts =   239  Max Lvl =   6  Avg Lvl =   1.37  [   0.07 sec. at Pass 0]{firstMap}
DE:   #PIs = 417  #Luts =   235  Max Lvl =   8  Avg Lvl =   1.56  [   0.62 sec. at Pass 1]{initMapFlow}
DE:   #PIs = 417  #Luts =   235  Max Lvl =   8  Avg Lvl =   1.56  [   0.16 sec. at Pass 2]{map}
DE:   #PIs = 417  #Luts =   235  Max Lvl =   8  Avg Lvl =   1.56  [   0.21 sec. at Pass 3]{postMap}
DE:   #PIs = 417  #Luts =   235  Max Lvl =   8  Avg Lvl =   1.56  [   0.29 sec. at Pass 4]{map}
DE:   #PIs = 417  #Luts =   235  Max Lvl =   8  Avg Lvl =   1.56  [   0.77 sec. at Pass 5]{postMap}
DE:   #PIs = 417  #Luts =   235  Max Lvl =   8  Avg Lvl =   1.56  [   1.01 sec. at Pass 6]{pushMap}
DE:   #PIs = 417  #Luts =   235  Max Lvl =   8  Avg Lvl =   1.56  [   0.51 sec. at Pass 7]{finalMap}

yosys> opt_expr

3.142. Executing OPT_EXPR pass (perform const folding).
Optimizing module tea1.

yosys> opt_merge -nomux

3.143. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\tea1'.
Removed a total of 0 cells.

yosys> opt_muxtree

3.144. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \tea1..
  Creating internal representation of mux trees.
  No muxes found in this module.
Removed 0 multiplexer ports.

yosys> opt_reduce

3.145. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \tea1.
Performed a total of 0 changes.

yosys> opt_merge

3.146. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\tea1'.
Removed a total of 0 cells.

yosys> opt_share

3.147. Executing OPT_SHARE pass.

yosys> opt_dff -nosdff -nodffe

3.148. Executing OPT_DFF pass (perform DFF optimizations).

yosys> opt_clean

3.149. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \tea1..
Removed 0 unused cells and 1091 unused wires.
<suppressed ~1 debug messages>

yosys> opt_expr

3.150. Executing OPT_EXPR pass (perform const folding).
Optimizing module tea1.
MAX OPT ITERATION = 1

yosys> hierarchy -check

3.151. Executing HIERARCHY pass (managing design hierarchy).

3.151.1. Analyzing design hierarchy..
Top module:  \tea1

3.151.2. Analyzing design hierarchy..
Top module:  \tea1
Removed 0 unused modules.

yosys> stat

3.152. Printing statistics.

=== tea1 ===

   Number of wires:                280
   Number of wire bits:           1027
   Number of public wires:          12
   Number of public wire bits:     395
   Number of memories:               0
   Number of memory bits:            0
   Number of processes:              0
   Number of cells:                590
     $lut                          235
     adder_carry                   124
     dffsre                        231


yosys> opt_clean -purge

3.153. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \tea1..
Removed 0 unused cells and 2 unused wires.
<suppressed ~2 debug messages>

yosys> write_verilog -noattr -nohex synthesized.v

3.154. Executing Verilog backend.
Dumping module `\tea1'.

End of script. Logfile hash: b127d7bf43, CPU: user 2.36s system 0.06s, MEM: 46.83 MB peak
Yosys 0.18+10 (git sha1 7361c89db, gcc 9.4.0-1ubuntu1~20.04.1 -fPIC -Os)
Time spent: 93% 6x abc (33 sec), 1% 29x opt_expr (0 sec), ...
real 21.82
user 28.80
sys 6.42
