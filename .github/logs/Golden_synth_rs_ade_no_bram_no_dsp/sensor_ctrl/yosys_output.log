
 /----------------------------------------------------------------------------\
 |                                                                            |
 |  yosys -- Yosys Open SYnthesis Suite                                       |
 |                                                                            |
 |  Copyright (C) 2012 - 2020  Claire Xenia Wolf <claire@yosyshq.com>         |
 |                                                                            |
 |  Permission to use, copy, modify, and/or distribute this software for any  |
 |  purpose with or without fee is hereby granted, provided that the above    |
 |  copyright notice and this permission notice appear in all copies.         |
 |                                                                            |
 |  THE SOFTWARE IS PROVIDED "AS IS" AND THE AUTHOR DISCLAIMS ALL WARRANTIES  |
 |  WITH REGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF          |
 |  MERCHANTABILITY AND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR   |
 |  ANY SPECIAL, DIRECT, INDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES    |
 |  WHATSOEVER RESULTING FROM LOSS OF USE, DATA OR PROFITS, WHETHER IN AN     |
 |  ACTION OF CONTRACT, NEGLIGENCE OR OTHER TORTIOUS ACTION, ARISING OUT OF   |
 |  OR IN CONNECTION WITH THE USE OR PERFORMANCE OF THIS SOFTWARE.            |
 |                                                                            |
 \----------------------------------------------------------------------------/

 Yosys-Verific 0.0.92
 Yosys 0.18+10 (git sha1 7361c89db, gcc 9.4.0-1ubuntu1~20.04.1 -fPIC -Os)


-- Executing script file `yosys.ys' --
echo on

yosys> plugin -i synth-rs

yosys> read -verific

yosys> read -incdir .

yosys> verific -vlog-incdir .

1. Executing VERIFIC (loading SystemVerilog and VHDL designs using Verific).
Built with Verific May22_SW_Release, released at Wed Jun  1 05:39:28 2022.

yosys> verilog_defaults -add -I.

yosys> read -sv prim_alert_pkg.sv prim_cipher_pkg.sv prim_mubi_pkg.sv prim_pkg.sv prim_secded_pkg.sv prim_subreg_pkg.sv sensor_ctrl_reg_pkg.sv prim_util_pkg.sv sensor_ctrl_pkg.sv lc_ctrl_pkg.sv pinmux_pkg.sv top_pkg.sv tlul_pkg.sv ast_pkg.sv

yosys> verific -sv prim_alert_pkg.sv prim_cipher_pkg.sv prim_mubi_pkg.sv prim_pkg.sv prim_secded_pkg.sv prim_subreg_pkg.sv sensor_ctrl_reg_pkg.sv prim_util_pkg.sv sensor_ctrl_pkg.sv lc_ctrl_pkg.sv pinmux_pkg.sv top_pkg.sv tlul_pkg.sv ast_pkg.sv

2. Executing VERIFIC (loading SystemVerilog and VHDL designs using Verific).
Built with Verific May22_SW_Release, released at Wed Jun  1 05:39:28 2022.
VERIFIC-COMMENT [VERI-1482] Analyzing Verilog file 'prim_alert_pkg.sv'
VERIFIC-WARNING [VERI-2418] prim_alert_pkg.sv:19: parameter 'ALERT_TX_DEFAULT' declared inside package 'prim_alert_pkg' shall be treated as localparam
VERIFIC-WARNING [VERI-2418] prim_alert_pkg.sv:22: parameter 'ALERT_RX_DEFAULT' declared inside package 'prim_alert_pkg' shall be treated as localparam
VERIFIC-COMMENT [VERI-1482] Analyzing Verilog file 'prim_cipher_pkg.sv'
VERIFIC-WARNING [VERI-2418] prim_cipher_pkg.sv:23: parameter 'PRINCE_SBOX4' declared inside package 'prim_cipher_pkg' shall be treated as localparam
VERIFIC-WARNING [VERI-2418] prim_cipher_pkg.sv:28: parameter 'PRINCE_SBOX4_INV' declared inside package 'prim_cipher_pkg' shall be treated as localparam
VERIFIC-WARNING [VERI-2418] prim_cipher_pkg.sv:33: parameter 'PRINCE_SHIFT_ROWS64' declared inside package 'prim_cipher_pkg' shall be treated as localparam
VERIFIC-WARNING [VERI-2418] prim_cipher_pkg.sv:38: parameter 'PRINCE_SHIFT_ROWS64_INV' declared inside package 'prim_cipher_pkg' shall be treated as localparam
VERIFIC-WARNING [VERI-2418] prim_cipher_pkg.sv:44: parameter 'PRINCE_ROUND_CONST' declared inside package 'prim_cipher_pkg' shall be treated as localparam
VERIFIC-WARNING [VERI-2418] prim_cipher_pkg.sv:58: parameter 'PRINCE_ALPHA_CONST' declared inside package 'prim_cipher_pkg' shall be treated as localparam
VERIFIC-WARNING [VERI-2418] prim_cipher_pkg.sv:61: parameter 'PRINCE_SHIFT_ROWS_CONST0' declared inside package 'prim_cipher_pkg' shall be treated as localparam
VERIFIC-WARNING [VERI-2418] prim_cipher_pkg.sv:62: parameter 'PRINCE_SHIFT_ROWS_CONST1' declared inside package 'prim_cipher_pkg' shall be treated as localparam
VERIFIC-WARNING [VERI-2418] prim_cipher_pkg.sv:63: parameter 'PRINCE_SHIFT_ROWS_CONST2' declared inside package 'prim_cipher_pkg' shall be treated as localparam
VERIFIC-WARNING [VERI-2418] prim_cipher_pkg.sv:64: parameter 'PRINCE_SHIFT_ROWS_CONST3' declared inside package 'prim_cipher_pkg' shall be treated as localparam
VERIFIC-WARNING [VERI-2418] prim_cipher_pkg.sv:141: parameter 'PRESENT_SBOX4' declared inside package 'prim_cipher_pkg' shall be treated as localparam
VERIFIC-WARNING [VERI-2418] prim_cipher_pkg.sv:146: parameter 'PRESENT_SBOX4_INV' declared inside package 'prim_cipher_pkg' shall be treated as localparam
VERIFIC-WARNING [VERI-2418] prim_cipher_pkg.sv:153: parameter 'PRESENT_PERM32' declared inside package 'prim_cipher_pkg' shall be treated as localparam
VERIFIC-WARNING [VERI-2418] prim_cipher_pkg.sv:162: parameter 'PRESENT_PERM32_INV' declared inside package 'prim_cipher_pkg' shall be treated as localparam
VERIFIC-WARNING [VERI-2418] prim_cipher_pkg.sv:172: parameter 'PRESENT_PERM64' declared inside package 'prim_cipher_pkg' shall be treated as localparam
VERIFIC-WARNING [VERI-2418] prim_cipher_pkg.sv:189: parameter 'PRESENT_PERM64_INV' declared inside package 'prim_cipher_pkg' shall be treated as localparam
VERIFIC-COMMENT [VERI-1482] Analyzing Verilog file 'prim_mubi_pkg.sv'
VERIFIC-WARNING [VERI-2418] prim_mubi_pkg.sv:19: parameter 'MuBi4Width' declared inside package 'prim_mubi_pkg' shall be treated as localparam
VERIFIC-WARNING [VERI-2418] prim_mubi_pkg.sv:148: parameter 'MuBi8Width' declared inside package 'prim_mubi_pkg' shall be treated as localparam
VERIFIC-WARNING [VERI-2418] prim_mubi_pkg.sv:277: parameter 'MuBi12Width' declared inside package 'prim_mubi_pkg' shall be treated as localparam
VERIFIC-WARNING [VERI-2418] prim_mubi_pkg.sv:406: parameter 'MuBi16Width' declared inside package 'prim_mubi_pkg' shall be treated as localparam
VERIFIC-COMMENT [VERI-1482] Analyzing Verilog file 'prim_pkg.sv'
VERIFIC-COMMENT [VERI-1482] Analyzing Verilog file 'prim_secded_pkg.sv'
VERIFIC-WARNING [VERI-2418] prim_secded_pkg.sv:81: parameter 'Secded2216ZeroEcc' declared inside package 'prim_secded_pkg' shall be treated as localparam
VERIFIC-WARNING [VERI-2418] prim_secded_pkg.sv:82: parameter 'Secded2216ZeroWord' declared inside package 'prim_secded_pkg' shall be treated as localparam
VERIFIC-WARNING [VERI-2418] prim_secded_pkg.sv:90: parameter 'Secded2822ZeroEcc' declared inside package 'prim_secded_pkg' shall be treated as localparam
VERIFIC-WARNING [VERI-2418] prim_secded_pkg.sv:91: parameter 'Secded2822ZeroWord' declared inside package 'prim_secded_pkg' shall be treated as localparam
VERIFIC-WARNING [VERI-2418] prim_secded_pkg.sv:99: parameter 'Secded3932ZeroEcc' declared inside package 'prim_secded_pkg' shall be treated as localparam
VERIFIC-WARNING [VERI-2418] prim_secded_pkg.sv:100: parameter 'Secded3932ZeroWord' declared inside package 'prim_secded_pkg' shall be treated as localparam
VERIFIC-WARNING [VERI-2418] prim_secded_pkg.sv:108: parameter 'Secded6457ZeroEcc' declared inside package 'prim_secded_pkg' shall be treated as localparam
VERIFIC-WARNING [VERI-2418] prim_secded_pkg.sv:109: parameter 'Secded6457ZeroWord' declared inside package 'prim_secded_pkg' shall be treated as localparam
VERIFIC-WARNING [VERI-2418] prim_secded_pkg.sv:117: parameter 'Secded7264ZeroEcc' declared inside package 'prim_secded_pkg' shall be treated as localparam
VERIFIC-WARNING [VERI-2418] prim_secded_pkg.sv:118: parameter 'Secded7264ZeroWord' declared inside package 'prim_secded_pkg' shall be treated as localparam
VERIFIC-WARNING [VERI-2418] prim_secded_pkg.sv:126: parameter 'SecdedHamming2216ZeroEcc' declared inside package 'prim_secded_pkg' shall be treated as localparam
VERIFIC-WARNING [VERI-2418] prim_secded_pkg.sv:127: parameter 'SecdedHamming2216ZeroWord' declared inside package 'prim_secded_pkg' shall be treated as localparam
VERIFIC-WARNING [VERI-2418] prim_secded_pkg.sv:135: parameter 'SecdedHamming3932ZeroEcc' declared inside package 'prim_secded_pkg' shall be treated as localparam
VERIFIC-WARNING [VERI-2418] prim_secded_pkg.sv:136: parameter 'SecdedHamming3932ZeroWord' declared inside package 'prim_secded_pkg' shall be treated as localparam
VERIFIC-WARNING [VERI-2418] prim_secded_pkg.sv:144: parameter 'SecdedHamming7264ZeroEcc' declared inside package 'prim_secded_pkg' shall be treated as localparam
VERIFIC-WARNING [VERI-2418] prim_secded_pkg.sv:145: parameter 'SecdedHamming7264ZeroWord' declared inside package 'prim_secded_pkg' shall be treated as localparam
VERIFIC-WARNING [VERI-2418] prim_secded_pkg.sv:153: parameter 'SecdedHamming7668ZeroEcc' declared inside package 'prim_secded_pkg' shall be treated as localparam
VERIFIC-WARNING [VERI-2418] prim_secded_pkg.sv:154: parameter 'SecdedHamming7668ZeroWord' declared inside package 'prim_secded_pkg' shall be treated as localparam
VERIFIC-WARNING [VERI-2418] prim_secded_pkg.sv:162: parameter 'SecdedInv2216ZeroEcc' declared inside package 'prim_secded_pkg' shall be treated as localparam
VERIFIC-WARNING [VERI-2418] prim_secded_pkg.sv:163: parameter 'SecdedInv2216ZeroWord' declared inside package 'prim_secded_pkg' shall be treated as localparam
VERIFIC-WARNING [VERI-2418] prim_secded_pkg.sv:171: parameter 'SecdedInv2822ZeroEcc' declared inside package 'prim_secded_pkg' shall be treated as localparam
VERIFIC-WARNING [VERI-2418] prim_secded_pkg.sv:172: parameter 'SecdedInv2822ZeroWord' declared inside package 'prim_secded_pkg' shall be treated as localparam
VERIFIC-WARNING [VERI-2418] prim_secded_pkg.sv:180: parameter 'SecdedInv3932ZeroEcc' declared inside package 'prim_secded_pkg' shall be treated as localparam
VERIFIC-WARNING [VERI-2418] prim_secded_pkg.sv:181: parameter 'SecdedInv3932ZeroWord' declared inside package 'prim_secded_pkg' shall be treated as localparam
VERIFIC-WARNING [VERI-2418] prim_secded_pkg.sv:189: parameter 'SecdedInv6457ZeroEcc' declared inside package 'prim_secded_pkg' shall be treated as localparam
VERIFIC-WARNING [VERI-2418] prim_secded_pkg.sv:190: parameter 'SecdedInv6457ZeroWord' declared inside package 'prim_secded_pkg' shall be treated as localparam
VERIFIC-WARNING [VERI-2418] prim_secded_pkg.sv:198: parameter 'SecdedInv7264ZeroEcc' declared inside package 'prim_secded_pkg' shall be treated as localparam
VERIFIC-WARNING [VERI-2418] prim_secded_pkg.sv:199: parameter 'SecdedInv7264ZeroWord' declared inside package 'prim_secded_pkg' shall be treated as localparam
VERIFIC-WARNING [VERI-2418] prim_secded_pkg.sv:207: parameter 'SecdedInvHamming2216ZeroEcc' declared inside package 'prim_secded_pkg' shall be treated as localparam
VERIFIC-WARNING [VERI-2418] prim_secded_pkg.sv:208: parameter 'SecdedInvHamming2216ZeroWord' declared inside package 'prim_secded_pkg' shall be treated as localparam
VERIFIC-WARNING [VERI-2418] prim_secded_pkg.sv:216: parameter 'SecdedInvHamming3932ZeroEcc' declared inside package 'prim_secded_pkg' shall be treated as localparam
VERIFIC-WARNING [VERI-2418] prim_secded_pkg.sv:217: parameter 'SecdedInvHamming3932ZeroWord' declared inside package 'prim_secded_pkg' shall be treated as localparam
VERIFIC-WARNING [VERI-2418] prim_secded_pkg.sv:225: parameter 'SecdedInvHamming7264ZeroEcc' declared inside package 'prim_secded_pkg' shall be treated as localparam
VERIFIC-WARNING [VERI-2418] prim_secded_pkg.sv:226: parameter 'SecdedInvHamming7264ZeroWord' declared inside package 'prim_secded_pkg' shall be treated as localparam
VERIFIC-WARNING [VERI-2418] prim_secded_pkg.sv:234: parameter 'SecdedInvHamming7668ZeroEcc' declared inside package 'prim_secded_pkg' shall be treated as localparam
VERIFIC-WARNING [VERI-2418] prim_secded_pkg.sv:235: parameter 'SecdedInvHamming7668ZeroWord' declared inside package 'prim_secded_pkg' shall be treated as localparam
VERIFIC-COMMENT [VERI-1482] Analyzing Verilog file 'prim_subreg_pkg.sv'
VERIFIC-COMMENT [VERI-1482] Analyzing Verilog file 'sensor_ctrl_reg_pkg.sv'
VERIFIC-WARNING [VERI-2418] sensor_ctrl_reg_pkg.sv:10: parameter 'NumAlertEvents' declared inside package 'sensor_ctrl_reg_pkg' shall be treated as localparam
VERIFIC-WARNING [VERI-2418] sensor_ctrl_reg_pkg.sv:11: parameter 'NumLocalEvents' declared inside package 'sensor_ctrl_reg_pkg' shall be treated as localparam
VERIFIC-WARNING [VERI-2418] sensor_ctrl_reg_pkg.sv:12: parameter 'NumAlerts' declared inside package 'sensor_ctrl_reg_pkg' shall be treated as localparam
VERIFIC-WARNING [VERI-2418] sensor_ctrl_reg_pkg.sv:13: parameter 'NumIoRails' declared inside package 'sensor_ctrl_reg_pkg' shall be treated as localparam
VERIFIC-WARNING [VERI-2418] sensor_ctrl_reg_pkg.sv:16: parameter 'BlockAw' declared inside package 'sensor_ctrl_reg_pkg' shall be treated as localparam
VERIFIC-WARNING [VERI-2418] sensor_ctrl_reg_pkg.sv:87: parameter 'SENSOR_CTRL_ALERT_TEST_OFFSET' declared inside package 'sensor_ctrl_reg_pkg' shall be treated as localparam
VERIFIC-WARNING [VERI-2418] sensor_ctrl_reg_pkg.sv:88: parameter 'SENSOR_CTRL_CFG_REGWEN_OFFSET' declared inside package 'sensor_ctrl_reg_pkg' shall be treated as localparam
VERIFIC-WARNING [VERI-2418] sensor_ctrl_reg_pkg.sv:89: parameter 'SENSOR_CTRL_ALERT_TRIG_OFFSET' declared inside package 'sensor_ctrl_reg_pkg' shall be treated as localparam
VERIFIC-WARNING [VERI-2418] sensor_ctrl_reg_pkg.sv:90: parameter 'SENSOR_CTRL_FATAL_ALERT_EN_OFFSET' declared inside package 'sensor_ctrl_reg_pkg' shall be treated as localparam
VERIFIC-WARNING [VERI-2418] sensor_ctrl_reg_pkg.sv:91: parameter 'SENSOR_CTRL_RECOV_ALERT_OFFSET' declared inside package 'sensor_ctrl_reg_pkg' shall be treated as localparam
VERIFIC-WARNING [VERI-2418] sensor_ctrl_reg_pkg.sv:92: parameter 'SENSOR_CTRL_FATAL_ALERT_OFFSET' declared inside package 'sensor_ctrl_reg_pkg' shall be treated as localparam
VERIFIC-WARNING [VERI-2418] sensor_ctrl_reg_pkg.sv:93: parameter 'SENSOR_CTRL_STATUS_OFFSET' declared inside package 'sensor_ctrl_reg_pkg' shall be treated as localparam
VERIFIC-WARNING [VERI-2418] sensor_ctrl_reg_pkg.sv:96: parameter 'SENSOR_CTRL_ALERT_TEST_RESVAL' declared inside package 'sensor_ctrl_reg_pkg' shall be treated as localparam
VERIFIC-WARNING [VERI-2418] sensor_ctrl_reg_pkg.sv:97: parameter 'SENSOR_CTRL_ALERT_TEST_RECOV_ALERT_RESVAL' declared inside package 'sensor_ctrl_reg_pkg' shall be treated as localparam
VERIFIC-WARNING [VERI-2418] sensor_ctrl_reg_pkg.sv:98: parameter 'SENSOR_CTRL_ALERT_TEST_FATAL_ALERT_RESVAL' declared inside package 'sensor_ctrl_reg_pkg' shall be treated as localparam
VERIFIC-WARNING [VERI-2418] sensor_ctrl_reg_pkg.sv:112: parameter 'SENSOR_CTRL_PERMIT' declared inside package 'sensor_ctrl_reg_pkg' shall be treated as localparam
VERIFIC-COMMENT [VERI-1482] Analyzing Verilog file 'prim_util_pkg.sv'
VERIFIC-COMMENT [VERI-1482] Analyzing Verilog file 'sensor_ctrl_pkg.sv'
VERIFIC-WARNING [VERI-2418] sensor_ctrl_pkg.sv:9: parameter 'RecovAlert' declared inside package 'sensor_ctrl_pkg' shall be treated as localparam
VERIFIC-WARNING [VERI-2418] sensor_ctrl_pkg.sv:10: parameter 'FatalAlert' declared inside package 'sensor_ctrl_pkg' shall be treated as localparam
VERIFIC-WARNING [VERI-2418] sensor_ctrl_pkg.sv:13: parameter 'TotalEvents' declared inside package 'sensor_ctrl_pkg' shall be treated as localparam
VERIFIC-COMMENT [VERI-1482] Analyzing Verilog file 'lc_ctrl_pkg.sv'
VERIFIC-WARNING [VERI-2418] lc_ctrl_pkg.sv:13: parameter 'A0' declared inside package 'lc_ctrl_pkg' shall be treated as localparam
VERIFIC-WARNING [VERI-2418] lc_ctrl_pkg.sv:14: parameter 'A1' declared inside package 'lc_ctrl_pkg' shall be treated as localparam
VERIFIC-WARNING [VERI-2418] lc_ctrl_pkg.sv:15: parameter 'A2' declared inside package 'lc_ctrl_pkg' shall be treated as localparam
VERIFIC-WARNING [VERI-2418] lc_ctrl_pkg.sv:16: parameter 'A3' declared inside package 'lc_ctrl_pkg' shall be treated as localparam
VERIFIC-WARNING [VERI-2418] lc_ctrl_pkg.sv:17: parameter 'A4' declared inside package 'lc_ctrl_pkg' shall be treated as localparam
VERIFIC-WARNING [VERI-2418] lc_ctrl_pkg.sv:18: parameter 'A5' declared inside package 'lc_ctrl_pkg' shall be treated as localparam
VERIFIC-WARNING [VERI-2418] lc_ctrl_pkg.sv:19: parameter 'A6' declared inside package 'lc_ctrl_pkg' shall be treated as localparam
VERIFIC-WARNING [VERI-2418] lc_ctrl_pkg.sv:20: parameter 'A7' declared inside package 'lc_ctrl_pkg' shall be treated as localparam
VERIFIC-WARNING [VERI-2418] lc_ctrl_pkg.sv:21: parameter 'A8' declared inside package 'lc_ctrl_pkg' shall be treated as localparam
VERIFIC-WARNING [VERI-2418] lc_ctrl_pkg.sv:22: parameter 'A9' declared inside package 'lc_ctrl_pkg' shall be treated as localparam
VERIFIC-WARNING [VERI-2418] lc_ctrl_pkg.sv:23: parameter 'A10' declared inside package 'lc_ctrl_pkg' shall be treated as localparam
VERIFIC-WARNING [VERI-2418] lc_ctrl_pkg.sv:24: parameter 'A11' declared inside package 'lc_ctrl_pkg' shall be treated as localparam
VERIFIC-WARNING [VERI-2418] lc_ctrl_pkg.sv:26: parameter 'B0' declared inside package 'lc_ctrl_pkg' shall be treated as localparam
VERIFIC-WARNING [VERI-2418] lc_ctrl_pkg.sv:27: parameter 'B1' declared inside package 'lc_ctrl_pkg' shall be treated as localparam
VERIFIC-WARNING [VERI-2418] lc_ctrl_pkg.sv:28: parameter 'B2' declared inside package 'lc_ctrl_pkg' shall be treated as localparam
VERIFIC-WARNING [VERI-2418] lc_ctrl_pkg.sv:29: parameter 'B3' declared inside package 'lc_ctrl_pkg' shall be treated as localparam
VERIFIC-WARNING [VERI-2418] lc_ctrl_pkg.sv:30: parameter 'B4' declared inside package 'lc_ctrl_pkg' shall be treated as localparam
VERIFIC-WARNING [VERI-2418] lc_ctrl_pkg.sv:31: parameter 'B5' declared inside package 'lc_ctrl_pkg' shall be treated as localparam
VERIFIC-WARNING [VERI-2418] lc_ctrl_pkg.sv:32: parameter 'B6' declared inside package 'lc_ctrl_pkg' shall be treated as localparam
VERIFIC-WARNING [VERI-2418] lc_ctrl_pkg.sv:33: parameter 'B7' declared inside package 'lc_ctrl_pkg' shall be treated as localparam
VERIFIC-WARNING [VERI-2418] lc_ctrl_pkg.sv:34: parameter 'B8' declared inside package 'lc_ctrl_pkg' shall be treated as localparam
VERIFIC-WARNING [VERI-2418] lc_ctrl_pkg.sv:35: parameter 'B9' declared inside package 'lc_ctrl_pkg' shall be treated as localparam
VERIFIC-WARNING [VERI-2418] lc_ctrl_pkg.sv:36: parameter 'B10' declared inside package 'lc_ctrl_pkg' shall be treated as localparam
VERIFIC-WARNING [VERI-2418] lc_ctrl_pkg.sv:37: parameter 'B11' declared inside package 'lc_ctrl_pkg' shall be treated as localparam
VERIFIC-WARNING [VERI-2418] lc_ctrl_pkg.sv:40: parameter 'C0' declared inside package 'lc_ctrl_pkg' shall be treated as localparam
VERIFIC-WARNING [VERI-2418] lc_ctrl_pkg.sv:41: parameter 'C1' declared inside package 'lc_ctrl_pkg' shall be treated as localparam
VERIFIC-WARNING [VERI-2418] lc_ctrl_pkg.sv:42: parameter 'C2' declared inside package 'lc_ctrl_pkg' shall be treated as localparam
VERIFIC-WARNING [VERI-2418] lc_ctrl_pkg.sv:43: parameter 'C3' declared inside package 'lc_ctrl_pkg' shall be treated as localparam
VERIFIC-WARNING [VERI-2418] lc_ctrl_pkg.sv:44: parameter 'C4' declared inside package 'lc_ctrl_pkg' shall be treated as localparam
VERIFIC-WARNING [VERI-2418] lc_ctrl_pkg.sv:45: parameter 'C5' declared inside package 'lc_ctrl_pkg' shall be treated as localparam
VERIFIC-WARNING [VERI-2418] lc_ctrl_pkg.sv:46: parameter 'C6' declared inside package 'lc_ctrl_pkg' shall be treated as localparam
VERIFIC-WARNING [VERI-2418] lc_ctrl_pkg.sv:47: parameter 'C7' declared inside package 'lc_ctrl_pkg' shall be treated as localparam
VERIFIC-WARNING [VERI-2418] lc_ctrl_pkg.sv:48: parameter 'C8' declared inside package 'lc_ctrl_pkg' shall be treated as localparam
VERIFIC-WARNING [VERI-2418] lc_ctrl_pkg.sv:49: parameter 'C9' declared inside package 'lc_ctrl_pkg' shall be treated as localparam
VERIFIC-WARNING [VERI-2418] lc_ctrl_pkg.sv:50: parameter 'C10' declared inside package 'lc_ctrl_pkg' shall be treated as localparam
VERIFIC-WARNING [VERI-2418] lc_ctrl_pkg.sv:51: parameter 'C11' declared inside package 'lc_ctrl_pkg' shall be treated as localparam
VERIFIC-WARNING [VERI-2418] lc_ctrl_pkg.sv:52: parameter 'C12' declared inside package 'lc_ctrl_pkg' shall be treated as localparam
VERIFIC-WARNING [VERI-2418] lc_ctrl_pkg.sv:53: parameter 'C13' declared inside package 'lc_ctrl_pkg' shall be treated as localparam
VERIFIC-WARNING [VERI-2418] lc_ctrl_pkg.sv:54: parameter 'C14' declared inside package 'lc_ctrl_pkg' shall be treated as localparam
VERIFIC-WARNING [VERI-2418] lc_ctrl_pkg.sv:55: parameter 'C15' declared inside package 'lc_ctrl_pkg' shall be treated as localparam
VERIFIC-WARNING [VERI-2418] lc_ctrl_pkg.sv:57: parameter 'D0' declared inside package 'lc_ctrl_pkg' shall be treated as localparam
VERIFIC-WARNING [VERI-2418] lc_ctrl_pkg.sv:58: parameter 'D1' declared inside package 'lc_ctrl_pkg' shall be treated as localparam
VERIFIC-WARNING [VERI-2418] lc_ctrl_pkg.sv:59: parameter 'D2' declared inside package 'lc_ctrl_pkg' shall be treated as localparam
VERIFIC-WARNING [VERI-2418] lc_ctrl_pkg.sv:60: parameter 'D3' declared inside package 'lc_ctrl_pkg' shall be treated as localparam
VERIFIC-WARNING [VERI-2418] lc_ctrl_pkg.sv:61: parameter 'D4' declared inside package 'lc_ctrl_pkg' shall be treated as localparam
VERIFIC-WARNING [VERI-2418] lc_ctrl_pkg.sv:62: parameter 'D5' declared inside package 'lc_ctrl_pkg' shall be treated as localparam
VERIFIC-WARNING [VERI-2418] lc_ctrl_pkg.sv:63: parameter 'D6' declared inside package 'lc_ctrl_pkg' shall be treated as localparam
VERIFIC-WARNING [VERI-2418] lc_ctrl_pkg.sv:64: parameter 'D7' declared inside package 'lc_ctrl_pkg' shall be treated as localparam
VERIFIC-WARNING [VERI-2418] lc_ctrl_pkg.sv:65: parameter 'D8' declared inside package 'lc_ctrl_pkg' shall be treated as localparam
VERIFIC-WARNING [VERI-2418] lc_ctrl_pkg.sv:66: parameter 'D9' declared inside package 'lc_ctrl_pkg' shall be treated as localparam
VERIFIC-WARNING [VERI-2418] lc_ctrl_pkg.sv:67: parameter 'D10' declared inside package 'lc_ctrl_pkg' shall be treated as localparam
VERIFIC-WARNING [VERI-2418] lc_ctrl_pkg.sv:68: parameter 'D11' declared inside package 'lc_ctrl_pkg' shall be treated as localparam
VERIFIC-WARNING [VERI-2418] lc_ctrl_pkg.sv:69: parameter 'D12' declared inside package 'lc_ctrl_pkg' shall be treated as localparam
VERIFIC-WARNING [VERI-2418] lc_ctrl_pkg.sv:70: parameter 'D13' declared inside package 'lc_ctrl_pkg' shall be treated as localparam
VERIFIC-WARNING [VERI-2418] lc_ctrl_pkg.sv:71: parameter 'D14' declared inside package 'lc_ctrl_pkg' shall be treated as localparam
VERIFIC-WARNING [VERI-2418] lc_ctrl_pkg.sv:72: parameter 'D15' declared inside package 'lc_ctrl_pkg' shall be treated as localparam
VERIFIC-WARNING [VERI-2418] lc_ctrl_pkg.sv:75: parameter 'E0' declared inside package 'lc_ctrl_pkg' shall be treated as localparam
VERIFIC-WARNING [VERI-2418] lc_ctrl_pkg.sv:76: parameter 'F0' declared inside package 'lc_ctrl_pkg' shall be treated as localparam
VERIFIC-WARNING [VERI-2418] lc_ctrl_pkg.sv:82: parameter 'LcValueWidth' declared inside package 'lc_ctrl_pkg' shall be treated as localparam
VERIFIC-WARNING [VERI-2418] lc_ctrl_pkg.sv:83: parameter 'LcTokenWidth' declared inside package 'lc_ctrl_pkg' shall be treated as localparam
VERIFIC-WARNING [VERI-2418] lc_ctrl_pkg.sv:84: parameter 'NumLcStateValues' declared inside package 'lc_ctrl_pkg' shall be treated as localparam
VERIFIC-WARNING [VERI-2418] lc_ctrl_pkg.sv:85: parameter 'LcStateWidth' declared inside package 'lc_ctrl_pkg' shall be treated as localparam
VERIFIC-WARNING [VERI-2418] lc_ctrl_pkg.sv:86: parameter 'NumLcCountValues' declared inside package 'lc_ctrl_pkg' shall be treated as localparam
VERIFIC-WARNING [VERI-2418] lc_ctrl_pkg.sv:87: parameter 'LcCountWidth' declared inside package 'lc_ctrl_pkg' shall be treated as localparam
VERIFIC-WARNING [VERI-2418] lc_ctrl_pkg.sv:88: parameter 'NumLcStates' declared inside package 'lc_ctrl_pkg' shall be treated as localparam
VERIFIC-WARNING [VERI-2418] lc_ctrl_pkg.sv:89: parameter 'DecLcStateWidth' declared inside package 'lc_ctrl_pkg' shall be treated as localparam
VERIFIC-WARNING [VERI-2418] lc_ctrl_pkg.sv:90: parameter 'DecLcCountWidth' declared inside package 'lc_ctrl_pkg' shall be treated as localparam
VERIFIC-WARNING [VERI-2418] lc_ctrl_pkg.sv:91: parameter 'LcIdStateWidth' declared inside package 'lc_ctrl_pkg' shall be treated as localparam
VERIFIC-WARNING [VERI-2418] lc_ctrl_pkg.sv:92: parameter 'DecLcIdStateWidth' declared inside package 'lc_ctrl_pkg' shall be treated as localparam
VERIFIC-WARNING [VERI-2418] lc_ctrl_pkg.sv:172: parameter 'NumTokens' declared inside package 'lc_ctrl_pkg' shall be treated as localparam
VERIFIC-WARNING [VERI-2418] lc_ctrl_pkg.sv:173: parameter 'TokenIdxWidth' declared inside package 'lc_ctrl_pkg' shall be treated as localparam
VERIFIC-WARNING [VERI-2418] lc_ctrl_pkg.sv:191: parameter 'TxWidth' declared inside package 'lc_ctrl_pkg' shall be treated as localparam
VERIFIC-WARNING [VERI-2418] lc_ctrl_pkg.sv:199: parameter 'LC_TX_DEFAULT' declared inside package 'lc_ctrl_pkg' shall be treated as localparam
VERIFIC-WARNING [VERI-2418] lc_ctrl_pkg.sv:201: parameter 'RmaSeedWidth' declared inside package 'lc_ctrl_pkg' shall be treated as localparam
VERIFIC-WARNING [VERI-2418] lc_ctrl_pkg.sv:204: parameter 'LcKeymgrDivWidth' declared inside package 'lc_ctrl_pkg' shall be treated as localparam
VERIFIC-WARNING [VERI-2418] lc_ctrl_pkg.sv:263: parameter 'TransTokenIdxMatrix' declared inside package 'lc_ctrl_pkg' shall be treated as localparam
VERIFIC-COMMENT [VERI-1482] Analyzing Verilog file 'pinmux_pkg.sv'
VERIFIC-WARNING [VERI-2418] pinmux_pkg.sv:18: parameter 'NIOPokSignals' declared inside package 'pinmux_pkg' shall be treated as localparam
VERIFIC-WARNING [VERI-2418] pinmux_pkg.sv:25: parameter 'NDFTStraps' declared inside package 'pinmux_pkg' shall be treated as localparam
VERIFIC-WARNING [VERI-2418] pinmux_pkg.sv:27: parameter 'DftStrapPos' declared inside package 'pinmux_pkg' shall be treated as localparam
VERIFIC-WARNING [VERI-2418] pinmux_pkg.sv:36: parameter 'NLcStraps' declared inside package 'pinmux_pkg' shall be treated as localparam
VERIFIC-WARNING [VERI-2418] pinmux_pkg.sv:38: parameter 'LcStrapPos' declared inside package 'pinmux_pkg' shall be treated as localparam
VERIFIC-COMMENT [VERI-1482] Analyzing Verilog file 'top_pkg.sv'
VERIFIC-COMMENT [VERI-1482] Analyzing Verilog file 'tlul_pkg.sv'
VERIFIC-WARNING [VERI-2418] tlul_pkg.sv:14: parameter 'ArbiterImpl' declared inside package 'tlul_pkg' shall be treated as localparam
VERIFIC-WARNING [VERI-2418] tlul_pkg.sv:27: parameter 'H2DCmdMaxWidth' declared inside package 'tlul_pkg' shall be treated as localparam
VERIFIC-WARNING [VERI-2418] tlul_pkg.sv:28: parameter 'H2DCmdIntgWidth' declared inside package 'tlul_pkg' shall be treated as localparam
VERIFIC-WARNING [VERI-2418] tlul_pkg.sv:29: parameter 'H2DCmdFullWidth' declared inside package 'tlul_pkg' shall be treated as localparam
VERIFIC-WARNING [VERI-2418] tlul_pkg.sv:30: parameter 'D2HRspMaxWidth' declared inside package 'tlul_pkg' shall be treated as localparam
VERIFIC-WARNING [VERI-2418] tlul_pkg.sv:31: parameter 'D2HRspIntgWidth' declared inside package 'tlul_pkg' shall be treated as localparam
VERIFIC-WARNING [VERI-2418] tlul_pkg.sv:32: parameter 'D2HRspFullWidth' declared inside package 'tlul_pkg' shall be treated as localparam
VERIFIC-WARNING [VERI-2418] tlul_pkg.sv:33: parameter 'DataMaxWidth' declared inside package 'tlul_pkg' shall be treated as localparam
VERIFIC-WARNING [VERI-2418] tlul_pkg.sv:34: parameter 'DataIntgWidth' declared inside package 'tlul_pkg' shall be treated as localparam
VERIFIC-WARNING [VERI-2418] tlul_pkg.sv:35: parameter 'DataFullWidth' declared inside package 'tlul_pkg' shall be treated as localparam
VERIFIC-WARNING [VERI-2418] tlul_pkg.sv:44: parameter 'TL_A_USER_DEFAULT' declared inside package 'tlul_pkg' shall be treated as localparam
VERIFIC-WARNING [VERI-2418] tlul_pkg.sv:84: parameter 'TL_D_USER_DEFAULT' declared inside package 'tlul_pkg' shall be treated as localparam
VERIFIC-COMMENT [VERI-1482] Analyzing Verilog file 'ast_pkg.sv'
VERIFIC-WARNING [VERI-2418] ast_pkg.sv:15: parameter 'NumAlerts' declared inside package 'ast_pkg' shall be treated as localparam
VERIFIC-WARNING [VERI-2418] ast_pkg.sv:16: parameter 'NumIoRails' declared inside package 'ast_pkg' shall be treated as localparam
VERIFIC-WARNING [VERI-2418] ast_pkg.sv:17: parameter 'AsSel' declared inside package 'ast_pkg' shall be treated as localparam
VERIFIC-WARNING [VERI-2418] ast_pkg.sv:18: parameter 'CgSel' declared inside package 'ast_pkg' shall be treated as localparam
VERIFIC-WARNING [VERI-2418] ast_pkg.sv:19: parameter 'GdSel' declared inside package 'ast_pkg' shall be treated as localparam
VERIFIC-WARNING [VERI-2418] ast_pkg.sv:20: parameter 'TsHiSel' declared inside package 'ast_pkg' shall be treated as localparam
VERIFIC-WARNING [VERI-2418] ast_pkg.sv:21: parameter 'TsLoSel' declared inside package 'ast_pkg' shall be treated as localparam
VERIFIC-WARNING [VERI-2418] ast_pkg.sv:22: parameter 'FlaSel' declared inside package 'ast_pkg' shall be treated as localparam
VERIFIC-WARNING [VERI-2418] ast_pkg.sv:23: parameter 'OtpSel' declared inside package 'ast_pkg' shall be treated as localparam
VERIFIC-WARNING [VERI-2418] ast_pkg.sv:24: parameter 'Ot0Sel' declared inside package 'ast_pkg' shall be treated as localparam
VERIFIC-WARNING [VERI-2418] ast_pkg.sv:25: parameter 'Ot1Sel' declared inside package 'ast_pkg' shall be treated as localparam
VERIFIC-WARNING [VERI-2418] ast_pkg.sv:26: parameter 'Ot2Sel' declared inside package 'ast_pkg' shall be treated as localparam
VERIFIC-WARNING [VERI-2418] ast_pkg.sv:27: parameter 'Ot3Sel' declared inside package 'ast_pkg' shall be treated as localparam
VERIFIC-WARNING [VERI-2418] ast_pkg.sv:28: parameter 'Ot4Sel' declared inside package 'ast_pkg' shall be treated as localparam
VERIFIC-WARNING [VERI-2418] ast_pkg.sv:29: parameter 'Ot5Sel' declared inside package 'ast_pkg' shall be treated as localparam
VERIFIC-WARNING [VERI-2418] ast_pkg.sv:31: parameter 'Lc2HcTrCyc' declared inside package 'ast_pkg' shall be treated as localparam
VERIFIC-WARNING [VERI-2418] ast_pkg.sv:32: parameter 'Hc2LcTrCyc' declared inside package 'ast_pkg' shall be treated as localparam
VERIFIC-WARNING [VERI-2418] ast_pkg.sv:34: parameter 'EntropyStreams' declared inside package 'ast_pkg' shall be treated as localparam
VERIFIC-WARNING [VERI-2418] ast_pkg.sv:35: parameter 'AdcChannels' declared inside package 'ast_pkg' shall be treated as localparam
VERIFIC-WARNING [VERI-2418] ast_pkg.sv:36: parameter 'AdcDataWidth' declared inside package 'ast_pkg' shall be treated as localparam
VERIFIC-WARNING [VERI-2418] ast_pkg.sv:37: parameter 'UsbCalibWidth' declared inside package 'ast_pkg' shall be treated as localparam
VERIFIC-WARNING [VERI-2418] ast_pkg.sv:38: parameter 'Ast2PadOutWidth' declared inside package 'ast_pkg' shall be treated as localparam
VERIFIC-WARNING [VERI-2418] ast_pkg.sv:39: parameter 'Pad2AstInWidth' declared inside package 'ast_pkg' shall be treated as localparam
VERIFIC-WARNING [VERI-2418] ast_pkg.sv:43: parameter 'LfsrWidth' declared inside package 'ast_pkg' shall be treated as localparam
VERIFIC-WARNING [VERI-2418] ast_pkg.sv:46: parameter 'RndCnstLfsrSeedDefault' declared inside package 'ast_pkg' shall be treated as localparam
VERIFIC-WARNING [VERI-2418] ast_pkg.sv:47: parameter 'RndCnstLfsrPermDefault' declared inside package 'ast_pkg' shall be treated as localparam
VERIFIC-WARNING [VERI-2418] ast_pkg.sv:95: parameter 'AST_RST_DEFAULT' declared inside package 'ast_pkg' shall be treated as localparam

yosys> read -vlog2k BUFGMUX.v

yosys> verific -vlog2k BUFGMUX.v

3. Executing VERIFIC (loading SystemVerilog and VHDL designs using Verific).
Built with Verific May22_SW_Release, released at Wed Jun  1 05:39:28 2022.
VERIFIC-COMMENT [VERI-1482] Analyzing Verilog file 'BUFGMUX.v'

yosys> read -sv prim_alert_sender.sv prim_buf.sv prim_clock_buf.sv prim_clock_div.sv prim_clock_gating.sv prim_clock_gating_sync.sv prim_clock_inv.sv prim_clock_meas.sv prim_clock_mux2.sv prim_clock_timeout.sv prim_diff_decode.sv prim_edge_detector.sv prim_flop.sv prim_flop_2sync.sv prim_generic_buf.sv prim_generic_clock_buf.sv prim_generic_clock_inv.sv prim_generic_clock_mux2.sv prim_generic_flop.sv prim_generic_xor2.sv prim_lc_sender.sv prim_lfsr.sv prim_mubi4_dec.sv prim_mubi4_sender.sv prim_mubi4_sync.sv prim_packer_fifo.sv prim_pulse_sync.sv prim_reg_cdc.sv prim_sec_anchor_buf.sv prim_secded_inv_39_32_dec.sv prim_secded_inv_39_32_enc.sv prim_secded_inv_64_57_dec.sv prim_secded_inv_64_57_enc.sv prim_subreg.sv prim_subreg_ext.sv prim_sync_reqack.sv prim_xilinx_clock_mux2.sv prim_xilinx_xor2.sv prim_xor2.sv sensor_ctrl.sv sensor_ctrl_reg_top.sv tlul_adapter_reg.sv tlul_cmd_intg_chk.sv tlul_data_integ_dec.sv tlul_data_integ_enc.sv tlul_err.sv tlul_rsp_intg_gen.sv wav_cgc_rl.sv

yosys> verific -sv prim_alert_sender.sv prim_buf.sv prim_clock_buf.sv prim_clock_div.sv prim_clock_gating.sv prim_clock_gating_sync.sv prim_clock_inv.sv prim_clock_meas.sv prim_clock_mux2.sv prim_clock_timeout.sv prim_diff_decode.sv prim_edge_detector.sv prim_flop.sv prim_flop_2sync.sv prim_generic_buf.sv prim_generic_clock_buf.sv prim_generic_clock_inv.sv prim_generic_clock_mux2.sv prim_generic_flop.sv prim_generic_xor2.sv prim_lc_sender.sv prim_lfsr.sv prim_mubi4_dec.sv prim_mubi4_sender.sv prim_mubi4_sync.sv prim_packer_fifo.sv prim_pulse_sync.sv prim_reg_cdc.sv prim_sec_anchor_buf.sv prim_secded_inv_39_32_dec.sv prim_secded_inv_39_32_enc.sv prim_secded_inv_64_57_dec.sv prim_secded_inv_64_57_enc.sv prim_subreg.sv prim_subreg_ext.sv prim_sync_reqack.sv prim_xilinx_clock_mux2.sv prim_xilinx_xor2.sv prim_xor2.sv sensor_ctrl.sv sensor_ctrl_reg_top.sv tlul_adapter_reg.sv tlul_cmd_intg_chk.sv tlul_data_integ_dec.sv tlul_data_integ_enc.sv tlul_err.sv tlul_rsp_intg_gen.sv wav_cgc_rl.sv

4. Executing VERIFIC (loading SystemVerilog and VHDL designs using Verific).
Built with Verific May22_SW_Release, released at Wed Jun  1 05:39:28 2022.
VERIFIC-COMMENT [VERI-1482] Analyzing Verilog file 'prim_alert_sender.sv'
VERIFIC-COMMENT [VERI-1482] Analyzing Verilog file 'prim_buf.sv'
VERIFIC-WARNING [VERI-1199] prim_buf.sv:24: parameter 'Impl' becomes localparam in 'prim_buf' with formal parameter declaration list
VERIFIC-COMMENT [VERI-1482] Analyzing Verilog file 'prim_clock_buf.sv'
VERIFIC-WARNING [VERI-1199] prim_clock_buf.sv:24: parameter 'Impl' becomes localparam in 'prim_clock_buf' with formal parameter declaration list
VERIFIC-COMMENT [VERI-1482] Analyzing Verilog file 'prim_clock_div.sv'
VERIFIC-COMMENT [VERI-1482] Analyzing Verilog file 'prim_clock_gating.sv'
VERIFIC-COMMENT [VERI-1482] Analyzing Verilog file 'prim_clock_gating_sync.sv'
VERIFIC-COMMENT [VERI-1482] Analyzing Verilog file 'prim_clock_inv.sv'
VERIFIC-COMMENT [VERI-1482] Analyzing Verilog file 'prim_clock_meas.sv'
VERIFIC-COMMENT [VERI-1482] Analyzing Verilog file 'prim_clock_mux2.sv'
VERIFIC-COMMENT [VERI-1482] Analyzing Verilog file 'prim_clock_timeout.sv'
VERIFIC-COMMENT [VERI-1482] Analyzing Verilog file 'prim_diff_decode.sv'
VERIFIC-COMMENT [VERI-1482] Analyzing Verilog file 'prim_edge_detector.sv'
VERIFIC-COMMENT [VERI-1482] Analyzing Verilog file 'prim_flop.sv'
VERIFIC-WARNING [VERI-1199] prim_flop.sv:30: parameter 'Impl' becomes localparam in 'prim_flop' with formal parameter declaration list
VERIFIC-COMMENT [VERI-1482] Analyzing Verilog file 'prim_flop_2sync.sv'
VERIFIC-COMMENT [VERI-1482] Analyzing Verilog file 'prim_generic_buf.sv'
VERIFIC-COMMENT [VERI-1482] Analyzing Verilog file 'prim_generic_clock_buf.sv'
VERIFIC-COMMENT [VERI-1482] Analyzing Verilog file 'prim_generic_clock_inv.sv'
VERIFIC-COMMENT [VERI-1482] Analyzing Verilog file 'prim_generic_clock_mux2.sv'
VERIFIC-COMMENT [VERI-1482] Analyzing Verilog file 'prim_generic_flop.sv'
VERIFIC-COMMENT [VERI-1482] Analyzing Verilog file 'prim_generic_xor2.sv'
VERIFIC-COMMENT [VERI-1482] Analyzing Verilog file 'prim_lc_sender.sv'
VERIFIC-COMMENT [VERI-1482] Analyzing Verilog file 'prim_lfsr.sv'
VERIFIC-COMMENT [VERI-1482] Analyzing Verilog file 'prim_mubi4_dec.sv'
VERIFIC-COMMENT [VERI-1482] Analyzing Verilog file 'prim_mubi4_sender.sv'
VERIFIC-COMMENT [VERI-1482] Analyzing Verilog file 'prim_mubi4_sync.sv'
VERIFIC-COMMENT [VERI-1482] Analyzing Verilog file 'prim_packer_fifo.sv'
VERIFIC-COMMENT [VERI-1482] Analyzing Verilog file 'prim_pulse_sync.sv'
VERIFIC-COMMENT [VERI-1482] Analyzing Verilog file 'prim_reg_cdc.sv'
VERIFIC-COMMENT [VERI-1482] Analyzing Verilog file 'prim_sec_anchor_buf.sv'
VERIFIC-COMMENT [VERI-1482] Analyzing Verilog file 'prim_secded_inv_39_32_dec.sv'
VERIFIC-COMMENT [VERI-1482] Analyzing Verilog file 'prim_secded_inv_39_32_enc.sv'
VERIFIC-COMMENT [VERI-1482] Analyzing Verilog file 'prim_secded_inv_64_57_dec.sv'
VERIFIC-COMMENT [VERI-1482] Analyzing Verilog file 'prim_secded_inv_64_57_enc.sv'
VERIFIC-COMMENT [VERI-1482] Analyzing Verilog file 'prim_subreg.sv'
VERIFIC-COMMENT [VERI-1482] Analyzing Verilog file 'prim_subreg_ext.sv'
VERIFIC-COMMENT [VERI-1482] Analyzing Verilog file 'prim_sync_reqack.sv'
VERIFIC-COMMENT [VERI-1482] Analyzing Verilog file 'prim_xilinx_clock_mux2.sv'
VERIFIC-COMMENT [VERI-1482] Analyzing Verilog file 'prim_xilinx_xor2.sv'
VERIFIC-COMMENT [VERI-1482] Analyzing Verilog file 'prim_xor2.sv'
VERIFIC-WARNING [VERI-1199] prim_xor2.sv:27: parameter 'Impl' becomes localparam in 'prim_xor2' with formal parameter declaration list
VERIFIC-COMMENT [VERI-1482] Analyzing Verilog file 'sensor_ctrl.sv'
VERIFIC-COMMENT [VERI-1482] Analyzing Verilog file 'sensor_ctrl_reg_top.sv'
VERIFIC-COMMENT [VERI-1482] Analyzing Verilog file 'tlul_adapter_reg.sv'
VERIFIC-COMMENT [VERI-1482] Analyzing Verilog file 'tlul_cmd_intg_chk.sv'
VERIFIC-COMMENT [VERI-1482] Analyzing Verilog file 'tlul_data_integ_dec.sv'
VERIFIC-COMMENT [VERI-1482] Analyzing Verilog file 'tlul_data_integ_enc.sv'
VERIFIC-COMMENT [VERI-1482] Analyzing Verilog file 'tlul_err.sv'
VERIFIC-COMMENT [VERI-1482] Analyzing Verilog file 'tlul_rsp_intg_gen.sv'
VERIFIC-COMMENT [VERI-1482] Analyzing Verilog file 'wav_cgc_rl.sv'

yosys> synth_rs -top sensor_ctrl -tech genesis -goal area -de -no_dsp -no_bram -verilog synthesized.v

5. Executing synth_rs pass: v0.4.79

yosys> read_verilog -lib -specify -nomem2reg +/rapidsilicon/common/cells_sim.v +/rapidsilicon/genesis/cells_sim.v +/rapidsilicon/genesis/dsp_sim.v

5.1. Executing Verilog-2005 frontend: /nfs_scratch/scratch/Vorak/aram/Workspace/Raptor/yosys_verific_rs/yosys/install/bin/../share/yosys/rapidsilicon/common/cells_sim.v
Parsing Verilog input from `/nfs_scratch/scratch/Vorak/aram/Workspace/Raptor/yosys_verific_rs/yosys/install/bin/../share/yosys/rapidsilicon/common/cells_sim.v' to AST representation.
Generating RTLIL representation for module `\inv'.
Generating RTLIL representation for module `\buff'.
Generating RTLIL representation for module `\logic_0'.
Generating RTLIL representation for module `\logic_1'.
Generating RTLIL representation for module `\gclkbuff'.
Successfully finished Verilog frontend.

5.2. Executing Verilog-2005 frontend: /nfs_scratch/scratch/Vorak/aram/Workspace/Raptor/yosys_verific_rs/yosys/install/bin/../share/yosys/rapidsilicon/genesis/cells_sim.v
Parsing Verilog input from `/nfs_scratch/scratch/Vorak/aram/Workspace/Raptor/yosys_verific_rs/yosys/install/bin/../share/yosys/rapidsilicon/genesis/cells_sim.v' to AST representation.
Generating RTLIL representation for module `\dffsre'.
Generating RTLIL representation for module `\dffnsre'.
Generating RTLIL representation for module `\latchsre'.
Generating RTLIL representation for module `\latchnsre'.
Generating RTLIL representation for module `\io_scff'.
Generating RTLIL representation for module `\scff'.
Generating RTLIL representation for module `\sh_dff'.
Generating RTLIL representation for module `\adder_carry'.
Generating RTLIL representation for module `\sdffr'.
Generating RTLIL representation for module `\sdffs'.
Generating RTLIL representation for module `\TDP_BRAM18'.
Generating RTLIL representation for module `\TDP36K'.
Generating RTLIL representation for module `\BRAM2x18_TDP'.
Generating RTLIL representation for module `\BRAM2x18_SDP'.
Generating RTLIL representation for module `\_$_mem_v2_asymmetric'.
Successfully finished Verilog frontend.

5.3. Executing Verilog-2005 frontend: /nfs_scratch/scratch/Vorak/aram/Workspace/Raptor/yosys_verific_rs/yosys/install/bin/../share/yosys/rapidsilicon/genesis/dsp_sim.v
Parsing Verilog input from `/nfs_scratch/scratch/Vorak/aram/Workspace/Raptor/yosys_verific_rs/yosys/install/bin/../share/yosys/rapidsilicon/genesis/dsp_sim.v' to AST representation.
Generating RTLIL representation for module `\RS_DSP1'.
Generating RTLIL representation for module `\RS_DSP2'.
Generating RTLIL representation for module `\RS_DSP2_MULT'.
Generating RTLIL representation for module `\RS_DSP2_MULT_REGIN'.
Generating RTLIL representation for module `\RS_DSP2_MULT_REGOUT'.
Generating RTLIL representation for module `\RS_DSP2_MULT_REGIN_REGOUT'.
Generating RTLIL representation for module `\RS_DSP2_MULTADD'.
Generating RTLIL representation for module `\RS_DSP2_MULTADD_REGIN'.
Generating RTLIL representation for module `\RS_DSP2_MULTADD_REGOUT'.
Generating RTLIL representation for module `\RS_DSP2_MULTADD_REGIN_REGOUT'.
Generating RTLIL representation for module `\RS_DSP2_MULTACC'.
Generating RTLIL representation for module `\RS_DSP2_MULTACC_REGIN'.
Generating RTLIL representation for module `\RS_DSP2_MULTACC_REGOUT'.
Generating RTLIL representation for module `\RS_DSP2_MULTACC_REGIN_REGOUT'.
Generating RTLIL representation for module `\dsp_t1_20x18x64_cfg_ports'.
Generating RTLIL representation for module `\dsp_t1_10x9x32_cfg_ports'.
Generating RTLIL representation for module `\dsp_t1_sim_cfg_ports'.
Generating RTLIL representation for module `\RS_DSP3'.
Generating RTLIL representation for module `\RS_DSP3_MULT'.
Generating RTLIL representation for module `\RS_DSP3_MULT_REGIN'.
Generating RTLIL representation for module `\RS_DSP3_MULT_REGOUT'.
Generating RTLIL representation for module `\RS_DSP3_MULT_REGIN_REGOUT'.
Generating RTLIL representation for module `\RS_DSP3_MULTADD'.
Generating RTLIL representation for module `\RS_DSP3_MULTADD_REGIN'.
Generating RTLIL representation for module `\RS_DSP3_MULTADD_REGOUT'.
Generating RTLIL representation for module `\RS_DSP3_MULTADD_REGIN_REGOUT'.
Generating RTLIL representation for module `\RS_DSP3_MULTACC'.
Generating RTLIL representation for module `\RS_DSP3_MULTACC_REGIN'.
Generating RTLIL representation for module `\RS_DSP3_MULTACC_REGOUT'.
Generating RTLIL representation for module `\RS_DSP3_MULTACC_REGIN_REGOUT'.
Generating RTLIL representation for module `\dsp_t1_20x18x64_cfg_params'.
Generating RTLIL representation for module `\dsp_t1_10x9x32_cfg_params'.
Generating RTLIL representation for module `\dsp_t1_sim_cfg_params'.
Successfully finished Verilog frontend.

yosys> hierarchy -check -top sensor_ctrl

5.4. Executing HIERARCHY pass (managing design hierarchy).
VERIFIC-INFO [VERI-1018] sensor_ctrl.sv:8: compiling module 'sensor_ctrl'
VERIFIC-INFO [VERI-1018] prim_sec_anchor_buf.sv:6: compiling module 'prim_sec_anchor_buf(Width=2)'
VERIFIC-INFO [VERI-1018] prim_buf.sv:16: compiling module 'prim_buf'
VERIFIC-INFO [VERI-1018] prim_generic_buf.sv:6: compiling module 'prim_generic_buf'
VERIFIC-WARNING [VERI-1330] prim_sec_anchor_buf.sv:14: actual bit length 2 differs from formal bit length 1 for port 'in_i'
VERIFIC-WARNING [VERI-1330] prim_sec_anchor_buf.sv:15: actual bit length 2 differs from formal bit length 1 for port 'out_o'
VERIFIC-INFO [VERI-1018] prim_flop_2sync.sv:7: compiling module 'prim_flop_2sync(Width=13)'
VERIFIC-INFO [VERI-1018] prim_flop_2sync.sv:7: compiling module 'prim_flop_2sync(Width=13,ResetValue=1'b1)'
VERIFIC-INFO [VERI-1018] sensor_ctrl_reg_top.sv:8: compiling module 'sensor_ctrl_reg_top'
VERIFIC-INFO [VERI-1018] tlul_cmd_intg_chk.sv:10: compiling module 'tlul_cmd_intg_chk'
VERIFIC-INFO [VERI-1018] prim_secded_inv_64_57_dec.sv:7: compiling module 'prim_secded_inv_64_57_dec'
VERIFIC-INFO [VERI-1018] tlul_data_integ_dec.sv:10: compiling module 'tlul_data_integ_dec'
VERIFIC-INFO [VERI-1018] prim_secded_inv_39_32_dec.sv:7: compiling module 'prim_secded_inv_39_32_dec'
VERIFIC-INFO [VERI-1018] tlul_rsp_intg_gen.sv:9: compiling module 'tlul_rsp_intg_gen'
VERIFIC-INFO [VERI-1018] prim_secded_inv_64_57_enc.sv:7: compiling module 'prim_secded_inv_64_57_enc'
VERIFIC-INFO [VERI-1018] tlul_data_integ_enc.sv:10: compiling module 'tlul_data_integ_enc'
VERIFIC-INFO [VERI-1018] prim_secded_inv_39_32_enc.sv:7: compiling module 'prim_secded_inv_39_32_enc'
VERIFIC-INFO [VERI-1018] tlul_adapter_reg.sv:10: compiling module 'tlul_adapter_reg(RegAw=5)'
VERIFIC-INFO [VERI-1018] tlul_err.sv:7: compiling module 'tlul_err'
VERIFIC-WARNING [VERI-1209] tlul_err.sv:49: expression size 32 truncated to fit in target size 4
VERIFIC-INFO [VERI-1018] prim_subreg_ext.sv:7: compiling module 'prim_subreg_ext(DW=32'b01)'
VERIFIC-INFO [VERI-1018] prim_subreg.sv:7: compiling module 'prim_subreg(DW=1,SwAccess=SwAccessW0C_prim_subreg_pkg,RESVAL=1'b1)'
VERIFIC-INFO [VERI-1018] prim_subreg.sv:7: compiling module 'prim_subreg(DW=1,SwAccess=SwAccessRW_prim_subreg_pkg,RESVAL=1'b0)'
VERIFIC-INFO [VERI-1018] prim_subreg.sv:7: compiling module 'prim_subreg(DW=1,SwAccess=SwAccessW1C_prim_subreg_pkg,RESVAL=1'b0)'
VERIFIC-INFO [VERI-1018] prim_subreg.sv:7: compiling module 'prim_subreg(DW=1,SwAccess=SwAccessRO_prim_subreg_pkg,RESVAL=1'b0)'
VERIFIC-INFO [VERI-1018] prim_subreg.sv:7: compiling module 'prim_subreg(DW=2,SwAccess=SwAccessRO_prim_subreg_pkg,RESVAL=2'b11)'
VERIFIC-INFO [VERI-1018] prim_alert_sender.sv:27: compiling module 'prim_alert_sender'
VERIFIC-INFO [VERI-1018] prim_diff_decode.sv:19: compiling module 'prim_diff_decode(AsyncOn=1'b1)'
VERIFIC-INFO [VERI-1018] prim_flop_2sync.sv:7: compiling module 'prim_flop_2sync(Width=1)'
VERIFIC-INFO [VERI-1018] prim_flop_2sync.sv:7: compiling module 'prim_flop_2sync(Width=1,ResetValue=1'b1)'
Importing module sensor_ctrl.
Importing module prim_alert_sender.
Importing module prim_diff_decode(AsyncOn=1'b1).
Importing module prim_flop_2sync(Width=1).
Importing module prim_flop_2sync(Width=1,ResetValue=1'b1).
Importing module prim_flop_2sync(Width=13).
Importing module prim_flop_2sync(Width=13,ResetValue=1'b1).
Importing module prim_sec_anchor_buf(Width=2).
Importing module prim_buf.
Importing module prim_generic_buf.
Importing module sensor_ctrl_reg_top.
Importing module prim_subreg(DW=1,SwAccess=SwAccessRO_prim_subreg_pkg,RESVAL=1'b0).
Importing module prim_subreg(DW=1,SwAccess=SwAccessRW_prim_subreg_pkg,RESVAL=1'b0).
Importing module prim_subreg(DW=1,SwAccess=SwAccessW0C_prim_subreg_pkg,RESVAL=1'b1).
Importing module prim_subreg(DW=1,SwAccess=SwAccessW1C_prim_subreg_pkg,RESVAL=1'b0).
Importing module prim_subreg(DW=2,SwAccess=SwAccessRO_prim_subreg_pkg,RESVAL=2'b11).
Importing module prim_subreg_ext(DW=32'b01).
Importing module tlul_adapter_reg(RegAw=5).
Importing module tlul_cmd_intg_chk.
Importing module prim_secded_inv_64_57_dec.
Importing module tlul_data_integ_dec.
Importing module prim_secded_inv_39_32_dec.
Importing module tlul_err.
Importing module tlul_rsp_intg_gen.
Importing module prim_secded_inv_64_57_enc.
Importing module tlul_data_integ_enc.
Importing module prim_secded_inv_39_32_enc.

5.4.1. Analyzing design hierarchy..
Top module:  \sensor_ctrl
Used module:     \prim_flop_2sync(Width=1)
Used module:     \prim_alert_sender
Used module:         \prim_diff_decode(AsyncOn=1'b1)
Used module:             \prim_flop_2sync(Width=1,ResetValue=1'b1)
Used module:     \sensor_ctrl_reg_top
Used module:         \prim_subreg(DW=2,SwAccess=SwAccessRO_prim_subreg_pkg,RESVAL=2'b11)
Used module:         \prim_subreg(DW=1,SwAccess=SwAccessRO_prim_subreg_pkg,RESVAL=1'b0)
Used module:         \prim_subreg(DW=1,SwAccess=SwAccessW1C_prim_subreg_pkg,RESVAL=1'b0)
Used module:         \prim_subreg(DW=1,SwAccess=SwAccessRW_prim_subreg_pkg,RESVAL=1'b0)
Used module:         \prim_subreg(DW=1,SwAccess=SwAccessW0C_prim_subreg_pkg,RESVAL=1'b1)
Used module:         \prim_subreg_ext(DW=32'b01)
Used module:         \tlul_adapter_reg(RegAw=5)
Used module:             \tlul_err
Used module:         \tlul_rsp_intg_gen
Used module:             \tlul_data_integ_enc
Used module:                 \prim_secded_inv_39_32_enc
Used module:             \prim_secded_inv_64_57_enc
Used module:         \tlul_cmd_intg_chk
Used module:             \tlul_data_integ_dec
Used module:                 \prim_secded_inv_39_32_dec
Used module:             \prim_secded_inv_64_57_dec
Used module:     \prim_flop_2sync(Width=13,ResetValue=1'b1)
Used module:     \prim_flop_2sync(Width=13)
Used module:     \prim_sec_anchor_buf(Width=2)
Used module:         \prim_buf
Used module:             \prim_generic_buf

5.4.2. Analyzing design hierarchy..
Top module:  \sensor_ctrl
Used module:     \prim_flop_2sync(Width=1)
Used module:     \prim_alert_sender
Used module:         \prim_diff_decode(AsyncOn=1'b1)
Used module:             \prim_flop_2sync(Width=1,ResetValue=1'b1)
Used module:     \sensor_ctrl_reg_top
Used module:         \prim_subreg(DW=2,SwAccess=SwAccessRO_prim_subreg_pkg,RESVAL=2'b11)
Used module:         \prim_subreg(DW=1,SwAccess=SwAccessRO_prim_subreg_pkg,RESVAL=1'b0)
Used module:         \prim_subreg(DW=1,SwAccess=SwAccessW1C_prim_subreg_pkg,RESVAL=1'b0)
Used module:         \prim_subreg(DW=1,SwAccess=SwAccessRW_prim_subreg_pkg,RESVAL=1'b0)
Used module:         \prim_subreg(DW=1,SwAccess=SwAccessW0C_prim_subreg_pkg,RESVAL=1'b1)
Used module:         \prim_subreg_ext(DW=32'b01)
Used module:         \tlul_adapter_reg(RegAw=5)
Used module:             \tlul_err
Used module:         \tlul_rsp_intg_gen
Used module:             \tlul_data_integ_enc
Used module:                 \prim_secded_inv_39_32_enc
Used module:             \prim_secded_inv_64_57_enc
Used module:         \tlul_cmd_intg_chk
Used module:             \tlul_data_integ_dec
Used module:                 \prim_secded_inv_39_32_dec
Used module:             \prim_secded_inv_64_57_dec
Used module:     \prim_flop_2sync(Width=13,ResetValue=1'b1)
Used module:     \prim_flop_2sync(Width=13)
Used module:     \prim_sec_anchor_buf(Width=2)
Used module:         \prim_buf
Used module:             \prim_generic_buf
Removed 0 unused modules.

yosys> proc

5.5. Executing PROC pass (convert processes to netlists).

yosys> proc_clean

5.5.1. Executing PROC_CLEAN pass (remove empty switches from decision trees).
Cleaned up 0 empty switches.

yosys> proc_rmdead

5.5.2. Executing PROC_RMDEAD pass (remove dead branches from decision trees).
Removed a total of 0 dead cases.

yosys> proc_prune

5.5.3. Executing PROC_PRUNE pass (remove redundant assignments in processes).
Removed 0 redundant assignments.
Promoted 0 assignments to connections.

yosys> proc_init

5.5.4. Executing PROC_INIT pass (extract init attributes).

yosys> proc_arst

5.5.5. Executing PROC_ARST pass (detect async resets in processes).

yosys> proc_rom

5.5.6. Executing PROC_ROM pass (convert switches to ROMs).
Converted 0 switches.

yosys> proc_mux

5.5.7. Executing PROC_MUX pass (convert decision trees to multiplexers).

yosys> proc_dlatch

5.5.8. Executing PROC_DLATCH pass (convert process syncs to latches).

yosys> proc_dff

5.5.9. Executing PROC_DFF pass (convert process syncs to FFs).

yosys> proc_memwr

5.5.10. Executing PROC_MEMWR pass (convert process memory writes to cells).

yosys> proc_clean

5.5.11. Executing PROC_CLEAN pass (remove empty switches from decision trees).
Cleaned up 0 empty switches.

yosys> opt_expr -keepdc

5.5.12. Executing OPT_EXPR pass (perform const folding).
Optimizing module prim_secded_inv_39_32_enc.
Optimizing module tlul_data_integ_enc.
Optimizing module prim_secded_inv_64_57_enc.
Optimizing module tlul_rsp_intg_gen.
Optimizing module tlul_err.
<suppressed ~1 debug messages>
Optimizing module prim_secded_inv_39_32_dec.
Optimizing module tlul_data_integ_dec.
Optimizing module prim_secded_inv_64_57_dec.
Optimizing module tlul_cmd_intg_chk.
<suppressed ~1 debug messages>
Optimizing module tlul_adapter_reg(RegAw=5).
<suppressed ~11 debug messages>
Optimizing module prim_subreg_ext(DW=32'b01).
Optimizing module prim_subreg(DW=2,SwAccess=SwAccessRO_prim_subreg_pkg,RESVAL=2'b11).
<suppressed ~3 debug messages>
Optimizing module prim_subreg(DW=1,SwAccess=SwAccessW1C_prim_subreg_pkg,RESVAL=1'b0).
<suppressed ~2 debug messages>
Optimizing module prim_subreg(DW=1,SwAccess=SwAccessW0C_prim_subreg_pkg,RESVAL=1'b1).
<suppressed ~2 debug messages>
Optimizing module prim_subreg(DW=1,SwAccess=SwAccessRW_prim_subreg_pkg,RESVAL=1'b0).
<suppressed ~2 debug messages>
Optimizing module prim_subreg(DW=1,SwAccess=SwAccessRO_prim_subreg_pkg,RESVAL=1'b0).
<suppressed ~2 debug messages>
Optimizing module sensor_ctrl_reg_top.
<suppressed ~2 debug messages>
Optimizing module prim_generic_buf.
Optimizing module prim_buf.
Optimizing module prim_sec_anchor_buf(Width=2).
Optimizing module prim_flop_2sync(Width=13,ResetValue=1'b1).
<suppressed ~3 debug messages>
Optimizing module prim_flop_2sync(Width=13).
<suppressed ~3 debug messages>
Optimizing module prim_flop_2sync(Width=1,ResetValue=1'b1).
<suppressed ~2 debug messages>
Optimizing module prim_flop_2sync(Width=1).
<suppressed ~2 debug messages>
Optimizing module prim_diff_decode(AsyncOn=1'b1).
<suppressed ~5 debug messages>
Optimizing module prim_alert_sender.
<suppressed ~6 debug messages>
Optimizing module sensor_ctrl.
<suppressed ~4 debug messages>

yosys> bmuxmap

5.6. Executing BMUXMAP pass.

yosys> demuxmap

5.7. Executing DEMUXMAP pass.

yosys> clean_zerowidth

yosys> flatten

5.8. Executing FLATTEN pass (flatten design).
Deleting now unused module prim_alert_sender.
Deleting now unused module prim_buf.
Deleting now unused module prim_diff_decode(AsyncOn=1'b1).
Deleting now unused module prim_flop_2sync(Width=1).
Deleting now unused module prim_flop_2sync(Width=1,ResetValue=1'b1).
Deleting now unused module prim_flop_2sync(Width=13).
Deleting now unused module prim_flop_2sync(Width=13,ResetValue=1'b1).
Deleting now unused module prim_generic_buf.
Deleting now unused module prim_sec_anchor_buf(Width=2).
Deleting now unused module prim_secded_inv_39_32_dec.
Deleting now unused module prim_secded_inv_39_32_enc.
Deleting now unused module prim_secded_inv_64_57_dec.
Deleting now unused module prim_secded_inv_64_57_enc.
Deleting now unused module prim_subreg(DW=1,SwAccess=SwAccessRO_prim_subreg_pkg,RESVAL=1'b0).
Deleting now unused module prim_subreg(DW=1,SwAccess=SwAccessRW_prim_subreg_pkg,RESVAL=1'b0).
Deleting now unused module prim_subreg(DW=1,SwAccess=SwAccessW0C_prim_subreg_pkg,RESVAL=1'b1).
Deleting now unused module prim_subreg(DW=1,SwAccess=SwAccessW1C_prim_subreg_pkg,RESVAL=1'b0).
Deleting now unused module prim_subreg(DW=2,SwAccess=SwAccessRO_prim_subreg_pkg,RESVAL=2'b11).
Deleting now unused module prim_subreg_ext(DW=32'b01).
Deleting now unused module sensor_ctrl_reg_top.
Deleting now unused module tlul_adapter_reg(RegAw=5).
Deleting now unused module tlul_cmd_intg_chk.
Deleting now unused module tlul_data_integ_dec.
Deleting now unused module tlul_data_integ_enc.
Deleting now unused module tlul_err.
Deleting now unused module tlul_rsp_intg_gen.
<suppressed ~93 debug messages>

yosys> bmuxmap

5.9. Executing BMUXMAP pass.

yosys> demuxmap

5.10. Executing DEMUXMAP pass.

yosys> clean_zerowidth

yosys> tribuf -logic -formal

5.11. Executing TRIBUF pass.

yosys> deminout

5.12. Executing DEMINOUT pass (demote inout ports to input or output).

yosys> opt_expr

5.13. Executing OPT_EXPR pass (perform const folding).
Optimizing module sensor_ctrl.
<suppressed ~49 debug messages>

yosys> opt_clean

5.14. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \sensor_ctrl..
Removed 277 unused cells and 2970 unused wires.
<suppressed ~1132 debug messages>

yosys> check

5.15. Executing CHECK pass (checking for obvious problems).
Checking module sensor_ctrl...
Found and reported 0 problems.

yosys> opt_expr

5.16. Executing OPT_EXPR pass (perform const folding).
Optimizing module sensor_ctrl.
<suppressed ~32 debug messages>

yosys> opt_merge -nomux

5.17. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\sensor_ctrl'.
<suppressed ~18 debug messages>
Removed a total of 6 cells.

yosys> opt_muxtree

5.18. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \sensor_ctrl..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
      Replacing known input bits on port A of cell $flatten\u_prim_fatal_alert_sender.$verific$mux_20$prim_alert_sender.sv:124$784: \u_prim_fatal_alert_sender.state_q -> 3'000
      Replacing known input bits on port B of cell $flatten\u_prim_fatal_alert_sender.\i_decode_ack.$auto$bmuxmap.cc:60:execute$3378: \u_prim_fatal_alert_sender.i_decode_ack.gen_async.state_q -> 2'11
      Replacing known input bits on port B of cell $flatten\u_prim_fatal_alert_sender.\i_decode_ping.$auto$bmuxmap.cc:60:execute$3378: \u_prim_fatal_alert_sender.i_decode_ping.gen_async.state_q -> 2'11
      Replacing known input bits on port A of cell $flatten\u_prim_recov_alert_sender.$verific$mux_20$prim_alert_sender.sv:124$784: \u_prim_recov_alert_sender.state_q -> 3'000
      Replacing known input bits on port B of cell $flatten\u_prim_recov_alert_sender.\i_decode_ack.$auto$bmuxmap.cc:60:execute$3378: \u_prim_recov_alert_sender.i_decode_ack.gen_async.state_q -> 2'11
      Replacing known input bits on port B of cell $flatten\u_prim_recov_alert_sender.\i_decode_ping.$auto$bmuxmap.cc:60:execute$3378: \u_prim_recov_alert_sender.i_decode_ping.gen_async.state_q -> 2'11
  Analyzing evaluation results.
Removed 0 multiplexer ports.
<suppressed ~73 debug messages>

yosys> opt_reduce

5.19. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \sensor_ctrl.
    New ctrl vector for $pmux cell $flatten\u_reg.$verific$select_220$sensor_ctrl_reg_top.sv:1861$2171: { $flatten\u_reg.$verific$n794$1066 $flatten\u_reg.$verific$n797$1069 $flatten\u_reg.$verific$n800$1072 $flatten\u_reg.$verific$n803$1075 $flatten\u_reg.$verific$n806$1078 $flatten\u_reg.$verific$n809$1081 $flatten\u_reg.$verific$n811$1083 }
  Optimizing cells in module \sensor_ctrl.
Performed a total of 1 changes.

yosys> opt_merge

5.20. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\sensor_ctrl'.
Removed a total of 0 cells.

yosys> opt_share

5.21. Executing OPT_SHARE pass.

yosys> opt_dff -nosdff -nodffe

5.22. Executing OPT_DFF pass (perform DFF optimizations).
Changing const-value async load to async reset on $verific$wkup_req_o_reg$sensor_ctrl.sv:249$714 ($aldff) from module sensor_ctrl.
Changing const-value async load to async reset on $verific$wake_req_filter_reg$sensor_ctrl.sv:238$710 ($aldff) from module sensor_ctrl.
Changing const-value async load to async reset on $flatten\u_alert_n_sync.$verific$intq_reg$prim_flop_2sync.sv:26$953 ($aldff) from module sensor_ctrl.
Changing const-value async load to async reset on $flatten\u_wake_sync.$verific$q_reg[0]$prim_flop_2sync.sv:26$918 ($aldff) from module sensor_ctrl.
Changing const-value async load to async reset on $flatten\u_wake_sync.$verific$intq_reg[0]$prim_flop_2sync.sv:26$917 ($aldff) from module sensor_ctrl.
Changing const-value async load to async reset on $flatten\u_reg.\u_status_io_pok.$verific$q_reg$prim_subreg.sv:72$2272 ($aldff) from module sensor_ctrl.
Changing const-value async load to async reset on $flatten\u_reg.\u_status_ast_init_done.$verific$q_reg[0]$prim_subreg.sv:72$2196 ($aldff) from module sensor_ctrl.
Changing const-value async load to async reset on $flatten\u_reg.\u_reg_if.$verific$rspop_reg$tlul_adapter_reg.sv:80$2356 ($aldff) from module sensor_ctrl.
Changing const-value async load to async reset on $flatten\u_reg.\u_reg_if.$verific$reqsz_reg$tlul_adapter_reg.sv:80$2355 ($aldff) from module sensor_ctrl.
Changing const-value async load to async reset on $flatten\u_reg.\u_reg_if.$verific$reqid_reg$tlul_adapter_reg.sv:80$2354 ($aldff) from module sensor_ctrl.
Changing const-value async load to async reset on $flatten\u_reg.\u_reg_if.$verific$rdata_reg$tlul_adapter_reg.sv:90$2364 ($aldff) from module sensor_ctrl.
Changing const-value async load to async reset on $flatten\u_reg.\u_reg_if.$verific$outstanding_reg$tlul_adapter_reg.sv:67$2344 ($aldff) from module sensor_ctrl.
Changing const-value async load to async reset on $flatten\u_reg.\u_reg_if.$verific$error_reg$tlul_adapter_reg.sv:90$2365 ($aldff) from module sensor_ctrl.
Changing const-value async load to async reset on $flatten\u_reg.\u_recov_alert_val_9.$verific$q_reg[0]$prim_subreg.sv:72$2251 ($aldff) from module sensor_ctrl.
Changing const-value async load to async reset on $flatten\u_reg.\u_recov_alert_val_8.$verific$q_reg[0]$prim_subreg.sv:72$2251 ($aldff) from module sensor_ctrl.
Changing const-value async load to async reset on $flatten\u_reg.\u_recov_alert_val_7.$verific$q_reg[0]$prim_subreg.sv:72$2251 ($aldff) from module sensor_ctrl.
Changing const-value async load to async reset on $flatten\u_reg.\u_recov_alert_val_6.$verific$q_reg[0]$prim_subreg.sv:72$2251 ($aldff) from module sensor_ctrl.
Changing const-value async load to async reset on $flatten\u_reg.\u_recov_alert_val_5.$verific$q_reg[0]$prim_subreg.sv:72$2251 ($aldff) from module sensor_ctrl.
Changing const-value async load to async reset on $flatten\u_reg.\u_recov_alert_val_4.$verific$q_reg[0]$prim_subreg.sv:72$2251 ($aldff) from module sensor_ctrl.
Changing const-value async load to async reset on $flatten\u_reg.\u_recov_alert_val_3.$verific$q_reg[0]$prim_subreg.sv:72$2251 ($aldff) from module sensor_ctrl.
Changing const-value async load to async reset on $flatten\u_reg.\u_recov_alert_val_2.$verific$q_reg[0]$prim_subreg.sv:72$2251 ($aldff) from module sensor_ctrl.
Changing const-value async load to async reset on $flatten\u_reg.\u_recov_alert_val_12.$verific$q_reg[0]$prim_subreg.sv:72$2251 ($aldff) from module sensor_ctrl.
Changing const-value async load to async reset on $flatten\u_reg.\u_recov_alert_val_11.$verific$q_reg[0]$prim_subreg.sv:72$2251 ($aldff) from module sensor_ctrl.
Changing const-value async load to async reset on $flatten\u_reg.\u_recov_alert_val_10.$verific$q_reg[0]$prim_subreg.sv:72$2251 ($aldff) from module sensor_ctrl.
Changing const-value async load to async reset on $flatten\u_reg.\u_recov_alert_val_1.$verific$q_reg[0]$prim_subreg.sv:72$2251 ($aldff) from module sensor_ctrl.
Changing const-value async load to async reset on $flatten\u_reg.\u_recov_alert_val_0.$verific$q_reg[0]$prim_subreg.sv:72$2251 ($aldff) from module sensor_ctrl.
Changing const-value async load to async reset on $flatten\u_reg.\u_fatal_alert_val_9.$verific$q_reg[0]$prim_subreg.sv:72$2196 ($aldff) from module sensor_ctrl.
Changing const-value async load to async reset on $flatten\u_reg.\u_fatal_alert_val_8.$verific$q_reg[0]$prim_subreg.sv:72$2196 ($aldff) from module sensor_ctrl.
Changing const-value async load to async reset on $flatten\u_reg.\u_fatal_alert_val_7.$verific$q_reg[0]$prim_subreg.sv:72$2196 ($aldff) from module sensor_ctrl.
Changing const-value async load to async reset on $flatten\u_reg.\u_fatal_alert_val_6.$verific$q_reg[0]$prim_subreg.sv:72$2196 ($aldff) from module sensor_ctrl.
Changing const-value async load to async reset on $flatten\u_reg.\u_fatal_alert_val_5.$verific$q_reg[0]$prim_subreg.sv:72$2196 ($aldff) from module sensor_ctrl.
Changing const-value async load to async reset on $flatten\u_reg.\u_fatal_alert_val_4.$verific$q_reg[0]$prim_subreg.sv:72$2196 ($aldff) from module sensor_ctrl.
Changing const-value async load to async reset on $flatten\u_reg.\u_fatal_alert_val_3.$verific$q_reg[0]$prim_subreg.sv:72$2196 ($aldff) from module sensor_ctrl.
Changing const-value async load to async reset on $flatten\u_reg.\u_fatal_alert_val_2.$verific$q_reg[0]$prim_subreg.sv:72$2196 ($aldff) from module sensor_ctrl.
Changing const-value async load to async reset on $flatten\u_reg.\u_fatal_alert_val_13.$verific$q_reg[0]$prim_subreg.sv:72$2196 ($aldff) from module sensor_ctrl.
Changing const-value async load to async reset on $flatten\u_reg.\u_fatal_alert_val_12.$verific$q_reg[0]$prim_subreg.sv:72$2196 ($aldff) from module sensor_ctrl.
Changing const-value async load to async reset on $flatten\u_reg.\u_fatal_alert_val_11.$verific$q_reg[0]$prim_subreg.sv:72$2196 ($aldff) from module sensor_ctrl.
Changing const-value async load to async reset on $flatten\u_reg.\u_fatal_alert_val_10.$verific$q_reg[0]$prim_subreg.sv:72$2196 ($aldff) from module sensor_ctrl.
Changing const-value async load to async reset on $flatten\u_reg.\u_fatal_alert_val_1.$verific$q_reg[0]$prim_subreg.sv:72$2196 ($aldff) from module sensor_ctrl.
Changing const-value async load to async reset on $flatten\u_reg.\u_fatal_alert_val_0.$verific$q_reg[0]$prim_subreg.sv:72$2196 ($aldff) from module sensor_ctrl.
Changing const-value async load to async reset on $flatten\u_reg.\u_fatal_alert_en_val_9.$verific$q_reg[0]$prim_subreg.sv:72$2213 ($aldff) from module sensor_ctrl.
Changing const-value async load to async reset on $flatten\u_reg.\u_fatal_alert_en_val_8.$verific$q_reg[0]$prim_subreg.sv:72$2213 ($aldff) from module sensor_ctrl.
Changing const-value async load to async reset on $flatten\u_prim_fatal_alert_sender.$verific$alert_set_q_reg$prim_alert_sender.sv:183$818 ($aldff) from module sensor_ctrl.
Changing const-value async load to async reset on $flatten\u_reg.\u_fatal_alert_en_val_7.$verific$q_reg[0]$prim_subreg.sv:72$2213 ($aldff) from module sensor_ctrl.
Changing const-value async load to async reset on $flatten\u_prim_fatal_alert_sender.$verific$alert_pq_reg$prim_alert_sender.sv:183$816 ($aldff) from module sensor_ctrl.
Changing const-value async load to async reset on $flatten\u_reg.\u_fatal_alert_en_val_6.$verific$q_reg[0]$prim_subreg.sv:72$2213 ($aldff) from module sensor_ctrl.
Changing const-value async load to async reset on $flatten\u_prim_fatal_alert_sender.$verific$alert_nq_reg$prim_alert_sender.sv:183$817 ($aldff) from module sensor_ctrl.
Changing const-value async load to async reset on $flatten\u_reg.\u_fatal_alert_en_val_5.$verific$q_reg[0]$prim_subreg.sv:72$2213 ($aldff) from module sensor_ctrl.
Changing const-value async load to async reset on $flatten\u_reg.\u_fatal_alert_en_val_4.$verific$q_reg[0]$prim_subreg.sv:72$2213 ($aldff) from module sensor_ctrl.
Changing const-value async load to async reset on $flatten\u_reg.\u_fatal_alert_en_val_3.$verific$q_reg[0]$prim_subreg.sv:72$2213 ($aldff) from module sensor_ctrl.
Changing const-value async load to async reset on $flatten\u_reg.\u_fatal_alert_en_val_2.$verific$q_reg[0]$prim_subreg.sv:72$2213 ($aldff) from module sensor_ctrl.
Changing const-value async load to async reset on $flatten\u_reg.\u_fatal_alert_en_val_12.$verific$q_reg[0]$prim_subreg.sv:72$2213 ($aldff) from module sensor_ctrl.
Changing const-value async load to async reset on $flatten\u_reg.\u_fatal_alert_en_val_11.$verific$q_reg[0]$prim_subreg.sv:72$2213 ($aldff) from module sensor_ctrl.
Changing const-value async load to async reset on $flatten\u_reg.\u_fatal_alert_en_val_10.$verific$q_reg[0]$prim_subreg.sv:72$2213 ($aldff) from module sensor_ctrl.
Changing const-value async load to async reset on $flatten\u_reg.\u_fatal_alert_en_val_1.$verific$q_reg[0]$prim_subreg.sv:72$2213 ($aldff) from module sensor_ctrl.
Changing const-value async load to async reset on $flatten\u_reg.\u_fatal_alert_en_val_0.$verific$q_reg[0]$prim_subreg.sv:72$2213 ($aldff) from module sensor_ctrl.
Changing const-value async load to async reset on $flatten\u_reg.\u_cfg_regwen.$verific$q_reg[0]$prim_subreg.sv:72$2234 ($aldff) from module sensor_ctrl.
Changing const-value async load to async reset on $flatten\u_reg.\u_alert_trig_val_9.$verific$q_reg[0]$prim_subreg.sv:72$2213 ($aldff) from module sensor_ctrl.
Changing const-value async load to async reset on $flatten\u_reg.\u_alert_trig_val_8.$verific$q_reg[0]$prim_subreg.sv:72$2213 ($aldff) from module sensor_ctrl.
Changing const-value async load to async reset on $flatten\u_reg.\u_alert_trig_val_7.$verific$q_reg[0]$prim_subreg.sv:72$2213 ($aldff) from module sensor_ctrl.
Changing const-value async load to async reset on $flatten\u_reg.\u_alert_trig_val_6.$verific$q_reg[0]$prim_subreg.sv:72$2213 ($aldff) from module sensor_ctrl.
Changing const-value async load to async reset on $flatten\u_reg.\u_alert_trig_val_5.$verific$q_reg[0]$prim_subreg.sv:72$2213 ($aldff) from module sensor_ctrl.
Changing const-value async load to async reset on $flatten\u_reg.\u_alert_trig_val_4.$verific$q_reg[0]$prim_subreg.sv:72$2213 ($aldff) from module sensor_ctrl.
Changing const-value async load to async reset on $flatten\u_reg.\u_alert_trig_val_3.$verific$q_reg[0]$prim_subreg.sv:72$2213 ($aldff) from module sensor_ctrl.
Changing const-value async load to async reset on $flatten\u_reg.\u_alert_trig_val_2.$verific$q_reg[0]$prim_subreg.sv:72$2213 ($aldff) from module sensor_ctrl.
Changing const-value async load to async reset on $flatten\u_reg.\u_alert_trig_val_12.$verific$q_reg[0]$prim_subreg.sv:72$2213 ($aldff) from module sensor_ctrl.
Changing const-value async load to async reset on $flatten\u_reg.\u_alert_trig_val_11.$verific$q_reg[0]$prim_subreg.sv:72$2213 ($aldff) from module sensor_ctrl.
Changing const-value async load to async reset on $flatten\u_reg.\u_alert_trig_val_10.$verific$q_reg[0]$prim_subreg.sv:72$2213 ($aldff) from module sensor_ctrl.
Changing const-value async load to async reset on $flatten\u_alert_p_sync.$verific$q_reg$prim_flop_2sync.sv:26$942 ($aldff) from module sensor_ctrl.
Changing const-value async load to async reset on $flatten\u_reg.\u_alert_trig_val_1.$verific$q_reg[0]$prim_subreg.sv:72$2213 ($aldff) from module sensor_ctrl.
Changing const-value async load to async reset on $flatten\u_alert_p_sync.$verific$intq_reg$prim_flop_2sync.sv:26$941 ($aldff) from module sensor_ctrl.
Changing const-value async load to async reset on $flatten\u_reg.\u_alert_trig_val_0.$verific$q_reg[0]$prim_subreg.sv:72$2213 ($aldff) from module sensor_ctrl.
Changing const-value async load to async reset on $flatten\u_alert_n_sync.$verific$q_reg$prim_flop_2sync.sv:26$954 ($aldff) from module sensor_ctrl.
Changing const-value async load to async reset on $flatten\u_reg.$verific$intg_err_q_reg$sensor_ctrl_reg_top.sv:61$1206 ($aldff) from module sensor_ctrl.
Changing const-value async load to async reset on $flatten\u_prim_recov_alert_sender.\i_decode_ping.\gen_async.i_sync_p.$verific$q_reg[0]$prim_flop_2sync.sv:26$918 ($aldff) from module sensor_ctrl.
Changing const-value async load to async reset on $flatten\u_prim_recov_alert_sender.\i_decode_ping.\gen_async.i_sync_p.$verific$intq_reg[0]$prim_flop_2sync.sv:26$917 ($aldff) from module sensor_ctrl.
Changing const-value async load to async reset on $flatten\u_prim_recov_alert_sender.\i_decode_ping.\gen_async.i_sync_n.$verific$q_reg[0]$prim_flop_2sync.sv:26$930 ($aldff) from module sensor_ctrl.
Changing const-value async load to async reset on $flatten\u_prim_recov_alert_sender.\i_decode_ping.\gen_async.i_sync_n.$verific$intq_reg[0]$prim_flop_2sync.sv:26$929 ($aldff) from module sensor_ctrl.
Changing const-value async load to async reset on $flatten\u_prim_recov_alert_sender.\i_decode_ping.$verific$gen_async.state_q_reg$prim_diff_decode.sv:172$902 ($aldff) from module sensor_ctrl.
Changing const-value async load to async reset on $flatten\u_prim_recov_alert_sender.\i_decode_ping.$verific$gen_async.diff_pq_reg$prim_diff_decode.sv:172$903 ($aldff) from module sensor_ctrl.
Changing const-value async load to async reset on $flatten\u_prim_recov_alert_sender.\i_decode_ping.$verific$gen_async.diff_nq_reg$prim_diff_decode.sv:172$904 ($aldff) from module sensor_ctrl.
Changing const-value async load to async reset on $flatten\u_prim_recov_alert_sender.\i_decode_ack.\gen_async.i_sync_p.$verific$q_reg[0]$prim_flop_2sync.sv:26$918 ($aldff) from module sensor_ctrl.
Changing const-value async load to async reset on $flatten\u_prim_recov_alert_sender.\i_decode_ack.\gen_async.i_sync_p.$verific$intq_reg[0]$prim_flop_2sync.sv:26$917 ($aldff) from module sensor_ctrl.
Changing const-value async load to async reset on $flatten\u_prim_recov_alert_sender.\i_decode_ack.\gen_async.i_sync_n.$verific$q_reg[0]$prim_flop_2sync.sv:26$930 ($aldff) from module sensor_ctrl.
Changing const-value async load to async reset on $flatten\u_prim_recov_alert_sender.\i_decode_ack.\gen_async.i_sync_n.$verific$intq_reg[0]$prim_flop_2sync.sv:26$929 ($aldff) from module sensor_ctrl.
Changing const-value async load to async reset on $flatten\u_prim_recov_alert_sender.\i_decode_ack.$verific$level_q_reg$prim_diff_decode.sv:172$905 ($aldff) from module sensor_ctrl.
Changing const-value async load to async reset on $flatten\u_prim_recov_alert_sender.\i_decode_ack.$verific$gen_async.state_q_reg$prim_diff_decode.sv:172$902 ($aldff) from module sensor_ctrl.
Changing const-value async load to async reset on $flatten\u_prim_recov_alert_sender.\i_decode_ack.$verific$gen_async.diff_pq_reg$prim_diff_decode.sv:172$903 ($aldff) from module sensor_ctrl.
Changing const-value async load to async reset on $flatten\u_prim_recov_alert_sender.\i_decode_ack.$verific$gen_async.diff_nq_reg$prim_diff_decode.sv:172$904 ($aldff) from module sensor_ctrl.
Changing const-value async load to async reset on $flatten\u_prim_recov_alert_sender.$verific$state_q_reg$prim_alert_sender.sv:183$815 ($aldff) from module sensor_ctrl.
Changing const-value async load to async reset on $flatten\u_prim_recov_alert_sender.$verific$ping_set_q_reg$prim_alert_sender.sv:183$819 ($aldff) from module sensor_ctrl.
Changing const-value async load to async reset on $flatten\u_prim_recov_alert_sender.$verific$alert_set_q_reg$prim_alert_sender.sv:183$818 ($aldff) from module sensor_ctrl.
Changing const-value async load to async reset on $flatten\u_prim_recov_alert_sender.$verific$alert_pq_reg$prim_alert_sender.sv:183$816 ($aldff) from module sensor_ctrl.
Changing const-value async load to async reset on $flatten\u_prim_recov_alert_sender.$verific$alert_nq_reg$prim_alert_sender.sv:183$817 ($aldff) from module sensor_ctrl.
Changing const-value async load to async reset on $flatten\u_prim_fatal_alert_sender.\i_decode_ping.\gen_async.i_sync_p.$verific$q_reg[0]$prim_flop_2sync.sv:26$918 ($aldff) from module sensor_ctrl.
Changing const-value async load to async reset on $flatten\u_prim_fatal_alert_sender.\i_decode_ping.\gen_async.i_sync_p.$verific$intq_reg[0]$prim_flop_2sync.sv:26$917 ($aldff) from module sensor_ctrl.
Changing const-value async load to async reset on $flatten\u_prim_fatal_alert_sender.\i_decode_ping.\gen_async.i_sync_n.$verific$q_reg[0]$prim_flop_2sync.sv:26$930 ($aldff) from module sensor_ctrl.
Changing const-value async load to async reset on $flatten\u_prim_fatal_alert_sender.\i_decode_ping.\gen_async.i_sync_n.$verific$intq_reg[0]$prim_flop_2sync.sv:26$929 ($aldff) from module sensor_ctrl.
Changing const-value async load to async reset on $flatten\u_prim_fatal_alert_sender.\i_decode_ping.$verific$gen_async.state_q_reg$prim_diff_decode.sv:172$902 ($aldff) from module sensor_ctrl.
Changing const-value async load to async reset on $flatten\u_prim_fatal_alert_sender.\i_decode_ping.$verific$gen_async.diff_pq_reg$prim_diff_decode.sv:172$903 ($aldff) from module sensor_ctrl.
Changing const-value async load to async reset on $flatten\u_prim_fatal_alert_sender.\i_decode_ping.$verific$gen_async.diff_nq_reg$prim_diff_decode.sv:172$904 ($aldff) from module sensor_ctrl.
Changing const-value async load to async reset on $flatten\u_prim_fatal_alert_sender.\i_decode_ack.\gen_async.i_sync_p.$verific$q_reg[0]$prim_flop_2sync.sv:26$918 ($aldff) from module sensor_ctrl.
Changing const-value async load to async reset on $flatten\u_prim_fatal_alert_sender.\i_decode_ack.\gen_async.i_sync_p.$verific$intq_reg[0]$prim_flop_2sync.sv:26$917 ($aldff) from module sensor_ctrl.
Changing const-value async load to async reset on $flatten\u_prim_fatal_alert_sender.\i_decode_ack.\gen_async.i_sync_n.$verific$q_reg[0]$prim_flop_2sync.sv:26$930 ($aldff) from module sensor_ctrl.
Changing const-value async load to async reset on $flatten\u_prim_fatal_alert_sender.\i_decode_ack.\gen_async.i_sync_n.$verific$intq_reg[0]$prim_flop_2sync.sv:26$929 ($aldff) from module sensor_ctrl.
Changing const-value async load to async reset on $flatten\u_prim_fatal_alert_sender.\i_decode_ack.$verific$level_q_reg$prim_diff_decode.sv:172$905 ($aldff) from module sensor_ctrl.
Changing const-value async load to async reset on $flatten\u_prim_fatal_alert_sender.\i_decode_ack.$verific$gen_async.state_q_reg$prim_diff_decode.sv:172$902 ($aldff) from module sensor_ctrl.
Changing const-value async load to async reset on $flatten\u_prim_fatal_alert_sender.\i_decode_ack.$verific$gen_async.diff_pq_reg$prim_diff_decode.sv:172$903 ($aldff) from module sensor_ctrl.
Changing const-value async load to async reset on $flatten\u_prim_fatal_alert_sender.\i_decode_ack.$verific$gen_async.diff_nq_reg$prim_diff_decode.sv:172$904 ($aldff) from module sensor_ctrl.
Changing const-value async load to async reset on $flatten\u_prim_fatal_alert_sender.$verific$state_q_reg$prim_alert_sender.sv:183$815 ($aldff) from module sensor_ctrl.
Changing const-value async load to async reset on $flatten\u_prim_fatal_alert_sender.$verific$ping_set_q_reg$prim_alert_sender.sv:183$819 ($aldff) from module sensor_ctrl.
Setting constant 0-bit at position 0 on $flatten\u_alert_p_sync.$verific$intq_reg$prim_flop_2sync.sv:26$941 ($adff) from module sensor_ctrl.
Setting constant 0-bit at position 1 on $flatten\u_alert_p_sync.$verific$intq_reg$prim_flop_2sync.sv:26$941 ($adff) from module sensor_ctrl.
Setting constant 0-bit at position 2 on $flatten\u_alert_p_sync.$verific$intq_reg$prim_flop_2sync.sv:26$941 ($adff) from module sensor_ctrl.
Setting constant 0-bit at position 3 on $flatten\u_alert_p_sync.$verific$intq_reg$prim_flop_2sync.sv:26$941 ($adff) from module sensor_ctrl.
Setting constant 0-bit at position 4 on $flatten\u_alert_p_sync.$verific$intq_reg$prim_flop_2sync.sv:26$941 ($adff) from module sensor_ctrl.
Setting constant 0-bit at position 5 on $flatten\u_alert_p_sync.$verific$intq_reg$prim_flop_2sync.sv:26$941 ($adff) from module sensor_ctrl.
Setting constant 0-bit at position 6 on $flatten\u_alert_p_sync.$verific$intq_reg$prim_flop_2sync.sv:26$941 ($adff) from module sensor_ctrl.
Setting constant 0-bit at position 7 on $flatten\u_alert_p_sync.$verific$intq_reg$prim_flop_2sync.sv:26$941 ($adff) from module sensor_ctrl.
Setting constant 0-bit at position 8 on $flatten\u_alert_p_sync.$verific$intq_reg$prim_flop_2sync.sv:26$941 ($adff) from module sensor_ctrl.
Setting constant 0-bit at position 9 on $flatten\u_alert_p_sync.$verific$intq_reg$prim_flop_2sync.sv:26$941 ($adff) from module sensor_ctrl.
Setting constant 0-bit at position 10 on $flatten\u_alert_p_sync.$verific$intq_reg$prim_flop_2sync.sv:26$941 ($adff) from module sensor_ctrl.
Setting constant 0-bit at position 11 on $flatten\u_alert_p_sync.$verific$intq_reg$prim_flop_2sync.sv:26$941 ($adff) from module sensor_ctrl.
Setting constant 0-bit at position 12 on $flatten\u_alert_p_sync.$verific$intq_reg$prim_flop_2sync.sv:26$941 ($adff) from module sensor_ctrl.

yosys> opt_clean

5.23. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \sensor_ctrl..
Removed 0 unused cells and 38 unused wires.
<suppressed ~1 debug messages>

yosys> opt_expr

5.24. Executing OPT_EXPR pass (perform const folding).
Optimizing module sensor_ctrl.

yosys> opt_muxtree

5.25. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \sensor_ctrl..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Removed 0 multiplexer ports.
<suppressed ~73 debug messages>

yosys> opt_reduce

5.26. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \sensor_ctrl.
Performed a total of 0 changes.

yosys> opt_merge

5.27. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\sensor_ctrl'.
Removed a total of 0 cells.

yosys> opt_share

5.28. Executing OPT_SHARE pass.

yosys> opt_dff -nosdff -nodffe

5.29. Executing OPT_DFF pass (perform DFF optimizations).
Handling D = Q on $flatten\u_reg.\u_fatal_alert_en_val_9.$verific$q_reg[0]$prim_subreg.sv:72$2213 ($adff) from module sensor_ctrl (removing D path).
Handling D = Q on $flatten\u_reg.\u_fatal_alert_en_val_8.$verific$q_reg[0]$prim_subreg.sv:72$2213 ($adff) from module sensor_ctrl (removing D path).
Handling D = Q on $flatten\u_reg.\u_fatal_alert_en_val_7.$verific$q_reg[0]$prim_subreg.sv:72$2213 ($adff) from module sensor_ctrl (removing D path).
Handling D = Q on $flatten\u_reg.\u_fatal_alert_en_val_6.$verific$q_reg[0]$prim_subreg.sv:72$2213 ($adff) from module sensor_ctrl (removing D path).
Handling D = Q on $flatten\u_reg.\u_fatal_alert_en_val_5.$verific$q_reg[0]$prim_subreg.sv:72$2213 ($adff) from module sensor_ctrl (removing D path).
Handling D = Q on $flatten\u_reg.\u_fatal_alert_en_val_4.$verific$q_reg[0]$prim_subreg.sv:72$2213 ($adff) from module sensor_ctrl (removing D path).
Handling D = Q on $flatten\u_reg.\u_fatal_alert_en_val_3.$verific$q_reg[0]$prim_subreg.sv:72$2213 ($adff) from module sensor_ctrl (removing D path).
Handling D = Q on $flatten\u_reg.\u_fatal_alert_en_val_2.$verific$q_reg[0]$prim_subreg.sv:72$2213 ($adff) from module sensor_ctrl (removing D path).
Handling D = Q on $flatten\u_reg.\u_fatal_alert_en_val_12.$verific$q_reg[0]$prim_subreg.sv:72$2213 ($adff) from module sensor_ctrl (removing D path).
Handling D = Q on $flatten\u_reg.\u_fatal_alert_en_val_11.$verific$q_reg[0]$prim_subreg.sv:72$2213 ($adff) from module sensor_ctrl (removing D path).
Handling D = Q on $flatten\u_reg.\u_fatal_alert_en_val_10.$verific$q_reg[0]$prim_subreg.sv:72$2213 ($adff) from module sensor_ctrl (removing D path).
Handling D = Q on $flatten\u_reg.\u_fatal_alert_en_val_1.$verific$q_reg[0]$prim_subreg.sv:72$2213 ($adff) from module sensor_ctrl (removing D path).
Handling D = Q on $flatten\u_reg.\u_fatal_alert_en_val_0.$verific$q_reg[0]$prim_subreg.sv:72$2213 ($adff) from module sensor_ctrl (removing D path).
Handling D = Q on $flatten\u_reg.\u_cfg_regwen.$verific$q_reg[0]$prim_subreg.sv:72$2234 ($adff) from module sensor_ctrl (removing D path).
Handling D = Q on $flatten\u_reg.\u_alert_trig_val_9.$verific$q_reg[0]$prim_subreg.sv:72$2213 ($adff) from module sensor_ctrl (removing D path).
Handling D = Q on $flatten\u_reg.\u_alert_trig_val_8.$verific$q_reg[0]$prim_subreg.sv:72$2213 ($adff) from module sensor_ctrl (removing D path).
Handling D = Q on $flatten\u_reg.\u_alert_trig_val_7.$verific$q_reg[0]$prim_subreg.sv:72$2213 ($adff) from module sensor_ctrl (removing D path).
Handling D = Q on $flatten\u_reg.\u_alert_trig_val_6.$verific$q_reg[0]$prim_subreg.sv:72$2213 ($adff) from module sensor_ctrl (removing D path).
Handling D = Q on $flatten\u_reg.\u_alert_trig_val_5.$verific$q_reg[0]$prim_subreg.sv:72$2213 ($adff) from module sensor_ctrl (removing D path).
Handling D = Q on $flatten\u_reg.\u_alert_trig_val_4.$verific$q_reg[0]$prim_subreg.sv:72$2213 ($adff) from module sensor_ctrl (removing D path).
Handling D = Q on $flatten\u_reg.\u_alert_trig_val_3.$verific$q_reg[0]$prim_subreg.sv:72$2213 ($adff) from module sensor_ctrl (removing D path).
Handling D = Q on $flatten\u_reg.\u_alert_trig_val_2.$verific$q_reg[0]$prim_subreg.sv:72$2213 ($adff) from module sensor_ctrl (removing D path).
Handling D = Q on $flatten\u_reg.\u_alert_trig_val_12.$verific$q_reg[0]$prim_subreg.sv:72$2213 ($adff) from module sensor_ctrl (removing D path).
Handling D = Q on $flatten\u_reg.\u_alert_trig_val_11.$verific$q_reg[0]$prim_subreg.sv:72$2213 ($adff) from module sensor_ctrl (removing D path).
Handling D = Q on $flatten\u_reg.\u_alert_trig_val_10.$verific$q_reg[0]$prim_subreg.sv:72$2213 ($adff) from module sensor_ctrl (removing D path).
Handling D = Q on $flatten\u_reg.\u_alert_trig_val_1.$verific$q_reg[0]$prim_subreg.sv:72$2213 ($adff) from module sensor_ctrl (removing D path).
Handling D = Q on $flatten\u_reg.\u_alert_trig_val_0.$verific$q_reg[0]$prim_subreg.sv:72$2213 ($adff) from module sensor_ctrl (removing D path).
Setting constant 0-bit at position 0 on $flatten\u_reg.\u_alert_trig_val_0.$verific$q_reg[0]$prim_subreg.sv:72$2213 ($dlatch) from module sensor_ctrl.
Setting constant 0-bit at position 0 on $flatten\u_alert_p_sync.$verific$q_reg$prim_flop_2sync.sv:26$942 ($adff) from module sensor_ctrl.
Setting constant 0-bit at position 1 on $flatten\u_alert_p_sync.$verific$q_reg$prim_flop_2sync.sv:26$942 ($adff) from module sensor_ctrl.
Setting constant 0-bit at position 2 on $flatten\u_alert_p_sync.$verific$q_reg$prim_flop_2sync.sv:26$942 ($adff) from module sensor_ctrl.
Setting constant 0-bit at position 3 on $flatten\u_alert_p_sync.$verific$q_reg$prim_flop_2sync.sv:26$942 ($adff) from module sensor_ctrl.
Setting constant 0-bit at position 4 on $flatten\u_alert_p_sync.$verific$q_reg$prim_flop_2sync.sv:26$942 ($adff) from module sensor_ctrl.
Setting constant 0-bit at position 5 on $flatten\u_alert_p_sync.$verific$q_reg$prim_flop_2sync.sv:26$942 ($adff) from module sensor_ctrl.
Setting constant 0-bit at position 6 on $flatten\u_alert_p_sync.$verific$q_reg$prim_flop_2sync.sv:26$942 ($adff) from module sensor_ctrl.
Setting constant 0-bit at position 7 on $flatten\u_alert_p_sync.$verific$q_reg$prim_flop_2sync.sv:26$942 ($adff) from module sensor_ctrl.
Setting constant 0-bit at position 8 on $flatten\u_alert_p_sync.$verific$q_reg$prim_flop_2sync.sv:26$942 ($adff) from module sensor_ctrl.
Setting constant 0-bit at position 9 on $flatten\u_alert_p_sync.$verific$q_reg$prim_flop_2sync.sv:26$942 ($adff) from module sensor_ctrl.
Setting constant 0-bit at position 10 on $flatten\u_alert_p_sync.$verific$q_reg$prim_flop_2sync.sv:26$942 ($adff) from module sensor_ctrl.
Setting constant 0-bit at position 11 on $flatten\u_alert_p_sync.$verific$q_reg$prim_flop_2sync.sv:26$942 ($adff) from module sensor_ctrl.
Setting constant 0-bit at position 12 on $flatten\u_alert_p_sync.$verific$q_reg$prim_flop_2sync.sv:26$942 ($adff) from module sensor_ctrl.
Setting constant 0-bit at position 0 on $flatten\u_reg.\u_alert_trig_val_1.$verific$q_reg[0]$prim_subreg.sv:72$2213 ($dlatch) from module sensor_ctrl.
Setting constant 0-bit at position 0 on $flatten\u_reg.\u_alert_trig_val_10.$verific$q_reg[0]$prim_subreg.sv:72$2213 ($dlatch) from module sensor_ctrl.
Setting constant 0-bit at position 0 on $flatten\u_reg.\u_alert_trig_val_11.$verific$q_reg[0]$prim_subreg.sv:72$2213 ($dlatch) from module sensor_ctrl.
Setting constant 0-bit at position 0 on $flatten\u_reg.\u_alert_trig_val_12.$verific$q_reg[0]$prim_subreg.sv:72$2213 ($dlatch) from module sensor_ctrl.
Setting constant 0-bit at position 0 on $flatten\u_reg.\u_alert_trig_val_2.$verific$q_reg[0]$prim_subreg.sv:72$2213 ($dlatch) from module sensor_ctrl.
Setting constant 0-bit at position 0 on $flatten\u_reg.\u_alert_trig_val_3.$verific$q_reg[0]$prim_subreg.sv:72$2213 ($dlatch) from module sensor_ctrl.
Setting constant 0-bit at position 0 on $flatten\u_reg.\u_alert_trig_val_4.$verific$q_reg[0]$prim_subreg.sv:72$2213 ($dlatch) from module sensor_ctrl.
Setting constant 0-bit at position 0 on $flatten\u_reg.\u_alert_trig_val_5.$verific$q_reg[0]$prim_subreg.sv:72$2213 ($dlatch) from module sensor_ctrl.
Setting constant 0-bit at position 0 on $flatten\u_reg.\u_alert_trig_val_6.$verific$q_reg[0]$prim_subreg.sv:72$2213 ($dlatch) from module sensor_ctrl.
Setting constant 0-bit at position 0 on $flatten\u_reg.\u_alert_trig_val_7.$verific$q_reg[0]$prim_subreg.sv:72$2213 ($dlatch) from module sensor_ctrl.
Setting constant 0-bit at position 0 on $flatten\u_reg.\u_alert_trig_val_8.$verific$q_reg[0]$prim_subreg.sv:72$2213 ($dlatch) from module sensor_ctrl.
Setting constant 0-bit at position 0 on $flatten\u_reg.\u_alert_trig_val_9.$verific$q_reg[0]$prim_subreg.sv:72$2213 ($dlatch) from module sensor_ctrl.
Setting constant 1-bit at position 0 on $flatten\u_reg.\u_cfg_regwen.$verific$q_reg[0]$prim_subreg.sv:72$2234 ($dlatch) from module sensor_ctrl.
Setting constant 0-bit at position 0 on $flatten\u_reg.\u_fatal_alert_en_val_0.$verific$q_reg[0]$prim_subreg.sv:72$2213 ($dlatch) from module sensor_ctrl.
Setting constant 0-bit at position 0 on $flatten\u_reg.\u_fatal_alert_en_val_1.$verific$q_reg[0]$prim_subreg.sv:72$2213 ($dlatch) from module sensor_ctrl.
Setting constant 0-bit at position 0 on $flatten\u_reg.\u_fatal_alert_en_val_10.$verific$q_reg[0]$prim_subreg.sv:72$2213 ($dlatch) from module sensor_ctrl.
Setting constant 0-bit at position 0 on $flatten\u_reg.\u_fatal_alert_en_val_11.$verific$q_reg[0]$prim_subreg.sv:72$2213 ($dlatch) from module sensor_ctrl.
Setting constant 0-bit at position 0 on $flatten\u_reg.\u_fatal_alert_en_val_12.$verific$q_reg[0]$prim_subreg.sv:72$2213 ($dlatch) from module sensor_ctrl.
Setting constant 0-bit at position 0 on $flatten\u_reg.\u_fatal_alert_en_val_2.$verific$q_reg[0]$prim_subreg.sv:72$2213 ($dlatch) from module sensor_ctrl.
Setting constant 0-bit at position 0 on $flatten\u_reg.\u_fatal_alert_en_val_3.$verific$q_reg[0]$prim_subreg.sv:72$2213 ($dlatch) from module sensor_ctrl.
Setting constant 0-bit at position 0 on $flatten\u_reg.\u_fatal_alert_en_val_4.$verific$q_reg[0]$prim_subreg.sv:72$2213 ($dlatch) from module sensor_ctrl.
Setting constant 0-bit at position 0 on $flatten\u_reg.\u_fatal_alert_en_val_5.$verific$q_reg[0]$prim_subreg.sv:72$2213 ($dlatch) from module sensor_ctrl.
Setting constant 0-bit at position 0 on $flatten\u_reg.\u_fatal_alert_en_val_6.$verific$q_reg[0]$prim_subreg.sv:72$2213 ($dlatch) from module sensor_ctrl.
Setting constant 0-bit at position 0 on $flatten\u_reg.\u_fatal_alert_en_val_7.$verific$q_reg[0]$prim_subreg.sv:72$2213 ($dlatch) from module sensor_ctrl.
Setting constant 0-bit at position 0 on $flatten\u_reg.\u_fatal_alert_en_val_8.$verific$q_reg[0]$prim_subreg.sv:72$2213 ($dlatch) from module sensor_ctrl.
Setting constant 0-bit at position 0 on $flatten\u_reg.\u_fatal_alert_en_val_9.$verific$q_reg[0]$prim_subreg.sv:72$2213 ($dlatch) from module sensor_ctrl.

yosys> opt_clean

5.30. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \sensor_ctrl..

yosys> opt_expr

5.31. Executing OPT_EXPR pass (perform const folding).
Optimizing module sensor_ctrl.
<suppressed ~28 debug messages>

yosys> opt_muxtree

5.32. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \sensor_ctrl..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Removed 0 multiplexer ports.
<suppressed ~73 debug messages>

yosys> opt_reduce

5.33. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \sensor_ctrl.
    New ctrl vector for $pmux cell $flatten\u_reg.$verific$select_220$sensor_ctrl_reg_top.sv:1861$2171: { $flatten\u_reg.$verific$n794$1066 $flatten\u_reg.$verific$n803$1075 $flatten\u_reg.$verific$n806$1078 $flatten\u_reg.$verific$n809$1081 $flatten\u_reg.$verific$n811$1083 }
  Optimizing cells in module \sensor_ctrl.
Performed a total of 1 changes.

yosys> opt_merge

5.34. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\sensor_ctrl'.
Removed a total of 0 cells.

yosys> opt_share

5.35. Executing OPT_SHARE pass.

yosys> opt_dff -nosdff -nodffe

5.36. Executing OPT_DFF pass (perform DFF optimizations).

yosys> opt_clean

5.37. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \sensor_ctrl..
Removed 4 unused cells and 6 unused wires.
<suppressed ~6 debug messages>

yosys> opt_expr

5.38. Executing OPT_EXPR pass (perform const folding).
Optimizing module sensor_ctrl.

yosys> opt_muxtree

5.39. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \sensor_ctrl..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Removed 0 multiplexer ports.
<suppressed ~73 debug messages>

yosys> opt_reduce

5.40. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \sensor_ctrl.
Performed a total of 0 changes.

yosys> opt_merge

5.41. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\sensor_ctrl'.
Removed a total of 0 cells.

yosys> opt_share

5.42. Executing OPT_SHARE pass.

yosys> opt_dff -nosdff -nodffe

5.43. Executing OPT_DFF pass (perform DFF optimizations).

yosys> opt_clean

5.44. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \sensor_ctrl..

yosys> opt_expr

5.45. Executing OPT_EXPR pass (perform const folding).
Optimizing module sensor_ctrl.
MAX OPT ITERATION = 4

yosys> fsm -encoding binary

5.46. Executing FSM pass (extract and optimize FSM).

yosys> fsm_detect

5.46.1. Executing FSM_DETECT pass (finding FSMs in design).

yosys> fsm_extract

5.46.2. Executing FSM_EXTRACT pass (extracting FSM from design).

yosys> fsm_opt

5.46.3. Executing FSM_OPT pass (simple optimizations of FSMs).

yosys> opt_clean

5.46.4. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \sensor_ctrl..

yosys> fsm_opt

5.46.5. Executing FSM_OPT pass (simple optimizations of FSMs).

yosys> fsm_recode -encoding binary

5.46.6. Executing FSM_RECODE pass (re-assigning FSM state encoding).

yosys> fsm_info

5.46.7. Executing FSM_INFO pass (dumping all available information on FSM cells).

yosys> fsm_map

5.46.8. Executing FSM_MAP pass (mapping FSMs to basic logic).

yosys> opt_expr

5.47. Executing OPT_EXPR pass (perform const folding).
Optimizing module sensor_ctrl.

yosys> opt_merge -nomux

5.48. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\sensor_ctrl'.
Removed a total of 0 cells.

yosys> opt_muxtree

5.49. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \sensor_ctrl..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Removed 0 multiplexer ports.
<suppressed ~73 debug messages>

yosys> opt_reduce

5.50. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \sensor_ctrl.
Performed a total of 0 changes.

yosys> opt_merge

5.51. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\sensor_ctrl'.
Removed a total of 0 cells.

yosys> opt_share

5.52. Executing OPT_SHARE pass.

yosys> opt_dff -nosdff -sat

5.53. Executing OPT_DFF pass (perform DFF optimizations).
Adding EN signal on $flatten\u_reg.\u_reg_if.$verific$rspop_reg$tlul_adapter_reg.sv:80$2356 ($adff) from module sensor_ctrl (D = { 2'00 \u_reg.u_reg_if.rd_req }, Q = \u_reg.u_reg_if.rspop).
Adding EN signal on $flatten\u_reg.\u_reg_if.$verific$reqsz_reg$tlul_adapter_reg.sv:80$2355 ($adff) from module sensor_ctrl (D = \tl_i.a_size, Q = \u_reg.u_reg_if.reqsz).
Adding EN signal on $flatten\u_reg.\u_reg_if.$verific$reqid_reg$tlul_adapter_reg.sv:80$2354 ($adff) from module sensor_ctrl (D = \tl_i.a_source, Q = \u_reg.u_reg_if.reqid).
Adding EN signal on $flatten\u_reg.\u_reg_if.$verific$rdata_reg$tlul_adapter_reg.sv:90$2364 ($adff) from module sensor_ctrl (D = $flatten\u_reg.\u_reg_if.$verific$n180$2314, Q = \u_reg.u_reg_if.rdata).
Adding EN signal on $flatten\u_reg.\u_reg_if.$verific$outstanding_reg$tlul_adapter_reg.sv:67$2344 ($adff) from module sensor_ctrl (D = $flatten\u_reg.\u_reg_if.$verific$n73$2294, Q = \u_reg.u_reg_if.outstanding).
Adding EN signal on $flatten\u_reg.\u_reg_if.$verific$error_reg$tlul_adapter_reg.sv:90$2365 ($adff) from module sensor_ctrl (D = $flatten\u_reg.\u_reg_if.$verific$n246$2296, Q = \u_reg.u_reg_if.error).
Adding EN signal on $flatten\u_reg.\u_recov_alert_val_9.$verific$q_reg[0]$prim_subreg.sv:72$2251 ($adff) from module sensor_ctrl (D = 1'1, Q = \u_reg.u_recov_alert_val_9.q).
Adding EN signal on $flatten\u_reg.\u_recov_alert_val_8.$verific$q_reg[0]$prim_subreg.sv:72$2251 ($adff) from module sensor_ctrl (D = 1'1, Q = \u_reg.u_recov_alert_val_8.q).
Adding EN signal on $flatten\u_reg.\u_recov_alert_val_7.$verific$q_reg[0]$prim_subreg.sv:72$2251 ($adff) from module sensor_ctrl (D = 1'1, Q = \u_reg.u_recov_alert_val_7.q).
Adding EN signal on $flatten\u_reg.\u_recov_alert_val_6.$verific$q_reg[0]$prim_subreg.sv:72$2251 ($adff) from module sensor_ctrl (D = 1'1, Q = \u_reg.u_recov_alert_val_6.q).
Adding EN signal on $flatten\u_reg.\u_recov_alert_val_5.$verific$q_reg[0]$prim_subreg.sv:72$2251 ($adff) from module sensor_ctrl (D = 1'1, Q = \u_reg.u_recov_alert_val_5.q).
Adding EN signal on $flatten\u_reg.\u_recov_alert_val_4.$verific$q_reg[0]$prim_subreg.sv:72$2251 ($adff) from module sensor_ctrl (D = 1'1, Q = \u_reg.u_recov_alert_val_4.q).
Adding EN signal on $flatten\u_reg.\u_recov_alert_val_3.$verific$q_reg[0]$prim_subreg.sv:72$2251 ($adff) from module sensor_ctrl (D = 1'1, Q = \u_reg.u_recov_alert_val_3.q).
Adding EN signal on $flatten\u_reg.\u_recov_alert_val_2.$verific$q_reg[0]$prim_subreg.sv:72$2251 ($adff) from module sensor_ctrl (D = 1'1, Q = \u_reg.u_recov_alert_val_2.q).
Adding EN signal on $flatten\u_reg.\u_recov_alert_val_12.$verific$q_reg[0]$prim_subreg.sv:72$2251 ($adff) from module sensor_ctrl (D = 1'1, Q = \u_reg.u_recov_alert_val_12.q).
Adding EN signal on $flatten\u_reg.\u_recov_alert_val_11.$verific$q_reg[0]$prim_subreg.sv:72$2251 ($adff) from module sensor_ctrl (D = 1'1, Q = \u_reg.u_recov_alert_val_11.q).
Adding EN signal on $flatten\u_reg.\u_recov_alert_val_10.$verific$q_reg[0]$prim_subreg.sv:72$2251 ($adff) from module sensor_ctrl (D = 1'1, Q = \u_reg.u_recov_alert_val_10.q).
Adding EN signal on $flatten\u_reg.\u_recov_alert_val_1.$verific$q_reg[0]$prim_subreg.sv:72$2251 ($adff) from module sensor_ctrl (D = 1'1, Q = \u_reg.u_recov_alert_val_1.q).
Adding EN signal on $flatten\u_reg.\u_recov_alert_val_0.$verific$q_reg[0]$prim_subreg.sv:72$2251 ($adff) from module sensor_ctrl (D = 1'1, Q = \u_reg.u_recov_alert_val_0.q).
Adding EN signal on $flatten\u_reg.\u_fatal_alert_val_9.$verific$q_reg[0]$prim_subreg.sv:72$2196 ($adff) from module sensor_ctrl (D = 1'1, Q = \u_reg.u_fatal_alert_val_9.q).
Adding EN signal on $flatten\u_reg.\u_fatal_alert_val_8.$verific$q_reg[0]$prim_subreg.sv:72$2196 ($adff) from module sensor_ctrl (D = 1'1, Q = \u_reg.u_fatal_alert_val_8.q).
Adding EN signal on $flatten\u_reg.\u_fatal_alert_val_7.$verific$q_reg[0]$prim_subreg.sv:72$2196 ($adff) from module sensor_ctrl (D = 1'1, Q = \u_reg.u_fatal_alert_val_7.q).
Adding EN signal on $flatten\u_reg.\u_fatal_alert_val_6.$verific$q_reg[0]$prim_subreg.sv:72$2196 ($adff) from module sensor_ctrl (D = 1'1, Q = \u_reg.u_fatal_alert_val_6.q).
Adding EN signal on $flatten\u_reg.\u_fatal_alert_val_5.$verific$q_reg[0]$prim_subreg.sv:72$2196 ($adff) from module sensor_ctrl (D = 1'1, Q = \u_reg.u_fatal_alert_val_5.q).
Adding EN signal on $flatten\u_reg.\u_fatal_alert_val_4.$verific$q_reg[0]$prim_subreg.sv:72$2196 ($adff) from module sensor_ctrl (D = 1'1, Q = \u_reg.u_fatal_alert_val_4.q).
Adding EN signal on $flatten\u_reg.\u_fatal_alert_val_3.$verific$q_reg[0]$prim_subreg.sv:72$2196 ($adff) from module sensor_ctrl (D = 1'1, Q = \u_reg.u_fatal_alert_val_3.q).
Adding EN signal on $flatten\u_reg.\u_fatal_alert_val_2.$verific$q_reg[0]$prim_subreg.sv:72$2196 ($adff) from module sensor_ctrl (D = 1'1, Q = \u_reg.u_fatal_alert_val_2.q).
Adding EN signal on $flatten\u_reg.\u_fatal_alert_val_13.$verific$q_reg[0]$prim_subreg.sv:72$2196 ($adff) from module sensor_ctrl (D = 1'1, Q = \u_reg.u_fatal_alert_val_13.q).
Adding EN signal on $flatten\u_reg.\u_fatal_alert_val_12.$verific$q_reg[0]$prim_subreg.sv:72$2196 ($adff) from module sensor_ctrl (D = 1'1, Q = \u_reg.u_fatal_alert_val_12.q).
Adding EN signal on $flatten\u_reg.\u_fatal_alert_val_11.$verific$q_reg[0]$prim_subreg.sv:72$2196 ($adff) from module sensor_ctrl (D = 1'1, Q = \u_reg.u_fatal_alert_val_11.q).
Adding EN signal on $flatten\u_reg.\u_fatal_alert_val_10.$verific$q_reg[0]$prim_subreg.sv:72$2196 ($adff) from module sensor_ctrl (D = 1'1, Q = \u_reg.u_fatal_alert_val_10.q).
Adding EN signal on $flatten\u_reg.\u_fatal_alert_val_1.$verific$q_reg[0]$prim_subreg.sv:72$2196 ($adff) from module sensor_ctrl (D = 1'1, Q = \u_reg.u_fatal_alert_val_1.q).
Adding EN signal on $flatten\u_reg.\u_fatal_alert_val_0.$verific$q_reg[0]$prim_subreg.sv:72$2196 ($adff) from module sensor_ctrl (D = 1'1, Q = \u_reg.u_fatal_alert_val_0.q).
Adding EN signal on $flatten\u_reg.$verific$intg_err_q_reg$sensor_ctrl_reg_top.sv:61$1206 ($adff) from module sensor_ctrl (D = 1'1, Q = \u_reg.intg_err_q).
Adding EN signal on $flatten\u_prim_recov_alert_sender.\i_decode_ping.$verific$gen_async.state_q_reg$prim_diff_decode.sv:172$902 ($adff) from module sensor_ctrl (D = \u_prim_recov_alert_sender.i_decode_ping.gen_async.state_d, Q = \u_prim_recov_alert_sender.i_decode_ping.gen_async.state_q).
Adding EN signal on $flatten\u_prim_recov_alert_sender.\i_decode_ack.$verific$gen_async.state_q_reg$prim_diff_decode.sv:172$902 ($adff) from module sensor_ctrl (D = \u_prim_recov_alert_sender.i_decode_ack.gen_async.state_d, Q = \u_prim_recov_alert_sender.i_decode_ack.gen_async.state_q).
Adding EN signal on $flatten\u_prim_recov_alert_sender.$verific$state_q_reg$prim_alert_sender.sv:183$815 ($adff) from module sensor_ctrl (D = \u_prim_recov_alert_sender.state_d, Q = \u_prim_recov_alert_sender.state_q).
Adding EN signal on $flatten\u_prim_recov_alert_sender.$verific$alert_set_q_reg$prim_alert_sender.sv:183$818 ($adff) from module sensor_ctrl (D = 1'0, Q = \u_prim_recov_alert_sender.alert_set_q).
Adding EN signal on $flatten\u_prim_fatal_alert_sender.\i_decode_ping.$verific$gen_async.state_q_reg$prim_diff_decode.sv:172$902 ($adff) from module sensor_ctrl (D = \u_prim_fatal_alert_sender.i_decode_ping.gen_async.state_d, Q = \u_prim_fatal_alert_sender.i_decode_ping.gen_async.state_q).
Adding EN signal on $flatten\u_prim_fatal_alert_sender.\i_decode_ack.$verific$gen_async.state_q_reg$prim_diff_decode.sv:172$902 ($adff) from module sensor_ctrl (D = \u_prim_fatal_alert_sender.i_decode_ack.gen_async.state_d, Q = \u_prim_fatal_alert_sender.i_decode_ack.gen_async.state_q).
Adding EN signal on $flatten\u_prim_fatal_alert_sender.$verific$state_q_reg$prim_alert_sender.sv:183$815 ($adff) from module sensor_ctrl (D = \u_prim_fatal_alert_sender.state_d, Q = \u_prim_fatal_alert_sender.state_q).
Adding EN signal on $flatten\u_prim_fatal_alert_sender.$verific$alert_set_q_reg$prim_alert_sender.sv:183$818 ($adff) from module sensor_ctrl (D = 1'0, Q = \u_prim_fatal_alert_sender.alert_set_q).
Setting constant 0-bit at position 0 on $auto$ff.cc:262:slice$3515 ($adffe) from module sensor_ctrl.
Setting constant 0-bit at position 0 on $auto$ff.cc:262:slice$3493 ($adffe) from module sensor_ctrl.
Setting constant 0-bit at position 1 on $auto$ff.cc:262:slice$3436 ($adffe) from module sensor_ctrl.
Setting constant 0-bit at position 2 on $auto$ff.cc:262:slice$3436 ($adffe) from module sensor_ctrl.

yosys> opt_clean

5.54. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \sensor_ctrl..
Removed 47 unused cells and 47 unused wires.
<suppressed ~52 debug messages>

yosys> opt_expr

5.55. Executing OPT_EXPR pass (perform const folding).
Optimizing module sensor_ctrl.
<suppressed ~4 debug messages>

yosys> opt_muxtree

5.56. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \sensor_ctrl..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Removed 0 multiplexer ports.
<suppressed ~37 debug messages>

yosys> opt_reduce

5.57. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \sensor_ctrl.
Performed a total of 0 changes.

yosys> opt_merge

5.58. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\sensor_ctrl'.
<suppressed ~9 debug messages>
Removed a total of 3 cells.

yosys> opt_share

5.59. Executing OPT_SHARE pass.

yosys> opt_dff -nosdff -sat

5.60. Executing OPT_DFF pass (perform DFF optimizations).

yosys> opt_clean

5.61. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \sensor_ctrl..
Removed 0 unused cells and 5 unused wires.
<suppressed ~1 debug messages>

yosys> opt_expr

5.62. Executing OPT_EXPR pass (perform const folding).
Optimizing module sensor_ctrl.

yosys> opt_muxtree

5.63. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \sensor_ctrl..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
      Replacing known input bits on port B of cell $flatten\u_prim_fatal_alert_sender.$verific$i24$prim_alert_sender.sv:124$787: $flatten\u_prim_fatal_alert_sender.$verific$n21$723 -> 1'1
      Replacing known input bits on port B of cell $flatten\u_prim_recov_alert_sender.$verific$i24$prim_alert_sender.sv:124$787: $flatten\u_prim_recov_alert_sender.$verific$n21$723 -> 1'1
  Analyzing evaluation results.
Removed 0 multiplexer ports.
<suppressed ~37 debug messages>

yosys> opt_reduce

5.64. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \sensor_ctrl.
Performed a total of 0 changes.

yosys> opt_merge

5.65. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\sensor_ctrl'.
Removed a total of 0 cells.

yosys> opt_share

5.66. Executing OPT_SHARE pass.

yosys> opt_dff -nosdff -sat

5.67. Executing OPT_DFF pass (perform DFF optimizations).

yosys> opt_clean

5.68. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \sensor_ctrl..

yosys> opt_expr

5.69. Executing OPT_EXPR pass (perform const folding).
Optimizing module sensor_ctrl.
MAX OPT ITERATION = 3

yosys> wreduce -keepdc

5.70. Executing WREDUCE pass (reducing word size of cells).
Removed top 12 bits (of 13) from port B of cell sensor_ctrl.$verific$and_345$sensor_ctrl.sv:130$550 ($and).
Removed top 1 bits (of 5) from port B of cell sensor_ctrl.$auto$opt_dff.cc:195:make_patterns_logic$3512 ($ne).
Removed top 2 bits (of 5) from port B of cell sensor_ctrl.$auto$opt_dff.cc:195:make_patterns_logic$3510 ($ne).
Removed top 1 bits (of 3) from port B of cell sensor_ctrl.$auto$opt_dff.cc:195:make_patterns_logic$3505 ($ne).
Removed top 1 bits (of 3) from port B of cell sensor_ctrl.$auto$opt_dff.cc:195:make_patterns_logic$3498 ($ne).
Removed top 1 bits (of 5) from port B of cell sensor_ctrl.$auto$opt_dff.cc:195:make_patterns_logic$3490 ($ne).
Removed top 2 bits (of 5) from port B of cell sensor_ctrl.$auto$opt_dff.cc:195:make_patterns_logic$3488 ($ne).
Removed top 2 bits (of 3) from port B of cell sensor_ctrl.$auto$opt_dff.cc:195:make_patterns_logic$3483 ($ne).
Removed top 2 bits (of 3) from port B of cell sensor_ctrl.$flatten\u_reg.\u_reg_if.$verific$equal_8$tlul_adapter_reg.sv:55$2324 ($eq).
Removed top 2 bits (of 3) from port B of cell sensor_ctrl.$flatten\u_reg.$verific$equal_34$sensor_ctrl_reg_top.sv:1664$2063 ($eq).
Removed top 1 bits (of 3) from port B of cell sensor_ctrl.$flatten\u_reg.$verific$equal_36$sensor_ctrl_reg_top.sv:1665$2064 ($eq).
Removed top 1 bits (of 3) from port B of cell sensor_ctrl.$flatten\u_reg.$verific$equal_38$sensor_ctrl_reg_top.sv:1666$2065 ($eq).
Removed top 2 bits (of 3) from port B of cell sensor_ctrl.$auto$opt_dff.cc:195:make_patterns_logic$3476 ($ne).
Removed top 31 bits (of 32) from port A of cell sensor_ctrl.$flatten\u_reg.\u_reg_if.\u_err.$verific$shift_left_23$tlul_err.sv:49$2982 ($shl).
Removed top 28 bits (of 32) from port Y of cell sensor_ctrl.$flatten\u_reg.\u_reg_if.\u_err.$verific$shift_left_23$tlul_err.sv:49$2982 ($shl).
Removed top 2 bits (of 3) from mux cell sensor_ctrl.$flatten\u_prim_recov_alert_sender.$verific$mux_20$prim_alert_sender.sv:124$784 ($mux).
Removed top 1 bits (of 3) from port B of cell sensor_ctrl.$flatten\u_prim_recov_alert_sender.$verific$not_equal_42$prim_alert_sender.sv:161$798 ($ne).
Removed top 2 bits (of 3) from mux cell sensor_ctrl.$flatten\u_prim_fatal_alert_sender.$verific$mux_20$prim_alert_sender.sv:124$784 ($mux).
Removed top 1 bits (of 3) from port B of cell sensor_ctrl.$flatten\u_prim_fatal_alert_sender.$verific$not_equal_42$prim_alert_sender.sv:161$798 ($ne).
Removed top 3 bits (of 4) from wire sensor_ctrl.$flatten\u_prim_fatal_alert_sender.$auto$bmuxmap.cc:58:execute$3396.
Removed top 2 bits (of 4) from wire sensor_ctrl.$flatten\u_prim_fatal_alert_sender.$auto$bmuxmap.cc:58:execute$3406.
Removed top 2 bits (of 4) from wire sensor_ctrl.$flatten\u_prim_fatal_alert_sender.$auto$bmuxmap.cc:58:execute$3416.
Removed top 1 bits (of 2) from wire sensor_ctrl.$flatten\u_prim_fatal_alert_sender.$auto$bmuxmap.cc:58:execute$3421.
Removed top 3 bits (of 12) from wire sensor_ctrl.$flatten\u_prim_fatal_alert_sender.$auto$bmuxmap.cc:58:execute$3426.
Removed top 2 bits (of 3) from wire sensor_ctrl.$flatten\u_prim_fatal_alert_sender.$verific$n34$750.
Removed top 1 bits (of 2) from wire sensor_ctrl.$flatten\u_prim_fatal_alert_sender.\i_decode_ping.$auto$bmuxmap.cc:58:execute$3361.
Removed top 1 bits (of 2) from wire sensor_ctrl.$flatten\u_prim_fatal_alert_sender.\i_decode_ping.$auto$bmuxmap.cc:58:execute$3366.
Removed top 3 bits (of 4) from wire sensor_ctrl.$flatten\u_prim_recov_alert_sender.$auto$bmuxmap.cc:58:execute$3396.
Removed top 2 bits (of 4) from wire sensor_ctrl.$flatten\u_prim_recov_alert_sender.$auto$bmuxmap.cc:58:execute$3406.
Removed top 2 bits (of 4) from wire sensor_ctrl.$flatten\u_prim_recov_alert_sender.$auto$bmuxmap.cc:58:execute$3416.
Removed top 1 bits (of 2) from wire sensor_ctrl.$flatten\u_prim_recov_alert_sender.$auto$bmuxmap.cc:58:execute$3421.
Removed top 3 bits (of 12) from wire sensor_ctrl.$flatten\u_prim_recov_alert_sender.$auto$bmuxmap.cc:58:execute$3426.
Removed top 2 bits (of 3) from wire sensor_ctrl.$flatten\u_prim_recov_alert_sender.$verific$n34$750.
Removed top 1 bits (of 2) from wire sensor_ctrl.$flatten\u_prim_recov_alert_sender.\i_decode_ping.$auto$bmuxmap.cc:58:execute$3361.
Removed top 1 bits (of 2) from wire sensor_ctrl.$flatten\u_prim_recov_alert_sender.\i_decode_ping.$auto$bmuxmap.cc:58:execute$3366.
Removed top 3 bits (of 4) from wire sensor_ctrl.$flatten\u_reg.$verific$n618$1087.
Removed top 2 bits (of 4) from wire sensor_ctrl.$flatten\u_reg.$verific$n625$1088.

yosys> peepopt

5.71. Executing PEEPOPT pass (run peephole optimizers).

yosys> opt_clean

5.72. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \sensor_ctrl..
Removed 0 unused cells and 19 unused wires.
<suppressed ~1 debug messages>

yosys> bmuxmap

5.73. Executing BMUXMAP pass.

yosys> demuxmap

5.74. Executing DEMUXMAP pass.

yosys> clean_zerowidth

yosys> alumacc

5.75. Executing ALUMACC pass (create $alu and $macc cells).
Extracting $alu and $macc cells in module sensor_ctrl:
  created 0 $alu and 0 $macc cells.

yosys> opt_expr

5.76. Executing OPT_EXPR pass (perform const folding).
Optimizing module sensor_ctrl.

yosys> opt_merge -nomux

5.77. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\sensor_ctrl'.
Removed a total of 0 cells.

yosys> opt_muxtree

5.78. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \sensor_ctrl..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Removed 0 multiplexer ports.
<suppressed ~37 debug messages>

yosys> opt_reduce

5.79. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \sensor_ctrl.
Performed a total of 0 changes.

yosys> opt_merge

5.80. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\sensor_ctrl'.
<suppressed ~6 debug messages>
Removed a total of 2 cells.

yosys> opt_share

5.81. Executing OPT_SHARE pass.

yosys> opt_dff -nosdff -nodffe

5.82. Executing OPT_DFF pass (perform DFF optimizations).

yosys> opt_clean

5.83. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \sensor_ctrl..
Removed 0 unused cells and 2 unused wires.
<suppressed ~1 debug messages>

yosys> opt_expr

5.84. Executing OPT_EXPR pass (perform const folding).
Optimizing module sensor_ctrl.

yosys> opt_muxtree

5.85. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \sensor_ctrl..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Removed 0 multiplexer ports.
<suppressed ~39 debug messages>

yosys> opt_reduce

5.86. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \sensor_ctrl.
Performed a total of 0 changes.

yosys> opt_merge

5.87. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\sensor_ctrl'.
Removed a total of 0 cells.

yosys> opt_share

5.88. Executing OPT_SHARE pass.

yosys> opt_dff -nosdff -nodffe

5.89. Executing OPT_DFF pass (perform DFF optimizations).

yosys> opt_clean

5.90. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \sensor_ctrl..

yosys> opt_expr

5.91. Executing OPT_EXPR pass (perform const folding).
Optimizing module sensor_ctrl.
MAX OPT ITERATION = 2

yosys> stat

5.92. Printing statistics.

=== sensor_ctrl ===

   Number of wires:               1713
   Number of wire bits:           3943
   Number of public wires:        1472
   Number of public wire bits:    3543
   Number of memories:               0
   Number of memory bits:            0
   Number of processes:              0
   Number of cells:                455
     $adff                          40
     $adffe                         40
     $and                           47
     $eq                             9
     $logic_not                      2
     $mux                          127
     $ne                            14
     $not                           75
     $or                            35
     $pmux                           1
     $reduce_and                    10
     $reduce_bool                    1
     $reduce_or                     13
     $reduce_xor                    28
     $shl                            1
     $xor                           12


yosys> memory -nomap

5.93. Executing MEMORY pass.

yosys> opt_mem

5.93.1. Executing OPT_MEM pass (optimize memories).
Performed a total of 0 transformations.

yosys> opt_mem_priority

5.93.2. Executing OPT_MEM_PRIORITY pass (removing unnecessary memory write priority relations).
Performed a total of 0 transformations.

yosys> opt_mem_feedback

5.93.3. Executing OPT_MEM_FEEDBACK pass (finding memory read-to-write feedback paths).

yosys> memory_bmux2rom

5.93.4. Executing MEMORY_BMUX2ROM pass (converting muxes to ROMs).

yosys> memory_dff

5.93.5. Executing MEMORY_DFF pass (merging $dff cells to $memrd).

yosys> opt_clean

5.93.6. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \sensor_ctrl..

yosys> memory_share

5.93.7. Executing MEMORY_SHARE pass (consolidating $memrd/$memwr cells).

yosys> opt_mem_widen

5.93.8. Executing OPT_MEM_WIDEN pass (optimize memories where all ports are wide).
Performed a total of 0 transformations.

yosys> opt_clean

5.93.9. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \sensor_ctrl..

yosys> memory_collect

5.93.10. Executing MEMORY_COLLECT pass (generating $mem cells).

yosys> stat

5.94. Printing statistics.

=== sensor_ctrl ===

   Number of wires:               1713
   Number of wire bits:           3943
   Number of public wires:        1472
   Number of public wire bits:    3543
   Number of memories:               0
   Number of memory bits:            0
   Number of processes:              0
   Number of cells:                455
     $adff                          40
     $adffe                         40
     $and                           47
     $eq                             9
     $logic_not                      2
     $mux                          127
     $ne                            14
     $not                           75
     $or                            35
     $pmux                           1
     $reduce_and                    10
     $reduce_bool                    1
     $reduce_or                     13
     $reduce_xor                    28
     $shl                            1
     $xor                           12


yosys> muxpack

5.95. Executing MUXPACK pass ($mux cell cascades to $pmux).
Converted 0 (p)mux cells into 0 pmux cells.
<suppressed ~111 debug messages>

yosys> opt_clean

5.96. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \sensor_ctrl..

yosys> pmuxtree

5.97. Executing PMUXTREE pass.

yosys> muxpack

5.98. Executing MUXPACK pass ($mux cell cascades to $pmux).
Converted 0 (p)mux cells into 0 pmux cells.
<suppressed ~115 debug messages>

yosys> memory_map

5.99. Executing MEMORY_MAP pass (converting memories to logic and flip-flops).

yosys> stat

5.100. Printing statistics.

=== sensor_ctrl ===

   Number of wires:               1721
   Number of wire bits:           4106
   Number of public wires:        1472
   Number of public wire bits:    3543
   Number of memories:               0
   Number of memory bits:            0
   Number of processes:              0
   Number of cells:                462
     $adff                          40
     $adffe                         40
     $and                           47
     $eq                             9
     $logic_not                      2
     $mux                          132
     $ne                            14
     $not                           76
     $or                            35
     $reduce_and                    10
     $reduce_bool                    1
     $reduce_or                     15
     $reduce_xor                    28
     $shl                            1
     $xor                           12


yosys> techmap -map +/techmap.v -map +/rapidsilicon/genesis/arith_map.v

5.101. Executing TECHMAP pass (map to technology primitives).

5.101.1. Executing Verilog-2005 frontend: /nfs_scratch/scratch/Vorak/aram/Workspace/Raptor/yosys_verific_rs/yosys/install/bin/../share/yosys/techmap.v
Parsing Verilog input from `/nfs_scratch/scratch/Vorak/aram/Workspace/Raptor/yosys_verific_rs/yosys/install/bin/../share/yosys/techmap.v' to AST representation.
Generating RTLIL representation for module `\_90_simplemap_bool_ops'.
Generating RTLIL representation for module `\_90_simplemap_reduce_ops'.
Generating RTLIL representation for module `\_90_simplemap_logic_ops'.
Generating RTLIL representation for module `\_90_simplemap_compare_ops'.
Generating RTLIL representation for module `\_90_simplemap_various'.
Generating RTLIL representation for module `\_90_simplemap_registers'.
Generating RTLIL representation for module `\_90_shift_ops_shr_shl_sshl_sshr'.
Generating RTLIL representation for module `\_90_shift_shiftx'.
Generating RTLIL representation for module `\_90_fa'.
Generating RTLIL representation for module `\_90_lcu'.
Generating RTLIL representation for module `\_90_alu'.
Generating RTLIL representation for module `\_90_macc'.
Generating RTLIL representation for module `\_90_alumacc'.
Generating RTLIL representation for module `\$__div_mod_u'.
Generating RTLIL representation for module `\$__div_mod_trunc'.
Generating RTLIL representation for module `\_90_div'.
Generating RTLIL representation for module `\_90_mod'.
Generating RTLIL representation for module `\$__div_mod_floor'.
Generating RTLIL representation for module `\_90_divfloor'.
Generating RTLIL representation for module `\_90_modfloor'.
Generating RTLIL representation for module `\_90_pow'.
Generating RTLIL representation for module `\_90_pmux'.
Generating RTLIL representation for module `\_90_demux'.
Generating RTLIL representation for module `\_90_lut'.
Successfully finished Verilog frontend.

5.101.2. Executing Verilog-2005 frontend: /nfs_scratch/scratch/Vorak/aram/Workspace/Raptor/yosys_verific_rs/yosys/install/bin/../share/yosys/rapidsilicon/genesis/arith_map.v
Parsing Verilog input from `/nfs_scratch/scratch/Vorak/aram/Workspace/Raptor/yosys_verific_rs/yosys/install/bin/../share/yosys/rapidsilicon/genesis/arith_map.v' to AST representation.
Generating RTLIL representation for module `\_80_rs_alu'.
Successfully finished Verilog frontend.

5.101.3. Continuing TECHMAP pass.
Using extmapper simplemap for cells of type $ne.
Using extmapper simplemap for cells of type $not.
Using extmapper simplemap for cells of type $and.
Using extmapper simplemap for cells of type $reduce_and.
Using extmapper simplemap for cells of type $reduce_or.
Using extmapper simplemap for cells of type $or.
Using extmapper simplemap for cells of type $adff.
Using extmapper simplemap for cells of type $mux.
Using extmapper simplemap for cells of type $reduce_bool.
Using extmapper simplemap for cells of type $reduce_xor.
Using extmapper simplemap for cells of type $adffe.
Using extmapper simplemap for cells of type $eq.
Using extmapper simplemap for cells of type $logic_not.
Using template $paramod$constmap:66d421c313e4e958be776b99540ac2de3b59fdbc$paramod$77562a466236eb4a6d905351a0995599b75075cb\_90_shift_ops_shr_shl_sshl_sshr for cells of type $shl.
Using extmapper simplemap for cells of type $xor.
No more expansions possible.
<suppressed ~716 debug messages>

yosys> stat

5.102. Printing statistics.

=== sensor_ctrl ===

   Number of wires:               1981
   Number of wire bits:           6951
   Number of public wires:        1472
   Number of public wire bits:    3543
   Number of memories:               0
   Number of memory bits:            0
   Number of processes:              0
   Number of cells:               1563
     $_AND_                        112
     $_DFFE_PN0P_                   87
     $_DFF_PN0_                     25
     $_DFF_PN1_                     42
     $_MUX_                        392
     $_NOT_                        104
     $_OR_                         147
     $_XOR_                        654


yosys> opt_expr

5.103. Executing OPT_EXPR pass (perform const folding).
Optimizing module sensor_ctrl.
<suppressed ~450 debug messages>

yosys> opt_merge -nomux

5.104. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\sensor_ctrl'.
<suppressed ~669 debug messages>
Removed a total of 223 cells.

yosys> opt_muxtree

5.105. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \sensor_ctrl..
  Creating internal representation of mux trees.
  No muxes found in this module.
Removed 0 multiplexer ports.

yosys> opt_reduce

5.106. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \sensor_ctrl.
Performed a total of 0 changes.

yosys> opt_merge

5.107. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\sensor_ctrl'.
Removed a total of 0 cells.

yosys> opt_share

5.108. Executing OPT_SHARE pass.

yosys> opt_dff -nosdff -nodffe

5.109. Executing OPT_DFF pass (perform DFF optimizations).
Handling never-active EN on $auto$ff.cc:262:slice$4386 ($_DFFE_PN0P_) from module sensor_ctrl (removing D path).
Setting constant 0-bit at position 0 on $auto$ff.cc:262:slice$4386 ($_DLATCH_N_) from module sensor_ctrl.

yosys> opt_clean

5.110. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \sensor_ctrl..
Removed 5 unused cells and 181 unused wires.
<suppressed ~6 debug messages>

yosys> opt_expr

5.111. Executing OPT_EXPR pass (perform const folding).
Optimizing module sensor_ctrl.
<suppressed ~16 debug messages>

yosys> opt_muxtree

5.112. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \sensor_ctrl..
  Creating internal representation of mux trees.
  No muxes found in this module.
Removed 0 multiplexer ports.

yosys> opt_reduce

5.113. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \sensor_ctrl.
Performed a total of 0 changes.

yosys> opt_merge

5.114. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\sensor_ctrl'.
<suppressed ~3 debug messages>
Removed a total of 1 cells.

yosys> opt_share

5.115. Executing OPT_SHARE pass.

yosys> opt_dff -nosdff -nodffe

5.116. Executing OPT_DFF pass (perform DFF optimizations).

yosys> opt_clean

5.117. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \sensor_ctrl..
Removed 0 unused cells and 9 unused wires.
<suppressed ~1 debug messages>

yosys> opt_expr

5.118. Executing OPT_EXPR pass (perform const folding).
Optimizing module sensor_ctrl.

yosys> opt_muxtree

5.119. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \sensor_ctrl..
  Creating internal representation of mux trees.
  No muxes found in this module.
Removed 0 multiplexer ports.

yosys> opt_reduce

5.120. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \sensor_ctrl.
Performed a total of 0 changes.

yosys> opt_merge

5.121. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\sensor_ctrl'.
Removed a total of 0 cells.

yosys> opt_share

5.122. Executing OPT_SHARE pass.

yosys> opt_dff -nosdff -nodffe

5.123. Executing OPT_DFF pass (perform DFF optimizations).

yosys> opt_clean

5.124. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \sensor_ctrl..

yosys> opt_expr

5.125. Executing OPT_EXPR pass (perform const folding).
Optimizing module sensor_ctrl.
MAX OPT ITERATION = 3

yosys> opt_expr -full

5.126. Executing OPT_EXPR pass (perform const folding).
Optimizing module sensor_ctrl.
<suppressed ~172 debug messages>

yosys> techmap -map +/techmap.v

5.127. Executing TECHMAP pass (map to technology primitives).

5.127.1. Executing Verilog-2005 frontend: /nfs_scratch/scratch/Vorak/aram/Workspace/Raptor/yosys_verific_rs/yosys/install/bin/../share/yosys/techmap.v
Parsing Verilog input from `/nfs_scratch/scratch/Vorak/aram/Workspace/Raptor/yosys_verific_rs/yosys/install/bin/../share/yosys/techmap.v' to AST representation.
Generating RTLIL representation for module `\_90_simplemap_bool_ops'.
Generating RTLIL representation for module `\_90_simplemap_reduce_ops'.
Generating RTLIL representation for module `\_90_simplemap_logic_ops'.
Generating RTLIL representation for module `\_90_simplemap_compare_ops'.
Generating RTLIL representation for module `\_90_simplemap_various'.
Generating RTLIL representation for module `\_90_simplemap_registers'.
Generating RTLIL representation for module `\_90_shift_ops_shr_shl_sshl_sshr'.
Generating RTLIL representation for module `\_90_shift_shiftx'.
Generating RTLIL representation for module `\_90_fa'.
Generating RTLIL representation for module `\_90_lcu'.
Generating RTLIL representation for module `\_90_alu'.
Generating RTLIL representation for module `\_90_macc'.
Generating RTLIL representation for module `\_90_alumacc'.
Generating RTLIL representation for module `\$__div_mod_u'.
Generating RTLIL representation for module `\$__div_mod_trunc'.
Generating RTLIL representation for module `\_90_div'.
Generating RTLIL representation for module `\_90_mod'.
Generating RTLIL representation for module `\$__div_mod_floor'.
Generating RTLIL representation for module `\_90_divfloor'.
Generating RTLIL representation for module `\_90_modfloor'.
Generating RTLIL representation for module `\_90_pow'.
Generating RTLIL representation for module `\_90_pmux'.
Generating RTLIL representation for module `\_90_demux'.
Generating RTLIL representation for module `\_90_lut'.
Successfully finished Verilog frontend.

5.127.2. Continuing TECHMAP pass.
No more expansions possible.
<suppressed ~71 debug messages>

yosys> opt_expr

5.128. Executing OPT_EXPR pass (perform const folding).
Optimizing module sensor_ctrl.

yosys> opt_merge -nomux

5.129. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\sensor_ctrl'.
<suppressed ~12 debug messages>
Removed a total of 4 cells.

yosys> opt_muxtree

5.130. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \sensor_ctrl..
  Creating internal representation of mux trees.
  No muxes found in this module.
Removed 0 multiplexer ports.

yosys> opt_reduce

5.131. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \sensor_ctrl.
Performed a total of 0 changes.

yosys> opt_merge

5.132. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\sensor_ctrl'.
Removed a total of 0 cells.

yosys> opt_dff -nosdff -nodffe -sat

5.133. Executing OPT_DFF pass (perform DFF optimizations).

yosys> opt_clean

5.134. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \sensor_ctrl..
Removed 0 unused cells and 14 unused wires.
<suppressed ~1 debug messages>

yosys> opt_expr

5.135. Executing OPT_EXPR pass (perform const folding).
Optimizing module sensor_ctrl.
MAX OPT ITERATION = 1

yosys> abc -dff

5.136. Executing ABC pass (technology mapping using ABC).

5.136.1. Summary of detected clock domains:
  20 cells in clk=\clk_i, en=$auto$opt_dff.cc:219:make_patterns_logic$3506, arst=!\rst_ni, srst={ }
  44 cells in clk=\clk_i, en=$auto$opt_dff.cc:219:make_patterns_logic$3513, arst=!\rst_ni, srst={ }
  27 cells in clk=\clk_i, en=$auto$opt_dff.cc:219:make_patterns_logic$3499, arst=!\rst_ni, srst={ }
  20 cells in clk=\clk_i, en=$auto$opt_dff.cc:219:make_patterns_logic$3484, arst=!\rst_ni, srst={ }
  44 cells in clk=\clk_i, en=$auto$opt_dff.cc:219:make_patterns_logic$3491, arst=!\rst_ni, srst={ }
  27 cells in clk=\clk_i, en=$auto$opt_dff.cc:219:make_patterns_logic$3477, arst=!\rst_ni, srst={ }
  7 cells in clk=\clk_i, en=!\u_alert_n_sync.q [9], arst=!\rst_ni, srst={ }
  4 cells in clk=\clk_i, en=$auto$opt_dff.cc:194:make_patterns_logic$3441, arst=!\rst_ni, srst={ }
  221 cells in clk=\clk_i, en=\u_reg.u_reg_if.a_ack, arst=!\rst_ni, srst={ }
  6 cells in clk=\clk_i, en=!\u_alert_n_sync.q [8], arst=!\rst_ni, srst={ }
  5 cells in clk=\clk_i, en=!\u_alert_n_sync.q [7], arst=!\rst_ni, srst={ }
  6 cells in clk=\clk_i, en=!\u_alert_n_sync.q [6], arst=!\rst_ni, srst={ }
  5 cells in clk=\clk_i, en=!\u_alert_n_sync.q [5], arst=!\rst_ni, srst={ }
  6 cells in clk=\clk_i, en=!\u_alert_n_sync.q [4], arst=!\rst_ni, srst={ }
  5 cells in clk=\clk_i, en=!\u_alert_n_sync.q [3], arst=!\rst_ni, srst={ }
  6 cells in clk=\clk_i, en=!\u_alert_n_sync.q [2], arst=!\rst_ni, srst={ }
  5 cells in clk=\clk_i, en=!\u_alert_n_sync.q [12], arst=!\rst_ni, srst={ }
  6 cells in clk=\clk_i, en=!\u_alert_n_sync.q [11], arst=!\rst_ni, srst={ }
  5 cells in clk=\clk_i, en=!\u_alert_n_sync.q [10], arst=!\rst_ni, srst={ }
  6 cells in clk=\clk_i, en=!\u_alert_n_sync.q [1], arst=!\rst_ni, srst={ }
  26 cells in clk=\clk_i, en=!\u_alert_n_sync.q [0], arst=!\rst_ni, srst={ }
  13 cells in clk=\clk_i, en=\u_reg.u_fatal_alert_val_13.wr_en, arst=!\rst_ni, srst={ }
  256 cells in clk=\clk_i, en=\u_reg.intg_err, arst=!\rst_ni, srst={ }
  133 cells in clk=\clk_i, en={ }, arst=!\rst_ni, srst={ }
  6 cells in clk=\clk_aon_i, en={ }, arst=!\rst_aon_ni, srst={ }

5.136.2. Extracting gate netlist of module `\sensor_ctrl' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_i, enabled by $auto$opt_dff.cc:219:make_patterns_logic$3506, asynchronously reset by !\rst_ni
Extracted 20 gates and 26 wires to a netlist network with 5 inputs and 3 outputs.

5.136.2.1. Executing ABC.

5.136.3. Extracting gate netlist of module `\sensor_ctrl' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_i, enabled by $auto$opt_dff.cc:219:make_patterns_logic$3513, asynchronously reset by !\rst_ni
Extracted 44 gates and 51 wires to a netlist network with 5 inputs and 5 outputs.

5.136.3.1. Executing ABC.

5.136.4. Extracting gate netlist of module `\sensor_ctrl' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_i, enabled by $auto$opt_dff.cc:219:make_patterns_logic$3499, asynchronously reset by !\rst_ni
Extracted 27 gates and 35 wires to a netlist network with 7 inputs and 4 outputs.

5.136.4.1. Executing ABC.

5.136.5. Extracting gate netlist of module `\sensor_ctrl' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_i, enabled by $auto$opt_dff.cc:219:make_patterns_logic$3484, asynchronously reset by !\rst_ni
Extracted 20 gates and 26 wires to a netlist network with 5 inputs and 3 outputs.

5.136.5.1. Executing ABC.

5.136.6. Extracting gate netlist of module `\sensor_ctrl' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_i, enabled by $auto$opt_dff.cc:219:make_patterns_logic$3491, asynchronously reset by !\rst_ni
Extracted 44 gates and 51 wires to a netlist network with 5 inputs and 5 outputs.

5.136.6.1. Executing ABC.

5.136.7. Extracting gate netlist of module `\sensor_ctrl' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_i, enabled by $auto$opt_dff.cc:219:make_patterns_logic$3477, asynchronously reset by !\rst_ni
Extracted 27 gates and 35 wires to a netlist network with 7 inputs and 4 outputs.

5.136.7.1. Executing ABC.

5.136.8. Extracting gate netlist of module `\sensor_ctrl' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_i, enabled by !\u_alert_n_sync.q [9], asynchronously reset by !\rst_ni
Extracted 7 gates and 12 wires to a netlist network with 4 inputs and 3 outputs.

5.136.8.1. Executing ABC.

5.136.9. Extracting gate netlist of module `\sensor_ctrl' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_i, enabled by $auto$opt_dff.cc:194:make_patterns_logic$3441, asynchronously reset by !\rst_ni
Extracted 4 gates and 6 wires to a netlist network with 2 inputs and 3 outputs.

5.136.9.1. Executing ABC.

5.136.10. Extracting gate netlist of module `\sensor_ctrl' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_i, enabled by \u_reg.u_reg_if.a_ack, asynchronously reset by !\rst_ni
Extracted 221 gates and 277 wires to a netlist network with 54 inputs and 39 outputs.

5.136.10.1. Executing ABC.

5.136.11. Extracting gate netlist of module `\sensor_ctrl' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_i, enabled by !\u_alert_n_sync.q [8], asynchronously reset by !\rst_ni
Extracted 6 gates and 10 wires to a netlist network with 3 inputs and 3 outputs.

5.136.11.1. Executing ABC.

5.136.12. Extracting gate netlist of module `\sensor_ctrl' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_i, enabled by !\u_alert_n_sync.q [7], asynchronously reset by !\rst_ni
Extracted 5 gates and 8 wires to a netlist network with 2 inputs and 3 outputs.

5.136.12.1. Executing ABC.

5.136.13. Extracting gate netlist of module `\sensor_ctrl' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_i, enabled by !\u_alert_n_sync.q [6], asynchronously reset by !\rst_ni
Extracted 6 gates and 10 wires to a netlist network with 3 inputs and 3 outputs.

5.136.13.1. Executing ABC.

5.136.14. Extracting gate netlist of module `\sensor_ctrl' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_i, enabled by !\u_alert_n_sync.q [5], asynchronously reset by !\rst_ni
Extracted 5 gates and 8 wires to a netlist network with 2 inputs and 3 outputs.

5.136.14.1. Executing ABC.

5.136.15. Extracting gate netlist of module `\sensor_ctrl' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_i, enabled by !\u_alert_n_sync.q [4], asynchronously reset by !\rst_ni
Extracted 6 gates and 10 wires to a netlist network with 3 inputs and 3 outputs.

5.136.15.1. Executing ABC.

5.136.16. Extracting gate netlist of module `\sensor_ctrl' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_i, enabled by !\u_alert_n_sync.q [3], asynchronously reset by !\rst_ni
Extracted 5 gates and 8 wires to a netlist network with 2 inputs and 3 outputs.

5.136.16.1. Executing ABC.

5.136.17. Extracting gate netlist of module `\sensor_ctrl' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_i, enabled by !\u_alert_n_sync.q [2], asynchronously reset by !\rst_ni
Extracted 6 gates and 10 wires to a netlist network with 3 inputs and 3 outputs.

5.136.17.1. Executing ABC.

5.136.18. Extracting gate netlist of module `\sensor_ctrl' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_i, enabled by !\u_alert_n_sync.q [12], asynchronously reset by !\rst_ni
Extracted 5 gates and 8 wires to a netlist network with 2 inputs and 3 outputs.

5.136.18.1. Executing ABC.

5.136.19. Extracting gate netlist of module `\sensor_ctrl' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_i, enabled by !\u_alert_n_sync.q [11], asynchronously reset by !\rst_ni
Extracted 6 gates and 10 wires to a netlist network with 3 inputs and 3 outputs.

5.136.19.1. Executing ABC.

5.136.20. Extracting gate netlist of module `\sensor_ctrl' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_i, enabled by !\u_alert_n_sync.q [10], asynchronously reset by !\rst_ni
Extracted 5 gates and 8 wires to a netlist network with 2 inputs and 3 outputs.

5.136.20.1. Executing ABC.

5.136.21. Extracting gate netlist of module `\sensor_ctrl' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_i, enabled by !\u_alert_n_sync.q [1], asynchronously reset by !\rst_ni
Extracted 6 gates and 10 wires to a netlist network with 3 inputs and 3 outputs.

5.136.21.1. Executing ABC.

5.136.22. Extracting gate netlist of module `\sensor_ctrl' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_i, enabled by !\u_alert_n_sync.q [0], asynchronously reset by !\rst_ni
Extracted 26 gates and 33 wires to a netlist network with 6 inputs and 13 outputs.

5.136.22.1. Executing ABC.

5.136.23. Extracting gate netlist of module `\sensor_ctrl' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_i, enabled by \u_reg.u_fatal_alert_val_13.wr_en, asynchronously reset by !\rst_ni
Extracted 13 gates and 23 wires to a netlist network with 8 inputs and 9 outputs.

5.136.23.1. Executing ABC.

5.136.24. Extracting gate netlist of module `\sensor_ctrl' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_i, enabled by \u_reg.intg_err, asynchronously reset by !\rst_ni
Extracted 256 gates and 347 wires to a netlist network with 90 inputs and 2 outputs.

5.136.24.1. Executing ABC.

5.136.25. Extracting gate netlist of module `\sensor_ctrl' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_i, asynchronously reset by !\rst_ni
Extracted 133 gates and 178 wires to a netlist network with 44 inputs and 62 outputs.

5.136.25.1. Executing ABC.

5.136.26. Extracting gate netlist of module `\sensor_ctrl' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_aon_i, asynchronously reset by !\rst_aon_ni
Extracted 6 gates and 7 wires to a netlist network with 1 inputs and 1 outputs.

5.136.26.1. Executing ABC.

yosys> abc -dff

5.137. Executing ABC pass (technology mapping using ABC).

5.137.1. Summary of detected clock domains:
  6 cells in clk=\clk_i, en=!$abc$6363$u_alert_n_sync.q[9], arst=!\rst_ni, srst={ }
  5 cells in clk=\clk_i, en=!$abc$6363$u_alert_n_sync.q[6], arst=!\rst_ni, srst={ }
  5 cells in clk=\clk_i, en=!$abc$6363$u_alert_n_sync.q[3], arst=!\rst_ni, srst={ }
  5 cells in clk=\clk_i, en=!$abc$6363$u_alert_n_sync.q[7], arst=!\rst_ni, srst={ }
  13 cells in clk=\clk_i, en=$abc$5672$auto$opt_dff.cc:219:make_patterns_logic$3506, arst=!\rst_ni, srst={ }
  18 cells in clk=\clk_i, en=$abc$5790$auto$opt_dff.cc:219:make_patterns_logic$3477, arst=!\rst_ni, srst={ }
  225 cells in clk=\clk_i, en=$abc$6136$u_reg.intg_err, arst=!\rst_ni, srst={ }
  5 cells in clk=\clk_i, en=!$abc$6363$u_alert_n_sync.q[10], arst=!\rst_ni, srst={ }
  4 cells in clk=\clk_i, en=!$abc$6363$u_alert_n_sync.q[11], arst=!\rst_ni, srst={ }
  5 cells in clk=\clk_i, en=!$abc$6363$u_alert_n_sync.q[12], arst=!\rst_ni, srst={ }
  4 cells in clk=\clk_i, en=!$abc$6363$u_alert_n_sync.q[2], arst=!\rst_ni, srst={ }
  2 cells in clk=\clk_i, en=$abc$6123$u_reg.u_fatal_alert_val_13.wr_en, arst=!\rst_ni, srst={ }
  4 cells in clk=\clk_i, en=!$abc$6363$u_alert_n_sync.q[5], arst=!\rst_ni, srst={ }
  4 cells in clk=\clk_i, en=!$abc$6363$u_alert_n_sync.q[4], arst=!\rst_ni, srst={ }
  16 cells in clk=\clk_i, en=$abc$5719$auto$opt_dff.cc:219:make_patterns_logic$3499, arst=!\rst_ni, srst={ }
  13 cells in clk=\clk_i, en=$abc$5742$auto$opt_dff.cc:219:make_patterns_logic$3484, arst=!\rst_ni, srst={ }
  5 cells in clk=\clk_i, en=!$abc$6363$u_alert_n_sync.q[0], arst=!\rst_ni, srst={ }
  26 cells in clk=\clk_i, en=$abc$5686$auto$opt_dff.cc:219:make_patterns_logic$3513, arst=!\rst_ni, srst={ }
  28 cells in clk=\clk_i, en=$abc$5757$auto$opt_dff.cc:219:make_patterns_logic$3491, arst=!\rst_ni, srst={ }
  4 cells in clk=\clk_i, en=!$abc$6363$u_alert_n_sync.q[1], arst=!\rst_ni, srst={ }
  6 cells in clk=\clk_i, en=!$abc$6363$u_alert_n_sync.q[8], arst=!\rst_ni, srst={ }
  179 cells in clk=\clk_i, en=$abc$5825$u_reg.u_reg_if.a_ack, arst=!\rst_ni, srst={ }
  4 cells in clk=\clk_i, en=$abc$5818$auto$opt_dff.cc:194:make_patterns_logic$3441, arst=!\rst_ni, srst={ }
  182 cells in clk=\clk_i, en={ }, arst=!\rst_ni, srst={ }
  6 cells in clk=\clk_aon_i, en={ }, arst=!\rst_aon_ni, srst={ }

5.137.2. Extracting gate netlist of module `\sensor_ctrl' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_i, enabled by !$abc$6363$u_alert_n_sync.q[9], asynchronously reset by !\rst_ni
Extracted 6 gates and 11 wires to a netlist network with 4 inputs and 4 outputs.

5.137.2.1. Executing ABC.

5.137.3. Extracting gate netlist of module `\sensor_ctrl' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_i, enabled by !$abc$6363$u_alert_n_sync.q[6], asynchronously reset by !\rst_ni
Extracted 5 gates and 9 wires to a netlist network with 3 inputs and 4 outputs.

5.137.3.1. Executing ABC.

5.137.4. Extracting gate netlist of module `\sensor_ctrl' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_i, enabled by !$abc$6363$u_alert_n_sync.q[3], asynchronously reset by !\rst_ni
Extracted 5 gates and 9 wires to a netlist network with 3 inputs and 4 outputs.

5.137.4.1. Executing ABC.

5.137.5. Extracting gate netlist of module `\sensor_ctrl' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_i, enabled by !$abc$6363$u_alert_n_sync.q[7], asynchronously reset by !\rst_ni
Extracted 5 gates and 9 wires to a netlist network with 3 inputs and 4 outputs.

5.137.5.1. Executing ABC.

5.137.6. Extracting gate netlist of module `\sensor_ctrl' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_i, enabled by $abc$5672$auto$opt_dff.cc:219:make_patterns_logic$3506, asynchronously reset by !\rst_ni
Extracted 13 gates and 19 wires to a netlist network with 6 inputs and 3 outputs.

5.137.6.1. Executing ABC.

5.137.7. Extracting gate netlist of module `\sensor_ctrl' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_i, enabled by $abc$5790$auto$opt_dff.cc:219:make_patterns_logic$3477, asynchronously reset by !\rst_ni
Extracted 18 gates and 23 wires to a netlist network with 5 inputs and 6 outputs.

5.137.7.1. Executing ABC.

5.137.8. Extracting gate netlist of module `\sensor_ctrl' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_i, enabled by $abc$6136$u_reg.intg_err, asynchronously reset by !\rst_ni
Extracted 225 gates and 316 wires to a netlist network with 90 inputs and 2 outputs.

5.137.8.1. Executing ABC.

5.137.9. Extracting gate netlist of module `\sensor_ctrl' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_i, enabled by !$abc$6363$u_alert_n_sync.q[10], asynchronously reset by !\rst_ni
Extracted 5 gates and 9 wires to a netlist network with 3 inputs and 4 outputs.

5.137.9.1. Executing ABC.

5.137.10. Extracting gate netlist of module `\sensor_ctrl' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_i, enabled by !$abc$6363$u_alert_n_sync.q[11], asynchronously reset by !\rst_ni
Extracted 4 gates and 7 wires to a netlist network with 2 inputs and 4 outputs.

5.137.10.1. Executing ABC.

5.137.11. Extracting gate netlist of module `\sensor_ctrl' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_i, enabled by !$abc$6363$u_alert_n_sync.q[12], asynchronously reset by !\rst_ni
Extracted 5 gates and 9 wires to a netlist network with 3 inputs and 4 outputs.

5.137.11.1. Executing ABC.

5.137.12. Extracting gate netlist of module `\sensor_ctrl' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_i, enabled by !$abc$6363$u_alert_n_sync.q[2], asynchronously reset by !\rst_ni
Extracted 4 gates and 7 wires to a netlist network with 2 inputs and 4 outputs.

5.137.12.1. Executing ABC.

5.137.13. Extracting gate netlist of module `\sensor_ctrl' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_i, enabled by $abc$6655$abc$6123$u_reg.u_fatal_alert_val_13.wr_en, asynchronously reset by !\rst_ni
Extracted 2 gates and 4 wires to a netlist network with 1 inputs and 1 outputs.

5.137.13.1. Executing ABC.

5.137.14. Extracting gate netlist of module `\sensor_ctrl' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_i, enabled by !$abc$6363$u_alert_n_sync.q[5], asynchronously reset by !\rst_ni
Extracted 4 gates and 7 wires to a netlist network with 2 inputs and 4 outputs.

5.137.14.1. Executing ABC.

5.137.15. Extracting gate netlist of module `\sensor_ctrl' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_i, enabled by !$abc$6363$u_alert_n_sync.q[4], asynchronously reset by !\rst_ni
Extracted 4 gates and 7 wires to a netlist network with 2 inputs and 4 outputs.

5.137.15.1. Executing ABC.

5.137.16. Extracting gate netlist of module `\sensor_ctrl' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_i, enabled by $abc$5719$auto$opt_dff.cc:219:make_patterns_logic$3499, asynchronously reset by !\rst_ni
Extracted 16 gates and 20 wires to a netlist network with 4 inputs and 7 outputs.

5.137.16.1. Executing ABC.

5.137.17. Extracting gate netlist of module `\sensor_ctrl' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_i, enabled by $abc$5742$auto$opt_dff.cc:219:make_patterns_logic$3484, asynchronously reset by !\rst_ni
Extracted 13 gates and 19 wires to a netlist network with 6 inputs and 4 outputs.

5.137.17.1. Executing ABC.

5.137.18. Extracting gate netlist of module `\sensor_ctrl' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_i, enabled by !$abc$6363$u_alert_n_sync.q[0], asynchronously reset by !\rst_ni
Extracted 5 gates and 9 wires to a netlist network with 3 inputs and 4 outputs.

5.137.18.1. Executing ABC.

5.137.19. Extracting gate netlist of module `\sensor_ctrl' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_i, enabled by $abc$5686$auto$opt_dff.cc:219:make_patterns_logic$3513, asynchronously reset by !\rst_ni
Extracted 26 gates and 33 wires to a netlist network with 7 inputs and 5 outputs.

5.137.19.1. Executing ABC.

5.137.20. Extracting gate netlist of module `\sensor_ctrl' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_i, enabled by $abc$5757$auto$opt_dff.cc:219:make_patterns_logic$3491, asynchronously reset by !\rst_ni
Extracted 28 gates and 36 wires to a netlist network with 7 inputs and 5 outputs.

5.137.20.1. Executing ABC.

5.137.21. Extracting gate netlist of module `\sensor_ctrl' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_i, enabled by !$abc$6363$u_alert_n_sync.q[1], asynchronously reset by !\rst_ni
Extracted 4 gates and 7 wires to a netlist network with 2 inputs and 4 outputs.

5.137.21.1. Executing ABC.

5.137.22. Extracting gate netlist of module `\sensor_ctrl' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_i, enabled by !$abc$6363$u_alert_n_sync.q[8], asynchronously reset by !\rst_ni
Extracted 6 gates and 11 wires to a netlist network with 4 inputs and 6 outputs.

5.137.22.1. Executing ABC.

5.137.23. Extracting gate netlist of module `\sensor_ctrl' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_i, enabled by $abc$5825$u_reg.u_reg_if.a_ack, asynchronously reset by !\rst_ni
Extracted 179 gates and 235 wires to a netlist network with 56 inputs and 40 outputs.

5.137.23.1. Executing ABC.

5.137.24. Extracting gate netlist of module `\sensor_ctrl' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_i, enabled by $abc$5818$auto$opt_dff.cc:194:make_patterns_logic$3441, asynchronously reset by !\rst_ni
Extracted 4 gates and 6 wires to a netlist network with 2 inputs and 3 outputs.

5.137.24.1. Executing ABC.

5.137.25. Extracting gate netlist of module `\sensor_ctrl' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_i, asynchronously reset by !\rst_ni
Extracted 182 gates and 234 wires to a netlist network with 52 inputs and 56 outputs.

5.137.25.1. Executing ABC.

5.137.26. Extracting gate netlist of module `\sensor_ctrl' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_aon_i, asynchronously reset by !\rst_aon_ni
Extracted 6 gates and 7 wires to a netlist network with 1 inputs and 1 outputs.

5.137.26.1. Executing ABC.

yosys> abc -dff

5.138. Executing ABC pass (technology mapping using ABC).

5.138.1. Summary of detected clock domains:
  6 cells in clk=\clk_i, en=!$abc$6591$abc$6363$u_alert_n_sync.q[9], arst=!\rst_ni, srst={ }
  5 cells in clk=\clk_i, en=!$abc$6599$abc$6363$u_alert_n_sync.q[6], arst=!\rst_ni, srst={ }
  4 cells in clk=\clk_i, en=$abc$7257$abc$5818$auto$opt_dff.cc:194:make_patterns_logic$3441, arst=!\rst_ni, srst={ }
  5 cells in clk=\clk_i, en=!$abc$6606$abc$6363$u_alert_n_sync.q[3], arst=!\rst_ni, srst={ }
  5 cells in clk=\clk_i, en=!$abc$6613$abc$6363$u_alert_n_sync.q[7], arst=!\rst_ni, srst={ }
  12 cells in clk=\clk_i, en=$abc$6620$abc$5672$auto$opt_dff.cc:219:make_patterns_logic$3506, arst=!\rst_ni, srst={ }
  224 cells in clk=\clk_i, en=$abc$6655$abc$6136$u_reg.intg_err, arst=!\rst_ni, srst={ }
  5 cells in clk=\clk_i, en=!$abc$6881$abc$6363$u_alert_n_sync.q[10], arst=!\rst_ni, srst={ }
  4 cells in clk=\clk_i, en=!$abc$6888$abc$6363$u_alert_n_sync.q[11], arst=!\rst_ni, srst={ }
  5 cells in clk=\clk_i, en=!$abc$6895$abc$6363$u_alert_n_sync.q[12], arst=!\rst_ni, srst={ }
  4 cells in clk=\clk_i, en=!$abc$6902$abc$6363$u_alert_n_sync.q[2], arst=!\rst_ni, srst={ }
  2 cells in clk=\clk_i, en=$abc$6655$abc$6123$u_reg.u_fatal_alert_val_13.wr_en, arst=!\rst_ni, srst={ }
  4 cells in clk=\clk_i, en=!$abc$6913$abc$6363$u_alert_n_sync.q[5], arst=!\rst_ni, srst={ }
  4 cells in clk=\clk_i, en=!$abc$6920$abc$6363$u_alert_n_sync.q[4], arst=!\rst_ni, srst={ }
  14 cells in clk=\clk_i, en=$abc$6927$abc$5719$auto$opt_dff.cc:219:make_patterns_logic$3499, arst=!\rst_ni, srst={ }
  12 cells in clk=\clk_i, en=$abc$6945$abc$5742$auto$opt_dff.cc:219:make_patterns_logic$3484, arst=!\rst_ni, srst={ }
  5 cells in clk=\clk_i, en=!$abc$6960$abc$6363$u_alert_n_sync.q[0], arst=!\rst_ni, srst={ }
  26 cells in clk=\clk_i, en=$abc$6967$abc$5686$auto$opt_dff.cc:219:make_patterns_logic$3513, arst=!\rst_ni, srst={ }
  24 cells in clk=\clk_i, en=$abc$6993$abc$5757$auto$opt_dff.cc:219:make_patterns_logic$3491, arst=!\rst_ni, srst={ }
  4 cells in clk=\clk_i, en=!$abc$7019$abc$6363$u_alert_n_sync.q[1], arst=!\rst_ni, srst={ }
  6 cells in clk=\clk_i, en=!$abc$7026$abc$6363$u_alert_n_sync.q[8], arst=!\rst_ni, srst={ }
  18 cells in clk=\clk_i, en=$abc$6635$abc$5790$auto$opt_dff.cc:219:make_patterns_logic$3477, arst=!\rst_ni, srst={ }
  191 cells in clk=\clk_i, en=$abc$7035$abc$5825$u_reg.u_reg_if.a_ack, arst=!\rst_ni, srst={ }
  172 cells in clk=\clk_i, en={ }, arst=!\rst_ni, srst={ }
  6 cells in clk=\clk_aon_i, en={ }, arst=!\rst_aon_ni, srst={ }

5.138.2. Extracting gate netlist of module `\sensor_ctrl' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_i, enabled by !$abc$6591$abc$6363$u_alert_n_sync.q[9], asynchronously reset by !\rst_ni
Extracted 6 gates and 11 wires to a netlist network with 4 inputs and 4 outputs.

5.138.2.1. Executing ABC.

5.138.3. Extracting gate netlist of module `\sensor_ctrl' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_i, enabled by !$abc$6599$abc$6363$u_alert_n_sync.q[6], asynchronously reset by !\rst_ni
Extracted 5 gates and 9 wires to a netlist network with 3 inputs and 4 outputs.

5.138.3.1. Executing ABC.

5.138.4. Extracting gate netlist of module `\sensor_ctrl' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_i, enabled by $abc$7257$abc$5818$auto$opt_dff.cc:194:make_patterns_logic$3441, asynchronously reset by !\rst_ni
Extracted 4 gates and 6 wires to a netlist network with 2 inputs and 3 outputs.

5.138.4.1. Executing ABC.

5.138.5. Extracting gate netlist of module `\sensor_ctrl' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_i, enabled by !$abc$6606$abc$6363$u_alert_n_sync.q[3], asynchronously reset by !\rst_ni
Extracted 5 gates and 9 wires to a netlist network with 3 inputs and 4 outputs.

5.138.5.1. Executing ABC.

5.138.6. Extracting gate netlist of module `\sensor_ctrl' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_i, enabled by !$abc$6613$abc$6363$u_alert_n_sync.q[7], asynchronously reset by !\rst_ni
Extracted 5 gates and 9 wires to a netlist network with 3 inputs and 4 outputs.

5.138.6.1. Executing ABC.

5.138.7. Extracting gate netlist of module `\sensor_ctrl' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_i, enabled by $abc$6620$abc$5672$auto$opt_dff.cc:219:make_patterns_logic$3506, asynchronously reset by !\rst_ni
Extracted 12 gates and 16 wires to a netlist network with 4 inputs and 5 outputs.

5.138.7.1. Executing ABC.

5.138.8. Extracting gate netlist of module `\sensor_ctrl' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_i, enabled by $abc$6655$abc$6136$u_reg.intg_err, asynchronously reset by !\rst_ni
Extracted 224 gates and 315 wires to a netlist network with 90 inputs and 2 outputs.

5.138.8.1. Executing ABC.

5.138.9. Extracting gate netlist of module `\sensor_ctrl' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_i, enabled by !$abc$6881$abc$6363$u_alert_n_sync.q[10], asynchronously reset by !\rst_ni
Extracted 5 gates and 9 wires to a netlist network with 3 inputs and 4 outputs.

5.138.9.1. Executing ABC.

5.138.10. Extracting gate netlist of module `\sensor_ctrl' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_i, enabled by !$abc$6888$abc$6363$u_alert_n_sync.q[11], asynchronously reset by !\rst_ni
Extracted 4 gates and 7 wires to a netlist network with 2 inputs and 4 outputs.

5.138.10.1. Executing ABC.

5.138.11. Extracting gate netlist of module `\sensor_ctrl' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_i, enabled by !$abc$6895$abc$6363$u_alert_n_sync.q[12], asynchronously reset by !\rst_ni
Extracted 5 gates and 9 wires to a netlist network with 3 inputs and 4 outputs.

5.138.11.1. Executing ABC.

5.138.12. Extracting gate netlist of module `\sensor_ctrl' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_i, enabled by !$abc$6902$abc$6363$u_alert_n_sync.q[2], asynchronously reset by !\rst_ni
Extracted 4 gates and 7 wires to a netlist network with 2 inputs and 4 outputs.

5.138.12.1. Executing ABC.

5.138.13. Extracting gate netlist of module `\sensor_ctrl' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_i, enabled by $abc$7553$abc$6655$abc$6123$u_reg.u_fatal_alert_val_13.wr_en, asynchronously reset by !\rst_ni
Extracted 2 gates and 4 wires to a netlist network with 1 inputs and 1 outputs.

5.138.13.1. Executing ABC.

5.138.14. Extracting gate netlist of module `\sensor_ctrl' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_i, enabled by !$abc$6913$abc$6363$u_alert_n_sync.q[5], asynchronously reset by !\rst_ni
Extracted 4 gates and 7 wires to a netlist network with 2 inputs and 4 outputs.

5.138.14.1. Executing ABC.

5.138.15. Extracting gate netlist of module `\sensor_ctrl' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_i, enabled by !$abc$6920$abc$6363$u_alert_n_sync.q[4], asynchronously reset by !\rst_ni
Extracted 4 gates and 7 wires to a netlist network with 2 inputs and 4 outputs.

5.138.15.1. Executing ABC.

5.138.16. Extracting gate netlist of module `\sensor_ctrl' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_i, enabled by $abc$6927$abc$5719$auto$opt_dff.cc:219:make_patterns_logic$3499, asynchronously reset by !\rst_ni
Extracted 14 gates and 18 wires to a netlist network with 4 inputs and 7 outputs.

5.138.16.1. Executing ABC.

5.138.17. Extracting gate netlist of module `\sensor_ctrl' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_i, enabled by $abc$6945$abc$5742$auto$opt_dff.cc:219:make_patterns_logic$3484, asynchronously reset by !\rst_ni
Extracted 12 gates and 16 wires to a netlist network with 4 inputs and 4 outputs.

5.138.17.1. Executing ABC.

5.138.18. Extracting gate netlist of module `\sensor_ctrl' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_i, enabled by !$abc$6960$abc$6363$u_alert_n_sync.q[0], asynchronously reset by !\rst_ni
Extracted 5 gates and 9 wires to a netlist network with 3 inputs and 4 outputs.

5.138.18.1. Executing ABC.

5.138.19. Extracting gate netlist of module `\sensor_ctrl' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_i, enabled by $abc$6967$abc$5686$auto$opt_dff.cc:219:make_patterns_logic$3513, asynchronously reset by !\rst_ni
Extracted 26 gates and 35 wires to a netlist network with 9 inputs and 5 outputs.

5.138.19.1. Executing ABC.

5.138.20. Extracting gate netlist of module `\sensor_ctrl' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_i, enabled by $abc$6993$abc$5757$auto$opt_dff.cc:219:make_patterns_logic$3491, asynchronously reset by !\rst_ni
Extracted 24 gates and 31 wires to a netlist network with 7 inputs and 5 outputs.

5.138.20.1. Executing ABC.

5.138.21. Extracting gate netlist of module `\sensor_ctrl' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_i, enabled by !$abc$7019$abc$6363$u_alert_n_sync.q[1], asynchronously reset by !\rst_ni
Extracted 4 gates and 7 wires to a netlist network with 2 inputs and 4 outputs.

5.138.21.1. Executing ABC.

5.138.22. Extracting gate netlist of module `\sensor_ctrl' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_i, enabled by !$abc$7026$abc$6363$u_alert_n_sync.q[8], asynchronously reset by !\rst_ni
Extracted 6 gates and 11 wires to a netlist network with 4 inputs and 6 outputs.

5.138.22.1. Executing ABC.

5.138.23. Extracting gate netlist of module `\sensor_ctrl' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_i, enabled by $abc$6635$abc$5790$auto$opt_dff.cc:219:make_patterns_logic$3477, asynchronously reset by !\rst_ni
Extracted 18 gates and 23 wires to a netlist network with 5 inputs and 5 outputs.

5.138.23.1. Executing ABC.

5.138.24. Extracting gate netlist of module `\sensor_ctrl' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_i, enabled by $abc$7035$abc$5825$u_reg.u_reg_if.a_ack, asynchronously reset by !\rst_ni
Extracted 191 gates and 243 wires to a netlist network with 52 inputs and 39 outputs.

5.138.24.1. Executing ABC.

5.138.25. Extracting gate netlist of module `\sensor_ctrl' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_i, asynchronously reset by !\rst_ni
Extracted 172 gates and 222 wires to a netlist network with 50 inputs and 49 outputs.

5.138.25.1. Executing ABC.

5.138.26. Extracting gate netlist of module `\sensor_ctrl' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_aon_i, asynchronously reset by !\rst_aon_ni
Extracted 6 gates and 7 wires to a netlist network with 1 inputs and 1 outputs.

5.138.26.1. Executing ABC.

yosys> abc -dff

5.139. Executing ABC pass (technology mapping using ABC).

5.139.1. Summary of detected clock domains:
  6 cells in clk=\clk_i, en=!$abc$7504$abc$6591$abc$6363$u_alert_n_sync.q[9], arst=!\rst_ni, srst={ }
  5 cells in clk=\clk_i, en=!$abc$7512$abc$6599$abc$6363$u_alert_n_sync.q[6], arst=!\rst_ni, srst={ }
  4 cells in clk=\clk_i, en=$abc$7519$abc$7257$abc$5818$auto$opt_dff.cc:194:make_patterns_logic$3441, arst=!\rst_ni, srst={ }
  5 cells in clk=\clk_i, en=!$abc$7526$abc$6606$abc$6363$u_alert_n_sync.q[3], arst=!\rst_ni, srst={ }
  5 cells in clk=\clk_i, en=!$abc$7533$abc$6613$abc$6363$u_alert_n_sync.q[7], arst=!\rst_ni, srst={ }
  12 cells in clk=\clk_i, en=$abc$7540$abc$6620$abc$5672$auto$opt_dff.cc:219:make_patterns_logic$3506, arst=!\rst_ni, srst={ }
  232 cells in clk=\clk_i, en=$abc$7553$abc$6655$abc$6136$u_reg.intg_err, arst=!\rst_ni, srst={ }
  5 cells in clk=\clk_i, en=!$abc$7787$abc$6881$abc$6363$u_alert_n_sync.q[10], arst=!\rst_ni, srst={ }
  4 cells in clk=\clk_i, en=!$abc$7794$abc$6888$abc$6363$u_alert_n_sync.q[11], arst=!\rst_ni, srst={ }
  5 cells in clk=\clk_i, en=!$abc$7801$abc$6895$abc$6363$u_alert_n_sync.q[12], arst=!\rst_ni, srst={ }
  4 cells in clk=\clk_i, en=!$abc$7808$abc$6902$abc$6363$u_alert_n_sync.q[2], arst=!\rst_ni, srst={ }
  2 cells in clk=\clk_i, en=$abc$7553$abc$6655$abc$6123$u_reg.u_fatal_alert_val_13.wr_en, arst=!\rst_ni, srst={ }
  4 cells in clk=\clk_i, en=!$abc$7819$abc$6913$abc$6363$u_alert_n_sync.q[5], arst=!\rst_ni, srst={ }
  4 cells in clk=\clk_i, en=!$abc$7826$abc$6920$abc$6363$u_alert_n_sync.q[4], arst=!\rst_ni, srst={ }
  14 cells in clk=\clk_i, en=$abc$7833$abc$6927$abc$5719$auto$opt_dff.cc:219:make_patterns_logic$3499, arst=!\rst_ni, srst={ }
  14 cells in clk=\clk_i, en=$abc$7848$abc$6945$abc$5742$auto$opt_dff.cc:219:make_patterns_logic$3484, arst=!\rst_ni, srst={ }
  5 cells in clk=\clk_i, en=!$abc$7862$abc$6960$abc$6363$u_alert_n_sync.q[0], arst=!\rst_ni, srst={ }
  21 cells in clk=\clk_i, en=$abc$7869$abc$6967$abc$5686$auto$opt_dff.cc:219:make_patterns_logic$3513, arst=!\rst_ni, srst={ }
  21 cells in clk=\clk_i, en=$abc$7895$abc$6993$abc$5757$auto$opt_dff.cc:219:make_patterns_logic$3491, arst=!\rst_ni, srst={ }
  4 cells in clk=\clk_i, en=!$abc$7919$abc$7019$abc$6363$u_alert_n_sync.q[1], arst=!\rst_ni, srst={ }
  185 cells in clk=\clk_i, en=$abc$7954$abc$7035$abc$5825$u_reg.u_reg_if.a_ack, arst=!\rst_ni, srst={ }
  6 cells in clk=\clk_i, en=!$abc$7926$abc$7026$abc$6363$u_alert_n_sync.q[8], arst=!\rst_ni, srst={ }
  18 cells in clk=\clk_i, en=$abc$7935$abc$6635$abc$5790$auto$opt_dff.cc:219:make_patterns_logic$3477, arst=!\rst_ni, srst={ }
  177 cells in clk=\clk_i, en={ }, arst=!\rst_ni, srst={ }
  6 cells in clk=\clk_aon_i, en={ }, arst=!\rst_aon_ni, srst={ }

5.139.2. Extracting gate netlist of module `\sensor_ctrl' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_i, enabled by !$abc$7504$abc$6591$abc$6363$u_alert_n_sync.q[9], asynchronously reset by !\rst_ni
Extracted 6 gates and 11 wires to a netlist network with 4 inputs and 4 outputs.

5.139.2.1. Executing ABC.

5.139.3. Extracting gate netlist of module `\sensor_ctrl' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_i, enabled by !$abc$7512$abc$6599$abc$6363$u_alert_n_sync.q[6], asynchronously reset by !\rst_ni
Extracted 5 gates and 9 wires to a netlist network with 3 inputs and 4 outputs.

5.139.3.1. Executing ABC.

5.139.4. Extracting gate netlist of module `\sensor_ctrl' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_i, enabled by $abc$7519$abc$7257$abc$5818$auto$opt_dff.cc:194:make_patterns_logic$3441, asynchronously reset by !\rst_ni
Extracted 4 gates and 6 wires to a netlist network with 2 inputs and 3 outputs.

5.139.4.1. Executing ABC.

5.139.5. Extracting gate netlist of module `\sensor_ctrl' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_i, enabled by !$abc$7526$abc$6606$abc$6363$u_alert_n_sync.q[3], asynchronously reset by !\rst_ni
Extracted 5 gates and 9 wires to a netlist network with 3 inputs and 4 outputs.

5.139.5.1. Executing ABC.

5.139.6. Extracting gate netlist of module `\sensor_ctrl' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_i, enabled by !$abc$7533$abc$6613$abc$6363$u_alert_n_sync.q[7], asynchronously reset by !\rst_ni
Extracted 5 gates and 9 wires to a netlist network with 3 inputs and 4 outputs.

5.139.6.1. Executing ABC.

5.139.7. Extracting gate netlist of module `\sensor_ctrl' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_i, enabled by $abc$7540$abc$6620$abc$5672$auto$opt_dff.cc:219:make_patterns_logic$3506, asynchronously reset by !\rst_ni
Extracted 12 gates and 16 wires to a netlist network with 4 inputs and 5 outputs.

5.139.7.1. Executing ABC.

5.139.8. Extracting gate netlist of module `\sensor_ctrl' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_i, enabled by $abc$7553$abc$6655$abc$6136$u_reg.intg_err, asynchronously reset by !\rst_ni
Extracted 232 gates and 323 wires to a netlist network with 90 inputs and 2 outputs.

5.139.8.1. Executing ABC.

5.139.9. Extracting gate netlist of module `\sensor_ctrl' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_i, enabled by !$abc$7787$abc$6881$abc$6363$u_alert_n_sync.q[10], asynchronously reset by !\rst_ni
Extracted 5 gates and 9 wires to a netlist network with 3 inputs and 4 outputs.

5.139.9.1. Executing ABC.

5.139.10. Extracting gate netlist of module `\sensor_ctrl' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_i, enabled by !$abc$7794$abc$6888$abc$6363$u_alert_n_sync.q[11], asynchronously reset by !\rst_ni
Extracted 4 gates and 7 wires to a netlist network with 2 inputs and 4 outputs.

5.139.10.1. Executing ABC.

5.139.11. Extracting gate netlist of module `\sensor_ctrl' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_i, enabled by !$abc$7801$abc$6895$abc$6363$u_alert_n_sync.q[12], asynchronously reset by !\rst_ni
Extracted 5 gates and 9 wires to a netlist network with 3 inputs and 4 outputs.

5.139.11.1. Executing ABC.

5.139.12. Extracting gate netlist of module `\sensor_ctrl' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_i, enabled by !$abc$7808$abc$6902$abc$6363$u_alert_n_sync.q[2], asynchronously reset by !\rst_ni
Extracted 4 gates and 7 wires to a netlist network with 2 inputs and 4 outputs.

5.139.12.1. Executing ABC.

5.139.13. Extracting gate netlist of module `\sensor_ctrl' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_i, enabled by $abc$8462$abc$7553$abc$6655$abc$6123$u_reg.u_fatal_alert_val_13.wr_en, asynchronously reset by !\rst_ni
Extracted 2 gates and 4 wires to a netlist network with 1 inputs and 1 outputs.

5.139.13.1. Executing ABC.

5.139.14. Extracting gate netlist of module `\sensor_ctrl' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_i, enabled by !$abc$7819$abc$6913$abc$6363$u_alert_n_sync.q[5], asynchronously reset by !\rst_ni
Extracted 4 gates and 7 wires to a netlist network with 2 inputs and 4 outputs.

5.139.14.1. Executing ABC.

5.139.15. Extracting gate netlist of module `\sensor_ctrl' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_i, enabled by !$abc$7826$abc$6920$abc$6363$u_alert_n_sync.q[4], asynchronously reset by !\rst_ni
Extracted 4 gates and 7 wires to a netlist network with 2 inputs and 4 outputs.

5.139.15.1. Executing ABC.

5.139.16. Extracting gate netlist of module `\sensor_ctrl' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_i, enabled by $abc$7833$abc$6927$abc$5719$auto$opt_dff.cc:219:make_patterns_logic$3499, asynchronously reset by !\rst_ni
Extracted 14 gates and 18 wires to a netlist network with 4 inputs and 7 outputs.

5.139.16.1. Executing ABC.

5.139.17. Extracting gate netlist of module `\sensor_ctrl' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_i, enabled by $abc$7848$abc$6945$abc$5742$auto$opt_dff.cc:219:make_patterns_logic$3484, asynchronously reset by !\rst_ni
Extracted 14 gates and 18 wires to a netlist network with 4 inputs and 5 outputs.

5.139.17.1. Executing ABC.

5.139.18. Extracting gate netlist of module `\sensor_ctrl' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_i, enabled by !$abc$7862$abc$6960$abc$6363$u_alert_n_sync.q[0], asynchronously reset by !\rst_ni
Extracted 5 gates and 9 wires to a netlist network with 3 inputs and 4 outputs.

5.139.18.1. Executing ABC.

5.139.19. Extracting gate netlist of module `\sensor_ctrl' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_i, enabled by $abc$7869$abc$6967$abc$5686$auto$opt_dff.cc:219:make_patterns_logic$3513, asynchronously reset by !\rst_ni
Extracted 21 gates and 26 wires to a netlist network with 5 inputs and 5 outputs.

5.139.19.1. Executing ABC.

5.139.20. Extracting gate netlist of module `\sensor_ctrl' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_i, enabled by $abc$7895$abc$6993$abc$5757$auto$opt_dff.cc:219:make_patterns_logic$3491, asynchronously reset by !\rst_ni
Extracted 21 gates and 26 wires to a netlist network with 5 inputs and 5 outputs.

5.139.20.1. Executing ABC.

5.139.21. Extracting gate netlist of module `\sensor_ctrl' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_i, enabled by !$abc$7919$abc$7019$abc$6363$u_alert_n_sync.q[1], asynchronously reset by !\rst_ni
Extracted 4 gates and 7 wires to a netlist network with 2 inputs and 4 outputs.

5.139.21.1. Executing ABC.

5.139.22. Extracting gate netlist of module `\sensor_ctrl' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_i, enabled by $abc$7954$abc$7035$abc$5825$u_reg.u_reg_if.a_ack, asynchronously reset by !\rst_ni
Extracted 185 gates and 235 wires to a netlist network with 50 inputs and 39 outputs.

5.139.22.1. Executing ABC.

5.139.23. Extracting gate netlist of module `\sensor_ctrl' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_i, enabled by !$abc$7926$abc$7026$abc$6363$u_alert_n_sync.q[8], asynchronously reset by !\rst_ni
Extracted 6 gates and 11 wires to a netlist network with 4 inputs and 6 outputs.

5.139.23.1. Executing ABC.

5.139.24. Extracting gate netlist of module `\sensor_ctrl' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_i, enabled by $abc$7935$abc$6635$abc$5790$auto$opt_dff.cc:219:make_patterns_logic$3477, asynchronously reset by !\rst_ni
Extracted 18 gates and 23 wires to a netlist network with 5 inputs and 5 outputs.

5.139.24.1. Executing ABC.

5.139.25. Extracting gate netlist of module `\sensor_ctrl' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_i, asynchronously reset by !\rst_ni
Extracted 177 gates and 236 wires to a netlist network with 59 inputs and 50 outputs.

5.139.25.1. Executing ABC.

5.139.26. Extracting gate netlist of module `\sensor_ctrl' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_aon_i, asynchronously reset by !\rst_aon_ni
Extracted 6 gates and 7 wires to a netlist network with 1 inputs and 1 outputs.

5.139.26.1. Executing ABC.

yosys> opt_ffinv

5.140. Executing OPT_FFINV pass (push inverters through FFs).
Discovering LUTs.
Pushed 0 inverters.

yosys> opt_expr

5.141. Executing OPT_EXPR pass (perform const folding).
Optimizing module sensor_ctrl.
<suppressed ~14 debug messages>

yosys> opt_merge -nomux

5.142. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\sensor_ctrl'.
<suppressed ~18 debug messages>
Removed a total of 6 cells.

yosys> opt_muxtree

5.143. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \sensor_ctrl..
  Creating internal representation of mux trees.
  No muxes found in this module.
Removed 0 multiplexer ports.

yosys> opt_reduce

5.144. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \sensor_ctrl.
Performed a total of 0 changes.

yosys> opt_merge

5.145. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\sensor_ctrl'.
Removed a total of 0 cells.

yosys> opt_share

5.146. Executing OPT_SHARE pass.

yosys> opt_dff -nosdff -sat

5.147. Executing OPT_DFF pass (perform DFF optimizations).

yosys> opt_clean

5.148. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \sensor_ctrl..
Removed 13 unused cells and 4425 unused wires.
<suppressed ~136 debug messages>

yosys> opt_expr

5.149. Executing OPT_EXPR pass (perform const folding).
Optimizing module sensor_ctrl.

yosys> opt_muxtree

5.150. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \sensor_ctrl..
  Creating internal representation of mux trees.
  No muxes found in this module.
Removed 0 multiplexer ports.

yosys> opt_reduce

5.151. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \sensor_ctrl.
Performed a total of 0 changes.

yosys> opt_merge

5.152. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\sensor_ctrl'.
Removed a total of 0 cells.

yosys> opt_share

5.153. Executing OPT_SHARE pass.

yosys> opt_dff -nosdff -sat

5.154. Executing OPT_DFF pass (perform DFF optimizations).

yosys> opt_clean

5.155. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \sensor_ctrl..

yosys> opt_expr

5.156. Executing OPT_EXPR pass (perform const folding).
Optimizing module sensor_ctrl.
MAX OPT ITERATION = 2

yosys> bmuxmap

5.157. Executing BMUXMAP pass.

yosys> demuxmap

5.158. Executing DEMUXMAP pass.

yosys> clean_zerowidth

yosys> abc -script /tmp/yosys_ogzL73/abc_tmp_1.scr

5.159. Executing ABC pass (technology mapping using ABC).

5.159.1. Extracting gate netlist of module `\sensor_ctrl' to `<abc-temp-dir>/input.blif'..
Extracted 621 gates and 825 wires to a netlist network with 204 inputs and 97 outputs.

5.159.1.1. Executing ABC.
DE:   #PIs = 204  #Luts =   198  Max Lvl =   5  Avg Lvl =   1.71  [   0.13 sec. at Pass 0]{firstMap}
DE:   #PIs = 204  #Luts =   172  Max Lvl =   7  Avg Lvl =   2.10  [   2.95 sec. at Pass 1]{initMapFlow}
DE:   #PIs = 204  #Luts =   167  Max Lvl =   6  Avg Lvl =   1.88  [   0.53 sec. at Pass 2]{map}
DE:   #PIs = 204  #Luts =   167  Max Lvl =   6  Avg Lvl =   1.88  [   0.51 sec. at Pass 3]{postMap}
DE:   #PIs = 204  #Luts =   167  Max Lvl =   6  Avg Lvl =   1.88  [   0.72 sec. at Pass 4]{map}
DE:   #PIs = 204  #Luts =   165  Max Lvl =   9  Avg Lvl =   1.98  [   0.68 sec. at Pass 5]{postMap}
DE:   #PIs = 204  #Luts =   165  Max Lvl =   9  Avg Lvl =   1.98  [   0.94 sec. at Pass 6]{map}
DE:   #PIs = 204  #Luts =   165  Max Lvl =   9  Avg Lvl =   1.98  [   1.09 sec. at Pass 7]{postMap}
DE:   #PIs = 204  #Luts =   165  Max Lvl =   7  Avg Lvl =   1.76  [   1.06 sec. at Pass 8]{map}
DE:   #PIs = 204  #Luts =   165  Max Lvl =   7  Avg Lvl =   1.76  [   1.60 sec. at Pass 9]{postMap}
DE:   #PIs = 204  #Luts =   165  Max Lvl =   7  Avg Lvl =   1.76  [   1.42 sec. at Pass 10]{map}
DE:   #PIs = 204  #Luts =   164  Max Lvl =   8  Avg Lvl =   1.94  [   1.42 sec. at Pass 11]{postMap}
DE:   #PIs = 204  #Luts =   164  Max Lvl =   8  Avg Lvl =   1.94  [   1.07 sec. at Pass 12]{map}
DE:   #PIs = 204  #Luts =   164  Max Lvl =   8  Avg Lvl =   1.94  [   1.96 sec. at Pass 13]{postMap}
DE:   #PIs = 204  #Luts =   164  Max Lvl =   6  Avg Lvl =   1.72  [   1.67 sec. at Pass 14]{map}
DE:   #PIs = 204  #Luts =   164  Max Lvl =   6  Avg Lvl =   1.72  [   1.70 sec. at Pass 15]{postMap}
DE:   #PIs = 204  #Luts =   164  Max Lvl =   6  Avg Lvl =   1.72  [   1.39 sec. at Pass 16]{map}
DE:   #PIs = 204  #Luts =   164  Max Lvl =   6  Avg Lvl =   1.72  [   1.71 sec. at Pass 17]{postMap}
DE:   #PIs = 204  #Luts =   163  Max Lvl =   7  Avg Lvl =   1.91  [   1.15 sec. at Pass 18]{pushMap}
DE:   #PIs = 204  #Luts =   163  Max Lvl =   7  Avg Lvl =   1.91  [   1.68 sec. at Pass 19]{map}
DE:   #PIs = 204  #Luts =   163  Max Lvl =   7  Avg Lvl =   1.91  [   1.94 sec. at Pass 20]{postMap}
DE:   #PIs = 204  #Luts =   163  Max Lvl =   7  Avg Lvl =   1.91  [   1.57 sec. at Pass 21]{map}
DE:   #PIs = 204  #Luts =   163  Max Lvl =   7  Avg Lvl =   1.91  [   1.66 sec. at Pass 22]{pushMap}
DE:   #PIs = 204  #Luts =   163  Max Lvl =   7  Avg Lvl =   1.91  [   0.67 sec. at Pass 23]{finalMap}

yosys> opt_expr

5.160. Executing OPT_EXPR pass (perform const folding).
Optimizing module sensor_ctrl.

yosys> opt_merge -nomux

5.161. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\sensor_ctrl'.
Removed a total of 0 cells.

yosys> opt_muxtree

5.162. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \sensor_ctrl..
  Creating internal representation of mux trees.
  No muxes found in this module.
Removed 0 multiplexer ports.

yosys> opt_reduce

5.163. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \sensor_ctrl.
Performed a total of 0 changes.

yosys> opt_merge

5.164. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\sensor_ctrl'.
Removed a total of 0 cells.

yosys> opt_share

5.165. Executing OPT_SHARE pass.

yosys> opt_dff -nosdff -nodffe

5.166. Executing OPT_DFF pass (perform DFF optimizations).

yosys> opt_clean

5.167. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \sensor_ctrl..
Removed 0 unused cells and 825 unused wires.
<suppressed ~14 debug messages>

yosys> opt_expr

5.168. Executing OPT_EXPR pass (perform const folding).
Optimizing module sensor_ctrl.
MAX OPT ITERATION = 1

yosys> opt_ffinv

5.169. Executing OPT_FFINV pass (push inverters through FFs).
Discovering LUTs.
Pushed 4 inverters.

yosys> stat

5.170. Printing statistics.

=== sensor_ctrl ===

   Number of wires:               1546
   Number of wire bits:           3547
   Number of public wires:        1337
   Number of public wire bits:    3338
   Number of memories:               0
   Number of memory bits:            0
   Number of processes:              0
   Number of cells:                285
     $_DFFE_PN0P_                   57
     $_DFF_PN0_                     63
     $_DFF_PN1_                      4
     $lut                          161


yosys> shregmap -minlen 8 -maxlen 20

5.171. Executing SHREGMAP pass (map shift registers).
Converted 0 dff cells into 0 shift registers.

yosys> dfflegalize -cell $_DFF_?_ 0 -cell $_DFF_???_ 0 -cell $_DFFE_????_ 0 -cell $_DFFSR_???_ 0 -cell $_DFFSRE_????_ 0 -cell $_DLATCHSR_PPP_ 0

5.172. Executing DFFLEGALIZE pass (convert FFs to types supported by the target).

yosys> stat

5.173. Printing statistics.

=== sensor_ctrl ===

   Number of wires:               1546
   Number of wire bits:           3547
   Number of public wires:        1337
   Number of public wire bits:    3338
   Number of memories:               0
   Number of memory bits:            0
   Number of processes:              0
   Number of cells:                285
     $_DFFE_PN0P_                   57
     $_DFF_PN0_                     63
     $_DFF_PN1_                      4
     $lut                          161


yosys> techmap -map +/techmap.v -map +/rapidsilicon/genesis/ffs_map.v

5.174. Executing TECHMAP pass (map to technology primitives).

5.174.1. Executing Verilog-2005 frontend: /nfs_scratch/scratch/Vorak/aram/Workspace/Raptor/yosys_verific_rs/yosys/install/bin/../share/yosys/techmap.v
Parsing Verilog input from `/nfs_scratch/scratch/Vorak/aram/Workspace/Raptor/yosys_verific_rs/yosys/install/bin/../share/yosys/techmap.v' to AST representation.
Generating RTLIL representation for module `\_90_simplemap_bool_ops'.
Generating RTLIL representation for module `\_90_simplemap_reduce_ops'.
Generating RTLIL representation for module `\_90_simplemap_logic_ops'.
Generating RTLIL representation for module `\_90_simplemap_compare_ops'.
Generating RTLIL representation for module `\_90_simplemap_various'.
Generating RTLIL representation for module `\_90_simplemap_registers'.
Generating RTLIL representation for module `\_90_shift_ops_shr_shl_sshl_sshr'.
Generating RTLIL representation for module `\_90_shift_shiftx'.
Generating RTLIL representation for module `\_90_fa'.
Generating RTLIL representation for module `\_90_lcu'.
Generating RTLIL representation for module `\_90_alu'.
Generating RTLIL representation for module `\_90_macc'.
Generating RTLIL representation for module `\_90_alumacc'.
Generating RTLIL representation for module `\$__div_mod_u'.
Generating RTLIL representation for module `\$__div_mod_trunc'.
Generating RTLIL representation for module `\_90_div'.
Generating RTLIL representation for module `\_90_mod'.
Generating RTLIL representation for module `\$__div_mod_floor'.
Generating RTLIL representation for module `\_90_divfloor'.
Generating RTLIL representation for module `\_90_modfloor'.
Generating RTLIL representation for module `\_90_pow'.
Generating RTLIL representation for module `\_90_pmux'.
Generating RTLIL representation for module `\_90_demux'.
Generating RTLIL representation for module `\_90_lut'.
Successfully finished Verilog frontend.

5.174.2. Executing Verilog-2005 frontend: /nfs_scratch/scratch/Vorak/aram/Workspace/Raptor/yosys_verific_rs/yosys/install/bin/../share/yosys/rapidsilicon/genesis/ffs_map.v
Parsing Verilog input from `/nfs_scratch/scratch/Vorak/aram/Workspace/Raptor/yosys_verific_rs/yosys/install/bin/../share/yosys/rapidsilicon/genesis/ffs_map.v' to AST representation.
Generating RTLIL representation for module `\$_DFF_P_'.
Generating RTLIL representation for module `\$_DFF_PP0_'.
Generating RTLIL representation for module `\$_DFF_PN0_'.
Generating RTLIL representation for module `\$_DFF_PP1_'.
Generating RTLIL representation for module `\$_DFF_PN1_'.
Generating RTLIL representation for module `\$_DFFE_PP_'.
Generating RTLIL representation for module `\$_DFFE_PN_'.
Generating RTLIL representation for module `\$_DFFE_PP0P_'.
Generating RTLIL representation for module `\$_DFFE_PP0N_'.
Generating RTLIL representation for module `\$_DFFE_PN0P_'.
Generating RTLIL representation for module `\$_DFFE_PN0N_'.
Generating RTLIL representation for module `\$_DFFE_PP1P_'.
Generating RTLIL representation for module `\$_DFFE_PP1N_'.
Generating RTLIL representation for module `\$_DFFE_PN1P_'.
Generating RTLIL representation for module `\$_DFFE_PN1N_'.
Generating RTLIL representation for module `\$_DFFSR_PPP_'.
Generating RTLIL representation for module `\$_DFFSR_PNP_'.
Generating RTLIL representation for module `\$_DFFSR_PNN_'.
Generating RTLIL representation for module `\$_DFFSR_PPN_'.
Generating RTLIL representation for module `\$_DFFSR_NPP_'.
Generating RTLIL representation for module `\$_DFFSR_NNP_'.
Generating RTLIL representation for module `\$_DFFSR_NNN_'.
Generating RTLIL representation for module `\$_DFFSR_NPN_'.
Generating RTLIL representation for module `\$_DFFSRE_PPPP_'.
Generating RTLIL representation for module `\$_DFFSRE_PNPP_'.
Generating RTLIL representation for module `\$_DFFSRE_PPNP_'.
Generating RTLIL representation for module `\$_DFFSRE_PNNP_'.
Generating RTLIL representation for module `\$_DFFSRE_PPPN_'.
Generating RTLIL representation for module `\$_DFFSRE_PNPN_'.
Generating RTLIL representation for module `\$_DFFSRE_PPNN_'.
Generating RTLIL representation for module `\$_DFFSRE_PNNN_'.
Generating RTLIL representation for module `\$_DLATCHSR_PPP_'.
Generating RTLIL representation for module `\$_DLATCHSR_NPP_'.
Generating RTLIL representation for module `\$_DFF_N_'.
Generating RTLIL representation for module `\$_DFF_NP0_'.
Generating RTLIL representation for module `\$_DFF_NN0_'.
Generating RTLIL representation for module `\$_DFF_NP1_'.
Generating RTLIL representation for module `\$_DFF_NN1_'.
Generating RTLIL representation for module `\$_DFFE_NP_'.
Generating RTLIL representation for module `\$_DFFE_NN_'.
Generating RTLIL representation for module `\$_DFFE_NP0P_'.
Generating RTLIL representation for module `\$_DFFE_NP0N_'.
Generating RTLIL representation for module `\$_DFFE_NN0P_'.
Generating RTLIL representation for module `\$_DFFE_NN0N_'.
Generating RTLIL representation for module `\$_DFFE_NP1P_'.
Generating RTLIL representation for module `\$_DFFE_NP1N_'.
Generating RTLIL representation for module `\$_DFFE_NN1P_'.
Generating RTLIL representation for module `\$_DFFE_NN1N_'.
Generating RTLIL representation for module `\$_DFFSRE_NPPP_'.
Generating RTLIL representation for module `\$_DFFSRE_NNPP_'.
Generating RTLIL representation for module `\$_DFFSRE_NPNP_'.
Generating RTLIL representation for module `\$_DFFSRE_NNNP_'.
Generating RTLIL representation for module `\$_DFFSRE_NPPN_'.
Generating RTLIL representation for module `\$_DFFSRE_NNPN_'.
Generating RTLIL representation for module `\$_DFFSRE_NPNN_'.
Generating RTLIL representation for module `\$_DFFSRE_NNNN_'.
Generating RTLIL representation for module `\$__SHREG_DFF_P_'.
Generating RTLIL representation for module `\$_SDFF_PP0_'.
Generating RTLIL representation for module `\$_SDFF_PN0_'.
Generating RTLIL representation for module `\$_SDFF_NP0_'.
Generating RTLIL representation for module `\$_SDFF_NN0_'.
Generating RTLIL representation for module `\$_SDFF_PP1_'.
Generating RTLIL representation for module `\$_SDFF_PN1_'.
Generating RTLIL representation for module `\$_SDFF_NP1_'.
Generating RTLIL representation for module `\$_SDFF_NN1_'.
Successfully finished Verilog frontend.

5.174.3. Continuing TECHMAP pass.
Using extmapper simplemap for cells of type $lut.
Using template \$_DFF_PN0_ for cells of type $_DFF_PN0_.
Using template \$_DFFE_PN0P_ for cells of type $_DFFE_PN0P_.
Using template \$_DFF_PN1_ for cells of type $_DFF_PN1_.
No more expansions possible.
<suppressed ~421 debug messages>

yosys> opt_expr -mux_undef

5.175. Executing OPT_EXPR pass (perform const folding).
Optimizing module sensor_ctrl.
<suppressed ~2991 debug messages>

yosys> simplemap

5.176. Executing SIMPLEMAP pass (map simple cells to gate primitives).

yosys> opt_expr

5.177. Executing OPT_EXPR pass (perform const folding).
Optimizing module sensor_ctrl.

yosys> opt_merge

5.178. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\sensor_ctrl'.
<suppressed ~4953 debug messages>
Removed a total of 1651 cells.

yosys> opt_dff -nodffe -nosdff

5.179. Executing OPT_DFF pass (perform DFF optimizations).

yosys> opt_clean

5.180. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \sensor_ctrl..
Removed 2 unused cells and 781 unused wires.
<suppressed ~3 debug messages>

yosys> opt_expr

5.181. Executing OPT_EXPR pass (perform const folding).
Optimizing module sensor_ctrl.
<suppressed ~17 debug messages>

yosys> opt_merge -nomux

5.182. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\sensor_ctrl'.
Removed a total of 0 cells.

yosys> opt_muxtree

5.183. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \sensor_ctrl..
  Creating internal representation of mux trees.
  No muxes found in this module.
Removed 0 multiplexer ports.

yosys> opt_reduce

5.184. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \sensor_ctrl.
Performed a total of 0 changes.

yosys> opt_merge

5.185. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\sensor_ctrl'.
Removed a total of 0 cells.

yosys> opt_share

5.186. Executing OPT_SHARE pass.

yosys> opt_dff -nosdff -nodffe

5.187. Executing OPT_DFF pass (perform DFF optimizations).

yosys> opt_clean

5.188. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \sensor_ctrl..

yosys> opt_expr

5.189. Executing OPT_EXPR pass (perform const folding).
Optimizing module sensor_ctrl.
MAX OPT ITERATION = 1

yosys> abc -script /tmp/yosys_ogzL73/abc_tmp_2.scr

5.190. Executing ABC pass (technology mapping using ABC).

5.190.1. Extracting gate netlist of module `\sensor_ctrl' to `<abc-temp-dir>/input.blif'..
Extracted 948 gates and 1150 wires to a netlist network with 200 inputs and 93 outputs.

5.190.1.1. Executing ABC.
DE:   #PIs = 200  #Luts =   162  Max Lvl =   6  Avg Lvl =   1.78  [   0.16 sec. at Pass 0]{firstMap}
DE:   #PIs = 200  #Luts =   161  Max Lvl =   6  Avg Lvl =   1.99  [   1.80 sec. at Pass 1]{initMapFlow}
DE:   #PIs = 200  #Luts =   161  Max Lvl =   6  Avg Lvl =   1.99  [   0.40 sec. at Pass 2]{map}
DE:   #PIs = 200  #Luts =   160  Max Lvl =   7  Avg Lvl =   1.99  [   0.84 sec. at Pass 3]{postMap}
DE:   #PIs = 200  #Luts =   160  Max Lvl =   7  Avg Lvl =   1.99  [   1.32 sec. at Pass 4]{map}
DE:   #PIs = 200  #Luts =   160  Max Lvl =   6  Avg Lvl =   1.95  [   1.30 sec. at Pass 5]{postMap}
DE:   #PIs = 200  #Luts =   160  Max Lvl =   6  Avg Lvl =   1.95  [   1.34 sec. at Pass 6]{map}
DE:   #PIs = 200  #Luts =   160  Max Lvl =   6  Avg Lvl =   1.95  [   2.15 sec. at Pass 7]{postMap}
DE:   #PIs = 200  #Luts =   159  Max Lvl =   6  Avg Lvl =   1.96  [   1.58 sec. at Pass 8]{map}
DE:   #PIs = 200  #Luts =   159  Max Lvl =   6  Avg Lvl =   1.96  [   1.51 sec. at Pass 9]{postMap}
DE:   #PIs = 200  #Luts =   158  Max Lvl =   6  Avg Lvl =   1.96  [   0.90 sec. at Pass 10]{map}
DE:   #PIs = 200  #Luts =   158  Max Lvl =   6  Avg Lvl =   1.96  [   1.00 sec. at Pass 11]{postMap}
DE:   #PIs = 200  #Luts =   158  Max Lvl =   6  Avg Lvl =   1.96  [   1.11 sec. at Pass 12]{map}
DE:   #PIs = 200  #Luts =   158  Max Lvl =   6  Avg Lvl =   1.96  [   1.18 sec. at Pass 13]{postMap}
DE:   #PIs = 200  #Luts =   157  Max Lvl =   6  Avg Lvl =   1.80  [   1.14 sec. at Pass 14]{pushMap}
DE:   #PIs = 200  #Luts =   157  Max Lvl =   6  Avg Lvl =   1.80  [   1.32 sec. at Pass 15]{map}
DE:   #PIs = 200  #Luts =   157  Max Lvl =   6  Avg Lvl =   1.80  [   1.07 sec. at Pass 16]{postMap}
DE:   #PIs = 200  #Luts =   157  Max Lvl =   6  Avg Lvl =   1.80  [   0.76 sec. at Pass 17]{map}
DE:   #PIs = 200  #Luts =   157  Max Lvl =   6  Avg Lvl =   1.80  [   0.76 sec. at Pass 18]{pushMap}
DE:   #PIs = 200  #Luts =   157  Max Lvl =   6  Avg Lvl =   1.80  [   0.34 sec. at Pass 19]{finalMap}

yosys> opt_expr

5.191. Executing OPT_EXPR pass (perform const folding).
Optimizing module sensor_ctrl.

yosys> opt_merge -nomux

5.192. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\sensor_ctrl'.
Removed a total of 0 cells.

yosys> opt_muxtree

5.193. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \sensor_ctrl..
  Creating internal representation of mux trees.
  No muxes found in this module.
Removed 0 multiplexer ports.

yosys> opt_reduce

5.194. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \sensor_ctrl.
Performed a total of 0 changes.

yosys> opt_merge

5.195. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\sensor_ctrl'.
Removed a total of 0 cells.

yosys> opt_share

5.196. Executing OPT_SHARE pass.

yosys> opt_dff -nosdff -nodffe

5.197. Executing OPT_DFF pass (perform DFF optimizations).

yosys> opt_clean

5.198. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \sensor_ctrl..
Removed 0 unused cells and 838 unused wires.
<suppressed ~1 debug messages>

yosys> opt_expr

5.199. Executing OPT_EXPR pass (perform const folding).
Optimizing module sensor_ctrl.
MAX OPT ITERATION = 1

yosys> hierarchy -check

5.200. Executing HIERARCHY pass (managing design hierarchy).

5.200.1. Analyzing design hierarchy..
Top module:  \sensor_ctrl

5.200.2. Analyzing design hierarchy..
Top module:  \sensor_ctrl
Removed 0 unused modules.

yosys> stat

5.201. Printing statistics.

=== sensor_ctrl ===

   Number of wires:               1540
   Number of wire bits:           3541
   Number of public wires:        1337
   Number of public wire bits:    3338
   Number of memories:               0
   Number of memory bits:            0
   Number of processes:              0
   Number of cells:                281
     $lut                          157
     dffsre                        124


yosys> opt_clean -purge

5.202. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \sensor_ctrl..
Removed 0 unused cells and 1193 unused wires.
<suppressed ~1193 debug messages>

yosys> write_verilog -noattr -nohex synthesized.v

5.203. Executing Verilog backend.
Dumping module `\sensor_ctrl'.

Warnings: 204 unique messages, 204 total
End of script. Logfile hash: 7893712908, CPU: user 4.98s system 0.13s, MEM: 51.45 MB peak
Yosys 0.18+10 (git sha1 7361c89db, gcc 9.4.0-1ubuntu1~20.04.1 -fPIC -Os)
Time spent: 97% 6x abc (177 sec), 0% 34x opt_expr (1 sec), ...
real 80.55
user 163.81
sys 17.89
