
 /----------------------------------------------------------------------------\
 |                                                                            |
 |  yosys -- Yosys Open SYnthesis Suite                                       |
 |                                                                            |
 |  Copyright (C) 2012 - 2020  Claire Xenia Wolf <claire@yosyshq.com>         |
 |                                                                            |
 |  Permission to use, copy, modify, and/or distribute this software for any  |
 |  purpose with or without fee is hereby granted, provided that the above    |
 |  copyright notice and this permission notice appear in all copies.         |
 |                                                                            |
 |  THE SOFTWARE IS PROVIDED "AS IS" AND THE AUTHOR DISCLAIMS ALL WARRANTIES  |
 |  WITH REGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF          |
 |  MERCHANTABILITY AND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR   |
 |  ANY SPECIAL, DIRECT, INDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES    |
 |  WHATSOEVER RESULTING FROM LOSS OF USE, DATA OR PROFITS, WHETHER IN AN     |
 |  ACTION OF CONTRACT, NEGLIGENCE OR OTHER TORTIOUS ACTION, ARISING OUT OF   |
 |  OR IN CONNECTION WITH THE USE OR PERFORMANCE OF THIS SOFTWARE.            |
 |                                                                            |
 \----------------------------------------------------------------------------/

 Yosys-Verific 0.0.92
 Yosys 0.18+10 (git sha1 7361c89db, gcc 9.4.0-1ubuntu1~20.04.1 -fPIC -Os)


-- Executing script file `yosys.ys' --
echo on

yosys> plugin -i synth-rs

yosys> read -verific

yosys> read -incdir .

yosys> verific -vlog-incdir .

1. Executing VERIFIC (loading SystemVerilog and VHDL designs using Verific).
Built with Verific May22_SW_Release, released at Wed Jun  1 05:39:28 2022.

yosys> verilog_defaults -add -I.

yosys> read -vlog2k fpu_TB.v fpu_double.v fpu_add.v fpu_round.v fpu_sub.v fpu_exceptions.v fpu_div.v fpu_mul.v

yosys> verific -vlog2k fpu_TB.v fpu_double.v fpu_add.v fpu_round.v fpu_sub.v fpu_exceptions.v fpu_div.v fpu_mul.v

2. Executing VERIFIC (loading SystemVerilog and VHDL designs using Verific).
Built with Verific May22_SW_Release, released at Wed Jun  1 05:39:28 2022.
VERIFIC-COMMENT [VERI-1482] Analyzing Verilog file 'fpu_TB.v'
VERIFIC-COMMENT [VERI-1482] Analyzing Verilog file 'fpu_double.v'
VERIFIC-INFO [VERI-2561] fpu_double.v:149: undeclared symbol 'except_enable', assumed default net type 'wire'
VERIFIC-COMMENT [VERI-1482] Analyzing Verilog file 'fpu_add.v'
VERIFIC-COMMENT [VERI-1482] Analyzing Verilog file 'fpu_round.v'
VERIFIC-COMMENT [VERI-1482] Analyzing Verilog file 'fpu_sub.v'
VERIFIC-COMMENT [VERI-1482] Analyzing Verilog file 'fpu_exceptions.v'
VERIFIC-COMMENT [VERI-1482] Analyzing Verilog file 'fpu_div.v'
VERIFIC-COMMENT [VERI-1482] Analyzing Verilog file 'fpu_mul.v'

yosys> synth_rs -top fpu -tech genesis -goal area -de -no_dsp -no_bram -verilog synthesized.v

3. Executing synth_rs pass: v0.4.79

yosys> read_verilog -lib -specify -nomem2reg +/rapidsilicon/common/cells_sim.v +/rapidsilicon/genesis/cells_sim.v +/rapidsilicon/genesis/dsp_sim.v

3.1. Executing Verilog-2005 frontend: /nfs_scratch/scratch/Vorak/aram/Workspace/Raptor/yosys_verific_rs/yosys/install/bin/../share/yosys/rapidsilicon/common/cells_sim.v
Parsing Verilog input from `/nfs_scratch/scratch/Vorak/aram/Workspace/Raptor/yosys_verific_rs/yosys/install/bin/../share/yosys/rapidsilicon/common/cells_sim.v' to AST representation.
Generating RTLIL representation for module `\inv'.
Generating RTLIL representation for module `\buff'.
Generating RTLIL representation for module `\logic_0'.
Generating RTLIL representation for module `\logic_1'.
Generating RTLIL representation for module `\gclkbuff'.
Successfully finished Verilog frontend.

3.2. Executing Verilog-2005 frontend: /nfs_scratch/scratch/Vorak/aram/Workspace/Raptor/yosys_verific_rs/yosys/install/bin/../share/yosys/rapidsilicon/genesis/cells_sim.v
Parsing Verilog input from `/nfs_scratch/scratch/Vorak/aram/Workspace/Raptor/yosys_verific_rs/yosys/install/bin/../share/yosys/rapidsilicon/genesis/cells_sim.v' to AST representation.
Generating RTLIL representation for module `\dffsre'.
Generating RTLIL representation for module `\dffnsre'.
Generating RTLIL representation for module `\latchsre'.
Generating RTLIL representation for module `\latchnsre'.
Generating RTLIL representation for module `\io_scff'.
Generating RTLIL representation for module `\scff'.
Generating RTLIL representation for module `\sh_dff'.
Generating RTLIL representation for module `\adder_carry'.
Generating RTLIL representation for module `\sdffr'.
Generating RTLIL representation for module `\sdffs'.
Generating RTLIL representation for module `\TDP_BRAM18'.
Generating RTLIL representation for module `\TDP36K'.
Generating RTLIL representation for module `\BRAM2x18_TDP'.
Generating RTLIL representation for module `\BRAM2x18_SDP'.
Generating RTLIL representation for module `\_$_mem_v2_asymmetric'.
Successfully finished Verilog frontend.

3.3. Executing Verilog-2005 frontend: /nfs_scratch/scratch/Vorak/aram/Workspace/Raptor/yosys_verific_rs/yosys/install/bin/../share/yosys/rapidsilicon/genesis/dsp_sim.v
Parsing Verilog input from `/nfs_scratch/scratch/Vorak/aram/Workspace/Raptor/yosys_verific_rs/yosys/install/bin/../share/yosys/rapidsilicon/genesis/dsp_sim.v' to AST representation.
Generating RTLIL representation for module `\RS_DSP1'.
Generating RTLIL representation for module `\RS_DSP2'.
Generating RTLIL representation for module `\RS_DSP2_MULT'.
Generating RTLIL representation for module `\RS_DSP2_MULT_REGIN'.
Generating RTLIL representation for module `\RS_DSP2_MULT_REGOUT'.
Generating RTLIL representation for module `\RS_DSP2_MULT_REGIN_REGOUT'.
Generating RTLIL representation for module `\RS_DSP2_MULTADD'.
Generating RTLIL representation for module `\RS_DSP2_MULTADD_REGIN'.
Generating RTLIL representation for module `\RS_DSP2_MULTADD_REGOUT'.
Generating RTLIL representation for module `\RS_DSP2_MULTADD_REGIN_REGOUT'.
Generating RTLIL representation for module `\RS_DSP2_MULTACC'.
Generating RTLIL representation for module `\RS_DSP2_MULTACC_REGIN'.
Generating RTLIL representation for module `\RS_DSP2_MULTACC_REGOUT'.
Generating RTLIL representation for module `\RS_DSP2_MULTACC_REGIN_REGOUT'.
Generating RTLIL representation for module `\dsp_t1_20x18x64_cfg_ports'.
Generating RTLIL representation for module `\dsp_t1_10x9x32_cfg_ports'.
Generating RTLIL representation for module `\dsp_t1_sim_cfg_ports'.
Generating RTLIL representation for module `\RS_DSP3'.
Generating RTLIL representation for module `\RS_DSP3_MULT'.
Generating RTLIL representation for module `\RS_DSP3_MULT_REGIN'.
Generating RTLIL representation for module `\RS_DSP3_MULT_REGOUT'.
Generating RTLIL representation for module `\RS_DSP3_MULT_REGIN_REGOUT'.
Generating RTLIL representation for module `\RS_DSP3_MULTADD'.
Generating RTLIL representation for module `\RS_DSP3_MULTADD_REGIN'.
Generating RTLIL representation for module `\RS_DSP3_MULTADD_REGOUT'.
Generating RTLIL representation for module `\RS_DSP3_MULTADD_REGIN_REGOUT'.
Generating RTLIL representation for module `\RS_DSP3_MULTACC'.
Generating RTLIL representation for module `\RS_DSP3_MULTACC_REGIN'.
Generating RTLIL representation for module `\RS_DSP3_MULTACC_REGOUT'.
Generating RTLIL representation for module `\RS_DSP3_MULTACC_REGIN_REGOUT'.
Generating RTLIL representation for module `\dsp_t1_20x18x64_cfg_params'.
Generating RTLIL representation for module `\dsp_t1_10x9x32_cfg_params'.
Generating RTLIL representation for module `\dsp_t1_sim_cfg_params'.
Successfully finished Verilog frontend.

yosys> hierarchy -check -top fpu

3.4. Executing HIERARCHY pass (managing design hierarchy).
VERIFIC-INFO [VERI-1018] fpu_double.v:51: compiling module 'fpu'
VERIFIC-INFO [VERI-1018] fpu_add.v:37: compiling module 'fpu_add'
VERIFIC-WARNING [VERI-1209] fpu_add.v:124: expression size 12 truncated to fit in target size 11
VERIFIC-WARNING [VERI-1209] fpu_add.v:126: expression size 12 truncated to fit in target size 11
VERIFIC-INFO [VERI-1018] fpu_sub.v:39: compiling module 'fpu_sub'
VERIFIC-WARNING [VERI-1209] fpu_sub.v:150: expression size 32 truncated to fit in target size 11
VERIFIC-INFO [VERI-1018] fpu_mul.v:38: compiling module 'fpu_mul'
VERIFIC-WARNING [VERI-1209] fpu_mul.v:170: expression size 32 truncated to fit in target size 12
VERIFIC-WARNING [VERI-1209] fpu_mul.v:171: expression size 32 truncated to fit in target size 12
VERIFIC-WARNING [VERI-2580] fpu_mul.v:271: latch inferred for net 'product_shift[5]'
VERIFIC-INFO [VERI-1018] fpu_div.v:38: compiling module 'fpu_div'
VERIFIC-WARNING [VERI-1209] fpu_div.v:147: expression size 32 truncated to fit in target size 6
VERIFIC-WARNING [VERI-1209] fpu_div.v:232: expression size 13 truncated to fit in target size 12
VERIFIC-WARNING [VERI-1209] fpu_div.v:234: expression size 32 truncated to fit in target size 12
VERIFIC-WARNING [VERI-1209] fpu_div.v:240: expression size 32 truncated to fit in target size 12
VERIFIC-WARNING [VERI-1209] fpu_div.v:244: expression size 32 truncated to fit in target size 12
VERIFIC-WARNING [VERI-1209] fpu_div.v:255: expression size 32 truncated to fit in target size 7
VERIFIC-INFO [VERI-1018] fpu_round.v:38: compiling module 'fpu_round'
VERIFIC-WARNING [VERI-1209] fpu_round.v:86: expression size 13 truncated to fit in target size 12
VERIFIC-INFO [VERI-1018] fpu_exceptions.v:38: compiling module 'fpu_exceptions'
VERIFIC-WARNING [VERI-1209] fpu_double.v:227: expression size 8 truncated to fit in target size 7
Importing module fpu.
Importing module fpu_add.
Importing module fpu_div.
Importing module fpu_exceptions.
Importing module fpu_mul.
Importing module fpu_round.
Importing module fpu_sub.

3.4.1. Analyzing design hierarchy..
Top module:  \fpu
Used module:     \fpu_exceptions
Used module:     \fpu_round
Used module:     \fpu_div
Used module:     \fpu_mul
Used module:     \fpu_sub
Used module:     \fpu_add

3.4.2. Analyzing design hierarchy..
Top module:  \fpu
Used module:     \fpu_exceptions
Used module:     \fpu_round
Used module:     \fpu_div
Used module:     \fpu_mul
Used module:     \fpu_sub
Used module:     \fpu_add
Removed 0 unused modules.

yosys> proc

3.5. Executing PROC pass (convert processes to netlists).

yosys> proc_clean

3.5.1. Executing PROC_CLEAN pass (remove empty switches from decision trees).
Cleaned up 0 empty switches.

yosys> proc_rmdead

3.5.2. Executing PROC_RMDEAD pass (remove dead branches from decision trees).
Removed a total of 0 dead cases.

yosys> proc_prune

3.5.3. Executing PROC_PRUNE pass (remove redundant assignments in processes).
Removed 0 redundant assignments.
Promoted 0 assignments to connections.

yosys> proc_init

3.5.4. Executing PROC_INIT pass (extract init attributes).

yosys> proc_arst

3.5.5. Executing PROC_ARST pass (detect async resets in processes).

yosys> proc_rom

3.5.6. Executing PROC_ROM pass (convert switches to ROMs).
Converted 0 switches.

yosys> proc_mux

3.5.7. Executing PROC_MUX pass (convert decision trees to multiplexers).

yosys> proc_dlatch

3.5.8. Executing PROC_DLATCH pass (convert process syncs to latches).

yosys> proc_dff

3.5.9. Executing PROC_DFF pass (convert process syncs to FFs).

yosys> proc_memwr

3.5.10. Executing PROC_MEMWR pass (convert process memory writes to cells).

yosys> proc_clean

3.5.11. Executing PROC_CLEAN pass (remove empty switches from decision trees).
Cleaned up 0 empty switches.

yosys> opt_expr -keepdc

3.5.12. Executing OPT_EXPR pass (perform const folding).
Optimizing module fpu_sub.
<suppressed ~10 debug messages>
Optimizing module fpu_round.
<suppressed ~2 debug messages>
Optimizing module fpu_mul.
<suppressed ~21 debug messages>
Optimizing module fpu_exceptions.
<suppressed ~8 debug messages>
Optimizing module fpu_div.
<suppressed ~12 debug messages>
Optimizing module fpu_add.
<suppressed ~4 debug messages>
Optimizing module fpu.
<suppressed ~6 debug messages>

yosys> bmuxmap

3.6. Executing BMUXMAP pass.

yosys> demuxmap

3.7. Executing DEMUXMAP pass.

yosys> clean_zerowidth

yosys> flatten

3.8. Executing FLATTEN pass (flatten design).
Deleting now unused module fpu_add.
Deleting now unused module fpu_div.
Deleting now unused module fpu_exceptions.
Deleting now unused module fpu_mul.
Deleting now unused module fpu_round.
Deleting now unused module fpu_sub.
<suppressed ~6 debug messages>

yosys> bmuxmap

3.9. Executing BMUXMAP pass.

yosys> demuxmap

3.10. Executing DEMUXMAP pass.

yosys> clean_zerowidth

yosys> tribuf -logic -formal

3.11. Executing TRIBUF pass.

yosys> deminout

3.12. Executing DEMINOUT pass (demote inout ports to input or output).

yosys> opt_expr

3.13. Executing OPT_EXPR pass (perform const folding).
Optimizing module fpu.

yosys> opt_clean

3.14. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \fpu..
Removed 8 unused cells and 1779 unused wires.
<suppressed ~319 debug messages>

yosys> check

3.15. Executing CHECK pass (checking for obvious problems).
Checking module fpu...
Found and reported 0 problems.

yosys> opt_expr

3.16. Executing OPT_EXPR pass (perform const folding).
Optimizing module fpu.
<suppressed ~2 debug messages>

yosys> opt_merge -nomux

3.17. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\fpu'.
<suppressed ~51 debug messages>
Removed a total of 17 cells.

yosys> opt_muxtree

3.18. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \fpu..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
      Replacing known input bits on port A of cell $flatten\u1.$verific$mux_76$fpu_add.v:123$1677: \u1.sum -> { 1'0 \u1.sum [54:0] }
      Replacing known input bits on port B of cell $flatten\u1.$verific$mux_76$fpu_add.v:123$1677: { 1'0 \u1.sum [55:1] } -> { 2'01 \u1.sum [54:1] }
      Replacing known input bits on port A of cell $flatten\u5.$verific$mux_37$fpu_round.v:85$4891: \u5.sum_round -> { 1'0 \u5.sum_round [54:0] }
      Replacing known input bits on port B of cell $flatten\u5.$verific$mux_37$fpu_round.v:85$4891: { 1'0 \u5.sum_round [55:1] } -> { 2'01 \u5.sum_round [54:1] }
  Analyzing evaluation results.
Removed 0 multiplexer ports.
<suppressed ~250 debug messages>

yosys> opt_reduce

3.19. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \fpu.
    New ctrl vector for $pmux cell $flatten\u2.$verific$select_368$fpu_sub.v:216$5607: { $flatten\u2.$verific$n4687$4977 $flatten\u2.$verific$n4689$4979 $flatten\u2.$verific$n4691$4981 $flatten\u2.$verific$n4693$4983 $flatten\u2.$verific$n4695$4985 $flatten\u2.$verific$n4697$4987 $flatten\u2.$verific$n4699$4989 $flatten\u2.$verific$n4701$4991 $flatten\u2.$verific$n4703$4993 $flatten\u2.$verific$n4705$4995 $flatten\u2.$verific$n4707$4997 $flatten\u2.$verific$n4709$4999 $flatten\u2.$verific$n4711$5001 $flatten\u2.$verific$n4713$5003 $flatten\u2.$verific$n4715$5005 $flatten\u2.$verific$n4717$5007 $flatten\u2.$verific$n4719$5009 $flatten\u2.$verific$n4721$5011 $flatten\u2.$verific$n4723$5013 $flatten\u2.$verific$n4725$5015 $flatten\u2.$verific$n4727$5017 $flatten\u2.$verific$n4729$5019 $flatten\u2.$verific$n4731$5021 $flatten\u2.$verific$n4733$5023 $flatten\u2.$verific$n4735$5025 $flatten\u2.$verific$n4737$5027 $flatten\u2.$verific$n4739$5029 $flatten\u2.$verific$n4741$5031 $flatten\u2.$verific$n4743$5033 $flatten\u2.$verific$n4745$5035 $flatten\u2.$verific$n4747$5037 $flatten\u2.$verific$n4749$5039 $flatten\u2.$verific$n4751$5041 $flatten\u2.$verific$n4753$5043 $flatten\u2.$verific$n4755$5045 $flatten\u2.$verific$n4757$5047 $flatten\u2.$verific$n4759$5049 $flatten\u2.$verific$n4761$5051 $flatten\u2.$verific$n4763$5053 $flatten\u2.$verific$n4765$5055 $flatten\u2.$verific$n4767$5057 $flatten\u2.$verific$n4769$5059 $flatten\u2.$verific$n4771$5061 $flatten\u2.$verific$n4773$5063 $flatten\u2.$verific$n4775$5065 $flatten\u2.$verific$n4777$5067 $flatten\u2.$verific$n4779$5069 $flatten\u2.$verific$n4781$5071 $flatten\u2.$verific$n4783$5073 $flatten\u2.$verific$n4785$5075 $flatten\u2.$verific$n4787$5077 $flatten\u2.$verific$n4789$5079 $flatten\u2.$verific$n4791$5081 $flatten\u2.$verific$n4792$5082 $flatten\u2.$verific$n4793$5083 }
    New ctrl vector for $pmux cell $flatten\u3.$verific$Select_466$fpu_mul.v:271$4818: $auto$opt_reduce.cc:134:opt_pmux$5610
    New ctrl vector for $pmux cell $flatten\u3.$verific$select_465$fpu_mul.v:271$4817: { $flatten\u3.$verific$n10788$3995 $flatten\u3.$verific$n10790$3997 $flatten\u3.$verific$n10792$3999 $flatten\u3.$verific$n10794$4001 $flatten\u3.$verific$n10796$4003 $flatten\u3.$verific$n10798$4005 $flatten\u3.$verific$n10800$4007 $flatten\u3.$verific$n10802$4009 $flatten\u3.$verific$n10804$4011 $flatten\u3.$verific$n10806$4013 $flatten\u3.$verific$n10808$4015 $flatten\u3.$verific$n10810$4017 $flatten\u3.$verific$n10812$4019 $flatten\u3.$verific$n10814$4021 $flatten\u3.$verific$n10816$4023 $flatten\u3.$verific$n10818$4025 $flatten\u3.$verific$n10820$4027 $flatten\u3.$verific$n10822$4029 $flatten\u3.$verific$n10824$4031 $flatten\u3.$verific$n10826$4033 $flatten\u3.$verific$n10828$4035 $flatten\u3.$verific$n10830$4037 $flatten\u3.$verific$n10832$4039 $flatten\u3.$verific$n10834$4041 $flatten\u3.$verific$n10836$4043 $flatten\u3.$verific$n10838$4045 $flatten\u3.$verific$n10840$4047 $flatten\u3.$verific$n10842$4049 $flatten\u3.$verific$n10844$4051 $flatten\u3.$verific$n10846$4053 $flatten\u3.$verific$n10848$4055 $flatten\u3.$verific$n10850$4057 $flatten\u3.$verific$n10852$4059 $flatten\u3.$verific$n10854$4061 $flatten\u3.$verific$n10856$4063 $flatten\u3.$verific$n10858$4065 $flatten\u3.$verific$n10860$4067 $flatten\u3.$verific$n10862$4069 $flatten\u3.$verific$n10864$4071 $flatten\u3.$verific$n10866$4073 $flatten\u3.$verific$n10868$4075 $flatten\u3.$verific$n10870$4077 $flatten\u3.$verific$n10872$4079 $flatten\u3.$verific$n10874$4081 $flatten\u3.$verific$n10876$4083 $flatten\u3.$verific$n10878$4085 $flatten\u3.$verific$n10880$4087 $flatten\u3.$verific$n10882$4089 $flatten\u3.$verific$n10884$4091 $flatten\u3.$verific$n10886$4093 $flatten\u3.$verific$n10888$4095 $flatten\u3.$verific$n10890$4097 $flatten\u3.$verific$n10891$4098 $flatten\u3.$verific$n10892$4099 }
    New ctrl vector for $pmux cell $flatten\u4.$verific$select_532$fpu_div.v:352$2797: { $flatten\u4.$verific$n7751$1873 $flatten\u4.$verific$n7753$1875 $flatten\u4.$verific$n7755$1877 $flatten\u4.$verific$n7757$1879 $flatten\u4.$verific$n7759$1881 $flatten\u4.$verific$n7761$1883 $flatten\u4.$verific$n7763$1885 $flatten\u4.$verific$n7765$1887 $flatten\u4.$verific$n7767$1889 $flatten\u4.$verific$n7769$1891 $flatten\u4.$verific$n7771$1893 $flatten\u4.$verific$n7773$1895 $flatten\u4.$verific$n7775$1897 $flatten\u4.$verific$n7777$1899 $flatten\u4.$verific$n7779$1901 $flatten\u4.$verific$n7781$1903 $flatten\u4.$verific$n7783$1905 $flatten\u4.$verific$n7785$1907 $flatten\u4.$verific$n7787$1909 $flatten\u4.$verific$n7789$1911 $flatten\u4.$verific$n7791$1913 $flatten\u4.$verific$n7793$1915 $flatten\u4.$verific$n7795$1917 $flatten\u4.$verific$n7797$1919 $flatten\u4.$verific$n7799$1921 $flatten\u4.$verific$n7801$1923 $flatten\u4.$verific$n7803$1925 $flatten\u4.$verific$n7805$1927 $flatten\u4.$verific$n7807$1929 $flatten\u4.$verific$n7809$1931 $flatten\u4.$verific$n7811$1933 $flatten\u4.$verific$n7813$1935 $flatten\u4.$verific$n7815$1937 $flatten\u4.$verific$n7817$1939 $flatten\u4.$verific$n7819$1941 $flatten\u4.$verific$n7821$1943 $flatten\u4.$verific$n7823$1945 $flatten\u4.$verific$n7825$1947 $flatten\u4.$verific$n7827$1949 $flatten\u4.$verific$n7829$1951 $flatten\u4.$verific$n7831$1953 $flatten\u4.$verific$n7833$1955 $flatten\u4.$verific$n7835$1957 $flatten\u4.$verific$n7837$1959 $flatten\u4.$verific$n7839$1961 $flatten\u4.$verific$n7841$1963 $flatten\u4.$verific$n7843$1965 $flatten\u4.$verific$n7845$1967 $flatten\u4.$verific$n7847$1969 $flatten\u4.$verific$n7849$1971 $flatten\u4.$verific$n7850$1972 $flatten\u4.$verific$n7851$1973 }
    New ctrl vector for $pmux cell $flatten\u4.$verific$select_689$fpu_div.v:410$3001: { $flatten\u4.$verific$n8232$1975 $flatten\u4.$verific$n8234$1977 $flatten\u4.$verific$n8236$1979 $flatten\u4.$verific$n8238$1981 $flatten\u4.$verific$n8240$1983 $flatten\u4.$verific$n8242$1985 $flatten\u4.$verific$n8244$1987 $flatten\u4.$verific$n8246$1989 $flatten\u4.$verific$n8248$1991 $flatten\u4.$verific$n8250$1993 $flatten\u4.$verific$n8252$1995 $flatten\u4.$verific$n8254$1997 $flatten\u4.$verific$n8256$1999 $flatten\u4.$verific$n8258$2001 $flatten\u4.$verific$n8260$2003 $flatten\u4.$verific$n8262$2005 $flatten\u4.$verific$n8264$2007 $flatten\u4.$verific$n8266$2009 $flatten\u4.$verific$n8268$2011 $flatten\u4.$verific$n8270$2013 $flatten\u4.$verific$n8272$2015 $flatten\u4.$verific$n8274$2017 $flatten\u4.$verific$n8276$2019 $flatten\u4.$verific$n8278$2021 $flatten\u4.$verific$n8280$2023 $flatten\u4.$verific$n8282$2025 $flatten\u4.$verific$n8284$2027 $flatten\u4.$verific$n8286$2029 $flatten\u4.$verific$n8288$2031 $flatten\u4.$verific$n8290$2033 $flatten\u4.$verific$n8292$2035 $flatten\u4.$verific$n8294$2037 $flatten\u4.$verific$n8296$2039 $flatten\u4.$verific$n8298$2041 $flatten\u4.$verific$n8300$2043 $flatten\u4.$verific$n8302$2045 $flatten\u4.$verific$n8304$2047 $flatten\u4.$verific$n8306$2049 $flatten\u4.$verific$n8308$2051 $flatten\u4.$verific$n8310$2053 $flatten\u4.$verific$n8312$2055 $flatten\u4.$verific$n8314$2057 $flatten\u4.$verific$n8316$2059 $flatten\u4.$verific$n8318$2061 $flatten\u4.$verific$n8320$2063 $flatten\u4.$verific$n8322$2065 $flatten\u4.$verific$n8324$2067 $flatten\u4.$verific$n8326$2069 $flatten\u4.$verific$n8328$2071 $flatten\u4.$verific$n8330$2073 $flatten\u4.$verific$n8331$2074 $flatten\u4.$verific$n8332$2075 }
    New ctrl vector for $pmux cell $verific$Select_61$fpu_double.v:183$1398: { $verific$n957$20 $flatten\u6.$verific$n599$3019 $flatten\u6.$verific$n601$3021 }
    New ctrl vector for $pmux cell $verific$select_34$fpu_double.v:161$1388: { $auto$opt_reduce.cc:134:opt_pmux$5612 $flatten\u6.$verific$n599$3019 $flatten\u6.$verific$n601$3021 }
    New ctrl vector for $pmux cell $verific$select_47$fpu_double.v:172$1391: { $auto$opt_reduce.cc:134:opt_pmux$5614 $flatten\u6.$verific$n599$3019 $flatten\u6.$verific$n601$3021 }
    New ctrl vector for $pmux cell $verific$select_74$fpu_double.v:194$1401: { $flatten\u2.$verific$n918$4934 $flatten\u6.$verific$n597$3017 $flatten\u6.$verific$n599$3019 $flatten\u6.$verific$n601$3021 }
  Optimizing cells in module \fpu.
Performed a total of 9 changes.

yosys> opt_merge

3.20. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\fpu'.
<suppressed ~6 debug messages>
Removed a total of 2 cells.

yosys> opt_share

3.21. Executing OPT_SHARE pass.
    Found cells that share an operand and can be merged by moving the $mux $flatten\u2.$verific$mux_104$fpu_sub.v:149$5293 in front of them:
        $flatten\u2.$verific$shift_left_102$fpu_sub.v:149$5291
        $flatten\u2.$verific$shift_left_103$fpu_sub.v:149$5292


yosys> opt_dff -nosdff -nodffe

3.22. Executing OPT_DFF pass (perform DFF optimizations).
Removing never-active async load on $verific$rmode_reg_reg$fpu_double.v:262$1476 ($aldff) from module fpu.
Removing never-active async load on $verific$out_reg$fpu_double.v:301$1515 ($aldff) from module fpu.
Removing never-active async load on $verific$opb_reg_reg$fpu_double.v:262$1474 ($aldff) from module fpu.
Removing never-active async load on $verific$opa_reg_reg$fpu_double.v:262$1473 ($aldff) from module fpu.
Removing never-active async load on $verific$mantissa_round_reg$fpu_double.v:162$1389 ($aldff) from module fpu.
Removing never-active async load on $flatten\u1.$verific$exponent_reg$fpu_add.v:128$1755 ($aldff) from module fpu.
Removing never-active async load on $verific$fpu_op_reg_reg$fpu_double.v:262$1475 ($aldff) from module fpu.
Removing never-active async load on $verific$exponent_round_reg$fpu_double.v:173$1392 ($aldff) from module fpu.
Removing never-active async load on $verific$exp_addsub_reg$fpu_double.v:218$1432 ($aldff) from module fpu.
Removing never-active async load on $flatten\u1.$verific$exponent_large_reg$fpu_add.v:128$1742 ($aldff) from module fpu.
Removing never-active async load on $flatten\u1.$verific$exponent_diff_reg$fpu_add.v:128$1748 ($aldff) from module fpu.
Removing never-active async load on $flatten\u1.$verific$exponent_b_reg$fpu_add.v:128$1737 ($aldff) from module fpu.
Removing never-active async load on $flatten\u1.$verific$exponent_a_reg$fpu_add.v:128$1736 ($aldff) from module fpu.
Removing never-active async load on $verific$count_ready_reg$fpu_double.v:228$1439 ($aldff) from module fpu.
Removing never-active async load on $verific$count_cycles_reg$fpu_double.v:195$1402 ($aldff) from module fpu.
Removing never-active async load on $verific$addsub_out_reg$fpu_double.v:218$1430 ($aldff) from module fpu.
Removing never-active async load on $flatten\u1.$verific$exponent_2_reg$fpu_add.v:128$1757 ($aldff) from module fpu.
Removing never-active async load on $flatten\u6.$verific$out_reg$fpu_exceptions.v:278$3936 ($aldff) from module fpu.
Removing never-active async load on $flatten\u6.$verific$out_inf_reg$fpu_exceptions.v:256$3905 ($aldff) from module fpu.
Removing never-active async load on $flatten\u6.$verific$out_2_reg$fpu_exceptions.v:256$3908 ($aldff) from module fpu.
Removing never-active async load on $flatten\u6.$verific$out_1_reg$fpu_exceptions.v:256$3907 ($aldff) from module fpu.
Removing never-active async load on $flatten\u6.$verific$out_0_reg$fpu_exceptions.v:256$3906 ($aldff) from module fpu.
Removing never-active async load on $flatten\u6.$verific$inf_round_down_reg$fpu_exceptions.v:256$3904 ($aldff) from module fpu.
Removing never-active async load on $flatten\u6.$verific$NaN_output_reg$fpu_exceptions.v:256$3903 ($aldff) from module fpu.
Removing never-active async load on $flatten\u6.$verific$NaN_output_0_reg$fpu_exceptions.v:256$3902 ($aldff) from module fpu.
Removing never-active async load on $flatten\u5.$verific$sum_round_reg$fpu_round.v:91$4907 ($aldff) from module fpu.
Removing never-active async load on $flatten\u5.$verific$sum_round_2_reg$fpu_round.v:91$4908 ($aldff) from module fpu.
Removing never-active async load on $flatten\u5.$verific$sum_final_reg$fpu_round.v:91$4910 ($aldff) from module fpu.
Removing never-active async load on $flatten\u5.$verific$round_out_reg$fpu_round.v:91$4912 ($aldff) from module fpu.
Removing never-active async load on $flatten\u5.$verific$exponent_round_reg$fpu_round.v:91$4909 ($aldff) from module fpu.
Removing never-active async load on $flatten\u5.$verific$exponent_final_reg$fpu_round.v:91$4911 ($aldff) from module fpu.
Removing never-active async load on $flatten\u4.$verific$remainder_shift_term_reg$fpu_div.v:261$2561 ($aldff) from module fpu.
Removing never-active async load on $flatten\u4.$verific$remainder_reg$fpu_div.v:181$2406 ($aldff) from module fpu.
Removing never-active async load on $flatten\u4.$verific$remainder_out_reg$fpu_div.v:160$2333 ($aldff) from module fpu.
Removing never-active async load on $flatten\u4.$verific$remainder_b_reg$fpu_div.v:261$2562 ($aldff) from module fpu.
Removing never-active async load on $flatten\u4.$verific$quotient_reg$fpu_div.v:169$2395 ($aldff) from module fpu.
Removing never-active async load on $flatten\u4.$verific$quotient_out_reg$fpu_div.v:160$2332 ($aldff) from module fpu.
Removing never-active async load on $flatten\u4.$verific$mantissa_b_reg$fpu_div.v:261$2556 ($aldff) from module fpu.
Removing never-active async load on $flatten\u4.$verific$mantissa_a_reg$fpu_div.v:261$2555 ($aldff) from module fpu.
Removing never-active async load on $flatten\u4.$verific$mantissa_1_reg$fpu_div.v:261$2565 ($aldff) from module fpu.
Removing never-active async load on $flatten\u1.$verific$exponent_small_reg$fpu_add.v:128$1741 ($aldff) from module fpu.
Removing never-active async load on $flatten\u4.$verific$exponent_out_reg$fpu_div.v:138$2319 ($aldff) from module fpu.
Removing never-active async load on $flatten\u4.$verific$expon_uf_term_4_reg$fpu_div.v:261$2549 ($aldff) from module fpu.
Removing never-active async load on $flatten\u4.$verific$expon_uf_term_3_reg$fpu_div.v:261$2547 ($aldff) from module fpu.
Removing never-active async load on $flatten\u4.$verific$expon_uf_term_2_reg$fpu_div.v:261$2546 ($aldff) from module fpu.
Removing never-active async load on $flatten\u4.$verific$expon_uf_term_1_reg$fpu_div.v:261$2540 ($aldff) from module fpu.
Removing never-active async load on $flatten\u4.$verific$expon_term_reg$fpu_div.v:261$2538 ($aldff) from module fpu.
Removing never-active async load on $flatten\u4.$verific$expon_shift_b_reg$fpu_div.v:261$2544 ($aldff) from module fpu.
Removing never-active async load on $flatten\u4.$verific$expon_shift_a_reg$fpu_div.v:261$2543 ($aldff) from module fpu.
Removing never-active async load on $flatten\u4.$verific$expon_final_5_reg$fpu_div.v:261$2554 ($aldff) from module fpu.
Removing never-active async load on $flatten\u4.$verific$expon_final_4_reg$fpu_div.v:261$2551 ($aldff) from module fpu.
Removing never-active async load on $flatten\u4.$verific$expon_final_3_reg$fpu_div.v:261$2550 ($aldff) from module fpu.
Removing never-active async load on $flatten\u4.$verific$expon_final_2_reg$fpu_div.v:261$2542 ($aldff) from module fpu.
Removing never-active async load on $flatten\u4.$verific$expon_final_1_reg$fpu_div.v:261$2541 ($aldff) from module fpu.
Removing never-active async load on $flatten\u4.$verific$divisor_shift_2_reg$fpu_div.v:261$2560 ($aldff) from module fpu.
Removing never-active async load on $flatten\u4.$verific$divisor_reg_reg$fpu_div.v:197$2420 ($aldff) from module fpu.
Removing never-active async load on $flatten\u4.$verific$divisor_b_shifted_reg$fpu_div.v:261$2564 ($aldff) from module fpu.
Removing never-active async load on $flatten\u4.$verific$divisor_b_reg$fpu_div.v:261$2558 ($aldff) from module fpu.
Removing never-active async load on $flatten\u4.$verific$dividend_shift_2_reg$fpu_div.v:261$2559 ($aldff) from module fpu.
Removing never-active async load on $flatten\u4.$verific$dividend_reg_reg$fpu_div.v:197$2419 ($aldff) from module fpu.
Removing never-active async load on $flatten\u4.$verific$dividend_a_shifted_reg$fpu_div.v:261$2563 ($aldff) from module fpu.
Removing never-active async load on $flatten\u4.$verific$dividend_a_reg$fpu_div.v:261$2557 ($aldff) from module fpu.
Removing never-active async load on $flatten\u4.$verific$count_out_reg$fpu_div.v:148$2328 ($aldff) from module fpu.
Removing never-active async load on $flatten\u3.$verific$sum_8_reg$fpu_mul.v:211$4592 ($aldff) from module fpu.
Removing never-active async load on $flatten\u3.$verific$sum_7_reg$fpu_mul.v:211$4591 ($aldff) from module fpu.
Removing never-active async load on $flatten\u3.$verific$sum_6_reg$fpu_mul.v:211$4590 ($aldff) from module fpu.
Removing never-active async load on $flatten\u3.$verific$sum_5_reg$fpu_mul.v:211$4589 ($aldff) from module fpu.
Removing never-active async load on $flatten\u3.$verific$sum_4_reg$fpu_mul.v:211$4588 ($aldff) from module fpu.
Removing never-active async load on $flatten\u3.$verific$sum_3_reg$fpu_mul.v:211$4587 ($aldff) from module fpu.
Removing never-active async load on $flatten\u3.$verific$sum_2_reg$fpu_mul.v:211$4586 ($aldff) from module fpu.
Removing never-active async load on $flatten\u3.$verific$sum_1_reg$fpu_mul.v:211$4585 ($aldff) from module fpu.
Removing never-active async load on $flatten\u3.$verific$sum_0_reg$fpu_mul.v:211$4584 ($aldff) from module fpu.
Removing never-active CLR on $flatten\u3.$verific$product_shift_reg$fpu_mul.v:271$4346 ($dlatchsr) from module fpu.
Removing never-active ARST on $flatten\u3.$verific$product_shift_reg$fpu_mul.v:271$4346 ($dlatchsr) from module fpu.
Removing never-active async load on $flatten\u3.$verific$product_shift_2_reg$fpu_mul.v:211$4602 ($aldff) from module fpu.
Removing never-active async load on $flatten\u3.$verific$product_reg$fpu_mul.v:211$4593 ($aldff) from module fpu.
Removing never-active async load on $flatten\u3.$verific$product_j_reg$fpu_mul.v:211$4583 ($aldff) from module fpu.
Removing never-active async load on $flatten\u3.$verific$product_i_reg$fpu_mul.v:211$4582 ($aldff) from module fpu.
Removing never-active async load on $flatten\u3.$verific$product_h_reg$fpu_mul.v:211$4581 ($aldff) from module fpu.
Removing never-active async load on $flatten\u3.$verific$product_g_reg$fpu_mul.v:211$4580 ($aldff) from module fpu.
Removing never-active async load on $flatten\u3.$verific$product_f_reg$fpu_mul.v:211$4579 ($aldff) from module fpu.
Removing never-active async load on $flatten\u3.$verific$product_e_reg$fpu_mul.v:211$4578 ($aldff) from module fpu.
Removing never-active async load on $flatten\u3.$verific$product_d_reg$fpu_mul.v:211$4577 ($aldff) from module fpu.
Removing never-active async load on $flatten\u3.$verific$product_c_reg$fpu_mul.v:211$4576 ($aldff) from module fpu.
Removing never-active async load on $flatten\u3.$verific$product_b_reg$fpu_mul.v:211$4575 ($aldff) from module fpu.
Removing never-active async load on $flatten\u3.$verific$product_a_reg$fpu_mul.v:211$4574 ($aldff) from module fpu.
Removing never-active async load on $flatten\u3.$verific$product_6_reg$fpu_mul.v:211$4599 ($aldff) from module fpu.
Removing never-active async load on $flatten\u3.$verific$product_5_reg$fpu_mul.v:211$4598 ($aldff) from module fpu.
Removing never-active async load on $flatten\u3.$verific$product_4_reg$fpu_mul.v:211$4597 ($aldff) from module fpu.
Removing never-active async load on $flatten\u3.$verific$product_3_reg$fpu_mul.v:211$4596 ($aldff) from module fpu.
Removing never-active async load on $flatten\u3.$verific$product_2_reg$fpu_mul.v:211$4595 ($aldff) from module fpu.
Removing never-active async load on $flatten\u3.$verific$product_1_reg$fpu_mul.v:211$4594 ($aldff) from module fpu.
Removing never-active async load on $flatten\u3.$verific$mul_b_reg$fpu_mul.v:211$4573 ($aldff) from module fpu.
Removing never-active async load on $flatten\u3.$verific$mul_a_reg$fpu_mul.v:211$4572 ($aldff) from module fpu.
Removing never-active async load on $flatten\u3.$verific$mantissa_b_reg$fpu_mul.v:211$4555 ($aldff) from module fpu.
Removing never-active async load on $flatten\u3.$verific$mantissa_a_reg$fpu_mul.v:211$4554 ($aldff) from module fpu.
Removing never-active async load on $flatten\u3.$verific$exponent_under_reg$fpu_mul.v:211$4565 ($aldff) from module fpu.
Removing never-active async load on $flatten\u3.$verific$exponent_terms_reg$fpu_mul.v:211$4563 ($aldff) from module fpu.
Removing never-active async load on $flatten\u3.$verific$exponent_b_reg$fpu_mul.v:211$4557 ($aldff) from module fpu.
Removing never-active async load on $flatten\u3.$verific$exponent_a_reg$fpu_mul.v:211$4556 ($aldff) from module fpu.
Removing never-active async load on $flatten\u3.$verific$exponent_5_reg$fpu_mul.v:211$4601 ($aldff) from module fpu.
Removing never-active async load on $flatten\u3.$verific$exponent_4_reg$fpu_mul.v:211$4570 ($aldff) from module fpu.
Removing never-active async load on $flatten\u3.$verific$exponent_3_reg$fpu_mul.v:211$4569 ($aldff) from module fpu.
Removing never-active async load on $flatten\u3.$verific$exponent_2_reg$fpu_mul.v:211$4567 ($aldff) from module fpu.
Removing never-active async load on $flatten\u3.$verific$exponent_1_reg$fpu_mul.v:211$4566 ($aldff) from module fpu.
Removing never-active async load on $flatten\u2.$verific$subtrahend_reg$fpu_sub.v:155$5382 ($aldff) from module fpu.
Removing never-active async load on $flatten\u2.$verific$subtra_shift_reg$fpu_sub.v:155$5383 ($aldff) from module fpu.
Removing never-active async load on $flatten\u2.$verific$subtra_shift_3_reg$fpu_sub.v:155$5384 ($aldff) from module fpu.
Removing never-active async load on $flatten\u2.$verific$minuend_reg$fpu_sub.v:155$5381 ($aldff) from module fpu.
Removing never-active async load on $flatten\u2.$verific$mantissa_small_reg$fpu_sub.v:155$5374 ($aldff) from module fpu.
Removing never-active async load on $flatten\u2.$verific$mantissa_large_reg$fpu_sub.v:155$5375 ($aldff) from module fpu.
Removing never-active async load on $flatten\u2.$verific$mantissa_b_reg$fpu_sub.v:155$5366 ($aldff) from module fpu.
Removing never-active async load on $flatten\u2.$verific$mantissa_a_reg$fpu_sub.v:155$5365 ($aldff) from module fpu.
Removing never-active async load on $flatten\u2.$verific$exponent_small_reg$fpu_sub.v:155$5372 ($aldff) from module fpu.
Removing never-active async load on $flatten\u2.$verific$exponent_reg$fpu_sub.v:155$5390 ($aldff) from module fpu.
Removing never-active async load on $flatten\u2.$verific$exponent_large_reg$fpu_sub.v:155$5373 ($aldff) from module fpu.
Removing never-active async load on $flatten\u2.$verific$exponent_diff_reg$fpu_sub.v:155$5380 ($aldff) from module fpu.
Removing never-active async load on $flatten\u2.$verific$exponent_b_reg$fpu_sub.v:155$5364 ($aldff) from module fpu.
Removing never-active async load on $flatten\u2.$verific$exponent_a_reg$fpu_sub.v:155$5363 ($aldff) from module fpu.
Removing never-active async load on $flatten\u2.$verific$exponent_2_reg$fpu_sub.v:155$5391 ($aldff) from module fpu.
Removing never-active async load on $flatten\u2.$verific$diff_shift_2_reg$fpu_sub.v:155$5385 ($aldff) from module fpu.
Removing never-active async load on $flatten\u2.$verific$diff_reg$fpu_sub.v:155$5386 ($aldff) from module fpu.
Removing never-active async load on $flatten\u2.$verific$diff_2_reg$fpu_sub.v:155$5392 ($aldff) from module fpu.
Removing never-active async load on $flatten\u2.$verific$diff_1_reg$fpu_sub.v:155$5389 ($aldff) from module fpu.
Removing never-active async load on $flatten\u1.$verific$sum_reg$fpu_add.v:128$1753 ($aldff) from module fpu.
Removing never-active async load on $flatten\u1.$verific$sum_2_reg$fpu_add.v:128$1754 ($aldff) from module fpu.
Removing never-active async load on $flatten\u1.$verific$small_shift_reg$fpu_add.v:128$1751 ($aldff) from module fpu.
Removing never-active async load on $flatten\u1.$verific$small_shift_3_reg$fpu_add.v:128$1752 ($aldff) from module fpu.
Removing never-active async load on $flatten\u1.$verific$small_add_reg$fpu_add.v:128$1750 ($aldff) from module fpu.
Removing never-active async load on $flatten\u1.$verific$mantissa_small_reg$fpu_add.v:128$1743 ($aldff) from module fpu.
Removing never-active async load on $flatten\u1.$verific$mantissa_large_reg$fpu_add.v:128$1744 ($aldff) from module fpu.
Removing never-active async load on $flatten\u1.$verific$mantissa_b_reg$fpu_add.v:128$1739 ($aldff) from module fpu.
Removing never-active async load on $flatten\u1.$verific$mantissa_a_reg$fpu_add.v:128$1738 ($aldff) from module fpu.
Removing never-active async load on $flatten\u1.$verific$large_add_reg$fpu_add.v:128$1749 ($aldff) from module fpu.

yosys> opt_clean

3.23. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \fpu..
Removed 2 unused cells and 23 unused wires.
<suppressed ~3 debug messages>

yosys> opt_expr

3.24. Executing OPT_EXPR pass (perform const folding).
Optimizing module fpu.
<suppressed ~1 debug messages>

yosys> opt_muxtree

3.25. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \fpu..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Removed 0 multiplexer ports.
<suppressed ~251 debug messages>

yosys> opt_reduce

3.26. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \fpu.
Performed a total of 0 changes.

yosys> opt_merge

3.27. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\fpu'.
Removed a total of 0 cells.

yosys> opt_share

3.28. Executing OPT_SHARE pass.

yosys> opt_dff -nosdff -nodffe

3.29. Executing OPT_DFF pass (perform DFF optimizations).

yosys> opt_clean

3.30. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \fpu..
Removed 0 unused cells and 1 unused wires.
<suppressed ~1 debug messages>

yosys> opt_expr

3.31. Executing OPT_EXPR pass (perform const folding).
Optimizing module fpu.
MAX OPT ITERATION = 2

yosys> fsm -encoding binary

3.32. Executing FSM pass (extract and optimize FSM).

yosys> fsm_detect

3.32.1. Executing FSM_DETECT pass (finding FSMs in design).
Not marking fpu.count_cycles as FSM state register:
    Users of register don't seem to benefit from recoding.
Not marking fpu.u2.diff_shift_2 as FSM state register:
    Users of register don't seem to benefit from recoding.
Not marking fpu.u4.dividend_shift_2 as FSM state register:
    Users of register don't seem to benefit from recoding.
Not marking fpu.u4.divisor_shift_2 as FSM state register:
    Users of register don't seem to benefit from recoding.
Not marking fpu.u6.inf_round_down as FSM state register:
    Users of register don't seem to benefit from recoding.

yosys> fsm_extract

3.32.2. Executing FSM_EXTRACT pass (extracting FSM from design).

yosys> fsm_opt

3.32.3. Executing FSM_OPT pass (simple optimizations of FSMs).

yosys> opt_clean

3.32.4. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \fpu..

yosys> fsm_opt

3.32.5. Executing FSM_OPT pass (simple optimizations of FSMs).

yosys> fsm_recode -encoding binary

3.32.6. Executing FSM_RECODE pass (re-assigning FSM state encoding).

yosys> fsm_info

3.32.7. Executing FSM_INFO pass (dumping all available information on FSM cells).

yosys> fsm_map

3.32.8. Executing FSM_MAP pass (mapping FSMs to basic logic).

yosys> opt_expr

3.33. Executing OPT_EXPR pass (perform const folding).
Optimizing module fpu.

yosys> opt_merge -nomux

3.34. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\fpu'.
Removed a total of 0 cells.

yosys> opt_muxtree

3.35. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \fpu..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Removed 0 multiplexer ports.
<suppressed ~251 debug messages>

yosys> opt_reduce

3.36. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \fpu.
Performed a total of 0 changes.

yosys> opt_merge

3.37. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\fpu'.
Removed a total of 0 cells.

yosys> opt_share

3.38. Executing OPT_SHARE pass.

yosys> opt_dff -nosdff -sat

3.39. Executing OPT_DFF pass (perform DFF optimizations).
Adding EN signal on $verific$underflow_reg$fpu_double.v:301$1510 ($dff) from module fpu (D = $verific$n2475$74, Q = \underflow).
Adding EN signal on $verific$rmode_reg_reg$fpu_double.v:262$1476 ($dff) from module fpu (D = $verific$n2037$125, Q = \rmode_reg).
Adding EN signal on $verific$overflow_reg$fpu_double.v:301$1511 ($dff) from module fpu (D = $verific$n2476$75, Q = \overflow).
Adding EN signal on $verific$out_reg$fpu_double.v:301$1515 ($dff) from module fpu (D = $verific$n2480$129, Q = \out).
Adding EN signal on $verific$opb_reg_reg$fpu_double.v:262$1474 ($dff) from module fpu (D = $verific$n1968$123, Q = \opb_reg).
Adding EN signal on $verific$opa_reg_reg$fpu_double.v:262$1473 ($dff) from module fpu (D = $verific$n1903$122, Q = \opa_reg).
Adding EN signal on $verific$op_enable_reg$fpu_double.v:262$1477 ($dff) from module fpu (D = $verific$n2040$53, Q = \op_enable).
Adding EN signal on $verific$invalid_reg$fpu_double.v:301$1514 ($dff) from module fpu (D = $verific$n2479$78, Q = \invalid).
Adding EN signal on $verific$inexact_reg$fpu_double.v:301$1512 ($dff) from module fpu (D = $verific$n2477$76, Q = \inexact).
Adding EN signal on $verific$fpu_op_reg_reg$fpu_double.v:262$1475 ($dff) from module fpu (D = $verific$n2033$124, Q = \fpu_op_reg).
Adding EN signal on $verific$exception_reg$fpu_double.v:301$1513 ($dff) from module fpu (D = $verific$n2478$77, Q = \exception).
Adding EN signal on $verific$count_ready_reg$fpu_double.v:228$1439 ($dff) from module fpu (D = $verific$n1452$110, Q = \count_ready).
Adding EN signal on $flatten\u6.$verific$underflow_trigger_reg$fpu_exceptions.v:256$3894 ($dff) from module fpu (D = $flatten\u6.$verific$n2149$3380, Q = \u6.underflow_trigger).
Adding EN signal on $flatten\u6.$verific$underflow_reg$fpu_exceptions.v:278$3931 ($dff) from module fpu (D = $flatten\u6.$verific$n3324$3401, Q = \u6.underflow).
Adding EN signal on $flatten\u6.$verific$subtract_reg$fpu_exceptions.v:256$3857 ($dff) from module fpu (D = $flatten\u6.$verific$n2112$3343, Q = \u6.subtract).
Adding EN signal on $flatten\u6.$verific$sub_inf_reg$fpu_exceptions.v:256$3881 ($dff) from module fpu (D = $flatten\u6.$verific$n2136$3367, Q = \u6.sub_inf).
Adding EN signal on $flatten\u6.$verific$round_to_zero_reg$fpu_exceptions.v:256$3888 ($dff) from module fpu (D = $flatten\u6.$verific$n2143$3374, Q = \u6.round_to_zero).
Adding EN signal on $flatten\u6.$verific$round_to_pos_inf_reg$fpu_exceptions.v:256$3889 ($dff) from module fpu (D = $flatten\u6.$verific$n2144$3375, Q = \u6.round_to_pos_inf).
Adding EN signal on $flatten\u6.$verific$round_to_neg_inf_reg$fpu_exceptions.v:256$3890 ($dff) from module fpu (D = $flatten\u6.$verific$n2145$3376, Q = \u6.round_to_neg_inf).
Adding EN signal on $flatten\u6.$verific$overflow_trigger_reg$fpu_exceptions.v:256$3896 ($dff) from module fpu (D = $flatten\u6.$verific$n2151$3382, Q = \u6.overflow_trigger).
Adding EN signal on $flatten\u6.$verific$overflow_reg$fpu_exceptions.v:278$3932 ($dff) from module fpu (D = $flatten\u6.$verific$n3325$3402, Q = \u6.overflow).
Adding EN signal on $flatten\u6.$verific$out_reg$fpu_exceptions.v:278$3936 ($dff) from module fpu (D = $flatten\u6.$verific$n3329$3435, Q = \u6.out).
Adding EN signal on $flatten\u6.$verific$out_pos_inf_reg$fpu_exceptions.v:256$3885 ($dff) from module fpu (D = $flatten\u6.$verific$n2140$3371, Q = \u6.out_pos_inf).
Adding EN signal on $flatten\u6.$verific$out_neg_inf_reg$fpu_exceptions.v:256$3886 ($dff) from module fpu (D = $flatten\u6.$verific$n2141$3372, Q = \u6.out_neg_inf).
Adding EN signal on $flatten\u6.$verific$out_inf_trigger_reg$fpu_exceptions.v:256$3884 ($dff) from module fpu (D = $flatten\u6.$verific$n2139$3370, Q = \u6.out_inf_trigger).
Adding EN signal on $flatten\u6.$verific$out_inf_reg$fpu_exceptions.v:256$3905 ($dff) from module fpu (D = $flatten\u6.$verific$n2349$3429, Q = \u6.out_inf).
Adding EN signal on $flatten\u6.$verific$out_2_reg$fpu_exceptions.v:256$3908 ($dff) from module fpu (D = $flatten\u6.$verific$n2543$3432, Q = \u6.out_2).
Adding EN signal on $flatten\u6.$verific$out_1_reg$fpu_exceptions.v:256$3907 ($dff) from module fpu (D = $flatten\u6.$verific$n2478$3431, Q = \u6.out_1).
Adding EN signal on $flatten\u6.$verific$out_0_reg$fpu_exceptions.v:256$3906 ($dff) from module fpu (D = $flatten\u6.$verific$n2413$3430, Q = \u6.out_0).
Adding EN signal on $flatten\u6.$verific$opb_pos_inf_reg$fpu_exceptions.v:256$3865 ($dff) from module fpu (D = $flatten\u6.$verific$n2120$3351, Q = \u6.opb_pos_inf).
Adding EN signal on $flatten\u6.$verific$opb_neg_inf_reg$fpu_exceptions.v:256$3867 ($dff) from module fpu (D = $flatten\u6.$verific$n2122$3353, Q = \u6.opb_neg_inf).
Adding EN signal on $flatten\u6.$verific$opb_inf_reg$fpu_exceptions.v:256$3869 ($dff) from module fpu (D = $flatten\u6.$verific$n2124$3355, Q = \u6.opb_inf).
Adding EN signal on $flatten\u6.$verific$opb_et_zero_reg$fpu_exceptions.v:256$3854 ($dff) from module fpu (D = $flatten\u6.$verific$n2109$3340, Q = \u6.opb_et_zero).
Adding EN signal on $flatten\u6.$verific$opb_SNaN_reg$fpu_exceptions.v:256$3863 ($dff) from module fpu (D = $flatten\u6.$verific$n2118$3349, Q = \u6.opb_SNaN).
Adding EN signal on $flatten\u6.$verific$opb_QNaN_reg$fpu_exceptions.v:256$3861 ($dff) from module fpu (D = $flatten\u6.$verific$n2116$3347, Q = \u6.opb_QNaN).
Adding EN signal on $flatten\u6.$verific$opa_pos_inf_reg$fpu_exceptions.v:256$3864 ($dff) from module fpu (D = $flatten\u6.$verific$n2119$3350, Q = \u6.opa_pos_inf).
Adding EN signal on $flatten\u6.$verific$opa_neg_inf_reg$fpu_exceptions.v:256$3866 ($dff) from module fpu (D = $flatten\u6.$verific$n2121$3352, Q = \u6.opa_neg_inf).
Adding EN signal on $flatten\u6.$verific$opa_inf_reg$fpu_exceptions.v:256$3868 ($dff) from module fpu (D = $flatten\u6.$verific$n2123$3354, Q = \u6.opa_inf).
Adding EN signal on $flatten\u6.$verific$opa_et_zero_reg$fpu_exceptions.v:256$3853 ($dff) from module fpu (D = $flatten\u6.$verific$n2108$3339, Q = \u6.opa_et_zero).
Adding EN signal on $flatten\u6.$verific$opa_SNaN_reg$fpu_exceptions.v:256$3862 ($dff) from module fpu (D = $flatten\u6.$verific$n2117$3348, Q = \u6.opa_SNaN).
Adding EN signal on $flatten\u6.$verific$opa_QNaN_reg$fpu_exceptions.v:256$3860 ($dff) from module fpu (D = $flatten\u6.$verific$n2115$3346, Q = \u6.opa_QNaN).
Adding EN signal on $flatten\u6.$verific$multiply_reg$fpu_exceptions.v:256$3858 ($dff) from module fpu (D = $flatten\u6.$verific$n2113$3344, Q = \u6.multiply).
Adding EN signal on $flatten\u6.$verific$mul_uf_reg$fpu_exceptions.v:256$3892 ($dff) from module fpu (D = $flatten\u6.$verific$n2147$3378, Q = \u6.mul_uf).
Adding EN signal on $flatten\u6.$verific$mul_inf_reg$fpu_exceptions.v:256$3878 ($dff) from module fpu (D = $flatten\u6.$verific$n2133$3364, Q = \u6.mul_inf).
Adding EN signal on $flatten\u6.$verific$mul_0_by_inf_reg$fpu_exceptions.v:256$3877 ($dff) from module fpu (D = $flatten\u6.$verific$n2132$3363, Q = \u6.mul_0_by_inf).
Adding EN signal on $flatten\u6.$verific$invalid_trigger_reg$fpu_exceptions.v:256$3895 ($dff) from module fpu (D = $flatten\u6.$verific$n2150$3381, Q = \u6.invalid_trigger).
Adding EN signal on $flatten\u6.$verific$invalid_reg$fpu_exceptions.v:278$3935 ($dff) from module fpu (D = $flatten\u6.$verific$n3328$3405, Q = \u6.invalid).
Adding EN signal on $flatten\u6.$verific$inf_round_down_trigger_reg$fpu_exceptions.v:256$3891 ($dff) from module fpu (D = $flatten\u6.$verific$n2146$3377, Q = \u6.inf_round_down_trigger).
Adding EN signal on $flatten\u6.$verific$inf_round_down_reg$fpu_exceptions.v:256$3904 ($dff) from module fpu (D = $flatten\u6.$verific$n2285$3428, Q = \u6.inf_round_down).
Adding EN signal on $flatten\u6.$verific$inexact_trigger_reg$fpu_exceptions.v:256$3897 ($dff) from module fpu (D = $flatten\u6.$verific$n2152$3383, Q = \u6.inexact_trigger).
Adding EN signal on $flatten\u6.$verific$inexact_reg$fpu_exceptions.v:278$3933 ($dff) from module fpu (D = $flatten\u6.$verific$n3326$3403, Q = \u6.inexact).
Adding EN signal on $flatten\u6.$verific$in_et_zero_reg$fpu_exceptions.v:256$3852 ($dff) from module fpu (D = $flatten\u6.$verific$n2107$3338, Q = \u6.in_et_zero).
Adding EN signal on $flatten\u6.$verific$exception_reg$fpu_exceptions.v:278$3934 ($dff) from module fpu (D = $flatten\u6.$verific$n3327$3404, Q = \u6.exception).
Adding EN signal on $flatten\u6.$verific$except_trigger_reg$fpu_exceptions.v:256$3898 ($dff) from module fpu (D = $flatten\u6.$verific$n2153$3384, Q = \u6.except_trigger).
Adding EN signal on $flatten\u6.$verific$ex_enable_reg$fpu_exceptions.v:278$3930 ($dff) from module fpu (D = $flatten\u6.$verific$n3323$3400, Q = \u6.ex_enable).
Adding EN signal on $flatten\u6.$verific$enable_trigger_reg$fpu_exceptions.v:256$3899 ($dff) from module fpu (D = $flatten\u6.$verific$n2154$3385, Q = \u6.enable_trigger).
Adding EN signal on $flatten\u6.$verific$divide_reg$fpu_exceptions.v:256$3859 ($dff) from module fpu (D = $flatten\u6.$verific$n2114$3345, Q = \u6.divide).
Adding EN signal on $flatten\u6.$verific$div_uf_reg$fpu_exceptions.v:256$3893 ($dff) from module fpu (D = $flatten\u6.$verific$n2148$3379, Q = \u6.div_uf).
Adding EN signal on $flatten\u6.$verific$div_inf_reg$fpu_exceptions.v:256$3879 ($dff) from module fpu (D = $flatten\u6.$verific$n2134$3365, Q = \u6.div_inf).
Adding EN signal on $flatten\u6.$verific$div_inf_by_inf_reg$fpu_exceptions.v:256$3875 ($dff) from module fpu (D = $flatten\u6.$verific$n2130$3361, Q = \u6.div_inf_by_inf).
Adding EN signal on $flatten\u6.$verific$div_by_inf_reg$fpu_exceptions.v:256$3876 ($dff) from module fpu (D = $flatten\u6.$verific$n2131$3362, Q = \u6.div_by_inf).
Adding EN signal on $flatten\u6.$verific$div_by_0_reg$fpu_exceptions.v:256$3873 ($dff) from module fpu (D = $flatten\u6.$verific$n2128$3359, Q = \u6.div_by_0).
Adding EN signal on $flatten\u6.$verific$div_0_by_0_reg$fpu_exceptions.v:256$3874 ($dff) from module fpu (D = $flatten\u6.$verific$n2129$3360, Q = \u6.div_0_by_0).
Adding EN signal on $flatten\u6.$verific$addsub_inf_reg$fpu_exceptions.v:256$3883 ($dff) from module fpu (D = $flatten\u6.$verific$n2138$3369, Q = \u6.addsub_inf).
Adding EN signal on $flatten\u6.$verific$addsub_inf_invalid_reg$fpu_exceptions.v:256$3882 ($dff) from module fpu (D = $flatten\u6.$verific$n2137$3368, Q = \u6.addsub_inf_invalid).
Adding EN signal on $flatten\u6.$verific$add_reg$fpu_exceptions.v:256$3856 ($dff) from module fpu (D = $flatten\u6.$verific$n2111$3342, Q = \u6.add).
Adding EN signal on $flatten\u6.$verific$add_inf_reg$fpu_exceptions.v:256$3880 ($dff) from module fpu (D = $flatten\u6.$verific$n2135$3366, Q = \u6.add_inf).
Adding EN signal on $flatten\u6.$verific$a_NaN_reg$fpu_exceptions.v:256$3872 ($dff) from module fpu (D = $flatten\u6.$verific$n2127$3358, Q = \u6.a_NaN).
Adding EN signal on $flatten\u6.$verific$SNaN_trigger_reg$fpu_exceptions.v:256$3901 ($dff) from module fpu (D = $flatten\u6.$verific$n2156$3387, Q = \u6.SNaN_trigger).
Adding EN signal on $flatten\u6.$verific$SNaN_input_reg$fpu_exceptions.v:256$3871 ($dff) from module fpu (D = $flatten\u6.$verific$n2126$3357, Q = \u6.SNaN_input).
Adding EN signal on $flatten\u6.$verific$NaN_output_reg$fpu_exceptions.v:256$3903 ($dff) from module fpu (D = $flatten\u6.$verific$n2221$3427, Q = \u6.NaN_output).
Adding EN signal on $flatten\u6.$verific$NaN_output_0_reg$fpu_exceptions.v:256$3902 ($dff) from module fpu (D = $flatten\u6.$verific$n2157$3426, Q = \u6.NaN_output_0).
Adding EN signal on $flatten\u6.$verific$NaN_out_trigger_reg$fpu_exceptions.v:256$3900 ($dff) from module fpu (D = $flatten\u6.$verific$n2155$3386, Q = \u6.NaN_out_trigger).
Adding EN signal on $flatten\u6.$verific$NaN_input_reg$fpu_exceptions.v:256$3870 ($dff) from module fpu (D = $flatten\u6.$verific$n2125$3356, Q = \u6.NaN_input).
Adding EN signal on $flatten\u4.$verific$remainder_shift_term_reg$fpu_div.v:261$2561 ($dff) from module fpu (D = $flatten\u4.$verific$n6400$2207, Q = \u4.remainder_shift_term).
Adding EN signal on $flatten\u4.$verific$remainder_reg$fpu_div.v:181$2406 ($dff) from module fpu (D = $flatten\u4.$verific$n2590$2107, Q = \u4.remainder).
Adding EN signal on $flatten\u4.$verific$remainder_msb_reg$fpu_div.v:181$2407 ($dff) from module fpu (D = $flatten\u4.$verific$n2645$1832, Q = \u4.remainder_msb).
Adding EN signal on $flatten\u4.$verific$remainder_b_reg$fpu_div.v:261$2562 ($dff) from module fpu (D = $flatten\u4.$verific$n6408$2208, Q = \u4.remainder_b).
Adding EN signal on $flatten\u4.$verific$quotient_reg$fpu_div.v:169$2395 ($dff) from module fpu (D = $flatten\u4.$verific$n2307$2104 [0], Q = \u4.quotient [0]).
Adding EN signal on $flatten\u4.$verific$quotient_reg$fpu_div.v:169$2395 ($dff) from module fpu (D = $flatten\u4.$verific$n2307$2104 [1], Q = \u4.quotient [1]).
Adding EN signal on $flatten\u4.$verific$quotient_reg$fpu_div.v:169$2395 ($dff) from module fpu (D = $flatten\u4.$verific$n2307$2104 [2], Q = \u4.quotient [2]).
Adding EN signal on $flatten\u4.$verific$quotient_reg$fpu_div.v:169$2395 ($dff) from module fpu (D = $flatten\u4.$verific$n2307$2104 [3], Q = \u4.quotient [3]).
Adding EN signal on $flatten\u4.$verific$quotient_reg$fpu_div.v:169$2395 ($dff) from module fpu (D = $flatten\u4.$verific$n2307$2104 [4], Q = \u4.quotient [4]).
Adding EN signal on $flatten\u4.$verific$quotient_reg$fpu_div.v:169$2395 ($dff) from module fpu (D = $flatten\u4.$verific$n2307$2104 [5], Q = \u4.quotient [5]).
Adding EN signal on $flatten\u4.$verific$quotient_reg$fpu_div.v:169$2395 ($dff) from module fpu (D = $flatten\u4.$verific$n2307$2104 [6], Q = \u4.quotient [6]).
Adding EN signal on $flatten\u4.$verific$quotient_reg$fpu_div.v:169$2395 ($dff) from module fpu (D = $flatten\u4.$verific$n2307$2104 [7], Q = \u4.quotient [7]).
Adding EN signal on $flatten\u4.$verific$quotient_reg$fpu_div.v:169$2395 ($dff) from module fpu (D = $flatten\u4.$verific$n2307$2104 [8], Q = \u4.quotient [8]).
Adding EN signal on $flatten\u4.$verific$quotient_reg$fpu_div.v:169$2395 ($dff) from module fpu (D = $flatten\u4.$verific$n2307$2104 [9], Q = \u4.quotient [9]).
Adding EN signal on $flatten\u4.$verific$quotient_reg$fpu_div.v:169$2395 ($dff) from module fpu (D = $flatten\u4.$verific$n2307$2104 [10], Q = \u4.quotient [10]).
Adding EN signal on $flatten\u4.$verific$quotient_reg$fpu_div.v:169$2395 ($dff) from module fpu (D = $flatten\u4.$verific$n2307$2104 [11], Q = \u4.quotient [11]).
Adding EN signal on $flatten\u4.$verific$quotient_reg$fpu_div.v:169$2395 ($dff) from module fpu (D = $flatten\u4.$verific$n2307$2104 [12], Q = \u4.quotient [12]).
Adding EN signal on $flatten\u4.$verific$quotient_reg$fpu_div.v:169$2395 ($dff) from module fpu (D = $flatten\u4.$verific$n2307$2104 [13], Q = \u4.quotient [13]).
Adding EN signal on $flatten\u4.$verific$quotient_reg$fpu_div.v:169$2395 ($dff) from module fpu (D = $flatten\u4.$verific$n2307$2104 [14], Q = \u4.quotient [14]).
Adding EN signal on $flatten\u4.$verific$quotient_reg$fpu_div.v:169$2395 ($dff) from module fpu (D = $flatten\u4.$verific$n2307$2104 [15], Q = \u4.quotient [15]).
Adding EN signal on $flatten\u4.$verific$quotient_reg$fpu_div.v:169$2395 ($dff) from module fpu (D = $flatten\u4.$verific$n2307$2104 [16], Q = \u4.quotient [16]).
Adding EN signal on $flatten\u4.$verific$quotient_reg$fpu_div.v:169$2395 ($dff) from module fpu (D = $flatten\u4.$verific$n2307$2104 [17], Q = \u4.quotient [17]).
Adding EN signal on $flatten\u4.$verific$quotient_reg$fpu_div.v:169$2395 ($dff) from module fpu (D = $flatten\u4.$verific$n2307$2104 [18], Q = \u4.quotient [18]).
Adding EN signal on $flatten\u4.$verific$quotient_reg$fpu_div.v:169$2395 ($dff) from module fpu (D = $flatten\u4.$verific$n2307$2104 [19], Q = \u4.quotient [19]).
Adding EN signal on $flatten\u4.$verific$quotient_reg$fpu_div.v:169$2395 ($dff) from module fpu (D = $flatten\u4.$verific$n2307$2104 [20], Q = \u4.quotient [20]).
Adding EN signal on $flatten\u4.$verific$quotient_reg$fpu_div.v:169$2395 ($dff) from module fpu (D = $flatten\u4.$verific$n2307$2104 [21], Q = \u4.quotient [21]).
Adding EN signal on $flatten\u4.$verific$quotient_reg$fpu_div.v:169$2395 ($dff) from module fpu (D = $flatten\u4.$verific$n2307$2104 [22], Q = \u4.quotient [22]).
Adding EN signal on $flatten\u4.$verific$quotient_reg$fpu_div.v:169$2395 ($dff) from module fpu (D = $flatten\u4.$verific$n2307$2104 [23], Q = \u4.quotient [23]).
Adding EN signal on $flatten\u4.$verific$quotient_reg$fpu_div.v:169$2395 ($dff) from module fpu (D = $flatten\u4.$verific$n2307$2104 [24], Q = \u4.quotient [24]).
Adding EN signal on $flatten\u4.$verific$quotient_reg$fpu_div.v:169$2395 ($dff) from module fpu (D = $flatten\u4.$verific$n2307$2104 [25], Q = \u4.quotient [25]).
Adding EN signal on $flatten\u4.$verific$quotient_reg$fpu_div.v:169$2395 ($dff) from module fpu (D = $flatten\u4.$verific$n2307$2104 [26], Q = \u4.quotient [26]).
Adding EN signal on $flatten\u4.$verific$quotient_reg$fpu_div.v:169$2395 ($dff) from module fpu (D = $flatten\u4.$verific$n2307$2104 [27], Q = \u4.quotient [27]).
Adding EN signal on $flatten\u4.$verific$quotient_reg$fpu_div.v:169$2395 ($dff) from module fpu (D = $flatten\u4.$verific$n2307$2104 [28], Q = \u4.quotient [28]).
Adding EN signal on $flatten\u4.$verific$quotient_reg$fpu_div.v:169$2395 ($dff) from module fpu (D = $flatten\u4.$verific$n2307$2104 [29], Q = \u4.quotient [29]).
Adding EN signal on $flatten\u4.$verific$quotient_reg$fpu_div.v:169$2395 ($dff) from module fpu (D = $flatten\u4.$verific$n2307$2104 [30], Q = \u4.quotient [30]).
Adding EN signal on $flatten\u4.$verific$quotient_reg$fpu_div.v:169$2395 ($dff) from module fpu (D = $flatten\u4.$verific$n2307$2104 [31], Q = \u4.quotient [31]).
Adding EN signal on $flatten\u4.$verific$quotient_reg$fpu_div.v:169$2395 ($dff) from module fpu (D = $flatten\u4.$verific$n2307$2104 [32], Q = \u4.quotient [32]).
Adding EN signal on $flatten\u4.$verific$quotient_reg$fpu_div.v:169$2395 ($dff) from module fpu (D = $flatten\u4.$verific$n2307$2104 [33], Q = \u4.quotient [33]).
Adding EN signal on $flatten\u4.$verific$quotient_reg$fpu_div.v:169$2395 ($dff) from module fpu (D = $flatten\u4.$verific$n2307$2104 [34], Q = \u4.quotient [34]).
Adding EN signal on $flatten\u4.$verific$quotient_reg$fpu_div.v:169$2395 ($dff) from module fpu (D = $flatten\u4.$verific$n2307$2104 [35], Q = \u4.quotient [35]).
Adding EN signal on $flatten\u4.$verific$quotient_reg$fpu_div.v:169$2395 ($dff) from module fpu (D = $flatten\u4.$verific$n2307$2104 [36], Q = \u4.quotient [36]).
Adding EN signal on $flatten\u4.$verific$quotient_reg$fpu_div.v:169$2395 ($dff) from module fpu (D = $flatten\u4.$verific$n2307$2104 [37], Q = \u4.quotient [37]).
Adding EN signal on $flatten\u4.$verific$quotient_reg$fpu_div.v:169$2395 ($dff) from module fpu (D = $flatten\u4.$verific$n2307$2104 [38], Q = \u4.quotient [38]).
Adding EN signal on $flatten\u4.$verific$quotient_reg$fpu_div.v:169$2395 ($dff) from module fpu (D = $flatten\u4.$verific$n2307$2104 [39], Q = \u4.quotient [39]).
Adding EN signal on $flatten\u4.$verific$quotient_reg$fpu_div.v:169$2395 ($dff) from module fpu (D = $flatten\u4.$verific$n2307$2104 [40], Q = \u4.quotient [40]).
Adding EN signal on $flatten\u4.$verific$quotient_reg$fpu_div.v:169$2395 ($dff) from module fpu (D = $flatten\u4.$verific$n2307$2104 [41], Q = \u4.quotient [41]).
Adding EN signal on $flatten\u4.$verific$quotient_reg$fpu_div.v:169$2395 ($dff) from module fpu (D = $flatten\u4.$verific$n2307$2104 [42], Q = \u4.quotient [42]).
Adding EN signal on $flatten\u4.$verific$quotient_reg$fpu_div.v:169$2395 ($dff) from module fpu (D = $flatten\u4.$verific$n2307$2104 [43], Q = \u4.quotient [43]).
Adding EN signal on $flatten\u4.$verific$quotient_reg$fpu_div.v:169$2395 ($dff) from module fpu (D = $flatten\u4.$verific$n2307$2104 [44], Q = \u4.quotient [44]).
Adding EN signal on $flatten\u4.$verific$quotient_reg$fpu_div.v:169$2395 ($dff) from module fpu (D = $flatten\u4.$verific$n2307$2104 [45], Q = \u4.quotient [45]).
Adding EN signal on $flatten\u4.$verific$quotient_reg$fpu_div.v:169$2395 ($dff) from module fpu (D = $flatten\u4.$verific$n2307$2104 [46], Q = \u4.quotient [46]).
Adding EN signal on $flatten\u4.$verific$quotient_reg$fpu_div.v:169$2395 ($dff) from module fpu (D = $flatten\u4.$verific$n2307$2104 [47], Q = \u4.quotient [47]).
Adding EN signal on $flatten\u4.$verific$quotient_reg$fpu_div.v:169$2395 ($dff) from module fpu (D = $flatten\u4.$verific$n2307$2104 [48], Q = \u4.quotient [48]).
Adding EN signal on $flatten\u4.$verific$quotient_reg$fpu_div.v:169$2395 ($dff) from module fpu (D = $flatten\u4.$verific$n2307$2104 [49], Q = \u4.quotient [49]).
Adding EN signal on $flatten\u4.$verific$quotient_reg$fpu_div.v:169$2395 ($dff) from module fpu (D = $flatten\u4.$verific$n2307$2104 [50], Q = \u4.quotient [50]).
Adding EN signal on $flatten\u4.$verific$quotient_reg$fpu_div.v:169$2395 ($dff) from module fpu (D = $flatten\u4.$verific$n2307$2104 [51], Q = \u4.quotient [51]).
Adding EN signal on $flatten\u4.$verific$quotient_reg$fpu_div.v:169$2395 ($dff) from module fpu (D = $flatten\u4.$verific$n2307$2104 [52], Q = \u4.quotient [52]).
Adding EN signal on $flatten\u4.$verific$quotient_reg$fpu_div.v:169$2395 ($dff) from module fpu (D = $flatten\u4.$verific$n2307$2104 [53], Q = \u4.quotient [53]).
Adding EN signal on $flatten\u4.$verific$mantissa_b_reg$fpu_div.v:261$2556 ($dff) from module fpu (D = $flatten\u4.$verific$n6227$2202, Q = \u4.mantissa_b).
Adding EN signal on $flatten\u4.$verific$mantissa_a_reg$fpu_div.v:261$2555 ($dff) from module fpu (D = $flatten\u4.$verific$n6174$2201, Q = \u4.mantissa_a).
Adding EN signal on $flatten\u4.$verific$mantissa_1_reg$fpu_div.v:261$2565 ($dff) from module fpu (D = $flatten\u4.$verific$n6623$2211, Q = \u4.mantissa_1).
Adding EN signal on $flatten\u4.$verific$expon_uf_term_4_reg$fpu_div.v:261$2549 ($dff) from module fpu (D = $flatten\u4.$verific$n6120$2197, Q = \u4.expon_uf_term_4).
Adding EN signal on $flatten\u4.$verific$expon_uf_term_3_reg$fpu_div.v:261$2547 ($dff) from module fpu (D = $flatten\u4.$verific$n6106$2196, Q = \u4.expon_uf_term_3).
Adding EN signal on $flatten\u4.$verific$expon_uf_term_2_reg$fpu_div.v:261$2546 ($dff) from module fpu (D = $flatten\u4.$verific$n6093$2195, Q = \u4.expon_uf_term_2).
Adding EN signal on $flatten\u4.$verific$expon_uf_term_1_reg$fpu_div.v:261$2540 ($dff) from module fpu (D = $flatten\u4.$verific$n6027$2190, Q = \u4.expon_uf_term_1).
Adding EN signal on $flatten\u4.$verific$expon_uf_gt_maxshift_reg$fpu_div.v:261$2548 ($dff) from module fpu (D = $flatten\u4.$verific$n6119$1850, Q = \u4.expon_uf_gt_maxshift).
Adding EN signal on $flatten\u4.$verific$expon_uf_2_reg$fpu_div.v:261$2545 ($dff) from module fpu (D = $flatten\u4.$verific$n6092$1849, Q = \u4.expon_uf_2).
Adding EN signal on $flatten\u4.$verific$expon_uf_1_reg$fpu_div.v:261$2539 ($dff) from module fpu (D = $flatten\u4.$verific$n6026$1848, Q = \u4.expon_uf_1).
Adding EN signal on $flatten\u4.$verific$expon_term_reg$fpu_div.v:261$2538 ($dff) from module fpu (D = $flatten\u4.$verific$n6013$2189, Q = \u4.expon_term).
Adding EN signal on $flatten\u4.$verific$expon_shift_b_reg$fpu_div.v:261$2544 ($dff) from module fpu (D = $flatten\u4.$verific$n6079$2194, Q = \u4.expon_shift_b).
Adding EN signal on $flatten\u4.$verific$expon_shift_a_reg$fpu_div.v:261$2543 ($dff) from module fpu (D = $flatten\u4.$verific$n6066$2193, Q = \u4.expon_shift_a).
Adding EN signal on $flatten\u4.$verific$expon_final_5_reg$fpu_div.v:261$2554 ($dff) from module fpu (D = $flatten\u4.$verific$n6161$2200, Q = \u4.expon_final_5).
Adding EN signal on $flatten\u4.$verific$expon_final_4_term_reg$fpu_div.v:261$2553 ($dff) from module fpu (D = $flatten\u4.$verific$n6160$1852, Q = \u4.expon_final_4_term).
Adding EN signal on $flatten\u4.$verific$expon_final_4_reg$fpu_div.v:261$2551 ($dff) from module fpu (D = $flatten\u4.$verific$n6146$2199, Q = \u4.expon_final_4).
Adding EN signal on $flatten\u4.$verific$expon_final_4_et0_reg$fpu_div.v:261$2552 ($dff) from module fpu (D = $flatten\u4.$verific$n6159$1851, Q = \u4.expon_final_4_et0).
Adding EN signal on $flatten\u4.$verific$expon_final_3_reg$fpu_div.v:261$2550 ($dff) from module fpu (D = $flatten\u4.$verific$n6133$2198, Q = \u4.expon_final_3).
Adding EN signal on $flatten\u4.$verific$expon_final_2_reg$fpu_div.v:261$2542 ($dff) from module fpu (D = $flatten\u4.$verific$n6053$2192, Q = \u4.expon_final_2).
Adding EN signal on $flatten\u4.$verific$expon_final_1_reg$fpu_div.v:261$2541 ($dff) from module fpu (D = $flatten\u4.$verific$n6040$2191, Q = \u4.expon_final_1).
Adding EN signal on $flatten\u4.$verific$enable_reg_2_reg$fpu_div.v:293$2593 ($dff) from module fpu (D = $flatten\u4.$verific$n7376$1871, Q = \u4.enable_reg_2).
Adding EN signal on $flatten\u4.$verific$divisor_shift_2_reg$fpu_div.v:261$2560 ($dff) from module fpu (D = $flatten\u4.$verific$n6393$2206, Q = \u4.divisor_shift_2).
Adding EN signal on $flatten\u4.$verific$divisor_reg_reg$fpu_div.v:197$2420 ($dff) from module fpu (D = $flatten\u4.$verific$n3309$2117, Q = \u4.divisor_reg).
Adding EN signal on $flatten\u4.$verific$divisor_b_shifted_reg$fpu_div.v:261$2564 ($dff) from module fpu (D = $flatten\u4.$verific$n6570$2210, Q = \u4.divisor_b_shifted).
Adding EN signal on $flatten\u4.$verific$divisor_b_reg$fpu_div.v:261$2558 ($dff) from module fpu (D = $flatten\u4.$verific$n6333$2204, Q = \u4.divisor_b).
Adding EN signal on $flatten\u4.$verific$dividend_shift_2_reg$fpu_div.v:261$2559 ($dff) from module fpu (D = $flatten\u4.$verific$n6386$2205, Q = \u4.dividend_shift_2).
Adding EN signal on $flatten\u4.$verific$dividend_reg_reg$fpu_div.v:197$2419 ($dff) from module fpu (D = $flatten\u4.$verific$n3254$2116, Q = \u4.dividend_reg).
Adding EN signal on $flatten\u4.$verific$dividend_a_shifted_reg$fpu_div.v:261$2563 ($dff) from module fpu (D = $flatten\u4.$verific$n6517$2209, Q = \u4.dividend_a_shifted).
Adding EN signal on $flatten\u4.$verific$dividend_a_reg$fpu_div.v:261$2557 ($dff) from module fpu (D = $flatten\u4.$verific$n6280$2203, Q = \u4.dividend_a).
Adding EN signal on $flatten\u4.$verific$count_out_reg$fpu_div.v:148$2328 ($dff) from module fpu (D = $flatten\u4.$verific$n1619$2094, Q = \u4.count_out).
Adding EN signal on $flatten\u3.$verific$sum_8_reg$fpu_mul.v:211$4592 ($dff) from module fpu (D = $flatten\u3.$verific$n7831$4261, Q = \u3.sum_8).
Adding EN signal on $flatten\u3.$verific$sum_7_reg$fpu_mul.v:211$4591 ($dff) from module fpu (D = $flatten\u3.$verific$n7793$4260, Q = \u3.sum_7).
Adding EN signal on $flatten\u3.$verific$sum_6_reg$fpu_mul.v:211$4590 ($dff) from module fpu (D = $flatten\u3.$verific$n7762$4259, Q = \u3.sum_6).
Adding EN signal on $flatten\u3.$verific$sum_5_reg$fpu_mul.v:211$4589 ($dff) from module fpu (D = $flatten\u3.$verific$n7733$4258, Q = \u3.sum_5).
Adding EN signal on $flatten\u3.$verific$sum_4_reg$fpu_mul.v:211$4588 ($dff) from module fpu (D = $flatten\u3.$verific$n7695$4257, Q = \u3.sum_4).
Adding EN signal on $flatten\u3.$verific$sum_3_reg$fpu_mul.v:211$4587 ($dff) from module fpu (D = $flatten\u3.$verific$n7658$4256, Q = \u3.sum_3).
Adding EN signal on $flatten\u3.$verific$sum_2_reg$fpu_mul.v:211$4586 ($dff) from module fpu (D = $flatten\u3.$verific$n7615$4255, Q = \u3.sum_2).
Adding EN signal on $flatten\u3.$verific$sum_1_reg$fpu_mul.v:211$4585 ($dff) from module fpu (D = $flatten\u3.$verific$n7578$4254, Q = \u3.sum_1).
Adding EN signal on $flatten\u3.$verific$sum_0_reg$fpu_mul.v:211$4584 ($dff) from module fpu (D = $flatten\u3.$verific$n7535$4253, Q = \u3.sum_0).
Adding EN signal on $flatten\u3.$verific$sign_reg$fpu_mul.v:211$4553 ($dff) from module fpu (D = $flatten\u3.$verific$n6858$3984, Q = \u3.sign).
Adding EN signal on $flatten\u3.$verific$product_shift_2_reg$fpu_mul.v:211$4602 ($dff) from module fpu (D = $flatten\u3.$verific$n8626$4270, Q = \u3.product_shift_2).
Adding EN signal on $flatten\u3.$verific$product_reg$fpu_mul.v:211$4593 ($dff) from module fpu (D = $flatten\u3.$verific$n7863$4262, Q = \u3.product).
Adding EN signal on $flatten\u3.$verific$product_lsb_reg$fpu_mul.v:211$4600 ($dff) from module fpu (D = $flatten\u3.$verific$n8612$3993, Q = \u3.product_lsb).
Adding EN signal on $flatten\u3.$verific$product_j_reg$fpu_mul.v:211$4583 ($dff) from module fpu (D = $flatten\u3.$verific$n7503$4252, Q = \u3.product_j).
Adding EN signal on $flatten\u3.$verific$product_i_reg$fpu_mul.v:211$4582 ($dff) from module fpu (D = $flatten\u3.$verific$n7473$4251, Q = \u3.product_i).
Adding EN signal on $flatten\u3.$verific$product_h_reg$fpu_mul.v:211$4581 ($dff) from module fpu (D = $flatten\u3.$verific$n7443$4250, Q = \u3.product_h).
Adding EN signal on $flatten\u3.$verific$product_g_reg$fpu_mul.v:211$4580 ($dff) from module fpu (D = $flatten\u3.$verific$n7406$4249, Q = \u3.product_g).
Adding EN signal on $flatten\u3.$verific$product_f_reg$fpu_mul.v:211$4579 ($dff) from module fpu (D = $flatten\u3.$verific$n7371$4248, Q = \u3.product_f).
Adding EN signal on $flatten\u3.$verific$product_e_reg$fpu_mul.v:211$4578 ($dff) from module fpu (D = $flatten\u3.$verific$n7336$4247, Q = \u3.product_e).
Adding EN signal on $flatten\u3.$verific$product_d_reg$fpu_mul.v:211$4577 ($dff) from module fpu (D = $flatten\u3.$verific$n7309$4246, Q = \u3.product_d).
Adding EN signal on $flatten\u3.$verific$product_c_reg$fpu_mul.v:211$4576 ($dff) from module fpu (D = $flatten\u3.$verific$n7267$4245, Q = \u3.product_c).
Adding EN signal on $flatten\u3.$verific$product_b_reg$fpu_mul.v:211$4575 ($dff) from module fpu (D = $flatten\u3.$verific$n7225$4244, Q = \u3.product_b).
Adding EN signal on $flatten\u3.$verific$product_a_reg$fpu_mul.v:211$4574 ($dff) from module fpu (D = $flatten\u3.$verific$n7183$4243, Q = \u3.product_a).
Adding EN signal on $flatten\u3.$verific$product_6_reg$fpu_mul.v:211$4599 ($dff) from module fpu (D = $flatten\u3.$verific$n8505$4268, Q = \u3.product_6).
Adding EN signal on $flatten\u3.$verific$product_5_reg$fpu_mul.v:211$4598 ($dff) from module fpu (D = $flatten\u3.$verific$n8398$4267, Q = \u3.product_5).
Adding EN signal on $flatten\u3.$verific$product_4_reg$fpu_mul.v:211$4597 ($dff) from module fpu (D = $flatten\u3.$verific$n8291$4266, Q = \u3.product_4).
Adding EN signal on $flatten\u3.$verific$product_3_reg$fpu_mul.v:211$4596 ($dff) from module fpu (D = $flatten\u3.$verific$n8184$4265, Q = \u3.product_3).
Adding EN signal on $flatten\u3.$verific$product_2_reg$fpu_mul.v:211$4595 ($dff) from module fpu (D = $flatten\u3.$verific$n8077$4264, Q = \u3.product_2).
Adding EN signal on $flatten\u3.$verific$product_1_reg$fpu_mul.v:211$4594 ($dff) from module fpu (D = $flatten\u3.$verific$n7970$4263, Q = \u3.product_1).
Adding EN signal on $flatten\u3.$verific$mul_b_reg$fpu_mul.v:211$4573 ($dff) from module fpu (D = $flatten\u3.$verific$n7129$4242, Q = \u3.mul_b).
Adding EN signal on $flatten\u3.$verific$mul_a_reg$fpu_mul.v:211$4572 ($dff) from module fpu (D = $flatten\u3.$verific$n7075$4241, Q = \u3.mul_a).
Adding EN signal on $flatten\u3.$verific$mantissa_b_reg$fpu_mul.v:211$4555 ($dff) from module fpu (D = $flatten\u3.$verific$n6912$4232, Q = \u3.mantissa_b).
Adding EN signal on $flatten\u3.$verific$mantissa_a_reg$fpu_mul.v:211$4554 ($dff) from module fpu (D = $flatten\u3.$verific$n6859$4231, Q = \u3.mantissa_a).
Adding EN signal on $flatten\u3.$verific$in_zero_reg$fpu_mul.v:211$4562 ($dff) from module fpu (D = $flatten\u3.$verific$n6993$3989, Q = \u3.in_zero).
Adding EN signal on $flatten\u3.$verific$exponent_under_reg$fpu_mul.v:211$4565 ($dff) from module fpu (D = $flatten\u3.$verific$n7008$4236, Q = \u3.exponent_under).
Adding EN signal on $flatten\u3.$verific$exponent_terms_reg$fpu_mul.v:211$4563 ($dff) from module fpu (D = $flatten\u3.$verific$n6994$4235, Q = \u3.exponent_terms).
Adding EN signal on $flatten\u3.$verific$exponent_gt_prodshift_reg$fpu_mul.v:211$4568 ($dff) from module fpu (D = $flatten\u3.$verific$n7047$3991, Q = \u3.exponent_gt_prodshift).
Adding EN signal on $flatten\u3.$verific$exponent_gt_expoffset_reg$fpu_mul.v:211$4564 ($dff) from module fpu (D = $flatten\u3.$verific$n7007$3990, Q = \u3.exponent_gt_expoffset).
Adding EN signal on $flatten\u3.$verific$exponent_et_zero_reg$fpu_mul.v:211$4571 ($dff) from module fpu (D = $flatten\u3.$verific$n7074$3992, Q = \u3.exponent_et_zero).
Adding EN signal on $flatten\u3.$verific$exponent_b_reg$fpu_mul.v:211$4557 ($dff) from module fpu (D = $flatten\u3.$verific$n6977$4234, Q = \u3.exponent_b).
Adding EN signal on $flatten\u3.$verific$exponent_a_reg$fpu_mul.v:211$4556 ($dff) from module fpu (D = $flatten\u3.$verific$n6965$4233, Q = \u3.exponent_a).
Adding EN signal on $flatten\u3.$verific$exponent_5_reg$fpu_mul.v:211$4601 ($dff) from module fpu (D = $flatten\u3.$verific$n8613$4269, Q = \u3.exponent_5).
Adding EN signal on $flatten\u3.$verific$exponent_4_reg$fpu_mul.v:211$4570 ($dff) from module fpu (D = $flatten\u3.$verific$n7061$4240, Q = \u3.exponent_4).
Adding EN signal on $flatten\u3.$verific$exponent_3_reg$fpu_mul.v:211$4569 ($dff) from module fpu (D = $flatten\u3.$verific$n7048$4239, Q = \u3.exponent_3).
Adding EN signal on $flatten\u3.$verific$exponent_2_reg$fpu_mul.v:211$4567 ($dff) from module fpu (D = $flatten\u3.$verific$n7034$4238, Q = \u3.exponent_2).
Adding EN signal on $flatten\u3.$verific$exponent_1_reg$fpu_mul.v:211$4566 ($dff) from module fpu (D = $flatten\u3.$verific$n7021$4237, Q = \u3.exponent_1).
Adding EN signal on $flatten\u3.$verific$b_is_zero_reg$fpu_mul.v:211$4561 ($dff) from module fpu (D = $flatten\u3.$verific$n6992$3988, Q = \u3.b_is_zero).
Adding EN signal on $flatten\u3.$verific$b_is_norm_reg$fpu_mul.v:211$4559 ($dff) from module fpu (D = $flatten\u3.$verific$n6990$3986, Q = \u3.b_is_norm).
Adding EN signal on $flatten\u3.$verific$a_is_zero_reg$fpu_mul.v:211$4560 ($dff) from module fpu (D = $flatten\u3.$verific$n6991$3987, Q = \u3.a_is_zero).
Adding EN signal on $flatten\u3.$verific$a_is_norm_reg$fpu_mul.v:211$4558 ($dff) from module fpu (D = $flatten\u3.$verific$n6989$3985, Q = \u3.a_is_norm).
Adding EN signal on $flatten\u2.$verific$subtrahend_reg$fpu_sub.v:155$5382 ($dff) from module fpu (D = $flatten\u2.$verific$n3158$5153, Q = \u2.subtrahend).
Adding EN signal on $flatten\u2.$verific$subtra_shift_reg$fpu_sub.v:155$5383 ($dff) from module fpu (D = $flatten\u2.$verific$n3214$5154, Q = \u2.subtra_shift).
Adding EN signal on $flatten\u2.$verific$subtra_shift_3_reg$fpu_sub.v:155$5384 ($dff) from module fpu (D = $flatten\u2.$verific$n3270$5155, Q = \u2.subtra_shift_3).
Adding EN signal on $flatten\u2.$verific$small_is_nonzero_reg$fpu_sub.v:155$5379 ($dff) from module fpu (D = $flatten\u2.$verific$n3089$4973, Q = \u2.small_is_nonzero).
Adding EN signal on $flatten\u2.$verific$small_is_denorm_reg$fpu_sub.v:155$5376 ($dff) from module fpu (D = $flatten\u2.$verific$n3086$4970, Q = \u2.small_is_denorm).
Adding EN signal on $flatten\u2.$verific$sign_reg$fpu_sub.v:155$5371 ($dff) from module fpu (D = $flatten\u2.$verific$n2955$4969, Q = \u2.sign).
Adding EN signal on $flatten\u2.$verific$minuend_reg$fpu_sub.v:155$5381 ($dff) from module fpu (D = $flatten\u2.$verific$n3102$5152, Q = \u2.minuend).
Adding EN signal on $flatten\u2.$verific$mantissa_small_reg$fpu_sub.v:155$5374 ($dff) from module fpu (D = $flatten\u2.$verific$n2980$5149, Q = \u2.mantissa_small).
Adding EN signal on $flatten\u2.$verific$mantissa_large_reg$fpu_sub.v:155$5375 ($dff) from module fpu (D = $flatten\u2.$verific$n3033$5150, Q = \u2.mantissa_large).
Adding EN signal on $flatten\u2.$verific$mantissa_b_reg$fpu_sub.v:155$5366 ($dff) from module fpu (D = $flatten\u2.$verific$n2898$5146, Q = \u2.mantissa_b).
Adding EN signal on $flatten\u2.$verific$mantissa_a_reg$fpu_sub.v:155$5365 ($dff) from module fpu (D = $flatten\u2.$verific$n2845$5145, Q = \u2.mantissa_a).
Adding EN signal on $flatten\u2.$verific$mana_gtet_manb_reg$fpu_sub.v:155$5369 ($dff) from module fpu (D = $flatten\u2.$verific$n2953$4967, Q = \u2.mana_gtet_manb).
Adding EN signal on $flatten\u2.$verific$large_norm_small_denorm_reg$fpu_sub.v:155$5378 ($dff) from module fpu (D = $flatten\u2.$verific$n3088$4972, Q = \u2.large_norm_small_denorm).
Adding EN signal on $flatten\u2.$verific$large_is_denorm_reg$fpu_sub.v:155$5377 ($dff) from module fpu (D = $flatten\u2.$verific$n3087$4971, Q = \u2.large_is_denorm).
Adding EN signal on $flatten\u2.$verific$exponent_small_reg$fpu_sub.v:155$5372 ($dff) from module fpu (D = $flatten\u2.$verific$n2956$5147, Q = \u2.exponent_small).
Adding EN signal on $flatten\u2.$verific$exponent_reg$fpu_sub.v:155$5390 ($dff) from module fpu (D = $flatten\u2.$verific$n3448$5159, Q = \u2.exponent).
Adding EN signal on $flatten\u2.$verific$exponent_large_reg$fpu_sub.v:155$5373 ($dff) from module fpu (D = $flatten\u2.$verific$n2968$5148, Q = \u2.exponent_large).
Adding EN signal on $flatten\u2.$verific$exponent_diff_reg$fpu_sub.v:155$5380 ($dff) from module fpu (D = $flatten\u2.$verific$n3090$5151, Q = \u2.exponent_diff).
Adding EN signal on $flatten\u2.$verific$exponent_b_reg$fpu_sub.v:155$5364 ($dff) from module fpu (D = $flatten\u2.$verific$n2833$5144, Q = \u2.exponent_b).
Adding EN signal on $flatten\u2.$verific$exponent_a_reg$fpu_sub.v:155$5363 ($dff) from module fpu (D = $flatten\u2.$verific$n2821$5143, Q = \u2.exponent_a).
Adding EN signal on $flatten\u2.$verific$exponent_2_reg$fpu_sub.v:155$5391 ($dff) from module fpu (D = $flatten\u2.$verific$n3460$5160, Q = \u2.exponent_2).
Adding EN signal on $flatten\u2.$verific$expa_gt_expb_reg$fpu_sub.v:155$5367 ($dff) from module fpu (D = $flatten\u2.$verific$n2951$4965, Q = \u2.expa_gt_expb).
Adding EN signal on $flatten\u2.$verific$expa_et_expb_reg$fpu_sub.v:155$5368 ($dff) from module fpu (D = $flatten\u2.$verific$n2952$4966, Q = \u2.expa_et_expb).
Adding EN signal on $flatten\u2.$verific$diffshift_gt_exponent_reg$fpu_sub.v:155$5387 ($dff) from module fpu (D = $flatten\u2.$verific$n3390$4974, Q = \u2.diffshift_gt_exponent).
Adding EN signal on $flatten\u2.$verific$diffshift_et_55_reg$fpu_sub.v:155$5388 ($dff) from module fpu (D = $flatten\u2.$verific$n3391$4975, Q = \u2.diffshift_et_55).
Adding EN signal on $flatten\u2.$verific$diff_shift_2_reg$fpu_sub.v:155$5385 ($dff) from module fpu (D = $flatten\u2.$verific$n3326$5156, Q = \u2.diff_shift_2).
Adding EN signal on $flatten\u2.$verific$diff_reg$fpu_sub.v:155$5386 ($dff) from module fpu (D = $flatten\u2.$verific$n3334$5157, Q = \u2.diff).
Adding EN signal on $flatten\u2.$verific$diff_2_reg$fpu_sub.v:155$5392 ($dff) from module fpu (D = $flatten\u2.$verific$n3472$5161, Q = \u2.diff_2).
Adding EN signal on $flatten\u2.$verific$diff_1_reg$fpu_sub.v:155$5389 ($dff) from module fpu (D = $flatten\u2.$verific$n3392$5158, Q = \u2.diff_1).
Adding EN signal on $flatten\u2.$verific$a_gtet_b_reg$fpu_sub.v:155$5370 ($dff) from module fpu (D = $flatten\u2.$verific$n2954$4968, Q = \u2.a_gtet_b).
Adding EN signal on $flatten\u1.$verific$sum_reg$fpu_add.v:128$1753 ($dff) from module fpu (D = $flatten\u1.$verific$n2955$1619, Q = \u1.sum).
Adding EN signal on $flatten\u1.$verific$sum_2_reg$fpu_add.v:128$1754 ($dff) from module fpu (D = $flatten\u1.$verific$n3012$1620, Q = \u1.sum_2).
Adding EN signal on $flatten\u1.$verific$small_shift_reg$fpu_add.v:128$1751 ($dff) from module fpu (D = $flatten\u1.$verific$n2841$1617, Q = \u1.small_shift).
Adding EN signal on $flatten\u1.$verific$small_shift_3_reg$fpu_add.v:128$1752 ($dff) from module fpu (D = $flatten\u1.$verific$n2898$1618, Q = \u1.small_shift_3).
Adding EN signal on $flatten\u1.$verific$small_is_denorm_reg$fpu_add.v:128$1745 ($dff) from module fpu (D = $flatten\u1.$verific$n2712$1551, Q = \u1.small_is_denorm).
Adding EN signal on $flatten\u1.$verific$small_add_reg$fpu_add.v:128$1750 ($dff) from module fpu (D = $flatten\u1.$verific$n2784$1616, Q = \u1.small_add).
Adding EN signal on $flatten\u1.$verific$sign_reg$fpu_add.v:128$1735 ($dff) from module fpu (D = $flatten\u1.$verific$n2450$1549, Q = \u1.sign).
Adding EN signal on $flatten\u1.$verific$mantissa_small_reg$fpu_add.v:128$1743 ($dff) from module fpu (D = $flatten\u1.$verific$n2606$1612, Q = \u1.mantissa_small).
Adding EN signal on $flatten\u1.$verific$mantissa_large_reg$fpu_add.v:128$1744 ($dff) from module fpu (D = $flatten\u1.$verific$n2659$1613, Q = \u1.mantissa_large).
Adding EN signal on $flatten\u1.$verific$mantissa_b_reg$fpu_add.v:128$1739 ($dff) from module fpu (D = $flatten\u1.$verific$n2528$1609, Q = \u1.mantissa_b).
Adding EN signal on $flatten\u1.$verific$mantissa_a_reg$fpu_add.v:128$1738 ($dff) from module fpu (D = $flatten\u1.$verific$n2475$1608, Q = \u1.mantissa_a).
Adding EN signal on $flatten\u1.$verific$large_norm_small_denorm_reg$fpu_add.v:128$1747 ($dff) from module fpu (D = $flatten\u1.$verific$n2714$1553, Q = \u1.large_norm_small_denorm).
Adding EN signal on $flatten\u1.$verific$large_is_denorm_reg$fpu_add.v:128$1746 ($dff) from module fpu (D = $flatten\u1.$verific$n2713$1552, Q = \u1.large_is_denorm).
Adding EN signal on $flatten\u1.$verific$large_add_reg$fpu_add.v:128$1749 ($dff) from module fpu (D = $flatten\u1.$verific$n2727$1615, Q = \u1.large_add).
Adding EN signal on $flatten\u1.$verific$exponent_small_reg$fpu_add.v:128$1741 ($dff) from module fpu (D = $flatten\u1.$verific$n2582$1610, Q = \u1.exponent_small).
Adding EN signal on $flatten\u1.$verific$exponent_reg$fpu_add.v:128$1755 ($dff) from module fpu (D = $flatten\u1.$verific$n3069$1621, Q = \u1.exponent).
Adding EN signal on $flatten\u1.$verific$exponent_large_reg$fpu_add.v:128$1742 ($dff) from module fpu (D = $flatten\u1.$verific$n2594$1611, Q = \u1.exponent_large).
Adding EN signal on $flatten\u1.$verific$exponent_diff_reg$fpu_add.v:128$1748 ($dff) from module fpu (D = $flatten\u1.$verific$n2715$1614, Q = \u1.exponent_diff).
Adding EN signal on $flatten\u1.$verific$exponent_b_reg$fpu_add.v:128$1737 ($dff) from module fpu (D = $flatten\u1.$verific$n2463$1607, Q = \u1.exponent_b).
Adding EN signal on $flatten\u1.$verific$exponent_a_reg$fpu_add.v:128$1736 ($dff) from module fpu (D = $flatten\u1.$verific$n2451$1606, Q = \u1.exponent_a).
Adding EN signal on $flatten\u1.$verific$exponent_2_reg$fpu_add.v:128$1757 ($dff) from module fpu (D = $flatten\u1.$verific$n3082$1622, Q = \u1.exponent_2).
Adding EN signal on $flatten\u1.$verific$expa_gt_expb_reg$fpu_add.v:128$1740 ($dff) from module fpu (D = $flatten\u1.$verific$n2581$1550, Q = \u1.expa_gt_expb).
Adding EN signal on $flatten\u1.$verific$denorm_to_norm_reg$fpu_add.v:128$1756 ($dff) from module fpu (D = $flatten\u1.$verific$n3081$1554, Q = \u1.denorm_to_norm).

yosys> opt_clean

3.40. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \fpu..

yosys> opt_expr

3.41. Executing OPT_EXPR pass (perform const folding).
Optimizing module fpu.
<suppressed ~264 debug messages>

yosys> opt_muxtree

3.42. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \fpu..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Removed 0 multiplexer ports.
<suppressed ~251 debug messages>

yosys> opt_reduce

3.43. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \fpu.
Performed a total of 0 changes.

yosys> opt_merge

3.44. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\fpu'.
<suppressed ~753 debug messages>
Removed a total of 251 cells.

yosys> opt_share

3.45. Executing OPT_SHARE pass.

yosys> opt_dff -nosdff -sat

3.46. Executing OPT_DFF pass (perform DFF optimizations).

yosys> opt_clean

3.47. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \fpu..
Removed 0 unused cells and 251 unused wires.
<suppressed ~1 debug messages>

yosys> opt_expr

3.48. Executing OPT_EXPR pass (perform const folding).
Optimizing module fpu.

yosys> opt_muxtree

3.49. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \fpu..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Removed 0 multiplexer ports.
<suppressed ~251 debug messages>

yosys> opt_reduce

3.50. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \fpu.
Performed a total of 0 changes.

yosys> opt_merge

3.51. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\fpu'.
Removed a total of 0 cells.

yosys> opt_share

3.52. Executing OPT_SHARE pass.

yosys> opt_dff -nosdff -sat

3.53. Executing OPT_DFF pass (perform DFF optimizations).

yosys> opt_clean

3.54. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \fpu..

yosys> opt_expr

3.55. Executing OPT_EXPR pass (perform const folding).
Optimizing module fpu.
MAX OPT ITERATION = 3

yosys> wreduce -keepdc

3.56. Executing WREDUCE pass (reducing word size of cells).
Removed top 1 bits (of 3) from port B of cell fpu.$auto$opt_dff.cc:195:make_patterns_logic$6319 ($ne).
Removed top 1 bits (of 12) from mux cell fpu.$verific$mux_109$fpu_double.v:217$1425 ($mux).
Removed top 1 bits (of 12) from FF cell fpu.$verific$exp_addsub_reg$fpu_double.v:218$1432 ($dff).
Removed top 6 bits (of 7) from port B of cell fpu.$verific$add_120$fpu_double.v:227$1434 ($add).
Removed top 1 bits (of 12) from port A of cell fpu.$flatten\u6.$verific$LessThan_203$fpu_exceptions.v:225$3555 ($lt).
Removed top 1 bits (of 2) from port B of cell fpu.$flatten\u6.$verific$equal_213$fpu_exceptions.v:229$3565 ($eq).
Removed top 2 bits (of 3) from port B of cell fpu.$flatten\u6.$verific$equal_78$fpu_exceptions.v:197$3456 ($eq).
Removed top 1 bits (of 3) from port B of cell fpu.$flatten\u6.$verific$equal_80$fpu_exceptions.v:198$3458 ($eq).
Removed top 1 bits (of 3) from port B of cell fpu.$flatten\u6.$verific$equal_82$fpu_exceptions.v:199$3460 ($eq).
Removed top 53 bits (of 56) from port A of cell fpu.$flatten\u5.$verific$add_35$fpu_round.v:84$4889 ($add).
Removed top 11 bits (of 12) from port B of cell fpu.$flatten\u5.$verific$add_39$fpu_round.v:86$4893 ($add).
Removed top 1 bits (of 56) from mux cell fpu.$flatten\u5.$verific$mux_37$fpu_round.v:85$4891 ($mux).
Removed top 1 bits (of 13) from mux cell fpu.$flatten\u5.$verific$mux_40$fpu_round.v:86$4894 ($mux).
Removed top 1 bits (of 56) from mux cell fpu.$flatten\u5.$verific$mux_48$fpu_round.v:90$4902 ($mux).
Removed top 2 bits (of 56) from FF cell fpu.$flatten\u5.$verific$sum_final_reg$fpu_round.v:91$4910 ($dff).
Removed top 1 bits (of 56) from FF cell fpu.$flatten\u5.$verific$sum_round_2_reg$fpu_round.v:91$4908 ($dff).
Removed top 63 bits (of 64) from port A of cell fpu.$flatten\u4.$verific$Decoder_81$fpu_div.v:168$2337 ($shl).
Removed top 10 bits (of 64) from port Y of cell fpu.$flatten\u4.$verific$Decoder_81$fpu_div.v:168$2337 ($shl).
Removed top 1 bits (of 12) from port B of cell fpu.$flatten\u4.$verific$LessThan_201$fpu_div.v:233$2427 ($lt).
Removed top 6 bits (of 12) from port A of cell fpu.$flatten\u4.$verific$LessThan_221$fpu_div.v:242$2449 ($lt).
Removed top 1 bits (of 12) from port A of cell fpu.$flatten\u4.$verific$add_199$fpu_div.v:232$2425 ($add).
Removed top 2 bits (of 12) from port B of cell fpu.$flatten\u4.$verific$add_199$fpu_div.v:232$2425 ($add).
Removed top 11 bits (of 12) from port B of cell fpu.$flatten\u4.$verific$equal_31$fpu_div.v:117$2296 ($eq).
Removed top 51 bits (of 52) from port B of cell fpu.$flatten\u4.$verific$equal_530$fpu_div.v:349$2795 ($eq).
Removed top 51 bits (of 52) from port B of cell fpu.$flatten\u4.$verific$equal_687$fpu_div.v:407$2999 ($eq).
Removed top 20 bits (of 32) from mux cell fpu.$flatten\u4.$verific$mux_204$fpu_div.v:234$2430 ($mux).
Removed top 20 bits (of 32) from mux cell fpu.$flatten\u4.$verific$mux_217$fpu_div.v:240$2444 ($mux).
Removed top 20 bits (of 32) from mux cell fpu.$flatten\u4.$verific$mux_226$fpu_div.v:244$2454 ($mux).
Removed top 1 bits (of 54) from FF cell fpu.$flatten\u4.$verific$remainder_out_reg$fpu_div.v:160$2333 ($dff).
Removed top 1 bits (of 54) from port Y of cell fpu.$flatten\u4.$verific$sub_160$fpu_div.v:195$2410 ($sub).
Removed top 1 bits (of 54) from port A of cell fpu.$flatten\u4.$verific$sub_160$fpu_div.v:195$2410 ($sub).
Removed top 1 bits (of 54) from port B of cell fpu.$flatten\u4.$verific$sub_160$fpu_div.v:195$2410 ($sub).
Removed top 2 bits (of 13) from port A of cell fpu.$flatten\u4.$verific$sub_203$fpu_div.v:234$2429 ($sub).
Removed top 1 bits (of 13) from port B of cell fpu.$flatten\u4.$verific$sub_203$fpu_div.v:234$2429 ($sub).
Removed top 1 bits (of 13) from port Y of cell fpu.$flatten\u4.$verific$sub_203$fpu_div.v:234$2429 ($sub).
Removed top 1 bits (of 12) from port B of cell fpu.$flatten\u4.$verific$sub_206$fpu_div.v:235$2433 ($sub).
Removed top 1 bits (of 13) from port A of cell fpu.$flatten\u4.$verific$sub_216$fpu_div.v:240$2443 ($sub).
Removed top 1 bits (of 13) from port B of cell fpu.$flatten\u4.$verific$sub_216$fpu_div.v:240$2443 ($sub).
Removed top 1 bits (of 13) from port Y of cell fpu.$flatten\u4.$verific$sub_216$fpu_div.v:240$2443 ($sub).
Removed top 1 bits (of 13) from port A of cell fpu.$flatten\u4.$verific$sub_225$fpu_div.v:244$2453 ($sub).
Removed top 1 bits (of 13) from port B of cell fpu.$flatten\u4.$verific$sub_225$fpu_div.v:244$2453 ($sub).
Removed top 1 bits (of 13) from port Y of cell fpu.$flatten\u4.$verific$sub_225$fpu_div.v:244$2453 ($sub).
Removed top 11 bits (of 12) from port B of cell fpu.$flatten\u4.$verific$sub_234$fpu_div.v:248$2462 ($sub).
Removed top 7 bits (of 13) from port A of cell fpu.$flatten\u4.$verific$sub_243$fpu_div.v:255$2471 ($sub).
Removed top 1 bits (of 13) from port B of cell fpu.$flatten\u4.$verific$sub_243$fpu_div.v:255$2471 ($sub).
Removed top 6 bits (of 13) from port Y of cell fpu.$flatten\u4.$verific$sub_243$fpu_div.v:255$2471 ($sub).
Removed top 5 bits (of 12) from port B of cell fpu.$flatten\u4.$verific$sub_243$fpu_div.v:255$2471 ($sub).
Removed top 1 bits (of 7) from port A of cell fpu.$flatten\u4.$verific$sub_61$fpu_div.v:147$2322 ($sub).
Removed top 6 bits (of 7) from port B of cell fpu.$flatten\u4.$verific$sub_61$fpu_div.v:147$2322 ($sub).
Removed top 1 bits (of 7) from port Y of cell fpu.$flatten\u4.$verific$sub_61$fpu_div.v:147$2322 ($sub).
Removed top 2 bits (of 12) from port A of cell fpu.$flatten\u3.$verific$LessThan_80$fpu_mul.v:169$4377 ($lt).
Removed top 6 bits (of 12) from port A of cell fpu.$flatten\u3.$verific$LessThan_88$fpu_mul.v:173$4387 ($lt).
Removed top 17 bits (of 41) from port A of cell fpu.$flatten\u3.$verific$add_118$fpu_mul.v:189$4417 ($add).
Removed top 1 bits (of 35) from port B of cell fpu.$flatten\u3.$verific$add_120$fpu_mul.v:190$4419 ($add).
Removed top 15 bits (of 41) from port A of cell fpu.$flatten\u3.$verific$add_122$fpu_mul.v:191$4421 ($add).
Removed top 6 bits (of 35) from port B of cell fpu.$flatten\u3.$verific$add_124$fpu_mul.v:192$4423 ($add).
Removed top 2 bits (of 36) from port B of cell fpu.$flatten\u3.$verific$add_126$fpu_mul.v:193$4425 ($add).
Removed top 1 bits (of 27) from port B of cell fpu.$flatten\u3.$verific$add_128$fpu_mul.v:194$4427 ($add).
Removed top 8 bits (of 29) from port A of cell fpu.$flatten\u3.$verific$add_130$fpu_mul.v:195$4429 ($add).
Removed top 6 bits (of 36) from port A of cell fpu.$flatten\u3.$verific$add_132$fpu_mul.v:196$4431 ($add).
Removed top 11 bits (of 31) from port A of cell fpu.$flatten\u3.$verific$add_134$fpu_mul.v:197$4433 ($add).
Removed top 11 bits (of 12) from port B of cell fpu.$flatten\u3.$verific$add_76$fpu_mul.v:168$4373 ($add).
Removed top 11 bits (of 12) from port B of cell fpu.$flatten\u3.$verific$add_78$fpu_mul.v:168$4375 ($add).
Removed top 3 bits (of 13) from port A of cell fpu.$flatten\u3.$verific$sub_82$fpu_mul.v:170$4379 ($sub).
Removed top 1 bits (of 13) from port B of cell fpu.$flatten\u3.$verific$sub_82$fpu_mul.v:170$4379 ($sub).
Removed top 1 bits (of 13) from port Y of cell fpu.$flatten\u3.$verific$sub_82$fpu_mul.v:170$4379 ($sub).
Removed top 1 bits (of 13) from port A of cell fpu.$flatten\u3.$verific$sub_84$fpu_mul.v:171$4382 ($sub).
Removed top 3 bits (of 13) from port B of cell fpu.$flatten\u3.$verific$sub_84$fpu_mul.v:171$4382 ($sub).
Removed top 1 bits (of 13) from port Y of cell fpu.$flatten\u3.$verific$sub_84$fpu_mul.v:171$4382 ($sub).
Removed top 6 bits (of 12) from port B of cell fpu.$flatten\u3.$verific$sub_90$fpu_mul.v:174$4389 ($sub).
Removed top 10 bits (of 11) from port A of cell fpu.$flatten\u2.$verific$LessThan_70$fpu_sub.v:136$5263 ($lt).
Removed top 10 bits (of 11) from port A of cell fpu.$flatten\u2.$verific$LessThan_9$fpu_sub.v:84$5227 ($lt).
Removed top 4 bits (of 11) from port B of cell fpu.$flatten\u2.$verific$LessThan_98$fpu_sub.v:147$5287 ($lt).
Removed top 1 bits (of 7) from port B of cell fpu.$flatten\u2.$verific$equal_100$fpu_sub.v:148$5289 ($eq).
Removed top 54 bits (of 55) from port B of cell fpu.$flatten\u2.$verific$equal_366$fpu_sub.v:214$5605 ($eq).
Removed top 21 bits (of 32) from mux cell fpu.$flatten\u2.$verific$mux_107$fpu_sub.v:150$5296 ($mux).
Removed top 1 bits (of 7) from mux cell fpu.$flatten\u2.$verific$select_368$fpu_sub.v:216$5607 ($pmux).
Removed top 1 bits (of 12) from port A of cell fpu.$flatten\u2.$verific$sub_106$fpu_sub.v:150$5295 ($sub).
Removed top 5 bits (of 12) from port B of cell fpu.$flatten\u2.$verific$sub_106$fpu_sub.v:150$5295 ($sub).
Removed top 1 bits (of 12) from port Y of cell fpu.$flatten\u2.$verific$sub_106$fpu_sub.v:150$5295 ($sub).
Removed top 10 bits (of 11) from port B of cell fpu.$flatten\u2.$verific$sub_85$fpu_sub.v:140$5275 ($sub).
Removed top 10 bits (of 11) from port A of cell fpu.$flatten\u1.$verific$LessThan_5$fpu_add.v:64$1628 ($lt).
Removed top 10 bits (of 11) from port A of cell fpu.$flatten\u1.$verific$LessThan_57$fpu_add.v:115$1659 ($lt).
Removed top 10 bits (of 11) from port B of cell fpu.$flatten\u1.$verific$add_78$fpu_add.v:124$1679 ($add).
Removed top 10 bits (of 11) from port B of cell fpu.$flatten\u1.$verific$add_83$fpu_add.v:126$1685 ($add).
Removed top 1 bits (of 56) from mux cell fpu.$flatten\u1.$verific$mux_76$fpu_add.v:123$1677 ($mux).
Removed top 1 bits (of 12) from mux cell fpu.$flatten\u1.$verific$mux_79$fpu_add.v:124$1680 ($mux).
Removed top 1 bits (of 12) from mux cell fpu.$flatten\u1.$verific$mux_84$fpu_add.v:126$1686 ($mux).
Removed top 10 bits (of 11) from port B of cell fpu.$flatten\u1.$verific$sub_64$fpu_add.v:117$1666 ($sub).
Removed top 1 bits (of 13) from port Y of cell fpu.$flatten\u5.$verific$add_39$fpu_round.v:86$4893 ($add).
Removed top 2 bits (of 56) from mux cell fpu.$flatten\u5.$verific$mux_50$fpu_round.v:90$4904 ($mux).
Removed top 1 bits (of 54) from mux cell fpu.$flatten\u4.$verific$mux_73$fpu_div.v:159$2331 ($mux).
Removed top 1 bits (of 12) from port Y of cell fpu.$flatten\u1.$verific$add_78$fpu_add.v:124$1679 ($add).
Removed top 1 bits (of 12) from port Y of cell fpu.$flatten\u1.$verific$add_83$fpu_add.v:126$1685 ($add).
Removed top 2 bits (of 56) from mux cell fpu.$flatten\u5.$verific$mux_42$fpu_round.v:87$4897 ($mux).
Removed top 1 bits (of 54) from FF cell fpu.$auto$ff.cc:262:slice$5843 ($dffe).
Removed top 1 bits (of 55) from FF cell fpu.$flatten\u5.$verific$sum_round_2_reg$fpu_round.v:91$4908 ($dff).
Removed top 1 bits (of 54) from mux cell fpu.$flatten\u4.$verific$mux_150$fpu_div.v:180$2404 ($mux).
Removed top 1 bits (of 55) from mux cell fpu.$flatten\u5.$verific$mux_48$fpu_round.v:90$4902 ($mux).
Removed top 1 bits (of 54) from mux cell fpu.$flatten\u4.$verific$mux_148$fpu_div.v:180$2402 ($mux).
Removed top 1 bits (of 55) from mux cell fpu.$flatten\u5.$verific$mux_37$fpu_round.v:85$4891 ($mux).
Removed top 1 bits (of 56) from wire fpu.$flatten\u1.$verific$n1614$1581.
Removed top 1 bits (of 12) from wire fpu.$flatten\u1.$verific$n1741$1584.
Removed top 1 bits (of 12) from wire fpu.$flatten\u1.$verific$n1781$1587.
Removed top 1 bits (of 12) from wire fpu.$flatten\u2.$verific$n1918$5117.
Removed top 21 bits (of 32) from wire fpu.$flatten\u2.$verific$n1931$5118.
Removed top 1 bits (of 13) from wire fpu.$flatten\u3.$verific$n2052$4125.
Removed top 1 bits (of 13) from wire fpu.$flatten\u3.$verific$n2079$4127.
Removed top 1 bits (of 7) from wire fpu.$flatten\u4.$verific$n1590$2090.
Removed top 1 bits (of 54) from wire fpu.$flatten\u4.$verific$n1909$2100.
Removed top 10 bits (of 64) from wire fpu.$flatten\u4.$verific$n2133$2102.
Removed top 1 bits (of 54) from wire fpu.$flatten\u4.$verific$n2534$2106.
Removed top 1 bits (of 54) from wire fpu.$flatten\u4.$verific$n2590$2107.
Removed top 1 bits (of 54) from wire fpu.$flatten\u4.$verific$n2924$2110.
Removed top 1 bits (of 13) from wire fpu.$flatten\u4.$verific$n4167$2124.
Removed top 20 bits (of 32) from wire fpu.$flatten\u4.$verific$n4181$2125.
Removed top 1 bits (of 13) from wire fpu.$flatten\u4.$verific$n4321$2135.
Removed top 20 bits (of 32) from wire fpu.$flatten\u4.$verific$n4335$2136.
Removed top 1 bits (of 13) from wire fpu.$flatten\u4.$verific$n4436$2142.
Removed top 6 bits (of 13) from wire fpu.$flatten\u4.$verific$n4792$2156.
Removed top 2 bits (of 56) from wire fpu.$flatten\u5.$verific$n463$4846.
Removed top 1 bits (of 13) from wire fpu.$flatten\u5.$verific$n591$4849.
Removed top 2 bits (of 56) from wire fpu.$flatten\u5.$verific$n618$4851.
Removed top 2 bits (of 56) from wire fpu.$flatten\u5.$verific$n880$4857.
Removed top 2 bits (of 56) from wire fpu.$flatten\u5.$verific$n950$4859.
Removed top 1 bits (of 12) from wire fpu.$verific$n1314$104.
Removed top 1 bits (of 56) from wire fpu.div_out.
Removed top 1 bits (of 12) from wire fpu.exp_addsub.
Removed top 1 bits (of 56) from wire fpu.mul_out.

yosys> peepopt

3.57. Executing PEEPOPT pass (run peephole optimizers).

yosys> opt_clean

3.58. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \fpu..
Removed 0 unused cells and 44 unused wires.
<suppressed ~1 debug messages>

yosys> bmuxmap

3.59. Executing BMUXMAP pass.

yosys> demuxmap

3.60. Executing DEMUXMAP pass.

yosys> clean_zerowidth

yosys> alumacc

3.61. Executing ALUMACC pass (create $alu and $macc cells).
Extracting $alu and $macc cells in module fpu:
  creating $macc model for $flatten\u1.$verific$add_74$fpu_add.v:122$1675 ($add).
  creating $macc model for $flatten\u1.$verific$add_78$fpu_add.v:124$1679 ($add).
  creating $macc model for $flatten\u1.$verific$add_83$fpu_add.v:126$1685 ($add).
  creating $macc model for $flatten\u1.$verific$sub_63$fpu_add.v:117$1665 ($sub).
  creating $macc model for $flatten\u1.$verific$sub_64$fpu_add.v:117$1666 ($sub).
  creating $macc model for $flatten\u2.$verific$sub_106$fpu_sub.v:150$5295 ($sub).
  creating $macc model for $flatten\u2.$verific$sub_84$fpu_sub.v:140$5274 ($sub).
  creating $macc model for $flatten\u2.$verific$sub_85$fpu_sub.v:140$5275 ($sub).
  creating $macc model for $flatten\u2.$verific$sub_96$fpu_sub.v:146$5285 ($sub).
  creating $macc model for $flatten\u3.$verific$add_118$fpu_mul.v:189$4417 ($add).
  creating $macc model for $flatten\u3.$verific$add_120$fpu_mul.v:190$4419 ($add).
  creating $macc model for $flatten\u3.$verific$add_122$fpu_mul.v:191$4421 ($add).
  creating $macc model for $flatten\u3.$verific$add_124$fpu_mul.v:192$4423 ($add).
  creating $macc model for $flatten\u3.$verific$add_126$fpu_mul.v:193$4425 ($add).
  creating $macc model for $flatten\u3.$verific$add_128$fpu_mul.v:194$4427 ($add).
  creating $macc model for $flatten\u3.$verific$add_130$fpu_mul.v:195$4429 ($add).
  creating $macc model for $flatten\u3.$verific$add_132$fpu_mul.v:196$4431 ($add).
  creating $macc model for $flatten\u3.$verific$add_134$fpu_mul.v:197$4433 ($add).
  creating $macc model for $flatten\u3.$verific$add_74$fpu_mul.v:168$4371 ($add).
  creating $macc model for $flatten\u3.$verific$add_76$fpu_mul.v:168$4373 ($add).
  creating $macc model for $flatten\u3.$verific$add_78$fpu_mul.v:168$4375 ($add).
  creating $macc model for $flatten\u3.$verific$mult_100$fpu_mul.v:180$4399 ($mul).
  creating $macc model for $flatten\u3.$verific$mult_102$fpu_mul.v:181$4401 ($mul).
  creating $macc model for $flatten\u3.$verific$mult_104$fpu_mul.v:182$4403 ($mul).
  creating $macc model for $flatten\u3.$verific$mult_106$fpu_mul.v:183$4405 ($mul).
  creating $macc model for $flatten\u3.$verific$mult_108$fpu_mul.v:184$4407 ($mul).
  creating $macc model for $flatten\u3.$verific$mult_110$fpu_mul.v:185$4409 ($mul).
  creating $macc model for $flatten\u3.$verific$mult_112$fpu_mul.v:186$4411 ($mul).
  creating $macc model for $flatten\u3.$verific$mult_114$fpu_mul.v:187$4413 ($mul).
  creating $macc model for $flatten\u3.$verific$mult_116$fpu_mul.v:188$4415 ($mul).
  creating $macc model for $flatten\u3.$verific$mult_98$fpu_mul.v:179$4397 ($mul).
  creating $macc model for $flatten\u3.$verific$sub_82$fpu_mul.v:170$4379 ($sub).
  creating $macc model for $flatten\u3.$verific$sub_84$fpu_mul.v:171$4382 ($sub).
  creating $macc model for $flatten\u3.$verific$sub_90$fpu_mul.v:174$4389 ($sub).
  creating $macc model for $flatten\u4.$verific$add_199$fpu_div.v:232$2425 ($add).
  creating $macc model for $flatten\u4.$verific$add_219$fpu_div.v:241$2447 ($add).
  creating $macc model for $flatten\u4.$verific$add_228$fpu_div.v:245$2457 ($add).
  creating $macc model for $flatten\u4.$verific$sub_160$fpu_div.v:195$2410 ($sub).
  creating $macc model for $flatten\u4.$verific$sub_203$fpu_div.v:234$2429 ($sub).
  creating $macc model for $flatten\u4.$verific$sub_206$fpu_div.v:235$2433 ($sub).
  creating $macc model for $flatten\u4.$verific$sub_216$fpu_div.v:240$2443 ($sub).
  creating $macc model for $flatten\u4.$verific$sub_225$fpu_div.v:244$2453 ($sub).
  creating $macc model for $flatten\u4.$verific$sub_234$fpu_div.v:248$2462 ($sub).
  creating $macc model for $flatten\u4.$verific$sub_243$fpu_div.v:255$2471 ($sub).
  creating $macc model for $flatten\u4.$verific$sub_61$fpu_div.v:147$2322 ($sub).
  creating $macc model for $flatten\u5.$verific$add_35$fpu_round.v:84$4889 ($add).
  creating $macc model for $flatten\u5.$verific$add_39$fpu_round.v:86$4893 ($add).
  creating $macc model for $verific$add_120$fpu_double.v:227$1434 ($add).
  merging $macc model for $flatten\u3.$verific$add_76$fpu_mul.v:168$4373 into $flatten\u3.$verific$add_78$fpu_mul.v:168$4375.
  merging $macc model for $flatten\u3.$verific$add_74$fpu_mul.v:168$4371 into $flatten\u3.$verific$add_78$fpu_mul.v:168$4375.
  merging $macc model for $flatten\u2.$verific$sub_84$fpu_sub.v:140$5274 into $flatten\u2.$verific$sub_85$fpu_sub.v:140$5275.
  merging $macc model for $flatten\u1.$verific$sub_63$fpu_add.v:117$1665 into $flatten\u1.$verific$sub_64$fpu_add.v:117$1666.
  creating $alu model for $macc $flatten\u4.$verific$sub_243$fpu_div.v:255$2471.
  creating $alu model for $macc $flatten\u4.$verific$sub_234$fpu_div.v:248$2462.
  creating $alu model for $macc $flatten\u4.$verific$sub_225$fpu_div.v:244$2453.
  creating $alu model for $macc $flatten\u4.$verific$sub_216$fpu_div.v:240$2443.
  creating $alu model for $macc $flatten\u4.$verific$sub_206$fpu_div.v:235$2433.
  creating $alu model for $macc $flatten\u4.$verific$sub_203$fpu_div.v:234$2429.
  creating $alu model for $macc $flatten\u4.$verific$sub_160$fpu_div.v:195$2410.
  creating $alu model for $macc $flatten\u4.$verific$add_228$fpu_div.v:245$2457.
  creating $alu model for $macc $flatten\u4.$verific$add_219$fpu_div.v:241$2447.
  creating $alu model for $macc $flatten\u4.$verific$add_199$fpu_div.v:232$2425.
  creating $alu model for $macc $flatten\u3.$verific$sub_90$fpu_mul.v:174$4389.
  creating $alu model for $macc $flatten\u3.$verific$sub_84$fpu_mul.v:171$4382.
  creating $alu model for $macc $flatten\u3.$verific$sub_82$fpu_mul.v:170$4379.
  creating $alu model for $macc $flatten\u4.$verific$sub_61$fpu_div.v:147$2322.
  creating $alu model for $macc $flatten\u5.$verific$add_35$fpu_round.v:84$4889.
  creating $alu model for $macc $flatten\u3.$verific$add_134$fpu_mul.v:197$4433.
  creating $alu model for $macc $flatten\u3.$verific$add_132$fpu_mul.v:196$4431.
  creating $alu model for $macc $flatten\u3.$verific$add_130$fpu_mul.v:195$4429.
  creating $alu model for $macc $flatten\u3.$verific$add_128$fpu_mul.v:194$4427.
  creating $alu model for $macc $flatten\u3.$verific$add_126$fpu_mul.v:193$4425.
  creating $alu model for $macc $flatten\u3.$verific$add_124$fpu_mul.v:192$4423.
  creating $alu model for $macc $flatten\u3.$verific$add_122$fpu_mul.v:191$4421.
  creating $alu model for $macc $flatten\u3.$verific$add_120$fpu_mul.v:190$4419.
  creating $alu model for $macc $flatten\u3.$verific$add_118$fpu_mul.v:189$4417.
  creating $alu model for $macc $flatten\u2.$verific$sub_96$fpu_sub.v:146$5285.
  creating $alu model for $macc $flatten\u5.$verific$add_39$fpu_round.v:86$4893.
  creating $alu model for $macc $flatten\u2.$verific$sub_106$fpu_sub.v:150$5295.
  creating $alu model for $macc $verific$add_120$fpu_double.v:227$1434.
  creating $alu model for $macc $flatten\u1.$verific$add_83$fpu_add.v:126$1685.
  creating $alu model for $macc $flatten\u1.$verific$add_78$fpu_add.v:124$1679.
  creating $alu model for $macc $flatten\u1.$verific$add_74$fpu_add.v:122$1675.
  creating $macc cell for $flatten\u3.$verific$mult_104$fpu_mul.v:182$4403: $auto$alumacc.cc:365:replace_macc$6657
  creating $macc cell for $flatten\u3.$verific$mult_102$fpu_mul.v:181$4401: $auto$alumacc.cc:365:replace_macc$6658
  creating $macc cell for $flatten\u3.$verific$mult_100$fpu_mul.v:180$4399: $auto$alumacc.cc:365:replace_macc$6659
  creating $macc cell for $flatten\u3.$verific$add_78$fpu_mul.v:168$4375: $auto$alumacc.cc:365:replace_macc$6660
  creating $macc cell for $flatten\u3.$verific$mult_110$fpu_mul.v:185$4409: $auto$alumacc.cc:365:replace_macc$6661
  creating $macc cell for $flatten\u2.$verific$sub_85$fpu_sub.v:140$5275: $auto$alumacc.cc:365:replace_macc$6662
  creating $macc cell for $flatten\u3.$verific$mult_112$fpu_mul.v:186$4411: $auto$alumacc.cc:365:replace_macc$6663
  creating $macc cell for $flatten\u3.$verific$mult_114$fpu_mul.v:187$4413: $auto$alumacc.cc:365:replace_macc$6664
  creating $macc cell for $flatten\u1.$verific$sub_64$fpu_add.v:117$1666: $auto$alumacc.cc:365:replace_macc$6665
  creating $macc cell for $flatten\u3.$verific$mult_116$fpu_mul.v:188$4415: $auto$alumacc.cc:365:replace_macc$6666
  creating $macc cell for $flatten\u3.$verific$mult_98$fpu_mul.v:179$4397: $auto$alumacc.cc:365:replace_macc$6667
  creating $macc cell for $flatten\u3.$verific$mult_108$fpu_mul.v:184$4407: $auto$alumacc.cc:365:replace_macc$6668
  creating $macc cell for $flatten\u3.$verific$mult_106$fpu_mul.v:183$4405: $auto$alumacc.cc:365:replace_macc$6669
  creating $alu model for $flatten\u1.$verific$LessThan_44$fpu_add.v:109$1647 ($lt): new $alu
  creating $alu model for $flatten\u1.$verific$LessThan_5$fpu_add.v:64$1628 ($lt): new $alu
  creating $alu model for $flatten\u1.$verific$LessThan_57$fpu_add.v:115$1659 ($lt): new $alu
  creating $alu model for $flatten\u2.$verific$LessThan_48$fpu_sub.v:127$5241 ($lt): new $alu
  creating $alu model for $flatten\u2.$verific$LessThan_52$fpu_sub.v:129$5245 ($le): new $alu
  creating $alu model for $flatten\u2.$verific$LessThan_70$fpu_sub.v:136$5263 ($lt): new $alu
  creating $alu model for $flatten\u2.$verific$LessThan_9$fpu_sub.v:84$5227 ($lt): new $alu
  creating $alu model for $flatten\u2.$verific$LessThan_98$fpu_sub.v:147$5287 ($lt): new $alu
  creating $alu model for $flatten\u3.$verific$LessThan_80$fpu_mul.v:169$4377 ($lt): new $alu
  creating $alu model for $flatten\u3.$verific$LessThan_88$fpu_mul.v:173$4387 ($lt): new $alu
  creating $alu model for $flatten\u4.$verific$LessThan_201$fpu_div.v:233$2427 ($lt): merged with $flatten\u4.$verific$sub_203$fpu_div.v:234$2429.
  creating $alu model for $flatten\u4.$verific$LessThan_214$fpu_div.v:239$2441 ($lt): merged with $flatten\u4.$verific$sub_225$fpu_div.v:244$2453.
  creating $alu model for $flatten\u4.$verific$LessThan_221$fpu_div.v:242$2449 ($lt): new $alu
  creating $alu model for $flatten\u4.$verific$LessThan_78$fpu_div.v:168$2335 ($lt): new $alu
  creating $alu model for $flatten\u6.$verific$LessThan_203$fpu_exceptions.v:225$3555 ($lt): new $alu
  creating $alu model for $verific$LessThan_3$fpu_double.v:79$133 ($le): new $alu
  creating $alu model for $flatten\u2.$verific$equal_50$fpu_sub.v:128$5243 ($eq): merged with $flatten\u2.$verific$LessThan_48$fpu_sub.v:127$5241.
  creating $alu cell for $verific$LessThan_3$fpu_double.v:79$133: $auto$alumacc.cc:485:replace_alu$6684
  creating $alu cell for $flatten\u6.$verific$LessThan_203$fpu_exceptions.v:225$3555: $auto$alumacc.cc:485:replace_alu$6693
  creating $alu cell for $flatten\u4.$verific$LessThan_78$fpu_div.v:168$2335: $auto$alumacc.cc:485:replace_alu$6698
  creating $alu cell for $flatten\u4.$verific$LessThan_221$fpu_div.v:242$2449: $auto$alumacc.cc:485:replace_alu$6703
  creating $alu cell for $flatten\u3.$verific$LessThan_88$fpu_mul.v:173$4387: $auto$alumacc.cc:485:replace_alu$6708
  creating $alu cell for $flatten\u3.$verific$LessThan_80$fpu_mul.v:169$4377: $auto$alumacc.cc:485:replace_alu$6713
  creating $alu cell for $flatten\u2.$verific$LessThan_98$fpu_sub.v:147$5287: $auto$alumacc.cc:485:replace_alu$6718
  creating $alu cell for $flatten\u2.$verific$LessThan_9$fpu_sub.v:84$5227: $auto$alumacc.cc:485:replace_alu$6729
  creating $alu cell for $flatten\u2.$verific$LessThan_70$fpu_sub.v:136$5263: $auto$alumacc.cc:485:replace_alu$6734
  creating $alu cell for $flatten\u2.$verific$LessThan_52$fpu_sub.v:129$5245: $auto$alumacc.cc:485:replace_alu$6739
  creating $alu cell for $flatten\u2.$verific$LessThan_48$fpu_sub.v:127$5241, $flatten\u2.$verific$equal_50$fpu_sub.v:128$5243: $auto$alumacc.cc:485:replace_alu$6752
  creating $alu cell for $flatten\u1.$verific$LessThan_57$fpu_add.v:115$1659: $auto$alumacc.cc:485:replace_alu$6759
  creating $alu cell for $flatten\u1.$verific$LessThan_5$fpu_add.v:64$1628: $auto$alumacc.cc:485:replace_alu$6764
  creating $alu cell for $flatten\u1.$verific$LessThan_44$fpu_add.v:109$1647: $auto$alumacc.cc:485:replace_alu$6769
  creating $alu cell for $flatten\u1.$verific$add_74$fpu_add.v:122$1675: $auto$alumacc.cc:485:replace_alu$6774
  creating $alu cell for $flatten\u1.$verific$add_78$fpu_add.v:124$1679: $auto$alumacc.cc:485:replace_alu$6777
  creating $alu cell for $flatten\u1.$verific$add_83$fpu_add.v:126$1685: $auto$alumacc.cc:485:replace_alu$6780
  creating $alu cell for $verific$add_120$fpu_double.v:227$1434: $auto$alumacc.cc:485:replace_alu$6783
  creating $alu cell for $flatten\u2.$verific$sub_106$fpu_sub.v:150$5295: $auto$alumacc.cc:485:replace_alu$6786
  creating $alu cell for $flatten\u5.$verific$add_39$fpu_round.v:86$4893: $auto$alumacc.cc:485:replace_alu$6789
  creating $alu cell for $flatten\u2.$verific$sub_96$fpu_sub.v:146$5285: $auto$alumacc.cc:485:replace_alu$6792
  creating $alu cell for $flatten\u3.$verific$add_118$fpu_mul.v:189$4417: $auto$alumacc.cc:485:replace_alu$6795
  creating $alu cell for $flatten\u3.$verific$add_120$fpu_mul.v:190$4419: $auto$alumacc.cc:485:replace_alu$6798
  creating $alu cell for $flatten\u3.$verific$add_122$fpu_mul.v:191$4421: $auto$alumacc.cc:485:replace_alu$6801
  creating $alu cell for $flatten\u3.$verific$add_124$fpu_mul.v:192$4423: $auto$alumacc.cc:485:replace_alu$6804
  creating $alu cell for $flatten\u3.$verific$add_126$fpu_mul.v:193$4425: $auto$alumacc.cc:485:replace_alu$6807
  creating $alu cell for $flatten\u3.$verific$add_128$fpu_mul.v:194$4427: $auto$alumacc.cc:485:replace_alu$6810
  creating $alu cell for $flatten\u3.$verific$add_130$fpu_mul.v:195$4429: $auto$alumacc.cc:485:replace_alu$6813
  creating $alu cell for $flatten\u3.$verific$add_132$fpu_mul.v:196$4431: $auto$alumacc.cc:485:replace_alu$6816
  creating $alu cell for $flatten\u3.$verific$add_134$fpu_mul.v:197$4433: $auto$alumacc.cc:485:replace_alu$6819
  creating $alu cell for $flatten\u5.$verific$add_35$fpu_round.v:84$4889: $auto$alumacc.cc:485:replace_alu$6822
  creating $alu cell for $flatten\u4.$verific$sub_61$fpu_div.v:147$2322: $auto$alumacc.cc:485:replace_alu$6825
  creating $alu cell for $flatten\u3.$verific$sub_82$fpu_mul.v:170$4379: $auto$alumacc.cc:485:replace_alu$6828
  creating $alu cell for $flatten\u3.$verific$sub_84$fpu_mul.v:171$4382: $auto$alumacc.cc:485:replace_alu$6831
  creating $alu cell for $flatten\u3.$verific$sub_90$fpu_mul.v:174$4389: $auto$alumacc.cc:485:replace_alu$6834
  creating $alu cell for $flatten\u4.$verific$add_199$fpu_div.v:232$2425: $auto$alumacc.cc:485:replace_alu$6837
  creating $alu cell for $flatten\u4.$verific$add_219$fpu_div.v:241$2447: $auto$alumacc.cc:485:replace_alu$6840
  creating $alu cell for $flatten\u4.$verific$add_228$fpu_div.v:245$2457: $auto$alumacc.cc:485:replace_alu$6843
  creating $alu cell for $flatten\u4.$verific$sub_160$fpu_div.v:195$2410: $auto$alumacc.cc:485:replace_alu$6846
  creating $alu cell for $flatten\u4.$verific$sub_203$fpu_div.v:234$2429, $flatten\u4.$verific$LessThan_201$fpu_div.v:233$2427: $auto$alumacc.cc:485:replace_alu$6849
  creating $alu cell for $flatten\u4.$verific$sub_206$fpu_div.v:235$2433: $auto$alumacc.cc:485:replace_alu$6860
  creating $alu cell for $flatten\u4.$verific$sub_216$fpu_div.v:240$2443: $auto$alumacc.cc:485:replace_alu$6863
  creating $alu cell for $flatten\u4.$verific$sub_225$fpu_div.v:244$2453, $flatten\u4.$verific$LessThan_214$fpu_div.v:239$2441: $auto$alumacc.cc:485:replace_alu$6866
  creating $alu cell for $flatten\u4.$verific$sub_234$fpu_div.v:248$2462: $auto$alumacc.cc:485:replace_alu$6871
  creating $alu cell for $flatten\u4.$verific$sub_243$fpu_div.v:255$2471: $auto$alumacc.cc:485:replace_alu$6874
  created 45 $alu and 13 $macc cells.

yosys> opt_expr

3.62. Executing OPT_EXPR pass (perform const folding).
Optimizing module fpu.
<suppressed ~6 debug messages>

yosys> opt_merge -nomux

3.63. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\fpu'.
Removed a total of 0 cells.

yosys> opt_muxtree

3.64. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \fpu..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Removed 0 multiplexer ports.
<suppressed ~251 debug messages>

yosys> opt_reduce

3.65. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \fpu.
Performed a total of 0 changes.

yosys> opt_merge

3.66. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\fpu'.
Removed a total of 0 cells.

yosys> opt_share

3.67. Executing OPT_SHARE pass.

yosys> opt_dff -nosdff -nodffe

3.68. Executing OPT_DFF pass (perform DFF optimizations).

yosys> opt_clean

3.69. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \fpu..
Removed 6 unused cells and 29 unused wires.
<suppressed ~7 debug messages>

yosys> opt_expr

3.70. Executing OPT_EXPR pass (perform const folding).
Optimizing module fpu.

yosys> opt_muxtree

3.71. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \fpu..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Removed 0 multiplexer ports.
<suppressed ~251 debug messages>

yosys> opt_reduce

3.72. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \fpu.
Performed a total of 0 changes.

yosys> opt_merge

3.73. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\fpu'.
Removed a total of 0 cells.

yosys> opt_share

3.74. Executing OPT_SHARE pass.

yosys> opt_dff -nosdff -nodffe

3.75. Executing OPT_DFF pass (perform DFF optimizations).

yosys> opt_clean

3.76. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \fpu..

yosys> opt_expr

3.77. Executing OPT_EXPR pass (perform const folding).
Optimizing module fpu.
MAX OPT ITERATION = 2

yosys> stat

3.78. Printing statistics.

=== fpu ===

   Number of wires:               2160
   Number of wire bits:          24843
   Number of public wires:         376
   Number of public wire bits:    7984
   Number of memories:               0
   Number of memory bits:            0
   Number of processes:              0
   Number of cells:               2023
     $alu                           45
     $and                           77
     $dff                           35
     $dffe                         265
     $dlatch                         1
     $eq                            13
     $logic_not                      9
     $macc                          13
     $mux                          684
     $ne                            55
     $not                          462
     $or                            44
     $pmux                           8
     $reduce_and                    59
     $reduce_bool                   13
     $reduce_or                    227
     $shl                            7
     $shr                            4
     $xor                            2


yosys> memory -nomap

3.79. Executing MEMORY pass.

yosys> opt_mem

3.79.1. Executing OPT_MEM pass (optimize memories).
Performed a total of 0 transformations.

yosys> opt_mem_priority

3.79.2. Executing OPT_MEM_PRIORITY pass (removing unnecessary memory write priority relations).
Performed a total of 0 transformations.

yosys> opt_mem_feedback

3.79.3. Executing OPT_MEM_FEEDBACK pass (finding memory read-to-write feedback paths).

yosys> memory_bmux2rom

3.79.4. Executing MEMORY_BMUX2ROM pass (converting muxes to ROMs).

yosys> memory_dff

3.79.5. Executing MEMORY_DFF pass (merging $dff cells to $memrd).

yosys> opt_clean

3.79.6. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \fpu..

yosys> memory_share

3.79.7. Executing MEMORY_SHARE pass (consolidating $memrd/$memwr cells).

yosys> opt_mem_widen

3.79.8. Executing OPT_MEM_WIDEN pass (optimize memories where all ports are wide).
Performed a total of 0 transformations.

yosys> opt_clean

3.79.9. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \fpu..

yosys> memory_collect

3.79.10. Executing MEMORY_COLLECT pass (generating $mem cells).

yosys> stat

3.80. Printing statistics.

=== fpu ===

   Number of wires:               2160
   Number of wire bits:          24843
   Number of public wires:         376
   Number of public wire bits:    7984
   Number of memories:               0
   Number of memory bits:            0
   Number of processes:              0
   Number of cells:               2023
     $alu                           45
     $and                           77
     $dff                           35
     $dffe                         265
     $dlatch                         1
     $eq                            13
     $logic_not                      9
     $macc                          13
     $mux                          684
     $ne                            55
     $not                          462
     $or                            44
     $pmux                           8
     $reduce_and                    59
     $reduce_bool                   13
     $reduce_or                    227
     $shl                            7
     $shr                            4
     $xor                            2


yosys> muxpack

3.81. Executing MUXPACK pass ($mux cell cascades to $pmux).
Converted 0 (p)mux cells into 0 pmux cells.
<suppressed ~613 debug messages>

yosys> opt_clean

3.82. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \fpu..

yosys> pmuxtree

3.83. Executing PMUXTREE pass.

yosys> muxpack

3.84. Executing MUXPACK pass ($mux cell cascades to $pmux).
Converting fpu.$auto$pmuxtree.cc:65:recursive_mux_generator$7531 ... fpu.$auto$pmuxtree.cc:65:recursive_mux_generator$7533 to a pmux with 2 cases.
Converting fpu.$auto$pmuxtree.cc:65:recursive_mux_generator$7345 ... fpu.$auto$pmuxtree.cc:65:recursive_mux_generator$7347 to a pmux with 2 cases.
Converting fpu.$auto$pmuxtree.cc:65:recursive_mux_generator$6881 ... fpu.$auto$pmuxtree.cc:65:recursive_mux_generator$6883 to a pmux with 2 cases.
Converted 6 (p)mux cells into 3 pmux cells.
<suppressed ~771 debug messages>

yosys> memory_map

3.85. Executing MEMORY_MAP pass (converting memories to logic and flip-flops).

yosys> stat

3.86. Printing statistics.

=== fpu ===

   Number of wires:               2491
   Number of wire bits:          26461
   Number of public wires:         376
   Number of public wire bits:    7984
   Number of memories:               0
   Number of memory bits:            0
   Number of processes:              0
   Number of cells:               2343
     $alu                           45
     $and                           77
     $dff                           35
     $dffe                         265
     $dlatch                         1
     $eq                            13
     $logic_not                      9
     $macc                          13
     $mux                          904
     $ne                            55
     $not                          470
     $or                            73
     $pmux                           3
     $reduce_and                    59
     $reduce_bool                   13
     $reduce_or                    295
     $shl                            7
     $shr                            4
     $xor                            2


yosys> techmap -map +/techmap.v -map +/rapidsilicon/genesis/arith_map.v

3.87. Executing TECHMAP pass (map to technology primitives).

3.87.1. Executing Verilog-2005 frontend: /nfs_scratch/scratch/Vorak/aram/Workspace/Raptor/yosys_verific_rs/yosys/install/bin/../share/yosys/techmap.v
Parsing Verilog input from `/nfs_scratch/scratch/Vorak/aram/Workspace/Raptor/yosys_verific_rs/yosys/install/bin/../share/yosys/techmap.v' to AST representation.
Generating RTLIL representation for module `\_90_simplemap_bool_ops'.
Generating RTLIL representation for module `\_90_simplemap_reduce_ops'.
Generating RTLIL representation for module `\_90_simplemap_logic_ops'.
Generating RTLIL representation for module `\_90_simplemap_compare_ops'.
Generating RTLIL representation for module `\_90_simplemap_various'.
Generating RTLIL representation for module `\_90_simplemap_registers'.
Generating RTLIL representation for module `\_90_shift_ops_shr_shl_sshl_sshr'.
Generating RTLIL representation for module `\_90_shift_shiftx'.
Generating RTLIL representation for module `\_90_fa'.
Generating RTLIL representation for module `\_90_lcu'.
Generating RTLIL representation for module `\_90_alu'.
Generating RTLIL representation for module `\_90_macc'.
Generating RTLIL representation for module `\_90_alumacc'.
Generating RTLIL representation for module `\$__div_mod_u'.
Generating RTLIL representation for module `\$__div_mod_trunc'.
Generating RTLIL representation for module `\_90_div'.
Generating RTLIL representation for module `\_90_mod'.
Generating RTLIL representation for module `\$__div_mod_floor'.
Generating RTLIL representation for module `\_90_divfloor'.
Generating RTLIL representation for module `\_90_modfloor'.
Generating RTLIL representation for module `\_90_pow'.
Generating RTLIL representation for module `\_90_pmux'.
Generating RTLIL representation for module `\_90_demux'.
Generating RTLIL representation for module `\_90_lut'.
Successfully finished Verilog frontend.

3.87.2. Executing Verilog-2005 frontend: /nfs_scratch/scratch/Vorak/aram/Workspace/Raptor/yosys_verific_rs/yosys/install/bin/../share/yosys/rapidsilicon/genesis/arith_map.v
Parsing Verilog input from `/nfs_scratch/scratch/Vorak/aram/Workspace/Raptor/yosys_verific_rs/yosys/install/bin/../share/yosys/rapidsilicon/genesis/arith_map.v' to AST representation.
Generating RTLIL representation for module `\_80_rs_alu'.
Successfully finished Verilog frontend.

3.87.3. Continuing TECHMAP pass.
Using extmapper simplemap for cells of type $dffe.
Using extmapper simplemap for cells of type $mux.
Using extmapper simplemap for cells of type $reduce_bool.
Using extmapper simplemap for cells of type $reduce_and.
Using extmapper simplemap for cells of type $not.
Using extmapper simplemap for cells of type $reduce_or.
Using extmapper simplemap for cells of type $or.
Using extmapper simplemap for cells of type $ne.
Using template $paramod$bfd8bd45a9c0c072107dc68434451a8835814ae0\_90_alu for cells of type $alu.
Using extmapper simplemap for cells of type $and.
Using template $paramod$ed0bb9616228df1e6c226f91f8133e751815f1b1\_90_pmux for cells of type $pmux.
Using template $paramod$b756e651b7db7aeb455331d9a2df073db93fcc2e\_90_pmux for cells of type $pmux.
Using extmapper simplemap for cells of type $dff.
Using template $paramod$1449f5897c1250218bf10c7345354831c7f19def\_90_alu for cells of type $alu.
Using template $paramod$17df9ef9850b9c6df11a17e1fb99ef7983b68c98\_80_rs_alu for cells of type $alu.
Using extmapper simplemap for cells of type $eq.
Using template $paramod$a04dd9d4d8b430140c4ff94b50470fb380fda2a0\_90_alu for cells of type $alu.
Using template $paramod$cb0fc09087c08c1d91c57f0d8e4794d8a189ec96\_80_rs_alu for cells of type $alu.
Using extmapper simplemap for cells of type $logic_not.
Using template $paramod$constmap:0306ba79cd2ff71844f59f086e1ea3ab16714f70$paramod$16e0270589a8149701c18495a664bd6a082abae0\_90_shift_ops_shr_shl_sshl_sshr for cells of type $shl.
Using template $paramod$c28ee2be3bc0e7d385fb566edd796bc91d15f849\_90_alu for cells of type $alu.
Using template $paramod$6831557730818fb92b11a295f9eb33ff8fa62af1\_90_alu for cells of type $alu.
Using template $paramod$b4f77559cc9a241738bc2a5f6c0923147e9a0644\_90_alu for cells of type $alu.
Using template $paramod$ee3d784672cdb1cb32d9a801a3af776716f16b74\_90_alu for cells of type $alu.
Using template $paramod$48102c3e4d5e378278b0360b35e96d4c29001b23\_80_rs_alu for cells of type $alu.
Using template $paramod$constmap:9a945d02642b87af84a84f3afe20d00d574c3f0a$paramod$a5ac653bc70748b7c4912c009637333e9a0de777\_90_shift_ops_shr_shl_sshl_sshr for cells of type $shl.
Using template $paramod$constmap:7fcb0b0e307d3b0f8faca43f67c9d3002ac7fff2$paramod$69431fc58c36fb3034a314a5b044931de5d717c5\_90_shift_ops_shr_shl_sshl_sshr for cells of type $shl.
Using template $paramod$constmap:f0fe3ef41d57b4b39ec41367c3f7106e3d30149f$paramod$69d3a6d299a4c8ba381f042ce4688dc7f10fb520\_90_shift_ops_shr_shl_sshl_sshr for cells of type $shr.
Using template $paramod$c4905825bb8ecc38b98eb4167e8b007447af7884\_90_alu for cells of type $alu.
Using template $paramod$b40e0f66d01d243904da425c63ff802ae596888e\_90_alu for cells of type $alu.
Using template $paramod$dbcdc7e8aa1a4080cea2deda6fdc8772064f4d90\_90_alu for cells of type $alu.
Using template $paramod$a7c9751983153561a93ce14686d50c76f61be0fb\_90_alu for cells of type $alu.
Using template $paramod$891bda9d055441549e2e58368f2e39e6bd6d9e3c\_80_rs_alu for cells of type $alu.
Using template $paramod$ec3f52a29322910795f4ae2e93d5d67ca202f68b\_80_rs_alu for cells of type $alu.
Using template $paramod$e7000ae9dcc50b4ddfedbc413a751ce177cef708\_80_rs_alu for cells of type $alu.
Using template $paramod$116f5fa59a87441cd331a580ee132e3d8d18c8da\_80_rs_alu for cells of type $alu.
Using template $paramod$09049c4c99c38b853cb497e501910ef2eac6320d\_80_rs_alu for cells of type $alu.
Using template $paramod$fe72f95c7c5e725d2157e646100cef6e7098d8a6\_80_rs_alu for cells of type $alu.
Using template $paramod$a9a78f27a536bf5f0f7a2cafd09e7d15795252e1\_80_rs_alu for cells of type $alu.
Using template $paramod$f2fc15fce36523bb4ff0441cdfd75d74c443caf0\_80_rs_alu for cells of type $alu.
Using template $paramod$b3aabb659f18fbc3a95ecd8c4e9dbf0961f3e51a\_90_alu for cells of type $alu.
Using extmapper maccmap for cells of type $macc.
  add \u3.mul_b [52:34] * \u3.mul_a [40:24] (19x17 bits, unsigned)
Using extmapper simplemap for cells of type $xor.
  add \u3.exponent_a (11 bits, unsigned)
  add \u3.exponent_b (11 bits, unsigned)
  add bits { $flatten\u3.$verific$n2007$3956 $flatten\u3.$verific$n2022$3957 } (2 bits)
  packed 1 (1) bits / 1 words into adder tree
  add \u3.mul_a [23:0] * \u3.mul_b [33:17] (24x17 bits, unsigned)
  add \u3.mul_a [23:0] * \u3.mul_b [50:34] (24x17 bits, unsigned)
  add \u3.mul_a [40:24] * \u3.mul_b [16:0] (17x17 bits, unsigned)
  add \u2.exponent_large (11 bits, unsigned)
  sub \u2.large_norm_small_denorm (1 bits, unsigned)
  sub \u2.exponent_small (11 bits, unsigned)
  packed 2 (1) bits / 1 words into adder tree
  add \u3.mul_b [33:17] * \u3.mul_a [52:41] (17x12 bits, unsigned)
  add \u1.exponent_large (11 bits, unsigned)
  sub \u1.large_norm_small_denorm (1 bits, unsigned)
  sub \u1.exponent_small (11 bits, unsigned)
  packed 2 (1) bits / 1 words into adder tree
  add \u3.mul_a [23:0] * \u3.mul_b [16:0] (24x17 bits, unsigned)
  add \u3.mul_a [40:24] * \u3.mul_b [33:17] (17x17 bits, unsigned)
Using extmapper simplemap for cells of type $dlatch.
Using template $paramod$constmap:858980f752bb4f824dcc2572b952374f13a077a8$paramod$4be46fed8d29c1331ff6b5d9d111228fa6d6e4e4\_90_shift_ops_shr_shl_sshl_sshr for cells of type $shl.
Using template $paramod$constmap:44f3e0ee27f0afa6d17ca6da2225b36f2da678b1$paramod$8813b156f575f58ffbf9714dd537a6af85c6f424\_90_shift_ops_shr_shl_sshl_sshr for cells of type $shl.
Using template $paramod$constmap:44f3e0ee27f0afa6d17ca6da2225b36f2da678b1$paramod$1caceb394f2cab44a3648a99c02e6fa80797d28c\_90_shift_ops_shr_shl_sshl_sshr for cells of type $shr.
Using template $paramod$9156dc21c2b570fa3660be2e901b5ab03907aeb1\_90_alu for cells of type $alu.
Using template $paramod$d1133de188e2f4fbd544b60b6d3c982871166b8e\_90_alu for cells of type $alu.
Using template $paramod$9503ccbdaa0d43eea34db1a74a4be1091d99b327\_90_alu for cells of type $alu.
Using template $paramod$ec32b97001540459632a2df9accd677d3703ea0f\_90_alu for cells of type $alu.
Using template $paramod$3402db66736b5c4e098132b7418a2a225e1325f9\_80_rs_alu for cells of type $alu.
Using template $paramod$2f5fb04daf2da94d981bf9455fa4454c6ec8b705\_90_alu for cells of type $alu.
Using template $paramod$constmap:25ba5afb90ae70bee64e7ceb9adfa88f4ddd30c8$paramod$09437f3fb36323fa1f054feaae1b54f4407711e2\_90_shift_ops_shr_shl_sshl_sshr for cells of type $shl.
Using template $paramod$constmap:25ba5afb90ae70bee64e7ceb9adfa88f4ddd30c8$paramod$af624cc6a311e92f3126157cd58ef36cb939fe14\_90_shift_ops_shr_shl_sshl_sshr for cells of type $shr.
Using template $paramod$8f780356cb6cdb52f6a744190131b65634639c4e\_90_alu for cells of type $alu.
  add \u3.mul_b [16:0] * \u3.mul_a [52:41] (17x12 bits, unsigned)
Using template $paramod$a6f8880b7987b90dcd34ea97097aa4a9b8982e1c\_80_rs_alu for cells of type $alu.
  add \u3.mul_a [23:0] * \u3.mul_b [52:51] (24x2 bits, unsigned)
Using template $paramod$67b9b0efcae55f4b18718843357cbb296d6d33fc\_80_rs_alu for cells of type $alu.
Using template $paramod$103b4016182df467cceab67bcf3e18e6361ec0fd\_90_alu for cells of type $alu.
Using template $paramod$constmap:8431f4d641df8d5d3e884a4374d18498d742605f$paramod$bfcfbd15f272af1944d092ab0af0dba4a41b4393\_90_shift_ops_shr_shl_sshl_sshr for cells of type $shr.
  add \u3.mul_b [52:34] * \u3.mul_a [52:41] (19x12 bits, unsigned)
Using template $paramod\_90_lcu\WIDTH=32'00000000000000000000000000001100 for cells of type $lcu.
Using extmapper simplemap for cells of type $pos.
Using template $paramod\_90_lcu\WIDTH=32'00000000000000000000000000000110 for cells of type $lcu.
Using template $paramod\_90_lcu\WIDTH=32'00000000000000000000000000001011 for cells of type $lcu.
Using template $paramod\_90_lcu\WIDTH=32'00000000000000000000000000000111 for cells of type $lcu.
Using template $paramod\_90_lcu\WIDTH=32'00000000000000000000000000111000 for cells of type $lcu.
Using template $paramod\_90_fa\WIDTH=32'00000000000000000000000000100100 for cells of type $fa.
Using template $paramod$9fb24bf0faa43f804d3c379242188667e42c235c\_90_alu for cells of type $alu.
Using template $paramod\_90_fa\WIDTH=32'00000000000000000000000000001011 for cells of type $fa.
Using template $paramod\_90_fa\WIDTH=32'00000000000000000000000000101001 for cells of type $fa.
Using template $paramod$35a69cb9a70c12a16833c695168dfe15d5378044\_90_alu for cells of type $alu.
Using template $paramod\_90_fa\WIDTH=32'00000000000000000000000000100010 for cells of type $fa.
Using template $paramod$dbef6e48cd28208af1b77a9bd7dfc80580f16131\_90_alu for cells of type $alu.
Using template $paramod\_90_fa\WIDTH=32'00000000000000000000000000011101 for cells of type $fa.
Using template $paramod$88ebedc0964674c5b2e447c66b33a42fc7e7abe0\_90_alu for cells of type $alu.
Using template $paramod$164e498bc2a3e556a1a26e7fc865bd303e2c294d\_80_rs_alu for cells of type $alu.
Using template $paramod\_90_fa\WIDTH=32'00000000000000000000000000011111 for cells of type $fa.
Using template $paramod$ebf89ea36a793f0f77858f212141d47c833068ad\_90_alu for cells of type $alu.
Using template $paramod\_90_lcu\WIDTH=32'00000000000000000000000000100100 for cells of type $lcu.
Using template $paramod\_90_lcu\WIDTH=32'00000000000000000000000000101001 for cells of type $lcu.
Using template $paramod\_90_lcu\WIDTH=32'00000000000000000000000000100010 for cells of type $lcu.
Using template $paramod\_90_lcu\WIDTH=32'00000000000000000000000000011101 for cells of type $lcu.
Using template $paramod\_90_lcu\WIDTH=32'00000000000000000000000000011111 for cells of type $lcu.
No more expansions possible.
<suppressed ~20309 debug messages>

yosys> stat

3.88. Printing statistics.

=== fpu ===

   Number of wires:               9980
   Number of wire bits:         208049
   Number of public wires:         376
   Number of public wire bits:    7984
   Number of memories:               0
   Number of memory bits:            0
   Number of processes:              0
   Number of cells:              68641
     $_AND_                      16324
     $_DFFE_PP_                   4686
     $_DFF_P_                      534
     $_DLATCH_P_                     6
     $_MUX_                      20706
     $_NOT_                       1887
     $_OR_                       12687
     $_XOR_                      11196
     adder_carry                   615


yosys> opt_expr

3.89. Executing OPT_EXPR pass (perform const folding).
Optimizing module fpu.
<suppressed ~17046 debug messages>

yosys> opt_merge -nomux

3.90. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\fpu'.
<suppressed ~15858 debug messages>
Removed a total of 5286 cells.

yosys> opt_muxtree

3.91. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \fpu..
  Creating internal representation of mux trees.
  No muxes found in this module.
Removed 0 multiplexer ports.

yosys> opt_reduce

3.92. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \fpu.
Performed a total of 0 changes.

yosys> opt_merge

3.93. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\fpu'.
Removed a total of 0 cells.

yosys> opt_share

3.94. Executing OPT_SHARE pass.

yosys> opt_dff -nosdff -nodffe

3.95. Executing OPT_DFF pass (perform DFF optimizations).
Setting constant 0-bit at position 0 on $auto$ff.cc:262:slice$9226 ($_DFF_P_) from module fpu.

yosys> opt_clean

3.96. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \fpu..
Removed 1563 unused cells and 4483 unused wires.
<suppressed ~1564 debug messages>

yosys> opt_expr

3.97. Executing OPT_EXPR pass (perform const folding).
Optimizing module fpu.
<suppressed ~5 debug messages>

yosys> opt_muxtree

3.98. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \fpu..
  Creating internal representation of mux trees.
  No muxes found in this module.
Removed 0 multiplexer ports.

yosys> opt_reduce

3.99. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \fpu.
Performed a total of 0 changes.

yosys> opt_merge

3.100. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\fpu'.
Removed a total of 0 cells.

yosys> opt_share

3.101. Executing OPT_SHARE pass.

yosys> opt_dff -nosdff -nodffe

3.102. Executing OPT_DFF pass (perform DFF optimizations).

yosys> opt_clean

3.103. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \fpu..
Removed 0 unused cells and 1 unused wires.
<suppressed ~1 debug messages>

yosys> opt_expr

3.104. Executing OPT_EXPR pass (perform const folding).
Optimizing module fpu.
MAX OPT ITERATION = 2

yosys> opt_expr -full

3.105. Executing OPT_EXPR pass (perform const folding).
Optimizing module fpu.
<suppressed ~4902 debug messages>

yosys> techmap -map +/techmap.v

3.106. Executing TECHMAP pass (map to technology primitives).

3.106.1. Executing Verilog-2005 frontend: /nfs_scratch/scratch/Vorak/aram/Workspace/Raptor/yosys_verific_rs/yosys/install/bin/../share/yosys/techmap.v
Parsing Verilog input from `/nfs_scratch/scratch/Vorak/aram/Workspace/Raptor/yosys_verific_rs/yosys/install/bin/../share/yosys/techmap.v' to AST representation.
Generating RTLIL representation for module `\_90_simplemap_bool_ops'.
Generating RTLIL representation for module `\_90_simplemap_reduce_ops'.
Generating RTLIL representation for module `\_90_simplemap_logic_ops'.
Generating RTLIL representation for module `\_90_simplemap_compare_ops'.
Generating RTLIL representation for module `\_90_simplemap_various'.
Generating RTLIL representation for module `\_90_simplemap_registers'.
Generating RTLIL representation for module `\_90_shift_ops_shr_shl_sshl_sshr'.
Generating RTLIL representation for module `\_90_shift_shiftx'.
Generating RTLIL representation for module `\_90_fa'.
Generating RTLIL representation for module `\_90_lcu'.
Generating RTLIL representation for module `\_90_alu'.
Generating RTLIL representation for module `\_90_macc'.
Generating RTLIL representation for module `\_90_alumacc'.
Generating RTLIL representation for module `\$__div_mod_u'.
Generating RTLIL representation for module `\$__div_mod_trunc'.
Generating RTLIL representation for module `\_90_div'.
Generating RTLIL representation for module `\_90_mod'.
Generating RTLIL representation for module `\$__div_mod_floor'.
Generating RTLIL representation for module `\_90_divfloor'.
Generating RTLIL representation for module `\_90_modfloor'.
Generating RTLIL representation for module `\_90_pow'.
Generating RTLIL representation for module `\_90_pmux'.
Generating RTLIL representation for module `\_90_demux'.
Generating RTLIL representation for module `\_90_lut'.
Successfully finished Verilog frontend.

3.106.2. Continuing TECHMAP pass.
No more expansions possible.
<suppressed ~71 debug messages>

yosys> opt_expr

3.107. Executing OPT_EXPR pass (perform const folding).
Optimizing module fpu.

yosys> opt_merge -nomux

3.108. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\fpu'.
<suppressed ~1260 debug messages>
Removed a total of 420 cells.

yosys> opt_muxtree

3.109. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \fpu..
  Creating internal representation of mux trees.
  No muxes found in this module.
Removed 0 multiplexer ports.

yosys> opt_reduce

3.110. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \fpu.
Performed a total of 0 changes.

yosys> opt_merge

3.111. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\fpu'.
Removed a total of 0 cells.

yosys> opt_dff -nosdff -nodffe -sat

3.112. Executing OPT_DFF pass (perform DFF optimizations).
Setting constant 0-bit at position 0 on $auto$ff.cc:262:slice$50648 ($_DFFE_PP_) from module fpu.
Setting constant 0-bit at position 0 on $auto$ff.cc:262:slice$11095 ($_DFFE_PP_) from module fpu.
Setting constant 0-bit at position 0 on $auto$ff.cc:262:slice$15063 ($_DFFE_PP_) from module fpu.
Setting constant 0-bit at position 0 on $auto$ff.cc:262:slice$15565 ($_DFFE_PP_) from module fpu.
Setting constant 0-bit at position 0 on $auto$ff.cc:262:slice$47021 ($_DFFE_PP_) from module fpu.

yosys> opt_clean

3.113. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \fpu..
Removed 0 unused cells and 335 unused wires.
<suppressed ~1 debug messages>

yosys> opt_expr

3.114. Executing OPT_EXPR pass (perform const folding).
Optimizing module fpu.
<suppressed ~81 debug messages>

yosys> opt_muxtree

3.115. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \fpu..
  Creating internal representation of mux trees.
  No muxes found in this module.
Removed 0 multiplexer ports.

yosys> opt_reduce

3.116. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \fpu.
Performed a total of 0 changes.

yosys> opt_merge

3.117. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\fpu'.
<suppressed ~33 debug messages>
Removed a total of 11 cells.

yosys> opt_dff -nosdff -nodffe -sat

3.118. Executing OPT_DFF pass (perform DFF optimizations).
Setting constant 0-bit at position 0 on $auto$ff.cc:262:slice$50873 ($_DFFE_PP_) from module fpu.
Setting constant 0-bit at position 0 on $auto$ff.cc:262:slice$9434 ($_DFF_P_) from module fpu.

yosys> opt_clean

3.119. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \fpu..
Removed 1 unused cells and 32 unused wires.
<suppressed ~2 debug messages>

yosys> opt_expr

3.120. Executing OPT_EXPR pass (perform const folding).
Optimizing module fpu.
<suppressed ~5 debug messages>

yosys> opt_muxtree

3.121. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \fpu..
  Creating internal representation of mux trees.
  No muxes found in this module.
Removed 0 multiplexer ports.

yosys> opt_reduce

3.122. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \fpu.
Performed a total of 0 changes.

yosys> opt_merge

3.123. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\fpu'.
Removed a total of 0 cells.

yosys> opt_dff -nosdff -nodffe -sat

3.124. Executing OPT_DFF pass (perform DFF optimizations).
Setting constant 0-bit at position 0 on $auto$ff.cc:262:slice$50759 ($_DFFE_PP_) from module fpu.
Setting constant 0-bit at position 0 on $auto$ff.cc:262:slice$9197 ($_DFF_P_) from module fpu.

yosys> opt_clean

3.125. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \fpu..

yosys> opt_expr

3.126. Executing OPT_EXPR pass (perform const folding).
Optimizing module fpu.
<suppressed ~2 debug messages>

yosys> opt_muxtree

3.127. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \fpu..
  Creating internal representation of mux trees.
  No muxes found in this module.
Removed 0 multiplexer ports.

yosys> opt_reduce

3.128. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \fpu.
Performed a total of 0 changes.

yosys> opt_merge

3.129. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\fpu'.
Removed a total of 0 cells.

yosys> opt_dff -nosdff -nodffe -sat

3.130. Executing OPT_DFF pass (perform DFF optimizations).

yosys> opt_clean

3.131. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \fpu..

yosys> opt_expr

3.132. Executing OPT_EXPR pass (perform const folding).
Optimizing module fpu.
MAX OPT ITERATION = 4

yosys> abc -dff

3.133. Executing ABC pass (technology mapping using ABC).

3.133.1. Summary of detected clock domains:
  6 cells in clk=\clk, en=$auto$opt_dff.cc:219:make_patterns_logic$6228, arst={ }, srst={ }
  5 cells in clk=\clk, en=$auto$opt_dff.cc:219:make_patterns_logic$6221, arst={ }, srst={ }
  2342 cells in clk=\clk, en=$auto$opt_dff.cc:194:make_patterns_logic$6561, arst={ }, srst={ }
  5 cells in clk=\clk, en=$auto$opt_dff.cc:219:make_patterns_logic$5864, arst={ }, srst={ }
  3922 cells in clk=\clk, en=$auto$opt_dff.cc:194:make_patterns_logic$6471, arst={ }, srst={ }
  5 cells in clk=\clk, en=$auto$opt_dff.cc:219:make_patterns_logic$5990, arst={ }, srst={ }
  5 cells in clk=\clk, en=$auto$opt_dff.cc:219:make_patterns_logic$5983, arst={ }, srst={ }
  5 cells in clk=\clk, en=$auto$opt_dff.cc:219:make_patterns_logic$5976, arst={ }, srst={ }
  5 cells in clk=\clk, en=$auto$opt_dff.cc:219:make_patterns_logic$5969, arst={ }, srst={ }
  5 cells in clk=\clk, en=$auto$opt_dff.cc:219:make_patterns_logic$5962, arst={ }, srst={ }
  5 cells in clk=\clk, en=$auto$opt_dff.cc:219:make_patterns_logic$5955, arst={ }, srst={ }
  5 cells in clk=\clk, en=$auto$opt_dff.cc:219:make_patterns_logic$5948, arst={ }, srst={ }
  5 cells in clk=\clk, en=$auto$opt_dff.cc:219:make_patterns_logic$5941, arst={ }, srst={ }
  5 cells in clk=\clk, en=$auto$opt_dff.cc:219:make_patterns_logic$5934, arst={ }, srst={ }
  5 cells in clk=\clk, en=$auto$opt_dff.cc:219:make_patterns_logic$5927, arst={ }, srst={ }
  5 cells in clk=\clk, en=$auto$opt_dff.cc:219:make_patterns_logic$5920, arst={ }, srst={ }
  5 cells in clk=\clk, en=$auto$opt_dff.cc:219:make_patterns_logic$5913, arst={ }, srst={ }
  5 cells in clk=\clk, en=$auto$opt_dff.cc:219:make_patterns_logic$5906, arst={ }, srst={ }
  5 cells in clk=\clk, en=$auto$opt_dff.cc:219:make_patterns_logic$5899, arst={ }, srst={ }
  5 cells in clk=\clk, en=$auto$opt_dff.cc:219:make_patterns_logic$5892, arst={ }, srst={ }
  5 cells in clk=\clk, en=$auto$opt_dff.cc:219:make_patterns_logic$5885, arst={ }, srst={ }
  5 cells in clk=\clk, en=$auto$opt_dff.cc:219:make_patterns_logic$5878, arst={ }, srst={ }
  5 cells in clk=\clk, en=$auto$opt_dff.cc:219:make_patterns_logic$5871, arst={ }, srst={ }
  166 cells in clk=\clk, en=$auto$opt_dff.cc:194:make_patterns_logic$5844, arst={ }, srst={ }
  5 cells in clk=\clk, en=$auto$opt_dff.cc:219:make_patterns_logic$5857, arst={ }, srst={ }
  1 cells in clk=\clk, en=$auto$opt_dff.cc:194:make_patterns_logic$6291, arst={ }, srst={ }
  159 cells in clk=\clk, en=$auto$opt_dff.cc:194:make_patterns_logic$6297, arst={ }, srst={ }
  326 cells in clk=\clk, en=$auto$opt_dff.cc:194:make_patterns_logic$6309, arst={ }, srst={ }
  144 cells in clk=\clk, en=$auto$opt_dff.cc:194:make_patterns_logic$6318, arst={ }, srst={ }
  24642 cells in clk=\clk, en=$auto$opt_dff.cc:194:make_patterns_logic$6321, arst={ }, srst={ }
  4 cells in clk=\clk, en=$auto$opt_dff.cc:219:make_patterns_logic$6123, arst={ }, srst={ }
  4 cells in clk=\clk, en=$auto$opt_dff.cc:219:make_patterns_logic$6116, arst={ }, srst={ }
  4 cells in clk=\clk, en=$auto$opt_dff.cc:219:make_patterns_logic$6109, arst={ }, srst={ }
  4 cells in clk=\clk, en=$auto$opt_dff.cc:219:make_patterns_logic$6102, arst={ }, srst={ }
  4 cells in clk=\clk, en=$auto$opt_dff.cc:219:make_patterns_logic$6095, arst={ }, srst={ }
  4 cells in clk=\clk, en=$auto$opt_dff.cc:219:make_patterns_logic$6088, arst={ }, srst={ }
  4 cells in clk=\clk, en=$auto$opt_dff.cc:219:make_patterns_logic$6081, arst={ }, srst={ }
  4 cells in clk=\clk, en=$auto$opt_dff.cc:219:make_patterns_logic$6074, arst={ }, srst={ }
  4 cells in clk=\clk, en=$auto$opt_dff.cc:219:make_patterns_logic$6067, arst={ }, srst={ }
  4 cells in clk=\clk, en=$auto$opt_dff.cc:219:make_patterns_logic$6060, arst={ }, srst={ }
  4 cells in clk=\clk, en=$auto$opt_dff.cc:219:make_patterns_logic$6053, arst={ }, srst={ }
  4 cells in clk=\clk, en=$auto$opt_dff.cc:219:make_patterns_logic$6046, arst={ }, srst={ }
  4 cells in clk=\clk, en=$auto$opt_dff.cc:219:make_patterns_logic$6039, arst={ }, srst={ }
  4 cells in clk=\clk, en=$auto$opt_dff.cc:219:make_patterns_logic$6032, arst={ }, srst={ }
  4 cells in clk=\clk, en=$auto$opt_dff.cc:219:make_patterns_logic$6025, arst={ }, srst={ }
  4 cells in clk=\clk, en=$auto$opt_dff.cc:219:make_patterns_logic$6018, arst={ }, srst={ }
  4 cells in clk=\clk, en=$auto$opt_dff.cc:219:make_patterns_logic$6011, arst={ }, srst={ }
  4 cells in clk=\clk, en=$auto$opt_dff.cc:219:make_patterns_logic$6004, arst={ }, srst={ }
  4 cells in clk=\clk, en=$auto$opt_dff.cc:219:make_patterns_logic$5997, arst={ }, srst={ }
  2063 cells in clk=\clk, en={ }, arst={ }, srst={ }
  4 cells in clk=\clk, en=$auto$opt_dff.cc:219:make_patterns_logic$6144, arst={ }, srst={ }
  4 cells in clk=\clk, en=$auto$opt_dff.cc:219:make_patterns_logic$6137, arst={ }, srst={ }
  1173 cells in clk=\clk, en=$auto$opt_dff.cc:194:make_patterns_logic$5655, arst={ }, srst={ }
  4806 cells in clk=\clk, en=$auto$opt_dff.cc:194:make_patterns_logic$5841, arst={ }, srst={ }
  4 cells in clk=\clk, en=$auto$opt_dff.cc:219:make_patterns_logic$6130, arst={ }, srst={ }
  4 cells in clk=\clk, en=$auto$opt_dff.cc:219:make_patterns_logic$6214, arst={ }, srst={ }
  4 cells in clk=\clk, en=$auto$opt_dff.cc:219:make_patterns_logic$6207, arst={ }, srst={ }
  4 cells in clk=\clk, en=$auto$opt_dff.cc:219:make_patterns_logic$6200, arst={ }, srst={ }
  4 cells in clk=\clk, en=$auto$opt_dff.cc:219:make_patterns_logic$6193, arst={ }, srst={ }
  4 cells in clk=\clk, en=$auto$opt_dff.cc:219:make_patterns_logic$6186, arst={ }, srst={ }
  4 cells in clk=\clk, en=$auto$opt_dff.cc:219:make_patterns_logic$6179, arst={ }, srst={ }
  4 cells in clk=\clk, en=$auto$opt_dff.cc:219:make_patterns_logic$6172, arst={ }, srst={ }
  4 cells in clk=\clk, en=$auto$opt_dff.cc:219:make_patterns_logic$6165, arst={ }, srst={ }
  4 cells in clk=\clk, en=$auto$opt_dff.cc:219:make_patterns_logic$6158, arst={ }, srst={ }
  4 cells in clk=\clk, en=$auto$opt_dff.cc:219:make_patterns_logic$6151, arst={ }, srst={ }
  63 cells in clk=\clk, en=$auto$opt_dff.cc:194:make_patterns_logic$5652, arst={ }, srst={ }
  137 cells in clk=\clk, en=$auto$opt_dff.cc:194:make_patterns_logic$5619, arst={ }, srst={ }
  661 cells in clk=\clk, en=$auto$opt_dff.cc:194:make_patterns_logic$5622, arst={ }, srst={ }

3.133.2. Extracting gate netlist of module `\fpu' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk, enabled by $auto$opt_dff.cc:219:make_patterns_logic$6228
Extracted 6 gates and 12 wires to a netlist network with 5 inputs and 3 outputs.

3.133.2.1. Executing ABC.

3.133.3. Extracting gate netlist of module `\fpu' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk, enabled by $auto$opt_dff.cc:219:make_patterns_logic$6221
Extracted 5 gates and 11 wires to a netlist network with 5 inputs and 2 outputs.

3.133.3.1. Executing ABC.

3.133.4. Extracting gate netlist of module `\fpu' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk, enabled by $auto$opt_dff.cc:194:make_patterns_logic$6561
Extracted 2286 gates and 2470 wires to a netlist network with 183 inputs and 236 outputs.

3.133.4.1. Executing ABC.

3.133.5. Extracting gate netlist of module `\fpu' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk, enabled by $auto$opt_dff.cc:219:make_patterns_logic$5864
Extracted 5 gates and 11 wires to a netlist network with 5 inputs and 2 outputs.

3.133.5.1. Executing ABC.

3.133.6. Extracting gate netlist of module `\fpu' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk, enabled by $auto$opt_dff.cc:194:make_patterns_logic$6471
Extracted 3815 gates and 4000 wires to a netlist network with 183 inputs and 272 outputs.

3.133.6.1. Executing ABC.

3.133.7. Extracting gate netlist of module `\fpu' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk, enabled by $auto$opt_dff.cc:219:make_patterns_logic$5990
Extracted 5 gates and 11 wires to a netlist network with 5 inputs and 2 outputs.

3.133.7.1. Executing ABC.

3.133.8. Extracting gate netlist of module `\fpu' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk, enabled by $auto$opt_dff.cc:219:make_patterns_logic$5983
Extracted 5 gates and 11 wires to a netlist network with 5 inputs and 2 outputs.

3.133.8.1. Executing ABC.

3.133.9. Extracting gate netlist of module `\fpu' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk, enabled by $auto$opt_dff.cc:219:make_patterns_logic$5976
Extracted 5 gates and 11 wires to a netlist network with 5 inputs and 2 outputs.

3.133.9.1. Executing ABC.

3.133.10. Extracting gate netlist of module `\fpu' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk, enabled by $auto$opt_dff.cc:219:make_patterns_logic$5969
Extracted 5 gates and 11 wires to a netlist network with 5 inputs and 2 outputs.

3.133.10.1. Executing ABC.

3.133.11. Extracting gate netlist of module `\fpu' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk, enabled by $auto$opt_dff.cc:219:make_patterns_logic$5962
Extracted 5 gates and 11 wires to a netlist network with 5 inputs and 2 outputs.

3.133.11.1. Executing ABC.

3.133.12. Extracting gate netlist of module `\fpu' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk, enabled by $auto$opt_dff.cc:219:make_patterns_logic$5955
Extracted 5 gates and 11 wires to a netlist network with 5 inputs and 2 outputs.

3.133.12.1. Executing ABC.

3.133.13. Extracting gate netlist of module `\fpu' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk, enabled by $auto$opt_dff.cc:219:make_patterns_logic$5948
Extracted 5 gates and 11 wires to a netlist network with 5 inputs and 2 outputs.

3.133.13.1. Executing ABC.

3.133.14. Extracting gate netlist of module `\fpu' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk, enabled by $auto$opt_dff.cc:219:make_patterns_logic$5941
Extracted 5 gates and 11 wires to a netlist network with 5 inputs and 2 outputs.

3.133.14.1. Executing ABC.

3.133.15. Extracting gate netlist of module `\fpu' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk, enabled by $auto$opt_dff.cc:219:make_patterns_logic$5934
Extracted 5 gates and 11 wires to a netlist network with 5 inputs and 2 outputs.

3.133.15.1. Executing ABC.

3.133.16. Extracting gate netlist of module `\fpu' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk, enabled by $auto$opt_dff.cc:219:make_patterns_logic$5927
Extracted 5 gates and 11 wires to a netlist network with 5 inputs and 2 outputs.

3.133.16.1. Executing ABC.

3.133.17. Extracting gate netlist of module `\fpu' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk, enabled by $auto$opt_dff.cc:219:make_patterns_logic$5920
Extracted 5 gates and 11 wires to a netlist network with 5 inputs and 2 outputs.

3.133.17.1. Executing ABC.

3.133.18. Extracting gate netlist of module `\fpu' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk, enabled by $auto$opt_dff.cc:219:make_patterns_logic$5913
Extracted 5 gates and 11 wires to a netlist network with 5 inputs and 2 outputs.

3.133.18.1. Executing ABC.

3.133.19. Extracting gate netlist of module `\fpu' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk, enabled by $auto$opt_dff.cc:219:make_patterns_logic$5906
Extracted 5 gates and 11 wires to a netlist network with 5 inputs and 2 outputs.

3.133.19.1. Executing ABC.

3.133.20. Extracting gate netlist of module `\fpu' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk, enabled by $auto$opt_dff.cc:219:make_patterns_logic$5899
Extracted 5 gates and 11 wires to a netlist network with 5 inputs and 2 outputs.

3.133.20.1. Executing ABC.

3.133.21. Extracting gate netlist of module `\fpu' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk, enabled by $auto$opt_dff.cc:219:make_patterns_logic$5892
Extracted 5 gates and 11 wires to a netlist network with 5 inputs and 2 outputs.

3.133.21.1. Executing ABC.

3.133.22. Extracting gate netlist of module `\fpu' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk, enabled by $auto$opt_dff.cc:219:make_patterns_logic$5885
Extracted 5 gates and 11 wires to a netlist network with 5 inputs and 2 outputs.

3.133.22.1. Executing ABC.

3.133.23. Extracting gate netlist of module `\fpu' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk, enabled by $auto$opt_dff.cc:219:make_patterns_logic$5878
Extracted 5 gates and 11 wires to a netlist network with 5 inputs and 2 outputs.

3.133.23.1. Executing ABC.

3.133.24. Extracting gate netlist of module `\fpu' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk, enabled by $auto$opt_dff.cc:219:make_patterns_logic$5871
Extracted 5 gates and 11 wires to a netlist network with 5 inputs and 2 outputs.

3.133.24.1. Executing ABC.

3.133.25. Extracting gate netlist of module `\fpu' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk, enabled by $auto$opt_dff.cc:194:make_patterns_logic$5844
Extracted 166 gates and 228 wires to a netlist network with 61 inputs and 58 outputs.

3.133.25.1. Executing ABC.

3.133.26. Extracting gate netlist of module `\fpu' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk, enabled by $auto$opt_dff.cc:219:make_patterns_logic$5857
Extracted 5 gates and 11 wires to a netlist network with 5 inputs and 2 outputs.

3.133.26.1. Executing ABC.

3.133.27. Extracting gate netlist of module `\fpu' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk, enabled by $auto$opt_dff.cc:194:make_patterns_logic$6291
Extracted 1 gates and 2 wires to a netlist network with 1 inputs and 1 outputs.

3.133.27.1. Executing ABC.

3.133.28. Extracting gate netlist of module `\fpu' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk, enabled by $auto$opt_dff.cc:194:make_patterns_logic$6297
Extracted 159 gates and 214 wires to a netlist network with 54 inputs and 53 outputs.

3.133.28.1. Executing ABC.

3.133.29. Extracting gate netlist of module `\fpu' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk, enabled by $auto$opt_dff.cc:194:make_patterns_logic$6309
Extracted 219 gates and 381 wires to a netlist network with 161 inputs and 159 outputs.

3.133.29.1. Executing ABC.

3.133.30. Extracting gate netlist of module `\fpu' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk, enabled by $auto$opt_dff.cc:194:make_patterns_logic$6318
Extracted 144 gates and 153 wires to a netlist network with 8 inputs and 67 outputs.

3.133.30.1. Executing ABC.

3.133.31. Extracting gate netlist of module `\fpu' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk, enabled by $auto$opt_dff.cc:194:make_patterns_logic$6321
Extracted 24291 gates and 24903 wires to a netlist network with 610 inputs and 670 outputs.

3.133.31.1. Executing ABC.

3.133.32. Extracting gate netlist of module `\fpu' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk, enabled by $auto$opt_dff.cc:219:make_patterns_logic$6123
Extracted 4 gates and 9 wires to a netlist network with 5 inputs and 2 outputs.

3.133.32.1. Executing ABC.

3.133.33. Extracting gate netlist of module `\fpu' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk, enabled by $auto$opt_dff.cc:219:make_patterns_logic$6116
Extracted 4 gates and 9 wires to a netlist network with 5 inputs and 2 outputs.

3.133.33.1. Executing ABC.

3.133.34. Extracting gate netlist of module `\fpu' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk, enabled by $auto$opt_dff.cc:219:make_patterns_logic$6109
Extracted 4 gates and 9 wires to a netlist network with 5 inputs and 2 outputs.

3.133.34.1. Executing ABC.

3.133.35. Extracting gate netlist of module `\fpu' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk, enabled by $auto$opt_dff.cc:219:make_patterns_logic$6102
Extracted 4 gates and 9 wires to a netlist network with 5 inputs and 2 outputs.

3.133.35.1. Executing ABC.

3.133.36. Extracting gate netlist of module `\fpu' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk, enabled by $auto$opt_dff.cc:219:make_patterns_logic$6095
Extracted 4 gates and 9 wires to a netlist network with 5 inputs and 2 outputs.

3.133.36.1. Executing ABC.

3.133.37. Extracting gate netlist of module `\fpu' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk, enabled by $auto$opt_dff.cc:219:make_patterns_logic$6088
Extracted 4 gates and 9 wires to a netlist network with 5 inputs and 2 outputs.

3.133.37.1. Executing ABC.

3.133.38. Extracting gate netlist of module `\fpu' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk, enabled by $auto$opt_dff.cc:219:make_patterns_logic$6081
Extracted 4 gates and 9 wires to a netlist network with 5 inputs and 2 outputs.

3.133.38.1. Executing ABC.

3.133.39. Extracting gate netlist of module `\fpu' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk, enabled by $auto$opt_dff.cc:219:make_patterns_logic$6074
Extracted 4 gates and 9 wires to a netlist network with 5 inputs and 2 outputs.

3.133.39.1. Executing ABC.

3.133.40. Extracting gate netlist of module `\fpu' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk, enabled by $auto$opt_dff.cc:219:make_patterns_logic$6067
Extracted 4 gates and 9 wires to a netlist network with 5 inputs and 2 outputs.

3.133.40.1. Executing ABC.

3.133.41. Extracting gate netlist of module `\fpu' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk, enabled by $auto$opt_dff.cc:219:make_patterns_logic$6060
Extracted 4 gates and 9 wires to a netlist network with 5 inputs and 2 outputs.

3.133.41.1. Executing ABC.

3.133.42. Extracting gate netlist of module `\fpu' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk, enabled by $auto$opt_dff.cc:219:make_patterns_logic$6053
Extracted 4 gates and 9 wires to a netlist network with 5 inputs and 2 outputs.

3.133.42.1. Executing ABC.

3.133.43. Extracting gate netlist of module `\fpu' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk, enabled by $auto$opt_dff.cc:219:make_patterns_logic$6046
Extracted 4 gates and 9 wires to a netlist network with 5 inputs and 2 outputs.

3.133.43.1. Executing ABC.

3.133.44. Extracting gate netlist of module `\fpu' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk, enabled by $auto$opt_dff.cc:219:make_patterns_logic$6039
Extracted 4 gates and 9 wires to a netlist network with 5 inputs and 2 outputs.

3.133.44.1. Executing ABC.

3.133.45. Extracting gate netlist of module `\fpu' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk, enabled by $auto$opt_dff.cc:219:make_patterns_logic$6032
Extracted 4 gates and 9 wires to a netlist network with 5 inputs and 2 outputs.

3.133.45.1. Executing ABC.

3.133.46. Extracting gate netlist of module `\fpu' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk, enabled by $auto$opt_dff.cc:219:make_patterns_logic$6025
Extracted 4 gates and 9 wires to a netlist network with 5 inputs and 2 outputs.

3.133.46.1. Executing ABC.

3.133.47. Extracting gate netlist of module `\fpu' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk, enabled by $auto$opt_dff.cc:219:make_patterns_logic$6018
Extracted 4 gates and 9 wires to a netlist network with 5 inputs and 2 outputs.

3.133.47.1. Executing ABC.

3.133.48. Extracting gate netlist of module `\fpu' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk, enabled by $auto$opt_dff.cc:219:make_patterns_logic$6011
Extracted 4 gates and 9 wires to a netlist network with 5 inputs and 2 outputs.

3.133.48.1. Executing ABC.

3.133.49. Extracting gate netlist of module `\fpu' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk, enabled by $auto$opt_dff.cc:219:make_patterns_logic$6004
Extracted 4 gates and 9 wires to a netlist network with 5 inputs and 2 outputs.

3.133.49.1. Executing ABC.

3.133.50. Extracting gate netlist of module `\fpu' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk, enabled by $auto$opt_dff.cc:219:make_patterns_logic$5997
Extracted 4 gates and 9 wires to a netlist network with 5 inputs and 2 outputs.

3.133.50.1. Executing ABC.

3.133.51. Extracting gate netlist of module `\fpu' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk
Extracted 2063 gates and 2639 wires to a netlist network with 575 inputs and 566 outputs.

3.133.51.1. Executing ABC.

3.133.52. Extracting gate netlist of module `\fpu' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk, enabled by $auto$opt_dff.cc:219:make_patterns_logic$6144
Extracted 4 gates and 9 wires to a netlist network with 5 inputs and 2 outputs.

3.133.52.1. Executing ABC.

3.133.53. Extracting gate netlist of module `\fpu' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk, enabled by $auto$opt_dff.cc:219:make_patterns_logic$6137
Extracted 4 gates and 9 wires to a netlist network with 5 inputs and 2 outputs.

3.133.53.1. Executing ABC.

3.133.54. Extracting gate netlist of module `\fpu' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk, enabled by $auto$opt_dff.cc:194:make_patterns_logic$5655
Extracted 1173 gates and 1419 wires to a netlist network with 244 inputs and 132 outputs.

3.133.54.1. Executing ABC.

3.133.55. Extracting gate netlist of module `\fpu' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk, enabled by $auto$opt_dff.cc:194:make_patterns_logic$5841
Extracted 4806 gates and 5288 wires to a netlist network with 480 inputs and 292 outputs.

3.133.55.1. Executing ABC.

3.133.56. Extracting gate netlist of module `\fpu' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk, enabled by $auto$opt_dff.cc:219:make_patterns_logic$6130
Extracted 4 gates and 9 wires to a netlist network with 5 inputs and 2 outputs.

3.133.56.1. Executing ABC.

3.133.57. Extracting gate netlist of module `\fpu' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk, enabled by $auto$opt_dff.cc:219:make_patterns_logic$6214
Extracted 4 gates and 9 wires to a netlist network with 5 inputs and 2 outputs.

3.133.57.1. Executing ABC.

3.133.58. Extracting gate netlist of module `\fpu' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk, enabled by $auto$opt_dff.cc:219:make_patterns_logic$6207
Extracted 4 gates and 9 wires to a netlist network with 5 inputs and 2 outputs.

3.133.58.1. Executing ABC.

3.133.59. Extracting gate netlist of module `\fpu' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk, enabled by $auto$opt_dff.cc:219:make_patterns_logic$6200
Extracted 4 gates and 9 wires to a netlist network with 5 inputs and 2 outputs.

3.133.59.1. Executing ABC.

3.133.60. Extracting gate netlist of module `\fpu' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk, enabled by $auto$opt_dff.cc:219:make_patterns_logic$6193
Extracted 4 gates and 9 wires to a netlist network with 5 inputs and 2 outputs.

3.133.60.1. Executing ABC.

3.133.61. Extracting gate netlist of module `\fpu' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk, enabled by $auto$opt_dff.cc:219:make_patterns_logic$6186
Extracted 4 gates and 9 wires to a netlist network with 5 inputs and 2 outputs.

3.133.61.1. Executing ABC.

3.133.62. Extracting gate netlist of module `\fpu' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk, enabled by $auto$opt_dff.cc:219:make_patterns_logic$6179
Extracted 4 gates and 9 wires to a netlist network with 5 inputs and 2 outputs.

3.133.62.1. Executing ABC.

3.133.63. Extracting gate netlist of module `\fpu' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk, enabled by $auto$opt_dff.cc:219:make_patterns_logic$6172
Extracted 4 gates and 9 wires to a netlist network with 5 inputs and 2 outputs.

3.133.63.1. Executing ABC.

3.133.64. Extracting gate netlist of module `\fpu' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk, enabled by $auto$opt_dff.cc:219:make_patterns_logic$6165
Extracted 4 gates and 9 wires to a netlist network with 5 inputs and 2 outputs.

3.133.64.1. Executing ABC.

3.133.65. Extracting gate netlist of module `\fpu' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk, enabled by $auto$opt_dff.cc:219:make_patterns_logic$6158
Extracted 4 gates and 9 wires to a netlist network with 5 inputs and 2 outputs.

3.133.65.1. Executing ABC.

3.133.66. Extracting gate netlist of module `\fpu' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk, enabled by $auto$opt_dff.cc:219:make_patterns_logic$6151
Extracted 4 gates and 9 wires to a netlist network with 5 inputs and 2 outputs.

3.133.66.1. Executing ABC.

3.133.67. Extracting gate netlist of module `\fpu' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk, enabled by $auto$opt_dff.cc:194:make_patterns_logic$5652
Extracted 63 gates and 78 wires to a netlist network with 14 inputs and 9 outputs.

3.133.67.1. Executing ABC.

3.133.68. Extracting gate netlist of module `\fpu' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk, enabled by $abc$119117$auto$opt_dff.cc:194:make_patterns_logic$5619
Extracted 137 gates and 208 wires to a netlist network with 70 inputs and 69 outputs.

3.133.68.1. Executing ABC.

3.133.69. Extracting gate netlist of module `\fpu' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk, enabled by $auto$opt_dff.cc:194:make_patterns_logic$5622
Extracted 661 gates and 868 wires to a netlist network with 206 inputs and 358 outputs.

3.133.69.1. Executing ABC.

yosys> abc -dff

3.134. Executing ABC pass (technology mapping using ABC).

3.134.1. Summary of detected clock domains:
  7 cells in clk=\clk, en=$abc$88271$auto$opt_dff.cc:219:make_patterns_logic$6221, arst={ }, srst={ }
  8 cells in clk=\clk, en=$abc$88263$auto$opt_dff.cc:219:make_patterns_logic$6228, arst={ }, srst={ }
  6 cells in clk=\clk, en=$abc$94251$auto$opt_dff.cc:219:make_patterns_logic$5892, arst={ }, srst={ }
  6 cells in clk=\clk, en=$abc$94216$auto$opt_dff.cc:219:make_patterns_logic$5927, arst={ }, srst={ }
  6 cells in clk=\clk, en=$abc$94181$auto$opt_dff.cc:219:make_patterns_logic$5962, arst={ }, srst={ }
  6 cells in clk=\clk, en=$abc$94447$auto$opt_dff.cc:219:make_patterns_logic$5857, arst={ }, srst={ }
  2 cells in clk=\clk, en=$abc$119117$auto$opt_dff.cc:194:make_patterns_logic$6291, arst={ }, srst={ }
  6 cells in clk=\clk, en=$abc$126862$auto$opt_dff.cc:219:make_patterns_logic$6130, arst={ }, srst={ }
  6 cells in clk=\clk, en=$abc$126883$auto$opt_dff.cc:219:make_patterns_logic$6200, arst={ }, srst={ }
  6 cells in clk=\clk, en=$abc$119054$auto$opt_dff.cc:219:make_patterns_logic$6053, arst={ }, srst={ }
  6 cells in clk=\clk, en=$abc$118998$auto$opt_dff.cc:219:make_patterns_logic$6109, arst={ }, srst={ }
  6 cells in clk=\clk, en=$abc$119026$auto$opt_dff.cc:219:make_patterns_logic$6081, arst={ }, srst={ }
  6 cells in clk=\clk, en=$abc$94237$auto$opt_dff.cc:219:make_patterns_logic$5906, arst={ }, srst={ }
  5 cells in clk=\clk, en=$abc$94265$auto$opt_dff.cc:219:make_patterns_logic$5878, arst={ }, srst={ }
  6 cells in clk=\clk, en=$abc$94167$auto$opt_dff.cc:219:make_patterns_logic$5976, arst={ }, srst={ }
  6 cells in clk=\clk, en=$abc$119068$auto$opt_dff.cc:219:make_patterns_logic$6039, arst={ }, srst={ }
  6 cells in clk=\clk, en=$abc$119012$auto$opt_dff.cc:219:make_patterns_logic$6095, arst={ }, srst={ }
  6 cells in clk=\clk, en=$abc$119096$auto$opt_dff.cc:219:make_patterns_logic$6011, arst={ }, srst={ }
  6 cells in clk=\clk, en=$abc$119040$auto$opt_dff.cc:219:make_patterns_logic$6067, arst={ }, srst={ }
  6 cells in clk=\clk, en=$abc$118984$auto$opt_dff.cc:219:make_patterns_logic$6123, arst={ }, srst={ }
  5 cells in clk=\clk, en=$abc$94272$auto$opt_dff.cc:219:make_patterns_logic$5871, arst={ }, srst={ }
  5 cells in clk=\clk, en=$abc$94188$auto$opt_dff.cc:219:make_patterns_logic$5955, arst={ }, srst={ }
  7 cells in clk=\clk, en=$abc$94244$auto$opt_dff.cc:219:make_patterns_logic$5899, arst={ }, srst={ }
  6 cells in clk=\clk, en=$abc$94174$auto$opt_dff.cc:219:make_patterns_logic$5969, arst={ }, srst={ }
  7 cells in clk=\clk, en=$abc$126890$auto$opt_dff.cc:219:make_patterns_logic$6193, arst={ }, srst={ }
  6 cells in clk=\clk, en=$abc$94209$auto$opt_dff.cc:219:make_patterns_logic$5934, arst={ }, srst={ }
  6 cells in clk=\clk, en=$abc$126876$auto$opt_dff.cc:219:make_patterns_logic$6207, arst={ }, srst={ }
  6 cells in clk=\clk, en=$abc$126911$auto$opt_dff.cc:219:make_patterns_logic$6172, arst={ }, srst={ }
  5 cells in clk=\clk, en=$abc$94202$auto$opt_dff.cc:219:make_patterns_logic$5941, arst={ }, srst={ }
  6 cells in clk=\clk, en=$abc$119110$auto$opt_dff.cc:219:make_patterns_logic$5997, arst={ }, srst={ }
  6 cells in clk=\clk, en=$abc$121233$auto$opt_dff.cc:219:make_patterns_logic$6137, arst={ }, srst={ }
  6 cells in clk=\clk, en=$abc$126925$auto$opt_dff.cc:219:make_patterns_logic$6158, arst={ }, srst={ }
  5 cells in clk=\clk, en=$abc$90652$auto$opt_dff.cc:219:make_patterns_logic$5864, arst={ }, srst={ }
  6 cells in clk=\clk, en=$abc$126869$auto$opt_dff.cc:219:make_patterns_logic$6214, arst={ }, srst={ }
  166 cells in clk=\clk, en=$abc$119117$auto$opt_dff.cc:194:make_patterns_logic$6297, arst={ }, srst={ }
  6 cells in clk=\clk, en=$abc$94230$auto$opt_dff.cc:219:make_patterns_logic$5913, arst={ }, srst={ }
  5 cells in clk=\clk, en=$abc$119033$auto$opt_dff.cc:219:make_patterns_logic$6074, arst={ }, srst={ }
  6 cells in clk=\clk, en=$abc$119089$auto$opt_dff.cc:219:make_patterns_logic$6018, arst={ }, srst={ }
  7 cells in clk=\clk, en=$abc$119061$auto$opt_dff.cc:219:make_patterns_logic$6046, arst={ }, srst={ }
  5 cells in clk=\clk, en=$abc$119005$auto$opt_dff.cc:219:make_patterns_logic$6102, arst={ }, srst={ }
  7 cells in clk=\clk, en=$abc$94160$auto$opt_dff.cc:219:make_patterns_logic$5983, arst={ }, srst={ }
  5 cells in clk=\clk, en=$abc$121226$auto$opt_dff.cc:219:make_patterns_logic$6144, arst={ }, srst={ }
  377 cells in clk=\clk, en=$abc$119117$auto$opt_dff.cc:194:make_patterns_logic$6309, arst={ }, srst={ }
  6 cells in clk=\clk, en=$abc$119082$auto$opt_dff.cc:219:make_patterns_logic$6025, arst={ }, srst={ }
  49 cells in clk=\clk, en=$abc$126939$auto$opt_dff.cc:194:make_patterns_logic$5652, arst={ }, srst={ }
  6 cells in clk=\clk, en=$abc$126932$auto$opt_dff.cc:219:make_patterns_logic$6151, arst={ }, srst={ }
  5 cells in clk=\clk, en=$abc$119047$auto$opt_dff.cc:219:make_patterns_logic$6060, arst={ }, srst={ }
  6 cells in clk=\clk, en=$abc$119019$auto$opt_dff.cc:219:make_patterns_logic$6088, arst={ }, srst={ }
  5 cells in clk=\clk, en=$abc$119103$auto$opt_dff.cc:219:make_patterns_logic$6004, arst={ }, srst={ }
  6 cells in clk=\clk, en=$abc$118991$auto$opt_dff.cc:219:make_patterns_logic$6116, arst={ }, srst={ }
  5 cells in clk=\clk, en=$abc$119075$auto$opt_dff.cc:219:make_patterns_logic$6032, arst={ }, srst={ }
  6 cells in clk=\clk, en=$abc$94223$auto$opt_dff.cc:219:make_patterns_logic$5920, arst={ }, srst={ }
  6 cells in clk=\clk, en=$abc$126904$auto$opt_dff.cc:219:make_patterns_logic$6179, arst={ }, srst={ }
  112 cells in clk=\clk, en=$abc$94279$auto$opt_dff.cc:194:make_patterns_logic$5844, arst={ }, srst={ }
  6 cells in clk=\clk, en=$abc$94258$auto$opt_dff.cc:219:make_patterns_logic$5885, arst={ }, srst={ }
  6 cells in clk=\clk, en=$abc$94153$auto$opt_dff.cc:219:make_patterns_logic$5990, arst={ }, srst={ }
  5 cells in clk=\clk, en=$abc$126897$auto$opt_dff.cc:219:make_patterns_logic$6186, arst={ }, srst={ }
  41 cells in clk=\clk, en=$abc$119117$auto$opt_dff.cc:194:make_patterns_logic$6318, arst={ }, srst={ }
  6 cells in clk=\clk, en=$abc$126918$auto$opt_dff.cc:219:make_patterns_logic$6165, arst={ }, srst={ }
  1324 cells in clk=\clk, en=$abc$127197$auto$opt_dff.cc:194:make_patterns_logic$5655, arst={ }, srst={ }
  133 cells in clk=\clk, en=$abc$119117$auto$opt_dff.cc:194:make_patterns_logic$5619, arst={ }, srst={ }
  5 cells in clk=\clk, en=$abc$94195$auto$opt_dff.cc:219:make_patterns_logic$5948, arst={ }, srst={ }
  4321 cells in clk=\clk, en=$abc$122486$auto$opt_dff.cc:194:make_patterns_logic$5841, arst={ }, srst={ }
  2189 cells in clk=\clk, en=$abc$119117$auto$opt_dff.cc:194:make_patterns_logic$6561, arst={ }, srst={ }
  3398 cells in clk=\clk, en=$abc$119117$auto$opt_dff.cc:194:make_patterns_logic$6471, arst={ }, srst={ }
  23761 cells in clk=\clk, en=$abc$119117$auto$opt_dff.cc:194:make_patterns_logic$6321, arst={ }, srst={ }
  1800 cells in clk=\clk, en={ }, arst={ }, srst={ }
  430 cells in clk=\clk, en=$abc$127197$auto$opt_dff.cc:194:make_patterns_logic$5622, arst={ }, srst={ }

3.134.2. Extracting gate netlist of module `\fpu' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk, enabled by $abc$88271$auto$opt_dff.cc:219:make_patterns_logic$6221
Extracted 7 gates and 13 wires to a netlist network with 6 inputs and 3 outputs.

3.134.2.1. Executing ABC.

3.134.3. Extracting gate netlist of module `\fpu' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk, enabled by $abc$88263$auto$opt_dff.cc:219:make_patterns_logic$6228
Extracted 8 gates and 14 wires to a netlist network with 6 inputs and 3 outputs.

3.134.3.1. Executing ABC.

3.134.4. Extracting gate netlist of module `\fpu' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk, enabled by $abc$94251$auto$opt_dff.cc:219:make_patterns_logic$5892
Extracted 6 gates and 12 wires to a netlist network with 6 inputs and 2 outputs.

3.134.4.1. Executing ABC.

3.134.5. Extracting gate netlist of module `\fpu' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk, enabled by $abc$94216$auto$opt_dff.cc:219:make_patterns_logic$5927
Extracted 6 gates and 12 wires to a netlist network with 6 inputs and 2 outputs.

3.134.5.1. Executing ABC.

3.134.6. Extracting gate netlist of module `\fpu' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk, enabled by $abc$94181$auto$opt_dff.cc:219:make_patterns_logic$5962
Extracted 6 gates and 12 wires to a netlist network with 6 inputs and 2 outputs.

3.134.6.1. Executing ABC.

3.134.7. Extracting gate netlist of module `\fpu' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk, enabled by $abc$94447$auto$opt_dff.cc:219:make_patterns_logic$5857
Extracted 6 gates and 12 wires to a netlist network with 6 inputs and 2 outputs.

3.134.7.1. Executing ABC.

3.134.8. Extracting gate netlist of module `\fpu' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk, enabled by $abc$119117$auto$opt_dff.cc:194:make_patterns_logic$6291
Extracted 2 gates and 3 wires to a netlist network with 1 inputs and 2 outputs.

3.134.8.1. Executing ABC.

3.134.9. Extracting gate netlist of module `\fpu' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk, enabled by $abc$126862$auto$opt_dff.cc:219:make_patterns_logic$6130
Extracted 6 gates and 12 wires to a netlist network with 6 inputs and 2 outputs.

3.134.9.1. Executing ABC.

3.134.10. Extracting gate netlist of module `\fpu' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk, enabled by $abc$126883$auto$opt_dff.cc:219:make_patterns_logic$6200
Extracted 6 gates and 12 wires to a netlist network with 6 inputs and 2 outputs.

3.134.10.1. Executing ABC.

3.134.11. Extracting gate netlist of module `\fpu' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk, enabled by $abc$119054$auto$opt_dff.cc:219:make_patterns_logic$6053
Extracted 6 gates and 12 wires to a netlist network with 6 inputs and 2 outputs.

3.134.11.1. Executing ABC.

3.134.12. Extracting gate netlist of module `\fpu' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk, enabled by $abc$118998$auto$opt_dff.cc:219:make_patterns_logic$6109
Extracted 6 gates and 12 wires to a netlist network with 6 inputs and 2 outputs.

3.134.12.1. Executing ABC.

3.134.13. Extracting gate netlist of module `\fpu' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk, enabled by $abc$119026$auto$opt_dff.cc:219:make_patterns_logic$6081
Extracted 6 gates and 12 wires to a netlist network with 6 inputs and 2 outputs.

3.134.13.1. Executing ABC.

3.134.14. Extracting gate netlist of module `\fpu' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk, enabled by $abc$94237$auto$opt_dff.cc:219:make_patterns_logic$5906
Extracted 6 gates and 12 wires to a netlist network with 6 inputs and 2 outputs.

3.134.14.1. Executing ABC.

3.134.15. Extracting gate netlist of module `\fpu' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk, enabled by $abc$94265$auto$opt_dff.cc:219:make_patterns_logic$5878
Extracted 5 gates and 11 wires to a netlist network with 6 inputs and 2 outputs.

3.134.15.1. Executing ABC.

3.134.16. Extracting gate netlist of module `\fpu' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk, enabled by $abc$94167$auto$opt_dff.cc:219:make_patterns_logic$5976
Extracted 6 gates and 12 wires to a netlist network with 6 inputs and 2 outputs.

3.134.16.1. Executing ABC.

3.134.17. Extracting gate netlist of module `\fpu' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk, enabled by $abc$119068$auto$opt_dff.cc:219:make_patterns_logic$6039
Extracted 6 gates and 12 wires to a netlist network with 6 inputs and 2 outputs.

3.134.17.1. Executing ABC.

3.134.18. Extracting gate netlist of module `\fpu' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk, enabled by $abc$119012$auto$opt_dff.cc:219:make_patterns_logic$6095
Extracted 6 gates and 12 wires to a netlist network with 6 inputs and 2 outputs.

3.134.18.1. Executing ABC.

3.134.19. Extracting gate netlist of module `\fpu' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk, enabled by $abc$119096$auto$opt_dff.cc:219:make_patterns_logic$6011
Extracted 6 gates and 12 wires to a netlist network with 6 inputs and 2 outputs.

3.134.19.1. Executing ABC.

3.134.20. Extracting gate netlist of module `\fpu' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk, enabled by $abc$119040$auto$opt_dff.cc:219:make_patterns_logic$6067
Extracted 6 gates and 12 wires to a netlist network with 6 inputs and 2 outputs.

3.134.20.1. Executing ABC.

3.134.21. Extracting gate netlist of module `\fpu' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk, enabled by $abc$118984$auto$opt_dff.cc:219:make_patterns_logic$6123
Extracted 6 gates and 12 wires to a netlist network with 6 inputs and 2 outputs.

3.134.21.1. Executing ABC.

3.134.22. Extracting gate netlist of module `\fpu' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk, enabled by $abc$94272$auto$opt_dff.cc:219:make_patterns_logic$5871
Extracted 5 gates and 11 wires to a netlist network with 6 inputs and 2 outputs.

3.134.22.1. Executing ABC.

3.134.23. Extracting gate netlist of module `\fpu' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk, enabled by $abc$94188$auto$opt_dff.cc:219:make_patterns_logic$5955
Extracted 5 gates and 11 wires to a netlist network with 6 inputs and 2 outputs.

3.134.23.1. Executing ABC.

3.134.24. Extracting gate netlist of module `\fpu' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk, enabled by $abc$94244$auto$opt_dff.cc:219:make_patterns_logic$5899
Extracted 7 gates and 14 wires to a netlist network with 7 inputs and 3 outputs.

3.134.24.1. Executing ABC.

3.134.25. Extracting gate netlist of module `\fpu' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk, enabled by $abc$94174$auto$opt_dff.cc:219:make_patterns_logic$5969
Extracted 6 gates and 12 wires to a netlist network with 6 inputs and 2 outputs.

3.134.25.1. Executing ABC.

3.134.26. Extracting gate netlist of module `\fpu' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk, enabled by $abc$126890$auto$opt_dff.cc:219:make_patterns_logic$6193
Extracted 7 gates and 14 wires to a netlist network with 7 inputs and 3 outputs.

3.134.26.1. Executing ABC.

3.134.27. Extracting gate netlist of module `\fpu' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk, enabled by $abc$94209$auto$opt_dff.cc:219:make_patterns_logic$5934
Extracted 6 gates and 12 wires to a netlist network with 6 inputs and 2 outputs.

3.134.27.1. Executing ABC.

3.134.28. Extracting gate netlist of module `\fpu' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk, enabled by $abc$126876$auto$opt_dff.cc:219:make_patterns_logic$6207
Extracted 6 gates and 12 wires to a netlist network with 6 inputs and 2 outputs.

3.134.28.1. Executing ABC.

3.134.29. Extracting gate netlist of module `\fpu' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk, enabled by $abc$126911$auto$opt_dff.cc:219:make_patterns_logic$6172
Extracted 6 gates and 12 wires to a netlist network with 6 inputs and 2 outputs.

3.134.29.1. Executing ABC.

3.134.30. Extracting gate netlist of module `\fpu' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk, enabled by $abc$94202$auto$opt_dff.cc:219:make_patterns_logic$5941
Extracted 5 gates and 11 wires to a netlist network with 6 inputs and 2 outputs.

3.134.30.1. Executing ABC.

3.134.31. Extracting gate netlist of module `\fpu' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk, enabled by $abc$119110$auto$opt_dff.cc:219:make_patterns_logic$5997
Extracted 6 gates and 12 wires to a netlist network with 6 inputs and 2 outputs.

3.134.31.1. Executing ABC.

3.134.32. Extracting gate netlist of module `\fpu' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk, enabled by $abc$121233$auto$opt_dff.cc:219:make_patterns_logic$6137
Extracted 6 gates and 12 wires to a netlist network with 6 inputs and 2 outputs.

3.134.32.1. Executing ABC.

3.134.33. Extracting gate netlist of module `\fpu' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk, enabled by $abc$126925$auto$opt_dff.cc:219:make_patterns_logic$6158
Extracted 6 gates and 12 wires to a netlist network with 6 inputs and 2 outputs.

3.134.33.1. Executing ABC.

3.134.34. Extracting gate netlist of module `\fpu' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk, enabled by $abc$90652$auto$opt_dff.cc:219:make_patterns_logic$5864
Extracted 5 gates and 11 wires to a netlist network with 6 inputs and 2 outputs.

3.134.34.1. Executing ABC.

3.134.35. Extracting gate netlist of module `\fpu' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk, enabled by $abc$126869$auto$opt_dff.cc:219:make_patterns_logic$6214
Extracted 6 gates and 12 wires to a netlist network with 6 inputs and 2 outputs.

3.134.35.1. Executing ABC.

3.134.36. Extracting gate netlist of module `\fpu' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk, enabled by $abc$119117$auto$opt_dff.cc:194:make_patterns_logic$6297
Extracted 166 gates and 227 wires to a netlist network with 61 inputs and 54 outputs.

3.134.36.1. Executing ABC.

3.134.37. Extracting gate netlist of module `\fpu' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk, enabled by $abc$94230$auto$opt_dff.cc:219:make_patterns_logic$5913
Extracted 6 gates and 12 wires to a netlist network with 6 inputs and 2 outputs.

3.134.37.1. Executing ABC.

3.134.38. Extracting gate netlist of module `\fpu' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk, enabled by $abc$119033$auto$opt_dff.cc:219:make_patterns_logic$6074
Extracted 5 gates and 11 wires to a netlist network with 6 inputs and 2 outputs.

3.134.38.1. Executing ABC.

3.134.39. Extracting gate netlist of module `\fpu' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk, enabled by $abc$119089$auto$opt_dff.cc:219:make_patterns_logic$6018
Extracted 6 gates and 13 wires to a netlist network with 7 inputs and 3 outputs.

3.134.39.1. Executing ABC.

3.134.40. Extracting gate netlist of module `\fpu' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk, enabled by $abc$119061$auto$opt_dff.cc:219:make_patterns_logic$6046
Extracted 7 gates and 14 wires to a netlist network with 7 inputs and 3 outputs.

3.134.40.1. Executing ABC.

3.134.41. Extracting gate netlist of module `\fpu' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk, enabled by $abc$119005$auto$opt_dff.cc:219:make_patterns_logic$6102
Extracted 5 gates and 11 wires to a netlist network with 6 inputs and 2 outputs.

3.134.41.1. Executing ABC.

3.134.42. Extracting gate netlist of module `\fpu' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk, enabled by $abc$94160$auto$opt_dff.cc:219:make_patterns_logic$5983
Extracted 7 gates and 14 wires to a netlist network with 7 inputs and 3 outputs.

3.134.42.1. Executing ABC.

3.134.43. Extracting gate netlist of module `\fpu' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk, enabled by $abc$121226$auto$opt_dff.cc:219:make_patterns_logic$6144
Extracted 5 gates and 11 wires to a netlist network with 6 inputs and 2 outputs.

3.134.43.1. Executing ABC.

3.134.44. Extracting gate netlist of module `\fpu' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk, enabled by $abc$119117$auto$opt_dff.cc:194:make_patterns_logic$6309
Extracted 270 gates and 433 wires to a netlist network with 163 inputs and 211 outputs.

3.134.44.1. Executing ABC.

3.134.45. Extracting gate netlist of module `\fpu' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk, enabled by $abc$119082$auto$opt_dff.cc:219:make_patterns_logic$6025
Extracted 6 gates and 13 wires to a netlist network with 7 inputs and 3 outputs.

3.134.45.1. Executing ABC.

3.134.46. Extracting gate netlist of module `\fpu' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk, enabled by $abc$126939$auto$opt_dff.cc:194:make_patterns_logic$5652
Extracted 49 gates and 63 wires to a netlist network with 14 inputs and 9 outputs.

3.134.46.1. Executing ABC.

3.134.47. Extracting gate netlist of module `\fpu' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk, enabled by $abc$126932$auto$opt_dff.cc:219:make_patterns_logic$6151
Extracted 6 gates and 13 wires to a netlist network with 7 inputs and 3 outputs.

3.134.47.1. Executing ABC.

3.134.48. Extracting gate netlist of module `\fpu' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk, enabled by $abc$119047$auto$opt_dff.cc:219:make_patterns_logic$6060
Extracted 5 gates and 11 wires to a netlist network with 6 inputs and 2 outputs.

3.134.48.1. Executing ABC.

3.134.49. Extracting gate netlist of module `\fpu' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk, enabled by $abc$119019$auto$opt_dff.cc:219:make_patterns_logic$6088
Extracted 6 gates and 13 wires to a netlist network with 7 inputs and 3 outputs.

3.134.49.1. Executing ABC.

3.134.50. Extracting gate netlist of module `\fpu' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk, enabled by $abc$119103$auto$opt_dff.cc:219:make_patterns_logic$6004
Extracted 5 gates and 11 wires to a netlist network with 6 inputs and 2 outputs.

3.134.50.1. Executing ABC.

3.134.51. Extracting gate netlist of module `\fpu' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk, enabled by $abc$118991$auto$opt_dff.cc:219:make_patterns_logic$6116
Extracted 6 gates and 13 wires to a netlist network with 7 inputs and 3 outputs.

3.134.51.1. Executing ABC.

3.134.52. Extracting gate netlist of module `\fpu' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk, enabled by $abc$119075$auto$opt_dff.cc:219:make_patterns_logic$6032
Extracted 5 gates and 11 wires to a netlist network with 6 inputs and 2 outputs.

3.134.52.1. Executing ABC.

3.134.53. Extracting gate netlist of module `\fpu' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk, enabled by $abc$94223$auto$opt_dff.cc:219:make_patterns_logic$5920
Extracted 6 gates and 13 wires to a netlist network with 7 inputs and 3 outputs.

3.134.53.1. Executing ABC.

3.134.54. Extracting gate netlist of module `\fpu' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk, enabled by $abc$126904$auto$opt_dff.cc:219:make_patterns_logic$6179
Extracted 6 gates and 12 wires to a netlist network with 6 inputs and 2 outputs.

3.134.54.1. Executing ABC.

3.134.55. Extracting gate netlist of module `\fpu' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk, enabled by $abc$94279$auto$opt_dff.cc:194:make_patterns_logic$5844
Extracted 112 gates and 172 wires to a netlist network with 60 inputs and 57 outputs.

3.134.55.1. Executing ABC.

3.134.56. Extracting gate netlist of module `\fpu' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk, enabled by $abc$94258$auto$opt_dff.cc:219:make_patterns_logic$5885
Extracted 6 gates and 13 wires to a netlist network with 7 inputs and 3 outputs.

3.134.56.1. Executing ABC.

3.134.57. Extracting gate netlist of module `\fpu' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk, enabled by $abc$94153$auto$opt_dff.cc:219:make_patterns_logic$5990
Extracted 6 gates and 13 wires to a netlist network with 7 inputs and 3 outputs.

3.134.57.1. Executing ABC.

3.134.58. Extracting gate netlist of module `\fpu' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk, enabled by $abc$126897$auto$opt_dff.cc:219:make_patterns_logic$6186
Extracted 5 gates and 11 wires to a netlist network with 6 inputs and 2 outputs.

3.134.58.1. Executing ABC.

3.134.59. Extracting gate netlist of module `\fpu' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk, enabled by $abc$119117$auto$opt_dff.cc:194:make_patterns_logic$6318
Extracted 41 gates and 51 wires to a netlist network with 10 inputs and 26 outputs.

3.134.59.1. Executing ABC.

3.134.60. Extracting gate netlist of module `\fpu' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk, enabled by $abc$126918$auto$opt_dff.cc:219:make_patterns_logic$6165
Extracted 6 gates and 12 wires to a netlist network with 6 inputs and 2 outputs.

3.134.60.1. Executing ABC.

3.134.61. Extracting gate netlist of module `\fpu' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk, enabled by $abc$127197$auto$opt_dff.cc:194:make_patterns_logic$5655
Extracted 1324 gates and 1596 wires to a netlist network with 272 inputs and 75 outputs.

3.134.61.1. Executing ABC.

3.134.62. Extracting gate netlist of module `\fpu' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk, enabled by $abc$119117$auto$opt_dff.cc:194:make_patterns_logic$5619
Extracted 133 gates and 203 wires to a netlist network with 70 inputs and 69 outputs.

3.134.62.1. Executing ABC.

3.134.63. Extracting gate netlist of module `\fpu' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk, enabled by $abc$94195$auto$opt_dff.cc:219:make_patterns_logic$5948
Extracted 5 gates and 11 wires to a netlist network with 6 inputs and 2 outputs.

3.134.63.1. Executing ABC.

3.134.64. Extracting gate netlist of module `\fpu' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk, enabled by $abc$122486$auto$opt_dff.cc:194:make_patterns_logic$5841
Extracted 4321 gates and 4765 wires to a netlist network with 444 inputs and 286 outputs.

3.134.64.1. Executing ABC.

3.134.65. Extracting gate netlist of module `\fpu' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk, enabled by $abc$119117$auto$opt_dff.cc:194:make_patterns_logic$6561
Extracted 2133 gates and 2316 wires to a netlist network with 183 inputs and 180 outputs.

3.134.65.1. Executing ABC.

3.134.66. Extracting gate netlist of module `\fpu' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk, enabled by $abc$119117$auto$opt_dff.cc:194:make_patterns_logic$6471
Extracted 3291 gates and 3476 wires to a netlist network with 185 inputs and 363 outputs.

3.134.66.1. Executing ABC.

3.134.67. Extracting gate netlist of module `\fpu' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk, enabled by $abc$119117$auto$opt_dff.cc:194:make_patterns_logic$6321
Extracted 23410 gates and 23944 wires to a netlist network with 534 inputs and 678 outputs.

3.134.67.1. Executing ABC.

3.134.68. Extracting gate netlist of module `\fpu' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk
Extracted 1800 gates and 2340 wires to a netlist network with 540 inputs and 463 outputs.

3.134.68.1. Executing ABC.

3.134.69. Extracting gate netlist of module `\fpu' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk, enabled by $abc$164521$abc$127197$auto$opt_dff.cc:194:make_patterns_logic$5622
Extracted 430 gates and 578 wires to a netlist network with 148 inputs and 269 outputs.

3.134.69.1. Executing ABC.

yosys> abc -dff

3.135. Executing ABC pass (technology mapping using ABC).

3.135.1. Summary of detected clock domains:
  7 cells in clk=\clk, en=$abc$127890$abc$88271$auto$opt_dff.cc:219:make_patterns_logic$6221, arst={ }, srst={ }
  6 cells in clk=\clk, en=$abc$127899$abc$88263$auto$opt_dff.cc:219:make_patterns_logic$6228, arst={ }, srst={ }
  7 cells in clk=\clk, en=$abc$127908$abc$94251$auto$opt_dff.cc:219:make_patterns_logic$5892, arst={ }, srst={ }
  5 cells in clk=\clk, en=$abc$127916$abc$94216$auto$opt_dff.cc:219:make_patterns_logic$5927, arst={ }, srst={ }
  5 cells in clk=\clk, en=$abc$127924$abc$94181$auto$opt_dff.cc:219:make_patterns_logic$5962, arst={ }, srst={ }
  5 cells in clk=\clk, en=$abc$127932$abc$94447$auto$opt_dff.cc:219:make_patterns_logic$5857, arst={ }, srst={ }
  3 cells in clk=\clk, en=$abc$164521$abc$119117$auto$opt_dff.cc:194:make_patterns_logic$6291, arst={ }, srst={ }
  6 cells in clk=\clk, en=$abc$127945$abc$126862$auto$opt_dff.cc:219:make_patterns_logic$6130, arst={ }, srst={ }
  6 cells in clk=\clk, en=$abc$127953$abc$126883$auto$opt_dff.cc:219:make_patterns_logic$6200, arst={ }, srst={ }
  5 cells in clk=\clk, en=$abc$127961$abc$119054$auto$opt_dff.cc:219:make_patterns_logic$6053, arst={ }, srst={ }
  6 cells in clk=\clk, en=$abc$127969$abc$118998$auto$opt_dff.cc:219:make_patterns_logic$6109, arst={ }, srst={ }
  6 cells in clk=\clk, en=$abc$127977$abc$119026$auto$opt_dff.cc:219:make_patterns_logic$6081, arst={ }, srst={ }
  5 cells in clk=\clk, en=$abc$127985$abc$94237$auto$opt_dff.cc:219:make_patterns_logic$5906, arst={ }, srst={ }
  6 cells in clk=\clk, en=$abc$127993$abc$94265$auto$opt_dff.cc:219:make_patterns_logic$5878, arst={ }, srst={ }
  5 cells in clk=\clk, en=$abc$128001$abc$94167$auto$opt_dff.cc:219:make_patterns_logic$5976, arst={ }, srst={ }
  6 cells in clk=\clk, en=$abc$128009$abc$119068$auto$opt_dff.cc:219:make_patterns_logic$6039, arst={ }, srst={ }
  6 cells in clk=\clk, en=$abc$128017$abc$119012$auto$opt_dff.cc:219:make_patterns_logic$6095, arst={ }, srst={ }
  6 cells in clk=\clk, en=$abc$128025$abc$119096$auto$opt_dff.cc:219:make_patterns_logic$6011, arst={ }, srst={ }
  6 cells in clk=\clk, en=$abc$128033$abc$119040$auto$opt_dff.cc:219:make_patterns_logic$6067, arst={ }, srst={ }
  6 cells in clk=\clk, en=$abc$128041$abc$118984$auto$opt_dff.cc:219:make_patterns_logic$6123, arst={ }, srst={ }
  5 cells in clk=\clk, en=$abc$128049$abc$94272$auto$opt_dff.cc:219:make_patterns_logic$5871, arst={ }, srst={ }
  5 cells in clk=\clk, en=$abc$130610$abc$94195$auto$opt_dff.cc:219:make_patterns_logic$5948, arst={ }, srst={ }
  5 cells in clk=\clk, en=$abc$128057$abc$94188$auto$opt_dff.cc:219:make_patterns_logic$5955, arst={ }, srst={ }
  6 cells in clk=\clk, en=$abc$128065$abc$94244$auto$opt_dff.cc:219:make_patterns_logic$5899, arst={ }, srst={ }
  5 cells in clk=\clk, en=$abc$128074$abc$94174$auto$opt_dff.cc:219:make_patterns_logic$5969, arst={ }, srst={ }
  6 cells in clk=\clk, en=$abc$128082$abc$126890$auto$opt_dff.cc:219:make_patterns_logic$6193, arst={ }, srst={ }
  5 cells in clk=\clk, en=$abc$128091$abc$94209$auto$opt_dff.cc:219:make_patterns_logic$5934, arst={ }, srst={ }
  6 cells in clk=\clk, en=$abc$128099$abc$126876$auto$opt_dff.cc:219:make_patterns_logic$6207, arst={ }, srst={ }
  5 cells in clk=\clk, en=$abc$128107$abc$126911$auto$opt_dff.cc:219:make_patterns_logic$6172, arst={ }, srst={ }
  5 cells in clk=\clk, en=$abc$128115$abc$94202$auto$opt_dff.cc:219:make_patterns_logic$5941, arst={ }, srst={ }
  5 cells in clk=\clk, en=$abc$128123$abc$119110$auto$opt_dff.cc:219:make_patterns_logic$5997, arst={ }, srst={ }
  5 cells in clk=\clk, en=$abc$128131$abc$121233$auto$opt_dff.cc:219:make_patterns_logic$6137, arst={ }, srst={ }
  5 cells in clk=\clk, en=$abc$128139$abc$126925$auto$opt_dff.cc:219:make_patterns_logic$6158, arst={ }, srst={ }
  5 cells in clk=\clk, en=$abc$128147$abc$90652$auto$opt_dff.cc:219:make_patterns_logic$5864, arst={ }, srst={ }
  5 cells in clk=\clk, en=$abc$128155$abc$126869$auto$opt_dff.cc:219:make_patterns_logic$6214, arst={ }, srst={ }
  5 cells in clk=\clk, en=$abc$128330$abc$94230$auto$opt_dff.cc:219:make_patterns_logic$5913, arst={ }, srst={ }
  5 cells in clk=\clk, en=$abc$128338$abc$119033$auto$opt_dff.cc:219:make_patterns_logic$6074, arst={ }, srst={ }
  6 cells in clk=\clk, en=$abc$128346$abc$119089$auto$opt_dff.cc:219:make_patterns_logic$6018, arst={ }, srst={ }
  6 cells in clk=\clk, en=$abc$128355$abc$119061$auto$opt_dff.cc:219:make_patterns_logic$6046, arst={ }, srst={ }
  5 cells in clk=\clk, en=$abc$128364$abc$119005$auto$opt_dff.cc:219:make_patterns_logic$6102, arst={ }, srst={ }
  5 cells in clk=\clk, en=$abc$129070$abc$126918$auto$opt_dff.cc:219:make_patterns_logic$6165, arst={ }, srst={ }
  6 cells in clk=\clk, en=$abc$128372$abc$94160$auto$opt_dff.cc:219:make_patterns_logic$5983, arst={ }, srst={ }
  5 cells in clk=\clk, en=$abc$128381$abc$121226$auto$opt_dff.cc:219:make_patterns_logic$6144, arst={ }, srst={ }
  6 cells in clk=\clk, en=$abc$128712$abc$119082$auto$opt_dff.cc:219:make_patterns_logic$6025, arst={ }, srst={ }
  306 cells in clk=\clk, en=$abc$128163$abc$119117$auto$opt_dff.cc:194:make_patterns_logic$6297, arst={ }, srst={ }
  6 cells in clk=\clk, en=$abc$128771$abc$126932$auto$opt_dff.cc:219:make_patterns_logic$6151, arst={ }, srst={ }
  5 cells in clk=\clk, en=$abc$128780$abc$119047$auto$opt_dff.cc:219:make_patterns_logic$6060, arst={ }, srst={ }
  6 cells in clk=\clk, en=$abc$128788$abc$119019$auto$opt_dff.cc:219:make_patterns_logic$6088, arst={ }, srst={ }
  5 cells in clk=\clk, en=$abc$128797$abc$119103$auto$opt_dff.cc:219:make_patterns_logic$6004, arst={ }, srst={ }
  6 cells in clk=\clk, en=$abc$128805$abc$118991$auto$opt_dff.cc:219:make_patterns_logic$6116, arst={ }, srst={ }
  39 cells in clk=\clk, en=$abc$128721$abc$126939$auto$opt_dff.cc:194:make_patterns_logic$5652, arst={ }, srst={ }
  41 cells in clk=\clk, en=$abc$129031$abc$119117$auto$opt_dff.cc:194:make_patterns_logic$6318, arst={ }, srst={ }
  5 cells in clk=\clk, en=$abc$128814$abc$119075$auto$opt_dff.cc:219:make_patterns_logic$6032, arst={ }, srst={ }
  6 cells in clk=\clk, en=$abc$128822$abc$94223$auto$opt_dff.cc:219:make_patterns_logic$5920, arst={ }, srst={ }
  5 cells in clk=\clk, en=$abc$128831$abc$126904$auto$opt_dff.cc:219:make_patterns_logic$6179, arst={ }, srst={ }
  352 cells in clk=\clk, en=$abc$128389$abc$119117$auto$opt_dff.cc:194:make_patterns_logic$6309, arst={ }, srst={ }
  6 cells in clk=\clk, en=$abc$129005$abc$94258$auto$opt_dff.cc:219:make_patterns_logic$5885, arst={ }, srst={ }
  2286 cells in clk=\clk, en=$abc$164521$abc$119117$auto$opt_dff.cc:194:make_patterns_logic$6561, arst={ }, srst={ }
  6 cells in clk=\clk, en=$abc$129014$abc$94153$auto$opt_dff.cc:219:make_patterns_logic$5990, arst={ }, srst={ }
  5 cells in clk=\clk, en=$abc$129023$abc$126897$auto$opt_dff.cc:219:make_patterns_logic$6186, arst={ }, srst={ }
  3876 cells in clk=\clk, en=$abc$130618$abc$122486$auto$opt_dff.cc:194:make_patterns_logic$5841, arst={ }, srst={ }
  95 cells in clk=\clk, en=$abc$128839$abc$94279$auto$opt_dff.cc:194:make_patterns_logic$5844, arst={ }, srst={ }
  134 cells in clk=\clk, en=$abc$164521$abc$119117$auto$opt_dff.cc:194:make_patterns_logic$5619, arst={ }, srst={ }
  1254 cells in clk=\clk, en=$abc$129078$abc$127197$auto$opt_dff.cc:194:make_patterns_logic$5655, arst={ }, srst={ }
  3366 cells in clk=\clk, en=$abc$137510$abc$119117$auto$opt_dff.cc:194:make_patterns_logic$6471, arst={ }, srst={ }
  23449 cells in clk=\clk, en=$abc$141029$abc$119117$auto$opt_dff.cc:194:make_patterns_logic$6321, arst={ }, srst={ }
  2171 cells in clk=\clk, en={ }, arst={ }, srst={ }
  429 cells in clk=\clk, en=$abc$164521$abc$127197$auto$opt_dff.cc:194:make_patterns_logic$5622, arst={ }, srst={ }

3.135.2. Extracting gate netlist of module `\fpu' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk, enabled by $abc$127890$abc$88271$auto$opt_dff.cc:219:make_patterns_logic$6221
Extracted 7 gates and 13 wires to a netlist network with 6 inputs and 2 outputs.

3.135.2.1. Executing ABC.

3.135.3. Extracting gate netlist of module `\fpu' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk, enabled by $abc$127899$abc$88263$auto$opt_dff.cc:219:make_patterns_logic$6228
Extracted 6 gates and 12 wires to a netlist network with 6 inputs and 2 outputs.

3.135.3.1. Executing ABC.

3.135.4. Extracting gate netlist of module `\fpu' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk, enabled by $abc$127908$abc$94251$auto$opt_dff.cc:219:make_patterns_logic$5892
Extracted 7 gates and 13 wires to a netlist network with 6 inputs and 4 outputs.

3.135.4.1. Executing ABC.

3.135.5. Extracting gate netlist of module `\fpu' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk, enabled by $abc$127916$abc$94216$auto$opt_dff.cc:219:make_patterns_logic$5927
Extracted 5 gates and 11 wires to a netlist network with 6 inputs and 2 outputs.

3.135.5.1. Executing ABC.

3.135.6. Extracting gate netlist of module `\fpu' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk, enabled by $abc$127924$abc$94181$auto$opt_dff.cc:219:make_patterns_logic$5962
Extracted 5 gates and 11 wires to a netlist network with 6 inputs and 2 outputs.

3.135.6.1. Executing ABC.

3.135.7. Extracting gate netlist of module `\fpu' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk, enabled by $abc$127932$abc$94447$auto$opt_dff.cc:219:make_patterns_logic$5857
Extracted 5 gates and 11 wires to a netlist network with 6 inputs and 2 outputs.

3.135.7.1. Executing ABC.

3.135.8. Extracting gate netlist of module `\fpu' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk, enabled by $abc$164521$abc$119117$auto$opt_dff.cc:194:make_patterns_logic$6291
Extracted 3 gates and 5 wires to a netlist network with 2 inputs and 2 outputs.

3.135.8.1. Executing ABC.

3.135.9. Extracting gate netlist of module `\fpu' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk, enabled by $abc$127945$abc$126862$auto$opt_dff.cc:219:make_patterns_logic$6130
Extracted 6 gates and 12 wires to a netlist network with 6 inputs and 2 outputs.

3.135.9.1. Executing ABC.

3.135.10. Extracting gate netlist of module `\fpu' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk, enabled by $abc$127953$abc$126883$auto$opt_dff.cc:219:make_patterns_logic$6200
Extracted 6 gates and 12 wires to a netlist network with 6 inputs and 2 outputs.

3.135.10.1. Executing ABC.

3.135.11. Extracting gate netlist of module `\fpu' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk, enabled by $abc$127961$abc$119054$auto$opt_dff.cc:219:make_patterns_logic$6053
Extracted 5 gates and 11 wires to a netlist network with 6 inputs and 2 outputs.

3.135.11.1. Executing ABC.

3.135.12. Extracting gate netlist of module `\fpu' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk, enabled by $abc$127969$abc$118998$auto$opt_dff.cc:219:make_patterns_logic$6109
Extracted 6 gates and 12 wires to a netlist network with 6 inputs and 2 outputs.

3.135.12.1. Executing ABC.

3.135.13. Extracting gate netlist of module `\fpu' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk, enabled by $abc$127977$abc$119026$auto$opt_dff.cc:219:make_patterns_logic$6081
Extracted 6 gates and 12 wires to a netlist network with 6 inputs and 2 outputs.

3.135.13.1. Executing ABC.

3.135.14. Extracting gate netlist of module `\fpu' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk, enabled by $abc$127985$abc$94237$auto$opt_dff.cc:219:make_patterns_logic$5906
Extracted 5 gates and 11 wires to a netlist network with 6 inputs and 2 outputs.

3.135.14.1. Executing ABC.

3.135.15. Extracting gate netlist of module `\fpu' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk, enabled by $abc$127993$abc$94265$auto$opt_dff.cc:219:make_patterns_logic$5878
Extracted 6 gates and 12 wires to a netlist network with 6 inputs and 2 outputs.

3.135.15.1. Executing ABC.

3.135.16. Extracting gate netlist of module `\fpu' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk, enabled by $abc$128001$abc$94167$auto$opt_dff.cc:219:make_patterns_logic$5976
Extracted 5 gates and 11 wires to a netlist network with 6 inputs and 2 outputs.

3.135.16.1. Executing ABC.

3.135.17. Extracting gate netlist of module `\fpu' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk, enabled by $abc$128009$abc$119068$auto$opt_dff.cc:219:make_patterns_logic$6039
Extracted 6 gates and 12 wires to a netlist network with 6 inputs and 2 outputs.

3.135.17.1. Executing ABC.

3.135.18. Extracting gate netlist of module `\fpu' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk, enabled by $abc$128017$abc$119012$auto$opt_dff.cc:219:make_patterns_logic$6095
Extracted 6 gates and 12 wires to a netlist network with 6 inputs and 2 outputs.

3.135.18.1. Executing ABC.

3.135.19. Extracting gate netlist of module `\fpu' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk, enabled by $abc$128025$abc$119096$auto$opt_dff.cc:219:make_patterns_logic$6011
Extracted 6 gates and 12 wires to a netlist network with 6 inputs and 2 outputs.

3.135.19.1. Executing ABC.

3.135.20. Extracting gate netlist of module `\fpu' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk, enabled by $abc$128033$abc$119040$auto$opt_dff.cc:219:make_patterns_logic$6067
Extracted 6 gates and 12 wires to a netlist network with 6 inputs and 2 outputs.

3.135.20.1. Executing ABC.

3.135.21. Extracting gate netlist of module `\fpu' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk, enabled by $abc$128041$abc$118984$auto$opt_dff.cc:219:make_patterns_logic$6123
Extracted 6 gates and 12 wires to a netlist network with 6 inputs and 2 outputs.

3.135.21.1. Executing ABC.

3.135.22. Extracting gate netlist of module `\fpu' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk, enabled by $abc$128049$abc$94272$auto$opt_dff.cc:219:make_patterns_logic$5871
Extracted 5 gates and 11 wires to a netlist network with 6 inputs and 2 outputs.

3.135.22.1. Executing ABC.

3.135.23. Extracting gate netlist of module `\fpu' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk, enabled by $abc$130610$abc$94195$auto$opt_dff.cc:219:make_patterns_logic$5948
Extracted 5 gates and 11 wires to a netlist network with 6 inputs and 2 outputs.

3.135.23.1. Executing ABC.

3.135.24. Extracting gate netlist of module `\fpu' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk, enabled by $abc$128057$abc$94188$auto$opt_dff.cc:219:make_patterns_logic$5955
Extracted 5 gates and 11 wires to a netlist network with 6 inputs and 2 outputs.

3.135.24.1. Executing ABC.

3.135.25. Extracting gate netlist of module `\fpu' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk, enabled by $abc$128065$abc$94244$auto$opt_dff.cc:219:make_patterns_logic$5899
Extracted 6 gates and 13 wires to a netlist network with 7 inputs and 3 outputs.

3.135.25.1. Executing ABC.

3.135.26. Extracting gate netlist of module `\fpu' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk, enabled by $abc$128074$abc$94174$auto$opt_dff.cc:219:make_patterns_logic$5969
Extracted 5 gates and 11 wires to a netlist network with 6 inputs and 2 outputs.

3.135.26.1. Executing ABC.

3.135.27. Extracting gate netlist of module `\fpu' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk, enabled by $abc$128082$abc$126890$auto$opt_dff.cc:219:make_patterns_logic$6193
Extracted 6 gates and 13 wires to a netlist network with 7 inputs and 3 outputs.

3.135.27.1. Executing ABC.

3.135.28. Extracting gate netlist of module `\fpu' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk, enabled by $abc$128091$abc$94209$auto$opt_dff.cc:219:make_patterns_logic$5934
Extracted 5 gates and 11 wires to a netlist network with 6 inputs and 2 outputs.

3.135.28.1. Executing ABC.

3.135.29. Extracting gate netlist of module `\fpu' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk, enabled by $abc$128099$abc$126876$auto$opt_dff.cc:219:make_patterns_logic$6207
Extracted 6 gates and 12 wires to a netlist network with 6 inputs and 2 outputs.

3.135.29.1. Executing ABC.

3.135.30. Extracting gate netlist of module `\fpu' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk, enabled by $abc$128107$abc$126911$auto$opt_dff.cc:219:make_patterns_logic$6172
Extracted 5 gates and 11 wires to a netlist network with 6 inputs and 2 outputs.

3.135.30.1. Executing ABC.

3.135.31. Extracting gate netlist of module `\fpu' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk, enabled by $abc$128115$abc$94202$auto$opt_dff.cc:219:make_patterns_logic$5941
Extracted 5 gates and 11 wires to a netlist network with 6 inputs and 2 outputs.

3.135.31.1. Executing ABC.

3.135.32. Extracting gate netlist of module `\fpu' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk, enabled by $abc$128123$abc$119110$auto$opt_dff.cc:219:make_patterns_logic$5997
Extracted 5 gates and 11 wires to a netlist network with 6 inputs and 2 outputs.

3.135.32.1. Executing ABC.

3.135.33. Extracting gate netlist of module `\fpu' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk, enabled by $abc$128131$abc$121233$auto$opt_dff.cc:219:make_patterns_logic$6137
Extracted 5 gates and 11 wires to a netlist network with 6 inputs and 2 outputs.

3.135.33.1. Executing ABC.

3.135.34. Extracting gate netlist of module `\fpu' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk, enabled by $abc$128139$abc$126925$auto$opt_dff.cc:219:make_patterns_logic$6158
Extracted 5 gates and 11 wires to a netlist network with 6 inputs and 2 outputs.

3.135.34.1. Executing ABC.

3.135.35. Extracting gate netlist of module `\fpu' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk, enabled by $abc$128147$abc$90652$auto$opt_dff.cc:219:make_patterns_logic$5864
Extracted 5 gates and 11 wires to a netlist network with 6 inputs and 2 outputs.

3.135.35.1. Executing ABC.

3.135.36. Extracting gate netlist of module `\fpu' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk, enabled by $abc$128155$abc$126869$auto$opt_dff.cc:219:make_patterns_logic$6214
Extracted 5 gates and 11 wires to a netlist network with 6 inputs and 2 outputs.

3.135.36.1. Executing ABC.

3.135.37. Extracting gate netlist of module `\fpu' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk, enabled by $abc$128330$abc$94230$auto$opt_dff.cc:219:make_patterns_logic$5913
Extracted 5 gates and 11 wires to a netlist network with 6 inputs and 2 outputs.

3.135.37.1. Executing ABC.

3.135.38. Extracting gate netlist of module `\fpu' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk, enabled by $abc$128338$abc$119033$auto$opt_dff.cc:219:make_patterns_logic$6074
Extracted 5 gates and 11 wires to a netlist network with 6 inputs and 2 outputs.

3.135.38.1. Executing ABC.

3.135.39. Extracting gate netlist of module `\fpu' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk, enabled by $abc$128346$abc$119089$auto$opt_dff.cc:219:make_patterns_logic$6018
Extracted 6 gates and 13 wires to a netlist network with 7 inputs and 3 outputs.

3.135.39.1. Executing ABC.

3.135.40. Extracting gate netlist of module `\fpu' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk, enabled by $abc$128355$abc$119061$auto$opt_dff.cc:219:make_patterns_logic$6046
Extracted 6 gates and 13 wires to a netlist network with 7 inputs and 3 outputs.

3.135.40.1. Executing ABC.

3.135.41. Extracting gate netlist of module `\fpu' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk, enabled by $abc$128364$abc$119005$auto$opt_dff.cc:219:make_patterns_logic$6102
Extracted 5 gates and 11 wires to a netlist network with 6 inputs and 2 outputs.

3.135.41.1. Executing ABC.

3.135.42. Extracting gate netlist of module `\fpu' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk, enabled by $abc$129070$abc$126918$auto$opt_dff.cc:219:make_patterns_logic$6165
Extracted 5 gates and 11 wires to a netlist network with 6 inputs and 2 outputs.

3.135.42.1. Executing ABC.

3.135.43. Extracting gate netlist of module `\fpu' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk, enabled by $abc$128372$abc$94160$auto$opt_dff.cc:219:make_patterns_logic$5983
Extracted 6 gates and 13 wires to a netlist network with 7 inputs and 3 outputs.

3.135.43.1. Executing ABC.

3.135.44. Extracting gate netlist of module `\fpu' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk, enabled by $abc$128381$abc$121226$auto$opt_dff.cc:219:make_patterns_logic$6144
Extracted 5 gates and 11 wires to a netlist network with 6 inputs and 2 outputs.

3.135.44.1. Executing ABC.

3.135.45. Extracting gate netlist of module `\fpu' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk, enabled by $abc$128712$abc$119082$auto$opt_dff.cc:219:make_patterns_logic$6025
Extracted 6 gates and 13 wires to a netlist network with 7 inputs and 3 outputs.

3.135.45.1. Executing ABC.

3.135.46. Extracting gate netlist of module `\fpu' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk, enabled by $abc$128163$abc$119117$auto$opt_dff.cc:194:make_patterns_logic$6297
Extracted 306 gates and 420 wires to a netlist network with 114 inputs and 54 outputs.

3.135.46.1. Executing ABC.

3.135.47. Extracting gate netlist of module `\fpu' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk, enabled by $abc$128771$abc$126932$auto$opt_dff.cc:219:make_patterns_logic$6151
Extracted 6 gates and 13 wires to a netlist network with 7 inputs and 3 outputs.

3.135.47.1. Executing ABC.

3.135.48. Extracting gate netlist of module `\fpu' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk, enabled by $abc$128780$abc$119047$auto$opt_dff.cc:219:make_patterns_logic$6060
Extracted 5 gates and 11 wires to a netlist network with 6 inputs and 2 outputs.

3.135.48.1. Executing ABC.

3.135.49. Extracting gate netlist of module `\fpu' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk, enabled by $abc$128788$abc$119019$auto$opt_dff.cc:219:make_patterns_logic$6088
Extracted 6 gates and 13 wires to a netlist network with 7 inputs and 3 outputs.

3.135.49.1. Executing ABC.

3.135.50. Extracting gate netlist of module `\fpu' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk, enabled by $abc$128797$abc$119103$auto$opt_dff.cc:219:make_patterns_logic$6004
Extracted 5 gates and 11 wires to a netlist network with 6 inputs and 2 outputs.

3.135.50.1. Executing ABC.

3.135.51. Extracting gate netlist of module `\fpu' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk, enabled by $abc$128805$abc$118991$auto$opt_dff.cc:219:make_patterns_logic$6116
Extracted 6 gates and 13 wires to a netlist network with 7 inputs and 3 outputs.

3.135.51.1. Executing ABC.

3.135.52. Extracting gate netlist of module `\fpu' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk, enabled by $abc$128721$abc$126939$auto$opt_dff.cc:194:make_patterns_logic$5652
Extracted 39 gates and 54 wires to a netlist network with 15 inputs and 19 outputs.

3.135.52.1. Executing ABC.

3.135.53. Extracting gate netlist of module `\fpu' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk, enabled by $abc$129031$abc$119117$auto$opt_dff.cc:194:make_patterns_logic$6318
Extracted 41 gates and 50 wires to a netlist network with 9 inputs and 27 outputs.

3.135.53.1. Executing ABC.

3.135.54. Extracting gate netlist of module `\fpu' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk, enabled by $abc$128814$abc$119075$auto$opt_dff.cc:219:make_patterns_logic$6032
Extracted 5 gates and 11 wires to a netlist network with 6 inputs and 2 outputs.

3.135.54.1. Executing ABC.

3.135.55. Extracting gate netlist of module `\fpu' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk, enabled by $abc$128822$abc$94223$auto$opt_dff.cc:219:make_patterns_logic$5920
Extracted 6 gates and 13 wires to a netlist network with 7 inputs and 3 outputs.

3.135.55.1. Executing ABC.

3.135.56. Extracting gate netlist of module `\fpu' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk, enabled by $abc$128831$abc$126904$auto$opt_dff.cc:219:make_patterns_logic$6179
Extracted 5 gates and 11 wires to a netlist network with 6 inputs and 2 outputs.

3.135.56.1. Executing ABC.

3.135.57. Extracting gate netlist of module `\fpu' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk, enabled by $abc$128389$abc$119117$auto$opt_dff.cc:194:make_patterns_logic$6309
Extracted 245 gates and 406 wires to a netlist network with 161 inputs and 187 outputs.

3.135.57.1. Executing ABC.

3.135.58. Extracting gate netlist of module `\fpu' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk, enabled by $abc$129005$abc$94258$auto$opt_dff.cc:219:make_patterns_logic$5885
Extracted 6 gates and 13 wires to a netlist network with 7 inputs and 3 outputs.

3.135.58.1. Executing ABC.

3.135.59. Extracting gate netlist of module `\fpu' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk, enabled by $abc$164521$abc$119117$auto$opt_dff.cc:194:make_patterns_logic$6561
Extracted 2230 gates and 2458 wires to a netlist network with 228 inputs and 183 outputs.

3.135.59.1. Executing ABC.

3.135.60. Extracting gate netlist of module `\fpu' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk, enabled by $abc$129014$abc$94153$auto$opt_dff.cc:219:make_patterns_logic$5990
Extracted 6 gates and 13 wires to a netlist network with 7 inputs and 3 outputs.

3.135.60.1. Executing ABC.

3.135.61. Extracting gate netlist of module `\fpu' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk, enabled by $abc$129023$abc$126897$auto$opt_dff.cc:219:make_patterns_logic$6186
Extracted 5 gates and 11 wires to a netlist network with 6 inputs and 2 outputs.

3.135.61.1. Executing ABC.

3.135.62. Extracting gate netlist of module `\fpu' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk, enabled by $abc$130618$abc$122486$auto$opt_dff.cc:194:make_patterns_logic$5841
Extracted 3876 gates and 4321 wires to a netlist network with 445 inputs and 377 outputs.

3.135.62.1. Executing ABC.

3.135.63. Extracting gate netlist of module `\fpu' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk, enabled by $abc$128839$abc$94279$auto$opt_dff.cc:194:make_patterns_logic$5844
Extracted 95 gates and 153 wires to a netlist network with 58 inputs and 56 outputs.

3.135.63.1. Executing ABC.

3.135.64. Extracting gate netlist of module `\fpu' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk, enabled by $abc$164521$abc$119117$auto$opt_dff.cc:194:make_patterns_logic$5619
Extracted 134 gates and 205 wires to a netlist network with 71 inputs and 70 outputs.

3.135.64.1. Executing ABC.

3.135.65. Extracting gate netlist of module `\fpu' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk, enabled by $abc$129078$abc$127197$auto$opt_dff.cc:194:make_patterns_logic$5655
Extracted 1254 gates and 1564 wires to a netlist network with 310 inputs and 83 outputs.

3.135.65.1. Executing ABC.

3.135.66. Extracting gate netlist of module `\fpu' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk, enabled by $abc$137510$abc$119117$auto$opt_dff.cc:194:make_patterns_logic$6471
Extracted 3259 gates and 3468 wires to a netlist network with 209 inputs and 278 outputs.

3.135.66.1. Executing ABC.

3.135.67. Extracting gate netlist of module `\fpu' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk, enabled by $abc$141029$abc$119117$auto$opt_dff.cc:194:make_patterns_logic$6321
Extracted 23098 gates and 23633 wires to a netlist network with 535 inputs and 764 outputs.

3.135.67.1. Executing ABC.

3.135.68. Extracting gate netlist of module `\fpu' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk
Extracted 2171 gates and 2756 wires to a netlist network with 585 inputs and 546 outputs.

3.135.68.1. Executing ABC.

3.135.69. Extracting gate netlist of module `\fpu' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk, enabled by $abc$164521$abc$127197$auto$opt_dff.cc:194:make_patterns_logic$5622
Extracted 429 gates and 577 wires to a netlist network with 148 inputs and 265 outputs.

3.135.69.1. Executing ABC.

yosys> abc -dff

3.136. Executing ABC pass (technology mapping using ABC).

3.136.1. Summary of detected clock domains:
  7 cells in clk=\clk, en=$abc$170645$abc$129023$abc$126897$auto$opt_dff.cc:219:make_patterns_logic$6186, arst={ }, srst={ }
  8 cells in clk=\clk, en=$abc$167147$abc$127890$abc$88271$auto$opt_dff.cc:219:make_patterns_logic$6221, arst={ }, srst={ }
  6 cells in clk=\clk, en=$abc$167155$abc$127899$abc$88263$auto$opt_dff.cc:219:make_patterns_logic$6228, arst={ }, srst={ }
  7 cells in clk=\clk, en=$abc$167163$abc$127908$abc$94251$auto$opt_dff.cc:219:make_patterns_logic$5892, arst={ }, srst={ }
  6 cells in clk=\clk, en=$abc$167173$abc$127916$abc$94216$auto$opt_dff.cc:219:make_patterns_logic$5927, arst={ }, srst={ }
  6 cells in clk=\clk, en=$abc$167181$abc$127924$abc$94181$auto$opt_dff.cc:219:make_patterns_logic$5962, arst={ }, srst={ }
  6 cells in clk=\clk, en=$abc$167189$abc$127932$abc$94447$auto$opt_dff.cc:219:make_patterns_logic$5857, arst={ }, srst={ }
  2 cells in clk=\clk, en=$abc$167197$abc$164521$abc$119117$auto$opt_dff.cc:194:make_patterns_logic$6291, arst={ }, srst={ }
  5 cells in clk=\clk, en=$abc$167202$abc$127945$abc$126862$auto$opt_dff.cc:219:make_patterns_logic$6130, arst={ }, srst={ }
  5 cells in clk=\clk, en=$abc$167210$abc$127953$abc$126883$auto$opt_dff.cc:219:make_patterns_logic$6200, arst={ }, srst={ }
  6 cells in clk=\clk, en=$abc$167218$abc$127961$abc$119054$auto$opt_dff.cc:219:make_patterns_logic$6053, arst={ }, srst={ }
  6 cells in clk=\clk, en=$abc$167226$abc$127969$abc$118998$auto$opt_dff.cc:219:make_patterns_logic$6109, arst={ }, srst={ }
  5 cells in clk=\clk, en=$abc$167234$abc$127977$abc$119026$auto$opt_dff.cc:219:make_patterns_logic$6081, arst={ }, srst={ }
  6 cells in clk=\clk, en=$abc$167242$abc$127985$abc$94237$auto$opt_dff.cc:219:make_patterns_logic$5906, arst={ }, srst={ }
  5 cells in clk=\clk, en=$abc$167250$abc$127993$abc$94265$auto$opt_dff.cc:219:make_patterns_logic$5878, arst={ }, srst={ }
  6 cells in clk=\clk, en=$abc$167258$abc$128001$abc$94167$auto$opt_dff.cc:219:make_patterns_logic$5976, arst={ }, srst={ }
  6 cells in clk=\clk, en=$abc$167266$abc$128009$abc$119068$auto$opt_dff.cc:219:make_patterns_logic$6039, arst={ }, srst={ }
  5 cells in clk=\clk, en=$abc$167274$abc$128017$abc$119012$auto$opt_dff.cc:219:make_patterns_logic$6095, arst={ }, srst={ }
  6 cells in clk=\clk, en=$abc$167282$abc$128025$abc$119096$auto$opt_dff.cc:219:make_patterns_logic$6011, arst={ }, srst={ }
  6 cells in clk=\clk, en=$abc$167290$abc$128033$abc$119040$auto$opt_dff.cc:219:make_patterns_logic$6067, arst={ }, srst={ }
  6 cells in clk=\clk, en=$abc$167298$abc$128041$abc$118984$auto$opt_dff.cc:219:make_patterns_logic$6123, arst={ }, srst={ }
  6 cells in clk=\clk, en=$abc$167306$abc$128049$abc$94272$auto$opt_dff.cc:219:make_patterns_logic$5871, arst={ }, srst={ }
  6 cells in clk=\clk, en=$abc$167314$abc$130610$abc$94195$auto$opt_dff.cc:219:make_patterns_logic$5948, arst={ }, srst={ }
  6 cells in clk=\clk, en=$abc$167322$abc$128057$abc$94188$auto$opt_dff.cc:219:make_patterns_logic$5955, arst={ }, srst={ }
  6 cells in clk=\clk, en=$abc$167330$abc$128065$abc$94244$auto$opt_dff.cc:219:make_patterns_logic$5899, arst={ }, srst={ }
  5 cells in clk=\clk, en=$abc$167339$abc$128074$abc$94174$auto$opt_dff.cc:219:make_patterns_logic$5969, arst={ }, srst={ }
  6 cells in clk=\clk, en=$abc$167347$abc$128082$abc$126890$auto$opt_dff.cc:219:make_patterns_logic$6193, arst={ }, srst={ }
  5 cells in clk=\clk, en=$abc$167356$abc$128091$abc$94209$auto$opt_dff.cc:219:make_patterns_logic$5934, arst={ }, srst={ }
  6 cells in clk=\clk, en=$abc$167364$abc$128099$abc$126876$auto$opt_dff.cc:219:make_patterns_logic$6207, arst={ }, srst={ }
  6 cells in clk=\clk, en=$abc$167372$abc$128107$abc$126911$auto$opt_dff.cc:219:make_patterns_logic$6172, arst={ }, srst={ }
  6 cells in clk=\clk, en=$abc$167380$abc$128115$abc$94202$auto$opt_dff.cc:219:make_patterns_logic$5941, arst={ }, srst={ }
  6 cells in clk=\clk, en=$abc$167388$abc$128123$abc$119110$auto$opt_dff.cc:219:make_patterns_logic$5997, arst={ }, srst={ }
  6 cells in clk=\clk, en=$abc$167396$abc$128131$abc$121233$auto$opt_dff.cc:219:make_patterns_logic$6137, arst={ }, srst={ }
  6 cells in clk=\clk, en=$abc$170636$abc$129014$abc$94153$auto$opt_dff.cc:219:make_patterns_logic$5990, arst={ }, srst={ }
  6 cells in clk=\clk, en=$abc$167404$abc$128139$abc$126925$auto$opt_dff.cc:219:make_patterns_logic$6158, arst={ }, srst={ }
  6 cells in clk=\clk, en=$abc$167412$abc$128147$abc$90652$auto$opt_dff.cc:219:make_patterns_logic$5864, arst={ }, srst={ }
  6 cells in clk=\clk, en=$abc$167420$abc$128155$abc$126869$auto$opt_dff.cc:219:make_patterns_logic$6214, arst={ }, srst={ }
  5 cells in clk=\clk, en=$abc$167428$abc$128330$abc$94230$auto$opt_dff.cc:219:make_patterns_logic$5913, arst={ }, srst={ }
  5 cells in clk=\clk, en=$abc$167436$abc$128338$abc$119033$auto$opt_dff.cc:219:make_patterns_logic$6074, arst={ }, srst={ }
  6 cells in clk=\clk, en=$abc$167444$abc$128346$abc$119089$auto$opt_dff.cc:219:make_patterns_logic$6018, arst={ }, srst={ }
  6 cells in clk=\clk, en=$abc$167453$abc$128355$abc$119061$auto$opt_dff.cc:219:make_patterns_logic$6046, arst={ }, srst={ }
  6 cells in clk=\clk, en=$abc$167462$abc$128364$abc$119005$auto$opt_dff.cc:219:make_patterns_logic$6102, arst={ }, srst={ }
  5 cells in clk=\clk, en=$abc$167470$abc$129070$abc$126918$auto$opt_dff.cc:219:make_patterns_logic$6165, arst={ }, srst={ }
  6 cells in clk=\clk, en=$abc$167478$abc$128372$abc$94160$auto$opt_dff.cc:219:make_patterns_logic$5983, arst={ }, srst={ }
  6 cells in clk=\clk, en=$abc$167487$abc$128381$abc$121226$auto$opt_dff.cc:219:make_patterns_logic$6144, arst={ }, srst={ }
  6 cells in clk=\clk, en=$abc$167495$abc$128712$abc$119082$auto$opt_dff.cc:219:make_patterns_logic$6025, arst={ }, srst={ }
  6 cells in clk=\clk, en=$abc$167811$abc$128771$abc$126932$auto$opt_dff.cc:219:make_patterns_logic$6151, arst={ }, srst={ }
  5 cells in clk=\clk, en=$abc$167820$abc$128780$abc$119047$auto$opt_dff.cc:219:make_patterns_logic$6060, arst={ }, srst={ }
  7 cells in clk=\clk, en=$abc$167828$abc$128788$abc$119019$auto$opt_dff.cc:219:make_patterns_logic$6088, arst={ }, srst={ }
  6 cells in clk=\clk, en=$abc$167837$abc$128797$abc$119103$auto$opt_dff.cc:219:make_patterns_logic$6004, arst={ }, srst={ }
  7 cells in clk=\clk, en=$abc$167845$abc$128805$abc$118991$auto$opt_dff.cc:219:make_patterns_logic$6116, arst={ }, srst={ }
  39 cells in clk=\clk, en=$abc$167854$abc$128721$abc$126939$auto$opt_dff.cc:194:make_patterns_logic$5652, arst={ }, srst={ }
  41 cells in clk=\clk, en=$abc$167894$abc$129031$abc$119117$auto$opt_dff.cc:194:make_patterns_logic$6318, arst={ }, srst={ }
  6 cells in clk=\clk, en=$abc$167935$abc$128814$abc$119075$auto$opt_dff.cc:219:make_patterns_logic$6032, arst={ }, srst={ }
  337 cells in clk=\clk, en=$abc$167504$abc$128163$abc$119117$auto$opt_dff.cc:194:make_patterns_logic$6297, arst={ }, srst={ }
  6 cells in clk=\clk, en=$abc$167943$abc$128822$abc$94223$auto$opt_dff.cc:219:make_patterns_logic$5920, arst={ }, srst={ }
  5 cells in clk=\clk, en=$abc$167952$abc$128831$abc$126904$auto$opt_dff.cc:219:make_patterns_logic$6179, arst={ }, srst={ }
  417 cells in clk=\clk, en=$abc$203309$abc$128389$abc$119117$auto$opt_dff.cc:194:make_patterns_logic$6309, arst={ }, srst={ }
  7 cells in clk=\clk, en=$abc$168259$abc$129005$abc$94258$auto$opt_dff.cc:219:make_patterns_logic$5885, arst={ }, srst={ }
  83 cells in clk=\clk, en=$abc$174707$abc$128839$abc$94279$auto$opt_dff.cc:194:make_patterns_logic$5844, arst={ }, srst={ }
  23413 cells in clk=\clk, en=$abc$179782$abc$141029$abc$119117$auto$opt_dff.cc:194:make_patterns_logic$6321, arst={ }, srst={ }
  2255 cells in clk=\clk, en=$abc$168268$abc$164521$abc$119117$auto$opt_dff.cc:194:make_patterns_logic$6561, arst={ }, srst={ }
  3977 cells in clk=\clk, en=$abc$170653$abc$130618$abc$122486$auto$opt_dff.cc:194:make_patterns_logic$5841, arst={ }, srst={ }
  3352 cells in clk=\clk, en=$abc$176360$abc$137510$abc$119117$auto$opt_dff.cc:194:make_patterns_logic$6471, arst={ }, srst={ }
  134 cells in clk=\clk, en=$abc$174872$abc$164521$abc$119117$auto$opt_dff.cc:194:make_patterns_logic$5619, arst={ }, srst={ }
  1230 cells in clk=\clk, en=$abc$175081$abc$129078$abc$127197$auto$opt_dff.cc:194:make_patterns_logic$5655, arst={ }, srst={ }
  2084 cells in clk=\clk, en={ }, arst={ }, srst={ }
  427 cells in clk=\clk, en=$abc$205585$abc$164521$abc$127197$auto$opt_dff.cc:194:make_patterns_logic$5622, arst={ }, srst={ }

3.136.2. Extracting gate netlist of module `\fpu' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk, enabled by $abc$170645$abc$129023$abc$126897$auto$opt_dff.cc:219:make_patterns_logic$6186
Extracted 7 gates and 13 wires to a netlist network with 6 inputs and 3 outputs.

3.136.2.1. Executing ABC.

3.136.3. Extracting gate netlist of module `\fpu' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk, enabled by $abc$167147$abc$127890$abc$88271$auto$opt_dff.cc:219:make_patterns_logic$6221
Extracted 8 gates and 14 wires to a netlist network with 6 inputs and 2 outputs.

3.136.3.1. Executing ABC.

3.136.4. Extracting gate netlist of module `\fpu' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk, enabled by $abc$167155$abc$127899$abc$88263$auto$opt_dff.cc:219:make_patterns_logic$6228
Extracted 6 gates and 12 wires to a netlist network with 6 inputs and 2 outputs.

3.136.4.1. Executing ABC.

3.136.5. Extracting gate netlist of module `\fpu' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk, enabled by $abc$167163$abc$127908$abc$94251$auto$opt_dff.cc:219:make_patterns_logic$5892
Extracted 7 gates and 13 wires to a netlist network with 6 inputs and 2 outputs.

3.136.5.1. Executing ABC.

3.136.6. Extracting gate netlist of module `\fpu' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk, enabled by $abc$167173$abc$127916$abc$94216$auto$opt_dff.cc:219:make_patterns_logic$5927
Extracted 6 gates and 12 wires to a netlist network with 6 inputs and 2 outputs.

3.136.6.1. Executing ABC.

3.136.7. Extracting gate netlist of module `\fpu' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk, enabled by $abc$167181$abc$127924$abc$94181$auto$opt_dff.cc:219:make_patterns_logic$5962
Extracted 6 gates and 12 wires to a netlist network with 6 inputs and 2 outputs.

3.136.7.1. Executing ABC.

3.136.8. Extracting gate netlist of module `\fpu' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk, enabled by $abc$167189$abc$127932$abc$94447$auto$opt_dff.cc:219:make_patterns_logic$5857
Extracted 6 gates and 12 wires to a netlist network with 6 inputs and 2 outputs.

3.136.8.1. Executing ABC.

3.136.9. Extracting gate netlist of module `\fpu' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk, enabled by $abc$167197$abc$164521$abc$119117$auto$opt_dff.cc:194:make_patterns_logic$6291
Extracted 2 gates and 3 wires to a netlist network with 1 inputs and 1 outputs.

3.136.9.1. Executing ABC.

3.136.10. Extracting gate netlist of module `\fpu' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk, enabled by $abc$167202$abc$127945$abc$126862$auto$opt_dff.cc:219:make_patterns_logic$6130
Extracted 5 gates and 11 wires to a netlist network with 6 inputs and 2 outputs.

3.136.10.1. Executing ABC.

3.136.11. Extracting gate netlist of module `\fpu' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk, enabled by $abc$167210$abc$127953$abc$126883$auto$opt_dff.cc:219:make_patterns_logic$6200
Extracted 5 gates and 11 wires to a netlist network with 6 inputs and 2 outputs.

3.136.11.1. Executing ABC.

3.136.12. Extracting gate netlist of module `\fpu' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk, enabled by $abc$167218$abc$127961$abc$119054$auto$opt_dff.cc:219:make_patterns_logic$6053
Extracted 6 gates and 12 wires to a netlist network with 6 inputs and 2 outputs.

3.136.12.1. Executing ABC.

3.136.13. Extracting gate netlist of module `\fpu' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk, enabled by $abc$167226$abc$127969$abc$118998$auto$opt_dff.cc:219:make_patterns_logic$6109
Extracted 6 gates and 12 wires to a netlist network with 6 inputs and 2 outputs.

3.136.13.1. Executing ABC.

3.136.14. Extracting gate netlist of module `\fpu' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk, enabled by $abc$167234$abc$127977$abc$119026$auto$opt_dff.cc:219:make_patterns_logic$6081
Extracted 5 gates and 11 wires to a netlist network with 6 inputs and 2 outputs.

3.136.14.1. Executing ABC.

3.136.15. Extracting gate netlist of module `\fpu' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk, enabled by $abc$167242$abc$127985$abc$94237$auto$opt_dff.cc:219:make_patterns_logic$5906
Extracted 6 gates and 12 wires to a netlist network with 6 inputs and 2 outputs.

3.136.15.1. Executing ABC.

3.136.16. Extracting gate netlist of module `\fpu' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk, enabled by $abc$167250$abc$127993$abc$94265$auto$opt_dff.cc:219:make_patterns_logic$5878
Extracted 5 gates and 11 wires to a netlist network with 6 inputs and 2 outputs.

3.136.16.1. Executing ABC.

3.136.17. Extracting gate netlist of module `\fpu' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk, enabled by $abc$167258$abc$128001$abc$94167$auto$opt_dff.cc:219:make_patterns_logic$5976
Extracted 6 gates and 12 wires to a netlist network with 6 inputs and 2 outputs.

3.136.17.1. Executing ABC.

3.136.18. Extracting gate netlist of module `\fpu' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk, enabled by $abc$167266$abc$128009$abc$119068$auto$opt_dff.cc:219:make_patterns_logic$6039
Extracted 6 gates and 12 wires to a netlist network with 6 inputs and 2 outputs.

3.136.18.1. Executing ABC.

3.136.19. Extracting gate netlist of module `\fpu' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk, enabled by $abc$167274$abc$128017$abc$119012$auto$opt_dff.cc:219:make_patterns_logic$6095
Extracted 5 gates and 11 wires to a netlist network with 6 inputs and 2 outputs.

3.136.19.1. Executing ABC.

3.136.20. Extracting gate netlist of module `\fpu' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk, enabled by $abc$167282$abc$128025$abc$119096$auto$opt_dff.cc:219:make_patterns_logic$6011
Extracted 6 gates and 12 wires to a netlist network with 6 inputs and 2 outputs.

3.136.20.1. Executing ABC.

3.136.21. Extracting gate netlist of module `\fpu' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk, enabled by $abc$167290$abc$128033$abc$119040$auto$opt_dff.cc:219:make_patterns_logic$6067
Extracted 6 gates and 12 wires to a netlist network with 6 inputs and 2 outputs.

3.136.21.1. Executing ABC.

3.136.22. Extracting gate netlist of module `\fpu' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk, enabled by $abc$167298$abc$128041$abc$118984$auto$opt_dff.cc:219:make_patterns_logic$6123
Extracted 6 gates and 12 wires to a netlist network with 6 inputs and 2 outputs.

3.136.22.1. Executing ABC.

3.136.23. Extracting gate netlist of module `\fpu' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk, enabled by $abc$167306$abc$128049$abc$94272$auto$opt_dff.cc:219:make_patterns_logic$5871
Extracted 6 gates and 12 wires to a netlist network with 6 inputs and 2 outputs.

3.136.23.1. Executing ABC.

3.136.24. Extracting gate netlist of module `\fpu' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk, enabled by $abc$167314$abc$130610$abc$94195$auto$opt_dff.cc:219:make_patterns_logic$5948
Extracted 6 gates and 12 wires to a netlist network with 6 inputs and 2 outputs.

3.136.24.1. Executing ABC.

3.136.25. Extracting gate netlist of module `\fpu' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk, enabled by $abc$167322$abc$128057$abc$94188$auto$opt_dff.cc:219:make_patterns_logic$5955
Extracted 6 gates and 12 wires to a netlist network with 6 inputs and 2 outputs.

3.136.25.1. Executing ABC.

3.136.26. Extracting gate netlist of module `\fpu' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk, enabled by $abc$167330$abc$128065$abc$94244$auto$opt_dff.cc:219:make_patterns_logic$5899
Extracted 6 gates and 13 wires to a netlist network with 7 inputs and 3 outputs.

3.136.26.1. Executing ABC.

3.136.27. Extracting gate netlist of module `\fpu' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk, enabled by $abc$167339$abc$128074$abc$94174$auto$opt_dff.cc:219:make_patterns_logic$5969
Extracted 5 gates and 11 wires to a netlist network with 6 inputs and 2 outputs.

3.136.27.1. Executing ABC.

3.136.28. Extracting gate netlist of module `\fpu' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk, enabled by $abc$167347$abc$128082$abc$126890$auto$opt_dff.cc:219:make_patterns_logic$6193
Extracted 6 gates and 13 wires to a netlist network with 7 inputs and 3 outputs.

3.136.28.1. Executing ABC.

3.136.29. Extracting gate netlist of module `\fpu' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk, enabled by $abc$167356$abc$128091$abc$94209$auto$opt_dff.cc:219:make_patterns_logic$5934
Extracted 5 gates and 11 wires to a netlist network with 6 inputs and 2 outputs.

3.136.29.1. Executing ABC.

3.136.30. Extracting gate netlist of module `\fpu' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk, enabled by $abc$167364$abc$128099$abc$126876$auto$opt_dff.cc:219:make_patterns_logic$6207
Extracted 6 gates and 12 wires to a netlist network with 6 inputs and 2 outputs.

3.136.30.1. Executing ABC.

3.136.31. Extracting gate netlist of module `\fpu' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk, enabled by $abc$167372$abc$128107$abc$126911$auto$opt_dff.cc:219:make_patterns_logic$6172
Extracted 6 gates and 12 wires to a netlist network with 6 inputs and 2 outputs.

3.136.31.1. Executing ABC.

3.136.32. Extracting gate netlist of module `\fpu' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk, enabled by $abc$167380$abc$128115$abc$94202$auto$opt_dff.cc:219:make_patterns_logic$5941
Extracted 6 gates and 12 wires to a netlist network with 6 inputs and 2 outputs.

3.136.32.1. Executing ABC.

3.136.33. Extracting gate netlist of module `\fpu' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk, enabled by $abc$167388$abc$128123$abc$119110$auto$opt_dff.cc:219:make_patterns_logic$5997
Extracted 6 gates and 12 wires to a netlist network with 6 inputs and 2 outputs.

3.136.33.1. Executing ABC.

3.136.34. Extracting gate netlist of module `\fpu' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk, enabled by $abc$167396$abc$128131$abc$121233$auto$opt_dff.cc:219:make_patterns_logic$6137
Extracted 6 gates and 12 wires to a netlist network with 6 inputs and 2 outputs.

3.136.34.1. Executing ABC.

3.136.35. Extracting gate netlist of module `\fpu' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk, enabled by $abc$170636$abc$129014$abc$94153$auto$opt_dff.cc:219:make_patterns_logic$5990
Extracted 6 gates and 12 wires to a netlist network with 6 inputs and 2 outputs.

3.136.35.1. Executing ABC.

3.136.36. Extracting gate netlist of module `\fpu' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk, enabled by $abc$167404$abc$128139$abc$126925$auto$opt_dff.cc:219:make_patterns_logic$6158
Extracted 6 gates and 12 wires to a netlist network with 6 inputs and 2 outputs.

3.136.36.1. Executing ABC.

3.136.37. Extracting gate netlist of module `\fpu' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk, enabled by $abc$167412$abc$128147$abc$90652$auto$opt_dff.cc:219:make_patterns_logic$5864
Extracted 6 gates and 12 wires to a netlist network with 6 inputs and 2 outputs.

3.136.37.1. Executing ABC.

3.136.38. Extracting gate netlist of module `\fpu' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk, enabled by $abc$167420$abc$128155$abc$126869$auto$opt_dff.cc:219:make_patterns_logic$6214
Extracted 6 gates and 12 wires to a netlist network with 6 inputs and 2 outputs.

3.136.38.1. Executing ABC.

3.136.39. Extracting gate netlist of module `\fpu' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk, enabled by $abc$167428$abc$128330$abc$94230$auto$opt_dff.cc:219:make_patterns_logic$5913
Extracted 5 gates and 11 wires to a netlist network with 6 inputs and 2 outputs.

3.136.39.1. Executing ABC.

3.136.40. Extracting gate netlist of module `\fpu' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk, enabled by $abc$167436$abc$128338$abc$119033$auto$opt_dff.cc:219:make_patterns_logic$6074
Extracted 5 gates and 11 wires to a netlist network with 6 inputs and 2 outputs.

3.136.40.1. Executing ABC.

3.136.41. Extracting gate netlist of module `\fpu' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk, enabled by $abc$167444$abc$128346$abc$119089$auto$opt_dff.cc:219:make_patterns_logic$6018
Extracted 6 gates and 13 wires to a netlist network with 7 inputs and 3 outputs.

3.136.41.1. Executing ABC.

3.136.42. Extracting gate netlist of module `\fpu' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk, enabled by $abc$167453$abc$128355$abc$119061$auto$opt_dff.cc:219:make_patterns_logic$6046
Extracted 6 gates and 13 wires to a netlist network with 7 inputs and 3 outputs.

3.136.42.1. Executing ABC.

3.136.43. Extracting gate netlist of module `\fpu' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk, enabled by $abc$167462$abc$128364$abc$119005$auto$opt_dff.cc:219:make_patterns_logic$6102
Extracted 6 gates and 13 wires to a netlist network with 7 inputs and 3 outputs.

3.136.43.1. Executing ABC.

3.136.44. Extracting gate netlist of module `\fpu' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk, enabled by $abc$167470$abc$129070$abc$126918$auto$opt_dff.cc:219:make_patterns_logic$6165
Extracted 5 gates and 11 wires to a netlist network with 6 inputs and 2 outputs.

3.136.44.1. Executing ABC.

3.136.45. Extracting gate netlist of module `\fpu' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk, enabled by $abc$167478$abc$128372$abc$94160$auto$opt_dff.cc:219:make_patterns_logic$5983
Extracted 6 gates and 13 wires to a netlist network with 7 inputs and 3 outputs.

3.136.45.1. Executing ABC.

3.136.46. Extracting gate netlist of module `\fpu' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk, enabled by $abc$167487$abc$128381$abc$121226$auto$opt_dff.cc:219:make_patterns_logic$6144
Extracted 6 gates and 12 wires to a netlist network with 6 inputs and 2 outputs.

3.136.46.1. Executing ABC.

3.136.47. Extracting gate netlist of module `\fpu' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk, enabled by $abc$167495$abc$128712$abc$119082$auto$opt_dff.cc:219:make_patterns_logic$6025
Extracted 6 gates and 13 wires to a netlist network with 7 inputs and 3 outputs.

3.136.47.1. Executing ABC.

3.136.48. Extracting gate netlist of module `\fpu' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk, enabled by $abc$167811$abc$128771$abc$126932$auto$opt_dff.cc:219:make_patterns_logic$6151
Extracted 6 gates and 13 wires to a netlist network with 7 inputs and 3 outputs.

3.136.48.1. Executing ABC.

3.136.49. Extracting gate netlist of module `\fpu' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk, enabled by $abc$167820$abc$128780$abc$119047$auto$opt_dff.cc:219:make_patterns_logic$6060
Extracted 5 gates and 11 wires to a netlist network with 6 inputs and 2 outputs.

3.136.49.1. Executing ABC.

3.136.50. Extracting gate netlist of module `\fpu' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk, enabled by $abc$167828$abc$128788$abc$119019$auto$opt_dff.cc:219:make_patterns_logic$6088
Extracted 7 gates and 14 wires to a netlist network with 7 inputs and 3 outputs.

3.136.50.1. Executing ABC.

3.136.51. Extracting gate netlist of module `\fpu' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk, enabled by $abc$167837$abc$128797$abc$119103$auto$opt_dff.cc:219:make_patterns_logic$6004
Extracted 6 gates and 12 wires to a netlist network with 6 inputs and 2 outputs.

3.136.51.1. Executing ABC.

3.136.52. Extracting gate netlist of module `\fpu' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk, enabled by $abc$167845$abc$128805$abc$118991$auto$opt_dff.cc:219:make_patterns_logic$6116
Extracted 7 gates and 14 wires to a netlist network with 7 inputs and 3 outputs.

3.136.52.1. Executing ABC.

3.136.53. Extracting gate netlist of module `\fpu' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk, enabled by $abc$167854$abc$128721$abc$126939$auto$opt_dff.cc:194:make_patterns_logic$5652
Extracted 39 gates and 54 wires to a netlist network with 15 inputs and 19 outputs.

3.136.53.1. Executing ABC.

3.136.54. Extracting gate netlist of module `\fpu' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk, enabled by $abc$167894$abc$129031$abc$119117$auto$opt_dff.cc:194:make_patterns_logic$6318
Extracted 41 gates and 50 wires to a netlist network with 9 inputs and 27 outputs.

3.136.54.1. Executing ABC.

3.136.55. Extracting gate netlist of module `\fpu' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk, enabled by $abc$167935$abc$128814$abc$119075$auto$opt_dff.cc:219:make_patterns_logic$6032
Extracted 6 gates and 12 wires to a netlist network with 6 inputs and 2 outputs.

3.136.55.1. Executing ABC.

3.136.56. Extracting gate netlist of module `\fpu' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk, enabled by $abc$167504$abc$128163$abc$119117$auto$opt_dff.cc:194:make_patterns_logic$6297
Extracted 337 gates and 452 wires to a netlist network with 115 inputs and 53 outputs.

3.136.56.1. Executing ABC.

3.136.57. Extracting gate netlist of module `\fpu' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk, enabled by $abc$167943$abc$128822$abc$94223$auto$opt_dff.cc:219:make_patterns_logic$5920
Extracted 6 gates and 13 wires to a netlist network with 7 inputs and 3 outputs.

3.136.57.1. Executing ABC.

3.136.58. Extracting gate netlist of module `\fpu' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk, enabled by $abc$167952$abc$128831$abc$126904$auto$opt_dff.cc:219:make_patterns_logic$6179
Extracted 5 gates and 11 wires to a netlist network with 6 inputs and 2 outputs.

3.136.58.1. Executing ABC.

3.136.59. Extracting gate netlist of module `\fpu' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk, enabled by $abc$203309$abc$128389$abc$119117$auto$opt_dff.cc:194:make_patterns_logic$6309
Extracted 310 gates and 501 wires to a netlist network with 191 inputs and 202 outputs.

3.136.59.1. Executing ABC.

3.136.60. Extracting gate netlist of module `\fpu' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk, enabled by $abc$168259$abc$129005$abc$94258$auto$opt_dff.cc:219:make_patterns_logic$5885
Extracted 7 gates and 14 wires to a netlist network with 7 inputs and 3 outputs.

3.136.60.1. Executing ABC.

3.136.61. Extracting gate netlist of module `\fpu' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk, enabled by $abc$174707$abc$128839$abc$94279$auto$opt_dff.cc:194:make_patterns_logic$5844
Extracted 83 gates and 141 wires to a netlist network with 58 inputs and 56 outputs.

3.136.61.1. Executing ABC.

3.136.62. Extracting gate netlist of module `\fpu' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk, enabled by $abc$179782$abc$141029$abc$119117$auto$opt_dff.cc:194:make_patterns_logic$6321
Extracted 23062 gates and 23596 wires to a netlist network with 534 inputs and 672 outputs.

3.136.62.1. Executing ABC.

3.136.63. Extracting gate netlist of module `\fpu' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk, enabled by $abc$168268$abc$164521$abc$119117$auto$opt_dff.cc:194:make_patterns_logic$6561
Extracted 2199 gates and 2383 wires to a netlist network with 184 inputs and 181 outputs.

3.136.63.1. Executing ABC.

3.136.64. Extracting gate netlist of module `\fpu' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk, enabled by $abc$170653$abc$130618$abc$122486$auto$opt_dff.cc:194:make_patterns_logic$5841
Extracted 3977 gates and 4398 wires to a netlist network with 421 inputs and 417 outputs.

3.136.64.1. Executing ABC.

3.136.65. Extracting gate netlist of module `\fpu' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk, enabled by $abc$176360$abc$137510$abc$119117$auto$opt_dff.cc:194:make_patterns_logic$6471
Extracted 3245 gates and 3433 wires to a netlist network with 188 inputs and 274 outputs.

3.136.65.1. Executing ABC.

3.136.66. Extracting gate netlist of module `\fpu' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk, enabled by $abc$174872$abc$164521$abc$119117$auto$opt_dff.cc:194:make_patterns_logic$5619
Extracted 134 gates and 205 wires to a netlist network with 71 inputs and 70 outputs.

3.136.66.1. Executing ABC.

3.136.67. Extracting gate netlist of module `\fpu' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk, enabled by $abc$175081$abc$129078$abc$127197$auto$opt_dff.cc:194:make_patterns_logic$5655
Extracted 1230 gates and 1527 wires to a netlist network with 297 inputs and 85 outputs.

3.136.67.1. Executing ABC.

3.136.68. Extracting gate netlist of module `\fpu' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk
Extracted 2084 gates and 2726 wires to a netlist network with 642 inputs and 520 outputs.

3.136.68.1. Executing ABC.

3.136.69. Extracting gate netlist of module `\fpu' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk, enabled by $abc$205585$abc$164521$abc$127197$auto$opt_dff.cc:194:make_patterns_logic$5622
Extracted 427 gates and 575 wires to a netlist network with 148 inputs and 263 outputs.

3.136.69.1. Executing ABC.

yosys> opt_ffinv

3.137. Executing OPT_FFINV pass (push inverters through FFs).
Discovering LUTs.
Pushed 0 inverters.

yosys> opt_expr

3.138. Executing OPT_EXPR pass (perform const folding).
Optimizing module fpu.
<suppressed ~467 debug messages>

yosys> opt_merge -nomux

3.139. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\fpu'.
<suppressed ~1281 debug messages>
Removed a total of 427 cells.

yosys> opt_muxtree

3.140. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \fpu..
  Creating internal representation of mux trees.
  No muxes found in this module.
Removed 0 multiplexer ports.

yosys> opt_reduce

3.141. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \fpu.
Performed a total of 0 changes.

yosys> opt_merge

3.142. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\fpu'.
Removed a total of 0 cells.

yosys> opt_share

3.143. Executing OPT_SHARE pass.
    Found cells that share an operand and can be merged by moving the $_MUX_ $abc$207560$auto$blifparse.cc:381:parse_blif$226477 in front of them:
        $abc$207560$auto$blifparse.cc:381:parse_blif$226475
        $abc$207560$auto$blifparse.cc:381:parse_blif$226473

    Found cells that share an operand and can be merged by moving the $_MUX_ $abc$207560$auto$blifparse.cc:381:parse_blif$226483 in front of them:
        $abc$207560$auto$blifparse.cc:381:parse_blif$226481
        $abc$207560$auto$blifparse.cc:381:parse_blif$226479

    Found cells that share an operand and can be merged by moving the $_MUX_ $abc$207560$auto$blifparse.cc:381:parse_blif$227144 in front of them:
        $abc$207560$auto$blifparse.cc:381:parse_blif$227142
        $abc$207560$auto$blifparse.cc:381:parse_blif$227139

    Found cells that share an operand and can be merged by moving the $_MUX_ $abc$207560$auto$blifparse.cc:381:parse_blif$227719 in front of them:
        $abc$207560$auto$blifparse.cc:381:parse_blif$227155
        $abc$207560$auto$blifparse.cc:381:parse_blif$227143

    Found cells that share an operand and can be merged by moving the $_MUX_ $abc$207560$auto$blifparse.cc:381:parse_blif$227720 in front of them:
        $abc$207560$auto$blifparse.cc:381:parse_blif$227140
        $abc$207560$auto$blifparse.cc:381:parse_blif$227150

    Found cells that share an operand and can be merged by moving the $_MUX_ $abc$207560$auto$blifparse.cc:381:parse_blif$228181 in front of them:
        $abc$207560$auto$blifparse.cc:381:parse_blif$226474
        $abc$207560$auto$blifparse.cc:381:parse_blif$226533

    Found cells that share an operand and can be merged by moving the $_MUX_ $abc$207560$auto$blifparse.cc:381:parse_blif$228182 in front of them:
        $abc$207560$auto$blifparse.cc:381:parse_blif$226480
        $abc$207560$auto$blifparse.cc:381:parse_blif$226476


yosys> opt_dff -nosdff -sat

3.144. Executing OPT_DFF pass (perform DFF optimizations).

yosys> opt_clean

3.145. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \fpu..
Removed 1 unused cells and 138859 unused wires.
<suppressed ~193 debug messages>

yosys> opt_expr

3.146. Executing OPT_EXPR pass (perform const folding).
Optimizing module fpu.
<suppressed ~7 debug messages>

yosys> opt_muxtree

3.147. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \fpu..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Removed 0 multiplexer ports.
<suppressed ~7 debug messages>

yosys> opt_reduce

3.148. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \fpu.
Performed a total of 0 changes.

yosys> opt_merge

3.149. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\fpu'.
Removed a total of 0 cells.

yosys> opt_share

3.150. Executing OPT_SHARE pass.

yosys> opt_dff -nosdff -sat

3.151. Executing OPT_DFF pass (perform DFF optimizations).

yosys> opt_clean

3.152. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \fpu..
Removed 0 unused cells and 7 unused wires.
<suppressed ~1 debug messages>

yosys> opt_expr

3.153. Executing OPT_EXPR pass (perform const folding).
Optimizing module fpu.
MAX OPT ITERATION = 2

yosys> bmuxmap

3.154. Executing BMUXMAP pass.

yosys> demuxmap

3.155. Executing DEMUXMAP pass.

yosys> clean_zerowidth

yosys> abc -script /tmp/yosys_kjh5qv/abc_tmp_1.scr

3.156. Executing ABC pass (technology mapping using ABC).

3.156.1. Extracting gate netlist of module `\fpu' to `<abc-temp-dir>/input.blif'..
Extracted 32415 gates and 37244 wires to a netlist network with 4829 inputs and 4458 outputs.

3.156.1.1. Executing ABC.
DE:   #PIs = 4829  #Luts = 12378  Max Lvl =  17  Avg Lvl =   2.82  [   1.18 sec. at Pass 0]{firstMap}
DE:   #PIs = 4829  #Luts = 12378  Max Lvl =  17  Avg Lvl =   2.82  [ 105.05 sec. at Pass 1]{initMapFlow}
DE:   #PIs = 4829  #Luts = 11860  Max Lvl =  32  Avg Lvl =   3.49  [  18.68 sec. at Pass 2]{map}
DE:   #PIs = 4829  #Luts = 11740  Max Lvl =  31  Avg Lvl =   3.39  [  36.84 sec. at Pass 3]{postMap}
DE:   #PIs = 4829  #Luts = 11648  Max Lvl =  27  Avg Lvl =   3.31  [  28.99 sec. at Pass 4]{map}
DE:   #PIs = 4829  #Luts = 11587  Max Lvl =  27  Avg Lvl =   3.34  [  38.52 sec. at Pass 5]{postMap}
DE:   #PIs = 4829  #Luts = 11527  Max Lvl =  27  Avg Lvl =   3.34  [   7.68 sec. at Pass 6]{finalMap}

yosys> opt_expr

3.157. Executing OPT_EXPR pass (perform const folding).
Optimizing module fpu.

yosys> opt_merge -nomux

3.158. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\fpu'.
<suppressed ~3 debug messages>
Removed a total of 1 cells.

yosys> opt_muxtree

3.159. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \fpu..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Removed 0 multiplexer ports.
<suppressed ~7 debug messages>

yosys> opt_reduce

3.160. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \fpu.
Performed a total of 0 changes.

yosys> opt_merge

3.161. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\fpu'.
Removed a total of 0 cells.

yosys> opt_share

3.162. Executing OPT_SHARE pass.

yosys> opt_dff -nosdff -nodffe

3.163. Executing OPT_DFF pass (perform DFF optimizations).

yosys> opt_clean

3.164. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \fpu..
Removed 0 unused cells and 36899 unused wires.
<suppressed ~7 debug messages>

yosys> opt_expr

3.165. Executing OPT_EXPR pass (perform const folding).
Optimizing module fpu.
MAX OPT ITERATION = 1

yosys> opt_ffinv

3.166. Executing OPT_FFINV pass (push inverters through FFs).
Discovering LUTs.
Pushed 6 inverters.

yosys> stat

3.167. Printing statistics.

=== fpu ===

   Number of wires:              15039
   Number of wire bits:          21753
   Number of public wires:         179
   Number of public wire bits:    5051
   Number of memories:               0
   Number of memory bits:            0
   Number of processes:              0
   Number of cells:              16636
     $_DFFE_PN_                    134
     $_DFFE_PP_                   3832
     $_DFF_P_                      522
     $_DLATCH_P_                     6
     $lut                        11520
     $mux                            7
     adder_carry                   615


yosys> shregmap -minlen 8 -maxlen 20

3.168. Executing SHREGMAP pass (map shift registers).
Converted 0 dff cells into 0 shift registers.

yosys> dfflegalize -cell $_DFF_?_ 0 -cell $_DFF_???_ 0 -cell $_DFFE_????_ 0 -cell $_DFFSR_???_ 0 -cell $_DFFSRE_????_ 0 -cell $_DLATCHSR_PPP_ 0

3.169. Executing DFFLEGALIZE pass (convert FFs to types supported by the target).

yosys> stat

3.170. Printing statistics.

=== fpu ===

   Number of wires:              15039
   Number of wire bits:          21753
   Number of public wires:         179
   Number of public wire bits:    5051
   Number of memories:               0
   Number of memory bits:            0
   Number of processes:              0
   Number of cells:              16636
     $_DFFE_PP0N_                  134
     $_DFFE_PP0P_                 3832
     $_DFF_P_                      522
     $_DLATCHSR_PPP_                 6
     $lut                        11520
     $mux                            7
     adder_carry                   615


yosys> techmap -map +/techmap.v -map +/rapidsilicon/genesis/ffs_map.v

3.171. Executing TECHMAP pass (map to technology primitives).

3.171.1. Executing Verilog-2005 frontend: /nfs_scratch/scratch/Vorak/aram/Workspace/Raptor/yosys_verific_rs/yosys/install/bin/../share/yosys/techmap.v
Parsing Verilog input from `/nfs_scratch/scratch/Vorak/aram/Workspace/Raptor/yosys_verific_rs/yosys/install/bin/../share/yosys/techmap.v' to AST representation.
Generating RTLIL representation for module `\_90_simplemap_bool_ops'.
Generating RTLIL representation for module `\_90_simplemap_reduce_ops'.
Generating RTLIL representation for module `\_90_simplemap_logic_ops'.
Generating RTLIL representation for module `\_90_simplemap_compare_ops'.
Generating RTLIL representation for module `\_90_simplemap_various'.
Generating RTLIL representation for module `\_90_simplemap_registers'.
Generating RTLIL representation for module `\_90_shift_ops_shr_shl_sshl_sshr'.
Generating RTLIL representation for module `\_90_shift_shiftx'.
Generating RTLIL representation for module `\_90_fa'.
Generating RTLIL representation for module `\_90_lcu'.
Generating RTLIL representation for module `\_90_alu'.
Generating RTLIL representation for module `\_90_macc'.
Generating RTLIL representation for module `\_90_alumacc'.
Generating RTLIL representation for module `\$__div_mod_u'.
Generating RTLIL representation for module `\$__div_mod_trunc'.
Generating RTLIL representation for module `\_90_div'.
Generating RTLIL representation for module `\_90_mod'.
Generating RTLIL representation for module `\$__div_mod_floor'.
Generating RTLIL representation for module `\_90_divfloor'.
Generating RTLIL representation for module `\_90_modfloor'.
Generating RTLIL representation for module `\_90_pow'.
Generating RTLIL representation for module `\_90_pmux'.
Generating RTLIL representation for module `\_90_demux'.
Generating RTLIL representation for module `\_90_lut'.
Successfully finished Verilog frontend.

3.171.2. Executing Verilog-2005 frontend: /nfs_scratch/scratch/Vorak/aram/Workspace/Raptor/yosys_verific_rs/yosys/install/bin/../share/yosys/rapidsilicon/genesis/ffs_map.v
Parsing Verilog input from `/nfs_scratch/scratch/Vorak/aram/Workspace/Raptor/yosys_verific_rs/yosys/install/bin/../share/yosys/rapidsilicon/genesis/ffs_map.v' to AST representation.
Generating RTLIL representation for module `\$_DFF_P_'.
Generating RTLIL representation for module `\$_DFF_PP0_'.
Generating RTLIL representation for module `\$_DFF_PN0_'.
Generating RTLIL representation for module `\$_DFF_PP1_'.
Generating RTLIL representation for module `\$_DFF_PN1_'.
Generating RTLIL representation for module `\$_DFFE_PP_'.
Generating RTLIL representation for module `\$_DFFE_PN_'.
Generating RTLIL representation for module `\$_DFFE_PP0P_'.
Generating RTLIL representation for module `\$_DFFE_PP0N_'.
Generating RTLIL representation for module `\$_DFFE_PN0P_'.
Generating RTLIL representation for module `\$_DFFE_PN0N_'.
Generating RTLIL representation for module `\$_DFFE_PP1P_'.
Generating RTLIL representation for module `\$_DFFE_PP1N_'.
Generating RTLIL representation for module `\$_DFFE_PN1P_'.
Generating RTLIL representation for module `\$_DFFE_PN1N_'.
Generating RTLIL representation for module `\$_DFFSR_PPP_'.
Generating RTLIL representation for module `\$_DFFSR_PNP_'.
Generating RTLIL representation for module `\$_DFFSR_PNN_'.
Generating RTLIL representation for module `\$_DFFSR_PPN_'.
Generating RTLIL representation for module `\$_DFFSR_NPP_'.
Generating RTLIL representation for module `\$_DFFSR_NNP_'.
Generating RTLIL representation for module `\$_DFFSR_NNN_'.
Generating RTLIL representation for module `\$_DFFSR_NPN_'.
Generating RTLIL representation for module `\$_DFFSRE_PPPP_'.
Generating RTLIL representation for module `\$_DFFSRE_PNPP_'.
Generating RTLIL representation for module `\$_DFFSRE_PPNP_'.
Generating RTLIL representation for module `\$_DFFSRE_PNNP_'.
Generating RTLIL representation for module `\$_DFFSRE_PPPN_'.
Generating RTLIL representation for module `\$_DFFSRE_PNPN_'.
Generating RTLIL representation for module `\$_DFFSRE_PPNN_'.
Generating RTLIL representation for module `\$_DFFSRE_PNNN_'.
Generating RTLIL representation for module `\$_DLATCHSR_PPP_'.
Generating RTLIL representation for module `\$_DLATCHSR_NPP_'.
Generating RTLIL representation for module `\$_DFF_N_'.
Generating RTLIL representation for module `\$_DFF_NP0_'.
Generating RTLIL representation for module `\$_DFF_NN0_'.
Generating RTLIL representation for module `\$_DFF_NP1_'.
Generating RTLIL representation for module `\$_DFF_NN1_'.
Generating RTLIL representation for module `\$_DFFE_NP_'.
Generating RTLIL representation for module `\$_DFFE_NN_'.
Generating RTLIL representation for module `\$_DFFE_NP0P_'.
Generating RTLIL representation for module `\$_DFFE_NP0N_'.
Generating RTLIL representation for module `\$_DFFE_NN0P_'.
Generating RTLIL representation for module `\$_DFFE_NN0N_'.
Generating RTLIL representation for module `\$_DFFE_NP1P_'.
Generating RTLIL representation for module `\$_DFFE_NP1N_'.
Generating RTLIL representation for module `\$_DFFE_NN1P_'.
Generating RTLIL representation for module `\$_DFFE_NN1N_'.
Generating RTLIL representation for module `\$_DFFSRE_NPPP_'.
Generating RTLIL representation for module `\$_DFFSRE_NNPP_'.
Generating RTLIL representation for module `\$_DFFSRE_NPNP_'.
Generating RTLIL representation for module `\$_DFFSRE_NNNP_'.
Generating RTLIL representation for module `\$_DFFSRE_NPPN_'.
Generating RTLIL representation for module `\$_DFFSRE_NNPN_'.
Generating RTLIL representation for module `\$_DFFSRE_NPNN_'.
Generating RTLIL representation for module `\$_DFFSRE_NNNN_'.
Generating RTLIL representation for module `\$__SHREG_DFF_P_'.
Generating RTLIL representation for module `\$_SDFF_PP0_'.
Generating RTLIL representation for module `\$_SDFF_PN0_'.
Generating RTLIL representation for module `\$_SDFF_NP0_'.
Generating RTLIL representation for module `\$_SDFF_NN0_'.
Generating RTLIL representation for module `\$_SDFF_PP1_'.
Generating RTLIL representation for module `\$_SDFF_PN1_'.
Generating RTLIL representation for module `\$_SDFF_NP1_'.
Generating RTLIL representation for module `\$_SDFF_NN1_'.
Successfully finished Verilog frontend.

3.171.3. Continuing TECHMAP pass.
Using template \$_DFFE_PP0N_ for cells of type $_DFFE_PP0N_.
Using template \$_DFFE_PP0P_ for cells of type $_DFFE_PP0P_.
Using template \$_DLATCHSR_PPP_ for cells of type $_DLATCHSR_PPP_.
Using extmapper simplemap for cells of type $mux.
Using extmapper simplemap for cells of type $lut.
Using template \$_DFF_P_ for cells of type $_DFF_P_.
Using extmapper simplemap for cells of type $logic_not.
No more expansions possible.
<suppressed ~20269 debug messages>

yosys> opt_expr -mux_undef

3.172. Executing OPT_EXPR pass (perform const folding).
Optimizing module fpu.
<suppressed ~247331 debug messages>

yosys> simplemap

3.173. Executing SIMPLEMAP pass (map simple cells to gate primitives).

yosys> opt_expr

3.174. Executing OPT_EXPR pass (perform const folding).
Optimizing module fpu.

yosys> opt_merge

3.175. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\fpu'.
<suppressed ~198237 debug messages>
Removed a total of 66079 cells.

yosys> opt_dff -nodffe -nosdff

3.176. Executing OPT_DFF pass (perform DFF optimizations).

yosys> opt_clean

3.177. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \fpu..
Removed 0 unused cells and 50279 unused wires.
<suppressed ~1 debug messages>

yosys> opt_expr

3.178. Executing OPT_EXPR pass (perform const folding).
Optimizing module fpu.
<suppressed ~7039 debug messages>

yosys> opt_merge -nomux

3.179. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\fpu'.
<suppressed ~747 debug messages>
Removed a total of 249 cells.

yosys> opt_muxtree

3.180. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \fpu..
  Creating internal representation of mux trees.
  No muxes found in this module.
Removed 0 multiplexer ports.

yosys> opt_reduce

3.181. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \fpu.
Performed a total of 0 changes.

yosys> opt_merge

3.182. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\fpu'.
Removed a total of 0 cells.

yosys> opt_share

3.183. Executing OPT_SHARE pass.

yosys> opt_dff -nosdff -nodffe

3.184. Executing OPT_DFF pass (perform DFF optimizations).

yosys> opt_clean

3.185. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \fpu..
Removed 0 unused cells and 1203 unused wires.
<suppressed ~1 debug messages>

yosys> opt_expr

3.186. Executing OPT_EXPR pass (perform const folding).
Optimizing module fpu.
MAX OPT ITERATION = 1

yosys> abc -script /tmp/yosys_kjh5qv/abc_tmp_2.scr

3.187. Executing ABC pass (technology mapping using ABC).

3.187.1. Extracting gate netlist of module `\fpu' to `<abc-temp-dir>/input.blif'..
Extracted 53317 gates and 58135 wires to a netlist network with 4816 inputs and 4448 outputs.

3.187.1.1. Executing ABC.
DE:   #PIs = 4816  #Luts = 11595  Max Lvl =  23  Avg Lvl =   2.91  [   2.15 sec. at Pass 0]{firstMap}
DE:   #PIs = 4816  #Luts = 11595  Max Lvl =  23  Avg Lvl =   2.91  [  95.60 sec. at Pass 1]{initMapFlow}
DE:   #PIs = 4816  #Luts = 11521  Max Lvl =  30  Avg Lvl =   3.41  [  22.16 sec. at Pass 2]{map}
DE:   #PIs = 4816  #Luts = 11521  Max Lvl =  30  Avg Lvl =   3.41  [  39.55 sec. at Pass 3]{postMap}
DE:   #PIs = 4816  #Luts = 11480  Max Lvl =  26  Avg Lvl =   3.29  [  20.84 sec. at Pass 4]{map}
DE:   #PIs = 4816  #Luts = 11480  Max Lvl =  26  Avg Lvl =   3.29  [  40.31 sec. at Pass 5]{postMap}
DE:   #PIs = 4816  #Luts = 11418  Max Lvl =  27  Avg Lvl =   3.24  [   5.95 sec. at Pass 6]{finalMap}

yosys> opt_expr

3.188. Executing OPT_EXPR pass (perform const folding).
Optimizing module fpu.

yosys> opt_merge -nomux

3.189. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\fpu'.
<suppressed ~3 debug messages>
Removed a total of 1 cells.

yosys> opt_muxtree

3.190. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \fpu..
  Creating internal representation of mux trees.
  No muxes found in this module.
Removed 0 multiplexer ports.

yosys> opt_reduce

3.191. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \fpu.
Performed a total of 0 changes.

yosys> opt_merge

3.192. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\fpu'.
Removed a total of 0 cells.

yosys> opt_share

3.193. Executing OPT_SHARE pass.

yosys> opt_dff -nosdff -nodffe

3.194. Executing OPT_DFF pass (perform DFF optimizations).

yosys> opt_clean

3.195. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \fpu..
Removed 0 unused cells and 40818 unused wires.
<suppressed ~1 debug messages>

yosys> opt_expr

3.196. Executing OPT_EXPR pass (perform const folding).
Optimizing module fpu.
MAX OPT ITERATION = 1

yosys> hierarchy -check

3.197. Executing HIERARCHY pass (managing design hierarchy).

3.197.1. Analyzing design hierarchy..
Top module:  \fpu

3.197.2. Analyzing design hierarchy..
Top module:  \fpu
Removed 0 unused modules.

yosys> stat

3.198. Printing statistics.

=== fpu ===

   Number of wires:              14923
   Number of wire bits:          21637
   Number of public wires:         179
   Number of public wire bits:    5051
   Number of memories:               0
   Number of memory bits:            0
   Number of processes:              0
   Number of cells:              16526
     $lut                        11417
     adder_carry                   615
     dffsre                       4488
     latchsre                        6


yosys> opt_clean -purge

3.199. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \fpu..
Removed 0 unused cells and 133 unused wires.
<suppressed ~133 debug messages>

yosys> write_verilog -noattr -nohex synthesized.v

3.200. Executing Verilog backend.
Dumping module `\fpu'.

Warnings: 14 unique messages, 14 total
End of script. Logfile hash: c6d9e78a0c, CPU: user 231.05s system 1.21s, MEM: 773.06 MB peak
Yosys 0.18+10 (git sha1 7361c89db, gcc 9.4.0-1ubuntu1~20.04.1 -fPIC -Os)
Time spent: 91% 6x abc (2097 sec), 3% 72x opt_expr (71 sec), ...
real 796.08
user 2183.36
sys 97.46
