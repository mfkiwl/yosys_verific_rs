
 /----------------------------------------------------------------------------\
 |                                                                            |
 |  yosys -- Yosys Open SYnthesis Suite                                       |
 |                                                                            |
 |  Copyright (C) 2012 - 2020  Claire Xenia Wolf <claire@yosyshq.com>         |
 |                                                                            |
 |  Permission to use, copy, modify, and/or distribute this software for any  |
 |  purpose with or without fee is hereby granted, provided that the above    |
 |  copyright notice and this permission notice appear in all copies.         |
 |                                                                            |
 |  THE SOFTWARE IS PROVIDED "AS IS" AND THE AUTHOR DISCLAIMS ALL WARRANTIES  |
 |  WITH REGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF          |
 |  MERCHANTABILITY AND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR   |
 |  ANY SPECIAL, DIRECT, INDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES    |
 |  WHATSOEVER RESULTING FROM LOSS OF USE, DATA OR PROFITS, WHETHER IN AN     |
 |  ACTION OF CONTRACT, NEGLIGENCE OR OTHER TORTIOUS ACTION, ARISING OUT OF   |
 |  OR IN CONNECTION WITH THE USE OR PERFORMANCE OF THIS SOFTWARE.            |
 |                                                                            |
 \----------------------------------------------------------------------------/

 Yosys-Verific 0.0.92
 Yosys 0.18+10 (git sha1 7361c89db, gcc 9.4.0-1ubuntu1~20.04.1 -fPIC -Os)


-- Executing script file `yosys.ys' --
echo on

yosys> plugin -i synth-rs

yosys> read -verific

yosys> read -incdir .

yosys> verific -vlog-incdir .

1. Executing VERIFIC (loading SystemVerilog and VHDL designs using Verific).
Built with Verific May22_SW_Release, released at Wed Jun  1 05:39:28 2022.

yosys> verilog_defaults -add -I.

yosys> read -vhdl xtea.vhd round_f.vhd key_schedule.vhd

yosys> verific -vhdl xtea.vhd round_f.vhd key_schedule.vhd

2. Executing VERIFIC (loading SystemVerilog and VHDL designs using Verific).
Built with Verific May22_SW_Release, released at Wed Jun  1 05:39:28 2022.
VERIFIC-INFO [VHDL-1504] default VHDL library search path is now "/nfs_scratch/scratch/Vorak/aram/Workspace/Raptor/yosys_verific_rs/yosys/install/share/yosys/verific/vhdl_vdbs_2008"
VERIFIC-COMMENT [VHDL-1481] Analyzing VHDL file 'xtea.vhd'
VERIFIC-COMMENT [VHDL-1493] Restoring VHDL unit 'ieee.std_logic_1164' from file '/nfs_scratch/scratch/Vorak/aram/Workspace/Raptor/yosys_verific_rs/yosys/install/share/yosys/verific/vhdl_vdbs_2008/ieee/std_logic_1164.vdb'
VERIFIC-COMMENT [VHDL-1493] Restoring VHDL unit 'std.standard' from file '/nfs_scratch/scratch/Vorak/aram/Workspace/Raptor/yosys_verific_rs/yosys/install/share/yosys/verific/vhdl_vdbs_2008/std/standard.vdb'
VERIFIC-COMMENT [VHDL-1493] Restoring VHDL unit 'std.textio' from file '/nfs_scratch/scratch/Vorak/aram/Workspace/Raptor/yosys_verific_rs/yosys/install/share/yosys/verific/vhdl_vdbs_2008/std/textio.vdb'
VERIFIC-COMMENT [VHDL-1493] Restoring VHDL unit 'ieee.numeric_std' from file '/nfs_scratch/scratch/Vorak/aram/Workspace/Raptor/yosys_verific_rs/yosys/install/share/yosys/verific/vhdl_vdbs_2008/ieee/numeric_std.vdb'
VERIFIC-INFO [VHDL-1012] xtea.vhd:20: analyzing entity 'xtea'
VERIFIC-INFO [VHDL-1010] xtea.vhd:30: analyzing architecture 'behavioral'
VERIFIC-COMMENT [VHDL-1481] Analyzing VHDL file 'round_f.vhd'
VERIFIC-INFO [VHDL-1012] round_f.vhd:21: analyzing entity 'round_f'
VERIFIC-INFO [VHDL-1010] round_f.vhd:27: analyzing architecture 'behavioral'
VERIFIC-COMMENT [VHDL-1481] Analyzing VHDL file 'key_schedule.vhd'
VERIFIC-INFO [VHDL-1012] key_schedule.vhd:22: analyzing entity 'key_schedule'
VERIFIC-INFO [VHDL-1010] key_schedule.vhd:31: analyzing architecture 'behavioral'

yosys> synth_rs -top xtea -tech genesis -goal area -de -no_dsp -no_bram -verilog synthesized.v

3. Executing synth_rs pass: v0.4.79

yosys> read_verilog -lib -specify -nomem2reg +/rapidsilicon/common/cells_sim.v +/rapidsilicon/genesis/cells_sim.v +/rapidsilicon/genesis/dsp_sim.v

3.1. Executing Verilog-2005 frontend: /nfs_scratch/scratch/Vorak/aram/Workspace/Raptor/yosys_verific_rs/yosys/install/bin/../share/yosys/rapidsilicon/common/cells_sim.v
Parsing Verilog input from `/nfs_scratch/scratch/Vorak/aram/Workspace/Raptor/yosys_verific_rs/yosys/install/bin/../share/yosys/rapidsilicon/common/cells_sim.v' to AST representation.
Generating RTLIL representation for module `\inv'.
Generating RTLIL representation for module `\buff'.
Generating RTLIL representation for module `\logic_0'.
Generating RTLIL representation for module `\logic_1'.
Generating RTLIL representation for module `\gclkbuff'.
Successfully finished Verilog frontend.

3.2. Executing Verilog-2005 frontend: /nfs_scratch/scratch/Vorak/aram/Workspace/Raptor/yosys_verific_rs/yosys/install/bin/../share/yosys/rapidsilicon/genesis/cells_sim.v
Parsing Verilog input from `/nfs_scratch/scratch/Vorak/aram/Workspace/Raptor/yosys_verific_rs/yosys/install/bin/../share/yosys/rapidsilicon/genesis/cells_sim.v' to AST representation.
Generating RTLIL representation for module `\dffsre'.
Generating RTLIL representation for module `\dffnsre'.
Generating RTLIL representation for module `\latchsre'.
Generating RTLIL representation for module `\latchnsre'.
Generating RTLIL representation for module `\io_scff'.
Generating RTLIL representation for module `\scff'.
Generating RTLIL representation for module `\sh_dff'.
Generating RTLIL representation for module `\adder_carry'.
Generating RTLIL representation for module `\sdffr'.
Generating RTLIL representation for module `\sdffs'.
Generating RTLIL representation for module `\TDP_BRAM18'.
Generating RTLIL representation for module `\TDP36K'.
Generating RTLIL representation for module `\BRAM2x18_TDP'.
Generating RTLIL representation for module `\BRAM2x18_SDP'.
Generating RTLIL representation for module `\_$_mem_v2_asymmetric'.
Successfully finished Verilog frontend.

3.3. Executing Verilog-2005 frontend: /nfs_scratch/scratch/Vorak/aram/Workspace/Raptor/yosys_verific_rs/yosys/install/bin/../share/yosys/rapidsilicon/genesis/dsp_sim.v
Parsing Verilog input from `/nfs_scratch/scratch/Vorak/aram/Workspace/Raptor/yosys_verific_rs/yosys/install/bin/../share/yosys/rapidsilicon/genesis/dsp_sim.v' to AST representation.
Generating RTLIL representation for module `\RS_DSP1'.
Generating RTLIL representation for module `\RS_DSP2'.
Generating RTLIL representation for module `\RS_DSP2_MULT'.
Generating RTLIL representation for module `\RS_DSP2_MULT_REGIN'.
Generating RTLIL representation for module `\RS_DSP2_MULT_REGOUT'.
Generating RTLIL representation for module `\RS_DSP2_MULT_REGIN_REGOUT'.
Generating RTLIL representation for module `\RS_DSP2_MULTADD'.
Generating RTLIL representation for module `\RS_DSP2_MULTADD_REGIN'.
Generating RTLIL representation for module `\RS_DSP2_MULTADD_REGOUT'.
Generating RTLIL representation for module `\RS_DSP2_MULTADD_REGIN_REGOUT'.
Generating RTLIL representation for module `\RS_DSP2_MULTACC'.
Generating RTLIL representation for module `\RS_DSP2_MULTACC_REGIN'.
Generating RTLIL representation for module `\RS_DSP2_MULTACC_REGOUT'.
Generating RTLIL representation for module `\RS_DSP2_MULTACC_REGIN_REGOUT'.
Generating RTLIL representation for module `\dsp_t1_20x18x64_cfg_ports'.
Generating RTLIL representation for module `\dsp_t1_10x9x32_cfg_ports'.
Generating RTLIL representation for module `\dsp_t1_sim_cfg_ports'.
Generating RTLIL representation for module `\RS_DSP3'.
Generating RTLIL representation for module `\RS_DSP3_MULT'.
Generating RTLIL representation for module `\RS_DSP3_MULT_REGIN'.
Generating RTLIL representation for module `\RS_DSP3_MULT_REGOUT'.
Generating RTLIL representation for module `\RS_DSP3_MULT_REGIN_REGOUT'.
Generating RTLIL representation for module `\RS_DSP3_MULTADD'.
Generating RTLIL representation for module `\RS_DSP3_MULTADD_REGIN'.
Generating RTLIL representation for module `\RS_DSP3_MULTADD_REGOUT'.
Generating RTLIL representation for module `\RS_DSP3_MULTADD_REGIN_REGOUT'.
Generating RTLIL representation for module `\RS_DSP3_MULTACC'.
Generating RTLIL representation for module `\RS_DSP3_MULTACC_REGIN'.
Generating RTLIL representation for module `\RS_DSP3_MULTACC_REGOUT'.
Generating RTLIL representation for module `\RS_DSP3_MULTACC_REGIN_REGOUT'.
Generating RTLIL representation for module `\dsp_t1_20x18x64_cfg_params'.
Generating RTLIL representation for module `\dsp_t1_10x9x32_cfg_params'.
Generating RTLIL representation for module `\dsp_t1_sim_cfg_params'.
Successfully finished Verilog frontend.

yosys> hierarchy -check -top xtea

3.4. Executing HIERARCHY pass (managing design hierarchy).
VERIFIC-INFO [VHDL-1067] xtea.vhd:20: processing 'xtea(Behavioral)'
VERIFIC-INFO [VHDL-1067] key_schedule.vhd:22: processing 'key_schedule(Behavioral)'
VERIFIC-WARNING [VHDL-1851] key_schedule.vhd:66: actual of size 32 will overflow return type 'natural' in feedthrough function 'to_integer'
VERIFIC-WARNING [VHDL-1851] key_schedule.vhd:69: actual of size 32 will overflow return type 'natural' in feedthrough function 'to_integer'
VERIFIC-WARNING [VHDL-1851] key_schedule.vhd:74: actual of size 32 will overflow return type 'natural' in feedthrough function 'to_integer'
VERIFIC-WARNING [VHDL-1851] key_schedule.vhd:76: actual of size 32 will overflow return type 'natural' in feedthrough function 'to_integer'
VERIFIC-INFO [VHDL-1067] round_f.vhd:21: processing 'round_f(Behavioral)'
Importing module xtea.
Importing module key_schedule(Behavioral).
Importing module round_f(Behavioral).

3.4.1. Analyzing design hierarchy..
Top module:  \xtea
Used module:     \round_f(Behavioral)
Used module:     \key_schedule(Behavioral)

3.4.2. Analyzing design hierarchy..
Top module:  \xtea
Used module:     \round_f(Behavioral)
Used module:     \key_schedule(Behavioral)
Removed 0 unused modules.

yosys> proc

3.5. Executing PROC pass (convert processes to netlists).

yosys> proc_clean

3.5.1. Executing PROC_CLEAN pass (remove empty switches from decision trees).
Cleaned up 0 empty switches.

yosys> proc_rmdead

3.5.2. Executing PROC_RMDEAD pass (remove dead branches from decision trees).
Removed a total of 0 dead cases.

yosys> proc_prune

3.5.3. Executing PROC_PRUNE pass (remove redundant assignments in processes).
Removed 0 redundant assignments.
Promoted 0 assignments to connections.

yosys> proc_init

3.5.4. Executing PROC_INIT pass (extract init attributes).

yosys> proc_arst

3.5.5. Executing PROC_ARST pass (detect async resets in processes).

yosys> proc_rom

3.5.6. Executing PROC_ROM pass (convert switches to ROMs).
Converted 0 switches.

yosys> proc_mux

3.5.7. Executing PROC_MUX pass (convert decision trees to multiplexers).

yosys> proc_dlatch

3.5.8. Executing PROC_DLATCH pass (convert process syncs to latches).

yosys> proc_dff

3.5.9. Executing PROC_DFF pass (convert process syncs to FFs).

yosys> proc_memwr

3.5.10. Executing PROC_MEMWR pass (convert process memory writes to cells).

yosys> proc_clean

3.5.11. Executing PROC_CLEAN pass (remove empty switches from decision trees).
Cleaned up 0 empty switches.

yosys> opt_expr -keepdc

3.5.12. Executing OPT_EXPR pass (perform const folding).
Optimizing module round_f(Behavioral).
Optimizing module key_schedule(Behavioral).
<suppressed ~4 debug messages>
Optimizing module xtea.
<suppressed ~3 debug messages>

yosys> bmuxmap

3.6. Executing BMUXMAP pass.

yosys> demuxmap

3.7. Executing DEMUXMAP pass.

yosys> clean_zerowidth

yosys> flatten

3.8. Executing FLATTEN pass (flatten design).
Deleting now unused module key_schedule(Behavioral).
Deleting now unused module round_f(Behavioral).
<suppressed ~2 debug messages>

yosys> bmuxmap

3.9. Executing BMUXMAP pass.

yosys> demuxmap

3.10. Executing DEMUXMAP pass.

yosys> clean_zerowidth

yosys> tribuf -logic -formal

3.11. Executing TRIBUF pass.

yosys> deminout

3.12. Executing DEMINOUT pass (demote inout ports to input or output).

yosys> opt_expr

3.13. Executing OPT_EXPR pass (perform const folding).
Optimizing module xtea.

yosys> opt_clean

3.14. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \xtea..
Removed 1 unused cells and 49 unused wires.
<suppressed ~29 debug messages>

yosys> check

3.15. Executing CHECK pass (checking for obvious problems).
Checking module xtea...
Found and reported 0 problems.

yosys> opt_expr

3.16. Executing OPT_EXPR pass (perform const folding).
Optimizing module xtea.

yosys> opt_merge -nomux

3.17. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\xtea'.
<suppressed ~3 debug messages>
Removed a total of 1 cells.

yosys> opt_muxtree

3.18. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \xtea..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Removed 0 multiplexer ports.
<suppressed ~8 debug messages>

yosys> opt_reduce

3.19. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \xtea.
Performed a total of 0 changes.

yosys> opt_merge

3.20. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\xtea'.
Removed a total of 0 cells.

yosys> opt_share

3.21. Executing OPT_SHARE pass.

yosys> opt_dff -nosdff -nodffe

3.22. Executing OPT_DFF pass (perform DFF optimizations).
Removing never-active async load on $verific$v_1_s_reg$xtea.vhd:102$87 ($aldff) from module xtea.
Removing never-active async load on $verific$v_0_s_reg$xtea.vhd:102$88 ($aldff) from module xtea.
Removing never-active async load on $verific$input_a_s_reg$xtea.vhd:102$89 ($aldff) from module xtea.
Removing never-active async load on $verific$cnt_s_reg$xtea.vhd:67$53 ($aldff) from module xtea.
Removing never-active async load on $flatten\KEY_SCHEDULE_0.$verific$sum_s_reg$key_schedule.vhd:80$162 ($aldff) from module xtea.
Removing never-active async load on $flatten\KEY_SCHEDULE_0.$verific$subkey_reg$key_schedule.vhd:80$163 ($aldff) from module xtea.

yosys> opt_clean

3.23. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \xtea..
Removed 0 unused cells and 1 unused wires.
<suppressed ~1 debug messages>

yosys> opt_expr

3.24. Executing OPT_EXPR pass (perform const folding).
Optimizing module xtea.
MAX OPT ITERATION = 1

yosys> fsm -encoding binary

3.25. Executing FSM pass (extract and optimize FSM).

yosys> fsm_detect

3.25.1. Executing FSM_DETECT pass (finding FSMs in design).

yosys> fsm_extract

3.25.2. Executing FSM_EXTRACT pass (extracting FSM from design).

yosys> fsm_opt

3.25.3. Executing FSM_OPT pass (simple optimizations of FSMs).

yosys> opt_clean

3.25.4. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \xtea..

yosys> fsm_opt

3.25.5. Executing FSM_OPT pass (simple optimizations of FSMs).

yosys> fsm_recode -encoding binary

3.25.6. Executing FSM_RECODE pass (re-assigning FSM state encoding).

yosys> fsm_info

3.25.7. Executing FSM_INFO pass (dumping all available information on FSM cells).

yosys> fsm_map

3.25.8. Executing FSM_MAP pass (mapping FSMs to basic logic).

yosys> opt_expr

3.26. Executing OPT_EXPR pass (perform const folding).
Optimizing module xtea.

yosys> opt_merge -nomux

3.27. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\xtea'.
Removed a total of 0 cells.

yosys> opt_muxtree

3.28. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \xtea..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Removed 0 multiplexer ports.
<suppressed ~8 debug messages>

yosys> opt_reduce

3.29. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \xtea.
Performed a total of 0 changes.

yosys> opt_merge

3.30. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\xtea'.
Removed a total of 0 cells.

yosys> opt_share

3.31. Executing OPT_SHARE pass.

yosys> opt_dff -nosdff -sat

3.32. Executing OPT_DFF pass (perform DFF optimizations).
Adding EN signal on $verific$v_1_s_reg$xtea.vhd:102$87 ($dff) from module xtea (D = $verific$n1151$38, Q = \v_1_s).
Adding EN signal on $verific$v_0_s_reg$xtea.vhd:102$88 ($dff) from module xtea (D = $verific$n1184$39, Q = \v_0_s).
Adding EN signal on $verific$input_a_s_reg$xtea.vhd:102$89 ($dff) from module xtea (D = $verific$n953$32, Q = \input_a_s).
Adding EN signal on $flatten\KEY_SCHEDULE_0.$verific$sum_s_reg$key_schedule.vhd:80$162 ($dff) from module xtea (D = $flatten\KEY_SCHEDULE_0.$verific$n1300$124, Q = \KEY_SCHEDULE_0.sum_s).
Adding EN signal on $flatten\KEY_SCHEDULE_0.$verific$subkey_reg$key_schedule.vhd:80$163 ($dff) from module xtea (D = $flatten\KEY_SCHEDULE_0.$verific$n1333$125, Q = \KEY_SCHEDULE_0.subkey).

yosys> opt_clean

3.33. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \xtea..
Removed 1 unused cells and 1 unused wires.
<suppressed ~2 debug messages>

yosys> opt_expr

3.34. Executing OPT_EXPR pass (perform const folding).
Optimizing module xtea.
<suppressed ~4 debug messages>

yosys> opt_muxtree

3.35. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \xtea..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Removed 0 multiplexer ports.
<suppressed ~8 debug messages>

yosys> opt_reduce

3.36. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \xtea.
Performed a total of 0 changes.

yosys> opt_merge

3.37. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\xtea'.
<suppressed ~3 debug messages>
Removed a total of 1 cells.

yosys> opt_share

3.38. Executing OPT_SHARE pass.

yosys> opt_dff -nosdff -sat

3.39. Executing OPT_DFF pass (perform DFF optimizations).

yosys> opt_clean

3.40. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \xtea..
Removed 0 unused cells and 1 unused wires.
<suppressed ~1 debug messages>

yosys> opt_expr

3.41. Executing OPT_EXPR pass (perform const folding).
Optimizing module xtea.

yosys> opt_muxtree

3.42. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \xtea..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Removed 0 multiplexer ports.
<suppressed ~8 debug messages>

yosys> opt_reduce

3.43. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \xtea.
Performed a total of 0 changes.

yosys> opt_merge

3.44. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\xtea'.
Removed a total of 0 cells.

yosys> opt_share

3.45. Executing OPT_SHARE pass.

yosys> opt_dff -nosdff -sat

3.46. Executing OPT_DFF pass (perform DFF optimizations).

yosys> opt_clean

3.47. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \xtea..

yosys> opt_expr

3.48. Executing OPT_EXPR pass (perform const folding).
Optimizing module xtea.
MAX OPT ITERATION = 3

yosys> wreduce -keepdc

3.49. Executing WREDUCE pass (reducing word size of cells).
Removed top 1 bits (of 2) from port B of cell xtea.$verific$add_5$../vhdl_packages/vhdl_2008/src/numeric_std-body.vhdl:482$50 ($add).
Removed top 1 bits (of 2) from port B of cell xtea.$verific$equal_19$xtea.vhd:86$63 ($eq).
Removed top 1 bits (of 33) from port A of cell xtea.$verific$sub_23$xtea.vhd:90$65 ($sub).
Removed top 1 bits (of 33) from port B of cell xtea.$verific$sub_23$xtea.vhd:90$65 ($sub).
Removed top 1 bits (of 33) from port Y of cell xtea.$verific$sub_23$xtea.vhd:90$65 ($sub).
Removed top 1 bits (of 33) from port A of cell xtea.$verific$sub_31$xtea.vhd:98$72 ($sub).
Removed top 1 bits (of 33) from port B of cell xtea.$verific$sub_31$xtea.vhd:98$72 ($sub).
Removed top 1 bits (of 33) from port Y of cell xtea.$verific$sub_31$xtea.vhd:98$72 ($sub).
Removed top 1 bits (of 2) from port B of cell xtea.$auto$opt_dff.cc:195:make_patterns_logic$208 ($ne).
Removed top 5 bits (of 32) from port B of cell xtea.$flatten\ROUND_F_0.$verific$xor_5$round_f.vhd:38$172 ($xor).
Removed top 1 bits (of 4) from port B of cell xtea.$auto$opt_dff.cc:195:make_patterns_logic$190 ($ne).
Removed top 1 bits (of 3) from port B of cell xtea.$auto$opt_dff.cc:195:make_patterns_logic$192 ($ne).
Removed top 30 bits (of 32) from port B of cell xtea.$flatten\KEY_SCHEDULE_0.$verific$and_21$../vhdl_packages/vhdl_2008/src/numeric_std-body.vhdl:3512$144 ($and).
Removed top 30 bits (of 32) from port Y of cell xtea.$flatten\KEY_SCHEDULE_0.$verific$and_21$../vhdl_packages/vhdl_2008/src/numeric_std-body.vhdl:3512$144 ($and).
Removed top 30 bits (of 32) from port A of cell xtea.$flatten\KEY_SCHEDULE_0.$verific$and_21$../vhdl_packages/vhdl_2008/src/numeric_std-body.vhdl:3512$144 ($and).
Removed top 1 bits (of 22) from port A of cell xtea.$flatten\KEY_SCHEDULE_0.$verific$and_53$../vhdl_packages/vhdl_2008/src/numeric_std-body.vhdl:3512$134 ($and).
Removed top 20 bits (of 22) from port B of cell xtea.$flatten\KEY_SCHEDULE_0.$verific$and_53$../vhdl_packages/vhdl_2008/src/numeric_std-body.vhdl:3512$134 ($and).
Removed top 20 bits (of 22) from port Y of cell xtea.$flatten\KEY_SCHEDULE_0.$verific$and_53$../vhdl_packages/vhdl_2008/src/numeric_std-body.vhdl:3512$134 ($and).
Removed top 19 bits (of 21) from port A of cell xtea.$flatten\KEY_SCHEDULE_0.$verific$and_53$../vhdl_packages/vhdl_2008/src/numeric_std-body.vhdl:3512$134 ($and).
Removed top 1 bits (of 33) from port A of cell xtea.$flatten\KEY_SCHEDULE_0.$verific$sub_19$key_schedule.vhd:67$142 ($sub).
Removed top 1 bits (of 33) from port B of cell xtea.$flatten\KEY_SCHEDULE_0.$verific$sub_19$key_schedule.vhd:67$142 ($sub).
Removed top 1 bits (of 33) from port Y of cell xtea.$flatten\KEY_SCHEDULE_0.$verific$sub_19$key_schedule.vhd:67$142 ($sub).
Removed top 30 bits (of 32) from wire xtea.$flatten\KEY_SCHEDULE_0.$verific$n303$102.
Removed top 1 bits (of 33) from wire xtea.$flatten\KEY_SCHEDULE_0.$verific$n469$107.
Removed top 30 bits (of 32) from wire xtea.$flatten\KEY_SCHEDULE_0.$verific$n536$109.
Removed top 1 bits (of 33) from wire xtea.$verific$n585$21.
Removed top 1 bits (of 33) from wire xtea.$verific$n787$27.

yosys> peepopt

3.50. Executing PEEPOPT pass (run peephole optimizers).

yosys> opt_clean

3.51. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \xtea..
Removed 0 unused cells and 10 unused wires.
<suppressed ~1 debug messages>

yosys> bmuxmap

3.52. Executing BMUXMAP pass.

yosys> demuxmap

3.53. Executing DEMUXMAP pass.

yosys> clean_zerowidth

yosys> alumacc

3.54. Executing ALUMACC pass (create $alu and $macc cells).
Extracting $alu and $macc cells in module xtea:
  creating $macc model for $flatten\KEY_SCHEDULE_0.$verific$add_17$key_schedule.vhd:66$141 ($add).
  creating $macc model for $flatten\KEY_SCHEDULE_0.$verific$add_24$key_schedule.vhd:69$148 ($add).
  creating $macc model for $flatten\KEY_SCHEDULE_0.$verific$add_26$key_schedule.vhd:70$150 ($add).
  creating $macc model for $flatten\KEY_SCHEDULE_0.$verific$sub_19$key_schedule.vhd:67$142 ($sub).
  creating $macc model for $flatten\ROUND_F_0.$verific$add_7$round_f.vhd:39$174 ($add).
  creating $macc model for $verific$add_21$xtea.vhd:88$64 ($add).
  creating $macc model for $verific$add_29$xtea.vhd:96$71 ($add).
  creating $macc model for $verific$add_5$../vhdl_packages/vhdl_2008/src/numeric_std-body.vhdl:482$50 ($add).
  creating $macc model for $verific$sub_23$xtea.vhd:90$65 ($sub).
  creating $macc model for $verific$sub_31$xtea.vhd:98$72 ($sub).
  creating $alu model for $macc $verific$sub_31$xtea.vhd:98$72.
  creating $alu model for $macc $verific$sub_23$xtea.vhd:90$65.
  creating $alu model for $macc $verific$add_5$../vhdl_packages/vhdl_2008/src/numeric_std-body.vhdl:482$50.
  creating $alu model for $macc $verific$add_29$xtea.vhd:96$71.
  creating $alu model for $macc $verific$add_21$xtea.vhd:88$64.
  creating $alu model for $macc $flatten\ROUND_F_0.$verific$add_7$round_f.vhd:39$174.
  creating $alu model for $macc $flatten\KEY_SCHEDULE_0.$verific$sub_19$key_schedule.vhd:67$142.
  creating $alu model for $macc $flatten\KEY_SCHEDULE_0.$verific$add_26$key_schedule.vhd:70$150.
  creating $alu model for $macc $flatten\KEY_SCHEDULE_0.$verific$add_24$key_schedule.vhd:69$148.
  creating $alu model for $macc $flatten\KEY_SCHEDULE_0.$verific$add_17$key_schedule.vhd:66$141.
  creating $alu cell for $flatten\KEY_SCHEDULE_0.$verific$add_17$key_schedule.vhd:66$141: $auto$alumacc.cc:485:replace_alu$224
  creating $alu cell for $flatten\KEY_SCHEDULE_0.$verific$add_24$key_schedule.vhd:69$148: $auto$alumacc.cc:485:replace_alu$227
  creating $alu cell for $flatten\KEY_SCHEDULE_0.$verific$add_26$key_schedule.vhd:70$150: $auto$alumacc.cc:485:replace_alu$230
  creating $alu cell for $flatten\KEY_SCHEDULE_0.$verific$sub_19$key_schedule.vhd:67$142: $auto$alumacc.cc:485:replace_alu$233
  creating $alu cell for $flatten\ROUND_F_0.$verific$add_7$round_f.vhd:39$174: $auto$alumacc.cc:485:replace_alu$236
  creating $alu cell for $verific$add_5$../vhdl_packages/vhdl_2008/src/numeric_std-body.vhdl:482$50: $auto$alumacc.cc:485:replace_alu$239
  creating $alu cell for $verific$add_21$xtea.vhd:88$64: $auto$alumacc.cc:485:replace_alu$242
  creating $alu cell for $verific$sub_23$xtea.vhd:90$65: $auto$alumacc.cc:485:replace_alu$245
  creating $alu cell for $verific$add_29$xtea.vhd:96$71: $auto$alumacc.cc:485:replace_alu$248
  creating $alu cell for $verific$sub_31$xtea.vhd:98$72: $auto$alumacc.cc:485:replace_alu$251
  created 10 $alu and 0 $macc cells.

yosys> opt_expr

3.55. Executing OPT_EXPR pass (perform const folding).
Optimizing module xtea.

yosys> opt_merge -nomux

3.56. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\xtea'.
Removed a total of 0 cells.

yosys> opt_muxtree

3.57. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \xtea..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Removed 0 multiplexer ports.
<suppressed ~8 debug messages>

yosys> opt_reduce

3.58. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \xtea.
Performed a total of 0 changes.

yosys> opt_merge

3.59. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\xtea'.
Removed a total of 0 cells.

yosys> opt_share

3.60. Executing OPT_SHARE pass.
    Found cells that share an operand and can be merged by moving the $mux $flatten\KEY_SCHEDULE_0.$verific$mux_29$key_schedule.vhd:71$153 in front of them:
        $auto$alumacc.cc:485:replace_alu$233
        $auto$alumacc.cc:485:replace_alu$230

    Found cells that share an operand and can be merged by moving the $mux $verific$mux_25$xtea.vhd:91$68 in front of them:
        $auto$alumacc.cc:485:replace_alu$245
        $auto$alumacc.cc:485:replace_alu$242

    Found cells that share an operand and can be merged by moving the $mux $verific$mux_33$xtea.vhd:99$75 in front of them:
        $auto$alumacc.cc:485:replace_alu$251
        $auto$alumacc.cc:485:replace_alu$248


yosys> opt_dff -nosdff -nodffe

3.61. Executing OPT_DFF pass (perform DFF optimizations).

yosys> opt_clean

3.62. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \xtea..
Removed 0 unused cells and 18 unused wires.
<suppressed ~1 debug messages>

yosys> opt_expr

3.63. Executing OPT_EXPR pass (perform const folding).
Optimizing module xtea.
<suppressed ~4 debug messages>

yosys> opt_muxtree

3.64. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \xtea..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Removed 0 multiplexer ports.
<suppressed ~11 debug messages>

yosys> opt_reduce

3.65. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \xtea.
Performed a total of 0 changes.

yosys> opt_merge

3.66. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\xtea'.
<suppressed ~6 debug messages>
Removed a total of 2 cells.

yosys> opt_share

3.67. Executing OPT_SHARE pass.

yosys> opt_dff -nosdff -nodffe

3.68. Executing OPT_DFF pass (perform DFF optimizations).

yosys> opt_clean

3.69. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \xtea..
Removed 0 unused cells and 6 unused wires.
<suppressed ~1 debug messages>

yosys> opt_expr

3.70. Executing OPT_EXPR pass (perform const folding).
Optimizing module xtea.

yosys> opt_muxtree

3.71. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \xtea..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Removed 0 multiplexer ports.
<suppressed ~10 debug messages>

yosys> opt_reduce

3.72. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \xtea.
Performed a total of 0 changes.

yosys> opt_merge

3.73. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\xtea'.
Removed a total of 0 cells.

yosys> opt_share

3.74. Executing OPT_SHARE pass.

yosys> opt_dff -nosdff -nodffe

3.75. Executing OPT_DFF pass (perform DFF optimizations).

yosys> opt_clean

3.76. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \xtea..

yosys> opt_expr

3.77. Executing OPT_EXPR pass (perform const folding).
Optimizing module xtea.
MAX OPT ITERATION = 3

yosys> stat

3.78. Printing statistics.

=== xtea ===

   Number of wires:                 98
   Number of wire bits:           2562
   Number of public wires:          32
   Number of public wire bits:    1002
   Number of memories:               0
   Number of memory bits:            0
   Number of processes:              0
   Number of cells:                 63
     $alu                            7
     $and                            2
     $dff                            1
     $dffe                           5
     $eq                             3
     $logic_not                      1
     $mux                           29
     $ne                             4
     $neg                            1
     $not                            1
     $reduce_and                     3
     $reduce_bool                    4
     $xor                            2


yosys> memory -nomap

3.79. Executing MEMORY pass.

yosys> opt_mem

3.79.1. Executing OPT_MEM pass (optimize memories).
Performed a total of 0 transformations.

yosys> opt_mem_priority

3.79.2. Executing OPT_MEM_PRIORITY pass (removing unnecessary memory write priority relations).
Performed a total of 0 transformations.

yosys> opt_mem_feedback

3.79.3. Executing OPT_MEM_FEEDBACK pass (finding memory read-to-write feedback paths).

yosys> memory_bmux2rom

3.79.4. Executing MEMORY_BMUX2ROM pass (converting muxes to ROMs).

yosys> memory_dff

3.79.5. Executing MEMORY_DFF pass (merging $dff cells to $memrd).

yosys> opt_clean

3.79.6. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \xtea..

yosys> memory_share

3.79.7. Executing MEMORY_SHARE pass (consolidating $memrd/$memwr cells).

yosys> opt_mem_widen

3.79.8. Executing OPT_MEM_WIDEN pass (optimize memories where all ports are wide).
Performed a total of 0 transformations.

yosys> opt_clean

3.79.9. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \xtea..

yosys> memory_collect

3.79.10. Executing MEMORY_COLLECT pass (generating $mem cells).

yosys> stat

3.80. Printing statistics.

=== xtea ===

   Number of wires:                 98
   Number of wire bits:           2562
   Number of public wires:          32
   Number of public wire bits:    1002
   Number of memories:               0
   Number of memory bits:            0
   Number of processes:              0
   Number of cells:                 63
     $alu                            7
     $and                            2
     $dff                            1
     $dffe                           5
     $eq                             3
     $logic_not                      1
     $mux                           29
     $ne                             4
     $neg                            1
     $not                            1
     $reduce_and                     3
     $reduce_bool                    4
     $xor                            2


yosys> muxpack

3.81. Executing MUXPACK pass ($mux cell cascades to $pmux).
Converting xtea.$verific$mux_34$xtea.vhd:100$76 ... xtea.$verific$mux_36$xtea.vhd:100$78 to a pmux with 3 cases.
Converting xtea.$verific$mux_37$xtea.vhd:100$79 ... xtea.$verific$mux_38$xtea.vhd:100$80 to a pmux with 2 cases.
Converting xtea.$verific$mux_39$xtea.vhd:100$81 ... xtea.$verific$mux_41$xtea.vhd:100$83 to a pmux with 3 cases.
Converted 8 (p)mux cells into 3 pmux cells.
<suppressed ~25 debug messages>

yosys> opt_clean

3.82. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \xtea..
Removed 0 unused cells and 5 unused wires.
<suppressed ~1 debug messages>

yosys> pmuxtree

3.83. Executing PMUXTREE pass.

yosys> muxpack

3.84. Executing MUXPACK pass ($mux cell cascades to $pmux).
Converting xtea.$auto$pmuxtree.cc:65:recursive_mux_generator$275 ... xtea.$auto$pmuxtree.cc:65:recursive_mux_generator$277 to a pmux with 2 cases.
Converted 2 (p)mux cells into 1 pmux cells.
<suppressed ~22 debug messages>

yosys> memory_map

3.85. Executing MEMORY_MAP pass (converting memories to logic and flip-flops).

yosys> stat

3.86. Printing statistics.

=== xtea ===

   Number of wires:                102
   Number of wire bits:           2597
   Number of public wires:          32
   Number of public wire bits:    1002
   Number of memories:               0
   Number of memory bits:            0
   Number of processes:              0
   Number of cells:                 63
     $alu                            7
     $and                            2
     $dff                            1
     $dffe                           5
     $eq                             3
     $logic_not                      1
     $mux                           25
     $ne                             4
     $neg                            1
     $not                            2
     $or                             1
     $pmux                           1
     $reduce_and                     3
     $reduce_bool                    4
     $reduce_or                      1
     $xor                            2


yosys> techmap -map +/techmap.v -map +/rapidsilicon/genesis/arith_map.v

3.87. Executing TECHMAP pass (map to technology primitives).

3.87.1. Executing Verilog-2005 frontend: /nfs_scratch/scratch/Vorak/aram/Workspace/Raptor/yosys_verific_rs/yosys/install/bin/../share/yosys/techmap.v
Parsing Verilog input from `/nfs_scratch/scratch/Vorak/aram/Workspace/Raptor/yosys_verific_rs/yosys/install/bin/../share/yosys/techmap.v' to AST representation.
Generating RTLIL representation for module `\_90_simplemap_bool_ops'.
Generating RTLIL representation for module `\_90_simplemap_reduce_ops'.
Generating RTLIL representation for module `\_90_simplemap_logic_ops'.
Generating RTLIL representation for module `\_90_simplemap_compare_ops'.
Generating RTLIL representation for module `\_90_simplemap_various'.
Generating RTLIL representation for module `\_90_simplemap_registers'.
Generating RTLIL representation for module `\_90_shift_ops_shr_shl_sshl_sshr'.
Generating RTLIL representation for module `\_90_shift_shiftx'.
Generating RTLIL representation for module `\_90_fa'.
Generating RTLIL representation for module `\_90_lcu'.
Generating RTLIL representation for module `\_90_alu'.
Generating RTLIL representation for module `\_90_macc'.
Generating RTLIL representation for module `\_90_alumacc'.
Generating RTLIL representation for module `\$__div_mod_u'.
Generating RTLIL representation for module `\$__div_mod_trunc'.
Generating RTLIL representation for module `\_90_div'.
Generating RTLIL representation for module `\_90_mod'.
Generating RTLIL representation for module `\$__div_mod_floor'.
Generating RTLIL representation for module `\_90_divfloor'.
Generating RTLIL representation for module `\_90_modfloor'.
Generating RTLIL representation for module `\_90_pow'.
Generating RTLIL representation for module `\_90_pmux'.
Generating RTLIL representation for module `\_90_demux'.
Generating RTLIL representation for module `\_90_lut'.
Successfully finished Verilog frontend.

3.87.2. Executing Verilog-2005 frontend: /nfs_scratch/scratch/Vorak/aram/Workspace/Raptor/yosys_verific_rs/yosys/install/bin/../share/yosys/rapidsilicon/genesis/arith_map.v
Parsing Verilog input from `/nfs_scratch/scratch/Vorak/aram/Workspace/Raptor/yosys_verific_rs/yosys/install/bin/../share/yosys/rapidsilicon/genesis/arith_map.v' to AST representation.
Generating RTLIL representation for module `\_80_rs_alu'.
Successfully finished Verilog frontend.

3.87.3. Continuing TECHMAP pass.
Using extmapper simplemap for cells of type $dffe.
Using extmapper simplemap for cells of type $mux.
Running "alumacc" on wrapper $extern:wrap:$neg:A_SIGNED=0:A_WIDTH=32:Y_WIDTH=32:394426c56d1a028ba8fdd5469b163e04011def47.
Using template $extern:wrap:$neg:A_SIGNED=0:A_WIDTH=32:Y_WIDTH=32:394426c56d1a028ba8fdd5469b163e04011def47 for cells of type $extern:wrap:$neg:A_SIGNED=0:A_WIDTH=32:Y_WIDTH=32:394426c56d1a028ba8fdd5469b163e04011def47.
Using template $paramod$be80489e44a49c29884f59fd81c31ed03229cfc1\_80_rs_alu for cells of type $alu.
Using template $paramod$8fabc56b80a569262acfc42757a02ca0b8e91278\_90_pmux for cells of type $pmux.
Using extmapper simplemap for cells of type $reduce_and.
Using extmapper simplemap for cells of type $reduce_bool.
Using extmapper simplemap for cells of type $dff.
Using extmapper simplemap for cells of type $eq.
Using template $paramod$79fc87901d7fd8aaad689b5406671422f5fa25b9\_80_rs_alu for cells of type $alu.
Using extmapper simplemap for cells of type $or.
Using extmapper simplemap for cells of type $not.
Using extmapper simplemap for cells of type $reduce_or.
Using extmapper simplemap for cells of type $ne.
Using template $paramod$175e67c02b86e96b1288b9dc100122520d7240d8\_90_alu for cells of type $alu.
Using extmapper simplemap for cells of type $xor.
Using extmapper simplemap for cells of type $and.
Using extmapper simplemap for cells of type $logic_not.
Using template $paramod$63a3f1ffa662be02d3403b533885c56d18ebe02a\_80_rs_alu for cells of type $alu.
Using extmapper simplemap for cells of type $pos.
Using template $paramod\_90_lcu\WIDTH=32'00000000000000000000000000000010 for cells of type $lcu.
No more expansions possible.
<suppressed ~580 debug messages>

yosys> stat

3.88. Printing statistics.

=== xtea ===

   Number of wires:                428
   Number of wire bits:           7520
   Number of public wires:          32
   Number of public wire bits:    1002
   Number of memories:               0
   Number of memory bits:            0
   Number of processes:              0
   Number of cells:               2117
     $_AND_                         77
     $_DFFE_PP_                    160
     $_DFF_P_                        2
     $_MUX_                       1042
     $_NOT_                        232
     $_OR_                          56
     $_XOR_                        324
     adder_carry                   224


yosys> opt_expr

3.89. Executing OPT_EXPR pass (perform const folding).
Optimizing module xtea.
<suppressed ~657 debug messages>

yosys> opt_merge -nomux

3.90. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\xtea'.
<suppressed ~222 debug messages>
Removed a total of 74 cells.

yosys> opt_muxtree

3.91. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \xtea..
  Creating internal representation of mux trees.
  No muxes found in this module.
Removed 0 multiplexer ports.

yosys> opt_reduce

3.92. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \xtea.
Performed a total of 0 changes.

yosys> opt_merge

3.93. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\xtea'.
Removed a total of 0 cells.

yosys> opt_share

3.94. Executing OPT_SHARE pass.

yosys> opt_dff -nosdff -nodffe

3.95. Executing OPT_DFF pass (perform DFF optimizations).

yosys> opt_clean

3.96. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \xtea..
Removed 105 unused cells and 328 unused wires.
<suppressed ~106 debug messages>

yosys> opt_expr

3.97. Executing OPT_EXPR pass (perform const folding).
Optimizing module xtea.

yosys> opt_muxtree

3.98. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \xtea..
  Creating internal representation of mux trees.
  No muxes found in this module.
Removed 0 multiplexer ports.

yosys> opt_reduce

3.99. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \xtea.
Performed a total of 0 changes.

yosys> opt_merge

3.100. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\xtea'.
Removed a total of 0 cells.

yosys> opt_share

3.101. Executing OPT_SHARE pass.

yosys> opt_dff -nosdff -nodffe

3.102. Executing OPT_DFF pass (perform DFF optimizations).

yosys> opt_clean

3.103. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \xtea..

yosys> opt_expr

3.104. Executing OPT_EXPR pass (perform const folding).
Optimizing module xtea.
MAX OPT ITERATION = 2

yosys> opt_expr -full

3.105. Executing OPT_EXPR pass (perform const folding).
Optimizing module xtea.
<suppressed ~160 debug messages>

yosys> techmap -map +/techmap.v

3.106. Executing TECHMAP pass (map to technology primitives).

3.106.1. Executing Verilog-2005 frontend: /nfs_scratch/scratch/Vorak/aram/Workspace/Raptor/yosys_verific_rs/yosys/install/bin/../share/yosys/techmap.v
Parsing Verilog input from `/nfs_scratch/scratch/Vorak/aram/Workspace/Raptor/yosys_verific_rs/yosys/install/bin/../share/yosys/techmap.v' to AST representation.
Generating RTLIL representation for module `\_90_simplemap_bool_ops'.
Generating RTLIL representation for module `\_90_simplemap_reduce_ops'.
Generating RTLIL representation for module `\_90_simplemap_logic_ops'.
Generating RTLIL representation for module `\_90_simplemap_compare_ops'.
Generating RTLIL representation for module `\_90_simplemap_various'.
Generating RTLIL representation for module `\_90_simplemap_registers'.
Generating RTLIL representation for module `\_90_shift_ops_shr_shl_sshl_sshr'.
Generating RTLIL representation for module `\_90_shift_shiftx'.
Generating RTLIL representation for module `\_90_fa'.
Generating RTLIL representation for module `\_90_lcu'.
Generating RTLIL representation for module `\_90_alu'.
Generating RTLIL representation for module `\_90_macc'.
Generating RTLIL representation for module `\_90_alumacc'.
Generating RTLIL representation for module `\$__div_mod_u'.
Generating RTLIL representation for module `\$__div_mod_trunc'.
Generating RTLIL representation for module `\_90_div'.
Generating RTLIL representation for module `\_90_mod'.
Generating RTLIL representation for module `\$__div_mod_floor'.
Generating RTLIL representation for module `\_90_divfloor'.
Generating RTLIL representation for module `\_90_modfloor'.
Generating RTLIL representation for module `\_90_pow'.
Generating RTLIL representation for module `\_90_pmux'.
Generating RTLIL representation for module `\_90_demux'.
Generating RTLIL representation for module `\_90_lut'.
Successfully finished Verilog frontend.

3.106.2. Continuing TECHMAP pass.
No more expansions possible.
<suppressed ~71 debug messages>

yosys> opt_expr

3.107. Executing OPT_EXPR pass (perform const folding).
Optimizing module xtea.

yosys> opt_merge -nomux

3.108. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\xtea'.
Removed a total of 0 cells.

yosys> opt_muxtree

3.109. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \xtea..
  Creating internal representation of mux trees.
  No muxes found in this module.
Removed 0 multiplexer ports.

yosys> opt_reduce

3.110. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \xtea.
Performed a total of 0 changes.

yosys> opt_merge

3.111. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\xtea'.
Removed a total of 0 cells.

yosys> opt_dff -nosdff -nodffe -sat

3.112. Executing OPT_DFF pass (perform DFF optimizations).

yosys> opt_clean

3.113. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \xtea..
Removed 0 unused cells and 5 unused wires.
<suppressed ~1 debug messages>

yosys> opt_expr

3.114. Executing OPT_EXPR pass (perform const folding).
Optimizing module xtea.
MAX OPT ITERATION = 1

yosys> abc -dff

3.115. Executing ABC pass (technology mapping using ABC).

3.115.1. Summary of detected clock domains:
  455 cells in clk=\clk, en=$auto$opt_dff.cc:194:make_patterns_logic$214, arst={ }, srst={ }
  136 cells in clk=\clk, en=$auto$opt_dff.cc:219:make_patterns_logic$211, arst={ }, srst={ }
  198 cells in clk=\clk, en=$auto$opt_dff.cc:219:make_patterns_logic$202, arst={ }, srst={ }
  10 cells in clk=\clk, en={ }, arst={ }, srst={ }
  301 cells in clk=\clk, en=$auto$opt_dff.cc:219:make_patterns_logic$195, arst={ }, srst={ }
  223 cells in clk=\clk, en=$auto$opt_dff.cc:194:make_patterns_logic$217, arst={ }, srst={ }

3.115.2. Extracting gate netlist of module `\xtea' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk, enabled by $auto$opt_dff.cc:194:make_patterns_logic$214
Extracted 359 gates and 524 wires to a netlist network with 164 inputs and 127 outputs.

3.115.2.1. Executing ABC.

3.115.3. Extracting gate netlist of module `\xtea' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk, enabled by $auto$opt_dff.cc:219:make_patterns_logic$211
Extracted 127 gates and 196 wires to a netlist network with 69 inputs and 65 outputs.

3.115.3.1. Executing ABC.

3.115.4. Extracting gate netlist of module `\xtea' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk, enabled by $auto$opt_dff.cc:219:make_patterns_logic$202
Extracted 166 gates and 299 wires to a netlist network with 133 inputs and 96 outputs.

3.115.4.1. Executing ABC.

3.115.5. Extracting gate netlist of module `\xtea' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk
Extracted 10 gates and 12 wires to a netlist network with 1 inputs and 3 outputs.

3.115.5.1. Executing ABC.

3.115.6. Extracting gate netlist of module `\xtea' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk, enabled by $auto$opt_dff.cc:219:make_patterns_logic$195
Extracted 237 gates and 403 wires to a netlist network with 165 inputs and 126 outputs.

3.115.6.1. Executing ABC.

3.115.7. Extracting gate netlist of module `\xtea' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk, enabled by $auto$opt_dff.cc:194:make_patterns_logic$217
Extracted 200 gates and 308 wires to a netlist network with 107 inputs and 34 outputs.

3.115.7.1. Executing ABC.

yosys> abc -dff

3.116. Executing ABC pass (technology mapping using ABC).

3.116.1. Summary of detected clock domains:
  8 cells in clk=\clk, en={ }, arst={ }, srst={ }
  299 cells in clk=\clk, en=$abc$3269$auto$opt_dff.cc:219:make_patterns_logic$195, arst={ }, srst={ }
  100 cells in clk=\clk, en=$abc$2923$auto$opt_dff.cc:219:make_patterns_logic$211, arst={ }, srst={ }
  454 cells in clk=\clk, en=$abc$2525$auto$opt_dff.cc:194:make_patterns_logic$214, arst={ }, srst={ }
  239 cells in clk=\clk, en=$abc$3059$auto$opt_dff.cc:219:make_patterns_logic$202, arst={ }, srst={ }
  169 cells in clk=\clk, en=$abc$3538$auto$opt_dff.cc:194:make_patterns_logic$217, arst={ }, srst={ }

3.116.2. Extracting gate netlist of module `\xtea' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk
Extracted 8 gates and 9 wires to a netlist network with 1 inputs and 3 outputs.

3.116.2.1. Executing ABC.

3.116.3. Extracting gate netlist of module `\xtea' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk, enabled by $abc$3269$auto$opt_dff.cc:219:make_patterns_logic$195
Extracted 235 gates and 434 wires to a netlist network with 199 inputs and 158 outputs.

3.116.3.1. Executing ABC.

3.116.4. Extracting gate netlist of module `\xtea' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk, enabled by $abc$2923$auto$opt_dff.cc:219:make_patterns_logic$211
Extracted 92 gates and 130 wires to a netlist network with 38 inputs and 64 outputs.

3.116.4.1. Executing ABC.

3.116.5. Extracting gate netlist of module `\xtea' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk, enabled by $abc$2525$auto$opt_dff.cc:194:make_patterns_logic$214
Extracted 360 gates and 522 wires to a netlist network with 162 inputs and 126 outputs.

3.116.5.1. Executing ABC.

3.116.6. Extracting gate netlist of module `\xtea' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk, enabled by $abc$3059$auto$opt_dff.cc:219:make_patterns_logic$202
Extracted 207 gates and 344 wires to a netlist network with 137 inputs and 100 outputs.

3.116.6.1. Executing ABC.

3.116.7. Extracting gate netlist of module `\xtea' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk, enabled by $abc$3538$auto$opt_dff.cc:194:make_patterns_logic$217
Extracted 143 gates and 249 wires to a netlist network with 106 inputs and 33 outputs.

3.116.7.1. Executing ABC.

yosys> abc -dff

3.117. Executing ABC pass (technology mapping using ABC).

3.117.1. Summary of detected clock domains:
  207 cells in clk=\clk, en=$abc$4475$abc$3059$auto$opt_dff.cc:219:make_patterns_logic$202, arst={ }, srst={ }
  8 cells in clk=\clk, en={ }, arst={ }, srst={ }
  452 cells in clk=\clk, en=$abc$4086$abc$2525$auto$opt_dff.cc:194:make_patterns_logic$214, arst={ }, srst={ }
  299 cells in clk=\clk, en=$abc$3686$abc$3269$auto$opt_dff.cc:219:make_patterns_logic$195, arst={ }, srst={ }
  102 cells in clk=\clk, en=$abc$3955$abc$2923$auto$opt_dff.cc:219:make_patterns_logic$211, arst={ }, srst={ }
  173 cells in clk=\clk, en=$abc$4684$abc$3538$auto$opt_dff.cc:194:make_patterns_logic$217, arst={ }, srst={ }

3.117.2. Extracting gate netlist of module `\xtea' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk, enabled by $abc$4475$abc$3059$auto$opt_dff.cc:219:make_patterns_logic$202
Extracted 173 gates and 308 wires to a netlist network with 135 inputs and 101 outputs.

3.117.2.1. Executing ABC.

3.117.3. Extracting gate netlist of module `\xtea' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk
Extracted 8 gates and 9 wires to a netlist network with 1 inputs and 3 outputs.

3.117.3.1. Executing ABC.

3.117.4. Extracting gate netlist of module `\xtea' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk, enabled by $abc$4086$abc$2525$auto$opt_dff.cc:194:make_patterns_logic$214
Extracted 358 gates and 520 wires to a netlist network with 162 inputs and 126 outputs.

3.117.4.1. Executing ABC.

3.117.5. Extracting gate netlist of module `\xtea' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk, enabled by $abc$3686$abc$3269$auto$opt_dff.cc:219:make_patterns_logic$195
Extracted 237 gates and 432 wires to a netlist network with 195 inputs and 154 outputs.

3.117.5.1. Executing ABC.

3.117.6. Extracting gate netlist of module `\xtea' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk, enabled by $abc$3955$abc$2923$auto$opt_dff.cc:219:make_patterns_logic$211
Extracted 94 gates and 133 wires to a netlist network with 39 inputs and 64 outputs.

3.117.6.1. Executing ABC.

3.117.7. Extracting gate netlist of module `\xtea' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk, enabled by $abc$4684$abc$3538$auto$opt_dff.cc:194:make_patterns_logic$217
Extracted 147 gates and 253 wires to a netlist network with 106 inputs and 33 outputs.

3.117.7.1. Executing ABC.

yosys> abc -dff

3.118. Executing ABC pass (technology mapping using ABC).

3.118.1. Summary of detected clock domains:
  116 cells in clk=\clk, en=$abc$5706$abc$3955$abc$2923$auto$opt_dff.cc:219:make_patterns_logic$211, arst={ }, srst={ }
  235 cells in clk=\clk, en=$abc$4832$abc$4475$abc$3059$auto$opt_dff.cc:219:make_patterns_logic$202, arst={ }, srst={ }
  8 cells in clk=\clk, en={ }, arst={ }, srst={ }
  454 cells in clk=\clk, en=$abc$5047$abc$4086$abc$2525$auto$opt_dff.cc:194:make_patterns_logic$214, arst={ }, srst={ }
  254 cells in clk=\clk, en=$abc$5438$abc$3686$abc$3269$auto$opt_dff.cc:219:make_patterns_logic$195, arst={ }, srst={ }
  171 cells in clk=\clk, en=$abc$5837$abc$4684$abc$3538$auto$opt_dff.cc:194:make_patterns_logic$217, arst={ }, srst={ }

3.118.2. Extracting gate netlist of module `\xtea' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk, enabled by $abc$5706$abc$3955$abc$2923$auto$opt_dff.cc:219:make_patterns_logic$211
Extracted 108 gates and 159 wires to a netlist network with 51 inputs and 65 outputs.

3.118.2.1. Executing ABC.

3.118.3. Extracting gate netlist of module `\xtea' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk, enabled by $abc$4832$abc$4475$abc$3059$auto$opt_dff.cc:219:make_patterns_logic$202
Extracted 192 gates and 335 wires to a netlist network with 143 inputs and 120 outputs.

3.118.3.1. Executing ABC.

3.118.4. Extracting gate netlist of module `\xtea' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk
Extracted 8 gates and 9 wires to a netlist network with 1 inputs and 3 outputs.

3.118.4.1. Executing ABC.

3.118.5. Extracting gate netlist of module `\xtea' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk, enabled by $abc$5047$abc$4086$abc$2525$auto$opt_dff.cc:194:make_patterns_logic$214
Extracted 360 gates and 522 wires to a netlist network with 162 inputs and 126 outputs.

3.118.5.1. Executing ABC.

3.118.6. Extracting gate netlist of module `\xtea' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk, enabled by $abc$5438$abc$3686$abc$3269$auto$opt_dff.cc:219:make_patterns_logic$195
Extracted 201 gates and 376 wires to a netlist network with 175 inputs and 120 outputs.

3.118.6.1. Executing ABC.

3.118.7. Extracting gate netlist of module `\xtea' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk, enabled by $abc$5837$abc$4684$abc$3538$auto$opt_dff.cc:194:make_patterns_logic$217
Extracted 145 gates and 251 wires to a netlist network with 106 inputs and 33 outputs.

3.118.7.1. Executing ABC.

yosys> opt_ffinv

3.119. Executing OPT_FFINV pass (push inverters through FFs).
Discovering LUTs.
Pushed 0 inverters.

yosys> opt_expr

3.120. Executing OPT_EXPR pass (perform const folding).
Optimizing module xtea.

yosys> opt_merge -nomux

3.121. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\xtea'.
Removed a total of 0 cells.

yosys> opt_muxtree

3.122. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \xtea..
  Creating internal representation of mux trees.
  No muxes found in this module.
Removed 0 multiplexer ports.

yosys> opt_reduce

3.123. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \xtea.
Performed a total of 0 changes.

yosys> opt_merge

3.124. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\xtea'.
Removed a total of 0 cells.

yosys> opt_share

3.125. Executing OPT_SHARE pass.

yosys> opt_dff -nosdff -sat

3.126. Executing OPT_DFF pass (perform DFF optimizations).

yosys> opt_clean

3.127. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \xtea..
Removed 0 unused cells and 6563 unused wires.
<suppressed ~6 debug messages>

yosys> opt_expr

3.128. Executing OPT_EXPR pass (perform const folding).
Optimizing module xtea.
MAX OPT ITERATION = 1

yosys> bmuxmap

3.129. Executing BMUXMAP pass.

yosys> demuxmap

3.130. Executing DEMUXMAP pass.

yosys> clean_zerowidth

yosys> abc -script /tmp/yosys_Acg2vT/abc_tmp_1.scr

3.131. Executing ABC pass (technology mapping using ABC).

3.131.1. Extracting gate netlist of module `\xtea' to `<abc-temp-dir>/input.blif'..
Extracted 853 gates and 1426 wires to a netlist network with 573 inputs and 399 outputs.

3.131.1.1. Executing ABC.
DE:   #PIs = 573  #Luts =   470  Max Lvl =   3  Avg Lvl =   1.17  [   0.15 sec. at Pass 0]{firstMap}
DE:   #PIs = 573  #Luts =   470  Max Lvl =   3  Avg Lvl =   1.17  [   1.40 sec. at Pass 1]{initMapFlow}
DE:   #PIs = 573  #Luts =   470  Max Lvl =   3  Avg Lvl =   1.17  [   0.32 sec. at Pass 2]{map}
DE:   #PIs = 573  #Luts =   470  Max Lvl =   3  Avg Lvl =   1.17  [   0.49 sec. at Pass 3]{postMap}
DE:   #PIs = 573  #Luts =   469  Max Lvl =   4  Avg Lvl =   1.45  [   1.06 sec. at Pass 4]{map}
DE:   #PIs = 573  #Luts =   469  Max Lvl =   4  Avg Lvl =   1.45  [   1.28 sec. at Pass 5]{postMap}
DE:   #PIs = 573  #Luts =   469  Max Lvl =   4  Avg Lvl =   1.45  [   1.27 sec. at Pass 6]{map}
DE:   #PIs = 573  #Luts =   469  Max Lvl =   4  Avg Lvl =   1.45  [   0.89 sec. at Pass 7]{postMap}
DE:   #PIs = 573  #Luts =   469  Max Lvl =   4  Avg Lvl =   1.45  [   1.18 sec. at Pass 8]{pushMap}
DE:   #PIs = 573  #Luts =   469  Max Lvl =   4  Avg Lvl =   1.45  [   0.46 sec. at Pass 9]{finalMap}

yosys> opt_expr

3.132. Executing OPT_EXPR pass (perform const folding).
Optimizing module xtea.

yosys> opt_merge -nomux

3.133. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\xtea'.
Removed a total of 0 cells.

yosys> opt_muxtree

3.134. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \xtea..
  Creating internal representation of mux trees.
  No muxes found in this module.
Removed 0 multiplexer ports.

yosys> opt_reduce

3.135. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \xtea.
Performed a total of 0 changes.

yosys> opt_merge

3.136. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\xtea'.
Removed a total of 0 cells.

yosys> opt_share

3.137. Executing OPT_SHARE pass.

yosys> opt_dff -nosdff -nodffe

3.138. Executing OPT_DFF pass (perform DFF optimizations).

yosys> opt_clean

3.139. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \xtea..
Removed 0 unused cells and 1364 unused wires.
<suppressed ~3 debug messages>

yosys> opt_expr

3.140. Executing OPT_EXPR pass (perform const folding).
Optimizing module xtea.
MAX OPT ITERATION = 1

yosys> opt_ffinv

3.141. Executing OPT_FFINV pass (push inverters through FFs).
Discovering LUTs.
Pushed 0 inverters.

yosys> stat

3.142. Printing statistics.

=== xtea ===

   Number of wires:                349
   Number of wire bits:           1789
   Number of public wires:          25
   Number of public wire bits:     838
   Number of memories:               0
   Number of memory bits:            0
   Number of processes:              0
   Number of cells:                854
     $_DFFE_PP_                    160
     $_DFF_P_                        2
     $lut                          468
     adder_carry                   224


yosys> shregmap -minlen 8 -maxlen 20

3.143. Executing SHREGMAP pass (map shift registers).
Converted 0 dff cells into 0 shift registers.

yosys> dfflegalize -cell $_DFF_?_ 0 -cell $_DFF_???_ 0 -cell $_DFFE_????_ 0 -cell $_DFFSR_???_ 0 -cell $_DFFSRE_????_ 0 -cell $_DLATCHSR_PPP_ 0

3.144. Executing DFFLEGALIZE pass (convert FFs to types supported by the target).

yosys> stat

3.145. Printing statistics.

=== xtea ===

   Number of wires:                349
   Number of wire bits:           1789
   Number of public wires:          25
   Number of public wire bits:     838
   Number of memories:               0
   Number of memory bits:            0
   Number of processes:              0
   Number of cells:                854
     $_DFFE_PP0P_                  160
     $_DFF_P_                        2
     $lut                          468
     adder_carry                   224


yosys> techmap -map +/techmap.v -map +/rapidsilicon/genesis/ffs_map.v

3.146. Executing TECHMAP pass (map to technology primitives).

3.146.1. Executing Verilog-2005 frontend: /nfs_scratch/scratch/Vorak/aram/Workspace/Raptor/yosys_verific_rs/yosys/install/bin/../share/yosys/techmap.v
Parsing Verilog input from `/nfs_scratch/scratch/Vorak/aram/Workspace/Raptor/yosys_verific_rs/yosys/install/bin/../share/yosys/techmap.v' to AST representation.
Generating RTLIL representation for module `\_90_simplemap_bool_ops'.
Generating RTLIL representation for module `\_90_simplemap_reduce_ops'.
Generating RTLIL representation for module `\_90_simplemap_logic_ops'.
Generating RTLIL representation for module `\_90_simplemap_compare_ops'.
Generating RTLIL representation for module `\_90_simplemap_various'.
Generating RTLIL representation for module `\_90_simplemap_registers'.
Generating RTLIL representation for module `\_90_shift_ops_shr_shl_sshl_sshr'.
Generating RTLIL representation for module `\_90_shift_shiftx'.
Generating RTLIL representation for module `\_90_fa'.
Generating RTLIL representation for module `\_90_lcu'.
Generating RTLIL representation for module `\_90_alu'.
Generating RTLIL representation for module `\_90_macc'.
Generating RTLIL representation for module `\_90_alumacc'.
Generating RTLIL representation for module `\$__div_mod_u'.
Generating RTLIL representation for module `\$__div_mod_trunc'.
Generating RTLIL representation for module `\_90_div'.
Generating RTLIL representation for module `\_90_mod'.
Generating RTLIL representation for module `\$__div_mod_floor'.
Generating RTLIL representation for module `\_90_divfloor'.
Generating RTLIL representation for module `\_90_modfloor'.
Generating RTLIL representation for module `\_90_pow'.
Generating RTLIL representation for module `\_90_pmux'.
Generating RTLIL representation for module `\_90_demux'.
Generating RTLIL representation for module `\_90_lut'.
Successfully finished Verilog frontend.

3.146.2. Executing Verilog-2005 frontend: /nfs_scratch/scratch/Vorak/aram/Workspace/Raptor/yosys_verific_rs/yosys/install/bin/../share/yosys/rapidsilicon/genesis/ffs_map.v
Parsing Verilog input from `/nfs_scratch/scratch/Vorak/aram/Workspace/Raptor/yosys_verific_rs/yosys/install/bin/../share/yosys/rapidsilicon/genesis/ffs_map.v' to AST representation.
Generating RTLIL representation for module `\$_DFF_P_'.
Generating RTLIL representation for module `\$_DFF_PP0_'.
Generating RTLIL representation for module `\$_DFF_PN0_'.
Generating RTLIL representation for module `\$_DFF_PP1_'.
Generating RTLIL representation for module `\$_DFF_PN1_'.
Generating RTLIL representation for module `\$_DFFE_PP_'.
Generating RTLIL representation for module `\$_DFFE_PN_'.
Generating RTLIL representation for module `\$_DFFE_PP0P_'.
Generating RTLIL representation for module `\$_DFFE_PP0N_'.
Generating RTLIL representation for module `\$_DFFE_PN0P_'.
Generating RTLIL representation for module `\$_DFFE_PN0N_'.
Generating RTLIL representation for module `\$_DFFE_PP1P_'.
Generating RTLIL representation for module `\$_DFFE_PP1N_'.
Generating RTLIL representation for module `\$_DFFE_PN1P_'.
Generating RTLIL representation for module `\$_DFFE_PN1N_'.
Generating RTLIL representation for module `\$_DFFSR_PPP_'.
Generating RTLIL representation for module `\$_DFFSR_PNP_'.
Generating RTLIL representation for module `\$_DFFSR_PNN_'.
Generating RTLIL representation for module `\$_DFFSR_PPN_'.
Generating RTLIL representation for module `\$_DFFSR_NPP_'.
Generating RTLIL representation for module `\$_DFFSR_NNP_'.
Generating RTLIL representation for module `\$_DFFSR_NNN_'.
Generating RTLIL representation for module `\$_DFFSR_NPN_'.
Generating RTLIL representation for module `\$_DFFSRE_PPPP_'.
Generating RTLIL representation for module `\$_DFFSRE_PNPP_'.
Generating RTLIL representation for module `\$_DFFSRE_PPNP_'.
Generating RTLIL representation for module `\$_DFFSRE_PNNP_'.
Generating RTLIL representation for module `\$_DFFSRE_PPPN_'.
Generating RTLIL representation for module `\$_DFFSRE_PNPN_'.
Generating RTLIL representation for module `\$_DFFSRE_PPNN_'.
Generating RTLIL representation for module `\$_DFFSRE_PNNN_'.
Generating RTLIL representation for module `\$_DLATCHSR_PPP_'.
Generating RTLIL representation for module `\$_DLATCHSR_NPP_'.
Generating RTLIL representation for module `\$_DFF_N_'.
Generating RTLIL representation for module `\$_DFF_NP0_'.
Generating RTLIL representation for module `\$_DFF_NN0_'.
Generating RTLIL representation for module `\$_DFF_NP1_'.
Generating RTLIL representation for module `\$_DFF_NN1_'.
Generating RTLIL representation for module `\$_DFFE_NP_'.
Generating RTLIL representation for module `\$_DFFE_NN_'.
Generating RTLIL representation for module `\$_DFFE_NP0P_'.
Generating RTLIL representation for module `\$_DFFE_NP0N_'.
Generating RTLIL representation for module `\$_DFFE_NN0P_'.
Generating RTLIL representation for module `\$_DFFE_NN0N_'.
Generating RTLIL representation for module `\$_DFFE_NP1P_'.
Generating RTLIL representation for module `\$_DFFE_NP1N_'.
Generating RTLIL representation for module `\$_DFFE_NN1P_'.
Generating RTLIL representation for module `\$_DFFE_NN1N_'.
Generating RTLIL representation for module `\$_DFFSRE_NPPP_'.
Generating RTLIL representation for module `\$_DFFSRE_NNPP_'.
Generating RTLIL representation for module `\$_DFFSRE_NPNP_'.
Generating RTLIL representation for module `\$_DFFSRE_NNNP_'.
Generating RTLIL representation for module `\$_DFFSRE_NPPN_'.
Generating RTLIL representation for module `\$_DFFSRE_NNPN_'.
Generating RTLIL representation for module `\$_DFFSRE_NPNN_'.
Generating RTLIL representation for module `\$_DFFSRE_NNNN_'.
Generating RTLIL representation for module `\$__SHREG_DFF_P_'.
Generating RTLIL representation for module `\$_SDFF_PP0_'.
Generating RTLIL representation for module `\$_SDFF_PN0_'.
Generating RTLIL representation for module `\$_SDFF_NP0_'.
Generating RTLIL representation for module `\$_SDFF_NN0_'.
Generating RTLIL representation for module `\$_SDFF_PP1_'.
Generating RTLIL representation for module `\$_SDFF_PN1_'.
Generating RTLIL representation for module `\$_SDFF_NP1_'.
Generating RTLIL representation for module `\$_SDFF_NN1_'.
Successfully finished Verilog frontend.

3.146.3. Continuing TECHMAP pass.
Using extmapper simplemap for cells of type $lut.
Using template \$_DFFE_PP0P_ for cells of type $_DFFE_PP0P_.
Using template \$_DFF_P_ for cells of type $_DFF_P_.
Using extmapper simplemap for cells of type $logic_not.
No more expansions possible.
<suppressed ~926 debug messages>

yosys> opt_expr -mux_undef

3.147. Executing OPT_EXPR pass (perform const folding).
Optimizing module xtea.
<suppressed ~6079 debug messages>

yosys> simplemap

3.148. Executing SIMPLEMAP pass (map simple cells to gate primitives).

yosys> opt_expr

3.149. Executing OPT_EXPR pass (perform const folding).
Optimizing module xtea.

yosys> opt_merge

3.150. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\xtea'.
<suppressed ~4590 debug messages>
Removed a total of 1530 cells.

yosys> opt_dff -nodffe -nosdff

3.151. Executing OPT_DFF pass (perform DFF optimizations).

yosys> opt_clean

3.152. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \xtea..
Removed 0 unused cells and 2022 unused wires.
<suppressed ~1 debug messages>

yosys> opt_expr

3.153. Executing OPT_EXPR pass (perform const folding).
Optimizing module xtea.
<suppressed ~226 debug messages>

yosys> opt_merge -nomux

3.154. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\xtea'.
Removed a total of 0 cells.

yosys> opt_muxtree

3.155. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \xtea..
  Creating internal representation of mux trees.
  No muxes found in this module.
Removed 0 multiplexer ports.

yosys> opt_reduce

3.156. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \xtea.
Performed a total of 0 changes.

yosys> opt_merge

3.157. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\xtea'.
Removed a total of 0 cells.

yosys> opt_share

3.158. Executing OPT_SHARE pass.

yosys> opt_dff -nosdff -nodffe

3.159. Executing OPT_DFF pass (perform DFF optimizations).

yosys> opt_clean

3.160. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \xtea..
Removed 0 unused cells and 10 unused wires.
<suppressed ~1 debug messages>

yosys> opt_expr

3.161. Executing OPT_EXPR pass (perform const folding).
Optimizing module xtea.
MAX OPT ITERATION = 1

yosys> abc -script /tmp/yosys_Acg2vT/abc_tmp_2.scr

3.162. Executing ABC pass (technology mapping using ABC).

3.162.1. Extracting gate netlist of module `\xtea' to `<abc-temp-dir>/input.blif'..
Extracted 1321 gates and 1896 wires to a netlist network with 573 inputs and 398 outputs.

3.162.1.1. Executing ABC.
DE:   #PIs = 573  #Luts =   470  Max Lvl =   3  Avg Lvl =   1.17  [   0.11 sec. at Pass 0]{firstMap}
DE:   #PIs = 573  #Luts =   468  Max Lvl =   4  Avg Lvl =   1.45  [   1.88 sec. at Pass 1]{initMapFlow}
DE:   #PIs = 573  #Luts =   468  Max Lvl =   4  Avg Lvl =   1.45  [   0.44 sec. at Pass 2]{map}
DE:   #PIs = 573  #Luts =   468  Max Lvl =   4  Avg Lvl =   1.45  [   1.11 sec. at Pass 3]{postMap}
DE:   #PIs = 573  #Luts =   468  Max Lvl =   4  Avg Lvl =   1.45  [   1.17 sec. at Pass 4]{map}
DE:   #PIs = 573  #Luts =   468  Max Lvl =   4  Avg Lvl =   1.45  [   1.19 sec. at Pass 5]{postMap}
DE:   #PIs = 573  #Luts =   468  Max Lvl =   4  Avg Lvl =   1.45  [   1.26 sec. at Pass 6]{pushMap}
DE:   #PIs = 573  #Luts =   468  Max Lvl =   4  Avg Lvl =   1.45  [   0.44 sec. at Pass 7]{finalMap}

yosys> opt_expr

3.163. Executing OPT_EXPR pass (perform const folding).
Optimizing module xtea.

yosys> opt_merge -nomux

3.164. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\xtea'.
Removed a total of 0 cells.

yosys> opt_muxtree

3.165. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \xtea..
  Creating internal representation of mux trees.
  No muxes found in this module.
Removed 0 multiplexer ports.

yosys> opt_reduce

3.166. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \xtea.
Performed a total of 0 changes.

yosys> opt_merge

3.167. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\xtea'.
Removed a total of 0 cells.

yosys> opt_share

3.168. Executing OPT_SHARE pass.

yosys> opt_dff -nosdff -nodffe

3.169. Executing OPT_DFF pass (perform DFF optimizations).

yosys> opt_clean

3.170. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \xtea..
Removed 0 unused cells and 1658 unused wires.
<suppressed ~1 debug messages>

yosys> opt_expr

3.171. Executing OPT_EXPR pass (perform const folding).
Optimizing module xtea.
MAX OPT ITERATION = 1

yosys> hierarchy -check

3.172. Executing HIERARCHY pass (managing design hierarchy).

3.172.1. Analyzing design hierarchy..
Top module:  \xtea

3.172.2. Analyzing design hierarchy..
Top module:  \xtea
Removed 0 unused modules.

yosys> stat

3.173. Printing statistics.

=== xtea ===

   Number of wires:                349
   Number of wire bits:           1789
   Number of public wires:          25
   Number of public wire bits:     838
   Number of memories:               0
   Number of memory bits:            0
   Number of processes:              0
   Number of cells:                854
     $lut                          468
     adder_carry                   224
     dffsre                        162


yosys> opt_clean -purge

3.174. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \xtea..
Removed 0 unused cells and 14 unused wires.
<suppressed ~14 debug messages>

yosys> write_verilog -noattr -nohex synthesized.v

3.175. Executing Verilog backend.
Dumping module `\xtea'.

Warnings: 4 unique messages, 4 total
End of script. Logfile hash: 61f5310bbb, CPU: user 3.92s system 0.04s, MEM: 53.89 MB peak
Yosys 0.18+10 (git sha1 7361c89db, gcc 9.4.0-1ubuntu1~20.04.1 -fPIC -Os)
Time spent: 93% 6x abc (49 sec), 2% 30x opt_expr (1 sec), ...
real 34.28
user 45.68
sys 7.61
