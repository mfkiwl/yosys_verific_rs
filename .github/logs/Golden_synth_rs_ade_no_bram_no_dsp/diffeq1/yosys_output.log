
 /----------------------------------------------------------------------------\
 |                                                                            |
 |  yosys -- Yosys Open SYnthesis Suite                                       |
 |                                                                            |
 |  Copyright (C) 2012 - 2020  Claire Xenia Wolf <claire@yosyshq.com>         |
 |                                                                            |
 |  Permission to use, copy, modify, and/or distribute this software for any  |
 |  purpose with or without fee is hereby granted, provided that the above    |
 |  copyright notice and this permission notice appear in all copies.         |
 |                                                                            |
 |  THE SOFTWARE IS PROVIDED "AS IS" AND THE AUTHOR DISCLAIMS ALL WARRANTIES  |
 |  WITH REGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF          |
 |  MERCHANTABILITY AND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR   |
 |  ANY SPECIAL, DIRECT, INDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES    |
 |  WHATSOEVER RESULTING FROM LOSS OF USE, DATA OR PROFITS, WHETHER IN AN     |
 |  ACTION OF CONTRACT, NEGLIGENCE OR OTHER TORTIOUS ACTION, ARISING OUT OF   |
 |  OR IN CONNECTION WITH THE USE OR PERFORMANCE OF THIS SOFTWARE.            |
 |                                                                            |
 \----------------------------------------------------------------------------/

 Yosys-Verific 0.0.92
 Yosys 0.18+10 (git sha1 7361c89db, gcc 9.4.0-1ubuntu1~20.04.1 -fPIC -Os)


-- Executing script file `yosys.ys' --
echo on

yosys> plugin -i synth-rs

yosys> read -verific

yosys> read -incdir .

yosys> verific -vlog-incdir .

1. Executing VERIFIC (loading SystemVerilog and VHDL designs using Verific).
Built with Verific May22_SW_Release, released at Wed Jun  1 05:39:28 2022.

yosys> verilog_defaults -add -I.

yosys> read -vlog2k diffeq1.v

yosys> verific -vlog2k diffeq1.v

2. Executing VERIFIC (loading SystemVerilog and VHDL designs using Verific).
Built with Verific May22_SW_Release, released at Wed Jun  1 05:39:28 2022.
VERIFIC-COMMENT [VERI-1482] Analyzing Verilog file 'diffeq1.v'

yosys> synth_rs -top diffeq_paj_convert -tech genesis -goal area -de -no_dsp -no_bram -verilog synthesized.v

3. Executing synth_rs pass: v0.4.79

yosys> read_verilog -lib -specify -nomem2reg +/rapidsilicon/common/cells_sim.v +/rapidsilicon/genesis/cells_sim.v +/rapidsilicon/genesis/dsp_sim.v

3.1. Executing Verilog-2005 frontend: /nfs_scratch/scratch/Vorak/aram/Workspace/Raptor/yosys_verific_rs/yosys/install/bin/../share/yosys/rapidsilicon/common/cells_sim.v
Parsing Verilog input from `/nfs_scratch/scratch/Vorak/aram/Workspace/Raptor/yosys_verific_rs/yosys/install/bin/../share/yosys/rapidsilicon/common/cells_sim.v' to AST representation.
Generating RTLIL representation for module `\inv'.
Generating RTLIL representation for module `\buff'.
Generating RTLIL representation for module `\logic_0'.
Generating RTLIL representation for module `\logic_1'.
Generating RTLIL representation for module `\gclkbuff'.
Successfully finished Verilog frontend.

3.2. Executing Verilog-2005 frontend: /nfs_scratch/scratch/Vorak/aram/Workspace/Raptor/yosys_verific_rs/yosys/install/bin/../share/yosys/rapidsilicon/genesis/cells_sim.v
Parsing Verilog input from `/nfs_scratch/scratch/Vorak/aram/Workspace/Raptor/yosys_verific_rs/yosys/install/bin/../share/yosys/rapidsilicon/genesis/cells_sim.v' to AST representation.
Generating RTLIL representation for module `\dffsre'.
Generating RTLIL representation for module `\dffnsre'.
Generating RTLIL representation for module `\latchsre'.
Generating RTLIL representation for module `\latchnsre'.
Generating RTLIL representation for module `\io_scff'.
Generating RTLIL representation for module `\scff'.
Generating RTLIL representation for module `\sh_dff'.
Generating RTLIL representation for module `\adder_carry'.
Generating RTLIL representation for module `\sdffr'.
Generating RTLIL representation for module `\sdffs'.
Generating RTLIL representation for module `\TDP_BRAM18'.
Generating RTLIL representation for module `\TDP36K'.
Generating RTLIL representation for module `\BRAM2x18_TDP'.
Generating RTLIL representation for module `\BRAM2x18_SDP'.
Generating RTLIL representation for module `\_$_mem_v2_asymmetric'.
Successfully finished Verilog frontend.

3.3. Executing Verilog-2005 frontend: /nfs_scratch/scratch/Vorak/aram/Workspace/Raptor/yosys_verific_rs/yosys/install/bin/../share/yosys/rapidsilicon/genesis/dsp_sim.v
Parsing Verilog input from `/nfs_scratch/scratch/Vorak/aram/Workspace/Raptor/yosys_verific_rs/yosys/install/bin/../share/yosys/rapidsilicon/genesis/dsp_sim.v' to AST representation.
Generating RTLIL representation for module `\RS_DSP1'.
Generating RTLIL representation for module `\RS_DSP2'.
Generating RTLIL representation for module `\RS_DSP2_MULT'.
Generating RTLIL representation for module `\RS_DSP2_MULT_REGIN'.
Generating RTLIL representation for module `\RS_DSP2_MULT_REGOUT'.
Generating RTLIL representation for module `\RS_DSP2_MULT_REGIN_REGOUT'.
Generating RTLIL representation for module `\RS_DSP2_MULTADD'.
Generating RTLIL representation for module `\RS_DSP2_MULTADD_REGIN'.
Generating RTLIL representation for module `\RS_DSP2_MULTADD_REGOUT'.
Generating RTLIL representation for module `\RS_DSP2_MULTADD_REGIN_REGOUT'.
Generating RTLIL representation for module `\RS_DSP2_MULTACC'.
Generating RTLIL representation for module `\RS_DSP2_MULTACC_REGIN'.
Generating RTLIL representation for module `\RS_DSP2_MULTACC_REGOUT'.
Generating RTLIL representation for module `\RS_DSP2_MULTACC_REGIN_REGOUT'.
Generating RTLIL representation for module `\dsp_t1_20x18x64_cfg_ports'.
Generating RTLIL representation for module `\dsp_t1_10x9x32_cfg_ports'.
Generating RTLIL representation for module `\dsp_t1_sim_cfg_ports'.
Generating RTLIL representation for module `\RS_DSP3'.
Generating RTLIL representation for module `\RS_DSP3_MULT'.
Generating RTLIL representation for module `\RS_DSP3_MULT_REGIN'.
Generating RTLIL representation for module `\RS_DSP3_MULT_REGOUT'.
Generating RTLIL representation for module `\RS_DSP3_MULT_REGIN_REGOUT'.
Generating RTLIL representation for module `\RS_DSP3_MULTADD'.
Generating RTLIL representation for module `\RS_DSP3_MULTADD_REGIN'.
Generating RTLIL representation for module `\RS_DSP3_MULTADD_REGOUT'.
Generating RTLIL representation for module `\RS_DSP3_MULTADD_REGIN_REGOUT'.
Generating RTLIL representation for module `\RS_DSP3_MULTACC'.
Generating RTLIL representation for module `\RS_DSP3_MULTACC_REGIN'.
Generating RTLIL representation for module `\RS_DSP3_MULTACC_REGOUT'.
Generating RTLIL representation for module `\RS_DSP3_MULTACC_REGIN_REGOUT'.
Generating RTLIL representation for module `\dsp_t1_20x18x64_cfg_params'.
Generating RTLIL representation for module `\dsp_t1_10x9x32_cfg_params'.
Generating RTLIL representation for module `\dsp_t1_sim_cfg_params'.
Successfully finished Verilog frontend.

yosys> hierarchy -check -top diffeq_paj_convert

3.4. Executing HIERARCHY pass (managing design hierarchy).
VERIFIC-INFO [VERI-1018] diffeq1.v:1: compiling module 'diffeq_paj_convert'
Importing module diffeq_paj_convert.

3.4.1. Analyzing design hierarchy..
Top module:  \diffeq_paj_convert

3.4.2. Analyzing design hierarchy..
Top module:  \diffeq_paj_convert
Removed 0 unused modules.

yosys> proc

3.5. Executing PROC pass (convert processes to netlists).

yosys> proc_clean

3.5.1. Executing PROC_CLEAN pass (remove empty switches from decision trees).
Cleaned up 0 empty switches.

yosys> proc_rmdead

3.5.2. Executing PROC_RMDEAD pass (remove dead branches from decision trees).
Removed a total of 0 dead cases.

yosys> proc_prune

3.5.3. Executing PROC_PRUNE pass (remove redundant assignments in processes).
Removed 0 redundant assignments.
Promoted 0 assignments to connections.

yosys> proc_init

3.5.4. Executing PROC_INIT pass (extract init attributes).

yosys> proc_arst

3.5.5. Executing PROC_ARST pass (detect async resets in processes).

yosys> proc_rom

3.5.6. Executing PROC_ROM pass (convert switches to ROMs).
Converted 0 switches.

yosys> proc_mux

3.5.7. Executing PROC_MUX pass (convert decision trees to multiplexers).

yosys> proc_dlatch

3.5.8. Executing PROC_DLATCH pass (convert process syncs to latches).

yosys> proc_dff

3.5.9. Executing PROC_DFF pass (convert process syncs to FFs).

yosys> proc_memwr

3.5.10. Executing PROC_MEMWR pass (convert process memory writes to cells).

yosys> proc_clean

3.5.11. Executing PROC_CLEAN pass (remove empty switches from decision trees).
Cleaned up 0 empty switches.

yosys> opt_expr -keepdc

3.5.12. Executing OPT_EXPR pass (perform const folding).
Optimizing module diffeq_paj_convert.
<suppressed ~8 debug messages>

yosys> bmuxmap

3.6. Executing BMUXMAP pass.

yosys> demuxmap

3.7. Executing DEMUXMAP pass.

yosys> clean_zerowidth

yosys> flatten

3.8. Executing FLATTEN pass (flatten design).

yosys> bmuxmap

3.9. Executing BMUXMAP pass.

yosys> demuxmap

3.10. Executing DEMUXMAP pass.

yosys> clean_zerowidth

yosys> tribuf -logic -formal

3.11. Executing TRIBUF pass.

yosys> deminout

3.12. Executing DEMINOUT pass (demote inout ports to input or output).

yosys> opt_expr

3.13. Executing OPT_EXPR pass (perform const folding).
Optimizing module diffeq_paj_convert.

yosys> opt_clean

3.14. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \diffeq_paj_convert..
Removed 1 unused cells and 18 unused wires.
<suppressed ~15 debug messages>

yosys> check

3.15. Executing CHECK pass (checking for obvious problems).
Checking module diffeq_paj_convert...
Found and reported 0 problems.

yosys> opt_expr

3.16. Executing OPT_EXPR pass (perform const folding).
Optimizing module diffeq_paj_convert.

yosys> opt_merge -nomux

3.17. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\diffeq_paj_convert'.
Removed a total of 0 cells.

yosys> opt_muxtree

3.18. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \diffeq_paj_convert..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
      Replacing known input bits on port B of cell $verific$i37$diffeq1.v:53$85: \looping -> 1'1
  Analyzing evaluation results.
Removed 0 multiplexer ports.
<suppressed ~7 debug messages>

yosys> opt_reduce

3.19. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \diffeq_paj_convert.
Performed a total of 0 changes.

yosys> opt_merge

3.20. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\diffeq_paj_convert'.
Removed a total of 0 cells.

yosys> opt_share

3.21. Executing OPT_SHARE pass.

yosys> opt_dff -nosdff -nodffe

3.22. Executing OPT_DFF pass (perform DFF optimizations).
Removing never-active async load on $verific$y_var_reg$diffeq1.v:54$105 ($aldff) from module diffeq_paj_convert.
Removing never-active async load on $verific$x_var_reg$diffeq1.v:54$104 ($aldff) from module diffeq_paj_convert.
Removing never-active async load on $verific$u_var_reg$diffeq1.v:54$106 ($aldff) from module diffeq_paj_convert.
Removing never-active async load on $verific$Youtport_reg$diffeq1.v:54$108 ($aldff) from module diffeq_paj_convert.
Removing never-active async load on $verific$Xoutport_reg$diffeq1.v:54$107 ($aldff) from module diffeq_paj_convert.
Removing never-active async load on $verific$Uoutport_reg$diffeq1.v:54$109 ($aldff) from module diffeq_paj_convert.

yosys> opt_clean

3.23. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \diffeq_paj_convert..

yosys> opt_expr

3.24. Executing OPT_EXPR pass (perform const folding).
Optimizing module diffeq_paj_convert.
MAX OPT ITERATION = 1

yosys> fsm -encoding binary

3.25. Executing FSM pass (extract and optimize FSM).

yosys> fsm_detect

3.25.1. Executing FSM_DETECT pass (finding FSMs in design).

yosys> fsm_extract

3.25.2. Executing FSM_EXTRACT pass (extracting FSM from design).

yosys> fsm_opt

3.25.3. Executing FSM_OPT pass (simple optimizations of FSMs).

yosys> opt_clean

3.25.4. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \diffeq_paj_convert..

yosys> fsm_opt

3.25.5. Executing FSM_OPT pass (simple optimizations of FSMs).

yosys> fsm_recode -encoding binary

3.25.6. Executing FSM_RECODE pass (re-assigning FSM state encoding).

yosys> fsm_info

3.25.7. Executing FSM_INFO pass (dumping all available information on FSM cells).

yosys> fsm_map

3.25.8. Executing FSM_MAP pass (mapping FSMs to basic logic).

yosys> opt_expr

3.26. Executing OPT_EXPR pass (perform const folding).
Optimizing module diffeq_paj_convert.

yosys> opt_merge -nomux

3.27. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\diffeq_paj_convert'.
Removed a total of 0 cells.

yosys> opt_muxtree

3.28. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \diffeq_paj_convert..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Removed 0 multiplexer ports.
<suppressed ~7 debug messages>

yosys> opt_reduce

3.29. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \diffeq_paj_convert.
Performed a total of 0 changes.

yosys> opt_merge

3.30. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\diffeq_paj_convert'.
Removed a total of 0 cells.

yosys> opt_share

3.31. Executing OPT_SHARE pass.

yosys> opt_dff -nosdff -sat

3.32. Executing OPT_DFF pass (perform DFF optimizations).
Adding EN signal on $verific$y_var_reg$diffeq1.v:54$105 ($dff) from module diffeq_paj_convert (D = $verific$n1272$44, Q = \y_var).
Adding EN signal on $verific$x_var_reg$diffeq1.v:54$104 ($dff) from module diffeq_paj_convert (D = $verific$n1239$43, Q = \x_var).
Adding EN signal on $verific$u_var_reg$diffeq1.v:54$106 ($dff) from module diffeq_paj_convert (D = $verific$n1305$45, Q = \u_var).
Adding EN signal on $verific$Youtport_reg$diffeq1.v:54$108 ($dff) from module diffeq_paj_convert (D = \y_var, Q = \Youtport).
Adding EN signal on $verific$Xoutport_reg$diffeq1.v:54$107 ($dff) from module diffeq_paj_convert (D = \x_var, Q = \Xoutport).
Adding EN signal on $verific$Uoutport_reg$diffeq1.v:54$109 ($dff) from module diffeq_paj_convert (D = \u_var, Q = \Uoutport).

yosys> opt_clean

3.33. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \diffeq_paj_convert..
Removed 9 unused cells and 9 unused wires.
<suppressed ~10 debug messages>

yosys> opt_expr

3.34. Executing OPT_EXPR pass (perform const folding).
Optimizing module diffeq_paj_convert.

yosys> opt_muxtree

3.35. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \diffeq_paj_convert..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Removed 0 multiplexer ports.
<suppressed ~4 debug messages>

yosys> opt_reduce

3.36. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \diffeq_paj_convert.
Performed a total of 0 changes.

yosys> opt_merge

3.37. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\diffeq_paj_convert'.
<suppressed ~24 debug messages>
Removed a total of 8 cells.

yosys> opt_share

3.38. Executing OPT_SHARE pass.

yosys> opt_dff -nosdff -sat

3.39. Executing OPT_DFF pass (perform DFF optimizations).

yosys> opt_clean

3.40. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \diffeq_paj_convert..
Removed 0 unused cells and 8 unused wires.
<suppressed ~1 debug messages>

yosys> opt_expr

3.41. Executing OPT_EXPR pass (perform const folding).
Optimizing module diffeq_paj_convert.

yosys> opt_muxtree

3.42. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \diffeq_paj_convert..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Removed 0 multiplexer ports.
<suppressed ~4 debug messages>

yosys> opt_reduce

3.43. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \diffeq_paj_convert.
Performed a total of 0 changes.

yosys> opt_merge

3.44. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\diffeq_paj_convert'.
Removed a total of 0 cells.

yosys> opt_share

3.45. Executing OPT_SHARE pass.

yosys> opt_dff -nosdff -sat

3.46. Executing OPT_DFF pass (perform DFF optimizations).

yosys> opt_clean

3.47. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \diffeq_paj_convert..

yosys> opt_expr

3.48. Executing OPT_EXPR pass (perform const folding).
Optimizing module diffeq_paj_convert.
MAX OPT ITERATION = 3

yosys> wreduce -keepdc

3.49. Executing WREDUCE pass (reducing word size of cells).
Removed top 1 bits (of 3) from port B of cell diffeq_paj_convert.$auto$opt_dff.cc:195:make_patterns_logic$112 ($ne).
Removed top 32 bits (of 64) from port Y of cell diffeq_paj_convert.$verific$mult_3$diffeq1.v:22$52 ($mul).
Removed top 2 bits (of 34) from port Y of cell diffeq_paj_convert.$verific$mult_17$diffeq1.v:42$63 ($mul).
Removed top 32 bits (of 64) from port Y of cell diffeq_paj_convert.$verific$mult_18$diffeq1.v:42$65 ($mul).
Removed top 2 bits (of 34) from port Y of cell diffeq_paj_convert.$verific$mult_20$diffeq1.v:42$68 ($mul).
Removed top 32 bits (of 64) from port Y of cell diffeq_paj_convert.$verific$mult_21$diffeq1.v:42$70 ($mul).
Removed top 2 bits (of 34) from wire diffeq_paj_convert.$verific$n306$17.
Removed top 32 bits (of 64) from wire diffeq_paj_convert.$verific$n341$18.
Removed top 2 bits (of 34) from wire diffeq_paj_convert.$verific$n439$20.
Removed top 32 bits (of 64) from wire diffeq_paj_convert.$verific$n474$21.

yosys> peepopt

3.50. Executing PEEPOPT pass (run peephole optimizers).

yosys> opt_clean

3.51. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \diffeq_paj_convert..
Removed 0 unused cells and 9 unused wires.
<suppressed ~1 debug messages>

yosys> bmuxmap

3.52. Executing BMUXMAP pass.

yosys> demuxmap

3.53. Executing DEMUXMAP pass.

yosys> clean_zerowidth

yosys> alumacc

3.54. Executing ALUMACC pass (create $alu and $macc cells).
Extracting $alu and $macc cells in module diffeq_paj_convert:
  creating $macc model for $verific$add_24$diffeq1.v:43$74 ($add).
  creating $macc model for $verific$add_26$diffeq1.v:44$76 ($add).
  creating $macc model for $verific$mult_17$diffeq1.v:42$63 ($mul).
  creating $macc model for $verific$mult_18$diffeq1.v:42$65 ($mul).
  creating $macc model for $verific$mult_20$diffeq1.v:42$68 ($mul).
  creating $macc model for $verific$mult_21$diffeq1.v:42$70 ($mul).
  creating $macc model for $verific$mult_3$diffeq1.v:22$52 ($mul).
  creating $macc model for $verific$sub_19$diffeq1.v:42$67 ($sub).
  creating $macc model for $verific$sub_22$diffeq1.v:42$72 ($sub).
  merging $macc model for $verific$sub_19$diffeq1.v:42$67 into $verific$sub_22$diffeq1.v:42$72.
  merging $macc model for $verific$mult_21$diffeq1.v:42$70 into $verific$sub_22$diffeq1.v:42$72.
  merging $macc model for $verific$mult_18$diffeq1.v:42$65 into $verific$sub_22$diffeq1.v:42$72.
  creating $alu model for $macc $verific$add_26$diffeq1.v:44$76.
  creating $alu model for $macc $verific$add_24$diffeq1.v:43$74.
  creating $macc cell for $verific$sub_22$diffeq1.v:42$72: $auto$alumacc.cc:365:replace_macc$144
  creating $macc cell for $verific$mult_17$diffeq1.v:42$63: $auto$alumacc.cc:365:replace_macc$145
  creating $macc cell for $verific$mult_20$diffeq1.v:42$68: $auto$alumacc.cc:365:replace_macc$146
  creating $macc cell for $verific$mult_3$diffeq1.v:22$52: $auto$alumacc.cc:365:replace_macc$147
  creating $alu model for $verific$LessThan_16$diffeq1.v:40$62 ($lt): new $alu
  creating $alu cell for $verific$LessThan_16$diffeq1.v:40$62: $auto$alumacc.cc:485:replace_alu$149
  creating $alu cell for $verific$add_24$diffeq1.v:43$74: $auto$alumacc.cc:485:replace_alu$154
  creating $alu cell for $verific$add_26$diffeq1.v:44$76: $auto$alumacc.cc:485:replace_alu$157
  created 3 $alu and 4 $macc cells.

yosys> opt_expr

3.55. Executing OPT_EXPR pass (perform const folding).
Optimizing module diffeq_paj_convert.
<suppressed ~5 debug messages>

yosys> opt_merge -nomux

3.56. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\diffeq_paj_convert'.
Removed a total of 0 cells.

yosys> opt_muxtree

3.57. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \diffeq_paj_convert..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Removed 0 multiplexer ports.
<suppressed ~4 debug messages>

yosys> opt_reduce

3.58. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \diffeq_paj_convert.
Performed a total of 0 changes.

yosys> opt_merge

3.59. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\diffeq_paj_convert'.
Removed a total of 0 cells.

yosys> opt_share

3.60. Executing OPT_SHARE pass.

yosys> opt_dff -nosdff -nodffe

3.61. Executing OPT_DFF pass (perform DFF optimizations).

yosys> opt_clean

3.62. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \diffeq_paj_convert..
Removed 3 unused cells and 5 unused wires.
<suppressed ~4 debug messages>

yosys> opt_expr

3.63. Executing OPT_EXPR pass (perform const folding).
Optimizing module diffeq_paj_convert.

yosys> opt_muxtree

3.64. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \diffeq_paj_convert..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Removed 0 multiplexer ports.
<suppressed ~4 debug messages>

yosys> opt_reduce

3.65. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \diffeq_paj_convert.
Performed a total of 0 changes.

yosys> opt_merge

3.66. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\diffeq_paj_convert'.
Removed a total of 0 cells.

yosys> opt_share

3.67. Executing OPT_SHARE pass.

yosys> opt_dff -nosdff -nodffe

3.68. Executing OPT_DFF pass (perform DFF optimizations).

yosys> opt_clean

3.69. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \diffeq_paj_convert..

yosys> opt_expr

3.70. Executing OPT_EXPR pass (perform const folding).
Optimizing module diffeq_paj_convert.
MAX OPT ITERATION = 2

yosys> stat

3.71. Printing statistics.

=== diffeq_paj_convert ===

   Number of wires:                 43
   Number of wire bits:           1070
   Number of public wires:          15
   Number of public wire bits:     387
   Number of memories:               0
   Number of memory bits:            0
   Number of processes:              0
   Number of cells:                 30
     $alu                            3
     $dff                            1
     $dffe                           6
     $macc                           4
     $mux                           12
     $ne                             1
     $not                            2
     $reduce_and                     1


yosys> memory -nomap

3.72. Executing MEMORY pass.

yosys> opt_mem

3.72.1. Executing OPT_MEM pass (optimize memories).
Performed a total of 0 transformations.

yosys> opt_mem_priority

3.72.2. Executing OPT_MEM_PRIORITY pass (removing unnecessary memory write priority relations).
Performed a total of 0 transformations.

yosys> opt_mem_feedback

3.72.3. Executing OPT_MEM_FEEDBACK pass (finding memory read-to-write feedback paths).

yosys> memory_bmux2rom

3.72.4. Executing MEMORY_BMUX2ROM pass (converting muxes to ROMs).

yosys> memory_dff

3.72.5. Executing MEMORY_DFF pass (merging $dff cells to $memrd).

yosys> opt_clean

3.72.6. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \diffeq_paj_convert..

yosys> memory_share

3.72.7. Executing MEMORY_SHARE pass (consolidating $memrd/$memwr cells).

yosys> opt_mem_widen

3.72.8. Executing OPT_MEM_WIDEN pass (optimize memories where all ports are wide).
Performed a total of 0 transformations.

yosys> opt_clean

3.72.9. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \diffeq_paj_convert..

yosys> memory_collect

3.72.10. Executing MEMORY_COLLECT pass (generating $mem cells).

yosys> stat

3.73. Printing statistics.

=== diffeq_paj_convert ===

   Number of wires:                 43
   Number of wire bits:           1070
   Number of public wires:          15
   Number of public wire bits:     387
   Number of memories:               0
   Number of memory bits:            0
   Number of processes:              0
   Number of cells:                 30
     $alu                            3
     $dff                            1
     $dffe                           6
     $macc                           4
     $mux                           12
     $ne                             1
     $not                            2
     $reduce_and                     1


yosys> muxpack

3.74. Executing MUXPACK pass ($mux cell cascades to $pmux).
Converted 0 (p)mux cells into 0 pmux cells.
<suppressed ~12 debug messages>

yosys> opt_clean

3.75. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \diffeq_paj_convert..

yosys> pmuxtree

3.76. Executing PMUXTREE pass.

yosys> muxpack

3.77. Executing MUXPACK pass ($mux cell cascades to $pmux).
Converted 0 (p)mux cells into 0 pmux cells.
<suppressed ~12 debug messages>

yosys> memory_map

3.78. Executing MEMORY_MAP pass (converting memories to logic and flip-flops).

yosys> stat

3.79. Printing statistics.

=== diffeq_paj_convert ===

   Number of wires:                 43
   Number of wire bits:           1070
   Number of public wires:          15
   Number of public wire bits:     387
   Number of memories:               0
   Number of memory bits:            0
   Number of processes:              0
   Number of cells:                 30
     $alu                            3
     $dff                            1
     $dffe                           6
     $macc                           4
     $mux                           12
     $ne                             1
     $not                            2
     $reduce_and                     1


yosys> techmap -map +/techmap.v -map +/rapidsilicon/genesis/arith_map.v

3.80. Executing TECHMAP pass (map to technology primitives).

3.80.1. Executing Verilog-2005 frontend: /nfs_scratch/scratch/Vorak/aram/Workspace/Raptor/yosys_verific_rs/yosys/install/bin/../share/yosys/techmap.v
Parsing Verilog input from `/nfs_scratch/scratch/Vorak/aram/Workspace/Raptor/yosys_verific_rs/yosys/install/bin/../share/yosys/techmap.v' to AST representation.
Generating RTLIL representation for module `\_90_simplemap_bool_ops'.
Generating RTLIL representation for module `\_90_simplemap_reduce_ops'.
Generating RTLIL representation for module `\_90_simplemap_logic_ops'.
Generating RTLIL representation for module `\_90_simplemap_compare_ops'.
Generating RTLIL representation for module `\_90_simplemap_various'.
Generating RTLIL representation for module `\_90_simplemap_registers'.
Generating RTLIL representation for module `\_90_shift_ops_shr_shl_sshl_sshr'.
Generating RTLIL representation for module `\_90_shift_shiftx'.
Generating RTLIL representation for module `\_90_fa'.
Generating RTLIL representation for module `\_90_lcu'.
Generating RTLIL representation for module `\_90_alu'.
Generating RTLIL representation for module `\_90_macc'.
Generating RTLIL representation for module `\_90_alumacc'.
Generating RTLIL representation for module `\$__div_mod_u'.
Generating RTLIL representation for module `\$__div_mod_trunc'.
Generating RTLIL representation for module `\_90_div'.
Generating RTLIL representation for module `\_90_mod'.
Generating RTLIL representation for module `\$__div_mod_floor'.
Generating RTLIL representation for module `\_90_divfloor'.
Generating RTLIL representation for module `\_90_modfloor'.
Generating RTLIL representation for module `\_90_pow'.
Generating RTLIL representation for module `\_90_pmux'.
Generating RTLIL representation for module `\_90_demux'.
Generating RTLIL representation for module `\_90_lut'.
Successfully finished Verilog frontend.

3.80.2. Executing Verilog-2005 frontend: /nfs_scratch/scratch/Vorak/aram/Workspace/Raptor/yosys_verific_rs/yosys/install/bin/../share/yosys/rapidsilicon/genesis/arith_map.v
Parsing Verilog input from `/nfs_scratch/scratch/Vorak/aram/Workspace/Raptor/yosys_verific_rs/yosys/install/bin/../share/yosys/rapidsilicon/genesis/arith_map.v' to AST representation.
Generating RTLIL representation for module `\_80_rs_alu'.
Successfully finished Verilog frontend.

3.80.3. Continuing TECHMAP pass.
Using extmapper simplemap for cells of type $dffe.
Using extmapper simplemap for cells of type $ne.
Using extmapper simplemap for cells of type $not.
Using extmapper maccmap for cells of type $macc.
  add \u_var (32 bits, unsigned)
  sub $auto$wreduce.cc:455:run$142 [31:0] * \y_var (32x32 bits, unsigned)
  sub $auto$wreduce.cc:455:run$140 [31:0] * \x_var (32x32 bits, unsigned)
Using extmapper simplemap for cells of type $reduce_and.
Using template $paramod$be80489e44a49c29884f59fd81c31ed03229cfc1\_80_rs_alu for cells of type $alu.
  add \DXport * 2'11 (32x2 bits, unsigned)
Using template $paramod$79fc87901d7fd8aaad689b5406671422f5fa25b9\_80_rs_alu for cells of type $alu.
  add \u_var * \DXport (32x32 bits, unsigned)
  add \temp * 2'11 (32x2 bits, unsigned)
Using extmapper simplemap for cells of type $mux.
Using extmapper simplemap for cells of type $dff.
Using extmapper simplemap for cells of type $and.
Using template $paramod\_90_fa\WIDTH=32'00000000000000000000000000100000 for cells of type $fa.
Using template $paramod$fbc7873bff55778c0b3173955b7e4bce1d9d6834\_90_alu for cells of type $alu.
Using extmapper simplemap for cells of type $xor.
Using extmapper simplemap for cells of type $pos.
Using extmapper simplemap for cells of type $or.
Using template $paramod\_90_lcu\WIDTH=32'00000000000000000000000000100000 for cells of type $lcu.
No more expansions possible.
<suppressed ~1520 debug messages>

yosys> stat

3.81. Printing statistics.

=== diffeq_paj_convert ===

   Number of wires:               2014
   Number of wire bits:          57734
   Number of public wires:          15
   Number of public wire bits:     387
   Number of memories:               0
   Number of memory bits:            0
   Number of processes:              0
   Number of cells:              22047
     $_AND_                       9450
     $_DFFE_PP_                    192
     $_DFF_P_                        1
     $_MUX_                        525
     $_NOT_                       2274
     $_OR_                        3126
     $_XOR_                       6319
     adder_carry                   160


yosys> opt_expr

3.82. Executing OPT_EXPR pass (perform const folding).
Optimizing module diffeq_paj_convert.
<suppressed ~10250 debug messages>

yosys> opt_merge -nomux

3.83. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\diffeq_paj_convert'.
<suppressed ~363 debug messages>
Removed a total of 121 cells.

yosys> opt_muxtree

3.84. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \diffeq_paj_convert..
  Creating internal representation of mux trees.
  No muxes found in this module.
Removed 0 multiplexer ports.

yosys> opt_reduce

3.85. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \diffeq_paj_convert.
Performed a total of 0 changes.

yosys> opt_merge

3.86. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\diffeq_paj_convert'.
Removed a total of 0 cells.

yosys> opt_share

3.87. Executing OPT_SHARE pass.

yosys> opt_dff -nosdff -nodffe

3.88. Executing OPT_DFF pass (perform DFF optimizations).

yosys> opt_clean

3.89. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \diffeq_paj_convert..
Removed 471 unused cells and 1719 unused wires.
<suppressed ~472 debug messages>

yosys> opt_expr

3.90. Executing OPT_EXPR pass (perform const folding).
Optimizing module diffeq_paj_convert.

yosys> opt_muxtree

3.91. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \diffeq_paj_convert..
  Creating internal representation of mux trees.
  No muxes found in this module.
Removed 0 multiplexer ports.

yosys> opt_reduce

3.92. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \diffeq_paj_convert.
Performed a total of 0 changes.

yosys> opt_merge

3.93. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\diffeq_paj_convert'.
Removed a total of 0 cells.

yosys> opt_share

3.94. Executing OPT_SHARE pass.

yosys> opt_dff -nosdff -nodffe

3.95. Executing OPT_DFF pass (perform DFF optimizations).

yosys> opt_clean

3.96. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \diffeq_paj_convert..

yosys> opt_expr

3.97. Executing OPT_EXPR pass (perform const folding).
Optimizing module diffeq_paj_convert.
MAX OPT ITERATION = 2

yosys> opt_expr -full

3.98. Executing OPT_EXPR pass (perform const folding).
Optimizing module diffeq_paj_convert.
<suppressed ~96 debug messages>

yosys> techmap -map +/techmap.v

3.99. Executing TECHMAP pass (map to technology primitives).

3.99.1. Executing Verilog-2005 frontend: /nfs_scratch/scratch/Vorak/aram/Workspace/Raptor/yosys_verific_rs/yosys/install/bin/../share/yosys/techmap.v
Parsing Verilog input from `/nfs_scratch/scratch/Vorak/aram/Workspace/Raptor/yosys_verific_rs/yosys/install/bin/../share/yosys/techmap.v' to AST representation.
Generating RTLIL representation for module `\_90_simplemap_bool_ops'.
Generating RTLIL representation for module `\_90_simplemap_reduce_ops'.
Generating RTLIL representation for module `\_90_simplemap_logic_ops'.
Generating RTLIL representation for module `\_90_simplemap_compare_ops'.
Generating RTLIL representation for module `\_90_simplemap_various'.
Generating RTLIL representation for module `\_90_simplemap_registers'.
Generating RTLIL representation for module `\_90_shift_ops_shr_shl_sshl_sshr'.
Generating RTLIL representation for module `\_90_shift_shiftx'.
Generating RTLIL representation for module `\_90_fa'.
Generating RTLIL representation for module `\_90_lcu'.
Generating RTLIL representation for module `\_90_alu'.
Generating RTLIL representation for module `\_90_macc'.
Generating RTLIL representation for module `\_90_alumacc'.
Generating RTLIL representation for module `\$__div_mod_u'.
Generating RTLIL representation for module `\$__div_mod_trunc'.
Generating RTLIL representation for module `\_90_div'.
Generating RTLIL representation for module `\_90_mod'.
Generating RTLIL representation for module `\$__div_mod_floor'.
Generating RTLIL representation for module `\_90_divfloor'.
Generating RTLIL representation for module `\_90_modfloor'.
Generating RTLIL representation for module `\_90_pow'.
Generating RTLIL representation for module `\_90_pmux'.
Generating RTLIL representation for module `\_90_demux'.
Generating RTLIL representation for module `\_90_lut'.
Successfully finished Verilog frontend.

3.99.2. Continuing TECHMAP pass.
No more expansions possible.
<suppressed ~71 debug messages>

yosys> opt_expr

3.100. Executing OPT_EXPR pass (perform const folding).
Optimizing module diffeq_paj_convert.

yosys> opt_merge -nomux

3.101. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\diffeq_paj_convert'.
Removed a total of 0 cells.

yosys> opt_muxtree

3.102. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \diffeq_paj_convert..
  Creating internal representation of mux trees.
  No muxes found in this module.
Removed 0 multiplexer ports.

yosys> opt_reduce

3.103. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \diffeq_paj_convert.
Performed a total of 0 changes.

yosys> opt_merge

3.104. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\diffeq_paj_convert'.
Removed a total of 0 cells.

yosys> opt_dff -nosdff -nodffe -sat

3.105. Executing OPT_DFF pass (perform DFF optimizations).

yosys> opt_clean

3.106. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \diffeq_paj_convert..
Removed 0 unused cells and 3 unused wires.
<suppressed ~1 debug messages>

yosys> opt_expr

3.107. Executing OPT_EXPR pass (perform const folding).
Optimizing module diffeq_paj_convert.
MAX OPT ITERATION = 1

yosys> abc -dff

3.108. Executing ABC pass (technology mapping using ABC).

3.108.1. Summary of detected clock domains:
  97 cells in clk=\clk, en=$auto$opt_dff.cc:219:make_patterns_logic$124, arst={ }, srst={ }
  4717 cells in clk=\clk, en=$auto$opt_dff.cc:194:make_patterns_logic$111, arst={ }, srst={ }
  6837 cells in clk=\clk, en={ }, arst={ }, srst={ }

3.108.2. Extracting gate netlist of module `\diffeq_paj_convert' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk, enabled by $auto$opt_dff.cc:219:make_patterns_logic$124
Extracted 97 gates and 195 wires to a netlist network with 98 inputs and 97 outputs.

3.108.2.1. Executing ABC.

3.108.3. Extracting gate netlist of module `\diffeq_paj_convert' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk, enabled by $auto$opt_dff.cc:194:make_patterns_logic$111
Extracted 4557 gates and 4786 wires to a netlist network with 228 inputs and 1370 outputs.

3.108.3.1. Executing ABC.

3.108.4. Extracting gate netlist of module `\diffeq_paj_convert' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk
Extracted 6837 gates and 8093 wires to a netlist network with 1254 inputs and 99 outputs.

3.108.4.1. Executing ABC.

yosys> abc -dff

3.109. Executing ABC pass (technology mapping using ABC).

3.109.1. Summary of detected clock domains:
  97 cells in clk=\clk, en=$abc$24130$auto$opt_dff.cc:219:make_patterns_logic$124, arst={ }, srst={ }
  4651 cells in clk=\clk, en=$abc$24420$auto$opt_dff.cc:194:make_patterns_logic$111, arst={ }, srst={ }
  5380 cells in clk=\clk, en={ }, arst={ }, srst={ }

3.109.2. Extracting gate netlist of module `\diffeq_paj_convert' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk, enabled by $abc$24130$auto$opt_dff.cc:219:make_patterns_logic$124
Extracted 97 gates and 195 wires to a netlist network with 98 inputs and 97 outputs.

3.109.2.1. Executing ABC.

3.109.3. Extracting gate netlist of module `\diffeq_paj_convert' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk, enabled by $abc$24420$auto$opt_dff.cc:194:make_patterns_logic$111
Extracted 4494 gates and 4719 wires to a netlist network with 225 inputs and 1375 outputs.

3.109.3.1. Executing ABC.

3.109.4. Extracting gate netlist of module `\diffeq_paj_convert' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk
Extracted 5377 gates and 6637 wires to a netlist network with 1260 inputs and 99 outputs.

3.109.4.1. Executing ABC.

yosys> abc -dff

3.110. Executing ABC pass (technology mapping using ABC).

3.110.1. Summary of detected clock domains:
  4645 cells in clk=\clk, en=$abc$34679$abc$24420$auto$opt_dff.cc:194:make_patterns_logic$111, arst={ }, srst={ }
  97 cells in clk=\clk, en=$abc$34389$abc$24130$auto$opt_dff.cc:219:make_patterns_logic$124, arst={ }, srst={ }
  5373 cells in clk=\clk, en={ }, arst={ }, srst={ }

3.110.2. Extracting gate netlist of module `\diffeq_paj_convert' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk, enabled by $abc$34679$abc$24420$auto$opt_dff.cc:194:make_patterns_logic$111
Extracted 4488 gates and 4713 wires to a netlist network with 225 inputs and 1375 outputs.

3.110.2.1. Executing ABC.

3.110.3. Extracting gate netlist of module `\diffeq_paj_convert' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk, enabled by $abc$34389$abc$24130$auto$opt_dff.cc:219:make_patterns_logic$124
Extracted 97 gates and 195 wires to a netlist network with 98 inputs and 97 outputs.

3.110.3.1. Executing ABC.

3.110.4. Extracting gate netlist of module `\diffeq_paj_convert' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk
Extracted 5370 gates and 6630 wires to a netlist network with 1260 inputs and 99 outputs.

3.110.4.1. Executing ABC.

yosys> abc -dff

3.111. Executing ABC pass (technology mapping using ABC).

3.111.1. Summary of detected clock domains:
  4656 cells in clk=\clk, en=$abc$44635$abc$34679$abc$24420$auto$opt_dff.cc:194:make_patterns_logic$111, arst={ }, srst={ }
  97 cells in clk=\clk, en=$abc$49222$abc$34389$abc$24130$auto$opt_dff.cc:219:make_patterns_logic$124, arst={ }, srst={ }
  5373 cells in clk=\clk, en={ }, arst={ }, srst={ }

3.111.2. Extracting gate netlist of module `\diffeq_paj_convert' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk, enabled by $abc$44635$abc$34679$abc$24420$auto$opt_dff.cc:194:make_patterns_logic$111
Extracted 4499 gates and 4729 wires to a netlist network with 230 inputs and 1376 outputs.

3.111.2.1. Executing ABC.

3.111.3. Extracting gate netlist of module `\diffeq_paj_convert' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk, enabled by $abc$49222$abc$34389$abc$24130$auto$opt_dff.cc:219:make_patterns_logic$124
Extracted 97 gates and 195 wires to a netlist network with 98 inputs and 97 outputs.

3.111.3.1. Executing ABC.

3.111.4. Extracting gate netlist of module `\diffeq_paj_convert' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk
Extracted 5370 gates and 6631 wires to a netlist network with 1261 inputs and 104 outputs.

3.111.4.1. Executing ABC.

yosys> opt_ffinv

3.112. Executing OPT_FFINV pass (push inverters through FFs).
Discovering LUTs.
Pushed 0 inverters.

yosys> opt_expr

3.113. Executing OPT_EXPR pass (perform const folding).
Optimizing module diffeq_paj_convert.

yosys> opt_merge -nomux

3.114. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\diffeq_paj_convert'.
Removed a total of 0 cells.

yosys> opt_muxtree

3.115. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \diffeq_paj_convert..
  Creating internal representation of mux trees.
  No muxes found in this module.
Removed 0 multiplexer ports.

yosys> opt_reduce

3.116. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \diffeq_paj_convert.
Performed a total of 0 changes.

yosys> opt_merge

3.117. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\diffeq_paj_convert'.
Removed a total of 0 cells.

yosys> opt_share

3.118. Executing OPT_SHARE pass.

yosys> opt_dff -nosdff -sat

3.119. Executing OPT_DFF pass (perform DFF optimizations).

yosys> opt_clean

3.120. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \diffeq_paj_convert..
Removed 0 unused cells and 38610 unused wires.
<suppressed ~2 debug messages>

yosys> opt_expr

3.121. Executing OPT_EXPR pass (perform const folding).
Optimizing module diffeq_paj_convert.
MAX OPT ITERATION = 1

yosys> bmuxmap

3.122. Executing BMUXMAP pass.

yosys> demuxmap

3.123. Executing DEMUXMAP pass.

yosys> clean_zerowidth

yosys> abc -script /tmp/yosys_Nl3dus/abc_tmp_1.scr

3.124. Executing ABC pass (technology mapping using ABC).

3.124.1. Extracting gate netlist of module `\diffeq_paj_convert' to `<abc-temp-dir>/input.blif'..
Extracted 9773 gates and 10156 wires to a netlist network with 383 inputs and 277 outputs.

3.124.1.1. Executing ABC.
DE:   #PIs = 383  #Luts =  3208  Max Lvl =  20  Avg Lvl =   4.38  [   0.21 sec. at Pass 0]{firstMap}
DE:   #PIs = 383  #Luts =  3208  Max Lvl =  20  Avg Lvl =   4.38  [  38.52 sec. at Pass 1]{initMapFlow}
DE:   #PIs = 383  #Luts =  2980  Max Lvl =  36  Avg Lvl =   6.97  [  10.30 sec. at Pass 2]{map}
DE:   #PIs = 383  #Luts =  2980  Max Lvl =  36  Avg Lvl =   6.97  [  38.11 sec. at Pass 3]{postMap}
DE:   #PIs = 383  #Luts =  2957  Max Lvl =  32  Avg Lvl =   7.25  [   9.86 sec. at Pass 4]{map}
DE:   #PIs = 383  #Luts =  2957  Max Lvl =  32  Avg Lvl =   7.25  [  34.47 sec. at Pass 5]{postMap}
DE:   #PIs = 383  #Luts =  2939  Max Lvl =  29  Avg Lvl =   6.41  [  12.03 sec. at Pass 6]{map}
DE:   #PIs = 383  #Luts =  2939  Max Lvl =  29  Avg Lvl =   6.41  [  21.41 sec. at Pass 7]{postMap}
DE:   #PIs = 383  #Luts =  2921  Max Lvl =  31  Avg Lvl =   5.95  [  11.48 sec. at Pass 8]{map}
DE:   #PIs = 383  #Luts =  2921  Max Lvl =  31  Avg Lvl =   5.95  [  36.77 sec. at Pass 9]{postMap}
DE:   #PIs = 383  #Luts =  2915  Max Lvl =  31  Avg Lvl =   5.86  [  12.65 sec. at Pass 10]{map}
DE:   #PIs = 383  #Luts =  2915  Max Lvl =  31  Avg Lvl =   5.86  [  27.77 sec. at Pass 11]{postMap}
DE:   #PIs = 383  #Luts =  2910  Max Lvl =  29  Avg Lvl =   6.10  [   8.14 sec. at Pass 12]{map}
DE:   #PIs = 383  #Luts =  2910  Max Lvl =  29  Avg Lvl =   6.10  [  23.00 sec. at Pass 13]{postMap}
DE:   #PIs = 383  #Luts =  2904  Max Lvl =  30  Avg Lvl =   5.65  [   6.31 sec. at Pass 14]{map}
DE:   #PIs = 383  #Luts =  2904  Max Lvl =  30  Avg Lvl =   5.65  [  20.61 sec. at Pass 15]{postMap}
DE:   #PIs = 383  #Luts =  2904  Max Lvl =  30  Avg Lvl =   5.65  [   1.57 sec. at Pass 16]{finalMap}

yosys> opt_expr

3.125. Executing OPT_EXPR pass (perform const folding).
Optimizing module diffeq_paj_convert.

yosys> opt_merge -nomux

3.126. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\diffeq_paj_convert'.
Removed a total of 0 cells.

yosys> opt_muxtree

3.127. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \diffeq_paj_convert..
  Creating internal representation of mux trees.
  No muxes found in this module.
Removed 0 multiplexer ports.

yosys> opt_reduce

3.128. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \diffeq_paj_convert.
Performed a total of 0 changes.

yosys> opt_merge

3.129. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\diffeq_paj_convert'.
Removed a total of 0 cells.

yosys> opt_share

3.130. Executing OPT_SHARE pass.

yosys> opt_dff -nosdff -nodffe

3.131. Executing OPT_DFF pass (perform DFF optimizations).

yosys> opt_clean

3.132. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \diffeq_paj_convert..
Removed 0 unused cells and 10092 unused wires.
<suppressed ~1 debug messages>

yosys> opt_expr

3.133. Executing OPT_EXPR pass (perform const folding).
Optimizing module diffeq_paj_convert.
MAX OPT ITERATION = 1

yosys> opt_ffinv

3.134. Executing OPT_FFINV pass (push inverters through FFs).
Discovering LUTs.
Pushed 0 inverters.

yosys> stat

3.135. Printing statistics.

=== diffeq_paj_convert ===

   Number of wires:               2761
   Number of wire bits:           3603
   Number of public wires:          14
   Number of public wire bits:     386
   Number of memories:               0
   Number of memory bits:            0
   Number of processes:              0
   Number of cells:               3257
     $_DFFE_PP_                    192
     $_DFF_P_                        1
     $lut                         2904
     adder_carry                   160


yosys> shregmap -minlen 8 -maxlen 20

3.136. Executing SHREGMAP pass (map shift registers).
Converted 0 dff cells into 0 shift registers.

yosys> dfflegalize -cell $_DFF_?_ 0 -cell $_DFF_???_ 0 -cell $_DFFE_????_ 0 -cell $_DFFSR_???_ 0 -cell $_DFFSRE_????_ 0 -cell $_DLATCHSR_PPP_ 0

3.137. Executing DFFLEGALIZE pass (convert FFs to types supported by the target).

yosys> stat

3.138. Printing statistics.

=== diffeq_paj_convert ===

   Number of wires:               2761
   Number of wire bits:           3603
   Number of public wires:          14
   Number of public wire bits:     386
   Number of memories:               0
   Number of memory bits:            0
   Number of processes:              0
   Number of cells:               3257
     $_DFFE_PP0P_                  192
     $_DFF_P_                        1
     $lut                         2904
     adder_carry                   160


yosys> techmap -map +/techmap.v -map +/rapidsilicon/genesis/ffs_map.v

3.139. Executing TECHMAP pass (map to technology primitives).

3.139.1. Executing Verilog-2005 frontend: /nfs_scratch/scratch/Vorak/aram/Workspace/Raptor/yosys_verific_rs/yosys/install/bin/../share/yosys/techmap.v
Parsing Verilog input from `/nfs_scratch/scratch/Vorak/aram/Workspace/Raptor/yosys_verific_rs/yosys/install/bin/../share/yosys/techmap.v' to AST representation.
Generating RTLIL representation for module `\_90_simplemap_bool_ops'.
Generating RTLIL representation for module `\_90_simplemap_reduce_ops'.
Generating RTLIL representation for module `\_90_simplemap_logic_ops'.
Generating RTLIL representation for module `\_90_simplemap_compare_ops'.
Generating RTLIL representation for module `\_90_simplemap_various'.
Generating RTLIL representation for module `\_90_simplemap_registers'.
Generating RTLIL representation for module `\_90_shift_ops_shr_shl_sshl_sshr'.
Generating RTLIL representation for module `\_90_shift_shiftx'.
Generating RTLIL representation for module `\_90_fa'.
Generating RTLIL representation for module `\_90_lcu'.
Generating RTLIL representation for module `\_90_alu'.
Generating RTLIL representation for module `\_90_macc'.
Generating RTLIL representation for module `\_90_alumacc'.
Generating RTLIL representation for module `\$__div_mod_u'.
Generating RTLIL representation for module `\$__div_mod_trunc'.
Generating RTLIL representation for module `\_90_div'.
Generating RTLIL representation for module `\_90_mod'.
Generating RTLIL representation for module `\$__div_mod_floor'.
Generating RTLIL representation for module `\_90_divfloor'.
Generating RTLIL representation for module `\_90_modfloor'.
Generating RTLIL representation for module `\_90_pow'.
Generating RTLIL representation for module `\_90_pmux'.
Generating RTLIL representation for module `\_90_demux'.
Generating RTLIL representation for module `\_90_lut'.
Successfully finished Verilog frontend.

3.139.2. Executing Verilog-2005 frontend: /nfs_scratch/scratch/Vorak/aram/Workspace/Raptor/yosys_verific_rs/yosys/install/bin/../share/yosys/rapidsilicon/genesis/ffs_map.v
Parsing Verilog input from `/nfs_scratch/scratch/Vorak/aram/Workspace/Raptor/yosys_verific_rs/yosys/install/bin/../share/yosys/rapidsilicon/genesis/ffs_map.v' to AST representation.
Generating RTLIL representation for module `\$_DFF_P_'.
Generating RTLIL representation for module `\$_DFF_PP0_'.
Generating RTLIL representation for module `\$_DFF_PN0_'.
Generating RTLIL representation for module `\$_DFF_PP1_'.
Generating RTLIL representation for module `\$_DFF_PN1_'.
Generating RTLIL representation for module `\$_DFFE_PP_'.
Generating RTLIL representation for module `\$_DFFE_PN_'.
Generating RTLIL representation for module `\$_DFFE_PP0P_'.
Generating RTLIL representation for module `\$_DFFE_PP0N_'.
Generating RTLIL representation for module `\$_DFFE_PN0P_'.
Generating RTLIL representation for module `\$_DFFE_PN0N_'.
Generating RTLIL representation for module `\$_DFFE_PP1P_'.
Generating RTLIL representation for module `\$_DFFE_PP1N_'.
Generating RTLIL representation for module `\$_DFFE_PN1P_'.
Generating RTLIL representation for module `\$_DFFE_PN1N_'.
Generating RTLIL representation for module `\$_DFFSR_PPP_'.
Generating RTLIL representation for module `\$_DFFSR_PNP_'.
Generating RTLIL representation for module `\$_DFFSR_PNN_'.
Generating RTLIL representation for module `\$_DFFSR_PPN_'.
Generating RTLIL representation for module `\$_DFFSR_NPP_'.
Generating RTLIL representation for module `\$_DFFSR_NNP_'.
Generating RTLIL representation for module `\$_DFFSR_NNN_'.
Generating RTLIL representation for module `\$_DFFSR_NPN_'.
Generating RTLIL representation for module `\$_DFFSRE_PPPP_'.
Generating RTLIL representation for module `\$_DFFSRE_PNPP_'.
Generating RTLIL representation for module `\$_DFFSRE_PPNP_'.
Generating RTLIL representation for module `\$_DFFSRE_PNNP_'.
Generating RTLIL representation for module `\$_DFFSRE_PPPN_'.
Generating RTLIL representation for module `\$_DFFSRE_PNPN_'.
Generating RTLIL representation for module `\$_DFFSRE_PPNN_'.
Generating RTLIL representation for module `\$_DFFSRE_PNNN_'.
Generating RTLIL representation for module `\$_DLATCHSR_PPP_'.
Generating RTLIL representation for module `\$_DLATCHSR_NPP_'.
Generating RTLIL representation for module `\$_DFF_N_'.
Generating RTLIL representation for module `\$_DFF_NP0_'.
Generating RTLIL representation for module `\$_DFF_NN0_'.
Generating RTLIL representation for module `\$_DFF_NP1_'.
Generating RTLIL representation for module `\$_DFF_NN1_'.
Generating RTLIL representation for module `\$_DFFE_NP_'.
Generating RTLIL representation for module `\$_DFFE_NN_'.
Generating RTLIL representation for module `\$_DFFE_NP0P_'.
Generating RTLIL representation for module `\$_DFFE_NP0N_'.
Generating RTLIL representation for module `\$_DFFE_NN0P_'.
Generating RTLIL representation for module `\$_DFFE_NN0N_'.
Generating RTLIL representation for module `\$_DFFE_NP1P_'.
Generating RTLIL representation for module `\$_DFFE_NP1N_'.
Generating RTLIL representation for module `\$_DFFE_NN1P_'.
Generating RTLIL representation for module `\$_DFFE_NN1N_'.
Generating RTLIL representation for module `\$_DFFSRE_NPPP_'.
Generating RTLIL representation for module `\$_DFFSRE_NNPP_'.
Generating RTLIL representation for module `\$_DFFSRE_NPNP_'.
Generating RTLIL representation for module `\$_DFFSRE_NNNP_'.
Generating RTLIL representation for module `\$_DFFSRE_NPPN_'.
Generating RTLIL representation for module `\$_DFFSRE_NNPN_'.
Generating RTLIL representation for module `\$_DFFSRE_NPNN_'.
Generating RTLIL representation for module `\$_DFFSRE_NNNN_'.
Generating RTLIL representation for module `\$__SHREG_DFF_P_'.
Generating RTLIL representation for module `\$_SDFF_PP0_'.
Generating RTLIL representation for module `\$_SDFF_PN0_'.
Generating RTLIL representation for module `\$_SDFF_NP0_'.
Generating RTLIL representation for module `\$_SDFF_NN0_'.
Generating RTLIL representation for module `\$_SDFF_PP1_'.
Generating RTLIL representation for module `\$_SDFF_PN1_'.
Generating RTLIL representation for module `\$_SDFF_NP1_'.
Generating RTLIL representation for module `\$_SDFF_NN1_'.
Successfully finished Verilog frontend.

3.139.3. Continuing TECHMAP pass.
Using extmapper simplemap for cells of type $lut.
Using template \$_DFFE_PP0P_ for cells of type $_DFFE_PP0P_.
Using template \$_DFF_P_ for cells of type $_DFF_P_.
Using extmapper simplemap for cells of type $logic_not.
No more expansions possible.
<suppressed ~3425 debug messages>

yosys> opt_expr -mux_undef

3.140. Executing OPT_EXPR pass (perform const folding).
Optimizing module diffeq_paj_convert.
<suppressed ~60272 debug messages>

yosys> simplemap

3.141. Executing SIMPLEMAP pass (map simple cells to gate primitives).

yosys> opt_expr

3.142. Executing OPT_EXPR pass (perform const folding).
Optimizing module diffeq_paj_convert.

yosys> opt_merge

3.143. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\diffeq_paj_convert'.
<suppressed ~87255 debug messages>
Removed a total of 29085 cells.

yosys> opt_dff -nodffe -nosdff

3.144. Executing OPT_DFF pass (perform DFF optimizations).

yosys> opt_clean

3.145. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \diffeq_paj_convert..
Removed 0 unused cells and 6279 unused wires.
<suppressed ~1 debug messages>

yosys> opt_expr

3.146. Executing OPT_EXPR pass (perform const folding).
Optimizing module diffeq_paj_convert.
<suppressed ~2028 debug messages>

yosys> opt_merge -nomux

3.147. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\diffeq_paj_convert'.
<suppressed ~30 debug messages>
Removed a total of 10 cells.

yosys> opt_muxtree

3.148. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \diffeq_paj_convert..
  Creating internal representation of mux trees.
  No muxes found in this module.
Removed 0 multiplexer ports.

yosys> opt_reduce

3.149. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \diffeq_paj_convert.
Performed a total of 0 changes.

yosys> opt_merge

3.150. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\diffeq_paj_convert'.
Removed a total of 0 cells.

yosys> opt_share

3.151. Executing OPT_SHARE pass.

yosys> opt_dff -nosdff -nodffe

3.152. Executing OPT_DFF pass (perform DFF optimizations).

yosys> opt_clean

3.153. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \diffeq_paj_convert..
Removed 0 unused cells and 4 unused wires.
<suppressed ~1 debug messages>

yosys> opt_expr

3.154. Executing OPT_EXPR pass (perform const folding).
Optimizing module diffeq_paj_convert.
MAX OPT ITERATION = 1

yosys> abc -script /tmp/yosys_Nl3dus/abc_tmp_2.scr

3.155. Executing ABC pass (technology mapping using ABC).

3.155.1. Extracting gate netlist of module `\diffeq_paj_convert' to `<abc-temp-dir>/input.blif'..
Extracted 20323 gates and 20708 wires to a netlist network with 383 inputs and 277 outputs.

3.155.1.1. Executing ABC.
DE:   #PIs = 383  #Luts =  2908  Max Lvl =  22  Avg Lvl =   4.88  [   0.62 sec. at Pass 0]{firstMap}
DE:   #PIs = 383  #Luts =  2908  Max Lvl =  22  Avg Lvl =   4.88  [  48.90 sec. at Pass 1]{initMapFlow}
DE:   #PIs = 383  #Luts =  2908  Max Lvl =  22  Avg Lvl =   4.88  [   6.62 sec. at Pass 2]{map}
DE:   #PIs = 383  #Luts =  2908  Max Lvl =  22  Avg Lvl =   4.88  [  20.88 sec. at Pass 3]{postMap}
DE:   #PIs = 383  #Luts =  2908  Max Lvl =  22  Avg Lvl =   4.88  [   8.22 sec. at Pass 4]{map}
DE:   #PIs = 383  #Luts =  2908  Max Lvl =  22  Avg Lvl =   4.88  [  26.20 sec. at Pass 5]{postMap}
DE:   #PIs = 383  #Luts =  2908  Max Lvl =  22  Avg Lvl =   4.88  [   1.93 sec. at Pass 6]{finalMap}

yosys> opt_expr

3.156. Executing OPT_EXPR pass (perform const folding).
Optimizing module diffeq_paj_convert.

yosys> opt_merge -nomux

3.157. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\diffeq_paj_convert'.
Removed a total of 0 cells.

yosys> opt_muxtree

3.158. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \diffeq_paj_convert..
  Creating internal representation of mux trees.
  No muxes found in this module.
Removed 0 multiplexer ports.

yosys> opt_reduce

3.159. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \diffeq_paj_convert.
Performed a total of 0 changes.

yosys> opt_merge

3.160. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\diffeq_paj_convert'.
Removed a total of 0 cells.

yosys> opt_share

3.161. Executing OPT_SHARE pass.

yosys> opt_dff -nosdff -nodffe

3.162. Executing OPT_DFF pass (perform DFF optimizations).

yosys> opt_clean

3.163. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \diffeq_paj_convert..
Removed 0 unused cells and 12114 unused wires.
<suppressed ~1 debug messages>

yosys> opt_expr

3.164. Executing OPT_EXPR pass (perform const folding).
Optimizing module diffeq_paj_convert.
MAX OPT ITERATION = 1

yosys> hierarchy -check

3.165. Executing HIERARCHY pass (managing design hierarchy).

3.165.1. Analyzing design hierarchy..
Top module:  \diffeq_paj_convert

3.165.2. Analyzing design hierarchy..
Top module:  \diffeq_paj_convert
Removed 0 unused modules.

yosys> stat

3.166. Printing statistics.

=== diffeq_paj_convert ===

   Number of wires:               2765
   Number of wire bits:           3607
   Number of public wires:          14
   Number of public wire bits:     386
   Number of memories:               0
   Number of memory bits:            0
   Number of processes:              0
   Number of cells:               3261
     $lut                         2908
     adder_carry                   160
     dffsre                        193


yosys> opt_clean -purge

3.167. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \diffeq_paj_convert..

yosys> write_verilog -noattr -nohex synthesized.v

3.168. Executing Verilog backend.
Dumping module `\diffeq_paj_convert'.

End of script. Logfile hash: 3a7e11d359, CPU: user 32.90s system 0.21s, MEM: 230.02 MB peak
Yosys 0.18+10 (git sha1 7361c89db, gcc 9.4.0-1ubuntu1~20.04.1 -fPIC -Os)
Time spent: 98% 6x abc (2539 sec), 0% 29x opt_expr (14 sec), ...
real 481.22
user 2478.35
sys 90.95
