
 /----------------------------------------------------------------------------\
 |                                                                            |
 |  yosys -- Yosys Open SYnthesis Suite                                       |
 |                                                                            |
 |  Copyright (C) 2012 - 2020  Claire Xenia Wolf <claire@yosyshq.com>         |
 |                                                                            |
 |  Permission to use, copy, modify, and/or distribute this software for any  |
 |  purpose with or without fee is hereby granted, provided that the above    |
 |  copyright notice and this permission notice appear in all copies.         |
 |                                                                            |
 |  THE SOFTWARE IS PROVIDED "AS IS" AND THE AUTHOR DISCLAIMS ALL WARRANTIES  |
 |  WITH REGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF          |
 |  MERCHANTABILITY AND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR   |
 |  ANY SPECIAL, DIRECT, INDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES    |
 |  WHATSOEVER RESULTING FROM LOSS OF USE, DATA OR PROFITS, WHETHER IN AN     |
 |  ACTION OF CONTRACT, NEGLIGENCE OR OTHER TORTIOUS ACTION, ARISING OUT OF   |
 |  OR IN CONNECTION WITH THE USE OR PERFORMANCE OF THIS SOFTWARE.            |
 |                                                                            |
 \----------------------------------------------------------------------------/

 Yosys-Verific 0.0.92
 Yosys 0.18+10 (git sha1 7361c89db, gcc 9.4.0-1ubuntu1~20.04.1 -fPIC -Os)


-- Executing script file `yosys.ys' --
echo on

yosys> plugin -i synth-rs

yosys> read -verific

yosys> read -incdir .

yosys> verific -vlog-incdir .

1. Executing VERIFIC (loading SystemVerilog and VHDL designs using Verific).
Built with Verific May22_SW_Release, released at Wed Jun  1 05:39:28 2022.

yosys> verilog_defaults -add -I.

yosys> read -vlog2k demux.v mux.v wrapper_io_tc1.v

yosys> verific -vlog2k demux.v mux.v wrapper_io_tc1.v

2. Executing VERIFIC (loading SystemVerilog and VHDL designs using Verific).
Built with Verific May22_SW_Release, released at Wed Jun  1 05:39:28 2022.
VERIFIC-COMMENT [VERI-1482] Analyzing Verilog file 'demux.v'
VERIFIC-COMMENT [VERI-1482] Analyzing Verilog file 'mux.v'
VERIFIC-COMMENT [VERI-1482] Analyzing Verilog file 'wrapper_io_tc1.v'
VERIFIC-INFO [VERI-2561] wrapper_io_tc1.v:15: undeclared symbol 'mux_out', assumed default net type 'wire'

yosys> synth_rs -top wrapper_io_tc1 -tech genesis -goal area -de -no_dsp -no_bram -verilog synthesized.v

3. Executing synth_rs pass: v0.4.79

yosys> read_verilog -lib -specify -nomem2reg +/rapidsilicon/common/cells_sim.v +/rapidsilicon/genesis/cells_sim.v +/rapidsilicon/genesis/dsp_sim.v

3.1. Executing Verilog-2005 frontend: /nfs_scratch/scratch/Vorak/aram/Workspace/Raptor/yosys_verific_rs/yosys/install/bin/../share/yosys/rapidsilicon/common/cells_sim.v
Parsing Verilog input from `/nfs_scratch/scratch/Vorak/aram/Workspace/Raptor/yosys_verific_rs/yosys/install/bin/../share/yosys/rapidsilicon/common/cells_sim.v' to AST representation.
Generating RTLIL representation for module `\inv'.
Generating RTLIL representation for module `\buff'.
Generating RTLIL representation for module `\logic_0'.
Generating RTLIL representation for module `\logic_1'.
Generating RTLIL representation for module `\gclkbuff'.
Successfully finished Verilog frontend.

3.2. Executing Verilog-2005 frontend: /nfs_scratch/scratch/Vorak/aram/Workspace/Raptor/yosys_verific_rs/yosys/install/bin/../share/yosys/rapidsilicon/genesis/cells_sim.v
Parsing Verilog input from `/nfs_scratch/scratch/Vorak/aram/Workspace/Raptor/yosys_verific_rs/yosys/install/bin/../share/yosys/rapidsilicon/genesis/cells_sim.v' to AST representation.
Generating RTLIL representation for module `\dffsre'.
Generating RTLIL representation for module `\dffnsre'.
Generating RTLIL representation for module `\latchsre'.
Generating RTLIL representation for module `\latchnsre'.
Generating RTLIL representation for module `\io_scff'.
Generating RTLIL representation for module `\scff'.
Generating RTLIL representation for module `\sh_dff'.
Generating RTLIL representation for module `\adder_carry'.
Generating RTLIL representation for module `\sdffr'.
Generating RTLIL representation for module `\sdffs'.
Generating RTLIL representation for module `\TDP_BRAM18'.
Generating RTLIL representation for module `\TDP36K'.
Generating RTLIL representation for module `\BRAM2x18_TDP'.
Generating RTLIL representation for module `\BRAM2x18_SDP'.
Generating RTLIL representation for module `\_$_mem_v2_asymmetric'.
Successfully finished Verilog frontend.

3.3. Executing Verilog-2005 frontend: /nfs_scratch/scratch/Vorak/aram/Workspace/Raptor/yosys_verific_rs/yosys/install/bin/../share/yosys/rapidsilicon/genesis/dsp_sim.v
Parsing Verilog input from `/nfs_scratch/scratch/Vorak/aram/Workspace/Raptor/yosys_verific_rs/yosys/install/bin/../share/yosys/rapidsilicon/genesis/dsp_sim.v' to AST representation.
Generating RTLIL representation for module `\RS_DSP1'.
Generating RTLIL representation for module `\RS_DSP2'.
Generating RTLIL representation for module `\RS_DSP2_MULT'.
Generating RTLIL representation for module `\RS_DSP2_MULT_REGIN'.
Generating RTLIL representation for module `\RS_DSP2_MULT_REGOUT'.
Generating RTLIL representation for module `\RS_DSP2_MULT_REGIN_REGOUT'.
Generating RTLIL representation for module `\RS_DSP2_MULTADD'.
Generating RTLIL representation for module `\RS_DSP2_MULTADD_REGIN'.
Generating RTLIL representation for module `\RS_DSP2_MULTADD_REGOUT'.
Generating RTLIL representation for module `\RS_DSP2_MULTADD_REGIN_REGOUT'.
Generating RTLIL representation for module `\RS_DSP2_MULTACC'.
Generating RTLIL representation for module `\RS_DSP2_MULTACC_REGIN'.
Generating RTLIL representation for module `\RS_DSP2_MULTACC_REGOUT'.
Generating RTLIL representation for module `\RS_DSP2_MULTACC_REGIN_REGOUT'.
Generating RTLIL representation for module `\dsp_t1_20x18x64_cfg_ports'.
Generating RTLIL representation for module `\dsp_t1_10x9x32_cfg_ports'.
Generating RTLIL representation for module `\dsp_t1_sim_cfg_ports'.
Generating RTLIL representation for module `\RS_DSP3'.
Generating RTLIL representation for module `\RS_DSP3_MULT'.
Generating RTLIL representation for module `\RS_DSP3_MULT_REGIN'.
Generating RTLIL representation for module `\RS_DSP3_MULT_REGOUT'.
Generating RTLIL representation for module `\RS_DSP3_MULT_REGIN_REGOUT'.
Generating RTLIL representation for module `\RS_DSP3_MULTADD'.
Generating RTLIL representation for module `\RS_DSP3_MULTADD_REGIN'.
Generating RTLIL representation for module `\RS_DSP3_MULTADD_REGOUT'.
Generating RTLIL representation for module `\RS_DSP3_MULTADD_REGIN_REGOUT'.
Generating RTLIL representation for module `\RS_DSP3_MULTACC'.
Generating RTLIL representation for module `\RS_DSP3_MULTACC_REGIN'.
Generating RTLIL representation for module `\RS_DSP3_MULTACC_REGOUT'.
Generating RTLIL representation for module `\RS_DSP3_MULTACC_REGIN_REGOUT'.
Generating RTLIL representation for module `\dsp_t1_20x18x64_cfg_params'.
Generating RTLIL representation for module `\dsp_t1_10x9x32_cfg_params'.
Generating RTLIL representation for module `\dsp_t1_sim_cfg_params'.
Successfully finished Verilog frontend.

yosys> hierarchy -check -top wrapper_io_tc1

3.4. Executing HIERARCHY pass (managing design hierarchy).
VERIFIC-INFO [VERI-1018] wrapper_io_tc1.v:3: compiling module 'wrapper_io_tc1'
VERIFIC-INFO [VERI-1018] mux.v:1: compiling module 'mux_128_2'
VERIFIC-WARNING [VERI-2580] mux.v:27: latch inferred for net 'in_internal1[127]'
VERIFIC-INFO [VERI-1018] mux.v:43: compiling module 'mux_128x1'
VERIFIC-INFO [VERI-1018] mux.v:55: compiling module 'mux_64x1'
VERIFIC-INFO [VERI-1018] mux.v:67: compiling module 'mux_32x1'
VERIFIC-INFO [VERI-1018] mux.v:79: compiling module 'mux_16x1'
VERIFIC-INFO [VERI-1018] mux.v:91: compiling module 'mux_8x1'
VERIFIC-INFO [VERI-1018] mux.v:103: compiling module 'mux_4x1'
VERIFIC-INFO [VERI-1018] mux.v:115: compiling module 'mux_2x1'
VERIFIC-INFO [VERI-1018] demux.v:1: compiling module 'demux_128_2'
VERIFIC-WARNING [VERI-2580] demux.v:27: latch inferred for net 'in_internal1'
VERIFIC-INFO [VERI-1018] demux.v:43: compiling module 'demux_1x128'
VERIFIC-INFO [VERI-1018] demux.v:117: compiling module 'demux_1x2'
VERIFIC-INFO [VERI-1018] demux.v:55: compiling module 'demux_1x64'
VERIFIC-INFO [VERI-1018] demux.v:67: compiling module 'demux_1x32'
VERIFIC-INFO [VERI-1018] demux.v:80: compiling module 'demux_1x16'
VERIFIC-INFO [VERI-1018] demux.v:92: compiling module 'demux_1x8'
VERIFIC-INFO [VERI-1018] demux.v:104: compiling module 'demux_1x4'
Importing module wrapper_io_tc1.
Importing module demux_128_2.
Importing module demux_1x128.
Importing module demux_1x2.
Importing module demux_1x64.
Importing module demux_1x32.
Importing module demux_1x16.
Importing module demux_1x8.
Importing module demux_1x4.
Importing module mux_128_2.
Importing module mux_128x1.
Importing module mux_2x1.
Importing module mux_64x1.
Importing module mux_32x1.
Importing module mux_16x1.
Importing module mux_8x1.
Importing module mux_4x1.

3.4.1. Analyzing design hierarchy..
Top module:  \wrapper_io_tc1
Used module:     \demux_128_2
Used module:         \demux_1x128
Used module:             \demux_1x64
Used module:                 \demux_1x32
Used module:                     \demux_1x16
Used module:                         \demux_1x8
Used module:                             \demux_1x4
Used module:                                 \demux_1x2
Used module:     \mux_128_2
Used module:         \mux_128x1
Used module:             \mux_2x1
Used module:             \mux_64x1
Used module:                 \mux_32x1
Used module:                     \mux_16x1
Used module:                         \mux_8x1
Used module:                             \mux_4x1

3.4.2. Analyzing design hierarchy..
Top module:  \wrapper_io_tc1
Used module:     \demux_128_2
Used module:         \demux_1x128
Used module:             \demux_1x64
Used module:                 \demux_1x32
Used module:                     \demux_1x16
Used module:                         \demux_1x8
Used module:                             \demux_1x4
Used module:                                 \demux_1x2
Used module:     \mux_128_2
Used module:         \mux_128x1
Used module:             \mux_2x1
Used module:             \mux_64x1
Used module:                 \mux_32x1
Used module:                     \mux_16x1
Used module:                         \mux_8x1
Used module:                             \mux_4x1
Removed 0 unused modules.

yosys> proc

3.5. Executing PROC pass (convert processes to netlists).

yosys> proc_clean

3.5.1. Executing PROC_CLEAN pass (remove empty switches from decision trees).
Cleaned up 0 empty switches.

yosys> proc_rmdead

3.5.2. Executing PROC_RMDEAD pass (remove dead branches from decision trees).
Removed a total of 0 dead cases.

yosys> proc_prune

3.5.3. Executing PROC_PRUNE pass (remove redundant assignments in processes).
Removed 0 redundant assignments.
Promoted 0 assignments to connections.

yosys> proc_init

3.5.4. Executing PROC_INIT pass (extract init attributes).

yosys> proc_arst

3.5.5. Executing PROC_ARST pass (detect async resets in processes).

yosys> proc_rom

3.5.6. Executing PROC_ROM pass (convert switches to ROMs).
Converted 0 switches.

yosys> proc_mux

3.5.7. Executing PROC_MUX pass (convert decision trees to multiplexers).

yosys> proc_dlatch

3.5.8. Executing PROC_DLATCH pass (convert process syncs to latches).

yosys> proc_dff

3.5.9. Executing PROC_DFF pass (convert process syncs to FFs).

yosys> proc_memwr

3.5.10. Executing PROC_MEMWR pass (convert process memory writes to cells).

yosys> proc_clean

3.5.11. Executing PROC_CLEAN pass (remove empty switches from decision trees).
Cleaned up 0 empty switches.

yosys> opt_expr -keepdc

3.5.12. Executing OPT_EXPR pass (perform const folding).
Optimizing module mux_4x1.
Optimizing module mux_8x1.
Optimizing module mux_16x1.
Optimizing module mux_32x1.
Optimizing module mux_64x1.
Optimizing module mux_2x1.
Optimizing module mux_128x1.
Optimizing module mux_128_2.
<suppressed ~12 debug messages>
Optimizing module demux_1x4.
Optimizing module demux_1x8.
Optimizing module demux_1x16.
Optimizing module demux_1x32.
Optimizing module demux_1x64.
Optimizing module demux_1x2.
Optimizing module demux_1x128.
Optimizing module demux_128_2.
<suppressed ~7 debug messages>
Optimizing module wrapper_io_tc1.

yosys> bmuxmap

3.6. Executing BMUXMAP pass.

yosys> demuxmap

3.7. Executing DEMUXMAP pass.

yosys> clean_zerowidth

yosys> flatten

3.8. Executing FLATTEN pass (flatten design).
Deleting now unused module demux_128_2.
Deleting now unused module demux_1x128.
Deleting now unused module demux_1x16.
Deleting now unused module demux_1x2.
Deleting now unused module demux_1x32.
Deleting now unused module demux_1x4.
Deleting now unused module demux_1x64.
Deleting now unused module demux_1x8.
Deleting now unused module mux_128_2.
Deleting now unused module mux_128x1.
Deleting now unused module mux_16x1.
Deleting now unused module mux_2x1.
Deleting now unused module mux_32x1.
Deleting now unused module mux_4x1.
Deleting now unused module mux_64x1.
Deleting now unused module mux_8x1.
<suppressed ~42 debug messages>

yosys> bmuxmap

3.9. Executing BMUXMAP pass.

yosys> demuxmap

3.10. Executing DEMUXMAP pass.

yosys> clean_zerowidth

yosys> tribuf -logic -formal

3.11. Executing TRIBUF pass.

yosys> deminout

3.12. Executing DEMINOUT pass (demote inout ports to input or output).

yosys> opt_expr

3.13. Executing OPT_EXPR pass (perform const folding).
Optimizing module wrapper_io_tc1.
<suppressed ~3 debug messages>

yosys> opt_clean

3.14. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \wrapper_io_tc1..
Removed 3 unused cells and 7164 unused wires.
<suppressed ~522 debug messages>

yosys> check

3.15. Executing CHECK pass (checking for obvious problems).
Checking module wrapper_io_tc1...
Found and reported 0 problems.

yosys> opt_expr

3.16. Executing OPT_EXPR pass (perform const folding).
Optimizing module wrapper_io_tc1.

yosys> opt_merge -nomux

3.17. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\wrapper_io_tc1'.
Removed a total of 0 cells.

yosys> opt_muxtree

3.18. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \wrapper_io_tc1..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Removed 0 multiplexer ports.
<suppressed ~138 debug messages>

yosys> opt_reduce

3.19. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \wrapper_io_tc1.
Performed a total of 0 changes.

yosys> opt_merge

3.20. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\wrapper_io_tc1'.
Removed a total of 0 cells.

yosys> opt_share

3.21. Executing OPT_SHARE pass.

yosys> opt_dff -nosdff -nodffe

3.22. Executing OPT_DFF pass (perform DFF optimizations).
Removing never-active CLR on $flatten\mux0.$verific$sel_internal1_reg$mux.v:27$953 ($dlatchsr) from module wrapper_io_tc1.
Removing never-active ARST on $flatten\mux0.$verific$sel_internal1_reg$mux.v:27$953 ($dlatchsr) from module wrapper_io_tc1.
Removing never-active CLR on $flatten\mux0.$verific$sel_internal0_reg$mux.v:27$938 ($dlatchsr) from module wrapper_io_tc1.
Removing never-active ARST on $flatten\mux0.$verific$sel_internal0_reg$mux.v:27$938 ($dlatchsr) from module wrapper_io_tc1.
Removing never-active CLR on $flatten\mux0.$verific$in_internal1_reg$mux.v:27$946 ($dlatchsr) from module wrapper_io_tc1.
Removing never-active ARST on $flatten\mux0.$verific$in_internal1_reg$mux.v:27$946 ($dlatchsr) from module wrapper_io_tc1.
Removing never-active CLR on $flatten\mux0.$verific$in_internal0_reg$mux.v:27$960 ($dlatchsr) from module wrapper_io_tc1.
Removing never-active ARST on $flatten\mux0.$verific$in_internal0_reg$mux.v:27$960 ($dlatchsr) from module wrapper_io_tc1.
Removing never-active CLR on $flatten\demux0.$verific$sel_internal1_reg$demux.v:27$297 ($dlatchsr) from module wrapper_io_tc1.
Removing never-active ARST on $flatten\demux0.$verific$sel_internal1_reg$demux.v:27$297 ($dlatchsr) from module wrapper_io_tc1.
Removing never-active CLR on $flatten\demux0.$verific$sel_internal0_reg$demux.v:27$304 ($dlatchsr) from module wrapper_io_tc1.
Removing never-active ARST on $flatten\demux0.$verific$sel_internal0_reg$demux.v:27$304 ($dlatchsr) from module wrapper_io_tc1.

yosys> opt_clean

3.23. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \wrapper_io_tc1..

yosys> opt_expr

3.24. Executing OPT_EXPR pass (perform const folding).
Optimizing module wrapper_io_tc1.
MAX OPT ITERATION = 1

yosys> fsm -encoding binary

3.25. Executing FSM pass (extract and optimize FSM).

yosys> fsm_detect

3.25.1. Executing FSM_DETECT pass (finding FSMs in design).

yosys> fsm_extract

3.25.2. Executing FSM_EXTRACT pass (extracting FSM from design).

yosys> fsm_opt

3.25.3. Executing FSM_OPT pass (simple optimizations of FSMs).

yosys> opt_clean

3.25.4. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \wrapper_io_tc1..

yosys> fsm_opt

3.25.5. Executing FSM_OPT pass (simple optimizations of FSMs).

yosys> fsm_recode -encoding binary

3.25.6. Executing FSM_RECODE pass (re-assigning FSM state encoding).

yosys> fsm_info

3.25.7. Executing FSM_INFO pass (dumping all available information on FSM cells).

yosys> fsm_map

3.25.8. Executing FSM_MAP pass (mapping FSMs to basic logic).

yosys> opt_expr

3.26. Executing OPT_EXPR pass (perform const folding).
Optimizing module wrapper_io_tc1.

yosys> opt_merge -nomux

3.27. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\wrapper_io_tc1'.
Removed a total of 0 cells.

yosys> opt_muxtree

3.28. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \wrapper_io_tc1..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Removed 0 multiplexer ports.
<suppressed ~138 debug messages>

yosys> opt_reduce

3.29. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \wrapper_io_tc1.
Performed a total of 0 changes.

yosys> opt_merge

3.30. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\wrapper_io_tc1'.
Removed a total of 0 cells.

yosys> opt_share

3.31. Executing OPT_SHARE pass.

yosys> opt_dff -nosdff -sat

3.32. Executing OPT_DFF pass (perform DFF optimizations).

yosys> opt_clean

3.33. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \wrapper_io_tc1..

yosys> opt_expr

3.34. Executing OPT_EXPR pass (perform const folding).
Optimizing module wrapper_io_tc1.
MAX OPT ITERATION = 1

yosys> wreduce -keepdc

3.35. Executing WREDUCE pass (reducing word size of cells).

yosys> peepopt

3.36. Executing PEEPOPT pass (run peephole optimizers).

yosys> opt_clean

3.37. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \wrapper_io_tc1..

yosys> bmuxmap

3.38. Executing BMUXMAP pass.

yosys> demuxmap

3.39. Executing DEMUXMAP pass.

yosys> clean_zerowidth

yosys> alumacc

3.40. Executing ALUMACC pass (create $alu and $macc cells).
Extracting $alu and $macc cells in module wrapper_io_tc1:
  created 0 $alu and 0 $macc cells.

yosys> opt_expr

3.41. Executing OPT_EXPR pass (perform const folding).
Optimizing module wrapper_io_tc1.

yosys> opt_merge -nomux

3.42. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\wrapper_io_tc1'.
Removed a total of 0 cells.

yosys> opt_muxtree

3.43. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \wrapper_io_tc1..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Removed 0 multiplexer ports.
<suppressed ~138 debug messages>

yosys> opt_reduce

3.44. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \wrapper_io_tc1.
Performed a total of 0 changes.

yosys> opt_merge

3.45. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\wrapper_io_tc1'.
Removed a total of 0 cells.

yosys> opt_share

3.46. Executing OPT_SHARE pass.

yosys> opt_dff -nosdff -nodffe

3.47. Executing OPT_DFF pass (perform DFF optimizations).

yosys> opt_clean

3.48. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \wrapper_io_tc1..

yosys> opt_expr

3.49. Executing OPT_EXPR pass (perform const folding).
Optimizing module wrapper_io_tc1.
MAX OPT ITERATION = 1

yosys> stat

3.50. Printing statistics.

=== wrapper_io_tc1 ===

   Number of wires:               2946
   Number of wire bits:           7952
   Number of public wires:        2944
   Number of public wire bits:    7950
   Number of memories:               0
   Number of memory bits:            0
   Number of processes:              0
   Number of cells:                520
     $dlatch                         8
     $mux                          512


yosys> memory -nomap

3.51. Executing MEMORY pass.

yosys> opt_mem

3.51.1. Executing OPT_MEM pass (optimize memories).
Performed a total of 0 transformations.

yosys> opt_mem_priority

3.51.2. Executing OPT_MEM_PRIORITY pass (removing unnecessary memory write priority relations).
Performed a total of 0 transformations.

yosys> opt_mem_feedback

3.51.3. Executing OPT_MEM_FEEDBACK pass (finding memory read-to-write feedback paths).

yosys> memory_bmux2rom

3.51.4. Executing MEMORY_BMUX2ROM pass (converting muxes to ROMs).

yosys> memory_dff

3.51.5. Executing MEMORY_DFF pass (merging $dff cells to $memrd).

yosys> opt_clean

3.51.6. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \wrapper_io_tc1..

yosys> memory_share

3.51.7. Executing MEMORY_SHARE pass (consolidating $memrd/$memwr cells).

yosys> opt_mem_widen

3.51.8. Executing OPT_MEM_WIDEN pass (optimize memories where all ports are wide).
Performed a total of 0 transformations.

yosys> opt_clean

3.51.9. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \wrapper_io_tc1..

yosys> memory_collect

3.51.10. Executing MEMORY_COLLECT pass (generating $mem cells).

yosys> stat

3.52. Printing statistics.

=== wrapper_io_tc1 ===

   Number of wires:               2946
   Number of wire bits:           7952
   Number of public wires:        2944
   Number of public wire bits:    7950
   Number of memories:               0
   Number of memory bits:            0
   Number of processes:              0
   Number of cells:                520
     $dlatch                         8
     $mux                          512


yosys> muxpack

3.53. Executing MUXPACK pass ($mux cell cascades to $pmux).
Converted 0 (p)mux cells into 0 pmux cells.
<suppressed ~511 debug messages>

yosys> opt_clean

3.54. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \wrapper_io_tc1..

yosys> pmuxtree

3.55. Executing PMUXTREE pass.

yosys> muxpack

3.56. Executing MUXPACK pass ($mux cell cascades to $pmux).
Converted 0 (p)mux cells into 0 pmux cells.
<suppressed ~511 debug messages>

yosys> memory_map

3.57. Executing MEMORY_MAP pass (converting memories to logic and flip-flops).

yosys> stat

3.58. Printing statistics.

=== wrapper_io_tc1 ===

   Number of wires:               2946
   Number of wire bits:           7952
   Number of public wires:        2944
   Number of public wire bits:    7950
   Number of memories:               0
   Number of memory bits:            0
   Number of processes:              0
   Number of cells:                520
     $dlatch                         8
     $mux                          512


yosys> techmap -map +/techmap.v -map +/rapidsilicon/genesis/arith_map.v

3.59. Executing TECHMAP pass (map to technology primitives).

3.59.1. Executing Verilog-2005 frontend: /nfs_scratch/scratch/Vorak/aram/Workspace/Raptor/yosys_verific_rs/yosys/install/bin/../share/yosys/techmap.v
Parsing Verilog input from `/nfs_scratch/scratch/Vorak/aram/Workspace/Raptor/yosys_verific_rs/yosys/install/bin/../share/yosys/techmap.v' to AST representation.
Generating RTLIL representation for module `\_90_simplemap_bool_ops'.
Generating RTLIL representation for module `\_90_simplemap_reduce_ops'.
Generating RTLIL representation for module `\_90_simplemap_logic_ops'.
Generating RTLIL representation for module `\_90_simplemap_compare_ops'.
Generating RTLIL representation for module `\_90_simplemap_various'.
Generating RTLIL representation for module `\_90_simplemap_registers'.
Generating RTLIL representation for module `\_90_shift_ops_shr_shl_sshl_sshr'.
Generating RTLIL representation for module `\_90_shift_shiftx'.
Generating RTLIL representation for module `\_90_fa'.
Generating RTLIL representation for module `\_90_lcu'.
Generating RTLIL representation for module `\_90_alu'.
Generating RTLIL representation for module `\_90_macc'.
Generating RTLIL representation for module `\_90_alumacc'.
Generating RTLIL representation for module `\$__div_mod_u'.
Generating RTLIL representation for module `\$__div_mod_trunc'.
Generating RTLIL representation for module `\_90_div'.
Generating RTLIL representation for module `\_90_mod'.
Generating RTLIL representation for module `\$__div_mod_floor'.
Generating RTLIL representation for module `\_90_divfloor'.
Generating RTLIL representation for module `\_90_modfloor'.
Generating RTLIL representation for module `\_90_pow'.
Generating RTLIL representation for module `\_90_pmux'.
Generating RTLIL representation for module `\_90_demux'.
Generating RTLIL representation for module `\_90_lut'.
Successfully finished Verilog frontend.

3.59.2. Executing Verilog-2005 frontend: /nfs_scratch/scratch/Vorak/aram/Workspace/Raptor/yosys_verific_rs/yosys/install/bin/../share/yosys/rapidsilicon/genesis/arith_map.v
Parsing Verilog input from `/nfs_scratch/scratch/Vorak/aram/Workspace/Raptor/yosys_verific_rs/yosys/install/bin/../share/yosys/rapidsilicon/genesis/arith_map.v' to AST representation.
Generating RTLIL representation for module `\_80_rs_alu'.
Successfully finished Verilog frontend.

3.59.3. Continuing TECHMAP pass.
Using extmapper simplemap for cells of type $mux.
Using extmapper simplemap for cells of type $dlatch.
No more expansions possible.
<suppressed ~591 debug messages>

yosys> stat

3.60. Printing statistics.

=== wrapper_io_tc1 ===

   Number of wires:               2946
   Number of wire bits:           7952
   Number of public wires:        2944
   Number of public wire bits:    7950
   Number of memories:               0
   Number of memory bits:            0
   Number of processes:              0
   Number of cells:               1179
     $_DLATCH_N_                   143
     $_DLATCH_P_                   143
     $_MUX_                        893


yosys> opt_expr

3.61. Executing OPT_EXPR pass (perform const folding).
Optimizing module wrapper_io_tc1.
<suppressed ~2 debug messages>

yosys> opt_merge -nomux

3.62. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\wrapper_io_tc1'.
Removed a total of 0 cells.

yosys> opt_muxtree

3.63. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \wrapper_io_tc1..
  Creating internal representation of mux trees.
  No muxes found in this module.
Removed 0 multiplexer ports.

yosys> opt_reduce

3.64. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \wrapper_io_tc1.
Performed a total of 0 changes.

yosys> opt_merge

3.65. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\wrapper_io_tc1'.
Removed a total of 0 cells.

yosys> opt_share

3.66. Executing OPT_SHARE pass.

yosys> opt_dff -nosdff -nodffe

3.67. Executing OPT_DFF pass (perform DFF optimizations).

yosys> opt_clean

3.68. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \wrapper_io_tc1..
Removed 0 unused cells and 2 unused wires.
<suppressed ~1 debug messages>

yosys> opt_expr

3.69. Executing OPT_EXPR pass (perform const folding).
Optimizing module wrapper_io_tc1.
MAX OPT ITERATION = 1

yosys> opt_expr -full

3.70. Executing OPT_EXPR pass (perform const folding).
Optimizing module wrapper_io_tc1.
<suppressed ~254 debug messages>

yosys> techmap -map +/techmap.v

3.71. Executing TECHMAP pass (map to technology primitives).

3.71.1. Executing Verilog-2005 frontend: /nfs_scratch/scratch/Vorak/aram/Workspace/Raptor/yosys_verific_rs/yosys/install/bin/../share/yosys/techmap.v
Parsing Verilog input from `/nfs_scratch/scratch/Vorak/aram/Workspace/Raptor/yosys_verific_rs/yosys/install/bin/../share/yosys/techmap.v' to AST representation.
Generating RTLIL representation for module `\_90_simplemap_bool_ops'.
Generating RTLIL representation for module `\_90_simplemap_reduce_ops'.
Generating RTLIL representation for module `\_90_simplemap_logic_ops'.
Generating RTLIL representation for module `\_90_simplemap_compare_ops'.
Generating RTLIL representation for module `\_90_simplemap_various'.
Generating RTLIL representation for module `\_90_simplemap_registers'.
Generating RTLIL representation for module `\_90_shift_ops_shr_shl_sshl_sshr'.
Generating RTLIL representation for module `\_90_shift_shiftx'.
Generating RTLIL representation for module `\_90_fa'.
Generating RTLIL representation for module `\_90_lcu'.
Generating RTLIL representation for module `\_90_alu'.
Generating RTLIL representation for module `\_90_macc'.
Generating RTLIL representation for module `\_90_alumacc'.
Generating RTLIL representation for module `\$__div_mod_u'.
Generating RTLIL representation for module `\$__div_mod_trunc'.
Generating RTLIL representation for module `\_90_div'.
Generating RTLIL representation for module `\_90_mod'.
Generating RTLIL representation for module `\$__div_mod_floor'.
Generating RTLIL representation for module `\_90_divfloor'.
Generating RTLIL representation for module `\_90_modfloor'.
Generating RTLIL representation for module `\_90_pow'.
Generating RTLIL representation for module `\_90_pmux'.
Generating RTLIL representation for module `\_90_demux'.
Generating RTLIL representation for module `\_90_lut'.
Successfully finished Verilog frontend.

3.71.2. Continuing TECHMAP pass.
No more expansions possible.
<suppressed ~71 debug messages>

yosys> opt_expr

3.72. Executing OPT_EXPR pass (perform const folding).
Optimizing module wrapper_io_tc1.

yosys> opt_merge -nomux

3.73. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\wrapper_io_tc1'.
Removed a total of 0 cells.

yosys> opt_muxtree

3.74. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \wrapper_io_tc1..
  Creating internal representation of mux trees.
  No muxes found in this module.
Removed 0 multiplexer ports.

yosys> opt_reduce

3.75. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \wrapper_io_tc1.
Performed a total of 0 changes.

yosys> opt_merge

3.76. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\wrapper_io_tc1'.
Removed a total of 0 cells.

yosys> opt_dff -nosdff -nodffe -sat

3.77. Executing OPT_DFF pass (perform DFF optimizations).

yosys> opt_clean

3.78. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \wrapper_io_tc1..

yosys> opt_expr

3.79. Executing OPT_EXPR pass (perform const folding).
Optimizing module wrapper_io_tc1.
MAX OPT ITERATION = 1

yosys> abc -dff

3.80. Executing ABC pass (technology mapping using ABC).

3.80.1. Summary of detected clock domains:
  1177 cells in clk={ }, en={ }, arst={ }, srst={ }

3.80.2. Extracting gate netlist of module `\wrapper_io_tc1' to `<abc-temp-dir>/input.blif'..
No matching clock domain found. Not extracting any FF cells.
Extracted 891 gates and 1180 wires to a netlist network with 288 inputs and 129 outputs.

3.80.2.1. Executing ABC.

yosys> abc -dff

3.81. Executing ABC pass (technology mapping using ABC).

3.81.1. Summary of detected clock domains:
  1409 cells in clk={ }, en={ }, arst={ }, srst={ }

3.81.2. Extracting gate netlist of module `\wrapper_io_tc1' to `<abc-temp-dir>/input.blif'..
No matching clock domain found. Not extracting any FF cells.
Extracted 1123 gates and 1411 wires to a netlist network with 288 inputs and 129 outputs.

3.81.2.1. Executing ABC.

yosys> abc -dff

3.82. Executing ABC pass (technology mapping using ABC).

3.82.1. Summary of detected clock domains:
  1387 cells in clk={ }, en={ }, arst={ }, srst={ }

3.82.2. Extracting gate netlist of module `\wrapper_io_tc1' to `<abc-temp-dir>/input.blif'..
No matching clock domain found. Not extracting any FF cells.
Extracted 1101 gates and 1389 wires to a netlist network with 288 inputs and 129 outputs.

3.82.2.1. Executing ABC.

yosys> abc -dff

3.83. Executing ABC pass (technology mapping using ABC).

3.83.1. Summary of detected clock domains:
  1365 cells in clk={ }, en={ }, arst={ }, srst={ }

3.83.2. Extracting gate netlist of module `\wrapper_io_tc1' to `<abc-temp-dir>/input.blif'..
No matching clock domain found. Not extracting any FF cells.
Extracted 1079 gates and 1367 wires to a netlist network with 288 inputs and 129 outputs.

3.83.2.1. Executing ABC.

yosys> opt_ffinv

3.84. Executing OPT_FFINV pass (push inverters through FFs).
Discovering LUTs.
Pushed 0 inverters.

yosys> opt_expr

3.85. Executing OPT_EXPR pass (perform const folding).
Optimizing module wrapper_io_tc1.

yosys> opt_merge -nomux

3.86. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\wrapper_io_tc1'.
Removed a total of 0 cells.

yosys> opt_muxtree

3.87. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \wrapper_io_tc1..
  Creating internal representation of mux trees.
  No muxes found in this module.
Removed 0 multiplexer ports.

yosys> opt_reduce

3.88. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \wrapper_io_tc1.
Performed a total of 0 changes.

yosys> opt_merge

3.89. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\wrapper_io_tc1'.
Removed a total of 0 cells.

yosys> opt_share

3.90. Executing OPT_SHARE pass.

yosys> opt_dff -nosdff -sat

3.91. Executing OPT_DFF pass (perform DFF optimizations).

yosys> opt_clean

3.92. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \wrapper_io_tc1..
Removed 0 unused cells and 6354 unused wires.
<suppressed ~1771 debug messages>

yosys> opt_expr

3.93. Executing OPT_EXPR pass (perform const folding).
Optimizing module wrapper_io_tc1.
MAX OPT ITERATION = 1

yosys> bmuxmap

3.94. Executing BMUXMAP pass.

yosys> demuxmap

3.95. Executing DEMUXMAP pass.

yosys> clean_zerowidth

yosys> abc -script /tmp/yosys_F7ULjf/abc_tmp_1.scr

3.96. Executing ABC pass (technology mapping using ABC).

3.96.1. Extracting gate netlist of module `\wrapper_io_tc1' to `<abc-temp-dir>/input.blif'..
Extracted 1091 gates and 1379 wires to a netlist network with 288 inputs and 129 outputs.

3.96.1.1. Executing ABC.
DE:   #PIs = 288  #Luts =   318  Max Lvl =   5  Avg Lvl =   2.02  [   0.17 sec. at Pass 0]{firstMap}
DE:   #PIs = 288  #Luts =   286  Max Lvl =   6  Avg Lvl =   2.03  [   1.85 sec. at Pass 1]{initMapFlow}
DE:   #PIs = 288  #Luts =   285  Max Lvl =   5  Avg Lvl =   2.02  [   0.73 sec. at Pass 2]{map}
DE:   #PIs = 288  #Luts =   285  Max Lvl =   5  Avg Lvl =   2.02  [   1.05 sec. at Pass 3]{postMap}
DE:   #PIs = 288  #Luts =   285  Max Lvl =   5  Avg Lvl =   2.02  [   0.86 sec. at Pass 4]{map}
DE:   #PIs = 288  #Luts =   284  Max Lvl =   5  Avg Lvl =   2.02  [   1.80 sec. at Pass 5]{postMap}
DE:   #PIs = 288  #Luts =   284  Max Lvl =   5  Avg Lvl =   2.02  [   1.22 sec. at Pass 6]{map}
DE:   #PIs = 288  #Luts =   284  Max Lvl =   5  Avg Lvl =   2.02  [   1.53 sec. at Pass 7]{postMap}
DE:   #PIs = 288  #Luts =   284  Max Lvl =   5  Avg Lvl =   2.02  [   1.44 sec. at Pass 8]{map}
DE:   #PIs = 288  #Luts =   283  Max Lvl =   5  Avg Lvl =   2.02  [   4.20 sec. at Pass 9]{pushMap}
DE:   #PIs = 288  #Luts =   283  Max Lvl =   5  Avg Lvl =   2.02  [   1.59 sec. at Pass 10]{postMap}
DE:   #PIs = 288  #Luts =   283  Max Lvl =   5  Avg Lvl =   2.02  [   0.96 sec. at Pass 11]{map}
DE:   #PIs = 288  #Luts =   274  Max Lvl =   5  Avg Lvl =   2.40  [   1.47 sec. at Pass 12]{postMap}
DE:   #PIs = 288  #Luts =   274  Max Lvl =   5  Avg Lvl =   2.40  [   1.65 sec. at Pass 13]{map}
DE:   #PIs = 288  #Luts =   270  Max Lvl =   6  Avg Lvl =   2.20  [   1.80 sec. at Pass 14]{postMap}
DE:   #PIs = 288  #Luts =   269  Max Lvl =   6  Avg Lvl =   2.03  [   1.34 sec. at Pass 15]{map}
DE:   #PIs = 288  #Luts =   265  Max Lvl =   5  Avg Lvl =   2.71  [   2.09 sec. at Pass 16]{postMap}
DE:   #PIs = 288  #Luts =   265  Max Lvl =   5  Avg Lvl =   2.71  [   1.29 sec. at Pass 17]{map}
DE:   #PIs = 288  #Luts =   259  Max Lvl =   5  Avg Lvl =   2.46  [   2.44 sec. at Pass 18]{postMap}
DE:   #PIs = 288  #Luts =   255  Max Lvl =   5  Avg Lvl =   2.41  [   1.26 sec. at Pass 19]{map}
DE:   #PIs = 288  #Luts =   255  Max Lvl =   5  Avg Lvl =   2.41  [   2.10 sec. at Pass 20]{postMap}
DE:   #PIs = 288  #Luts =   255  Max Lvl =   5  Avg Lvl =   2.41  [   1.22 sec. at Pass 21]{map}
DE:   #PIs = 288  #Luts =   255  Max Lvl =   5  Avg Lvl =   2.41  [   1.62 sec. at Pass 22]{postMap}
DE:   #PIs = 288  #Luts =   254  Max Lvl =   5  Avg Lvl =   2.02  [   2.93 sec. at Pass 23]{pushMap}
DE:   #PIs = 288  #Luts =   252  Max Lvl =   6  Avg Lvl =   2.03  [   1.22 sec. at Pass 24]{map}
DE:   #PIs = 288  #Luts =   251  Max Lvl =   5  Avg Lvl =   2.02  [   1.26 sec. at Pass 25]{postMap}
DE:   #PIs = 288  #Luts =   251  Max Lvl =   5  Avg Lvl =   2.02  [   0.88 sec. at Pass 26]{map}
DE:   #PIs = 288  #Luts =   251  Max Lvl =   5  Avg Lvl =   2.02  [   1.61 sec. at Pass 27]{postMap}
DE:   #PIs = 288  #Luts =   251  Max Lvl =   5  Avg Lvl =   2.02  [   1.09 sec. at Pass 28]{map}
DE:   #PIs = 288  #Luts =   250  Max Lvl =   5  Avg Lvl =   2.02  [   3.20 sec. at Pass 29]{pushMap}
DE:   #PIs = 288  #Luts =   250  Max Lvl =   5  Avg Lvl =   2.02  [   1.36 sec. at Pass 30]{postMap}
DE:   #PIs = 288  #Luts =   250  Max Lvl =   5  Avg Lvl =   2.02  [   0.72 sec. at Pass 31]{map}
DE:   #PIs = 288  #Luts =   250  Max Lvl =   5  Avg Lvl =   2.02  [   1.23 sec. at Pass 32]{postMap}
DE:   #PIs = 288  #Luts =   250  Max Lvl =   5  Avg Lvl =   2.02  [   2.93 sec. at Pass 33]{pushMap}
DE:   #PIs = 288  #Luts =   250  Max Lvl =   5  Avg Lvl =   2.02  [   0.64 sec. at Pass 34]{finalMap}

yosys> opt_expr

3.97. Executing OPT_EXPR pass (perform const folding).
Optimizing module wrapper_io_tc1.

yosys> opt_merge -nomux

3.98. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\wrapper_io_tc1'.
Removed a total of 0 cells.

yosys> opt_muxtree

3.99. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \wrapper_io_tc1..
  Creating internal representation of mux trees.
  No muxes found in this module.
Removed 0 multiplexer ports.

yosys> opt_reduce

3.100. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \wrapper_io_tc1.
Performed a total of 0 changes.

yosys> opt_merge

3.101. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\wrapper_io_tc1'.
Removed a total of 0 cells.

yosys> opt_share

3.102. Executing OPT_SHARE pass.

yosys> opt_dff -nosdff -nodffe

3.103. Executing OPT_DFF pass (perform DFF optimizations).

yosys> opt_clean

3.104. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \wrapper_io_tc1..
Removed 0 unused cells and 1379 unused wires.
<suppressed ~1 debug messages>

yosys> opt_expr

3.105. Executing OPT_EXPR pass (perform const folding).
Optimizing module wrapper_io_tc1.
MAX OPT ITERATION = 1

yosys> opt_ffinv

3.106. Executing OPT_FFINV pass (push inverters through FFs).
Discovering LUTs.
Pushed 0 inverters.

yosys> stat

3.107. Printing statistics.

=== wrapper_io_tc1 ===

   Number of wires:               1295
   Number of wire bits:           4257
   Number of public wires:        1174
   Number of public wire bits:    4136
   Number of memories:               0
   Number of memory bits:            0
   Number of processes:              0
   Number of cells:                536
     $_DLATCH_N_                   143
     $_DLATCH_P_                   143
     $lut                          250


yosys> shregmap -minlen 8 -maxlen 20

3.108. Executing SHREGMAP pass (map shift registers).
Converted 0 dff cells into 0 shift registers.

yosys> dfflegalize -cell $_DFF_?_ 0 -cell $_DFF_???_ 0 -cell $_DFFE_????_ 0 -cell $_DFFSR_???_ 0 -cell $_DFFSRE_????_ 0 -cell $_DLATCHSR_PPP_ 0

3.109. Executing DFFLEGALIZE pass (convert FFs to types supported by the target).

yosys> stat

3.110. Printing statistics.

=== wrapper_io_tc1 ===

   Number of wires:               1438
   Number of wire bits:           4400
   Number of public wires:        1174
   Number of public wire bits:    4136
   Number of memories:               0
   Number of memory bits:            0
   Number of processes:              0
   Number of cells:                679
     $_DLATCHSR_PPP_               286
     $_NOT_                        143
     $lut                          250


yosys> techmap -map +/techmap.v -map +/rapidsilicon/genesis/ffs_map.v

3.111. Executing TECHMAP pass (map to technology primitives).

3.111.1. Executing Verilog-2005 frontend: /nfs_scratch/scratch/Vorak/aram/Workspace/Raptor/yosys_verific_rs/yosys/install/bin/../share/yosys/techmap.v
Parsing Verilog input from `/nfs_scratch/scratch/Vorak/aram/Workspace/Raptor/yosys_verific_rs/yosys/install/bin/../share/yosys/techmap.v' to AST representation.
Generating RTLIL representation for module `\_90_simplemap_bool_ops'.
Generating RTLIL representation for module `\_90_simplemap_reduce_ops'.
Generating RTLIL representation for module `\_90_simplemap_logic_ops'.
Generating RTLIL representation for module `\_90_simplemap_compare_ops'.
Generating RTLIL representation for module `\_90_simplemap_various'.
Generating RTLIL representation for module `\_90_simplemap_registers'.
Generating RTLIL representation for module `\_90_shift_ops_shr_shl_sshl_sshr'.
Generating RTLIL representation for module `\_90_shift_shiftx'.
Generating RTLIL representation for module `\_90_fa'.
Generating RTLIL representation for module `\_90_lcu'.
Generating RTLIL representation for module `\_90_alu'.
Generating RTLIL representation for module `\_90_macc'.
Generating RTLIL representation for module `\_90_alumacc'.
Generating RTLIL representation for module `\$__div_mod_u'.
Generating RTLIL representation for module `\$__div_mod_trunc'.
Generating RTLIL representation for module `\_90_div'.
Generating RTLIL representation for module `\_90_mod'.
Generating RTLIL representation for module `\$__div_mod_floor'.
Generating RTLIL representation for module `\_90_divfloor'.
Generating RTLIL representation for module `\_90_modfloor'.
Generating RTLIL representation for module `\_90_pow'.
Generating RTLIL representation for module `\_90_pmux'.
Generating RTLIL representation for module `\_90_demux'.
Generating RTLIL representation for module `\_90_lut'.
Successfully finished Verilog frontend.

3.111.2. Executing Verilog-2005 frontend: /nfs_scratch/scratch/Vorak/aram/Workspace/Raptor/yosys_verific_rs/yosys/install/bin/../share/yosys/rapidsilicon/genesis/ffs_map.v
Parsing Verilog input from `/nfs_scratch/scratch/Vorak/aram/Workspace/Raptor/yosys_verific_rs/yosys/install/bin/../share/yosys/rapidsilicon/genesis/ffs_map.v' to AST representation.
Generating RTLIL representation for module `\$_DFF_P_'.
Generating RTLIL representation for module `\$_DFF_PP0_'.
Generating RTLIL representation for module `\$_DFF_PN0_'.
Generating RTLIL representation for module `\$_DFF_PP1_'.
Generating RTLIL representation for module `\$_DFF_PN1_'.
Generating RTLIL representation for module `\$_DFFE_PP_'.
Generating RTLIL representation for module `\$_DFFE_PN_'.
Generating RTLIL representation for module `\$_DFFE_PP0P_'.
Generating RTLIL representation for module `\$_DFFE_PP0N_'.
Generating RTLIL representation for module `\$_DFFE_PN0P_'.
Generating RTLIL representation for module `\$_DFFE_PN0N_'.
Generating RTLIL representation for module `\$_DFFE_PP1P_'.
Generating RTLIL representation for module `\$_DFFE_PP1N_'.
Generating RTLIL representation for module `\$_DFFE_PN1P_'.
Generating RTLIL representation for module `\$_DFFE_PN1N_'.
Generating RTLIL representation for module `\$_DFFSR_PPP_'.
Generating RTLIL representation for module `\$_DFFSR_PNP_'.
Generating RTLIL representation for module `\$_DFFSR_PNN_'.
Generating RTLIL representation for module `\$_DFFSR_PPN_'.
Generating RTLIL representation for module `\$_DFFSR_NPP_'.
Generating RTLIL representation for module `\$_DFFSR_NNP_'.
Generating RTLIL representation for module `\$_DFFSR_NNN_'.
Generating RTLIL representation for module `\$_DFFSR_NPN_'.
Generating RTLIL representation for module `\$_DFFSRE_PPPP_'.
Generating RTLIL representation for module `\$_DFFSRE_PNPP_'.
Generating RTLIL representation for module `\$_DFFSRE_PPNP_'.
Generating RTLIL representation for module `\$_DFFSRE_PNNP_'.
Generating RTLIL representation for module `\$_DFFSRE_PPPN_'.
Generating RTLIL representation for module `\$_DFFSRE_PNPN_'.
Generating RTLIL representation for module `\$_DFFSRE_PPNN_'.
Generating RTLIL representation for module `\$_DFFSRE_PNNN_'.
Generating RTLIL representation for module `\$_DLATCHSR_PPP_'.
Generating RTLIL representation for module `\$_DLATCHSR_NPP_'.
Generating RTLIL representation for module `\$_DFF_N_'.
Generating RTLIL representation for module `\$_DFF_NP0_'.
Generating RTLIL representation for module `\$_DFF_NN0_'.
Generating RTLIL representation for module `\$_DFF_NP1_'.
Generating RTLIL representation for module `\$_DFF_NN1_'.
Generating RTLIL representation for module `\$_DFFE_NP_'.
Generating RTLIL representation for module `\$_DFFE_NN_'.
Generating RTLIL representation for module `\$_DFFE_NP0P_'.
Generating RTLIL representation for module `\$_DFFE_NP0N_'.
Generating RTLIL representation for module `\$_DFFE_NN0P_'.
Generating RTLIL representation for module `\$_DFFE_NN0N_'.
Generating RTLIL representation for module `\$_DFFE_NP1P_'.
Generating RTLIL representation for module `\$_DFFE_NP1N_'.
Generating RTLIL representation for module `\$_DFFE_NN1P_'.
Generating RTLIL representation for module `\$_DFFE_NN1N_'.
Generating RTLIL representation for module `\$_DFFSRE_NPPP_'.
Generating RTLIL representation for module `\$_DFFSRE_NNPP_'.
Generating RTLIL representation for module `\$_DFFSRE_NPNP_'.
Generating RTLIL representation for module `\$_DFFSRE_NNNP_'.
Generating RTLIL representation for module `\$_DFFSRE_NPPN_'.
Generating RTLIL representation for module `\$_DFFSRE_NNPN_'.
Generating RTLIL representation for module `\$_DFFSRE_NPNN_'.
Generating RTLIL representation for module `\$_DFFSRE_NNNN_'.
Generating RTLIL representation for module `\$__SHREG_DFF_P_'.
Generating RTLIL representation for module `\$_SDFF_PP0_'.
Generating RTLIL representation for module `\$_SDFF_PN0_'.
Generating RTLIL representation for module `\$_SDFF_NP0_'.
Generating RTLIL representation for module `\$_SDFF_NN0_'.
Generating RTLIL representation for module `\$_SDFF_PP1_'.
Generating RTLIL representation for module `\$_SDFF_PN1_'.
Generating RTLIL representation for module `\$_SDFF_NP1_'.
Generating RTLIL representation for module `\$_SDFF_NN1_'.
Successfully finished Verilog frontend.

3.111.3. Continuing TECHMAP pass.
Using template \$_DLATCHSR_PPP_ for cells of type $_DLATCHSR_PPP_.
Using extmapper simplemap for cells of type $lut.
Using extmapper simplemap for cells of type $logic_not.
No more expansions possible.
<suppressed ~1244 debug messages>

yosys> opt_expr -mux_undef

3.112. Executing OPT_EXPR pass (perform const folding).
Optimizing module wrapper_io_tc1.
<suppressed ~11796 debug messages>

yosys> simplemap

3.113. Executing SIMPLEMAP pass (map simple cells to gate primitives).

yosys> opt_expr

3.114. Executing OPT_EXPR pass (perform const folding).
Optimizing module wrapper_io_tc1.

yosys> opt_merge

3.115. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\wrapper_io_tc1'.
<suppressed ~6297 debug messages>
Removed a total of 2099 cells.

yosys> opt_dff -nodffe -nosdff

3.116. Executing OPT_DFF pass (perform DFF optimizations).

yosys> opt_clean

3.117. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \wrapper_io_tc1..
Removed 0 unused cells and 2882 unused wires.
<suppressed ~1 debug messages>

yosys> opt_expr

3.118. Executing OPT_EXPR pass (perform const folding).
Optimizing module wrapper_io_tc1.
<suppressed ~390 debug messages>

yosys> opt_merge -nomux

3.119. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\wrapper_io_tc1'.
Removed a total of 0 cells.

yosys> opt_muxtree

3.120. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \wrapper_io_tc1..
  Creating internal representation of mux trees.
  No muxes found in this module.
Removed 0 multiplexer ports.

yosys> opt_reduce

3.121. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \wrapper_io_tc1.
Performed a total of 0 changes.

yosys> opt_merge

3.122. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\wrapper_io_tc1'.
Removed a total of 0 cells.

yosys> opt_share

3.123. Executing OPT_SHARE pass.

yosys> opt_dff -nosdff -nodffe

3.124. Executing OPT_DFF pass (perform DFF optimizations).

yosys> opt_clean

3.125. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \wrapper_io_tc1..
Removed 0 unused cells and 5 unused wires.
<suppressed ~1 debug messages>

yosys> opt_expr

3.126. Executing OPT_EXPR pass (perform const folding).
Optimizing module wrapper_io_tc1.
MAX OPT ITERATION = 1

yosys> abc -script /tmp/yosys_F7ULjf/abc_tmp_2.scr

3.127. Executing ABC pass (technology mapping using ABC).

3.127.1. Extracting gate netlist of module `\wrapper_io_tc1' to `<abc-temp-dir>/input.blif'..
Extracted 1036 gates and 1326 wires to a netlist network with 288 inputs and 131 outputs.

3.127.1.1. Executing ABC.
DE:   #PIs = 288  #Luts =   252  Max Lvl =   5  Avg Lvl =   1.99  [   0.15 sec. at Pass 0]{firstMap}
DE:   #PIs = 288  #Luts =   252  Max Lvl =   5  Avg Lvl =   1.99  [   3.35 sec. at Pass 1]{initMapFlow}
DE:   #PIs = 288  #Luts =   252  Max Lvl =   5  Avg Lvl =   1.99  [   0.87 sec. at Pass 2]{map}
DE:   #PIs = 288  #Luts =   252  Max Lvl =   5  Avg Lvl =   1.99  [   1.30 sec. at Pass 3]{postMap}
DE:   #PIs = 288  #Luts =   252  Max Lvl =   5  Avg Lvl =   1.99  [   0.81 sec. at Pass 4]{map}
DE:   #PIs = 288  #Luts =   252  Max Lvl =   5  Avg Lvl =   1.99  [   1.16 sec. at Pass 5]{postMap}
DE:   #PIs = 288  #Luts =   252  Max Lvl =   5  Avg Lvl =   1.99  [   2.55 sec. at Pass 6]{pushMap}
DE:   #PIs = 288  #Luts =   252  Max Lvl =   5  Avg Lvl =   1.99  [   0.42 sec. at Pass 7]{finalMap}

yosys> opt_expr

3.128. Executing OPT_EXPR pass (perform const folding).
Optimizing module wrapper_io_tc1.

yosys> opt_merge -nomux

3.129. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\wrapper_io_tc1'.
Removed a total of 0 cells.

yosys> opt_muxtree

3.130. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \wrapper_io_tc1..
  Creating internal representation of mux trees.
  No muxes found in this module.
Removed 0 multiplexer ports.

yosys> opt_reduce

3.131. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \wrapper_io_tc1.
Performed a total of 0 changes.

yosys> opt_merge

3.132. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\wrapper_io_tc1'.
Removed a total of 0 cells.

yosys> opt_share

3.133. Executing OPT_SHARE pass.

yosys> opt_dff -nosdff -nodffe

3.134. Executing OPT_DFF pass (perform DFF optimizations).

yosys> opt_clean

3.135. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \wrapper_io_tc1..
Removed 0 unused cells and 1240 unused wires.
<suppressed ~1 debug messages>

yosys> opt_expr

3.136. Executing OPT_EXPR pass (perform const folding).
Optimizing module wrapper_io_tc1.
MAX OPT ITERATION = 1

yosys> hierarchy -check

3.137. Executing HIERARCHY pass (managing design hierarchy).

3.137.1. Analyzing design hierarchy..
Top module:  \wrapper_io_tc1

3.137.2. Analyzing design hierarchy..
Top module:  \wrapper_io_tc1
Removed 0 unused modules.

yosys> stat

3.138. Printing statistics.

=== wrapper_io_tc1 ===

   Number of wires:               1297
   Number of wire bits:           4259
   Number of public wires:        1174
   Number of public wire bits:    4136
   Number of memories:               0
   Number of memory bits:            0
   Number of processes:              0
   Number of cells:                538
     $lut                          252
     latchsre                      286


yosys> opt_clean -purge

3.139. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \wrapper_io_tc1..
Removed 0 unused cells and 879 unused wires.
<suppressed ~879 debug messages>

yosys> write_verilog -noattr -nohex synthesized.v

3.140. Executing Verilog backend.
Dumping module `\wrapper_io_tc1'.

Warnings: 2 unique messages, 2 total
End of script. Logfile hash: fa4888ddc0, CPU: user 4.77s system 0.07s, MEM: 69.84 MB peak
Yosys 0.18+10 (git sha1 7361c89db, gcc 9.4.0-1ubuntu1~20.04.1 -fPIC -Os)
Time spent: 98% 6x abc (260 sec), 0% 23x opt_expr (1 sec), ...
real 80.35
user 245.80
sys 19.22
