
 /----------------------------------------------------------------------------\
 |                                                                            |
 |  yosys -- Yosys Open SYnthesis Suite                                       |
 |                                                                            |
 |  Copyright (C) 2012 - 2020  Claire Xenia Wolf <claire@yosyshq.com>         |
 |                                                                            |
 |  Permission to use, copy, modify, and/or distribute this software for any  |
 |  purpose with or without fee is hereby granted, provided that the above    |
 |  copyright notice and this permission notice appear in all copies.         |
 |                                                                            |
 |  THE SOFTWARE IS PROVIDED "AS IS" AND THE AUTHOR DISCLAIMS ALL WARRANTIES  |
 |  WITH REGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF          |
 |  MERCHANTABILITY AND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR   |
 |  ANY SPECIAL, DIRECT, INDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES    |
 |  WHATSOEVER RESULTING FROM LOSS OF USE, DATA OR PROFITS, WHETHER IN AN     |
 |  ACTION OF CONTRACT, NEGLIGENCE OR OTHER TORTIOUS ACTION, ARISING OUT OF   |
 |  OR IN CONNECTION WITH THE USE OR PERFORMANCE OF THIS SOFTWARE.            |
 |                                                                            |
 \----------------------------------------------------------------------------/

 Yosys-Verific 0.0.92
 Yosys 0.18+10 (git sha1 7361c89db, gcc 9.4.0-1ubuntu1~20.04.1 -fPIC -Os)


-- Executing script file `yosys.ys' --
echo on

yosys> plugin -i synth-rs

yosys> read -verific

yosys> read -incdir .

yosys> verific -vlog-incdir .

1. Executing VERIFIC (loading SystemVerilog and VHDL designs using Verific).
Built with Verific May22_SW_Release, released at Wed Jun  1 05:39:28 2022.

yosys> verilog_defaults -add -I.

yosys> read -vhdl b11.vhd

yosys> verific -vhdl b11.vhd

2. Executing VERIFIC (loading SystemVerilog and VHDL designs using Verific).
Built with Verific May22_SW_Release, released at Wed Jun  1 05:39:28 2022.
VERIFIC-INFO [VHDL-1504] default VHDL library search path is now "/nfs_scratch/scratch/Vorak/aram/Workspace/Raptor/yosys_verific_rs/yosys/install/share/yosys/verific/vhdl_vdbs_2008"
VERIFIC-COMMENT [VHDL-1481] Analyzing VHDL file 'b11.vhd'
VERIFIC-COMMENT [VHDL-1493] Restoring VHDL unit 'std.standard' from file '/nfs_scratch/scratch/Vorak/aram/Workspace/Raptor/yosys_verific_rs/yosys/install/share/yosys/verific/vhdl_vdbs_2008/std/standard.vdb'
VERIFIC-INFO [VHDL-1012] b11.vhd:1: analyzing entity 'b11'
VERIFIC-INFO [VHDL-1010] b11.vhd:11: analyzing architecture 'behav'

yosys> synth_rs -top b11 -tech genesis -goal area -de -no_dsp -no_bram -verilog synthesized.v

3. Executing synth_rs pass: v0.4.79

yosys> read_verilog -lib -specify -nomem2reg +/rapidsilicon/common/cells_sim.v +/rapidsilicon/genesis/cells_sim.v +/rapidsilicon/genesis/dsp_sim.v

3.1. Executing Verilog-2005 frontend: /nfs_scratch/scratch/Vorak/aram/Workspace/Raptor/yosys_verific_rs/yosys/install/bin/../share/yosys/rapidsilicon/common/cells_sim.v
Parsing Verilog input from `/nfs_scratch/scratch/Vorak/aram/Workspace/Raptor/yosys_verific_rs/yosys/install/bin/../share/yosys/rapidsilicon/common/cells_sim.v' to AST representation.
Generating RTLIL representation for module `\inv'.
Generating RTLIL representation for module `\buff'.
Generating RTLIL representation for module `\logic_0'.
Generating RTLIL representation for module `\logic_1'.
Generating RTLIL representation for module `\gclkbuff'.
Successfully finished Verilog frontend.

3.2. Executing Verilog-2005 frontend: /nfs_scratch/scratch/Vorak/aram/Workspace/Raptor/yosys_verific_rs/yosys/install/bin/../share/yosys/rapidsilicon/genesis/cells_sim.v
Parsing Verilog input from `/nfs_scratch/scratch/Vorak/aram/Workspace/Raptor/yosys_verific_rs/yosys/install/bin/../share/yosys/rapidsilicon/genesis/cells_sim.v' to AST representation.
Generating RTLIL representation for module `\dffsre'.
Generating RTLIL representation for module `\dffnsre'.
Generating RTLIL representation for module `\latchsre'.
Generating RTLIL representation for module `\latchnsre'.
Generating RTLIL representation for module `\io_scff'.
Generating RTLIL representation for module `\scff'.
Generating RTLIL representation for module `\sh_dff'.
Generating RTLIL representation for module `\adder_carry'.
Generating RTLIL representation for module `\sdffr'.
Generating RTLIL representation for module `\sdffs'.
Generating RTLIL representation for module `\TDP_BRAM18'.
Generating RTLIL representation for module `\TDP36K'.
Generating RTLIL representation for module `\BRAM2x18_TDP'.
Generating RTLIL representation for module `\BRAM2x18_SDP'.
Generating RTLIL representation for module `\_$_mem_v2_asymmetric'.
Successfully finished Verilog frontend.

3.3. Executing Verilog-2005 frontend: /nfs_scratch/scratch/Vorak/aram/Workspace/Raptor/yosys_verific_rs/yosys/install/bin/../share/yosys/rapidsilicon/genesis/dsp_sim.v
Parsing Verilog input from `/nfs_scratch/scratch/Vorak/aram/Workspace/Raptor/yosys_verific_rs/yosys/install/bin/../share/yosys/rapidsilicon/genesis/dsp_sim.v' to AST representation.
Generating RTLIL representation for module `\RS_DSP1'.
Generating RTLIL representation for module `\RS_DSP2'.
Generating RTLIL representation for module `\RS_DSP2_MULT'.
Generating RTLIL representation for module `\RS_DSP2_MULT_REGIN'.
Generating RTLIL representation for module `\RS_DSP2_MULT_REGOUT'.
Generating RTLIL representation for module `\RS_DSP2_MULT_REGIN_REGOUT'.
Generating RTLIL representation for module `\RS_DSP2_MULTADD'.
Generating RTLIL representation for module `\RS_DSP2_MULTADD_REGIN'.
Generating RTLIL representation for module `\RS_DSP2_MULTADD_REGOUT'.
Generating RTLIL representation for module `\RS_DSP2_MULTADD_REGIN_REGOUT'.
Generating RTLIL representation for module `\RS_DSP2_MULTACC'.
Generating RTLIL representation for module `\RS_DSP2_MULTACC_REGIN'.
Generating RTLIL representation for module `\RS_DSP2_MULTACC_REGOUT'.
Generating RTLIL representation for module `\RS_DSP2_MULTACC_REGIN_REGOUT'.
Generating RTLIL representation for module `\dsp_t1_20x18x64_cfg_ports'.
Generating RTLIL representation for module `\dsp_t1_10x9x32_cfg_ports'.
Generating RTLIL representation for module `\dsp_t1_sim_cfg_ports'.
Generating RTLIL representation for module `\RS_DSP3'.
Generating RTLIL representation for module `\RS_DSP3_MULT'.
Generating RTLIL representation for module `\RS_DSP3_MULT_REGIN'.
Generating RTLIL representation for module `\RS_DSP3_MULT_REGOUT'.
Generating RTLIL representation for module `\RS_DSP3_MULT_REGIN_REGOUT'.
Generating RTLIL representation for module `\RS_DSP3_MULTADD'.
Generating RTLIL representation for module `\RS_DSP3_MULTADD_REGIN'.
Generating RTLIL representation for module `\RS_DSP3_MULTADD_REGOUT'.
Generating RTLIL representation for module `\RS_DSP3_MULTADD_REGIN_REGOUT'.
Generating RTLIL representation for module `\RS_DSP3_MULTACC'.
Generating RTLIL representation for module `\RS_DSP3_MULTACC_REGIN'.
Generating RTLIL representation for module `\RS_DSP3_MULTACC_REGOUT'.
Generating RTLIL representation for module `\RS_DSP3_MULTACC_REGIN_REGOUT'.
Generating RTLIL representation for module `\dsp_t1_20x18x64_cfg_params'.
Generating RTLIL representation for module `\dsp_t1_10x9x32_cfg_params'.
Generating RTLIL representation for module `\dsp_t1_sim_cfg_params'.
Successfully finished Verilog frontend.

yosys> hierarchy -check -top b11

3.4. Executing HIERARCHY pass (managing design hierarchy).
VERIFIC-INFO [VHDL-1067] b11.vhd:1: processing 'b11(BEHAV)'
Importing module b11.

3.4.1. Analyzing design hierarchy..
Top module:  \b11

3.4.2. Analyzing design hierarchy..
Top module:  \b11
Removed 0 unused modules.

yosys> proc

3.5. Executing PROC pass (convert processes to netlists).

yosys> proc_clean

3.5.1. Executing PROC_CLEAN pass (remove empty switches from decision trees).
Cleaned up 0 empty switches.

yosys> proc_rmdead

3.5.2. Executing PROC_RMDEAD pass (remove dead branches from decision trees).
Removed a total of 0 dead cases.

yosys> proc_prune

3.5.3. Executing PROC_PRUNE pass (remove redundant assignments in processes).
Removed 0 redundant assignments.
Promoted 0 assignments to connections.

yosys> proc_init

3.5.4. Executing PROC_INIT pass (extract init attributes).

yosys> proc_arst

3.5.5. Executing PROC_ARST pass (detect async resets in processes).

yosys> proc_rom

3.5.6. Executing PROC_ROM pass (convert switches to ROMs).
Converted 0 switches.

yosys> proc_mux

3.5.7. Executing PROC_MUX pass (convert decision trees to multiplexers).

yosys> proc_dlatch

3.5.8. Executing PROC_DLATCH pass (convert process syncs to latches).

yosys> proc_dff

3.5.9. Executing PROC_DFF pass (convert process syncs to FFs).

yosys> proc_memwr

3.5.10. Executing PROC_MEMWR pass (convert process memory writes to cells).

yosys> proc_clean

3.5.11. Executing PROC_CLEAN pass (remove empty switches from decision trees).
Cleaned up 0 empty switches.

yosys> opt_expr -keepdc

3.5.12. Executing OPT_EXPR pass (perform const folding).
Optimizing module b11.
<suppressed ~3 debug messages>

yosys> bmuxmap

3.6. Executing BMUXMAP pass.

yosys> demuxmap

3.7. Executing DEMUXMAP pass.

yosys> clean_zerowidth

yosys> flatten

3.8. Executing FLATTEN pass (flatten design).

yosys> bmuxmap

3.9. Executing BMUXMAP pass.

yosys> demuxmap

3.10. Executing DEMUXMAP pass.

yosys> clean_zerowidth

yosys> tribuf -logic -formal

3.11. Executing TRIBUF pass.

yosys> deminout

3.12. Executing DEMINOUT pass (demote inout ports to input or output).

yosys> opt_expr

3.13. Executing OPT_EXPR pass (perform const folding).
Optimizing module b11.
<suppressed ~32 debug messages>

yosys> opt_clean

3.14. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \b11..
Removed 1 unused cells and 34 unused wires.
<suppressed ~13 debug messages>

yosys> check

3.15. Executing CHECK pass (checking for obvious problems).
Checking module b11...
Found and reported 0 problems.

yosys> opt_expr

3.16. Executing OPT_EXPR pass (perform const folding).
Optimizing module b11.
<suppressed ~1 debug messages>

yosys> opt_merge -nomux

3.17. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\b11'.
Removed a total of 0 cells.

yosys> opt_muxtree

3.18. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \b11..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Removed 0 multiplexer ports.
<suppressed ~5 debug messages>

yosys> opt_reduce

3.19. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \b11.
Performed a total of 0 changes.

yosys> opt_merge

3.20. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\b11'.
Removed a total of 0 cells.

yosys> opt_share

3.21. Executing OPT_SHARE pass.

yosys> opt_dff -nosdff -nodffe

3.22. Executing OPT_DFF pass (perform DFF optimizations).
Changing const-value async load to async reset on $verific$x_out_reg$b11.vhd:116$137 ($aldff) from module b11.
Changing const-value async load to async reset on $verific$stato_reg$b11.vhd:116$133 ($aldff) from module b11.
Changing const-value async load to async reset on $verific$r_in_reg$b11.vhd:116$134 ($aldff) from module b11.
Changing const-value async load to async reset on $verific$cont_reg$b11.vhd:116$135 ($aldff) from module b11.
Changing const-value async load to async reset on $verific$cont1_reg$b11.vhd:116$136 ($aldff) from module b11.

yosys> opt_clean

3.23. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \b11..

yosys> opt_expr

3.24. Executing OPT_EXPR pass (perform const folding).
Optimizing module b11.
MAX OPT ITERATION = 1

yosys> fsm -encoding binary

3.25. Executing FSM pass (extract and optimize FSM).

yosys> fsm_detect

3.25.1. Executing FSM_DETECT pass (finding FSMs in design).

yosys> fsm_extract

3.25.2. Executing FSM_EXTRACT pass (extracting FSM from design).

yosys> fsm_opt

3.25.3. Executing FSM_OPT pass (simple optimizations of FSMs).

yosys> opt_clean

3.25.4. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \b11..

yosys> fsm_opt

3.25.5. Executing FSM_OPT pass (simple optimizations of FSMs).

yosys> fsm_recode -encoding binary

3.25.6. Executing FSM_RECODE pass (re-assigning FSM state encoding).

yosys> fsm_info

3.25.7. Executing FSM_INFO pass (dumping all available information on FSM cells).

yosys> fsm_map

3.25.8. Executing FSM_MAP pass (mapping FSMs to basic logic).

yosys> opt_expr

3.26. Executing OPT_EXPR pass (perform const folding).
Optimizing module b11.

yosys> opt_merge -nomux

3.27. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\b11'.
Removed a total of 0 cells.

yosys> opt_muxtree

3.28. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \b11..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Removed 0 multiplexer ports.
<suppressed ~5 debug messages>

yosys> opt_reduce

3.29. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \b11.
Performed a total of 0 changes.

yosys> opt_merge

3.30. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\b11'.
Removed a total of 0 cells.

yosys> opt_share

3.31. Executing OPT_SHARE pass.

yosys> opt_dff -nosdff -sat

3.32. Executing OPT_DFF pass (perform DFF optimizations).
Adding EN signal on $verific$x_out_reg$b11.vhd:116$137 ($adff) from module b11 (D = $auto$bmuxmap.cc:58:execute$194, Q = \x_out).
Adding EN signal on $verific$r_in_reg$b11.vhd:116$134 ($adff) from module b11 (D = $auto$bmuxmap.cc:58:execute$213, Q = \r_in).
Adding EN signal on $verific$cont_reg$b11.vhd:116$135 ($adff) from module b11 (D = $auto$bmuxmap.cc:58:execute$232, Q = \cont).
Adding EN signal on $verific$cont1_reg$b11.vhd:116$136 ($adff) from module b11 (D = $auto$bmuxmap.cc:58:execute$156 [0], Q = \cont1 [0]).
Adding EN signal on $verific$cont1_reg$b11.vhd:116$136 ($adff) from module b11 (D = $auto$bmuxmap.cc:58:execute$156 [1], Q = \cont1 [1]).
Adding EN signal on $verific$cont1_reg$b11.vhd:116$136 ($adff) from module b11 (D = $auto$bmuxmap.cc:58:execute$156 [8:2], Q = \cont1 [8:2]).
Setting constant 0-bit at position 5 on $auto$ff.cc:262:slice$252 ($adffe) from module b11.

yosys> opt_clean

3.33. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \b11..

yosys> opt_expr

3.34. Executing OPT_EXPR pass (perform const folding).
Optimizing module b11.
<suppressed ~12 debug messages>

yosys> opt_muxtree

3.35. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \b11..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Removed 0 multiplexer ports.
<suppressed ~5 debug messages>

yosys> opt_reduce

3.36. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \b11.
Performed a total of 0 changes.

yosys> opt_merge

3.37. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\b11'.
<suppressed ~57 debug messages>
Removed a total of 19 cells.

yosys> opt_share

3.38. Executing OPT_SHARE pass.

yosys> opt_dff -nosdff -sat

3.39. Executing OPT_DFF pass (perform DFF optimizations).

yosys> opt_clean

3.40. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \b11..
Removed 0 unused cells and 19 unused wires.
<suppressed ~1 debug messages>

yosys> opt_expr

3.41. Executing OPT_EXPR pass (perform const folding).
Optimizing module b11.

yosys> opt_muxtree

3.42. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \b11..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Removed 0 multiplexer ports.
<suppressed ~6 debug messages>

yosys> opt_reduce

3.43. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \b11.
Performed a total of 0 changes.

yosys> opt_merge

3.44. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\b11'.
Removed a total of 0 cells.

yosys> opt_share

3.45. Executing OPT_SHARE pass.

yosys> opt_dff -nosdff -sat

3.46. Executing OPT_DFF pass (perform DFF optimizations).

yosys> opt_clean

3.47. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \b11..

yosys> opt_expr

3.48. Executing OPT_EXPR pass (perform const folding).
Optimizing module b11.
MAX OPT ITERATION = 3

yosys> wreduce -keepdc

3.49. Executing WREDUCE pass (reducing word size of cells).
Removed top 2 bits (of 5) from port B of cell b11.$auto$opt_dff.cc:195:make_patterns_logic$254 ($ne).
Removed top 1 bits (of 2) from port B of cell b11.$auto$opt_dff.cc:195:make_patterns_logic$240 ($ne).
Removed top 2 bits (of 4) from port B of cell b11.$auto$opt_dff.cc:195:make_patterns_logic$260 ($ne).
Removed top 1 bits (of 5) from port B of cell b11.$auto$opt_dff.cc:195:make_patterns_logic$269 ($ne).
Removed top 1 bits (of 5) from port B of cell b11.$auto$opt_dff.cc:195:make_patterns_logic$271 ($ne).
Removed top 2 bits (of 3) from port B of cell b11.$auto$opt_dff.cc:195:make_patterns_logic$238 ($ne).
Removed top 1 bits (of 7) from port B of cell b11.$auto$opt_dff.cc:195:make_patterns_logic$275 ($ne).
Removed top 1 bits (of 6) from port A of cell b11.$verific$LessThan_11$b11.vhd:52$82 ($lt).
Removed top 1 bits (of 6) from port B of cell b11.$verific$LessThan_11$b11.vhd:52$82 ($lt).
Removed top 1 bits (of 6) from port A of cell b11.$verific$add_12$b11.vhd:53$83 ($add).
Removed top 5 bits (of 6) from port B of cell b11.$verific$add_12$b11.vhd:53$83 ($add).
Removed top 1 bits (of 7) from port Y of cell b11.$verific$add_12$b11.vhd:53$83 ($add).
Removed top 1 bits (of 6) from port B of cell b11.$verific$LessThan_16$b11.vhd:59$88 ($le).
Removed top 1 bits (of 7) from mux cell b11.$verific$mux_28$b11.vhd:69$92 ($mux).
Removed top 3 bits (of 9) from port A of cell b11.$verific$add_30$b11.vhd:73$93 ($add).
Removed top 4 bits (of 10) from port A of cell b11.$verific$sub_32$b11.vhd:76$94 ($sub).
Removed top 1 bits (of 10) from port Y of cell b11.$verific$sub_32$b11.vhd:76$94 ($sub).
Removed top 1 bits (of 10) from port B of cell b11.$verific$sub_32$b11.vhd:76$94 ($sub).
Removed top 1 bits (of 9) from port B of cell b11.$verific$LessThan_36$b11.vhd:80$97 ($lt).
Removed top 5 bits (of 10) from port B of cell b11.$verific$sub_37$b11.vhd:81$98 ($sub).
Removed top 1 bits (of 10) from port Y of cell b11.$verific$sub_37$b11.vhd:81$98 ($sub).
Removed top 1 bits (of 10) from port A of cell b11.$verific$sub_37$b11.vhd:81$98 ($sub).
Removed top 1 bits (of 9) from port B of cell b11.$verific$LessThan_41$b11.vhd:87$102 ($lt).
Removed top 4 bits (of 8) from port B of cell b11.$verific$add_43$b11.vhd:88$104 ($add).
Removed top 1 bits (of 9) from port Y of cell b11.$verific$add_43$b11.vhd:88$104 ($add).
Removed top 3 bits (of 4) from port B of cell b11.$auto$opt_dff.cc:195:make_patterns_logic$236 ($ne).
Removed top 5 bits (of 10) from port B of cell b11.$verific$sub_48$b11.vhd:95$109 ($sub).
Removed top 1 bits (of 10) from port Y of cell b11.$verific$sub_48$b11.vhd:95$109 ($sub).
Removed top 1 bits (of 10) from port A of cell b11.$verific$sub_48$b11.vhd:95$109 ($sub).
Removed top 1 bits (of 2) from port A of cell b11.$verific$equal_50$b11.vhd:96$112 ($eq).
Removed top 4 bits (of 10) from port B of cell b11.$verific$sub_51$b11.vhd:97$113 ($sub).
Removed top 1 bits (of 10) from port Y of cell b11.$verific$sub_51$b11.vhd:97$113 ($sub).
Removed top 1 bits (of 10) from port A of cell b11.$verific$sub_51$b11.vhd:97$113 ($sub).
Removed top 6 bits (of 9) from port B of cell b11.$verific$add_55$b11.vhd:99$117 ($add).
Removed top 4 bits (of 7) from port B of cell b11.$verific$add_58$b11.vhd:101$118 ($add).
Removed top 1 bits (of 9) from port A of cell b11.$verific$LessThan_63$b11.vhd:105$122 ($lt).
Removed top 4 bits (of 10) from port Y of cell b11.$verific$unary_minus_64$b11.vhd:108$123 ($neg).
Removed top 4 bits (of 10) from port A of cell b11.$verific$unary_minus_64$b11.vhd:108$123 ($neg).
Removed top 1 bits (of 5) from port B of cell b11.$auto$opt_dff.cc:195:make_patterns_logic$273 ($ne).
Removed top 2 bits (of 4) from mux cell b11.$auto$bmuxmap.cc:60:execute$159 ($mux).
Removed top 2 bits (of 4) from mux cell b11.$auto$bmuxmap.cc:60:execute$161 ($mux).
Removed top 1 bits (of 6) from mux cell b11.$auto$bmuxmap.cc:60:execute$233 ($mux).
Removed top 1 bits (of 6) from mux cell b11.$auto$bmuxmap.cc:60:execute$230 ($mux).
Removed top 1 bits (of 6) from mux cell b11.$auto$bmuxmap.cc:60:execute$225 ($mux).
Removed top 1 bits (of 6) from mux cell b11.$auto$bmuxmap.cc:60:execute$217 ($mux).
Removed top 1 bits (of 6) from mux cell b11.$verific$mux_17$b11.vhd:63$89 ($mux).
Removed top 1 bits (of 6) from mux cell b11.$verific$mux_14$b11.vhd:56$86 ($mux).
Removed top 1 bits (of 6) from port Y of cell b11.$verific$add_12$b11.vhd:53$83 ($add).
Removed top 36 bits (of 72) from wire b11.$auto$bmuxmap.cc:58:execute$139.
Removed top 18 bits (of 36) from wire b11.$auto$bmuxmap.cc:58:execute$148.
Removed top 9 bits (of 18) from wire b11.$auto$bmuxmap.cc:58:execute$153.
Removed top 30 bits (of 32) from wire b11.$auto$bmuxmap.cc:58:execute$158.
Removed top 4 bits (of 16) from wire b11.$auto$bmuxmap.cc:58:execute$167.
Removed top 18 bits (of 48) from wire b11.$auto$bmuxmap.cc:58:execute$177.
Removed top 6 bits (of 24) from wire b11.$auto$bmuxmap.cc:58:execute$186.
Removed top 12 bits (of 24) from wire b11.$auto$bmuxmap.cc:58:execute$205.
Removed top 6 bits (of 12) from wire b11.$auto$bmuxmap.cc:58:execute$210.
Removed top 25 bits (of 48) from wire b11.$auto$bmuxmap.cc:58:execute$215.
Removed top 13 bits (of 24) from wire b11.$auto$bmuxmap.cc:58:execute$224.
Removed top 7 bits (of 12) from wire b11.$auto$bmuxmap.cc:58:execute$229.
Removed top 1 bits (of 6) from wire b11.$auto$bmuxmap.cc:58:execute$232.
Removed top 1 bits (of 6) from wire b11.$verific$n107$30.
Removed top 1 bits (of 6) from wire b11.$verific$n122$32.
Removed top 1 bits (of 7) from wire b11.$verific$n160$36.
Removed top 1 bits (of 10) from wire b11.$verific$n191$39.
Removed top 1 bits (of 3) from wire b11.$verific$n223$42.
Removed top 1 bits (of 10) from wire b11.$verific$n228$43.
Removed top 1 bits (of 3) from wire b11.$verific$n260$46.
Removed top 2 bits (of 3) from wire b11.$verific$n297$50.
Removed top 1 bits (of 10) from wire b11.$verific$n302$51.
Removed top 1 bits (of 10) from wire b11.$verific$n325$53.
Removed top 4 bits (of 10) from wire b11.$verific$n423$62.
Removed top 1 bits (of 6) from wire b11.$verific$n92$28.
Removed top 1 bits (of 6) from wire b11.cont.

yosys> peepopt

3.50. Executing PEEPOPT pass (run peephole optimizers).

yosys> opt_clean

3.51. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \b11..
Removed 0 unused cells and 32 unused wires.
<suppressed ~1 debug messages>

yosys> bmuxmap

3.52. Executing BMUXMAP pass.

yosys> demuxmap

3.53. Executing DEMUXMAP pass.

yosys> clean_zerowidth

yosys> alumacc

3.54. Executing ALUMACC pass (create $alu and $macc cells).
Extracting $alu and $macc cells in module b11:
  creating $macc model for $verific$add_12$b11.vhd:53$83 ($add).
  creating $macc model for $verific$add_30$b11.vhd:73$93 ($add).
  creating $macc model for $verific$add_43$b11.vhd:88$104 ($add).
  creating $macc model for $verific$add_55$b11.vhd:99$117 ($add).
  creating $macc model for $verific$add_58$b11.vhd:101$118 ($add).
  creating $macc model for $verific$sub_32$b11.vhd:76$94 ($sub).
  creating $macc model for $verific$sub_37$b11.vhd:81$98 ($sub).
  creating $macc model for $verific$sub_48$b11.vhd:95$109 ($sub).
  creating $macc model for $verific$sub_51$b11.vhd:97$113 ($sub).
  creating $macc model for $verific$unary_minus_64$b11.vhd:108$123 ($neg).
  creating $alu model for $macc $verific$unary_minus_64$b11.vhd:108$123.
  creating $alu model for $macc $verific$sub_51$b11.vhd:97$113.
  creating $alu model for $macc $verific$sub_48$b11.vhd:95$109.
  creating $alu model for $macc $verific$sub_37$b11.vhd:81$98.
  creating $alu model for $macc $verific$sub_32$b11.vhd:76$94.
  creating $alu model for $macc $verific$add_58$b11.vhd:101$118.
  creating $alu model for $macc $verific$add_55$b11.vhd:99$117.
  creating $alu model for $macc $verific$add_43$b11.vhd:88$104.
  creating $alu model for $macc $verific$add_30$b11.vhd:73$93.
  creating $alu model for $macc $verific$add_12$b11.vhd:53$83.
  creating $alu model for $verific$LessThan_11$b11.vhd:52$82 ($lt): new $alu
  creating $alu model for $verific$LessThan_16$b11.vhd:59$88 ($le): new $alu
  creating $alu model for $verific$LessThan_36$b11.vhd:80$97 ($lt): new $alu
  creating $alu model for $verific$LessThan_41$b11.vhd:87$102 ($lt): new $alu
  creating $alu model for $verific$LessThan_63$b11.vhd:105$122 ($lt): new $alu
  creating $alu cell for $verific$LessThan_63$b11.vhd:105$122: $auto$alumacc.cc:485:replace_alu$342
  creating $alu cell for $verific$LessThan_41$b11.vhd:87$102: $auto$alumacc.cc:485:replace_alu$347
  creating $alu cell for $verific$LessThan_36$b11.vhd:80$97: $auto$alumacc.cc:485:replace_alu$358
  creating $alu cell for $verific$LessThan_16$b11.vhd:59$88: $auto$alumacc.cc:485:replace_alu$369
  creating $alu cell for $verific$LessThan_11$b11.vhd:52$82: $auto$alumacc.cc:485:replace_alu$382
  creating $alu cell for $verific$add_12$b11.vhd:53$83: $auto$alumacc.cc:485:replace_alu$393
  creating $alu cell for $verific$add_43$b11.vhd:88$104: $auto$alumacc.cc:485:replace_alu$396
  creating $alu cell for $verific$add_55$b11.vhd:99$117: $auto$alumacc.cc:485:replace_alu$399
  creating $alu cell for $verific$add_58$b11.vhd:101$118: $auto$alumacc.cc:485:replace_alu$402
  creating $alu cell for $verific$add_30$b11.vhd:73$93: $auto$alumacc.cc:485:replace_alu$405
  creating $alu cell for $verific$sub_32$b11.vhd:76$94: $auto$alumacc.cc:485:replace_alu$408
  creating $alu cell for $verific$sub_37$b11.vhd:81$98: $auto$alumacc.cc:485:replace_alu$411
  creating $alu cell for $verific$sub_48$b11.vhd:95$109: $auto$alumacc.cc:485:replace_alu$414
  creating $alu cell for $verific$sub_51$b11.vhd:97$113: $auto$alumacc.cc:485:replace_alu$417
  creating $alu cell for $verific$unary_minus_64$b11.vhd:108$123: $auto$alumacc.cc:485:replace_alu$420
  created 15 $alu and 0 $macc cells.

yosys> opt_expr

3.55. Executing OPT_EXPR pass (perform const folding).
Optimizing module b11.
<suppressed ~4 debug messages>

yosys> opt_merge -nomux

3.56. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\b11'.
Removed a total of 0 cells.

yosys> opt_muxtree

3.57. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \b11..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Removed 0 multiplexer ports.
<suppressed ~6 debug messages>

yosys> opt_reduce

3.58. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \b11.
Performed a total of 0 changes.

yosys> opt_merge

3.59. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\b11'.
Removed a total of 0 cells.

yosys> opt_share

3.60. Executing OPT_SHARE pass.
    Found cells that share an operand and can be merged by moving the $mux $verific$mux_34$b11.vhd:78$96 in front of them:
        $auto$alumacc.cc:485:replace_alu$405
        $auto$alumacc.cc:485:replace_alu$408


yosys> opt_dff -nosdff -nodffe

3.61. Executing OPT_DFF pass (perform DFF optimizations).

yosys> opt_clean

3.62. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \b11..
Removed 2 unused cells and 13 unused wires.
<suppressed ~3 debug messages>

yosys> opt_expr

3.63. Executing OPT_EXPR pass (perform const folding).
Optimizing module b11.
<suppressed ~1 debug messages>

yosys> opt_muxtree

3.64. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \b11..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Removed 0 multiplexer ports.
<suppressed ~7 debug messages>

yosys> opt_reduce

3.65. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \b11.
Performed a total of 0 changes.

yosys> opt_merge

3.66. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\b11'.
Removed a total of 0 cells.

yosys> opt_share

3.67. Executing OPT_SHARE pass.

yosys> opt_dff -nosdff -nodffe

3.68. Executing OPT_DFF pass (perform DFF optimizations).

yosys> opt_clean

3.69. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \b11..
Removed 0 unused cells and 1 unused wires.
<suppressed ~1 debug messages>

yosys> opt_expr

3.70. Executing OPT_EXPR pass (perform const folding).
Optimizing module b11.
MAX OPT ITERATION = 2

yosys> stat

3.71. Printing statistics.

=== b11 ===

   Number of wires:                127
   Number of wire bits:            789
   Number of public wires:           9
   Number of public wire bits:      39
   Number of memories:               0
   Number of memory bits:            0
   Number of processes:              0
   Number of cells:                106
     $adff                           1
     $adffe                          6
     $alu                           14
     $eq                             3
     $logic_not                      2
     $mux                           44
     $ne                            10
     $neg                            1
     $not                            8
     $or                             5
     $reduce_and                    10
     $reduce_bool                    1
     $reduce_or                      1


yosys> memory -nomap

3.72. Executing MEMORY pass.

yosys> opt_mem

3.72.1. Executing OPT_MEM pass (optimize memories).
Performed a total of 0 transformations.

yosys> opt_mem_priority

3.72.2. Executing OPT_MEM_PRIORITY pass (removing unnecessary memory write priority relations).
Performed a total of 0 transformations.

yosys> opt_mem_feedback

3.72.3. Executing OPT_MEM_FEEDBACK pass (finding memory read-to-write feedback paths).

yosys> memory_bmux2rom

3.72.4. Executing MEMORY_BMUX2ROM pass (converting muxes to ROMs).

yosys> memory_dff

3.72.5. Executing MEMORY_DFF pass (merging $dff cells to $memrd).

yosys> opt_clean

3.72.6. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \b11..

yosys> memory_share

3.72.7. Executing MEMORY_SHARE pass (consolidating $memrd/$memwr cells).

yosys> opt_mem_widen

3.72.8. Executing OPT_MEM_WIDEN pass (optimize memories where all ports are wide).
Performed a total of 0 transformations.

yosys> opt_clean

3.72.9. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \b11..

yosys> memory_collect

3.72.10. Executing MEMORY_COLLECT pass (generating $mem cells).

yosys> stat

3.73. Printing statistics.

=== b11 ===

   Number of wires:                127
   Number of wire bits:            789
   Number of public wires:           9
   Number of public wire bits:      39
   Number of memories:               0
   Number of memory bits:            0
   Number of processes:              0
   Number of cells:                106
     $adff                           1
     $adffe                          6
     $alu                           14
     $eq                             3
     $logic_not                      2
     $mux                           44
     $ne                            10
     $neg                            1
     $not                            8
     $or                             5
     $reduce_and                    10
     $reduce_bool                    1
     $reduce_or                      1


yosys> muxpack

3.74. Executing MUXPACK pass ($mux cell cascades to $pmux).
Converting b11.$verific$mux_60$b11.vhd:102$119 ... b11.$verific$mux_62$b11.vhd:102$121 to a pmux with 3 cases.
Converted 3 (p)mux cells into 1 pmux cells.
<suppressed ~44 debug messages>

yosys> opt_clean

3.75. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \b11..
Removed 0 unused cells and 2 unused wires.
<suppressed ~1 debug messages>

yosys> pmuxtree

3.76. Executing PMUXTREE pass.

yosys> muxpack

3.77. Executing MUXPACK pass ($mux cell cascades to $pmux).
Converted 0 (p)mux cells into 0 pmux cells.
<suppressed ~44 debug messages>

yosys> memory_map

3.78. Executing MEMORY_MAP pass (converting memories to logic and flip-flops).

yosys> stat

3.79. Printing statistics.

=== b11 ===

   Number of wires:                131
   Number of wire bits:            801
   Number of public wires:           9
   Number of public wire bits:      39
   Number of memories:               0
   Number of memory bits:            0
   Number of processes:              0
   Number of cells:                109
     $adff                           1
     $adffe                          6
     $alu                           14
     $eq                             3
     $logic_not                      2
     $mux                           44
     $ne                            10
     $neg                            1
     $not                            9
     $or                             6
     $reduce_and                    10
     $reduce_bool                    1
     $reduce_or                      2


yosys> techmap -map +/techmap.v -map +/rapidsilicon/genesis/arith_map.v

3.80. Executing TECHMAP pass (map to technology primitives).

3.80.1. Executing Verilog-2005 frontend: /nfs_scratch/scratch/Vorak/aram/Workspace/Raptor/yosys_verific_rs/yosys/install/bin/../share/yosys/techmap.v
Parsing Verilog input from `/nfs_scratch/scratch/Vorak/aram/Workspace/Raptor/yosys_verific_rs/yosys/install/bin/../share/yosys/techmap.v' to AST representation.
Generating RTLIL representation for module `\_90_simplemap_bool_ops'.
Generating RTLIL representation for module `\_90_simplemap_reduce_ops'.
Generating RTLIL representation for module `\_90_simplemap_logic_ops'.
Generating RTLIL representation for module `\_90_simplemap_compare_ops'.
Generating RTLIL representation for module `\_90_simplemap_various'.
Generating RTLIL representation for module `\_90_simplemap_registers'.
Generating RTLIL representation for module `\_90_shift_ops_shr_shl_sshl_sshr'.
Generating RTLIL representation for module `\_90_shift_shiftx'.
Generating RTLIL representation for module `\_90_fa'.
Generating RTLIL representation for module `\_90_lcu'.
Generating RTLIL representation for module `\_90_alu'.
Generating RTLIL representation for module `\_90_macc'.
Generating RTLIL representation for module `\_90_alumacc'.
Generating RTLIL representation for module `\$__div_mod_u'.
Generating RTLIL representation for module `\$__div_mod_trunc'.
Generating RTLIL representation for module `\_90_div'.
Generating RTLIL representation for module `\_90_mod'.
Generating RTLIL representation for module `\$__div_mod_floor'.
Generating RTLIL representation for module `\_90_divfloor'.
Generating RTLIL representation for module `\_90_modfloor'.
Generating RTLIL representation for module `\_90_pow'.
Generating RTLIL representation for module `\_90_pmux'.
Generating RTLIL representation for module `\_90_demux'.
Generating RTLIL representation for module `\_90_lut'.
Successfully finished Verilog frontend.

3.80.2. Executing Verilog-2005 frontend: /nfs_scratch/scratch/Vorak/aram/Workspace/Raptor/yosys_verific_rs/yosys/install/bin/../share/yosys/rapidsilicon/genesis/arith_map.v
Parsing Verilog input from `/nfs_scratch/scratch/Vorak/aram/Workspace/Raptor/yosys_verific_rs/yosys/install/bin/../share/yosys/rapidsilicon/genesis/arith_map.v' to AST representation.
Generating RTLIL representation for module `\_80_rs_alu'.
Successfully finished Verilog frontend.

3.80.3. Continuing TECHMAP pass.
Using extmapper simplemap for cells of type $ne.
Using extmapper simplemap for cells of type $reduce_and.
Using extmapper simplemap for cells of type $not.
Using extmapper simplemap for cells of type $mux.
Using extmapper simplemap for cells of type $or.
Using extmapper simplemap for cells of type $reduce_or.
Using extmapper simplemap for cells of type $logic_not.
Using extmapper simplemap for cells of type $eq.
Using template $paramod$672a140277c71df8314410f22acc08d55222c3c7\_90_alu for cells of type $alu.
Using template $paramod$b9513f2555ba02118b069422fea717af39120cf7\_90_alu for cells of type $alu.
Using template $paramod$78464f9f65d57061f7490f3fe5dd257e4a61e2b7\_90_alu for cells of type $alu.
Using extmapper simplemap for cells of type $adffe.
Using template $paramod$b18e16801adf491a64caa0542270798e5d4ac6b6\_90_alu for cells of type $alu.
Using template $paramod$3fe4bdf8d597404bdd222c1fea42f692fdc77de4\_90_alu for cells of type $alu.
Using template $paramod$e04283ca12514baf3d204c6994bec8f178dd89f8\_90_alu for cells of type $alu.
Using template $paramod$c6b63e723603573fdc33dc74600fd0455fbbc6dc\_90_alu for cells of type $alu.
Using template $paramod$5d7bf89bead63599a0c4fbe7617ae2af1a7c16a5\_90_alu for cells of type $alu.
Using extmapper simplemap for cells of type $reduce_bool.
Using template $paramod$821d2886e47353e724eaca46af4992e9c3e6ac1d\_90_alu for cells of type $alu.
Using template $paramod$08b2a3505d8f2cd2b03f068ccaf5ce95d4eb0556\_90_alu for cells of type $alu.
Using template $paramod$8ffc13f158d9c4b92f6c17114e5b147ae5ead21a\_90_alu for cells of type $alu.
Running "alumacc" on wrapper $extern:wrap:$neg:A_SIGNED=0:A_WIDTH=9:Y_WIDTH=9:394426c56d1a028ba8fdd5469b163e04011def47.
Using template $extern:wrap:$neg:A_SIGNED=0:A_WIDTH=9:Y_WIDTH=9:394426c56d1a028ba8fdd5469b163e04011def47 for cells of type $extern:wrap:$neg:A_SIGNED=0:A_WIDTH=9:Y_WIDTH=9:394426c56d1a028ba8fdd5469b163e04011def47.
Using extmapper simplemap for cells of type $adff.
Using extmapper simplemap for cells of type $xor.
Using extmapper simplemap for cells of type $and.
Using template $paramod\_90_lcu\WIDTH=32'00000000000000000000000000000101 for cells of type $lcu.
Using extmapper simplemap for cells of type $pos.
Using template $paramod\_90_lcu\WIDTH=32'00000000000000000000000000001000 for cells of type $lcu.
Using template $paramod\_90_lcu\WIDTH=32'00000000000000000000000000001001 for cells of type $lcu.
Using template $paramod\_90_lcu\WIDTH=32'00000000000000000000000000000110 for cells of type $lcu.
Using template $paramod\_90_lcu\WIDTH=32'00000000000000000000000000000111 for cells of type $lcu.
Using template $paramod$8045f2881226ae434b154710c783ad25023f386c\_90_alu for cells of type $alu.
No more expansions possible.
<suppressed ~2269 debug messages>

yosys> stat

3.81. Printing statistics.

=== b11 ===

   Number of wires:                856
   Number of wire bits:          19827
   Number of public wires:           9
   Number of public wire bits:      39
   Number of memories:               0
   Number of memory bits:            0
   Number of processes:              0
   Number of cells:               1464
     $_AND_                        380
     $_DFFE_PP0P_                   26
     $_DFF_PP0_                      4
     $_MUX_                        390
     $_NOT_                        135
     $_OR_                         224
     $_XOR_                        305


yosys> opt_expr

3.82. Executing OPT_EXPR pass (perform const folding).
Optimizing module b11.
<suppressed ~674 debug messages>

yosys> opt_merge -nomux

3.83. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\b11'.
<suppressed ~762 debug messages>
Removed a total of 254 cells.

yosys> opt_muxtree

3.84. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \b11..
  Creating internal representation of mux trees.
  No muxes found in this module.
Removed 0 multiplexer ports.

yosys> opt_reduce

3.85. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \b11.
Performed a total of 0 changes.

yosys> opt_merge

3.86. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\b11'.
Removed a total of 0 cells.

yosys> opt_share

3.87. Executing OPT_SHARE pass.
    Found cells that share an operand and can be merged by moving the $_MUX_ $auto$simplemap.cc:278:simplemap_mux$1259 in front of them:
        $auto$simplemap.cc:86:simplemap_bitop$1823
        $auto$simplemap.cc:86:simplemap_bitop$1610

    Found cells that share an operand and can be merged by moving the $_MUX_ $auto$simplemap.cc:278:simplemap_mux$626 in front of them:
        $auto$simplemap.cc:86:simplemap_bitop$1750
        $auto$simplemap.cc:86:simplemap_bitop$1704


yosys> opt_dff -nosdff -nodffe

3.88. Executing OPT_DFF pass (perform DFF optimizations).

yosys> opt_clean

3.89. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \b11..
Removed 59 unused cells and 731 unused wires.
<suppressed ~60 debug messages>

yosys> opt_expr

3.90. Executing OPT_EXPR pass (perform const folding).
Optimizing module b11.
<suppressed ~2 debug messages>

yosys> opt_muxtree

3.91. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \b11..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Removed 0 multiplexer ports.
<suppressed ~2 debug messages>

yosys> opt_reduce

3.92. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \b11.
Performed a total of 0 changes.

yosys> opt_merge

3.93. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\b11'.
Removed a total of 0 cells.

yosys> opt_share

3.94. Executing OPT_SHARE pass.

yosys> opt_dff -nosdff -nodffe

3.95. Executing OPT_DFF pass (perform DFF optimizations).

yosys> opt_clean

3.96. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \b11..

yosys> opt_expr

3.97. Executing OPT_EXPR pass (perform const folding).
Optimizing module b11.
MAX OPT ITERATION = 2

yosys> opt_expr -full

3.98. Executing OPT_EXPR pass (perform const folding).
Optimizing module b11.
<suppressed ~111 debug messages>

yosys> techmap -map +/techmap.v

3.99. Executing TECHMAP pass (map to technology primitives).

3.99.1. Executing Verilog-2005 frontend: /nfs_scratch/scratch/Vorak/aram/Workspace/Raptor/yosys_verific_rs/yosys/install/bin/../share/yosys/techmap.v
Parsing Verilog input from `/nfs_scratch/scratch/Vorak/aram/Workspace/Raptor/yosys_verific_rs/yosys/install/bin/../share/yosys/techmap.v' to AST representation.
Generating RTLIL representation for module `\_90_simplemap_bool_ops'.
Generating RTLIL representation for module `\_90_simplemap_reduce_ops'.
Generating RTLIL representation for module `\_90_simplemap_logic_ops'.
Generating RTLIL representation for module `\_90_simplemap_compare_ops'.
Generating RTLIL representation for module `\_90_simplemap_various'.
Generating RTLIL representation for module `\_90_simplemap_registers'.
Generating RTLIL representation for module `\_90_shift_ops_shr_shl_sshl_sshr'.
Generating RTLIL representation for module `\_90_shift_shiftx'.
Generating RTLIL representation for module `\_90_fa'.
Generating RTLIL representation for module `\_90_lcu'.
Generating RTLIL representation for module `\_90_alu'.
Generating RTLIL representation for module `\_90_macc'.
Generating RTLIL representation for module `\_90_alumacc'.
Generating RTLIL representation for module `\$__div_mod_u'.
Generating RTLIL representation for module `\$__div_mod_trunc'.
Generating RTLIL representation for module `\_90_div'.
Generating RTLIL representation for module `\_90_mod'.
Generating RTLIL representation for module `\$__div_mod_floor'.
Generating RTLIL representation for module `\_90_divfloor'.
Generating RTLIL representation for module `\_90_modfloor'.
Generating RTLIL representation for module `\_90_pow'.
Generating RTLIL representation for module `\_90_pmux'.
Generating RTLIL representation for module `\_90_demux'.
Generating RTLIL representation for module `\_90_lut'.
Successfully finished Verilog frontend.

3.99.2. Continuing TECHMAP pass.
Using extmapper simplemap for cells of type $mux.
No more expansions possible.
<suppressed ~73 debug messages>

yosys> opt_expr

3.100. Executing OPT_EXPR pass (perform const folding).
Optimizing module b11.

yosys> opt_merge -nomux

3.101. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\b11'.
Removed a total of 0 cells.

yosys> opt_muxtree

3.102. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \b11..
  Creating internal representation of mux trees.
  No muxes found in this module.
Removed 0 multiplexer ports.

yosys> opt_reduce

3.103. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \b11.
Performed a total of 0 changes.

yosys> opt_merge

3.104. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\b11'.
Removed a total of 0 cells.

yosys> opt_dff -nosdff -nodffe -sat

3.105. Executing OPT_DFF pass (perform DFF optimizations).

yosys> opt_clean

3.106. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \b11..
Removed 0 unused cells and 14 unused wires.
<suppressed ~1 debug messages>

yosys> opt_expr

3.107. Executing OPT_EXPR pass (perform const folding).
Optimizing module b11.
MAX OPT ITERATION = 1

yosys> abc -dff

3.108. Executing ABC pass (technology mapping using ABC).

3.108.1. Summary of detected clock domains:
  21 cells in clk=\clock, en=$auto$opt_dff.cc:219:make_patterns_logic$295, arst=\reset, srst={ }
  136 cells in clk=\clock, en=$auto$opt_dff.cc:219:make_patterns_logic$308, arst=\reset, srst={ }
  13 cells in clk=\clock, en=$auto$opt_dff.cc:219:make_patterns_logic$241, arst=\reset, srst={ }
  48 cells in clk=\clock, en=$auto$opt_dff.cc:219:make_patterns_logic$250, arst=\reset, srst={ }
  45 cells in clk=\clock, en=$auto$opt_dff.cc:219:make_patterns_logic$263, arst=\reset, srst={ }
  13 cells in clk=\clock, en=$auto$opt_dff.cc:219:make_patterns_logic$280, arst=\reset, srst={ }
  202 cells in clk=\clock, en={ }, arst=\reset, srst={ }

3.108.2. Extracting gate netlist of module `\b11' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clock, enabled by $auto$opt_dff.cc:219:make_patterns_logic$295, asynchronously reset by \reset
Extracted 21 gates and 39 wires to a netlist network with 18 inputs and 13 outputs.

3.108.2.1. Executing ABC.

3.108.3. Extracting gate netlist of module `\b11' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clock, enabled by $auto$opt_dff.cc:219:make_patterns_logic$308, asynchronously reset by \reset
Extracted 136 gates and 160 wires to a netlist network with 23 inputs and 60 outputs.

3.108.3.1. Executing ABC.

3.108.4. Extracting gate netlist of module `\b11' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clock, enabled by $auto$opt_dff.cc:219:make_patterns_logic$241, asynchronously reset by \reset
Extracted 13 gates and 23 wires to a netlist network with 9 inputs and 7 outputs.

3.108.4.1. Executing ABC.

3.108.5. Extracting gate netlist of module `\b11' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clock, enabled by $auto$opt_dff.cc:219:make_patterns_logic$250, asynchronously reset by \reset
Extracted 48 gates and 71 wires to a netlist network with 22 inputs and 37 outputs.

3.108.5.1. Executing ABC.

3.108.6. Extracting gate netlist of module `\b11' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clock, enabled by $auto$opt_dff.cc:219:make_patterns_logic$263, asynchronously reset by \reset
Extracted 45 gates and 54 wires to a netlist network with 8 inputs and 7 outputs.

3.108.6.1. Executing ABC.

3.108.7. Extracting gate netlist of module `\b11' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clock, enabled by $auto$opt_dff.cc:219:make_patterns_logic$280, asynchronously reset by \reset
Extracted 13 gates and 27 wires to a netlist network with 14 inputs and 8 outputs.

3.108.7.1. Executing ABC.

3.108.8. Extracting gate netlist of module `\b11' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clock, asynchronously reset by \reset
Extracted 202 gates and 291 wires to a netlist network with 87 inputs and 29 outputs.

3.108.8.1. Executing ABC.

yosys> abc -dff

3.109. Executing ABC pass (technology mapping using ABC).

3.109.1. Summary of detected clock domains:
  21 cells in clk=\clock, en=$abc$2930$auto$opt_dff.cc:219:make_patterns_logic$280, arst=\reset, srst={ }
  15 cells in clk=\clock, en=$abc$2813$auto$opt_dff.cc:219:make_patterns_logic$241, arst=\reset, srst={ }
  217 cells in clk=\clock, en=$abc$2703$auto$opt_dff.cc:219:make_patterns_logic$308, arst=\reset, srst={ }
  29 cells in clk=\clock, en=$abc$2682$auto$opt_dff.cc:219:make_patterns_logic$295, arst=\reset, srst={ }
  56 cells in clk=\clock, en=$abc$2833$auto$opt_dff.cc:219:make_patterns_logic$250, arst=\reset, srst={ }
  30 cells in clk=\clock, en=$abc$2895$auto$opt_dff.cc:219:make_patterns_logic$263, arst=\reset, srst={ }
  105 cells in clk=\clock, en={ }, arst=\reset, srst={ }

3.109.2. Extracting gate netlist of module `\b11' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clock, enabled by $abc$2930$auto$opt_dff.cc:219:make_patterns_logic$280, asynchronously reset by \reset
Extracted 21 gates and 43 wires to a netlist network with 22 inputs and 11 outputs.

3.109.2.1. Executing ABC.

3.109.3. Extracting gate netlist of module `\b11' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clock, enabled by $abc$2813$auto$opt_dff.cc:219:make_patterns_logic$241, asynchronously reset by \reset
Extracted 15 gates and 25 wires to a netlist network with 10 inputs and 9 outputs.

3.109.3.1. Executing ABC.

3.109.4. Extracting gate netlist of module `\b11' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clock, enabled by $abc$2703$auto$opt_dff.cc:219:make_patterns_logic$308, asynchronously reset by \reset
Extracted 217 gates and 268 wires to a netlist network with 51 inputs and 37 outputs.

3.109.4.1. Executing ABC.

3.109.5. Extracting gate netlist of module `\b11' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clock, enabled by $abc$2682$auto$opt_dff.cc:219:make_patterns_logic$295, asynchronously reset by \reset
Extracted 29 gates and 51 wires to a netlist network with 22 inputs and 13 outputs.

3.109.5.1. Executing ABC.

3.109.6. Extracting gate netlist of module `\b11' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clock, enabled by $abc$2833$auto$opt_dff.cc:219:make_patterns_logic$250, asynchronously reset by \reset
Extracted 56 gates and 86 wires to a netlist network with 30 inputs and 39 outputs.

3.109.6.1. Executing ABC.

3.109.7. Extracting gate netlist of module `\b11' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clock, enabled by $abc$2895$auto$opt_dff.cc:219:make_patterns_logic$263, asynchronously reset by \reset
Extracted 30 gates and 42 wires to a netlist network with 12 inputs and 9 outputs.

3.109.7.1. Executing ABC.

3.109.8. Extracting gate netlist of module `\b11' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clock, asynchronously reset by \reset
Extracted 105 gates and 149 wires to a netlist network with 44 inputs and 41 outputs.

3.109.8.1. Executing ABC.

yosys> abc -dff

3.110. Executing ABC pass (technology mapping using ABC).

3.110.1. Summary of detected clock domains:
  20 cells in clk=\clock, en=$abc$3186$abc$2930$auto$opt_dff.cc:219:make_patterns_logic$280, arst=\reset, srst={ }
  15 cells in clk=\clock, en=$abc$3209$abc$2813$auto$opt_dff.cc:219:make_patterns_logic$241, arst=\reset, srst={ }
  257 cells in clk=\clock, en=$abc$3231$abc$2703$auto$opt_dff.cc:219:make_patterns_logic$308, arst=\reset, srst={ }
  26 cells in clk=\clock, en=$abc$3476$abc$2682$auto$opt_dff.cc:219:make_patterns_logic$295, arst=\reset, srst={ }
  41 cells in clk=\clock, en=$abc$3505$abc$2833$auto$opt_dff.cc:219:make_patterns_logic$250, arst=\reset, srst={ }
  35 cells in clk=\clock, en=$abc$3568$abc$2895$auto$opt_dff.cc:219:make_patterns_logic$263, arst=\reset, srst={ }
  99 cells in clk=\clock, en={ }, arst=\reset, srst={ }

3.110.2. Extracting gate netlist of module `\b11' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clock, enabled by $abc$3186$abc$2930$auto$opt_dff.cc:219:make_patterns_logic$280, asynchronously reset by \reset
Extracted 20 gates and 41 wires to a netlist network with 21 inputs and 9 outputs.

3.110.2.1. Executing ABC.

3.110.3. Extracting gate netlist of module `\b11' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clock, enabled by $abc$3209$abc$2813$auto$opt_dff.cc:219:make_patterns_logic$241, asynchronously reset by \reset
Extracted 15 gates and 26 wires to a netlist network with 11 inputs and 9 outputs.

3.110.3.1. Executing ABC.

3.110.4. Extracting gate netlist of module `\b11' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clock, enabled by $abc$3231$abc$2703$auto$opt_dff.cc:219:make_patterns_logic$308, asynchronously reset by \reset
Extracted 257 gates and 312 wires to a netlist network with 55 inputs and 34 outputs.

3.110.4.1. Executing ABC.

3.110.5. Extracting gate netlist of module `\b11' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clock, enabled by $abc$3476$abc$2682$auto$opt_dff.cc:219:make_patterns_logic$295, asynchronously reset by \reset
Extracted 26 gates and 48 wires to a netlist network with 22 inputs and 12 outputs.

3.110.5.1. Executing ABC.

3.110.6. Extracting gate netlist of module `\b11' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clock, enabled by $abc$3505$abc$2833$auto$opt_dff.cc:219:make_patterns_logic$250, asynchronously reset by \reset
Extracted 41 gates and 68 wires to a netlist network with 27 inputs and 36 outputs.

3.110.6.1. Executing ABC.

3.110.7. Extracting gate netlist of module `\b11' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clock, enabled by $abc$3568$abc$2895$auto$opt_dff.cc:219:make_patterns_logic$263, asynchronously reset by \reset
Extracted 35 gates and 47 wires to a netlist network with 12 inputs and 11 outputs.

3.110.7.1. Executing ABC.

3.110.8. Extracting gate netlist of module `\b11' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clock, asynchronously reset by \reset
Extracted 99 gates and 146 wires to a netlist network with 47 inputs and 45 outputs.

3.110.8.1. Executing ABC.

yosys> abc -dff

3.111. Executing ABC pass (technology mapping using ABC).

3.111.1. Summary of detected clock domains:
  33 cells in clk=\clock, en=$abc$4077$abc$3568$abc$2895$auto$opt_dff.cc:219:make_patterns_logic$263, arst=\reset, srst={ }
  19 cells in clk=\clock, en=$abc$3714$abc$3186$abc$2930$auto$opt_dff.cc:219:make_patterns_logic$280, arst=\reset, srst={ }
  15 cells in clk=\clock, en=$abc$3735$abc$3209$abc$2813$auto$opt_dff.cc:219:make_patterns_logic$241, arst=\reset, srst={ }
  243 cells in clk=\clock, en=$abc$3757$abc$3231$abc$2703$auto$opt_dff.cc:219:make_patterns_logic$308, arst=\reset, srst={ }
  26 cells in clk=\clock, en=$abc$3999$abc$3476$abc$2682$auto$opt_dff.cc:219:make_patterns_logic$295, arst=\reset, srst={ }
  40 cells in clk=\clock, en=$abc$4027$abc$3505$abc$2833$auto$opt_dff.cc:219:make_patterns_logic$250, arst=\reset, srst={ }
  97 cells in clk=\clock, en={ }, arst=\reset, srst={ }

3.111.2. Extracting gate netlist of module `\b11' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clock, enabled by $abc$4077$abc$3568$abc$2895$auto$opt_dff.cc:219:make_patterns_logic$263, asynchronously reset by \reset
Extracted 33 gates and 45 wires to a netlist network with 12 inputs and 11 outputs.

3.111.2.1. Executing ABC.

3.111.3. Extracting gate netlist of module `\b11' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clock, enabled by $abc$3714$abc$3186$abc$2930$auto$opt_dff.cc:219:make_patterns_logic$280, asynchronously reset by \reset
Extracted 19 gates and 39 wires to a netlist network with 20 inputs and 9 outputs.

3.111.3.1. Executing ABC.

3.111.4. Extracting gate netlist of module `\b11' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clock, enabled by $abc$3735$abc$3209$abc$2813$auto$opt_dff.cc:219:make_patterns_logic$241, asynchronously reset by \reset
Extracted 15 gates and 26 wires to a netlist network with 11 inputs and 9 outputs.

3.111.4.1. Executing ABC.

3.111.5. Extracting gate netlist of module `\b11' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clock, enabled by $abc$3757$abc$3231$abc$2703$auto$opt_dff.cc:219:make_patterns_logic$308, asynchronously reset by \reset
Extracted 243 gates and 294 wires to a netlist network with 51 inputs and 30 outputs.

3.111.5.1. Executing ABC.

3.111.6. Extracting gate netlist of module `\b11' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clock, enabled by $abc$3999$abc$3476$abc$2682$auto$opt_dff.cc:219:make_patterns_logic$295, asynchronously reset by \reset
Extracted 26 gates and 48 wires to a netlist network with 22 inputs and 12 outputs.

3.111.6.1. Executing ABC.

3.111.7. Extracting gate netlist of module `\b11' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clock, enabled by $abc$4027$abc$3505$abc$2833$auto$opt_dff.cc:219:make_patterns_logic$250, asynchronously reset by \reset
Extracted 40 gates and 65 wires to a netlist network with 25 inputs and 34 outputs.

3.111.7.1. Executing ABC.

3.111.8. Extracting gate netlist of module `\b11' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clock, asynchronously reset by \reset
Extracted 97 gates and 141 wires to a netlist network with 44 inputs and 42 outputs.

3.111.8.1. Executing ABC.

yosys> opt_ffinv

3.112. Executing OPT_FFINV pass (push inverters through FFs).
Discovering LUTs.
Pushed 0 inverters.

yosys> opt_expr

3.113. Executing OPT_EXPR pass (perform const folding).
Optimizing module b11.
<suppressed ~4 debug messages>

yosys> opt_merge -nomux

3.114. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\b11'.
<suppressed ~12 debug messages>
Removed a total of 4 cells.

yosys> opt_muxtree

3.115. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \b11..
  Creating internal representation of mux trees.
  No muxes found in this module.
Removed 0 multiplexer ports.

yosys> opt_reduce

3.116. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \b11.
Performed a total of 0 changes.

yosys> opt_merge

3.117. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\b11'.
Removed a total of 0 cells.

yosys> opt_share

3.118. Executing OPT_SHARE pass.

yosys> opt_dff -nosdff -sat

3.119. Executing OPT_DFF pass (perform DFF optimizations).
Adding EN signal on $abc$4257$auto$blifparse.cc:362:parse_blif$4258 ($_DFFE_PP0P_) from module b11 (D = $abc$4257$li0_li0, Q = $abc$4257$lo0).

yosys> opt_clean

3.120. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \b11..
Removed 0 unused cells and 2528 unused wires.
<suppressed ~2 debug messages>

yosys> opt_expr

3.121. Executing OPT_EXPR pass (perform const folding).
Optimizing module b11.
<suppressed ~3 debug messages>

yosys> opt_muxtree

3.122. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \b11..
  Creating internal representation of mux trees.
  No muxes found in this module.
Removed 0 multiplexer ports.

yosys> opt_reduce

3.123. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \b11.
Performed a total of 0 changes.

yosys> opt_merge

3.124. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\b11'.
<suppressed ~6 debug messages>
Removed a total of 2 cells.

yosys> opt_share

3.125. Executing OPT_SHARE pass.

yosys> opt_dff -nosdff -sat

3.126. Executing OPT_DFF pass (perform DFF optimizations).

yosys> opt_clean

3.127. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \b11..
Removed 0 unused cells and 3 unused wires.
<suppressed ~1 debug messages>

yosys> opt_expr

3.128. Executing OPT_EXPR pass (perform const folding).
Optimizing module b11.

yosys> opt_muxtree

3.129. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \b11..
  Creating internal representation of mux trees.
  No muxes found in this module.
Removed 0 multiplexer ports.

yosys> opt_reduce

3.130. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \b11.
Performed a total of 0 changes.

yosys> opt_merge

3.131. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\b11'.
Removed a total of 0 cells.

yosys> opt_share

3.132. Executing OPT_SHARE pass.

yosys> opt_dff -nosdff -sat

3.133. Executing OPT_DFF pass (perform DFF optimizations).

yosys> opt_clean

3.134. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \b11..

yosys> opt_expr

3.135. Executing OPT_EXPR pass (perform const folding).
Optimizing module b11.
MAX OPT ITERATION = 3

yosys> bmuxmap

3.136. Executing BMUXMAP pass.

yosys> demuxmap

3.137. Executing DEMUXMAP pass.

yosys> clean_zerowidth

yosys> abc -script /tmp/yosys_m1Inww/abc_tmp_1.scr

3.138. Executing ABC pass (technology mapping using ABC).

3.138.1. Extracting gate netlist of module `\b11' to `<abc-temp-dir>/input.blif'..
Extracted 439 gates and 465 wires to a netlist network with 25 inputs and 30 outputs.

3.138.1.1. Executing ABC.
DE:   #PIs =  25  #Luts =   114  Max Lvl =   4  Avg Lvl =   2.20  [   0.24 sec. at Pass 0]{firstMap}
DE:   #PIs =  25  #Luts =    87  Max Lvl =   7  Avg Lvl =   2.83  [   0.99 sec. at Pass 1]{initMapFlow}
DE:   #PIs =  25  #Luts =    86  Max Lvl =   8  Avg Lvl =   3.27  [   0.25 sec. at Pass 2]{map}
DE:   #PIs =  25  #Luts =    79  Max Lvl =   7  Avg Lvl =   2.83  [   0.59 sec. at Pass 3]{postMap}
DE:   #PIs =  25  #Luts =    77  Max Lvl =   5  Avg Lvl =   2.53  [   0.57 sec. at Pass 4]{map}
DE:   #PIs =  25  #Luts =    72  Max Lvl =   6  Avg Lvl =   2.60  [   1.49 sec. at Pass 5]{postMap}
DE:   #PIs =  25  #Luts =    71  Max Lvl =   6  Avg Lvl =   2.60  [   1.04 sec. at Pass 6]{map}
DE:   #PIs =  25  #Luts =    68  Max Lvl =   7  Avg Lvl =   2.70  [   1.87 sec. at Pass 7]{postMap}
DE:   #PIs =  25  #Luts =    68  Max Lvl =   7  Avg Lvl =   2.70  [   1.10 sec. at Pass 8]{map}
DE:   #PIs =  25  #Luts =    67  Max Lvl =   6  Avg Lvl =   2.53  [   1.90 sec. at Pass 9]{postMap}
DE:   #PIs =  25  #Luts =    67  Max Lvl =   6  Avg Lvl =   2.53  [   0.55 sec. at Pass 10]{map}
DE:   #PIs =  25  #Luts =    65  Max Lvl =   5  Avg Lvl =   2.57  [   0.96 sec. at Pass 11]{postMap}
DE:   #PIs =  25  #Luts =    65  Max Lvl =   5  Avg Lvl =   2.57  [   0.78 sec. at Pass 12]{map}
DE:   #PIs =  25  #Luts =    65  Max Lvl =   5  Avg Lvl =   2.57  [   1.13 sec. at Pass 13]{postMap}
DE:   #PIs =  25  #Luts =    65  Max Lvl =   5  Avg Lvl =   2.57  [   0.97 sec. at Pass 14]{map}
DE:   #PIs =  25  #Luts =    63  Max Lvl =   5  Avg Lvl =   2.40  [   8.00 sec. at Pass 15]{pushMap}
DE:   #PIs =  25  #Luts =    63  Max Lvl =   5  Avg Lvl =   2.40  [   1.49 sec. at Pass 16]{postMap}
DE:   #PIs =  25  #Luts =    63  Max Lvl =   5  Avg Lvl =   2.40  [   1.42 sec. at Pass 17]{map}
DE:   #PIs =  25  #Luts =    62  Max Lvl =   6  Avg Lvl =   2.50  [   1.84 sec. at Pass 18]{postMap}
DE:   #PIs =  25  #Luts =    62  Max Lvl =   6  Avg Lvl =   2.50  [   1.41 sec. at Pass 19]{map}
DE:   #PIs =  25  #Luts =    62  Max Lvl =   6  Avg Lvl =   2.50  [   1.80 sec. at Pass 20]{postMap}
DE:   #PIs =  25  #Luts =    62  Max Lvl =   5  Avg Lvl =   2.33  [   1.34 sec. at Pass 21]{map}
DE:   #PIs =  25  #Luts =    62  Max Lvl =   5  Avg Lvl =   2.33  [   1.96 sec. at Pass 22]{postMap}
DE:   #PIs =  25  #Luts =    61  Max Lvl =   5  Avg Lvl =   2.33  [   1.45 sec. at Pass 23]{map}
DE:   #PIs =  25  #Luts =    61  Max Lvl =   5  Avg Lvl =   2.33  [   1.85 sec. at Pass 24]{postMap}
DE:   #PIs =  25  #Luts =    61  Max Lvl =   5  Avg Lvl =   2.33  [   1.39 sec. at Pass 25]{map}
DE:   #PIs =  25  #Luts =    61  Max Lvl =   5  Avg Lvl =   2.33  [   1.76 sec. at Pass 26]{postMap}
DE:   #PIs =  25  #Luts =    61  Max Lvl =   5  Avg Lvl =   2.33  [   9.23 sec. at Pass 27]{pushMap}
DE:   #PIs =  25  #Luts =    61  Max Lvl =   5  Avg Lvl =   2.33  [   1.30 sec. at Pass 28]{finalMap}

yosys> opt_expr

3.139. Executing OPT_EXPR pass (perform const folding).
Optimizing module b11.

yosys> opt_merge -nomux

3.140. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\b11'.
Removed a total of 0 cells.

yosys> opt_muxtree

3.141. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \b11..
  Creating internal representation of mux trees.
  No muxes found in this module.
Removed 0 multiplexer ports.

yosys> opt_reduce

3.142. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \b11.
Performed a total of 0 changes.

yosys> opt_merge

3.143. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\b11'.
Removed a total of 0 cells.

yosys> opt_share

3.144. Executing OPT_SHARE pass.

yosys> opt_dff -nosdff -nodffe

3.145. Executing OPT_DFF pass (perform DFF optimizations).

yosys> opt_clean

3.146. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \b11..
Removed 0 unused cells and 445 unused wires.
<suppressed ~1 debug messages>

yosys> opt_expr

3.147. Executing OPT_EXPR pass (perform const folding).
Optimizing module b11.
MAX OPT ITERATION = 1

yosys> opt_ffinv

3.148. Executing OPT_FFINV pass (push inverters through FFs).
Discovering LUTs.
Pushed 0 inverters.

yosys> stat

3.149. Printing statistics.

=== b11 ===

   Number of wires:                 86
   Number of wire bits:            111
   Number of public wires:           8
   Number of public wire bits:      33
   Number of memories:               0
   Number of memory bits:            0
   Number of processes:              0
   Number of cells:                 91
     $_DFFE_PP0P_                   26
     $_DFF_PP0_                      4
     $lut                           61


yosys> shregmap -minlen 8 -maxlen 20

3.150. Executing SHREGMAP pass (map shift registers).
Converted 0 dff cells into 0 shift registers.

yosys> dfflegalize -cell $_DFF_?_ 0 -cell $_DFF_???_ 0 -cell $_DFFE_????_ 0 -cell $_DFFSR_???_ 0 -cell $_DFFSRE_????_ 0 -cell $_DLATCHSR_PPP_ 0

3.151. Executing DFFLEGALIZE pass (convert FFs to types supported by the target).

yosys> stat

3.152. Printing statistics.

=== b11 ===

   Number of wires:                 86
   Number of wire bits:            111
   Number of public wires:           8
   Number of public wire bits:      33
   Number of memories:               0
   Number of memory bits:            0
   Number of processes:              0
   Number of cells:                 91
     $_DFFE_PP0P_                   26
     $_DFF_PP0_                      4
     $lut                           61


yosys> techmap -map +/techmap.v -map +/rapidsilicon/genesis/ffs_map.v

3.153. Executing TECHMAP pass (map to technology primitives).

3.153.1. Executing Verilog-2005 frontend: /nfs_scratch/scratch/Vorak/aram/Workspace/Raptor/yosys_verific_rs/yosys/install/bin/../share/yosys/techmap.v
Parsing Verilog input from `/nfs_scratch/scratch/Vorak/aram/Workspace/Raptor/yosys_verific_rs/yosys/install/bin/../share/yosys/techmap.v' to AST representation.
Generating RTLIL representation for module `\_90_simplemap_bool_ops'.
Generating RTLIL representation for module `\_90_simplemap_reduce_ops'.
Generating RTLIL representation for module `\_90_simplemap_logic_ops'.
Generating RTLIL representation for module `\_90_simplemap_compare_ops'.
Generating RTLIL representation for module `\_90_simplemap_various'.
Generating RTLIL representation for module `\_90_simplemap_registers'.
Generating RTLIL representation for module `\_90_shift_ops_shr_shl_sshl_sshr'.
Generating RTLIL representation for module `\_90_shift_shiftx'.
Generating RTLIL representation for module `\_90_fa'.
Generating RTLIL representation for module `\_90_lcu'.
Generating RTLIL representation for module `\_90_alu'.
Generating RTLIL representation for module `\_90_macc'.
Generating RTLIL representation for module `\_90_alumacc'.
Generating RTLIL representation for module `\$__div_mod_u'.
Generating RTLIL representation for module `\$__div_mod_trunc'.
Generating RTLIL representation for module `\_90_div'.
Generating RTLIL representation for module `\_90_mod'.
Generating RTLIL representation for module `\$__div_mod_floor'.
Generating RTLIL representation for module `\_90_divfloor'.
Generating RTLIL representation for module `\_90_modfloor'.
Generating RTLIL representation for module `\_90_pow'.
Generating RTLIL representation for module `\_90_pmux'.
Generating RTLIL representation for module `\_90_demux'.
Generating RTLIL representation for module `\_90_lut'.
Successfully finished Verilog frontend.

3.153.2. Executing Verilog-2005 frontend: /nfs_scratch/scratch/Vorak/aram/Workspace/Raptor/yosys_verific_rs/yosys/install/bin/../share/yosys/rapidsilicon/genesis/ffs_map.v
Parsing Verilog input from `/nfs_scratch/scratch/Vorak/aram/Workspace/Raptor/yosys_verific_rs/yosys/install/bin/../share/yosys/rapidsilicon/genesis/ffs_map.v' to AST representation.
Generating RTLIL representation for module `\$_DFF_P_'.
Generating RTLIL representation for module `\$_DFF_PP0_'.
Generating RTLIL representation for module `\$_DFF_PN0_'.
Generating RTLIL representation for module `\$_DFF_PP1_'.
Generating RTLIL representation for module `\$_DFF_PN1_'.
Generating RTLIL representation for module `\$_DFFE_PP_'.
Generating RTLIL representation for module `\$_DFFE_PN_'.
Generating RTLIL representation for module `\$_DFFE_PP0P_'.
Generating RTLIL representation for module `\$_DFFE_PP0N_'.
Generating RTLIL representation for module `\$_DFFE_PN0P_'.
Generating RTLIL representation for module `\$_DFFE_PN0N_'.
Generating RTLIL representation for module `\$_DFFE_PP1P_'.
Generating RTLIL representation for module `\$_DFFE_PP1N_'.
Generating RTLIL representation for module `\$_DFFE_PN1P_'.
Generating RTLIL representation for module `\$_DFFE_PN1N_'.
Generating RTLIL representation for module `\$_DFFSR_PPP_'.
Generating RTLIL representation for module `\$_DFFSR_PNP_'.
Generating RTLIL representation for module `\$_DFFSR_PNN_'.
Generating RTLIL representation for module `\$_DFFSR_PPN_'.
Generating RTLIL representation for module `\$_DFFSR_NPP_'.
Generating RTLIL representation for module `\$_DFFSR_NNP_'.
Generating RTLIL representation for module `\$_DFFSR_NNN_'.
Generating RTLIL representation for module `\$_DFFSR_NPN_'.
Generating RTLIL representation for module `\$_DFFSRE_PPPP_'.
Generating RTLIL representation for module `\$_DFFSRE_PNPP_'.
Generating RTLIL representation for module `\$_DFFSRE_PPNP_'.
Generating RTLIL representation for module `\$_DFFSRE_PNNP_'.
Generating RTLIL representation for module `\$_DFFSRE_PPPN_'.
Generating RTLIL representation for module `\$_DFFSRE_PNPN_'.
Generating RTLIL representation for module `\$_DFFSRE_PPNN_'.
Generating RTLIL representation for module `\$_DFFSRE_PNNN_'.
Generating RTLIL representation for module `\$_DLATCHSR_PPP_'.
Generating RTLIL representation for module `\$_DLATCHSR_NPP_'.
Generating RTLIL representation for module `\$_DFF_N_'.
Generating RTLIL representation for module `\$_DFF_NP0_'.
Generating RTLIL representation for module `\$_DFF_NN0_'.
Generating RTLIL representation for module `\$_DFF_NP1_'.
Generating RTLIL representation for module `\$_DFF_NN1_'.
Generating RTLIL representation for module `\$_DFFE_NP_'.
Generating RTLIL representation for module `\$_DFFE_NN_'.
Generating RTLIL representation for module `\$_DFFE_NP0P_'.
Generating RTLIL representation for module `\$_DFFE_NP0N_'.
Generating RTLIL representation for module `\$_DFFE_NN0P_'.
Generating RTLIL representation for module `\$_DFFE_NN0N_'.
Generating RTLIL representation for module `\$_DFFE_NP1P_'.
Generating RTLIL representation for module `\$_DFFE_NP1N_'.
Generating RTLIL representation for module `\$_DFFE_NN1P_'.
Generating RTLIL representation for module `\$_DFFE_NN1N_'.
Generating RTLIL representation for module `\$_DFFSRE_NPPP_'.
Generating RTLIL representation for module `\$_DFFSRE_NNPP_'.
Generating RTLIL representation for module `\$_DFFSRE_NPNP_'.
Generating RTLIL representation for module `\$_DFFSRE_NNNP_'.
Generating RTLIL representation for module `\$_DFFSRE_NPPN_'.
Generating RTLIL representation for module `\$_DFFSRE_NNPN_'.
Generating RTLIL representation for module `\$_DFFSRE_NPNN_'.
Generating RTLIL representation for module `\$_DFFSRE_NNNN_'.
Generating RTLIL representation for module `\$__SHREG_DFF_P_'.
Generating RTLIL representation for module `\$_SDFF_PP0_'.
Generating RTLIL representation for module `\$_SDFF_PN0_'.
Generating RTLIL representation for module `\$_SDFF_NP0_'.
Generating RTLIL representation for module `\$_SDFF_NN0_'.
Generating RTLIL representation for module `\$_SDFF_PP1_'.
Generating RTLIL representation for module `\$_SDFF_PN1_'.
Generating RTLIL representation for module `\$_SDFF_NP1_'.
Generating RTLIL representation for module `\$_SDFF_NN1_'.
Successfully finished Verilog frontend.

3.153.3. Continuing TECHMAP pass.
Using template \$_DFFE_PP0P_ for cells of type $_DFFE_PP0P_.
Using template \$_DFF_PP0_ for cells of type $_DFF_PP0_.
Using extmapper simplemap for cells of type $lut.
Using extmapper simplemap for cells of type $logic_not.
No more expansions possible.
<suppressed ~257 debug messages>

yosys> opt_expr -mux_undef

3.154. Executing OPT_EXPR pass (perform const folding).
Optimizing module b11.
<suppressed ~1939 debug messages>

yosys> simplemap

3.155. Executing SIMPLEMAP pass (map simple cells to gate primitives).

yosys> opt_expr

3.156. Executing OPT_EXPR pass (perform const folding).
Optimizing module b11.

yosys> opt_merge

3.157. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\b11'.
<suppressed ~747 debug messages>
Removed a total of 249 cells.

yosys> opt_dff -nodffe -nosdff

3.158. Executing OPT_DFF pass (perform DFF optimizations).

yosys> opt_clean

3.159. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \b11..
Removed 0 unused cells and 291 unused wires.
<suppressed ~1 debug messages>

yosys> opt_expr

3.160. Executing OPT_EXPR pass (perform const folding).
Optimizing module b11.
<suppressed ~40 debug messages>

yosys> opt_merge -nomux

3.161. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\b11'.
<suppressed ~3 debug messages>
Removed a total of 1 cells.

yosys> opt_muxtree

3.162. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \b11..
  Creating internal representation of mux trees.
  No muxes found in this module.
Removed 0 multiplexer ports.

yosys> opt_reduce

3.163. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \b11.
Performed a total of 0 changes.

yosys> opt_merge

3.164. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\b11'.
Removed a total of 0 cells.

yosys> opt_share

3.165. Executing OPT_SHARE pass.

yosys> opt_dff -nosdff -nodffe

3.166. Executing OPT_DFF pass (perform DFF optimizations).

yosys> opt_clean

3.167. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \b11..
Removed 0 unused cells and 5 unused wires.
<suppressed ~1 debug messages>

yosys> opt_expr

3.168. Executing OPT_EXPR pass (perform const folding).
Optimizing module b11.
MAX OPT ITERATION = 1

yosys> abc -script /tmp/yosys_m1Inww/abc_tmp_2.scr

3.169. Executing ABC pass (technology mapping using ABC).

3.169.1. Extracting gate netlist of module `\b11' to `<abc-temp-dir>/input.blif'..
Extracted 420 gates and 448 wires to a netlist network with 26 inputs and 31 outputs.

3.169.1.1. Executing ABC.
DE:   #PIs =  26  #Luts =    62  Max Lvl =   5  Avg Lvl =   2.23  [   0.15 sec. at Pass 0]{firstMap}
DE:   #PIs =  26  #Luts =    62  Max Lvl =   5  Avg Lvl =   2.23  [   0.89 sec. at Pass 1]{initMapFlow}
DE:   #PIs =  26  #Luts =    62  Max Lvl =   5  Avg Lvl =   2.23  [   0.50 sec. at Pass 2]{map}
DE:   #PIs =  26  #Luts =    62  Max Lvl =   5  Avg Lvl =   2.23  [   1.28 sec. at Pass 3]{postMap}
DE:   #PIs =  26  #Luts =    62  Max Lvl =   5  Avg Lvl =   2.23  [   0.56 sec. at Pass 4]{map}
DE:   #PIs =  26  #Luts =    62  Max Lvl =   5  Avg Lvl =   2.23  [   1.45 sec. at Pass 5]{postMap}
DE:   #PIs =  26  #Luts =    62  Max Lvl =   5  Avg Lvl =   2.23  [   6.94 sec. at Pass 6]{pushMap}
DE:   #PIs =  26  #Luts =    62  Max Lvl =   5  Avg Lvl =   2.23  [   1.04 sec. at Pass 7]{finalMap}

yosys> opt_expr

3.170. Executing OPT_EXPR pass (perform const folding).
Optimizing module b11.

yosys> opt_merge -nomux

3.171. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\b11'.
Removed a total of 0 cells.

yosys> opt_muxtree

3.172. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \b11..
  Creating internal representation of mux trees.
  No muxes found in this module.
Removed 0 multiplexer ports.

yosys> opt_reduce

3.173. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \b11.
Performed a total of 0 changes.

yosys> opt_merge

3.174. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\b11'.
Removed a total of 0 cells.

yosys> opt_share

3.175. Executing OPT_SHARE pass.

yosys> opt_dff -nosdff -nodffe

3.176. Executing OPT_DFF pass (perform DFF optimizations).

yosys> opt_clean

3.177. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \b11..
Removed 0 unused cells and 281 unused wires.
<suppressed ~1 debug messages>

yosys> opt_expr

3.178. Executing OPT_EXPR pass (perform const folding).
Optimizing module b11.
MAX OPT ITERATION = 1

yosys> hierarchy -check

3.179. Executing HIERARCHY pass (managing design hierarchy).

3.179.1. Analyzing design hierarchy..
Top module:  \b11

3.179.2. Analyzing design hierarchy..
Top module:  \b11
Removed 0 unused modules.

yosys> stat

3.180. Printing statistics.

=== b11 ===

   Number of wires:                 87
   Number of wire bits:            112
   Number of public wires:           8
   Number of public wire bits:      33
   Number of memories:               0
   Number of memory bits:            0
   Number of processes:              0
   Number of cells:                 92
     $lut                           62
     dffsre                         30


yosys> opt_clean -purge

3.181. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \b11..

yosys> write_verilog -noattr -nohex synthesized.v

3.182. Executing Verilog backend.
Dumping module `\b11'.

End of script. Logfile hash: 7a9d7218dc, CPU: user 1.80s system 0.04s, MEM: 48.82 MB peak
Yosys 0.18+10 (git sha1 7361c89db, gcc 9.4.0-1ubuntu1~20.04.1 -fPIC -Os)
Time spent: 99% 6x abc (464 sec), 0% 39x opt_expr (0 sec), ...
real 77.38
user 434.99
sys 31.56
