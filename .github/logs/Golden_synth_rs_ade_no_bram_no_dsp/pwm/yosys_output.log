
 /----------------------------------------------------------------------------\
 |                                                                            |
 |  yosys -- Yosys Open SYnthesis Suite                                       |
 |                                                                            |
 |  Copyright (C) 2012 - 2020  Claire Xenia Wolf <claire@yosyshq.com>         |
 |                                                                            |
 |  Permission to use, copy, modify, and/or distribute this software for any  |
 |  purpose with or without fee is hereby granted, provided that the above    |
 |  copyright notice and this permission notice appear in all copies.         |
 |                                                                            |
 |  THE SOFTWARE IS PROVIDED "AS IS" AND THE AUTHOR DISCLAIMS ALL WARRANTIES  |
 |  WITH REGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF          |
 |  MERCHANTABILITY AND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR   |
 |  ANY SPECIAL, DIRECT, INDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES    |
 |  WHATSOEVER RESULTING FROM LOSS OF USE, DATA OR PROFITS, WHETHER IN AN     |
 |  ACTION OF CONTRACT, NEGLIGENCE OR OTHER TORTIOUS ACTION, ARISING OUT OF   |
 |  OR IN CONNECTION WITH THE USE OR PERFORMANCE OF THIS SOFTWARE.            |
 |                                                                            |
 \----------------------------------------------------------------------------/

 Yosys-Verific 0.0.92
 Yosys 0.18+10 (git sha1 7361c89db, gcc 9.4.0-1ubuntu1~20.04.1 -fPIC -Os)


-- Executing script file `yosys.ys' --
echo on

yosys> plugin -i synth-rs

yosys> read -verific

yosys> read -incdir .

yosys> verific -vlog-incdir .

1. Executing VERIFIC (loading SystemVerilog and VHDL designs using Verific).
Built with Verific May22_SW_Release, released at Wed Jun  1 05:39:28 2022.

yosys> verilog_defaults -add -I.

yosys> read -sv prim_alert_pkg.sv prim_mubi_pkg.sv prim_pkg.sv prim_secded_pkg.sv prim_subreg_pkg.sv prim_util_pkg.sv pwm_reg_pkg.sv top_pkg.sv tlul_pkg.sv prim_alert_sender.sv prim_buf.sv prim_diff_decode.sv prim_flop_2sync.sv prim_generic_buf.sv prim_generic_flop.sv prim_generic_flop_2sync.sv prim_reg_cdc.sv prim_secded_inv_39_32_dec.sv prim_secded_inv_39_32_enc.sv prim_secded_inv_64_57_dec.sv prim_secded_inv_64_57_enc.sv prim_subreg.sv prim_subreg_ext.sv prim_sync_reqack.sv pwm.sv pwm_chan.sv pwm_core.sv pwm_reg_top.sv tlul_adapter_reg.sv tlul_cmd_intg_chk.sv tlul_data_integ_dec.sv tlul_data_integ_enc.sv tlul_err.sv tlul_rsp_intg_gen.sv

yosys> verific -sv prim_alert_pkg.sv prim_mubi_pkg.sv prim_pkg.sv prim_secded_pkg.sv prim_subreg_pkg.sv prim_util_pkg.sv pwm_reg_pkg.sv top_pkg.sv tlul_pkg.sv prim_alert_sender.sv prim_buf.sv prim_diff_decode.sv prim_flop_2sync.sv prim_generic_buf.sv prim_generic_flop.sv prim_generic_flop_2sync.sv prim_reg_cdc.sv prim_secded_inv_39_32_dec.sv prim_secded_inv_39_32_enc.sv prim_secded_inv_64_57_dec.sv prim_secded_inv_64_57_enc.sv prim_subreg.sv prim_subreg_ext.sv prim_sync_reqack.sv pwm.sv pwm_chan.sv pwm_core.sv pwm_reg_top.sv tlul_adapter_reg.sv tlul_cmd_intg_chk.sv tlul_data_integ_dec.sv tlul_data_integ_enc.sv tlul_err.sv tlul_rsp_intg_gen.sv

2. Executing VERIFIC (loading SystemVerilog and VHDL designs using Verific).
Built with Verific May22_SW_Release, released at Wed Jun  1 05:39:28 2022.
VERIFIC-COMMENT [VERI-1482] Analyzing Verilog file 'prim_alert_pkg.sv'
VERIFIC-WARNING [VERI-2418] prim_alert_pkg.sv:19: parameter 'ALERT_TX_DEFAULT' declared inside package 'prim_alert_pkg' shall be treated as localparam
VERIFIC-WARNING [VERI-2418] prim_alert_pkg.sv:22: parameter 'ALERT_RX_DEFAULT' declared inside package 'prim_alert_pkg' shall be treated as localparam
VERIFIC-COMMENT [VERI-1482] Analyzing Verilog file 'prim_mubi_pkg.sv'
VERIFIC-WARNING [VERI-2418] prim_mubi_pkg.sv:19: parameter 'MuBi4Width' declared inside package 'prim_mubi_pkg' shall be treated as localparam
VERIFIC-WARNING [VERI-2418] prim_mubi_pkg.sv:148: parameter 'MuBi8Width' declared inside package 'prim_mubi_pkg' shall be treated as localparam
VERIFIC-WARNING [VERI-2418] prim_mubi_pkg.sv:277: parameter 'MuBi12Width' declared inside package 'prim_mubi_pkg' shall be treated as localparam
VERIFIC-WARNING [VERI-2418] prim_mubi_pkg.sv:406: parameter 'MuBi16Width' declared inside package 'prim_mubi_pkg' shall be treated as localparam
VERIFIC-COMMENT [VERI-1482] Analyzing Verilog file 'prim_pkg.sv'
VERIFIC-COMMENT [VERI-1482] Analyzing Verilog file 'prim_secded_pkg.sv'
VERIFIC-WARNING [VERI-2418] prim_secded_pkg.sv:81: parameter 'Secded2216ZeroEcc' declared inside package 'prim_secded_pkg' shall be treated as localparam
VERIFIC-WARNING [VERI-2418] prim_secded_pkg.sv:82: parameter 'Secded2216ZeroWord' declared inside package 'prim_secded_pkg' shall be treated as localparam
VERIFIC-WARNING [VERI-2418] prim_secded_pkg.sv:90: parameter 'Secded2822ZeroEcc' declared inside package 'prim_secded_pkg' shall be treated as localparam
VERIFIC-WARNING [VERI-2418] prim_secded_pkg.sv:91: parameter 'Secded2822ZeroWord' declared inside package 'prim_secded_pkg' shall be treated as localparam
VERIFIC-WARNING [VERI-2418] prim_secded_pkg.sv:99: parameter 'Secded3932ZeroEcc' declared inside package 'prim_secded_pkg' shall be treated as localparam
VERIFIC-WARNING [VERI-2418] prim_secded_pkg.sv:100: parameter 'Secded3932ZeroWord' declared inside package 'prim_secded_pkg' shall be treated as localparam
VERIFIC-WARNING [VERI-2418] prim_secded_pkg.sv:108: parameter 'Secded6457ZeroEcc' declared inside package 'prim_secded_pkg' shall be treated as localparam
VERIFIC-WARNING [VERI-2418] prim_secded_pkg.sv:109: parameter 'Secded6457ZeroWord' declared inside package 'prim_secded_pkg' shall be treated as localparam
VERIFIC-WARNING [VERI-2418] prim_secded_pkg.sv:117: parameter 'Secded7264ZeroEcc' declared inside package 'prim_secded_pkg' shall be treated as localparam
VERIFIC-WARNING [VERI-2418] prim_secded_pkg.sv:118: parameter 'Secded7264ZeroWord' declared inside package 'prim_secded_pkg' shall be treated as localparam
VERIFIC-WARNING [VERI-2418] prim_secded_pkg.sv:126: parameter 'SecdedHamming2216ZeroEcc' declared inside package 'prim_secded_pkg' shall be treated as localparam
VERIFIC-WARNING [VERI-2418] prim_secded_pkg.sv:127: parameter 'SecdedHamming2216ZeroWord' declared inside package 'prim_secded_pkg' shall be treated as localparam
VERIFIC-WARNING [VERI-2418] prim_secded_pkg.sv:135: parameter 'SecdedHamming3932ZeroEcc' declared inside package 'prim_secded_pkg' shall be treated as localparam
VERIFIC-WARNING [VERI-2418] prim_secded_pkg.sv:136: parameter 'SecdedHamming3932ZeroWord' declared inside package 'prim_secded_pkg' shall be treated as localparam
VERIFIC-WARNING [VERI-2418] prim_secded_pkg.sv:144: parameter 'SecdedHamming7264ZeroEcc' declared inside package 'prim_secded_pkg' shall be treated as localparam
VERIFIC-WARNING [VERI-2418] prim_secded_pkg.sv:145: parameter 'SecdedHamming7264ZeroWord' declared inside package 'prim_secded_pkg' shall be treated as localparam
VERIFIC-WARNING [VERI-2418] prim_secded_pkg.sv:153: parameter 'SecdedHamming7668ZeroEcc' declared inside package 'prim_secded_pkg' shall be treated as localparam
VERIFIC-WARNING [VERI-2418] prim_secded_pkg.sv:154: parameter 'SecdedHamming7668ZeroWord' declared inside package 'prim_secded_pkg' shall be treated as localparam
VERIFIC-WARNING [VERI-2418] prim_secded_pkg.sv:162: parameter 'SecdedInv2216ZeroEcc' declared inside package 'prim_secded_pkg' shall be treated as localparam
VERIFIC-WARNING [VERI-2418] prim_secded_pkg.sv:163: parameter 'SecdedInv2216ZeroWord' declared inside package 'prim_secded_pkg' shall be treated as localparam
VERIFIC-WARNING [VERI-2418] prim_secded_pkg.sv:171: parameter 'SecdedInv2822ZeroEcc' declared inside package 'prim_secded_pkg' shall be treated as localparam
VERIFIC-WARNING [VERI-2418] prim_secded_pkg.sv:172: parameter 'SecdedInv2822ZeroWord' declared inside package 'prim_secded_pkg' shall be treated as localparam
VERIFIC-WARNING [VERI-2418] prim_secded_pkg.sv:180: parameter 'SecdedInv3932ZeroEcc' declared inside package 'prim_secded_pkg' shall be treated as localparam
VERIFIC-WARNING [VERI-2418] prim_secded_pkg.sv:181: parameter 'SecdedInv3932ZeroWord' declared inside package 'prim_secded_pkg' shall be treated as localparam
VERIFIC-WARNING [VERI-2418] prim_secded_pkg.sv:189: parameter 'SecdedInv6457ZeroEcc' declared inside package 'prim_secded_pkg' shall be treated as localparam
VERIFIC-WARNING [VERI-2418] prim_secded_pkg.sv:190: parameter 'SecdedInv6457ZeroWord' declared inside package 'prim_secded_pkg' shall be treated as localparam
VERIFIC-WARNING [VERI-2418] prim_secded_pkg.sv:198: parameter 'SecdedInv7264ZeroEcc' declared inside package 'prim_secded_pkg' shall be treated as localparam
VERIFIC-WARNING [VERI-2418] prim_secded_pkg.sv:199: parameter 'SecdedInv7264ZeroWord' declared inside package 'prim_secded_pkg' shall be treated as localparam
VERIFIC-WARNING [VERI-2418] prim_secded_pkg.sv:207: parameter 'SecdedInvHamming2216ZeroEcc' declared inside package 'prim_secded_pkg' shall be treated as localparam
VERIFIC-WARNING [VERI-2418] prim_secded_pkg.sv:208: parameter 'SecdedInvHamming2216ZeroWord' declared inside package 'prim_secded_pkg' shall be treated as localparam
VERIFIC-WARNING [VERI-2418] prim_secded_pkg.sv:216: parameter 'SecdedInvHamming3932ZeroEcc' declared inside package 'prim_secded_pkg' shall be treated as localparam
VERIFIC-WARNING [VERI-2418] prim_secded_pkg.sv:217: parameter 'SecdedInvHamming3932ZeroWord' declared inside package 'prim_secded_pkg' shall be treated as localparam
VERIFIC-WARNING [VERI-2418] prim_secded_pkg.sv:225: parameter 'SecdedInvHamming7264ZeroEcc' declared inside package 'prim_secded_pkg' shall be treated as localparam
VERIFIC-WARNING [VERI-2418] prim_secded_pkg.sv:226: parameter 'SecdedInvHamming7264ZeroWord' declared inside package 'prim_secded_pkg' shall be treated as localparam
VERIFIC-WARNING [VERI-2418] prim_secded_pkg.sv:234: parameter 'SecdedInvHamming7668ZeroEcc' declared inside package 'prim_secded_pkg' shall be treated as localparam
VERIFIC-WARNING [VERI-2418] prim_secded_pkg.sv:235: parameter 'SecdedInvHamming7668ZeroWord' declared inside package 'prim_secded_pkg' shall be treated as localparam
VERIFIC-COMMENT [VERI-1482] Analyzing Verilog file 'prim_subreg_pkg.sv'
VERIFIC-COMMENT [VERI-1482] Analyzing Verilog file 'prim_util_pkg.sv'
VERIFIC-COMMENT [VERI-1482] Analyzing Verilog file 'pwm_reg_pkg.sv'
VERIFIC-WARNING [VERI-2418] pwm_reg_pkg.sv:10: parameter 'NOutputs' declared inside package 'pwm_reg_pkg' shall be treated as localparam
VERIFIC-WARNING [VERI-2418] pwm_reg_pkg.sv:11: parameter 'NumAlerts' declared inside package 'pwm_reg_pkg' shall be treated as localparam
VERIFIC-WARNING [VERI-2418] pwm_reg_pkg.sv:14: parameter 'BlockAw' declared inside package 'pwm_reg_pkg' shall be treated as localparam
VERIFIC-WARNING [VERI-2418] pwm_reg_pkg.sv:99: parameter 'PWM_ALERT_TEST_OFFSET' declared inside package 'pwm_reg_pkg' shall be treated as localparam
VERIFIC-WARNING [VERI-2418] pwm_reg_pkg.sv:100: parameter 'PWM_REGWEN_OFFSET' declared inside package 'pwm_reg_pkg' shall be treated as localparam
VERIFIC-WARNING [VERI-2418] pwm_reg_pkg.sv:101: parameter 'PWM_CFG_OFFSET' declared inside package 'pwm_reg_pkg' shall be treated as localparam
VERIFIC-WARNING [VERI-2418] pwm_reg_pkg.sv:102: parameter 'PWM_PWM_EN_OFFSET' declared inside package 'pwm_reg_pkg' shall be treated as localparam
VERIFIC-WARNING [VERI-2418] pwm_reg_pkg.sv:103: parameter 'PWM_INVERT_OFFSET' declared inside package 'pwm_reg_pkg' shall be treated as localparam
VERIFIC-WARNING [VERI-2418] pwm_reg_pkg.sv:104: parameter 'PWM_PWM_PARAM_0_OFFSET' declared inside package 'pwm_reg_pkg' shall be treated as localparam
VERIFIC-WARNING [VERI-2418] pwm_reg_pkg.sv:105: parameter 'PWM_PWM_PARAM_1_OFFSET' declared inside package 'pwm_reg_pkg' shall be treated as localparam
VERIFIC-WARNING [VERI-2418] pwm_reg_pkg.sv:106: parameter 'PWM_PWM_PARAM_2_OFFSET' declared inside package 'pwm_reg_pkg' shall be treated as localparam
VERIFIC-WARNING [VERI-2418] pwm_reg_pkg.sv:107: parameter 'PWM_PWM_PARAM_3_OFFSET' declared inside package 'pwm_reg_pkg' shall be treated as localparam
VERIFIC-WARNING [VERI-2418] pwm_reg_pkg.sv:108: parameter 'PWM_PWM_PARAM_4_OFFSET' declared inside package 'pwm_reg_pkg' shall be treated as localparam
VERIFIC-WARNING [VERI-2418] pwm_reg_pkg.sv:109: parameter 'PWM_PWM_PARAM_5_OFFSET' declared inside package 'pwm_reg_pkg' shall be treated as localparam
VERIFIC-WARNING [VERI-2418] pwm_reg_pkg.sv:110: parameter 'PWM_DUTY_CYCLE_0_OFFSET' declared inside package 'pwm_reg_pkg' shall be treated as localparam
VERIFIC-WARNING [VERI-2418] pwm_reg_pkg.sv:111: parameter 'PWM_DUTY_CYCLE_1_OFFSET' declared inside package 'pwm_reg_pkg' shall be treated as localparam
VERIFIC-WARNING [VERI-2418] pwm_reg_pkg.sv:112: parameter 'PWM_DUTY_CYCLE_2_OFFSET' declared inside package 'pwm_reg_pkg' shall be treated as localparam
VERIFIC-WARNING [VERI-2418] pwm_reg_pkg.sv:113: parameter 'PWM_DUTY_CYCLE_3_OFFSET' declared inside package 'pwm_reg_pkg' shall be treated as localparam
VERIFIC-WARNING [VERI-2418] pwm_reg_pkg.sv:114: parameter 'PWM_DUTY_CYCLE_4_OFFSET' declared inside package 'pwm_reg_pkg' shall be treated as localparam
VERIFIC-WARNING [VERI-2418] pwm_reg_pkg.sv:115: parameter 'PWM_DUTY_CYCLE_5_OFFSET' declared inside package 'pwm_reg_pkg' shall be treated as localparam
VERIFIC-WARNING [VERI-2418] pwm_reg_pkg.sv:116: parameter 'PWM_BLINK_PARAM_0_OFFSET' declared inside package 'pwm_reg_pkg' shall be treated as localparam
VERIFIC-WARNING [VERI-2418] pwm_reg_pkg.sv:117: parameter 'PWM_BLINK_PARAM_1_OFFSET' declared inside package 'pwm_reg_pkg' shall be treated as localparam
VERIFIC-WARNING [VERI-2418] pwm_reg_pkg.sv:118: parameter 'PWM_BLINK_PARAM_2_OFFSET' declared inside package 'pwm_reg_pkg' shall be treated as localparam
VERIFIC-WARNING [VERI-2418] pwm_reg_pkg.sv:119: parameter 'PWM_BLINK_PARAM_3_OFFSET' declared inside package 'pwm_reg_pkg' shall be treated as localparam
VERIFIC-WARNING [VERI-2418] pwm_reg_pkg.sv:120: parameter 'PWM_BLINK_PARAM_4_OFFSET' declared inside package 'pwm_reg_pkg' shall be treated as localparam
VERIFIC-WARNING [VERI-2418] pwm_reg_pkg.sv:121: parameter 'PWM_BLINK_PARAM_5_OFFSET' declared inside package 'pwm_reg_pkg' shall be treated as localparam
VERIFIC-WARNING [VERI-2418] pwm_reg_pkg.sv:124: parameter 'PWM_ALERT_TEST_RESVAL' declared inside package 'pwm_reg_pkg' shall be treated as localparam
VERIFIC-WARNING [VERI-2418] pwm_reg_pkg.sv:125: parameter 'PWM_ALERT_TEST_FATAL_FAULT_RESVAL' declared inside package 'pwm_reg_pkg' shall be treated as localparam
VERIFIC-WARNING [VERI-2418] pwm_reg_pkg.sv:155: parameter 'PWM_PERMIT' declared inside package 'pwm_reg_pkg' shall be treated as localparam
VERIFIC-COMMENT [VERI-1482] Analyzing Verilog file 'top_pkg.sv'
VERIFIC-COMMENT [VERI-1482] Analyzing Verilog file 'tlul_pkg.sv'
VERIFIC-WARNING [VERI-2418] tlul_pkg.sv:14: parameter 'ArbiterImpl' declared inside package 'tlul_pkg' shall be treated as localparam
VERIFIC-WARNING [VERI-2418] tlul_pkg.sv:27: parameter 'H2DCmdMaxWidth' declared inside package 'tlul_pkg' shall be treated as localparam
VERIFIC-WARNING [VERI-2418] tlul_pkg.sv:28: parameter 'H2DCmdIntgWidth' declared inside package 'tlul_pkg' shall be treated as localparam
VERIFIC-WARNING [VERI-2418] tlul_pkg.sv:29: parameter 'H2DCmdFullWidth' declared inside package 'tlul_pkg' shall be treated as localparam
VERIFIC-WARNING [VERI-2418] tlul_pkg.sv:30: parameter 'D2HRspMaxWidth' declared inside package 'tlul_pkg' shall be treated as localparam
VERIFIC-WARNING [VERI-2418] tlul_pkg.sv:31: parameter 'D2HRspIntgWidth' declared inside package 'tlul_pkg' shall be treated as localparam
VERIFIC-WARNING [VERI-2418] tlul_pkg.sv:32: parameter 'D2HRspFullWidth' declared inside package 'tlul_pkg' shall be treated as localparam
VERIFIC-WARNING [VERI-2418] tlul_pkg.sv:33: parameter 'DataMaxWidth' declared inside package 'tlul_pkg' shall be treated as localparam
VERIFIC-WARNING [VERI-2418] tlul_pkg.sv:34: parameter 'DataIntgWidth' declared inside package 'tlul_pkg' shall be treated as localparam
VERIFIC-WARNING [VERI-2418] tlul_pkg.sv:35: parameter 'DataFullWidth' declared inside package 'tlul_pkg' shall be treated as localparam
VERIFIC-WARNING [VERI-2418] tlul_pkg.sv:44: parameter 'TL_A_USER_DEFAULT' declared inside package 'tlul_pkg' shall be treated as localparam
VERIFIC-WARNING [VERI-2418] tlul_pkg.sv:84: parameter 'TL_D_USER_DEFAULT' declared inside package 'tlul_pkg' shall be treated as localparam
VERIFIC-COMMENT [VERI-1482] Analyzing Verilog file 'prim_alert_sender.sv'
VERIFIC-COMMENT [VERI-1482] Analyzing Verilog file 'prim_buf.sv'
VERIFIC-WARNING [VERI-1199] prim_buf.sv:24: parameter 'Impl' becomes localparam in 'prim_buf' with formal parameter declaration list
VERIFIC-COMMENT [VERI-1482] Analyzing Verilog file 'prim_diff_decode.sv'
VERIFIC-COMMENT [VERI-1482] Analyzing Verilog file 'prim_flop_2sync.sv'
VERIFIC-COMMENT [VERI-1482] Analyzing Verilog file 'prim_generic_buf.sv'
VERIFIC-COMMENT [VERI-1482] Analyzing Verilog file 'prim_generic_flop.sv'
VERIFIC-COMMENT [VERI-1482] Analyzing Verilog file 'prim_generic_flop_2sync.sv'
VERIFIC-COMMENT [VERI-1482] Analyzing Verilog file 'prim_reg_cdc.sv'
VERIFIC-COMMENT [VERI-1482] Analyzing Verilog file 'prim_secded_inv_39_32_dec.sv'
VERIFIC-COMMENT [VERI-1482] Analyzing Verilog file 'prim_secded_inv_39_32_enc.sv'
VERIFIC-COMMENT [VERI-1482] Analyzing Verilog file 'prim_secded_inv_64_57_dec.sv'
VERIFIC-COMMENT [VERI-1482] Analyzing Verilog file 'prim_secded_inv_64_57_enc.sv'
VERIFIC-COMMENT [VERI-1482] Analyzing Verilog file 'prim_subreg.sv'
VERIFIC-COMMENT [VERI-1482] Analyzing Verilog file 'prim_subreg_ext.sv'
VERIFIC-COMMENT [VERI-1482] Analyzing Verilog file 'prim_sync_reqack.sv'
VERIFIC-COMMENT [VERI-1482] Analyzing Verilog file 'pwm.sv'
VERIFIC-COMMENT [VERI-1482] Analyzing Verilog file 'pwm_chan.sv'
VERIFIC-COMMENT [VERI-1482] Analyzing Verilog file 'pwm_core.sv'
VERIFIC-COMMENT [VERI-1482] Analyzing Verilog file 'pwm_reg_top.sv'
VERIFIC-COMMENT [VERI-1482] Analyzing Verilog file 'tlul_adapter_reg.sv'
VERIFIC-COMMENT [VERI-1482] Analyzing Verilog file 'tlul_cmd_intg_chk.sv'
VERIFIC-COMMENT [VERI-1482] Analyzing Verilog file 'tlul_data_integ_dec.sv'
VERIFIC-COMMENT [VERI-1482] Analyzing Verilog file 'tlul_data_integ_enc.sv'
VERIFIC-COMMENT [VERI-1482] Analyzing Verilog file 'tlul_err.sv'
VERIFIC-COMMENT [VERI-1482] Analyzing Verilog file 'tlul_rsp_intg_gen.sv'

yosys> synth_rs -top pwm -tech genesis -goal area -de -no_dsp -no_bram -verilog synthesized.v

3. Executing synth_rs pass: v0.4.79

yosys> read_verilog -lib -specify -nomem2reg +/rapidsilicon/common/cells_sim.v +/rapidsilicon/genesis/cells_sim.v +/rapidsilicon/genesis/dsp_sim.v

3.1. Executing Verilog-2005 frontend: /nfs_scratch/scratch/Vorak/aram/Workspace/Raptor/yosys_verific_rs/yosys/install/bin/../share/yosys/rapidsilicon/common/cells_sim.v
Parsing Verilog input from `/nfs_scratch/scratch/Vorak/aram/Workspace/Raptor/yosys_verific_rs/yosys/install/bin/../share/yosys/rapidsilicon/common/cells_sim.v' to AST representation.
Generating RTLIL representation for module `\inv'.
Generating RTLIL representation for module `\buff'.
Generating RTLIL representation for module `\logic_0'.
Generating RTLIL representation for module `\logic_1'.
Generating RTLIL representation for module `\gclkbuff'.
Successfully finished Verilog frontend.

3.2. Executing Verilog-2005 frontend: /nfs_scratch/scratch/Vorak/aram/Workspace/Raptor/yosys_verific_rs/yosys/install/bin/../share/yosys/rapidsilicon/genesis/cells_sim.v
Parsing Verilog input from `/nfs_scratch/scratch/Vorak/aram/Workspace/Raptor/yosys_verific_rs/yosys/install/bin/../share/yosys/rapidsilicon/genesis/cells_sim.v' to AST representation.
Generating RTLIL representation for module `\dffsre'.
Generating RTLIL representation for module `\dffnsre'.
Generating RTLIL representation for module `\latchsre'.
Generating RTLIL representation for module `\latchnsre'.
Generating RTLIL representation for module `\io_scff'.
Generating RTLIL representation for module `\scff'.
Generating RTLIL representation for module `\sh_dff'.
Generating RTLIL representation for module `\adder_carry'.
Generating RTLIL representation for module `\sdffr'.
Generating RTLIL representation for module `\sdffs'.
Generating RTLIL representation for module `\TDP_BRAM18'.
Generating RTLIL representation for module `\TDP36K'.
Generating RTLIL representation for module `\BRAM2x18_TDP'.
Generating RTLIL representation for module `\BRAM2x18_SDP'.
Generating RTLIL representation for module `\_$_mem_v2_asymmetric'.
Successfully finished Verilog frontend.

3.3. Executing Verilog-2005 frontend: /nfs_scratch/scratch/Vorak/aram/Workspace/Raptor/yosys_verific_rs/yosys/install/bin/../share/yosys/rapidsilicon/genesis/dsp_sim.v
Parsing Verilog input from `/nfs_scratch/scratch/Vorak/aram/Workspace/Raptor/yosys_verific_rs/yosys/install/bin/../share/yosys/rapidsilicon/genesis/dsp_sim.v' to AST representation.
Generating RTLIL representation for module `\RS_DSP1'.
Generating RTLIL representation for module `\RS_DSP2'.
Generating RTLIL representation for module `\RS_DSP2_MULT'.
Generating RTLIL representation for module `\RS_DSP2_MULT_REGIN'.
Generating RTLIL representation for module `\RS_DSP2_MULT_REGOUT'.
Generating RTLIL representation for module `\RS_DSP2_MULT_REGIN_REGOUT'.
Generating RTLIL representation for module `\RS_DSP2_MULTADD'.
Generating RTLIL representation for module `\RS_DSP2_MULTADD_REGIN'.
Generating RTLIL representation for module `\RS_DSP2_MULTADD_REGOUT'.
Generating RTLIL representation for module `\RS_DSP2_MULTADD_REGIN_REGOUT'.
Generating RTLIL representation for module `\RS_DSP2_MULTACC'.
Generating RTLIL representation for module `\RS_DSP2_MULTACC_REGIN'.
Generating RTLIL representation for module `\RS_DSP2_MULTACC_REGOUT'.
Generating RTLIL representation for module `\RS_DSP2_MULTACC_REGIN_REGOUT'.
Generating RTLIL representation for module `\dsp_t1_20x18x64_cfg_ports'.
Generating RTLIL representation for module `\dsp_t1_10x9x32_cfg_ports'.
Generating RTLIL representation for module `\dsp_t1_sim_cfg_ports'.
Generating RTLIL representation for module `\RS_DSP3'.
Generating RTLIL representation for module `\RS_DSP3_MULT'.
Generating RTLIL representation for module `\RS_DSP3_MULT_REGIN'.
Generating RTLIL representation for module `\RS_DSP3_MULT_REGOUT'.
Generating RTLIL representation for module `\RS_DSP3_MULT_REGIN_REGOUT'.
Generating RTLIL representation for module `\RS_DSP3_MULTADD'.
Generating RTLIL representation for module `\RS_DSP3_MULTADD_REGIN'.
Generating RTLIL representation for module `\RS_DSP3_MULTADD_REGOUT'.
Generating RTLIL representation for module `\RS_DSP3_MULTADD_REGIN_REGOUT'.
Generating RTLIL representation for module `\RS_DSP3_MULTACC'.
Generating RTLIL representation for module `\RS_DSP3_MULTACC_REGIN'.
Generating RTLIL representation for module `\RS_DSP3_MULTACC_REGOUT'.
Generating RTLIL representation for module `\RS_DSP3_MULTACC_REGIN_REGOUT'.
Generating RTLIL representation for module `\dsp_t1_20x18x64_cfg_params'.
Generating RTLIL representation for module `\dsp_t1_10x9x32_cfg_params'.
Generating RTLIL representation for module `\dsp_t1_sim_cfg_params'.
Successfully finished Verilog frontend.

yosys> hierarchy -check -top pwm

3.4. Executing HIERARCHY pass (managing design hierarchy).
VERIFIC-INFO [VERI-1018] pwm.sv:6: compiling module 'pwm'
VERIFIC-INFO [VERI-1018] pwm_reg_top.sv:8: compiling module 'pwm_reg_top'
VERIFIC-INFO [VERI-1018] tlul_cmd_intg_chk.sv:3: compiling module 'tlul_cmd_intg_chk'
VERIFIC-INFO [VERI-1018] prim_secded_inv_64_57_dec.sv:7: compiling module 'prim_secded_inv_64_57_dec'
VERIFIC-INFO [VERI-1018] tlul_data_integ_dec.sv:10: compiling module 'tlul_data_integ_dec'
VERIFIC-INFO [VERI-1018] prim_secded_inv_39_32_dec.sv:7: compiling module 'prim_secded_inv_39_32_dec'
VERIFIC-INFO [VERI-1018] tlul_rsp_intg_gen.sv:9: compiling module 'tlul_rsp_intg_gen'
VERIFIC-INFO [VERI-1018] prim_secded_inv_64_57_enc.sv:7: compiling module 'prim_secded_inv_64_57_enc'
VERIFIC-INFO [VERI-1018] tlul_data_integ_enc.sv:10: compiling module 'tlul_data_integ_enc'
VERIFIC-INFO [VERI-1018] prim_secded_inv_39_32_enc.sv:7: compiling module 'prim_secded_inv_39_32_enc'
VERIFIC-INFO [VERI-1018] tlul_adapter_reg.sv:10: compiling module 'tlul_adapter_reg(RegAw=7)'
VERIFIC-INFO [VERI-1018] tlul_err.sv:7: compiling module 'tlul_err'
VERIFIC-WARNING [VERI-1209] tlul_err.sv:44: expression size 32 truncated to fit in target size 4
VERIFIC-INFO [VERI-1018] prim_sync_reqack.sv:26: compiling module 'prim_sync_reqack'
VERIFIC-INFO [VERI-1018] prim_flop_2sync.sv:13: compiling module 'prim_flop_2sync(Width=1)'
VERIFIC-INFO [VERI-1018] prim_generic_flop_2sync.sv:9: compiling module 'prim_generic_flop_2sync(Width=1,ResetValue=1'b0)'
VERIFIC-INFO [VERI-1018] prim_generic_flop.sv:7: compiling module 'prim_generic_flop(ResetValue=1'b0)'
VERIFIC-INFO [VERI-1018] prim_reg_cdc.sv:8: compiling module 'prim_reg_cdc(ResetVal=32'b0111000000000001000000000000000)'
VERIFIC-INFO [VERI-1018] prim_reg_cdc.sv:8: compiling module 'prim_reg_cdc(DataWidth=6,ResetVal=6'b0,BitMask=6'b111111)'
VERIFIC-INFO [VERI-1018] prim_reg_cdc.sv:8: compiling module 'prim_reg_cdc(BitMask=32'b11000000000000001111111111111111)'
VERIFIC-INFO [VERI-1018] prim_reg_cdc.sv:8: compiling module 'prim_reg_cdc(ResetVal=32'b01111111111111110111111111111111)'
VERIFIC-INFO [VERI-1018] prim_reg_cdc.sv:8: compiling module 'prim_reg_cdc'
VERIFIC-INFO [VERI-1018] prim_subreg_ext.sv:7: compiling module 'prim_subreg_ext(DW=32'b01)'
VERIFIC-INFO [VERI-1018] prim_subreg.sv:7: compiling module 'prim_subreg(DW=1,SwAccess=SwAccessW0C_prim_subreg_pkg,RESVAL=1'b1)'
VERIFIC-INFO [VERI-1018] prim_subreg.sv:7: compiling module 'prim_subreg(DW=27,SwAccess=SwAccessRW_prim_subreg_pkg,RESVAL=27'b01000000000000000)'
VERIFIC-INFO [VERI-1018] prim_subreg.sv:7: compiling module 'prim_subreg(DW=4,SwAccess=SwAccessRW_prim_subreg_pkg,RESVAL=4'b0111)'
VERIFIC-INFO [VERI-1018] prim_subreg.sv:7: compiling module 'prim_subreg(DW=1,SwAccess=SwAccessRW_prim_subreg_pkg,RESVAL=1'b0)'
VERIFIC-INFO [VERI-1018] prim_subreg.sv:7: compiling module 'prim_subreg(DW=16,SwAccess=SwAccessRW_prim_subreg_pkg,RESVAL=16'b0)'
VERIFIC-INFO [VERI-1018] prim_subreg.sv:7: compiling module 'prim_subreg(DW=16,SwAccess=SwAccessRW_prim_subreg_pkg,RESVAL=16'b0111111111111111)'
VERIFIC-INFO [VERI-1018] prim_alert_sender.sv:32: compiling module 'prim_alert_sender'
VERIFIC-INFO [VERI-1018] prim_diff_decode.sv:19: compiling module 'prim_diff_decode(AsyncOn=1'b1)'
VERIFIC-INFO [VERI-1018] prim_flop_2sync.sv:13: compiling module 'prim_flop_2sync(Width=1,ResetValue=1'b0)'
VERIFIC-INFO [VERI-1018] prim_flop_2sync.sv:13: compiling module 'prim_flop_2sync(Width=1,ResetValue=1'b1)'
VERIFIC-INFO [VERI-1018] prim_generic_flop_2sync.sv:9: compiling module 'prim_generic_flop_2sync(Width=1,ResetValue=1'b1)'
VERIFIC-INFO [VERI-1018] prim_generic_flop.sv:7: compiling module 'prim_generic_flop(ResetValue=1'b1)'
VERIFIC-INFO [VERI-1018] prim_buf.sv:16: compiling module 'prim_buf'
VERIFIC-INFO [VERI-1018] prim_generic_buf.sv:6: compiling module 'prim_generic_buf'
VERIFIC-INFO [VERI-1018] pwm_core.sv:7: compiling module 'pwm_core'
VERIFIC-INFO [VERI-1018] pwm_chan.sv:5: compiling module 'pwm_chan'
Importing module pwm.
Importing module prim_alert_sender.
Importing module prim_buf.
Importing module prim_diff_decode(AsyncOn=1'b1).
Importing module prim_flop_2sync(Width=1,ResetValue=1'b0).
Importing module prim_flop_2sync(Width=1,ResetValue=1'b1).
Importing module prim_generic_buf.
Importing module prim_generic_flop_2sync(Width=1,ResetValue=1'b0).
Importing module prim_generic_flop(ResetValue=1'b0).
Importing module prim_generic_flop_2sync(Width=1,ResetValue=1'b1).
Importing module prim_generic_flop(ResetValue=1'b1).
Importing module pwm_core.
Importing module pwm_chan.
Importing module pwm_reg_top.
Importing module prim_reg_cdc.
Importing module prim_reg_cdc(BitMask=32'b11000000000000001111111111111111).
Importing module prim_reg_cdc(DataWidth=6,ResetVal=6'b0,BitMask=6'b111111).
Importing module prim_reg_cdc(ResetVal=32'b0111000000000001000000000000000).
Importing module prim_reg_cdc(ResetVal=32'b01111111111111110111111111111111).
Importing module prim_subreg(DW=1,SwAccess=SwAccessRW_prim_subreg_pkg,RESVAL=1'b0).
Importing module prim_subreg(DW=1,SwAccess=SwAccessW0C_prim_subreg_pkg,RESVAL=1'b1).
Importing module prim_subreg(DW=16,SwAccess=SwAccessRW_prim_subreg_pkg,RESVAL=16'b0).
Importing module prim_subreg(DW=16,SwAccess=SwAccessRW_prim_subreg_pkg,RESVAL=16'b0111111111111111).
Importing module prim_subreg(DW=27,SwAccess=SwAccessRW_prim_subreg_pkg,RESVAL=27'b01000000000000000).
Importing module prim_subreg(DW=4,SwAccess=SwAccessRW_prim_subreg_pkg,RESVAL=4'b0111).
Importing module prim_subreg_ext(DW=32'b01).
Importing module prim_sync_reqack.
Importing module prim_flop_2sync(Width=1).
Importing module tlul_adapter_reg(RegAw=7).
Importing module tlul_cmd_intg_chk.
Importing module prim_secded_inv_64_57_dec.
Importing module tlul_data_integ_dec.
Importing module prim_secded_inv_39_32_dec.
Importing module tlul_err.
Importing module tlul_rsp_intg_gen.
Importing module prim_secded_inv_64_57_enc.
Importing module tlul_data_integ_enc.
Importing module prim_secded_inv_39_32_enc.

3.4.1. Analyzing design hierarchy..
Top module:  \pwm
Used module:     \pwm_core
Used module:         \pwm_chan
Used module:     \prim_alert_sender
Used module:         \prim_buf
Used module:             \prim_generic_buf
Used module:         \prim_diff_decode(AsyncOn=1'b1)
Used module:             \prim_flop_2sync(Width=1,ResetValue=1'b1)
Used module:                 \prim_generic_flop_2sync(Width=1,ResetValue=1'b1)
Used module:                     \prim_generic_flop(ResetValue=1'b1)
Used module:             \prim_flop_2sync(Width=1,ResetValue=1'b0)
Used module:                 \prim_generic_flop_2sync(Width=1,ResetValue=1'b0)
Used module:                     \prim_generic_flop(ResetValue=1'b0)
Used module:     \pwm_reg_top
Used module:         \prim_subreg(DW=16,SwAccess=SwAccessRW_prim_subreg_pkg,RESVAL=16'b0)
Used module:         \prim_subreg(DW=16,SwAccess=SwAccessRW_prim_subreg_pkg,RESVAL=16'b0111111111111111)
Used module:         \prim_subreg(DW=1,SwAccess=SwAccessRW_prim_subreg_pkg,RESVAL=1'b0)
Used module:         \prim_subreg(DW=4,SwAccess=SwAccessRW_prim_subreg_pkg,RESVAL=4'b0111)
Used module:         \prim_subreg(DW=27,SwAccess=SwAccessRW_prim_subreg_pkg,RESVAL=27'b01000000000000000)
Used module:         \prim_subreg(DW=1,SwAccess=SwAccessW0C_prim_subreg_pkg,RESVAL=1'b1)
Used module:         \prim_subreg_ext(DW=32'b01)
Used module:         \prim_reg_cdc
Used module:             \prim_sync_reqack
Used module:                 \prim_flop_2sync(Width=1)
Used module:         \prim_reg_cdc(ResetVal=32'b01111111111111110111111111111111)
Used module:         \prim_reg_cdc(BitMask=32'b11000000000000001111111111111111)
Used module:         \prim_reg_cdc(DataWidth=6,ResetVal=6'b0,BitMask=6'b111111)
Used module:         \prim_reg_cdc(ResetVal=32'b0111000000000001000000000000000)
Used module:         \tlul_adapter_reg(RegAw=7)
Used module:             \tlul_err
Used module:         \tlul_rsp_intg_gen
Used module:             \tlul_data_integ_enc
Used module:                 \prim_secded_inv_39_32_enc
Used module:             \prim_secded_inv_64_57_enc
Used module:         \tlul_cmd_intg_chk
Used module:             \tlul_data_integ_dec
Used module:                 \prim_secded_inv_39_32_dec
Used module:             \prim_secded_inv_64_57_dec

3.4.2. Analyzing design hierarchy..
Top module:  \pwm
Used module:     \pwm_core
Used module:         \pwm_chan
Used module:     \prim_alert_sender
Used module:         \prim_buf
Used module:             \prim_generic_buf
Used module:         \prim_diff_decode(AsyncOn=1'b1)
Used module:             \prim_flop_2sync(Width=1,ResetValue=1'b1)
Used module:                 \prim_generic_flop_2sync(Width=1,ResetValue=1'b1)
Used module:                     \prim_generic_flop(ResetValue=1'b1)
Used module:             \prim_flop_2sync(Width=1,ResetValue=1'b0)
Used module:                 \prim_generic_flop_2sync(Width=1,ResetValue=1'b0)
Used module:                     \prim_generic_flop(ResetValue=1'b0)
Used module:     \pwm_reg_top
Used module:         \prim_subreg(DW=16,SwAccess=SwAccessRW_prim_subreg_pkg,RESVAL=16'b0)
Used module:         \prim_subreg(DW=16,SwAccess=SwAccessRW_prim_subreg_pkg,RESVAL=16'b0111111111111111)
Used module:         \prim_subreg(DW=1,SwAccess=SwAccessRW_prim_subreg_pkg,RESVAL=1'b0)
Used module:         \prim_subreg(DW=4,SwAccess=SwAccessRW_prim_subreg_pkg,RESVAL=4'b0111)
Used module:         \prim_subreg(DW=27,SwAccess=SwAccessRW_prim_subreg_pkg,RESVAL=27'b01000000000000000)
Used module:         \prim_subreg(DW=1,SwAccess=SwAccessW0C_prim_subreg_pkg,RESVAL=1'b1)
Used module:         \prim_subreg_ext(DW=32'b01)
Used module:         \prim_reg_cdc
Used module:             \prim_sync_reqack
Used module:                 \prim_flop_2sync(Width=1)
Used module:         \prim_reg_cdc(ResetVal=32'b01111111111111110111111111111111)
Used module:         \prim_reg_cdc(BitMask=32'b11000000000000001111111111111111)
Used module:         \prim_reg_cdc(DataWidth=6,ResetVal=6'b0,BitMask=6'b111111)
Used module:         \prim_reg_cdc(ResetVal=32'b0111000000000001000000000000000)
Used module:         \tlul_adapter_reg(RegAw=7)
Used module:             \tlul_err
Used module:         \tlul_rsp_intg_gen
Used module:             \tlul_data_integ_enc
Used module:                 \prim_secded_inv_39_32_enc
Used module:             \prim_secded_inv_64_57_enc
Used module:         \tlul_cmd_intg_chk
Used module:             \tlul_data_integ_dec
Used module:                 \prim_secded_inv_39_32_dec
Used module:             \prim_secded_inv_64_57_dec
Removed 0 unused modules.

yosys> proc

3.5. Executing PROC pass (convert processes to netlists).

yosys> proc_clean

3.5.1. Executing PROC_CLEAN pass (remove empty switches from decision trees).
Cleaned up 0 empty switches.

yosys> proc_rmdead

3.5.2. Executing PROC_RMDEAD pass (remove dead branches from decision trees).
Removed a total of 0 dead cases.

yosys> proc_prune

3.5.3. Executing PROC_PRUNE pass (remove redundant assignments in processes).
Removed 0 redundant assignments.
Promoted 0 assignments to connections.

yosys> proc_init

3.5.4. Executing PROC_INIT pass (extract init attributes).

yosys> proc_arst

3.5.5. Executing PROC_ARST pass (detect async resets in processes).

yosys> proc_rom

3.5.6. Executing PROC_ROM pass (convert switches to ROMs).
Converted 0 switches.

yosys> proc_mux

3.5.7. Executing PROC_MUX pass (convert decision trees to multiplexers).

yosys> proc_dlatch

3.5.8. Executing PROC_DLATCH pass (convert process syncs to latches).

yosys> proc_dff

3.5.9. Executing PROC_DFF pass (convert process syncs to FFs).

yosys> proc_memwr

3.5.10. Executing PROC_MEMWR pass (convert process memory writes to cells).

yosys> proc_clean

3.5.11. Executing PROC_CLEAN pass (remove empty switches from decision trees).
Cleaned up 0 empty switches.

yosys> opt_expr -keepdc

3.5.12. Executing OPT_EXPR pass (perform const folding).
Optimizing module prim_secded_inv_39_32_enc.
Optimizing module tlul_data_integ_enc.
Optimizing module prim_secded_inv_64_57_enc.
Optimizing module tlul_rsp_intg_gen.
Optimizing module tlul_err.
<suppressed ~1 debug messages>
Optimizing module prim_secded_inv_39_32_dec.
Optimizing module tlul_data_integ_dec.
Optimizing module prim_secded_inv_64_57_dec.
Optimizing module tlul_cmd_intg_chk.
<suppressed ~1 debug messages>
Optimizing module tlul_adapter_reg(RegAw=7).
<suppressed ~11 debug messages>
Optimizing module prim_flop_2sync(Width=1).
Optimizing module prim_sync_reqack.
<suppressed ~4 debug messages>
Optimizing module prim_subreg_ext(DW=32'b01).
Optimizing module prim_subreg(DW=4,SwAccess=SwAccessRW_prim_subreg_pkg,RESVAL=4'b0111).
<suppressed ~3 debug messages>
Optimizing module prim_subreg(DW=27,SwAccess=SwAccessRW_prim_subreg_pkg,RESVAL=27'b01000000000000000).
<suppressed ~3 debug messages>
Optimizing module prim_subreg(DW=16,SwAccess=SwAccessRW_prim_subreg_pkg,RESVAL=16'b0111111111111111).
<suppressed ~3 debug messages>
Optimizing module prim_subreg(DW=16,SwAccess=SwAccessRW_prim_subreg_pkg,RESVAL=16'b0).
<suppressed ~3 debug messages>
Optimizing module prim_subreg(DW=1,SwAccess=SwAccessW0C_prim_subreg_pkg,RESVAL=1'b1).
<suppressed ~2 debug messages>
Optimizing module prim_subreg(DW=1,SwAccess=SwAccessRW_prim_subreg_pkg,RESVAL=1'b0).
<suppressed ~2 debug messages>
Optimizing module prim_reg_cdc(ResetVal=32'b01111111111111110111111111111111).
<suppressed ~5 debug messages>
Optimizing module prim_reg_cdc(ResetVal=32'b0111000000000001000000000000000).
<suppressed ~5 debug messages>
Optimizing module prim_reg_cdc(DataWidth=6,ResetVal=6'b0,BitMask=6'b111111).
<suppressed ~5 debug messages>
Optimizing module prim_reg_cdc(BitMask=32'b11000000000000001111111111111111).
<suppressed ~5 debug messages>
Optimizing module prim_reg_cdc.
<suppressed ~5 debug messages>
Optimizing module pwm_reg_top.
<suppressed ~2 debug messages>
Optimizing module pwm_chan.
<suppressed ~5 debug messages>
Optimizing module pwm_core.
<suppressed ~4 debug messages>
Optimizing module prim_generic_flop(ResetValue=1'b1).
<suppressed ~1 debug messages>
Optimizing module prim_generic_flop_2sync(Width=1,ResetValue=1'b1).
Optimizing module prim_generic_flop(ResetValue=1'b0).
<suppressed ~1 debug messages>
Optimizing module prim_generic_flop_2sync(Width=1,ResetValue=1'b0).
Optimizing module prim_generic_buf.
Optimizing module prim_flop_2sync(Width=1,ResetValue=1'b1).
Optimizing module prim_flop_2sync(Width=1,ResetValue=1'b0).
Optimizing module prim_diff_decode(AsyncOn=1'b1).
<suppressed ~5 debug messages>
Optimizing module prim_buf.
Optimizing module prim_alert_sender.
<suppressed ~7 debug messages>
Optimizing module pwm.
<suppressed ~1 debug messages>

yosys> bmuxmap

3.6. Executing BMUXMAP pass.

yosys> demuxmap

3.7. Executing DEMUXMAP pass.

yosys> clean_zerowidth

yosys> flatten

3.8. Executing FLATTEN pass (flatten design).
Deleting now unused module prim_alert_sender.
Deleting now unused module prim_buf.
Deleting now unused module prim_diff_decode(AsyncOn=1'b1).
Deleting now unused module prim_flop_2sync(Width=1).
Deleting now unused module prim_flop_2sync(Width=1,ResetValue=1'b0).
Deleting now unused module prim_flop_2sync(Width=1,ResetValue=1'b1).
Deleting now unused module prim_generic_buf.
Deleting now unused module prim_generic_flop(ResetValue=1'b0).
Deleting now unused module prim_generic_flop(ResetValue=1'b1).
Deleting now unused module prim_generic_flop_2sync(Width=1,ResetValue=1'b0).
Deleting now unused module prim_generic_flop_2sync(Width=1,ResetValue=1'b1).
Deleting now unused module prim_reg_cdc.
Deleting now unused module prim_reg_cdc(BitMask=32'b11000000000000001111111111111111).
Deleting now unused module prim_reg_cdc(DataWidth=6,ResetVal=6'b0,BitMask=6'b111111).
Deleting now unused module prim_reg_cdc(ResetVal=32'b0111000000000001000000000000000).
Deleting now unused module prim_reg_cdc(ResetVal=32'b01111111111111110111111111111111).
Deleting now unused module prim_secded_inv_39_32_dec.
Deleting now unused module prim_secded_inv_39_32_enc.
Deleting now unused module prim_secded_inv_64_57_dec.
Deleting now unused module prim_secded_inv_64_57_enc.
Deleting now unused module prim_subreg(DW=1,SwAccess=SwAccessRW_prim_subreg_pkg,RESVAL=1'b0).
Deleting now unused module prim_subreg(DW=1,SwAccess=SwAccessW0C_prim_subreg_pkg,RESVAL=1'b1).
Deleting now unused module prim_subreg(DW=16,SwAccess=SwAccessRW_prim_subreg_pkg,RESVAL=16'b0).
Deleting now unused module prim_subreg(DW=16,SwAccess=SwAccessRW_prim_subreg_pkg,RESVAL=16'b0111111111111111).
Deleting now unused module prim_subreg(DW=27,SwAccess=SwAccessRW_prim_subreg_pkg,RESVAL=27'b01000000000000000).
Deleting now unused module prim_subreg(DW=4,SwAccess=SwAccessRW_prim_subreg_pkg,RESVAL=4'b0111).
Deleting now unused module prim_subreg_ext(DW=32'b01).
Deleting now unused module prim_sync_reqack.
Deleting now unused module pwm_chan.
Deleting now unused module pwm_core.
Deleting now unused module pwm_reg_top.
Deleting now unused module tlul_adapter_reg(RegAw=7).
Deleting now unused module tlul_cmd_intg_chk.
Deleting now unused module tlul_data_integ_dec.
Deleting now unused module tlul_data_integ_enc.
Deleting now unused module tlul_err.
Deleting now unused module tlul_rsp_intg_gen.
<suppressed ~121 debug messages>

yosys> bmuxmap

3.9. Executing BMUXMAP pass.

yosys> demuxmap

3.10. Executing DEMUXMAP pass.

yosys> clean_zerowidth

yosys> tribuf -logic -formal

3.11. Executing TRIBUF pass.

yosys> deminout

3.12. Executing DEMINOUT pass (demote inout ports to input or output).

yosys> opt_expr

3.13. Executing OPT_EXPR pass (perform const folding).
Optimizing module pwm.
<suppressed ~105 debug messages>

yosys> opt_clean

3.14. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \pwm..
Removed 477 unused cells and 11348 unused wires.
<suppressed ~1930 debug messages>

yosys> check

3.15. Executing CHECK pass (checking for obvious problems).
Checking module pwm...
Found and reported 0 problems.

yosys> opt_expr

3.16. Executing OPT_EXPR pass (perform const folding).
Optimizing module pwm.
<suppressed ~59 debug messages>

yosys> opt_merge -nomux

3.17. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\pwm'.
<suppressed ~171 debug messages>
Removed a total of 57 cells.

yosys> opt_muxtree

3.18. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \pwm..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
      Replacing known input bits on port B of cell $flatten\u_reg.\u_blink_param_0_cdc.\u_prim_sync.$verific$i11$prim_sync_reqack.sv:94$9555: \u_reg.u_blink_param_0_cdc.u_prim_sync.src_fsm_cs -> 1'1
      Replacing known input bits on port A of cell $flatten\u_reg.\u_blink_param_0_cdc.\u_prim_sync.$verific$i8$prim_sync_reqack.sv:85$9553: \u_reg.u_blink_param_0_cdc.u_prim_sync.src_fsm_cs -> 1'0
      Replacing known input bits on port B of cell $flatten\u_reg.\u_blink_param_0_cdc.\u_prim_sync.$verific$i21$prim_sync_reqack.sv:124$9564: \u_reg.u_blink_param_0_cdc.u_prim_sync.dst_fsm_cs -> 1'1
      Replacing known input bits on port A of cell $flatten\u_reg.\u_blink_param_0_cdc.\u_prim_sync.$verific$i19$prim_sync_reqack.sv:115$9563: \u_reg.u_blink_param_0_cdc.u_prim_sync.dst_fsm_cs -> 1'0
      Replacing known input bits on port B of cell $flatten\u_reg.\u_blink_param_1_cdc.\u_prim_sync.$verific$i11$prim_sync_reqack.sv:94$9555: \u_reg.u_blink_param_1_cdc.u_prim_sync.src_fsm_cs -> 1'1
      Replacing known input bits on port A of cell $flatten\u_reg.\u_blink_param_1_cdc.\u_prim_sync.$verific$i8$prim_sync_reqack.sv:85$9553: \u_reg.u_blink_param_1_cdc.u_prim_sync.src_fsm_cs -> 1'0
      Replacing known input bits on port B of cell $flatten\u_reg.\u_blink_param_1_cdc.\u_prim_sync.$verific$i21$prim_sync_reqack.sv:124$9564: \u_reg.u_blink_param_1_cdc.u_prim_sync.dst_fsm_cs -> 1'1
      Replacing known input bits on port A of cell $flatten\u_reg.\u_blink_param_1_cdc.\u_prim_sync.$verific$i19$prim_sync_reqack.sv:115$9563: \u_reg.u_blink_param_1_cdc.u_prim_sync.dst_fsm_cs -> 1'0
      Replacing known input bits on port B of cell $flatten\u_reg.\u_blink_param_2_cdc.\u_prim_sync.$verific$i11$prim_sync_reqack.sv:94$9555: \u_reg.u_blink_param_2_cdc.u_prim_sync.src_fsm_cs -> 1'1
      Replacing known input bits on port A of cell $flatten\u_reg.\u_blink_param_2_cdc.\u_prim_sync.$verific$i8$prim_sync_reqack.sv:85$9553: \u_reg.u_blink_param_2_cdc.u_prim_sync.src_fsm_cs -> 1'0
      Replacing known input bits on port B of cell $flatten\u_reg.\u_blink_param_2_cdc.\u_prim_sync.$verific$i21$prim_sync_reqack.sv:124$9564: \u_reg.u_blink_param_2_cdc.u_prim_sync.dst_fsm_cs -> 1'1
      Replacing known input bits on port A of cell $flatten\u_reg.\u_blink_param_2_cdc.\u_prim_sync.$verific$i19$prim_sync_reqack.sv:115$9563: \u_reg.u_blink_param_2_cdc.u_prim_sync.dst_fsm_cs -> 1'0
      Replacing known input bits on port B of cell $flatten\u_reg.\u_blink_param_3_cdc.\u_prim_sync.$verific$i11$prim_sync_reqack.sv:94$9555: \u_reg.u_blink_param_3_cdc.u_prim_sync.src_fsm_cs -> 1'1
      Replacing known input bits on port A of cell $flatten\u_reg.\u_blink_param_3_cdc.\u_prim_sync.$verific$i8$prim_sync_reqack.sv:85$9553: \u_reg.u_blink_param_3_cdc.u_prim_sync.src_fsm_cs -> 1'0
      Replacing known input bits on port B of cell $flatten\u_reg.\u_blink_param_3_cdc.\u_prim_sync.$verific$i21$prim_sync_reqack.sv:124$9564: \u_reg.u_blink_param_3_cdc.u_prim_sync.dst_fsm_cs -> 1'1
      Replacing known input bits on port A of cell $flatten\u_reg.\u_blink_param_3_cdc.\u_prim_sync.$verific$i19$prim_sync_reqack.sv:115$9563: \u_reg.u_blink_param_3_cdc.u_prim_sync.dst_fsm_cs -> 1'0
      Replacing known input bits on port B of cell $flatten\u_reg.\u_blink_param_4_cdc.\u_prim_sync.$verific$i11$prim_sync_reqack.sv:94$9555: \u_reg.u_blink_param_4_cdc.u_prim_sync.src_fsm_cs -> 1'1
      Replacing known input bits on port A of cell $flatten\u_reg.\u_blink_param_4_cdc.\u_prim_sync.$verific$i8$prim_sync_reqack.sv:85$9553: \u_reg.u_blink_param_4_cdc.u_prim_sync.src_fsm_cs -> 1'0
      Replacing known input bits on port B of cell $flatten\u_reg.\u_blink_param_4_cdc.\u_prim_sync.$verific$i21$prim_sync_reqack.sv:124$9564: \u_reg.u_blink_param_4_cdc.u_prim_sync.dst_fsm_cs -> 1'1
      Replacing known input bits on port A of cell $flatten\u_reg.\u_blink_param_4_cdc.\u_prim_sync.$verific$i19$prim_sync_reqack.sv:115$9563: \u_reg.u_blink_param_4_cdc.u_prim_sync.dst_fsm_cs -> 1'0
      Replacing known input bits on port B of cell $flatten\u_reg.\u_blink_param_5_cdc.\u_prim_sync.$verific$i11$prim_sync_reqack.sv:94$9555: \u_reg.u_blink_param_5_cdc.u_prim_sync.src_fsm_cs -> 1'1
      Replacing known input bits on port A of cell $flatten\u_reg.\u_blink_param_5_cdc.\u_prim_sync.$verific$i8$prim_sync_reqack.sv:85$9553: \u_reg.u_blink_param_5_cdc.u_prim_sync.src_fsm_cs -> 1'0
      Replacing known input bits on port B of cell $flatten\u_reg.\u_blink_param_5_cdc.\u_prim_sync.$verific$i21$prim_sync_reqack.sv:124$9564: \u_reg.u_blink_param_5_cdc.u_prim_sync.dst_fsm_cs -> 1'1
      Replacing known input bits on port A of cell $flatten\u_reg.\u_blink_param_5_cdc.\u_prim_sync.$verific$i19$prim_sync_reqack.sv:115$9563: \u_reg.u_blink_param_5_cdc.u_prim_sync.dst_fsm_cs -> 1'0
      Replacing known input bits on port B of cell $flatten\u_reg.\u_cfg_cdc.\u_prim_sync.$verific$i11$prim_sync_reqack.sv:94$9555: \u_reg.u_cfg_cdc.u_prim_sync.src_fsm_cs -> 1'1
      Replacing known input bits on port A of cell $flatten\u_reg.\u_cfg_cdc.\u_prim_sync.$verific$i8$prim_sync_reqack.sv:85$9553: \u_reg.u_cfg_cdc.u_prim_sync.src_fsm_cs -> 1'0
      Replacing known input bits on port B of cell $flatten\u_reg.\u_cfg_cdc.\u_prim_sync.$verific$i21$prim_sync_reqack.sv:124$9564: \u_reg.u_cfg_cdc.u_prim_sync.dst_fsm_cs -> 1'1
      Replacing known input bits on port A of cell $flatten\u_reg.\u_cfg_cdc.\u_prim_sync.$verific$i19$prim_sync_reqack.sv:115$9563: \u_reg.u_cfg_cdc.u_prim_sync.dst_fsm_cs -> 1'0
      Replacing known input bits on port B of cell $flatten\u_reg.\u_core_tgl.$verific$i11$prim_sync_reqack.sv:94$9555: \u_reg.u_core_tgl.src_fsm_cs -> 1'1
      Replacing known input bits on port A of cell $flatten\u_reg.\u_core_tgl.$verific$i8$prim_sync_reqack.sv:85$9553: \u_reg.u_core_tgl.src_fsm_cs -> 1'0
      Replacing known input bits on port B of cell $flatten\u_reg.\u_core_tgl.$verific$i21$prim_sync_reqack.sv:124$9564: \u_reg.u_core_tgl.dst_fsm_cs -> 1'1
      Replacing known input bits on port A of cell $flatten\u_reg.\u_core_tgl.$verific$i19$prim_sync_reqack.sv:115$9563: \u_reg.u_core_tgl.dst_fsm_cs -> 1'0
      Replacing known input bits on port B of cell $flatten\gen_alert_tx[0].u_prim_alert_sender.\i_decode_ping.$auto$bmuxmap.cc:60:execute$10674: \gen_alert_tx[0].u_prim_alert_sender.i_decode_ping.gen_async.state_q -> 2'11
      Replacing known input bits on port B of cell $flatten\u_reg.\u_duty_cycle_0_cdc.\u_prim_sync.$verific$i11$prim_sync_reqack.sv:94$9555: \u_reg.u_duty_cycle_0_cdc.u_prim_sync.src_fsm_cs -> 1'1
      Replacing known input bits on port A of cell $flatten\u_reg.\u_duty_cycle_0_cdc.\u_prim_sync.$verific$i8$prim_sync_reqack.sv:85$9553: \u_reg.u_duty_cycle_0_cdc.u_prim_sync.src_fsm_cs -> 1'0
      Replacing known input bits on port B of cell $flatten\u_reg.\u_duty_cycle_0_cdc.\u_prim_sync.$verific$i21$prim_sync_reqack.sv:124$9564: \u_reg.u_duty_cycle_0_cdc.u_prim_sync.dst_fsm_cs -> 1'1
      Replacing known input bits on port A of cell $flatten\u_reg.\u_duty_cycle_0_cdc.\u_prim_sync.$verific$i19$prim_sync_reqack.sv:115$9563: \u_reg.u_duty_cycle_0_cdc.u_prim_sync.dst_fsm_cs -> 1'0
      Replacing known input bits on port B of cell $flatten\u_reg.\u_duty_cycle_1_cdc.\u_prim_sync.$verific$i11$prim_sync_reqack.sv:94$9555: \u_reg.u_duty_cycle_1_cdc.u_prim_sync.src_fsm_cs -> 1'1
      Replacing known input bits on port A of cell $flatten\u_reg.\u_duty_cycle_1_cdc.\u_prim_sync.$verific$i8$prim_sync_reqack.sv:85$9553: \u_reg.u_duty_cycle_1_cdc.u_prim_sync.src_fsm_cs -> 1'0
      Replacing known input bits on port B of cell $flatten\u_reg.\u_duty_cycle_1_cdc.\u_prim_sync.$verific$i21$prim_sync_reqack.sv:124$9564: \u_reg.u_duty_cycle_1_cdc.u_prim_sync.dst_fsm_cs -> 1'1
      Replacing known input bits on port A of cell $flatten\u_reg.\u_duty_cycle_1_cdc.\u_prim_sync.$verific$i19$prim_sync_reqack.sv:115$9563: \u_reg.u_duty_cycle_1_cdc.u_prim_sync.dst_fsm_cs -> 1'0
      Replacing known input bits on port B of cell $flatten\u_reg.\u_duty_cycle_2_cdc.\u_prim_sync.$verific$i11$prim_sync_reqack.sv:94$9555: \u_reg.u_duty_cycle_2_cdc.u_prim_sync.src_fsm_cs -> 1'1
      Replacing known input bits on port A of cell $flatten\u_reg.\u_duty_cycle_2_cdc.\u_prim_sync.$verific$i8$prim_sync_reqack.sv:85$9553: \u_reg.u_duty_cycle_2_cdc.u_prim_sync.src_fsm_cs -> 1'0
      Replacing known input bits on port B of cell $flatten\u_reg.\u_duty_cycle_2_cdc.\u_prim_sync.$verific$i21$prim_sync_reqack.sv:124$9564: \u_reg.u_duty_cycle_2_cdc.u_prim_sync.dst_fsm_cs -> 1'1
      Replacing known input bits on port A of cell $flatten\u_reg.\u_duty_cycle_2_cdc.\u_prim_sync.$verific$i19$prim_sync_reqack.sv:115$9563: \u_reg.u_duty_cycle_2_cdc.u_prim_sync.dst_fsm_cs -> 1'0
      Replacing known input bits on port B of cell $flatten\u_reg.\u_duty_cycle_3_cdc.\u_prim_sync.$verific$i11$prim_sync_reqack.sv:94$9555: \u_reg.u_duty_cycle_3_cdc.u_prim_sync.src_fsm_cs -> 1'1
      Replacing known input bits on port A of cell $flatten\u_reg.\u_duty_cycle_3_cdc.\u_prim_sync.$verific$i8$prim_sync_reqack.sv:85$9553: \u_reg.u_duty_cycle_3_cdc.u_prim_sync.src_fsm_cs -> 1'0
      Replacing known input bits on port B of cell $flatten\u_reg.\u_duty_cycle_3_cdc.\u_prim_sync.$verific$i21$prim_sync_reqack.sv:124$9564: \u_reg.u_duty_cycle_3_cdc.u_prim_sync.dst_fsm_cs -> 1'1
      Replacing known input bits on port A of cell $flatten\u_reg.\u_duty_cycle_3_cdc.\u_prim_sync.$verific$i19$prim_sync_reqack.sv:115$9563: \u_reg.u_duty_cycle_3_cdc.u_prim_sync.dst_fsm_cs -> 1'0
      Replacing known input bits on port B of cell $flatten\u_reg.\u_duty_cycle_4_cdc.\u_prim_sync.$verific$i11$prim_sync_reqack.sv:94$9555: \u_reg.u_duty_cycle_4_cdc.u_prim_sync.src_fsm_cs -> 1'1
      Replacing known input bits on port A of cell $flatten\u_reg.\u_duty_cycle_4_cdc.\u_prim_sync.$verific$i8$prim_sync_reqack.sv:85$9553: \u_reg.u_duty_cycle_4_cdc.u_prim_sync.src_fsm_cs -> 1'0
      Replacing known input bits on port B of cell $flatten\u_reg.\u_duty_cycle_4_cdc.\u_prim_sync.$verific$i21$prim_sync_reqack.sv:124$9564: \u_reg.u_duty_cycle_4_cdc.u_prim_sync.dst_fsm_cs -> 1'1
      Replacing known input bits on port A of cell $flatten\u_reg.\u_duty_cycle_4_cdc.\u_prim_sync.$verific$i19$prim_sync_reqack.sv:115$9563: \u_reg.u_duty_cycle_4_cdc.u_prim_sync.dst_fsm_cs -> 1'0
      Replacing known input bits on port B of cell $flatten\u_reg.\u_duty_cycle_5_cdc.\u_prim_sync.$verific$i11$prim_sync_reqack.sv:94$9555: \u_reg.u_duty_cycle_5_cdc.u_prim_sync.src_fsm_cs -> 1'1
      Replacing known input bits on port A of cell $flatten\u_reg.\u_duty_cycle_5_cdc.\u_prim_sync.$verific$i8$prim_sync_reqack.sv:85$9553: \u_reg.u_duty_cycle_5_cdc.u_prim_sync.src_fsm_cs -> 1'0
      Replacing known input bits on port B of cell $flatten\u_reg.\u_duty_cycle_5_cdc.\u_prim_sync.$verific$i21$prim_sync_reqack.sv:124$9564: \u_reg.u_duty_cycle_5_cdc.u_prim_sync.dst_fsm_cs -> 1'1
      Replacing known input bits on port A of cell $flatten\u_reg.\u_duty_cycle_5_cdc.\u_prim_sync.$verific$i19$prim_sync_reqack.sv:115$9563: \u_reg.u_duty_cycle_5_cdc.u_prim_sync.dst_fsm_cs -> 1'0
      Replacing known input bits on port B of cell $flatten\u_reg.\u_invert_cdc.\u_prim_sync.$verific$i11$prim_sync_reqack.sv:94$9555: \u_reg.u_invert_cdc.u_prim_sync.src_fsm_cs -> 1'1
      Replacing known input bits on port A of cell $flatten\u_reg.\u_invert_cdc.\u_prim_sync.$verific$i8$prim_sync_reqack.sv:85$9553: \u_reg.u_invert_cdc.u_prim_sync.src_fsm_cs -> 1'0
      Replacing known input bits on port B of cell $flatten\u_reg.\u_invert_cdc.\u_prim_sync.$verific$i21$prim_sync_reqack.sv:124$9564: \u_reg.u_invert_cdc.u_prim_sync.dst_fsm_cs -> 1'1
      Replacing known input bits on port A of cell $flatten\u_reg.\u_invert_cdc.\u_prim_sync.$verific$i19$prim_sync_reqack.sv:115$9563: \u_reg.u_invert_cdc.u_prim_sync.dst_fsm_cs -> 1'0
      Replacing known input bits on port B of cell $flatten\u_reg.\u_pwm_en_cdc.\u_prim_sync.$verific$i11$prim_sync_reqack.sv:94$9555: \u_reg.u_pwm_en_cdc.u_prim_sync.src_fsm_cs -> 1'1
      Replacing known input bits on port A of cell $flatten\u_reg.\u_pwm_en_cdc.\u_prim_sync.$verific$i8$prim_sync_reqack.sv:85$9553: \u_reg.u_pwm_en_cdc.u_prim_sync.src_fsm_cs -> 1'0
      Replacing known input bits on port B of cell $flatten\u_reg.\u_pwm_en_cdc.\u_prim_sync.$verific$i21$prim_sync_reqack.sv:124$9564: \u_reg.u_pwm_en_cdc.u_prim_sync.dst_fsm_cs -> 1'1
      Replacing known input bits on port A of cell $flatten\u_reg.\u_pwm_en_cdc.\u_prim_sync.$verific$i19$prim_sync_reqack.sv:115$9563: \u_reg.u_pwm_en_cdc.u_prim_sync.dst_fsm_cs -> 1'0
      Replacing known input bits on port B of cell $flatten\u_reg.\u_pwm_param_0_cdc.\u_prim_sync.$verific$i11$prim_sync_reqack.sv:94$9555: \u_reg.u_pwm_param_0_cdc.u_prim_sync.src_fsm_cs -> 1'1
      Replacing known input bits on port A of cell $flatten\u_reg.\u_pwm_param_0_cdc.\u_prim_sync.$verific$i8$prim_sync_reqack.sv:85$9553: \u_reg.u_pwm_param_0_cdc.u_prim_sync.src_fsm_cs -> 1'0
      Replacing known input bits on port B of cell $flatten\u_reg.\u_pwm_param_0_cdc.\u_prim_sync.$verific$i21$prim_sync_reqack.sv:124$9564: \u_reg.u_pwm_param_0_cdc.u_prim_sync.dst_fsm_cs -> 1'1
      Replacing known input bits on port A of cell $flatten\u_reg.\u_pwm_param_0_cdc.\u_prim_sync.$verific$i19$prim_sync_reqack.sv:115$9563: \u_reg.u_pwm_param_0_cdc.u_prim_sync.dst_fsm_cs -> 1'0
      Replacing known input bits on port B of cell $flatten\u_reg.\u_pwm_param_1_cdc.\u_prim_sync.$verific$i11$prim_sync_reqack.sv:94$9555: \u_reg.u_pwm_param_1_cdc.u_prim_sync.src_fsm_cs -> 1'1
      Replacing known input bits on port A of cell $flatten\u_reg.\u_pwm_param_1_cdc.\u_prim_sync.$verific$i8$prim_sync_reqack.sv:85$9553: \u_reg.u_pwm_param_1_cdc.u_prim_sync.src_fsm_cs -> 1'0
      Replacing known input bits on port B of cell $flatten\u_reg.\u_pwm_param_1_cdc.\u_prim_sync.$verific$i21$prim_sync_reqack.sv:124$9564: \u_reg.u_pwm_param_1_cdc.u_prim_sync.dst_fsm_cs -> 1'1
      Replacing known input bits on port A of cell $flatten\u_reg.\u_pwm_param_1_cdc.\u_prim_sync.$verific$i19$prim_sync_reqack.sv:115$9563: \u_reg.u_pwm_param_1_cdc.u_prim_sync.dst_fsm_cs -> 1'0
      Replacing known input bits on port B of cell $flatten\u_reg.\u_pwm_param_2_cdc.\u_prim_sync.$verific$i11$prim_sync_reqack.sv:94$9555: \u_reg.u_pwm_param_2_cdc.u_prim_sync.src_fsm_cs -> 1'1
      Replacing known input bits on port A of cell $flatten\u_reg.\u_pwm_param_2_cdc.\u_prim_sync.$verific$i8$prim_sync_reqack.sv:85$9553: \u_reg.u_pwm_param_2_cdc.u_prim_sync.src_fsm_cs -> 1'0
      Replacing known input bits on port B of cell $flatten\u_reg.\u_pwm_param_2_cdc.\u_prim_sync.$verific$i21$prim_sync_reqack.sv:124$9564: \u_reg.u_pwm_param_2_cdc.u_prim_sync.dst_fsm_cs -> 1'1
      Replacing known input bits on port A of cell $flatten\u_reg.\u_pwm_param_2_cdc.\u_prim_sync.$verific$i19$prim_sync_reqack.sv:115$9563: \u_reg.u_pwm_param_2_cdc.u_prim_sync.dst_fsm_cs -> 1'0
      Replacing known input bits on port A of cell $flatten\gen_alert_tx[0].u_prim_alert_sender.$verific$mux_22$prim_alert_sender.sv:142$1461: \gen_alert_tx[0].u_prim_alert_sender.state_q -> 3'000
      Replacing known input bits on port B of cell $flatten\u_reg.\u_pwm_param_3_cdc.\u_prim_sync.$verific$i11$prim_sync_reqack.sv:94$9555: \u_reg.u_pwm_param_3_cdc.u_prim_sync.src_fsm_cs -> 1'1
      Replacing known input bits on port A of cell $flatten\u_reg.\u_pwm_param_3_cdc.\u_prim_sync.$verific$i8$prim_sync_reqack.sv:85$9553: \u_reg.u_pwm_param_3_cdc.u_prim_sync.src_fsm_cs -> 1'0
      Replacing known input bits on port B of cell $flatten\u_reg.\u_pwm_param_3_cdc.\u_prim_sync.$verific$i21$prim_sync_reqack.sv:124$9564: \u_reg.u_pwm_param_3_cdc.u_prim_sync.dst_fsm_cs -> 1'1
      Replacing known input bits on port A of cell $flatten\u_reg.\u_pwm_param_3_cdc.\u_prim_sync.$verific$i19$prim_sync_reqack.sv:115$9563: \u_reg.u_pwm_param_3_cdc.u_prim_sync.dst_fsm_cs -> 1'0
      Replacing known input bits on port B of cell $flatten\u_reg.\u_pwm_param_4_cdc.\u_prim_sync.$verific$i11$prim_sync_reqack.sv:94$9555: \u_reg.u_pwm_param_4_cdc.u_prim_sync.src_fsm_cs -> 1'1
      Replacing known input bits on port A of cell $flatten\u_reg.\u_pwm_param_4_cdc.\u_prim_sync.$verific$i8$prim_sync_reqack.sv:85$9553: \u_reg.u_pwm_param_4_cdc.u_prim_sync.src_fsm_cs -> 1'0
      Replacing known input bits on port B of cell $flatten\u_reg.\u_pwm_param_4_cdc.\u_prim_sync.$verific$i21$prim_sync_reqack.sv:124$9564: \u_reg.u_pwm_param_4_cdc.u_prim_sync.dst_fsm_cs -> 1'1
      Replacing known input bits on port A of cell $flatten\u_reg.\u_pwm_param_4_cdc.\u_prim_sync.$verific$i19$prim_sync_reqack.sv:115$9563: \u_reg.u_pwm_param_4_cdc.u_prim_sync.dst_fsm_cs -> 1'0
      Replacing known input bits on port B of cell $flatten\u_reg.\u_pwm_param_5_cdc.\u_prim_sync.$verific$i11$prim_sync_reqack.sv:94$9555: \u_reg.u_pwm_param_5_cdc.u_prim_sync.src_fsm_cs -> 1'1
      Replacing known input bits on port A of cell $flatten\u_reg.\u_pwm_param_5_cdc.\u_prim_sync.$verific$i8$prim_sync_reqack.sv:85$9553: \u_reg.u_pwm_param_5_cdc.u_prim_sync.src_fsm_cs -> 1'0
      Replacing known input bits on port B of cell $flatten\u_reg.\u_pwm_param_5_cdc.\u_prim_sync.$verific$i21$prim_sync_reqack.sv:124$9564: \u_reg.u_pwm_param_5_cdc.u_prim_sync.dst_fsm_cs -> 1'1
      Replacing known input bits on port A of cell $flatten\u_reg.\u_pwm_param_5_cdc.\u_prim_sync.$verific$i19$prim_sync_reqack.sv:115$9563: \u_reg.u_pwm_param_5_cdc.u_prim_sync.dst_fsm_cs -> 1'0
      Replacing known input bits on port B of cell $flatten\gen_alert_tx[0].u_prim_alert_sender.\i_decode_ack.$auto$bmuxmap.cc:60:execute$10674: \gen_alert_tx[0].u_prim_alert_sender.i_decode_ack.gen_async.state_q -> 2'11
  Analyzing evaluation results.
Removed 0 multiplexer ports.
<suppressed ~286 debug messages>

yosys> opt_reduce

3.19. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \pwm.
    New ctrl vector for $pmux cell $flatten\u_reg.$verific$select_614$pwm_reg_top.sv:2770$8941: { $flatten\u_reg.$verific$n4607$2793 $flatten\u_reg.$verific$n4610$2796 $flatten\u_reg.$verific$n4613$2799 $flatten\u_reg.$verific$n4616$2802 $flatten\u_reg.$verific$n4619$2805 $flatten\u_reg.$verific$n4622$2808 $flatten\u_reg.$verific$n4625$2811 $flatten\u_reg.$verific$n4628$2814 $flatten\u_reg.$verific$n4631$2817 $flatten\u_reg.$verific$n4634$2820 $flatten\u_reg.$verific$n4637$2823 $flatten\u_reg.$verific$n4640$2826 $flatten\u_reg.$verific$n4643$2829 $flatten\u_reg.$verific$n4646$2832 $flatten\u_reg.$verific$n4649$2835 $flatten\u_reg.$verific$n4652$2838 $flatten\u_reg.$verific$n4655$2841 $flatten\u_reg.$verific$n4658$2844 $flatten\u_reg.$verific$n4661$2847 $flatten\u_reg.$verific$n4664$2850 $flatten\u_reg.$verific$n4667$2853 $flatten\u_reg.$verific$n4670$2856 $flatten\u_reg.$verific$n4672$2858 }
  Optimizing cells in module \pwm.
Performed a total of 1 changes.

yosys> opt_merge

3.20. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\pwm'.
<suppressed ~6 debug messages>
Removed a total of 2 cells.

yosys> opt_share

3.21. Executing OPT_SHARE pass.

yosys> opt_dff -nosdff -nodffe

3.22. Executing OPT_DFF pass (perform DFF optimizations).
Changing const-value async load to async reset on $flatten\u_reg.\u_regwen.$verific$q_reg[0]$prim_subreg.sv:72$9429 ($aldff) from module pwm.
Changing const-value async load to async reset on $flatten\u_pwm_core.$verific$beat_ctr_q_reg$pwm_core.sv:79$1694 ($aldff) from module pwm.
Changing const-value async load to async reset on $flatten\u_reg.\u_reg_if.$verific$rspop_reg$tlul_adapter_reg.sv:80$9661 ($aldff) from module pwm.
Changing const-value async load to async reset on $flatten\u_reg.\u_reg_if.$verific$reqsz_reg$tlul_adapter_reg.sv:80$9660 ($aldff) from module pwm.
Changing const-value async load to async reset on $flatten\u_reg.\u_reg_if.$verific$reqid_reg$tlul_adapter_reg.sv:80$9659 ($aldff) from module pwm.
Changing const-value async load to async reset on $flatten\u_reg.\u_reg_if.$verific$rdata_reg$tlul_adapter_reg.sv:90$9669 ($aldff) from module pwm.
Changing const-value async load to async reset on $flatten\u_reg.\u_reg_if.$verific$outstanding_reg$tlul_adapter_reg.sv:67$9649 ($aldff) from module pwm.
Changing const-value async load to async reset on $flatten\u_reg.\u_reg_if.$verific$error_reg$tlul_adapter_reg.sv:90$9670 ($aldff) from module pwm.
Changing const-value async load to async reset on $flatten\gen_alert_tx[0].u_prim_alert_sender.\i_decode_ping.\gen_async.i_sync_p.\gen_generic.u_impl_generic.\u_sync_2.$verific$q_o_reg[0]$prim_generic_flop.sv:23$1616 ($aldff) from module pwm.
Changing const-value async load to async reset on $flatten\u_reg.\u_pwm_param_5_phase_delay_5.$verific$q_reg$prim_subreg.sv:72$9448 ($aldff) from module pwm.
Changing const-value async load to async reset on $flatten\gen_alert_tx[0].u_prim_alert_sender.\i_decode_ping.\gen_async.i_sync_p.\gen_generic.u_impl_generic.\u_sync_1.$verific$q_o_reg[0]$prim_generic_flop.sv:23$1616 ($aldff) from module pwm.
Changing const-value async load to async reset on $flatten\u_reg.\u_pwm_param_5_htbt_en_5.$verific$q_reg[0]$prim_subreg.sv:72$9408 ($aldff) from module pwm.
Changing const-value async load to async reset on $flatten\u_reg.\u_pwm_param_5_cdc.\u_prim_sync.\req_sync.\gen_generic.u_impl_generic.\u_sync_2.$verific$q_o_reg[0]$prim_generic_flop.sv:23$1616 ($aldff) from module pwm.
Changing const-value async load to async reset on $flatten\u_reg.\u_pwm_param_5_cdc.\u_prim_sync.\req_sync.\gen_generic.u_impl_generic.\u_sync_1.$verific$q_o_reg[0]$prim_generic_flop.sv:23$1616 ($aldff) from module pwm.
Changing const-value async load to async reset on $flatten\u_reg.\u_pwm_param_5_cdc.\u_prim_sync.\ack_sync.\gen_generic.u_impl_generic.\u_sync_2.$verific$q_o_reg[0]$prim_generic_flop.sv:23$1616 ($aldff) from module pwm.
Changing const-value async load to async reset on $flatten\u_reg.\u_pwm_param_5_cdc.\u_prim_sync.\ack_sync.\gen_generic.u_impl_generic.\u_sync_1.$verific$q_o_reg[0]$prim_generic_flop.sv:23$1616 ($aldff) from module pwm.
Changing const-value async load to async reset on $flatten\u_reg.\u_pwm_param_5_cdc.\u_prim_sync.$verific$src_req_q_reg$prim_sync_reqack.sv:139$9573 ($aldff) from module pwm.
Changing const-value async load to async reset on $flatten\u_reg.\u_pwm_param_5_cdc.\u_prim_sync.$verific$src_fsm_cs_reg$prim_sync_reqack.sv:139$9572 ($aldff) from module pwm.
Changing const-value async load to async reset on $flatten\u_reg.\u_pwm_param_5_cdc.\u_prim_sync.$verific$dst_fsm_cs_reg$prim_sync_reqack.sv:148$9577 ($aldff) from module pwm.
Changing const-value async load to async reset on $flatten\u_reg.\u_pwm_param_5_cdc.\u_prim_sync.$verific$dst_ack_q_reg$prim_sync_reqack.sv:148$9578 ($aldff) from module pwm.
Changing const-value async load to async reset on $flatten\u_reg.\u_pwm_param_5_cdc.$verific$txn_bits_q_reg$prim_reg_cdc.sv:98$9161 ($aldff) from module pwm.
Changing const-value async load to async reset on $flatten\u_reg.\u_pwm_param_5_cdc.$verific$src_q_reg$prim_reg_cdc.sv:98$9160 ($aldff) from module pwm.
Changing const-value async load to async reset on $flatten\u_reg.\u_pwm_param_5_cdc.$verific$src_busy_q_reg$prim_reg_cdc.sv:55$9142 ($aldff) from module pwm.
Changing const-value async load to async reset on $flatten\u_reg.\u_pwm_param_5_blink_en_5.$verific$qe_reg$prim_subreg.sv:67$9405 ($aldff) from module pwm.
Changing const-value async load to async reset on $flatten\u_reg.\u_pwm_param_5_blink_en_5.$verific$q_reg[0]$prim_subreg.sv:72$9408 ($aldff) from module pwm.
Changing const-value async load to async reset on $flatten\gen_alert_tx[0].u_prim_alert_sender.\i_decode_ping.\gen_async.i_sync_n.\gen_generic.u_impl_generic.\u_sync_2.$verific$q_o_reg[0]$prim_generic_flop.sv:23$1633 ($aldff) from module pwm.
Changing const-value async load to async reset on $flatten\u_reg.\u_pwm_param_4_phase_delay_4.$verific$q_reg$prim_subreg.sv:72$9448 ($aldff) from module pwm.
Changing const-value async load to async reset on $flatten\gen_alert_tx[0].u_prim_alert_sender.\i_decode_ping.\gen_async.i_sync_n.\gen_generic.u_impl_generic.\u_sync_1.$verific$q_o_reg[0]$prim_generic_flop.sv:23$1633 ($aldff) from module pwm.
Changing const-value async load to async reset on $flatten\u_reg.\u_pwm_param_4_htbt_en_4.$verific$q_reg[0]$prim_subreg.sv:72$9408 ($aldff) from module pwm.
Changing const-value async load to async reset on $flatten\u_reg.\u_pwm_param_4_cdc.\u_prim_sync.\req_sync.\gen_generic.u_impl_generic.\u_sync_2.$verific$q_o_reg[0]$prim_generic_flop.sv:23$1616 ($aldff) from module pwm.
Changing const-value async load to async reset on $flatten\u_reg.\u_pwm_param_4_cdc.\u_prim_sync.\req_sync.\gen_generic.u_impl_generic.\u_sync_1.$verific$q_o_reg[0]$prim_generic_flop.sv:23$1616 ($aldff) from module pwm.
Changing const-value async load to async reset on $flatten\u_reg.\u_pwm_param_4_cdc.\u_prim_sync.\ack_sync.\gen_generic.u_impl_generic.\u_sync_2.$verific$q_o_reg[0]$prim_generic_flop.sv:23$1616 ($aldff) from module pwm.
Changing const-value async load to async reset on $flatten\u_reg.\u_pwm_param_4_cdc.\u_prim_sync.\ack_sync.\gen_generic.u_impl_generic.\u_sync_1.$verific$q_o_reg[0]$prim_generic_flop.sv:23$1616 ($aldff) from module pwm.
Changing const-value async load to async reset on $flatten\u_reg.\u_pwm_param_4_cdc.\u_prim_sync.$verific$src_req_q_reg$prim_sync_reqack.sv:139$9573 ($aldff) from module pwm.
Changing const-value async load to async reset on $flatten\u_reg.\u_pwm_param_4_cdc.\u_prim_sync.$verific$src_fsm_cs_reg$prim_sync_reqack.sv:139$9572 ($aldff) from module pwm.
Changing const-value async load to async reset on $flatten\u_reg.\u_pwm_param_4_cdc.\u_prim_sync.$verific$dst_fsm_cs_reg$prim_sync_reqack.sv:148$9577 ($aldff) from module pwm.
Changing const-value async load to async reset on $flatten\u_reg.\u_pwm_param_4_cdc.\u_prim_sync.$verific$dst_ack_q_reg$prim_sync_reqack.sv:148$9578 ($aldff) from module pwm.
Changing const-value async load to async reset on $flatten\u_reg.\u_pwm_param_4_cdc.$verific$txn_bits_q_reg$prim_reg_cdc.sv:98$9161 ($aldff) from module pwm.
Changing const-value async load to async reset on $flatten\u_reg.\u_pwm_param_4_cdc.$verific$src_q_reg$prim_reg_cdc.sv:98$9160 ($aldff) from module pwm.
Changing const-value async load to async reset on $flatten\u_reg.\u_pwm_param_4_cdc.$verific$src_busy_q_reg$prim_reg_cdc.sv:55$9142 ($aldff) from module pwm.
Changing const-value async load to async reset on $flatten\u_reg.\u_pwm_param_4_blink_en_4.$verific$qe_reg$prim_subreg.sv:67$9405 ($aldff) from module pwm.
Changing const-value async load to async reset on $flatten\u_reg.\u_pwm_param_4_blink_en_4.$verific$q_reg[0]$prim_subreg.sv:72$9408 ($aldff) from module pwm.
Changing const-value async load to async reset on $flatten\gen_alert_tx[0].u_prim_alert_sender.$verific$state_q_reg$prim_alert_sender.sv:235$1496 ($aldff) from module pwm.
Changing const-value async load to async reset on $flatten\u_reg.\u_pwm_param_3_phase_delay_3.$verific$q_reg$prim_subreg.sv:72$9448 ($aldff) from module pwm.
Changing const-value async load to async reset on $flatten\gen_alert_tx[0].u_prim_alert_sender.$verific$ping_set_q_reg$prim_alert_sender.sv:235$1500 ($aldff) from module pwm.
Changing const-value async load to async reset on $flatten\u_reg.\u_pwm_param_3_htbt_en_3.$verific$q_reg[0]$prim_subreg.sv:72$9408 ($aldff) from module pwm.
Changing const-value async load to async reset on $flatten\u_reg.\u_pwm_param_3_cdc.\u_prim_sync.\req_sync.\gen_generic.u_impl_generic.\u_sync_2.$verific$q_o_reg[0]$prim_generic_flop.sv:23$1616 ($aldff) from module pwm.
Changing const-value async load to async reset on $flatten\u_reg.\u_pwm_param_3_cdc.\u_prim_sync.\req_sync.\gen_generic.u_impl_generic.\u_sync_1.$verific$q_o_reg[0]$prim_generic_flop.sv:23$1616 ($aldff) from module pwm.
Changing const-value async load to async reset on $flatten\u_reg.\u_pwm_param_3_cdc.\u_prim_sync.\ack_sync.\gen_generic.u_impl_generic.\u_sync_2.$verific$q_o_reg[0]$prim_generic_flop.sv:23$1616 ($aldff) from module pwm.
Changing const-value async load to async reset on $flatten\u_reg.\u_pwm_param_3_cdc.\u_prim_sync.\ack_sync.\gen_generic.u_impl_generic.\u_sync_1.$verific$q_o_reg[0]$prim_generic_flop.sv:23$1616 ($aldff) from module pwm.
Changing const-value async load to async reset on $flatten\u_reg.\u_pwm_param_3_cdc.\u_prim_sync.$verific$src_req_q_reg$prim_sync_reqack.sv:139$9573 ($aldff) from module pwm.
Changing const-value async load to async reset on $flatten\u_reg.\u_pwm_param_3_cdc.\u_prim_sync.$verific$src_fsm_cs_reg$prim_sync_reqack.sv:139$9572 ($aldff) from module pwm.
Changing const-value async load to async reset on $flatten\u_reg.\u_pwm_param_3_cdc.\u_prim_sync.$verific$dst_fsm_cs_reg$prim_sync_reqack.sv:148$9577 ($aldff) from module pwm.
Changing const-value async load to async reset on $flatten\u_reg.\u_pwm_param_3_cdc.\u_prim_sync.$verific$dst_ack_q_reg$prim_sync_reqack.sv:148$9578 ($aldff) from module pwm.
Changing const-value async load to async reset on $flatten\u_reg.\u_pwm_param_3_cdc.$verific$txn_bits_q_reg$prim_reg_cdc.sv:98$9161 ($aldff) from module pwm.
Changing const-value async load to async reset on $flatten\u_reg.\u_pwm_param_3_cdc.$verific$src_q_reg$prim_reg_cdc.sv:98$9160 ($aldff) from module pwm.
Changing const-value async load to async reset on $flatten\u_reg.\u_pwm_param_3_cdc.$verific$src_busy_q_reg$prim_reg_cdc.sv:55$9142 ($aldff) from module pwm.
Changing const-value async load to async reset on $flatten\u_reg.\u_pwm_param_3_blink_en_3.$verific$qe_reg$prim_subreg.sv:67$9405 ($aldff) from module pwm.
Changing const-value async load to async reset on $flatten\u_reg.\u_pwm_param_3_blink_en_3.$verific$q_reg[0]$prim_subreg.sv:72$9408 ($aldff) from module pwm.
Changing const-value async load to async reset on $flatten\u_reg.\u_pwm_param_2_phase_delay_2.$verific$q_reg$prim_subreg.sv:72$9448 ($aldff) from module pwm.
Changing const-value async load to async reset on $flatten\u_reg.\u_pwm_param_2_htbt_en_2.$verific$q_reg[0]$prim_subreg.sv:72$9408 ($aldff) from module pwm.
Changing const-value async load to async reset on $flatten\u_reg.\u_pwm_param_2_cdc.\u_prim_sync.\req_sync.\gen_generic.u_impl_generic.\u_sync_2.$verific$q_o_reg[0]$prim_generic_flop.sv:23$1616 ($aldff) from module pwm.
Changing const-value async load to async reset on $flatten\u_reg.\u_pwm_param_2_cdc.\u_prim_sync.\req_sync.\gen_generic.u_impl_generic.\u_sync_1.$verific$q_o_reg[0]$prim_generic_flop.sv:23$1616 ($aldff) from module pwm.
Changing const-value async load to async reset on $flatten\u_reg.\u_pwm_param_2_cdc.\u_prim_sync.\ack_sync.\gen_generic.u_impl_generic.\u_sync_2.$verific$q_o_reg[0]$prim_generic_flop.sv:23$1616 ($aldff) from module pwm.
Changing const-value async load to async reset on $flatten\u_reg.\u_pwm_param_2_cdc.\u_prim_sync.\ack_sync.\gen_generic.u_impl_generic.\u_sync_1.$verific$q_o_reg[0]$prim_generic_flop.sv:23$1616 ($aldff) from module pwm.
Changing const-value async load to async reset on $flatten\u_reg.\u_pwm_param_2_cdc.\u_prim_sync.$verific$src_req_q_reg$prim_sync_reqack.sv:139$9573 ($aldff) from module pwm.
Changing const-value async load to async reset on $flatten\u_reg.\u_pwm_param_2_cdc.\u_prim_sync.$verific$src_fsm_cs_reg$prim_sync_reqack.sv:139$9572 ($aldff) from module pwm.
Changing const-value async load to async reset on $flatten\u_reg.\u_pwm_param_2_cdc.\u_prim_sync.$verific$dst_fsm_cs_reg$prim_sync_reqack.sv:148$9577 ($aldff) from module pwm.
Changing const-value async load to async reset on $flatten\u_reg.\u_pwm_param_2_cdc.\u_prim_sync.$verific$dst_ack_q_reg$prim_sync_reqack.sv:148$9578 ($aldff) from module pwm.
Changing const-value async load to async reset on $flatten\u_reg.\u_pwm_param_2_cdc.$verific$txn_bits_q_reg$prim_reg_cdc.sv:98$9161 ($aldff) from module pwm.
Changing const-value async load to async reset on $flatten\u_reg.\u_pwm_param_2_cdc.$verific$src_q_reg$prim_reg_cdc.sv:98$9160 ($aldff) from module pwm.
Changing const-value async load to async reset on $flatten\u_reg.\u_pwm_param_2_cdc.$verific$src_busy_q_reg$prim_reg_cdc.sv:55$9142 ($aldff) from module pwm.
Changing const-value async load to async reset on $flatten\u_reg.\u_pwm_param_2_blink_en_2.$verific$qe_reg$prim_subreg.sv:67$9405 ($aldff) from module pwm.
Changing const-value async load to async reset on $flatten\u_reg.\u_pwm_param_2_blink_en_2.$verific$q_reg[0]$prim_subreg.sv:72$9408 ($aldff) from module pwm.
Changing const-value async load to async reset on $flatten\u_reg.\u_pwm_param_1_phase_delay_1.$verific$q_reg$prim_subreg.sv:72$9448 ($aldff) from module pwm.
Changing const-value async load to async reset on $flatten\u_reg.\u_pwm_param_1_htbt_en_1.$verific$q_reg[0]$prim_subreg.sv:72$9408 ($aldff) from module pwm.
Changing const-value async load to async reset on $flatten\u_reg.\u_pwm_param_1_cdc.\u_prim_sync.\req_sync.\gen_generic.u_impl_generic.\u_sync_2.$verific$q_o_reg[0]$prim_generic_flop.sv:23$1616 ($aldff) from module pwm.
Changing const-value async load to async reset on $flatten\u_reg.\u_pwm_param_1_cdc.\u_prim_sync.\req_sync.\gen_generic.u_impl_generic.\u_sync_1.$verific$q_o_reg[0]$prim_generic_flop.sv:23$1616 ($aldff) from module pwm.
Changing const-value async load to async reset on $flatten\u_reg.\u_pwm_param_1_cdc.\u_prim_sync.\ack_sync.\gen_generic.u_impl_generic.\u_sync_2.$verific$q_o_reg[0]$prim_generic_flop.sv:23$1616 ($aldff) from module pwm.
Changing const-value async load to async reset on $flatten\u_reg.\u_pwm_param_1_cdc.\u_prim_sync.\ack_sync.\gen_generic.u_impl_generic.\u_sync_1.$verific$q_o_reg[0]$prim_generic_flop.sv:23$1616 ($aldff) from module pwm.
Changing const-value async load to async reset on $flatten\u_reg.\u_pwm_param_1_cdc.\u_prim_sync.$verific$src_req_q_reg$prim_sync_reqack.sv:139$9573 ($aldff) from module pwm.
Changing const-value async load to async reset on $flatten\u_reg.\u_pwm_param_1_cdc.\u_prim_sync.$verific$src_fsm_cs_reg$prim_sync_reqack.sv:139$9572 ($aldff) from module pwm.
Changing const-value async load to async reset on $flatten\u_reg.\u_pwm_param_1_cdc.\u_prim_sync.$verific$dst_fsm_cs_reg$prim_sync_reqack.sv:148$9577 ($aldff) from module pwm.
Changing const-value async load to async reset on $flatten\u_reg.\u_pwm_param_1_cdc.\u_prim_sync.$verific$dst_ack_q_reg$prim_sync_reqack.sv:148$9578 ($aldff) from module pwm.
Changing const-value async load to async reset on $flatten\u_reg.\u_pwm_param_1_cdc.$verific$txn_bits_q_reg$prim_reg_cdc.sv:98$9161 ($aldff) from module pwm.
Changing const-value async load to async reset on $flatten\u_reg.\u_pwm_param_1_cdc.$verific$src_q_reg$prim_reg_cdc.sv:98$9160 ($aldff) from module pwm.
Changing const-value async load to async reset on $flatten\u_reg.\u_pwm_param_1_cdc.$verific$src_busy_q_reg$prim_reg_cdc.sv:55$9142 ($aldff) from module pwm.
Changing const-value async load to async reset on $flatten\u_reg.\u_pwm_param_1_blink_en_1.$verific$qe_reg$prim_subreg.sv:67$9405 ($aldff) from module pwm.
Changing const-value async load to async reset on $flatten\u_reg.\u_pwm_param_1_blink_en_1.$verific$q_reg[0]$prim_subreg.sv:72$9408 ($aldff) from module pwm.
Changing const-value async load to async reset on $flatten\u_reg.\u_pwm_param_0_phase_delay_0.$verific$q_reg$prim_subreg.sv:72$9448 ($aldff) from module pwm.
Changing const-value async load to async reset on $flatten\u_reg.\u_pwm_param_0_htbt_en_0.$verific$q_reg[0]$prim_subreg.sv:72$9408 ($aldff) from module pwm.
Changing const-value async load to async reset on $flatten\u_reg.\u_pwm_param_0_cdc.\u_prim_sync.\req_sync.\gen_generic.u_impl_generic.\u_sync_2.$verific$q_o_reg[0]$prim_generic_flop.sv:23$1616 ($aldff) from module pwm.
Changing const-value async load to async reset on $flatten\u_reg.\u_pwm_param_0_cdc.\u_prim_sync.\req_sync.\gen_generic.u_impl_generic.\u_sync_1.$verific$q_o_reg[0]$prim_generic_flop.sv:23$1616 ($aldff) from module pwm.
Changing const-value async load to async reset on $flatten\u_reg.\u_pwm_param_0_cdc.\u_prim_sync.\ack_sync.\gen_generic.u_impl_generic.\u_sync_2.$verific$q_o_reg[0]$prim_generic_flop.sv:23$1616 ($aldff) from module pwm.
Changing const-value async load to async reset on $flatten\u_reg.\u_pwm_param_0_cdc.\u_prim_sync.\ack_sync.\gen_generic.u_impl_generic.\u_sync_1.$verific$q_o_reg[0]$prim_generic_flop.sv:23$1616 ($aldff) from module pwm.
Changing const-value async load to async reset on $flatten\u_reg.\u_pwm_param_0_cdc.\u_prim_sync.$verific$src_req_q_reg$prim_sync_reqack.sv:139$9573 ($aldff) from module pwm.
Changing const-value async load to async reset on $flatten\u_reg.\u_pwm_param_0_cdc.\u_prim_sync.$verific$src_fsm_cs_reg$prim_sync_reqack.sv:139$9572 ($aldff) from module pwm.
Changing const-value async load to async reset on $flatten\u_reg.\u_pwm_param_0_cdc.\u_prim_sync.$verific$dst_fsm_cs_reg$prim_sync_reqack.sv:148$9577 ($aldff) from module pwm.
Changing const-value async load to async reset on $flatten\u_reg.\u_pwm_param_0_cdc.\u_prim_sync.$verific$dst_ack_q_reg$prim_sync_reqack.sv:148$9578 ($aldff) from module pwm.
Changing const-value async load to async reset on $flatten\u_reg.\u_pwm_param_0_cdc.$verific$txn_bits_q_reg$prim_reg_cdc.sv:98$9161 ($aldff) from module pwm.
Changing const-value async load to async reset on $flatten\u_reg.\u_pwm_param_0_cdc.$verific$src_q_reg$prim_reg_cdc.sv:98$9160 ($aldff) from module pwm.
Changing const-value async load to async reset on $flatten\u_reg.\u_pwm_param_0_cdc.$verific$src_busy_q_reg$prim_reg_cdc.sv:55$9142 ($aldff) from module pwm.
Changing const-value async load to async reset on $flatten\u_reg.\u_pwm_param_0_blink_en_0.$verific$qe_reg$prim_subreg.sv:67$9405 ($aldff) from module pwm.
Changing const-value async load to async reset on $flatten\u_reg.\u_pwm_param_0_blink_en_0.$verific$q_reg[0]$prim_subreg.sv:72$9408 ($aldff) from module pwm.
Changing const-value async load to async reset on $flatten\u_reg.\u_pwm_en_en_5.$verific$q_reg[0]$prim_subreg.sv:72$9408 ($aldff) from module pwm.
Changing const-value async load to async reset on $flatten\u_reg.\u_pwm_en_en_4.$verific$q_reg[0]$prim_subreg.sv:72$9408 ($aldff) from module pwm.
Changing const-value async load to async reset on $flatten\u_reg.\u_pwm_en_en_3.$verific$q_reg[0]$prim_subreg.sv:72$9408 ($aldff) from module pwm.
Changing const-value async load to async reset on $flatten\u_reg.\u_pwm_en_en_2.$verific$q_reg[0]$prim_subreg.sv:72$9408 ($aldff) from module pwm.
Changing const-value async load to async reset on $flatten\u_reg.\u_pwm_en_en_1.$verific$q_reg[0]$prim_subreg.sv:72$9408 ($aldff) from module pwm.
Changing const-value async load to async reset on $flatten\u_reg.\u_pwm_en_en_0.$verific$qe_reg$prim_subreg.sv:67$9405 ($aldff) from module pwm.
Changing const-value async load to async reset on $flatten\u_reg.\u_pwm_en_en_0.$verific$q_reg[0]$prim_subreg.sv:72$9408 ($aldff) from module pwm.
Changing const-value async load to async reset on $flatten\u_reg.\u_pwm_en_cdc.\u_prim_sync.\req_sync.\gen_generic.u_impl_generic.\u_sync_2.$verific$q_o_reg[0]$prim_generic_flop.sv:23$1616 ($aldff) from module pwm.
Changing const-value async load to async reset on $flatten\u_reg.\u_pwm_en_cdc.\u_prim_sync.\req_sync.\gen_generic.u_impl_generic.\u_sync_1.$verific$q_o_reg[0]$prim_generic_flop.sv:23$1616 ($aldff) from module pwm.
Changing const-value async load to async reset on $flatten\u_reg.\u_pwm_en_cdc.\u_prim_sync.\ack_sync.\gen_generic.u_impl_generic.\u_sync_2.$verific$q_o_reg[0]$prim_generic_flop.sv:23$1616 ($aldff) from module pwm.
Changing const-value async load to async reset on $flatten\u_reg.\u_pwm_en_cdc.\u_prim_sync.\ack_sync.\gen_generic.u_impl_generic.\u_sync_1.$verific$q_o_reg[0]$prim_generic_flop.sv:23$1616 ($aldff) from module pwm.
Changing const-value async load to async reset on $flatten\u_reg.\u_pwm_en_cdc.\u_prim_sync.$verific$src_req_q_reg$prim_sync_reqack.sv:139$9573 ($aldff) from module pwm.
Changing const-value async load to async reset on $flatten\u_reg.\u_pwm_en_cdc.\u_prim_sync.$verific$src_fsm_cs_reg$prim_sync_reqack.sv:139$9572 ($aldff) from module pwm.
Changing const-value async load to async reset on $flatten\u_reg.\u_pwm_en_cdc.\u_prim_sync.$verific$dst_fsm_cs_reg$prim_sync_reqack.sv:148$9577 ($aldff) from module pwm.
Changing const-value async load to async reset on $flatten\u_reg.\u_pwm_en_cdc.\u_prim_sync.$verific$dst_ack_q_reg$prim_sync_reqack.sv:148$9578 ($aldff) from module pwm.
Changing const-value async load to async reset on $flatten\u_reg.\u_pwm_en_cdc.$verific$txn_bits_q_reg$prim_reg_cdc.sv:98$9233 ($aldff) from module pwm.
Changing const-value async load to async reset on $flatten\u_reg.\u_pwm_en_cdc.$verific$src_q_reg$prim_reg_cdc.sv:98$9232 ($aldff) from module pwm.
Changing const-value async load to async reset on $flatten\u_reg.\u_pwm_en_cdc.$verific$src_busy_q_reg$prim_reg_cdc.sv:55$9214 ($aldff) from module pwm.
Changing const-value async load to async reset on $flatten\u_reg.\u_invert_invert_5.$verific$q_reg[0]$prim_subreg.sv:72$9408 ($aldff) from module pwm.
Changing const-value async load to async reset on $flatten\u_reg.\u_invert_invert_4.$verific$q_reg[0]$prim_subreg.sv:72$9408 ($aldff) from module pwm.
Changing const-value async load to async reset on $flatten\u_reg.\u_invert_invert_3.$verific$q_reg[0]$prim_subreg.sv:72$9408 ($aldff) from module pwm.
Changing const-value async load to async reset on $flatten\u_reg.\u_invert_invert_2.$verific$q_reg[0]$prim_subreg.sv:72$9408 ($aldff) from module pwm.
Changing const-value async load to async reset on $flatten\gen_alert_tx[0].u_prim_alert_sender.\i_decode_ping.$verific$gen_async.state_q_reg$prim_diff_decode.sv:172$1586 ($aldff) from module pwm.
Changing const-value async load to async reset on $flatten\u_reg.\u_invert_invert_1.$verific$q_reg[0]$prim_subreg.sv:72$9408 ($aldff) from module pwm.
Changing const-value async load to async reset on $flatten\u_reg.\u_invert_invert_0.$verific$qe_reg$prim_subreg.sv:67$9405 ($aldff) from module pwm.
Changing const-value async load to async reset on $flatten\u_reg.\u_invert_invert_0.$verific$q_reg[0]$prim_subreg.sv:72$9408 ($aldff) from module pwm.
Changing const-value async load to async reset on $flatten\u_reg.\u_invert_cdc.\u_prim_sync.\req_sync.\gen_generic.u_impl_generic.\u_sync_2.$verific$q_o_reg[0]$prim_generic_flop.sv:23$1616 ($aldff) from module pwm.
Changing const-value async load to async reset on $flatten\u_reg.\u_invert_cdc.\u_prim_sync.\req_sync.\gen_generic.u_impl_generic.\u_sync_1.$verific$q_o_reg[0]$prim_generic_flop.sv:23$1616 ($aldff) from module pwm.
Changing const-value async load to async reset on $flatten\u_reg.\u_invert_cdc.\u_prim_sync.\ack_sync.\gen_generic.u_impl_generic.\u_sync_2.$verific$q_o_reg[0]$prim_generic_flop.sv:23$1616 ($aldff) from module pwm.
Changing const-value async load to async reset on $flatten\u_reg.\u_invert_cdc.\u_prim_sync.\ack_sync.\gen_generic.u_impl_generic.\u_sync_1.$verific$q_o_reg[0]$prim_generic_flop.sv:23$1616 ($aldff) from module pwm.
Changing const-value async load to async reset on $flatten\u_reg.\u_invert_cdc.\u_prim_sync.$verific$src_req_q_reg$prim_sync_reqack.sv:139$9573 ($aldff) from module pwm.
Changing const-value async load to async reset on $flatten\u_reg.\u_invert_cdc.\u_prim_sync.$verific$src_fsm_cs_reg$prim_sync_reqack.sv:139$9572 ($aldff) from module pwm.
Changing const-value async load to async reset on $flatten\u_reg.\u_invert_cdc.\u_prim_sync.$verific$dst_fsm_cs_reg$prim_sync_reqack.sv:148$9577 ($aldff) from module pwm.
Changing const-value async load to async reset on $flatten\u_reg.\u_invert_cdc.\u_prim_sync.$verific$dst_ack_q_reg$prim_sync_reqack.sv:148$9578 ($aldff) from module pwm.
Changing const-value async load to async reset on $flatten\u_reg.\u_invert_cdc.$verific$txn_bits_q_reg$prim_reg_cdc.sv:98$9233 ($aldff) from module pwm.
Changing const-value async load to async reset on $flatten\u_reg.\u_invert_cdc.$verific$src_q_reg$prim_reg_cdc.sv:98$9232 ($aldff) from module pwm.
Changing const-value async load to async reset on $flatten\u_reg.\u_invert_cdc.$verific$src_busy_q_reg$prim_reg_cdc.sv:55$9214 ($aldff) from module pwm.
Changing const-value async load to async reset on $flatten\u_reg.\u_duty_cycle_5_cdc.\u_prim_sync.\req_sync.\gen_generic.u_impl_generic.\u_sync_2.$verific$q_o_reg[0]$prim_generic_flop.sv:23$1616 ($aldff) from module pwm.
Changing const-value async load to async reset on $flatten\u_reg.\u_duty_cycle_5_cdc.\u_prim_sync.\req_sync.\gen_generic.u_impl_generic.\u_sync_1.$verific$q_o_reg[0]$prim_generic_flop.sv:23$1616 ($aldff) from module pwm.
Changing const-value async load to async reset on $flatten\u_reg.\u_duty_cycle_5_cdc.\u_prim_sync.\ack_sync.\gen_generic.u_impl_generic.\u_sync_2.$verific$q_o_reg[0]$prim_generic_flop.sv:23$1616 ($aldff) from module pwm.
Changing const-value async load to async reset on $flatten\u_reg.\u_duty_cycle_5_cdc.\u_prim_sync.\ack_sync.\gen_generic.u_impl_generic.\u_sync_1.$verific$q_o_reg[0]$prim_generic_flop.sv:23$1616 ($aldff) from module pwm.
Changing const-value async load to async reset on $flatten\u_reg.\u_duty_cycle_5_cdc.\u_prim_sync.$verific$src_req_q_reg$prim_sync_reqack.sv:139$9573 ($aldff) from module pwm.
Changing const-value async load to async reset on $flatten\u_reg.\u_duty_cycle_5_cdc.\u_prim_sync.$verific$src_fsm_cs_reg$prim_sync_reqack.sv:139$9572 ($aldff) from module pwm.
Changing const-value async load to async reset on $flatten\u_reg.\u_duty_cycle_5_cdc.\u_prim_sync.$verific$dst_fsm_cs_reg$prim_sync_reqack.sv:148$9577 ($aldff) from module pwm.
Changing const-value async load to async reset on $flatten\u_reg.\u_duty_cycle_5_cdc.\u_prim_sync.$verific$dst_ack_q_reg$prim_sync_reqack.sv:148$9578 ($aldff) from module pwm.
Changing const-value async load to async reset on $flatten\u_reg.\u_duty_cycle_5_cdc.$verific$txn_bits_q_reg$prim_reg_cdc.sv:98$9377 ($aldff) from module pwm.
Changing const-value async load to async reset on $flatten\u_reg.\u_duty_cycle_5_cdc.$verific$src_q_reg$prim_reg_cdc.sv:98$9376 ($aldff) from module pwm.
Changing const-value async load to async reset on $flatten\u_reg.\u_duty_cycle_5_cdc.$verific$src_busy_q_reg$prim_reg_cdc.sv:55$9358 ($aldff) from module pwm.
Changing const-value async load to async reset on $flatten\gen_alert_tx[0].u_prim_alert_sender.\i_decode_ping.$verific$gen_async.diff_pq_reg$prim_diff_decode.sv:172$1587 ($aldff) from module pwm.
Changing const-value async load to async reset on $flatten\u_reg.\u_duty_cycle_5_b_5.$verific$q_reg$prim_subreg.sv:72$9469 ($aldff) from module pwm.
Changing const-value async load to async reset on $flatten\gen_alert_tx[0].u_prim_alert_sender.$verific$alert_set_q_reg$prim_alert_sender.sv:235$1499 ($aldff) from module pwm.
Changing const-value async load to async reset on $flatten\u_reg.\u_duty_cycle_5_a_5.$verific$qe_reg$prim_subreg.sv:67$9465 ($aldff) from module pwm.
Changing const-value async load to async reset on $flatten\u_reg.\u_duty_cycle_5_a_5.$verific$q_reg$prim_subreg.sv:72$9469 ($aldff) from module pwm.
Changing const-value async load to async reset on $flatten\gen_alert_tx[0].u_prim_alert_sender.$verific$alert_pq_reg$prim_alert_sender.sv:235$1497 ($aldff) from module pwm.
Changing const-value async load to async reset on $flatten\u_reg.\u_duty_cycle_4_cdc.\u_prim_sync.\req_sync.\gen_generic.u_impl_generic.\u_sync_2.$verific$q_o_reg[0]$prim_generic_flop.sv:23$1616 ($aldff) from module pwm.
Changing const-value async load to async reset on $flatten\u_reg.\u_duty_cycle_4_cdc.\u_prim_sync.\req_sync.\gen_generic.u_impl_generic.\u_sync_1.$verific$q_o_reg[0]$prim_generic_flop.sv:23$1616 ($aldff) from module pwm.
Changing const-value async load to async reset on $flatten\u_reg.\u_duty_cycle_4_cdc.\u_prim_sync.\ack_sync.\gen_generic.u_impl_generic.\u_sync_2.$verific$q_o_reg[0]$prim_generic_flop.sv:23$1616 ($aldff) from module pwm.
Changing const-value async load to async reset on $flatten\u_reg.\u_duty_cycle_4_cdc.\u_prim_sync.\ack_sync.\gen_generic.u_impl_generic.\u_sync_1.$verific$q_o_reg[0]$prim_generic_flop.sv:23$1616 ($aldff) from module pwm.
Changing const-value async load to async reset on $flatten\u_reg.\u_duty_cycle_4_cdc.\u_prim_sync.$verific$src_req_q_reg$prim_sync_reqack.sv:139$9573 ($aldff) from module pwm.
Changing const-value async load to async reset on $flatten\u_reg.\u_duty_cycle_4_cdc.\u_prim_sync.$verific$src_fsm_cs_reg$prim_sync_reqack.sv:139$9572 ($aldff) from module pwm.
Changing const-value async load to async reset on $flatten\u_reg.\u_duty_cycle_4_cdc.\u_prim_sync.$verific$dst_fsm_cs_reg$prim_sync_reqack.sv:148$9577 ($aldff) from module pwm.
Changing const-value async load to async reset on $flatten\u_reg.\u_duty_cycle_4_cdc.\u_prim_sync.$verific$dst_ack_q_reg$prim_sync_reqack.sv:148$9578 ($aldff) from module pwm.
Changing const-value async load to async reset on $flatten\u_reg.\u_duty_cycle_4_cdc.$verific$txn_bits_q_reg$prim_reg_cdc.sv:98$9377 ($aldff) from module pwm.
Changing const-value async load to async reset on $flatten\u_reg.\u_duty_cycle_4_cdc.$verific$src_q_reg$prim_reg_cdc.sv:98$9376 ($aldff) from module pwm.
Changing const-value async load to async reset on $flatten\u_reg.\u_duty_cycle_4_cdc.$verific$src_busy_q_reg$prim_reg_cdc.sv:55$9358 ($aldff) from module pwm.
Changing const-value async load to async reset on $flatten\gen_alert_tx[0].u_prim_alert_sender.\i_decode_ping.$verific$gen_async.diff_nq_reg$prim_diff_decode.sv:172$1588 ($aldff) from module pwm.
Changing const-value async load to async reset on $flatten\u_reg.\u_duty_cycle_4_b_4.$verific$q_reg$prim_subreg.sv:72$9469 ($aldff) from module pwm.
Changing const-value async load to async reset on $flatten\gen_alert_tx[0].u_prim_alert_sender.$verific$alert_nq_reg$prim_alert_sender.sv:235$1498 ($aldff) from module pwm.
Changing const-value async load to async reset on $flatten\u_reg.\u_duty_cycle_4_a_4.$verific$qe_reg$prim_subreg.sv:67$9465 ($aldff) from module pwm.
Changing const-value async load to async reset on $flatten\u_reg.\u_duty_cycle_4_a_4.$verific$q_reg$prim_subreg.sv:72$9469 ($aldff) from module pwm.
Changing const-value async load to async reset on $flatten\u_reg.\u_duty_cycle_3_cdc.\u_prim_sync.\req_sync.\gen_generic.u_impl_generic.\u_sync_2.$verific$q_o_reg[0]$prim_generic_flop.sv:23$1616 ($aldff) from module pwm.
Changing const-value async load to async reset on $flatten\u_reg.\u_duty_cycle_3_cdc.\u_prim_sync.\req_sync.\gen_generic.u_impl_generic.\u_sync_1.$verific$q_o_reg[0]$prim_generic_flop.sv:23$1616 ($aldff) from module pwm.
Changing const-value async load to async reset on $flatten\u_reg.\u_duty_cycle_3_cdc.\u_prim_sync.\ack_sync.\gen_generic.u_impl_generic.\u_sync_2.$verific$q_o_reg[0]$prim_generic_flop.sv:23$1616 ($aldff) from module pwm.
Changing const-value async load to async reset on $flatten\u_reg.\u_duty_cycle_3_cdc.\u_prim_sync.\ack_sync.\gen_generic.u_impl_generic.\u_sync_1.$verific$q_o_reg[0]$prim_generic_flop.sv:23$1616 ($aldff) from module pwm.
Changing const-value async load to async reset on $flatten\u_reg.\u_duty_cycle_3_cdc.\u_prim_sync.$verific$src_req_q_reg$prim_sync_reqack.sv:139$9573 ($aldff) from module pwm.
Changing const-value async load to async reset on $flatten\u_reg.\u_duty_cycle_3_cdc.\u_prim_sync.$verific$src_fsm_cs_reg$prim_sync_reqack.sv:139$9572 ($aldff) from module pwm.
Changing const-value async load to async reset on $flatten\u_reg.\u_duty_cycle_3_cdc.\u_prim_sync.$verific$dst_fsm_cs_reg$prim_sync_reqack.sv:148$9577 ($aldff) from module pwm.
Changing const-value async load to async reset on $flatten\u_reg.\u_duty_cycle_3_cdc.\u_prim_sync.$verific$dst_ack_q_reg$prim_sync_reqack.sv:148$9578 ($aldff) from module pwm.
Changing const-value async load to async reset on $flatten\u_reg.\u_duty_cycle_3_cdc.$verific$txn_bits_q_reg$prim_reg_cdc.sv:98$9377 ($aldff) from module pwm.
Changing const-value async load to async reset on $flatten\u_reg.\u_duty_cycle_3_cdc.$verific$src_q_reg$prim_reg_cdc.sv:98$9376 ($aldff) from module pwm.
Changing const-value async load to async reset on $flatten\u_reg.\u_duty_cycle_3_cdc.$verific$src_busy_q_reg$prim_reg_cdc.sv:55$9358 ($aldff) from module pwm.
Changing const-value async load to async reset on $flatten\u_reg.\u_duty_cycle_3_b_3.$verific$q_reg$prim_subreg.sv:72$9469 ($aldff) from module pwm.
Changing const-value async load to async reset on $flatten\u_reg.\u_duty_cycle_3_a_3.$verific$qe_reg$prim_subreg.sv:67$9465 ($aldff) from module pwm.
Changing const-value async load to async reset on $flatten\u_reg.\u_duty_cycle_3_a_3.$verific$q_reg$prim_subreg.sv:72$9469 ($aldff) from module pwm.
Changing const-value async load to async reset on $flatten\u_reg.\u_duty_cycle_2_cdc.\u_prim_sync.\req_sync.\gen_generic.u_impl_generic.\u_sync_2.$verific$q_o_reg[0]$prim_generic_flop.sv:23$1616 ($aldff) from module pwm.
Changing const-value async load to async reset on $flatten\u_reg.\u_duty_cycle_2_cdc.\u_prim_sync.\req_sync.\gen_generic.u_impl_generic.\u_sync_1.$verific$q_o_reg[0]$prim_generic_flop.sv:23$1616 ($aldff) from module pwm.
Changing const-value async load to async reset on $flatten\u_reg.\u_duty_cycle_2_cdc.\u_prim_sync.\ack_sync.\gen_generic.u_impl_generic.\u_sync_2.$verific$q_o_reg[0]$prim_generic_flop.sv:23$1616 ($aldff) from module pwm.
Changing const-value async load to async reset on $flatten\u_reg.\u_duty_cycle_2_cdc.\u_prim_sync.\ack_sync.\gen_generic.u_impl_generic.\u_sync_1.$verific$q_o_reg[0]$prim_generic_flop.sv:23$1616 ($aldff) from module pwm.
Changing const-value async load to async reset on $flatten\u_reg.\u_duty_cycle_2_cdc.\u_prim_sync.$verific$src_req_q_reg$prim_sync_reqack.sv:139$9573 ($aldff) from module pwm.
Changing const-value async load to async reset on $flatten\u_reg.\u_duty_cycle_2_cdc.\u_prim_sync.$verific$src_fsm_cs_reg$prim_sync_reqack.sv:139$9572 ($aldff) from module pwm.
Changing const-value async load to async reset on $flatten\u_reg.\u_duty_cycle_2_cdc.\u_prim_sync.$verific$dst_fsm_cs_reg$prim_sync_reqack.sv:148$9577 ($aldff) from module pwm.
Changing const-value async load to async reset on $flatten\u_reg.\u_duty_cycle_2_cdc.\u_prim_sync.$verific$dst_ack_q_reg$prim_sync_reqack.sv:148$9578 ($aldff) from module pwm.
Changing const-value async load to async reset on $flatten\u_reg.\u_duty_cycle_2_cdc.$verific$txn_bits_q_reg$prim_reg_cdc.sv:98$9377 ($aldff) from module pwm.
Changing const-value async load to async reset on $flatten\u_reg.\u_duty_cycle_2_cdc.$verific$src_q_reg$prim_reg_cdc.sv:98$9376 ($aldff) from module pwm.
Changing const-value async load to async reset on $flatten\u_reg.\u_duty_cycle_2_cdc.$verific$src_busy_q_reg$prim_reg_cdc.sv:55$9358 ($aldff) from module pwm.
Changing const-value async load to async reset on $flatten\u_reg.\u_duty_cycle_2_b_2.$verific$q_reg$prim_subreg.sv:72$9469 ($aldff) from module pwm.
Changing const-value async load to async reset on $flatten\u_reg.\u_duty_cycle_2_a_2.$verific$qe_reg$prim_subreg.sv:67$9465 ($aldff) from module pwm.
Changing const-value async load to async reset on $flatten\u_reg.\u_duty_cycle_2_a_2.$verific$q_reg$prim_subreg.sv:72$9469 ($aldff) from module pwm.
Changing const-value async load to async reset on $flatten\u_reg.\u_duty_cycle_1_cdc.\u_prim_sync.\req_sync.\gen_generic.u_impl_generic.\u_sync_2.$verific$q_o_reg[0]$prim_generic_flop.sv:23$1616 ($aldff) from module pwm.
Changing const-value async load to async reset on $flatten\u_reg.\u_duty_cycle_1_cdc.\u_prim_sync.\req_sync.\gen_generic.u_impl_generic.\u_sync_1.$verific$q_o_reg[0]$prim_generic_flop.sv:23$1616 ($aldff) from module pwm.
Changing const-value async load to async reset on $flatten\u_reg.\u_duty_cycle_1_cdc.\u_prim_sync.\ack_sync.\gen_generic.u_impl_generic.\u_sync_2.$verific$q_o_reg[0]$prim_generic_flop.sv:23$1616 ($aldff) from module pwm.
Changing const-value async load to async reset on $flatten\u_reg.\u_duty_cycle_1_cdc.\u_prim_sync.\ack_sync.\gen_generic.u_impl_generic.\u_sync_1.$verific$q_o_reg[0]$prim_generic_flop.sv:23$1616 ($aldff) from module pwm.
Changing const-value async load to async reset on $flatten\u_reg.\u_duty_cycle_1_cdc.\u_prim_sync.$verific$src_req_q_reg$prim_sync_reqack.sv:139$9573 ($aldff) from module pwm.
Changing const-value async load to async reset on $flatten\u_reg.\u_duty_cycle_1_cdc.\u_prim_sync.$verific$src_fsm_cs_reg$prim_sync_reqack.sv:139$9572 ($aldff) from module pwm.
Changing const-value async load to async reset on $flatten\u_reg.\u_duty_cycle_1_cdc.\u_prim_sync.$verific$dst_fsm_cs_reg$prim_sync_reqack.sv:148$9577 ($aldff) from module pwm.
Changing const-value async load to async reset on $flatten\u_reg.\u_duty_cycle_1_cdc.\u_prim_sync.$verific$dst_ack_q_reg$prim_sync_reqack.sv:148$9578 ($aldff) from module pwm.
Changing const-value async load to async reset on $flatten\u_reg.\u_duty_cycle_1_cdc.$verific$txn_bits_q_reg$prim_reg_cdc.sv:98$9377 ($aldff) from module pwm.
Changing const-value async load to async reset on $flatten\u_reg.\u_duty_cycle_1_cdc.$verific$src_q_reg$prim_reg_cdc.sv:98$9376 ($aldff) from module pwm.
Changing const-value async load to async reset on $flatten\u_reg.\u_duty_cycle_1_cdc.$verific$src_busy_q_reg$prim_reg_cdc.sv:55$9358 ($aldff) from module pwm.
Changing const-value async load to async reset on $flatten\u_reg.\u_duty_cycle_1_b_1.$verific$q_reg$prim_subreg.sv:72$9469 ($aldff) from module pwm.
Changing const-value async load to async reset on $flatten\u_reg.\u_duty_cycle_1_a_1.$verific$qe_reg$prim_subreg.sv:67$9465 ($aldff) from module pwm.
Changing const-value async load to async reset on $flatten\u_reg.\u_duty_cycle_1_a_1.$verific$q_reg$prim_subreg.sv:72$9469 ($aldff) from module pwm.
Changing const-value async load to async reset on $flatten\u_reg.\u_duty_cycle_0_cdc.\u_prim_sync.\req_sync.\gen_generic.u_impl_generic.\u_sync_2.$verific$q_o_reg[0]$prim_generic_flop.sv:23$1616 ($aldff) from module pwm.
Changing const-value async load to async reset on $flatten\u_reg.\u_duty_cycle_0_cdc.\u_prim_sync.\req_sync.\gen_generic.u_impl_generic.\u_sync_1.$verific$q_o_reg[0]$prim_generic_flop.sv:23$1616 ($aldff) from module pwm.
Changing const-value async load to async reset on $flatten\u_reg.\u_duty_cycle_0_cdc.\u_prim_sync.\ack_sync.\gen_generic.u_impl_generic.\u_sync_2.$verific$q_o_reg[0]$prim_generic_flop.sv:23$1616 ($aldff) from module pwm.
Changing const-value async load to async reset on $flatten\u_reg.\u_duty_cycle_0_cdc.\u_prim_sync.\ack_sync.\gen_generic.u_impl_generic.\u_sync_1.$verific$q_o_reg[0]$prim_generic_flop.sv:23$1616 ($aldff) from module pwm.
Changing const-value async load to async reset on $flatten\u_reg.\u_duty_cycle_0_cdc.\u_prim_sync.$verific$src_req_q_reg$prim_sync_reqack.sv:139$9573 ($aldff) from module pwm.
Changing const-value async load to async reset on $flatten\u_reg.\u_duty_cycle_0_cdc.\u_prim_sync.$verific$src_fsm_cs_reg$prim_sync_reqack.sv:139$9572 ($aldff) from module pwm.
Changing const-value async load to async reset on $flatten\u_reg.\u_duty_cycle_0_cdc.\u_prim_sync.$verific$dst_fsm_cs_reg$prim_sync_reqack.sv:148$9577 ($aldff) from module pwm.
Changing const-value async load to async reset on $flatten\u_reg.\u_duty_cycle_0_cdc.\u_prim_sync.$verific$dst_ack_q_reg$prim_sync_reqack.sv:148$9578 ($aldff) from module pwm.
Changing const-value async load to async reset on $flatten\u_reg.\u_duty_cycle_0_cdc.$verific$txn_bits_q_reg$prim_reg_cdc.sv:98$9377 ($aldff) from module pwm.
Changing const-value async load to async reset on $flatten\u_reg.\u_duty_cycle_0_cdc.$verific$src_q_reg$prim_reg_cdc.sv:98$9376 ($aldff) from module pwm.
Changing const-value async load to async reset on $flatten\u_reg.\u_duty_cycle_0_cdc.$verific$src_busy_q_reg$prim_reg_cdc.sv:55$9358 ($aldff) from module pwm.
Changing const-value async load to async reset on $flatten\u_reg.\u_duty_cycle_0_b_0.$verific$q_reg$prim_subreg.sv:72$9469 ($aldff) from module pwm.
Changing const-value async load to async reset on $flatten\u_reg.\u_duty_cycle_0_a_0.$verific$qe_reg$prim_subreg.sv:67$9465 ($aldff) from module pwm.
Changing const-value async load to async reset on $flatten\u_reg.\u_duty_cycle_0_a_0.$verific$q_reg$prim_subreg.sv:72$9469 ($aldff) from module pwm.
Changing const-value async load to async reset on $flatten\u_reg.\u_core_tgl.\req_sync.\gen_generic.u_impl_generic.\u_sync_2.$verific$q_o_reg[0]$prim_generic_flop.sv:23$1616 ($aldff) from module pwm.
Changing const-value async load to async reset on $flatten\u_reg.\u_core_tgl.\req_sync.\gen_generic.u_impl_generic.\u_sync_1.$verific$q_o_reg[0]$prim_generic_flop.sv:23$1616 ($aldff) from module pwm.
Changing const-value async load to async reset on $flatten\u_reg.\u_core_tgl.\ack_sync.\gen_generic.u_impl_generic.\u_sync_2.$verific$q_o_reg[0]$prim_generic_flop.sv:23$1616 ($aldff) from module pwm.
Changing const-value async load to async reset on $flatten\u_reg.\u_core_tgl.\ack_sync.\gen_generic.u_impl_generic.\u_sync_1.$verific$q_o_reg[0]$prim_generic_flop.sv:23$1616 ($aldff) from module pwm.
Changing const-value async load to async reset on $flatten\u_reg.\u_core_tgl.$verific$src_req_q_reg$prim_sync_reqack.sv:139$9573 ($aldff) from module pwm.
Changing const-value async load to async reset on $flatten\u_reg.\u_core_tgl.$verific$src_fsm_cs_reg$prim_sync_reqack.sv:139$9572 ($aldff) from module pwm.
Changing const-value async load to async reset on $flatten\u_reg.\u_core_tgl.$verific$dst_fsm_cs_reg$prim_sync_reqack.sv:148$9577 ($aldff) from module pwm.
Changing const-value async load to async reset on $flatten\u_reg.\u_core_tgl.$verific$dst_ack_q_reg$prim_sync_reqack.sv:148$9578 ($aldff) from module pwm.
Changing const-value async load to async reset on $flatten\u_reg.\u_cfg_dc_resn.$verific$q_reg$prim_subreg.sv:72$9511 ($aldff) from module pwm.
Changing const-value async load to async reset on $flatten\u_reg.\u_cfg_cntr_en.$verific$q_reg[0]$prim_subreg.sv:72$9408 ($aldff) from module pwm.
Changing const-value async load to async reset on $flatten\u_reg.\u_cfg_clk_div.$verific$qe_reg$prim_subreg.sv:67$9486 ($aldff) from module pwm.
Changing const-value async load to async reset on $flatten\u_reg.\u_cfg_clk_div.$verific$q_reg$prim_subreg.sv:72$9490 ($aldff) from module pwm.
Changing const-value async load to async reset on $flatten\u_reg.\u_cfg_cdc.\u_prim_sync.\req_sync.\gen_generic.u_impl_generic.\u_sync_2.$verific$q_o_reg[0]$prim_generic_flop.sv:23$1616 ($aldff) from module pwm.
Changing const-value async load to async reset on $flatten\u_reg.\u_cfg_cdc.\u_prim_sync.\req_sync.\gen_generic.u_impl_generic.\u_sync_1.$verific$q_o_reg[0]$prim_generic_flop.sv:23$1616 ($aldff) from module pwm.
Changing const-value async load to async reset on $flatten\u_reg.\u_cfg_cdc.\u_prim_sync.\ack_sync.\gen_generic.u_impl_generic.\u_sync_2.$verific$q_o_reg[0]$prim_generic_flop.sv:23$1616 ($aldff) from module pwm.
Changing const-value async load to async reset on $flatten\u_reg.\u_cfg_cdc.\u_prim_sync.\ack_sync.\gen_generic.u_impl_generic.\u_sync_1.$verific$q_o_reg[0]$prim_generic_flop.sv:23$1616 ($aldff) from module pwm.
Changing const-value async load to async reset on $flatten\u_reg.\u_cfg_cdc.\u_prim_sync.$verific$src_req_q_reg$prim_sync_reqack.sv:139$9573 ($aldff) from module pwm.
Changing const-value async load to async reset on $flatten\u_reg.\u_cfg_cdc.\u_prim_sync.$verific$src_fsm_cs_reg$prim_sync_reqack.sv:139$9572 ($aldff) from module pwm.
Changing const-value async load to async reset on $flatten\u_reg.\u_cfg_cdc.\u_prim_sync.$verific$dst_fsm_cs_reg$prim_sync_reqack.sv:148$9577 ($aldff) from module pwm.
Changing const-value async load to async reset on $flatten\u_reg.\u_cfg_cdc.\u_prim_sync.$verific$dst_ack_q_reg$prim_sync_reqack.sv:148$9578 ($aldff) from module pwm.
Changing const-value async load to async reset on $flatten\u_reg.\u_cfg_cdc.$verific$txn_bits_q_reg$prim_reg_cdc.sv:98$9305 ($aldff) from module pwm.
Changing const-value async load to async reset on $flatten\u_reg.\u_cfg_cdc.$verific$src_q_reg$prim_reg_cdc.sv:98$9304 ($aldff) from module pwm.
Changing const-value async load to async reset on $flatten\u_reg.\u_cfg_cdc.$verific$src_busy_q_reg$prim_reg_cdc.sv:55$9286 ($aldff) from module pwm.
Changing const-value async load to async reset on $flatten\u_reg.\u_blink_param_5_y_5.$verific$q_reg$prim_subreg.sv:72$9448 ($aldff) from module pwm.
Changing const-value async load to async reset on $flatten\u_reg.\u_blink_param_5_x_5.$verific$qe_reg$prim_subreg.sv:67$9444 ($aldff) from module pwm.
Changing const-value async load to async reset on $flatten\u_reg.\u_blink_param_5_x_5.$verific$q_reg$prim_subreg.sv:72$9448 ($aldff) from module pwm.
Changing const-value async load to async reset on $flatten\u_reg.\u_blink_param_5_cdc.\u_prim_sync.\req_sync.\gen_generic.u_impl_generic.\u_sync_2.$verific$q_o_reg[0]$prim_generic_flop.sv:23$1616 ($aldff) from module pwm.
Changing const-value async load to async reset on $flatten\u_reg.\u_blink_param_5_cdc.\u_prim_sync.\req_sync.\gen_generic.u_impl_generic.\u_sync_1.$verific$q_o_reg[0]$prim_generic_flop.sv:23$1616 ($aldff) from module pwm.
Changing const-value async load to async reset on $flatten\u_reg.\u_blink_param_5_cdc.\u_prim_sync.\ack_sync.\gen_generic.u_impl_generic.\u_sync_2.$verific$q_o_reg[0]$prim_generic_flop.sv:23$1616 ($aldff) from module pwm.
Changing const-value async load to async reset on $flatten\u_reg.\u_blink_param_5_cdc.\u_prim_sync.\ack_sync.\gen_generic.u_impl_generic.\u_sync_1.$verific$q_o_reg[0]$prim_generic_flop.sv:23$1616 ($aldff) from module pwm.
Changing const-value async load to async reset on $flatten\u_reg.\u_blink_param_5_cdc.\u_prim_sync.$verific$src_req_q_reg$prim_sync_reqack.sv:139$9573 ($aldff) from module pwm.
Changing const-value async load to async reset on $flatten\u_reg.\u_blink_param_5_cdc.\u_prim_sync.$verific$src_fsm_cs_reg$prim_sync_reqack.sv:139$9572 ($aldff) from module pwm.
Changing const-value async load to async reset on $flatten\u_reg.\u_blink_param_5_cdc.\u_prim_sync.$verific$dst_fsm_cs_reg$prim_sync_reqack.sv:148$9577 ($aldff) from module pwm.
Changing const-value async load to async reset on $flatten\u_reg.\u_blink_param_5_cdc.\u_prim_sync.$verific$dst_ack_q_reg$prim_sync_reqack.sv:148$9578 ($aldff) from module pwm.
Changing const-value async load to async reset on $flatten\u_reg.\u_blink_param_5_cdc.$verific$txn_bits_q_reg$prim_reg_cdc.sv:98$9089 ($aldff) from module pwm.
Changing const-value async load to async reset on $flatten\u_reg.\u_blink_param_5_cdc.$verific$src_q_reg$prim_reg_cdc.sv:98$9088 ($aldff) from module pwm.
Changing const-value async load to async reset on $flatten\u_reg.\u_blink_param_5_cdc.$verific$src_busy_q_reg$prim_reg_cdc.sv:55$9070 ($aldff) from module pwm.
Changing const-value async load to async reset on $flatten\u_reg.\u_blink_param_4_y_4.$verific$q_reg$prim_subreg.sv:72$9448 ($aldff) from module pwm.
Changing const-value async load to async reset on $flatten\u_reg.\u_blink_param_4_x_4.$verific$qe_reg$prim_subreg.sv:67$9444 ($aldff) from module pwm.
Changing const-value async load to async reset on $flatten\u_reg.\u_blink_param_4_x_4.$verific$q_reg$prim_subreg.sv:72$9448 ($aldff) from module pwm.
Changing const-value async load to async reset on $flatten\u_reg.\u_blink_param_4_cdc.\u_prim_sync.\req_sync.\gen_generic.u_impl_generic.\u_sync_2.$verific$q_o_reg[0]$prim_generic_flop.sv:23$1616 ($aldff) from module pwm.
Changing const-value async load to async reset on $flatten\u_reg.\u_blink_param_4_cdc.\u_prim_sync.\req_sync.\gen_generic.u_impl_generic.\u_sync_1.$verific$q_o_reg[0]$prim_generic_flop.sv:23$1616 ($aldff) from module pwm.
Changing const-value async load to async reset on $flatten\u_reg.\u_blink_param_4_cdc.\u_prim_sync.\ack_sync.\gen_generic.u_impl_generic.\u_sync_2.$verific$q_o_reg[0]$prim_generic_flop.sv:23$1616 ($aldff) from module pwm.
Changing const-value async load to async reset on $flatten\u_reg.\u_blink_param_4_cdc.\u_prim_sync.\ack_sync.\gen_generic.u_impl_generic.\u_sync_1.$verific$q_o_reg[0]$prim_generic_flop.sv:23$1616 ($aldff) from module pwm.
Changing const-value async load to async reset on $flatten\u_reg.\u_blink_param_4_cdc.\u_prim_sync.$verific$src_req_q_reg$prim_sync_reqack.sv:139$9573 ($aldff) from module pwm.
Changing const-value async load to async reset on $flatten\u_reg.\u_blink_param_4_cdc.\u_prim_sync.$verific$src_fsm_cs_reg$prim_sync_reqack.sv:139$9572 ($aldff) from module pwm.
Changing const-value async load to async reset on $flatten\u_reg.\u_blink_param_4_cdc.\u_prim_sync.$verific$dst_fsm_cs_reg$prim_sync_reqack.sv:148$9577 ($aldff) from module pwm.
Changing const-value async load to async reset on $flatten\u_reg.\u_blink_param_4_cdc.\u_prim_sync.$verific$dst_ack_q_reg$prim_sync_reqack.sv:148$9578 ($aldff) from module pwm.
Changing const-value async load to async reset on $flatten\u_reg.\u_blink_param_4_cdc.$verific$txn_bits_q_reg$prim_reg_cdc.sv:98$9089 ($aldff) from module pwm.
Changing const-value async load to async reset on $flatten\u_reg.\u_blink_param_4_cdc.$verific$src_q_reg$prim_reg_cdc.sv:98$9088 ($aldff) from module pwm.
Changing const-value async load to async reset on $flatten\u_reg.\u_blink_param_4_cdc.$verific$src_busy_q_reg$prim_reg_cdc.sv:55$9070 ($aldff) from module pwm.
Changing const-value async load to async reset on $flatten\u_reg.\u_blink_param_3_y_3.$verific$q_reg$prim_subreg.sv:72$9448 ($aldff) from module pwm.
Changing const-value async load to async reset on $flatten\u_reg.\u_blink_param_3_x_3.$verific$qe_reg$prim_subreg.sv:67$9444 ($aldff) from module pwm.
Changing const-value async load to async reset on $flatten\u_reg.\u_blink_param_3_x_3.$verific$q_reg$prim_subreg.sv:72$9448 ($aldff) from module pwm.
Changing const-value async load to async reset on $flatten\u_reg.\u_blink_param_3_cdc.\u_prim_sync.\req_sync.\gen_generic.u_impl_generic.\u_sync_2.$verific$q_o_reg[0]$prim_generic_flop.sv:23$1616 ($aldff) from module pwm.
Changing const-value async load to async reset on $flatten\u_reg.\u_blink_param_3_cdc.\u_prim_sync.\req_sync.\gen_generic.u_impl_generic.\u_sync_1.$verific$q_o_reg[0]$prim_generic_flop.sv:23$1616 ($aldff) from module pwm.
Changing const-value async load to async reset on $flatten\u_reg.\u_blink_param_3_cdc.\u_prim_sync.\ack_sync.\gen_generic.u_impl_generic.\u_sync_2.$verific$q_o_reg[0]$prim_generic_flop.sv:23$1616 ($aldff) from module pwm.
Changing const-value async load to async reset on $flatten\u_reg.\u_blink_param_3_cdc.\u_prim_sync.\ack_sync.\gen_generic.u_impl_generic.\u_sync_1.$verific$q_o_reg[0]$prim_generic_flop.sv:23$1616 ($aldff) from module pwm.
Changing const-value async load to async reset on $flatten\u_reg.\u_blink_param_3_cdc.\u_prim_sync.$verific$src_req_q_reg$prim_sync_reqack.sv:139$9573 ($aldff) from module pwm.
Changing const-value async load to async reset on $flatten\u_reg.\u_blink_param_3_cdc.\u_prim_sync.$verific$src_fsm_cs_reg$prim_sync_reqack.sv:139$9572 ($aldff) from module pwm.
Changing const-value async load to async reset on $flatten\u_reg.\u_blink_param_3_cdc.\u_prim_sync.$verific$dst_fsm_cs_reg$prim_sync_reqack.sv:148$9577 ($aldff) from module pwm.
Changing const-value async load to async reset on $flatten\u_reg.\u_blink_param_3_cdc.\u_prim_sync.$verific$dst_ack_q_reg$prim_sync_reqack.sv:148$9578 ($aldff) from module pwm.
Changing const-value async load to async reset on $flatten\u_reg.\u_blink_param_3_cdc.$verific$txn_bits_q_reg$prim_reg_cdc.sv:98$9089 ($aldff) from module pwm.
Changing const-value async load to async reset on $flatten\u_reg.\u_blink_param_3_cdc.$verific$src_q_reg$prim_reg_cdc.sv:98$9088 ($aldff) from module pwm.
Changing const-value async load to async reset on $flatten\u_reg.\u_blink_param_3_cdc.$verific$src_busy_q_reg$prim_reg_cdc.sv:55$9070 ($aldff) from module pwm.
Changing const-value async load to async reset on $flatten\u_reg.\u_blink_param_2_y_2.$verific$q_reg$prim_subreg.sv:72$9448 ($aldff) from module pwm.
Changing const-value async load to async reset on $flatten\u_reg.\u_blink_param_2_x_2.$verific$qe_reg$prim_subreg.sv:67$9444 ($aldff) from module pwm.
Changing const-value async load to async reset on $flatten\u_reg.\u_blink_param_2_x_2.$verific$q_reg$prim_subreg.sv:72$9448 ($aldff) from module pwm.
Changing const-value async load to async reset on $flatten\u_reg.\u_blink_param_2_cdc.\u_prim_sync.\req_sync.\gen_generic.u_impl_generic.\u_sync_2.$verific$q_o_reg[0]$prim_generic_flop.sv:23$1616 ($aldff) from module pwm.
Changing const-value async load to async reset on $flatten\u_reg.\u_blink_param_2_cdc.\u_prim_sync.\req_sync.\gen_generic.u_impl_generic.\u_sync_1.$verific$q_o_reg[0]$prim_generic_flop.sv:23$1616 ($aldff) from module pwm.
Changing const-value async load to async reset on $flatten\u_reg.\u_blink_param_2_cdc.\u_prim_sync.\ack_sync.\gen_generic.u_impl_generic.\u_sync_2.$verific$q_o_reg[0]$prim_generic_flop.sv:23$1616 ($aldff) from module pwm.
Changing const-value async load to async reset on $flatten\u_reg.\u_blink_param_2_cdc.\u_prim_sync.\ack_sync.\gen_generic.u_impl_generic.\u_sync_1.$verific$q_o_reg[0]$prim_generic_flop.sv:23$1616 ($aldff) from module pwm.
Changing const-value async load to async reset on $flatten\u_reg.\u_blink_param_2_cdc.\u_prim_sync.$verific$src_req_q_reg$prim_sync_reqack.sv:139$9573 ($aldff) from module pwm.
Changing const-value async load to async reset on $flatten\u_reg.\u_blink_param_2_cdc.\u_prim_sync.$verific$src_fsm_cs_reg$prim_sync_reqack.sv:139$9572 ($aldff) from module pwm.
Changing const-value async load to async reset on $flatten\u_reg.\u_blink_param_2_cdc.\u_prim_sync.$verific$dst_fsm_cs_reg$prim_sync_reqack.sv:148$9577 ($aldff) from module pwm.
Changing const-value async load to async reset on $flatten\u_reg.\u_blink_param_2_cdc.\u_prim_sync.$verific$dst_ack_q_reg$prim_sync_reqack.sv:148$9578 ($aldff) from module pwm.
Changing const-value async load to async reset on $flatten\u_reg.\u_blink_param_2_cdc.$verific$txn_bits_q_reg$prim_reg_cdc.sv:98$9089 ($aldff) from module pwm.
Changing const-value async load to async reset on $flatten\u_reg.\u_blink_param_2_cdc.$verific$src_q_reg$prim_reg_cdc.sv:98$9088 ($aldff) from module pwm.
Changing const-value async load to async reset on $flatten\u_reg.\u_blink_param_2_cdc.$verific$src_busy_q_reg$prim_reg_cdc.sv:55$9070 ($aldff) from module pwm.
Changing const-value async load to async reset on $flatten\gen_alert_tx[0].u_prim_alert_sender.\i_decode_ack.\gen_async.i_sync_p.\gen_generic.u_impl_generic.\u_sync_2.$verific$q_o_reg[0]$prim_generic_flop.sv:23$1616 ($aldff) from module pwm.
Changing const-value async load to async reset on $flatten\u_reg.\u_blink_param_1_y_1.$verific$q_reg$prim_subreg.sv:72$9448 ($aldff) from module pwm.
Changing const-value async load to async reset on $flatten\u_reg.\u_blink_param_1_x_1.$verific$qe_reg$prim_subreg.sv:67$9444 ($aldff) from module pwm.
Changing const-value async load to async reset on $flatten\u_reg.\u_blink_param_1_x_1.$verific$q_reg$prim_subreg.sv:72$9448 ($aldff) from module pwm.
Changing const-value async load to async reset on $flatten\u_reg.\u_blink_param_1_cdc.\u_prim_sync.\req_sync.\gen_generic.u_impl_generic.\u_sync_2.$verific$q_o_reg[0]$prim_generic_flop.sv:23$1616 ($aldff) from module pwm.
Changing const-value async load to async reset on $flatten\u_reg.\u_blink_param_1_cdc.\u_prim_sync.\req_sync.\gen_generic.u_impl_generic.\u_sync_1.$verific$q_o_reg[0]$prim_generic_flop.sv:23$1616 ($aldff) from module pwm.
Changing const-value async load to async reset on $flatten\u_reg.\u_blink_param_1_cdc.\u_prim_sync.\ack_sync.\gen_generic.u_impl_generic.\u_sync_2.$verific$q_o_reg[0]$prim_generic_flop.sv:23$1616 ($aldff) from module pwm.
Changing const-value async load to async reset on $flatten\u_reg.\u_blink_param_1_cdc.\u_prim_sync.\ack_sync.\gen_generic.u_impl_generic.\u_sync_1.$verific$q_o_reg[0]$prim_generic_flop.sv:23$1616 ($aldff) from module pwm.
Changing const-value async load to async reset on $flatten\u_reg.\u_blink_param_1_cdc.\u_prim_sync.$verific$src_req_q_reg$prim_sync_reqack.sv:139$9573 ($aldff) from module pwm.
Changing const-value async load to async reset on $flatten\u_reg.\u_blink_param_1_cdc.\u_prim_sync.$verific$src_fsm_cs_reg$prim_sync_reqack.sv:139$9572 ($aldff) from module pwm.
Changing const-value async load to async reset on $flatten\u_reg.\u_blink_param_1_cdc.\u_prim_sync.$verific$dst_fsm_cs_reg$prim_sync_reqack.sv:148$9577 ($aldff) from module pwm.
Changing const-value async load to async reset on $flatten\u_reg.\u_blink_param_1_cdc.\u_prim_sync.$verific$dst_ack_q_reg$prim_sync_reqack.sv:148$9578 ($aldff) from module pwm.
Changing const-value async load to async reset on $flatten\u_reg.\u_blink_param_1_cdc.$verific$txn_bits_q_reg$prim_reg_cdc.sv:98$9089 ($aldff) from module pwm.
Changing const-value async load to async reset on $flatten\u_reg.\u_blink_param_1_cdc.$verific$src_q_reg$prim_reg_cdc.sv:98$9088 ($aldff) from module pwm.
Changing const-value async load to async reset on $flatten\u_reg.\u_blink_param_1_cdc.$verific$src_busy_q_reg$prim_reg_cdc.sv:55$9070 ($aldff) from module pwm.
Changing const-value async load to async reset on $flatten\gen_alert_tx[0].u_prim_alert_sender.\i_decode_ack.\gen_async.i_sync_p.\gen_generic.u_impl_generic.\u_sync_1.$verific$q_o_reg[0]$prim_generic_flop.sv:23$1616 ($aldff) from module pwm.
Changing const-value async load to async reset on $flatten\u_reg.\u_blink_param_0_y_0.$verific$q_reg$prim_subreg.sv:72$9448 ($aldff) from module pwm.
Changing const-value async load to async reset on $flatten\u_reg.\u_blink_param_0_x_0.$verific$qe_reg$prim_subreg.sv:67$9444 ($aldff) from module pwm.
Changing const-value async load to async reset on $flatten\u_reg.\u_blink_param_0_x_0.$verific$q_reg$prim_subreg.sv:72$9448 ($aldff) from module pwm.
Changing const-value async load to async reset on $flatten\u_reg.\u_blink_param_0_cdc.\u_prim_sync.\req_sync.\gen_generic.u_impl_generic.\u_sync_2.$verific$q_o_reg[0]$prim_generic_flop.sv:23$1616 ($aldff) from module pwm.
Changing const-value async load to async reset on $flatten\u_reg.\u_blink_param_0_cdc.\u_prim_sync.\req_sync.\gen_generic.u_impl_generic.\u_sync_1.$verific$q_o_reg[0]$prim_generic_flop.sv:23$1616 ($aldff) from module pwm.
Changing const-value async load to async reset on $flatten\u_reg.\u_blink_param_0_cdc.\u_prim_sync.\ack_sync.\gen_generic.u_impl_generic.\u_sync_2.$verific$q_o_reg[0]$prim_generic_flop.sv:23$1616 ($aldff) from module pwm.
Changing const-value async load to async reset on $flatten\u_reg.\u_blink_param_0_cdc.\u_prim_sync.\ack_sync.\gen_generic.u_impl_generic.\u_sync_1.$verific$q_o_reg[0]$prim_generic_flop.sv:23$1616 ($aldff) from module pwm.
Changing const-value async load to async reset on $flatten\u_reg.\u_blink_param_0_cdc.\u_prim_sync.$verific$src_req_q_reg$prim_sync_reqack.sv:139$9573 ($aldff) from module pwm.
Changing const-value async load to async reset on $flatten\u_reg.\u_blink_param_0_cdc.\u_prim_sync.$verific$src_fsm_cs_reg$prim_sync_reqack.sv:139$9572 ($aldff) from module pwm.
Changing const-value async load to async reset on $flatten\u_reg.\u_blink_param_0_cdc.\u_prim_sync.$verific$dst_fsm_cs_reg$prim_sync_reqack.sv:148$9577 ($aldff) from module pwm.
Changing const-value async load to async reset on $flatten\u_reg.\u_blink_param_0_cdc.\u_prim_sync.$verific$dst_ack_q_reg$prim_sync_reqack.sv:148$9578 ($aldff) from module pwm.
Changing const-value async load to async reset on $flatten\u_reg.\u_blink_param_0_cdc.$verific$txn_bits_q_reg$prim_reg_cdc.sv:98$9089 ($aldff) from module pwm.
Changing const-value async load to async reset on $flatten\u_reg.\u_blink_param_0_cdc.$verific$src_q_reg$prim_reg_cdc.sv:98$9088 ($aldff) from module pwm.
Changing const-value async load to async reset on $flatten\u_reg.\u_blink_param_0_cdc.$verific$src_busy_q_reg$prim_reg_cdc.sv:55$9070 ($aldff) from module pwm.
Changing const-value async load to async reset on $flatten\u_reg.$verific$intg_err_q_reg$pwm_reg_top.sv:62$3081 ($aldff) from module pwm.
Changing const-value async load to async reset on $flatten\gen_alert_tx[0].u_prim_alert_sender.\i_decode_ack.\gen_async.i_sync_n.\gen_generic.u_impl_generic.\u_sync_2.$verific$q_o_reg[0]$prim_generic_flop.sv:23$1633 ($aldff) from module pwm.
Changing const-value async load to async reset on $flatten\gen_alert_tx[0].u_prim_alert_sender.\i_decode_ack.\gen_async.i_sync_n.\gen_generic.u_impl_generic.\u_sync_1.$verific$q_o_reg[0]$prim_generic_flop.sv:23$1633 ($aldff) from module pwm.
Changing const-value async load to async reset on $flatten\u_pwm_core.\gen_chan_insts[5].u_chan.$verific$htbt_direction_reg$pwm_chan.sv:106$2541 ($aldff) from module pwm.
Changing const-value async load to async reset on $flatten\u_pwm_core.\gen_chan_insts[5].u_chan.$verific$htbt_ctr_q_reg$pwm_chan.sv:83$2516 ($aldff) from module pwm.
Changing const-value async load to async reset on $flatten\u_pwm_core.\gen_chan_insts[5].u_chan.$verific$dc_htbt_q_reg$pwm_chan.sv:127$2564 ($aldff) from module pwm.
Changing const-value async load to async reset on $flatten\u_pwm_core.\gen_chan_insts[5].u_chan.$verific$blink_ctr_q_reg$pwm_chan.sv:56$2498 ($aldff) from module pwm.
Changing const-value async load to async reset on $flatten\gen_alert_tx[0].u_prim_alert_sender.\i_decode_ack.$verific$level_q_reg$prim_diff_decode.sv:172$1589 ($aldff) from module pwm.
Changing const-value async load to async reset on $flatten\u_pwm_core.\gen_chan_insts[4].u_chan.$verific$htbt_direction_reg$pwm_chan.sv:106$2541 ($aldff) from module pwm.
Changing const-value async load to async reset on $flatten\u_pwm_core.\gen_chan_insts[4].u_chan.$verific$htbt_ctr_q_reg$pwm_chan.sv:83$2516 ($aldff) from module pwm.
Changing const-value async load to async reset on $flatten\u_pwm_core.\gen_chan_insts[4].u_chan.$verific$dc_htbt_q_reg$pwm_chan.sv:127$2564 ($aldff) from module pwm.
Changing const-value async load to async reset on $flatten\u_pwm_core.\gen_chan_insts[4].u_chan.$verific$blink_ctr_q_reg$pwm_chan.sv:56$2498 ($aldff) from module pwm.
Changing const-value async load to async reset on $flatten\u_pwm_core.\gen_chan_insts[3].u_chan.$verific$htbt_direction_reg$pwm_chan.sv:106$2541 ($aldff) from module pwm.
Changing const-value async load to async reset on $flatten\u_pwm_core.\gen_chan_insts[3].u_chan.$verific$htbt_ctr_q_reg$pwm_chan.sv:83$2516 ($aldff) from module pwm.
Changing const-value async load to async reset on $flatten\u_pwm_core.\gen_chan_insts[3].u_chan.$verific$dc_htbt_q_reg$pwm_chan.sv:127$2564 ($aldff) from module pwm.
Changing const-value async load to async reset on $flatten\u_pwm_core.\gen_chan_insts[3].u_chan.$verific$blink_ctr_q_reg$pwm_chan.sv:56$2498 ($aldff) from module pwm.
Changing const-value async load to async reset on $flatten\u_pwm_core.\gen_chan_insts[2].u_chan.$verific$htbt_direction_reg$pwm_chan.sv:106$2541 ($aldff) from module pwm.
Changing const-value async load to async reset on $flatten\u_pwm_core.\gen_chan_insts[2].u_chan.$verific$htbt_ctr_q_reg$pwm_chan.sv:83$2516 ($aldff) from module pwm.
Changing const-value async load to async reset on $flatten\u_pwm_core.\gen_chan_insts[2].u_chan.$verific$dc_htbt_q_reg$pwm_chan.sv:127$2564 ($aldff) from module pwm.
Changing const-value async load to async reset on $flatten\u_pwm_core.\gen_chan_insts[2].u_chan.$verific$blink_ctr_q_reg$pwm_chan.sv:56$2498 ($aldff) from module pwm.
Changing const-value async load to async reset on $flatten\gen_alert_tx[0].u_prim_alert_sender.\i_decode_ack.$verific$gen_async.state_q_reg$prim_diff_decode.sv:172$1586 ($aldff) from module pwm.
Changing const-value async load to async reset on $flatten\gen_alert_tx[0].u_prim_alert_sender.\i_decode_ack.$verific$gen_async.diff_pq_reg$prim_diff_decode.sv:172$1587 ($aldff) from module pwm.
Changing const-value async load to async reset on $flatten\u_pwm_core.\gen_chan_insts[1].u_chan.$verific$htbt_direction_reg$pwm_chan.sv:106$2541 ($aldff) from module pwm.
Changing const-value async load to async reset on $flatten\u_pwm_core.\gen_chan_insts[1].u_chan.$verific$htbt_ctr_q_reg$pwm_chan.sv:83$2516 ($aldff) from module pwm.
Changing const-value async load to async reset on $flatten\u_pwm_core.\gen_chan_insts[1].u_chan.$verific$dc_htbt_q_reg$pwm_chan.sv:127$2564 ($aldff) from module pwm.
Changing const-value async load to async reset on $flatten\u_pwm_core.\gen_chan_insts[1].u_chan.$verific$blink_ctr_q_reg$pwm_chan.sv:56$2498 ($aldff) from module pwm.
Changing const-value async load to async reset on $flatten\gen_alert_tx[0].u_prim_alert_sender.\i_decode_ack.$verific$gen_async.diff_nq_reg$prim_diff_decode.sv:172$1588 ($aldff) from module pwm.
Changing const-value async load to async reset on $flatten\u_pwm_core.\gen_chan_insts[0].u_chan.$verific$htbt_direction_reg$pwm_chan.sv:106$2541 ($aldff) from module pwm.
Changing const-value async load to async reset on $flatten\u_pwm_core.\gen_chan_insts[0].u_chan.$verific$htbt_ctr_q_reg$pwm_chan.sv:83$2516 ($aldff) from module pwm.
Changing const-value async load to async reset on $flatten\u_pwm_core.\gen_chan_insts[0].u_chan.$verific$dc_htbt_q_reg$pwm_chan.sv:127$2564 ($aldff) from module pwm.
Changing const-value async load to async reset on $flatten\u_pwm_core.\gen_chan_insts[0].u_chan.$verific$blink_ctr_q_reg$pwm_chan.sv:56$2498 ($aldff) from module pwm.
Changing const-value async load to async reset on $flatten\u_pwm_core.$verific$phase_ctr_q_reg$pwm_core.sv:96$1710 ($aldff) from module pwm.

yosys> opt_clean

3.23. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \pwm..
Removed 0 unused cells and 76 unused wires.
<suppressed ~1 debug messages>

yosys> opt_expr

3.24. Executing OPT_EXPR pass (perform const folding).
Optimizing module pwm.
<suppressed ~3 debug messages>

yosys> opt_muxtree

3.25. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \pwm..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Removed 0 multiplexer ports.
<suppressed ~287 debug messages>

yosys> opt_reduce

3.26. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \pwm.
Performed a total of 0 changes.

yosys> opt_merge

3.27. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\pwm'.
Removed a total of 0 cells.

yosys> opt_share

3.28. Executing OPT_SHARE pass.

yosys> opt_dff -nosdff -nodffe

3.29. Executing OPT_DFF pass (perform DFF optimizations).
Handling D = Q on $flatten\u_reg.\u_regwen.$verific$q_reg[0]$prim_subreg.sv:72$9429 ($adff) from module pwm (removing D path).
Handling D = Q on $flatten\u_reg.\u_pwm_param_5_phase_delay_5.$verific$q_reg$prim_subreg.sv:72$9448 ($adff) from module pwm (removing D path).
Handling D = Q on $flatten\u_reg.\u_pwm_param_5_htbt_en_5.$verific$q_reg[0]$prim_subreg.sv:72$9408 ($adff) from module pwm (removing D path).
Handling D = Q on $flatten\u_reg.\u_pwm_param_5_blink_en_5.$verific$q_reg[0]$prim_subreg.sv:72$9408 ($adff) from module pwm (removing D path).
Handling D = Q on $flatten\u_reg.\u_pwm_param_4_phase_delay_4.$verific$q_reg$prim_subreg.sv:72$9448 ($adff) from module pwm (removing D path).
Handling D = Q on $flatten\u_reg.\u_pwm_param_4_htbt_en_4.$verific$q_reg[0]$prim_subreg.sv:72$9408 ($adff) from module pwm (removing D path).
Handling D = Q on $flatten\u_reg.\u_pwm_param_4_blink_en_4.$verific$q_reg[0]$prim_subreg.sv:72$9408 ($adff) from module pwm (removing D path).
Handling D = Q on $flatten\u_reg.\u_pwm_param_3_phase_delay_3.$verific$q_reg$prim_subreg.sv:72$9448 ($adff) from module pwm (removing D path).
Handling D = Q on $flatten\u_reg.\u_pwm_param_3_htbt_en_3.$verific$q_reg[0]$prim_subreg.sv:72$9408 ($adff) from module pwm (removing D path).
Handling D = Q on $flatten\u_reg.\u_pwm_param_3_blink_en_3.$verific$q_reg[0]$prim_subreg.sv:72$9408 ($adff) from module pwm (removing D path).
Handling D = Q on $flatten\u_reg.\u_pwm_param_2_phase_delay_2.$verific$q_reg$prim_subreg.sv:72$9448 ($adff) from module pwm (removing D path).
Handling D = Q on $flatten\u_reg.\u_pwm_param_2_htbt_en_2.$verific$q_reg[0]$prim_subreg.sv:72$9408 ($adff) from module pwm (removing D path).
Handling D = Q on $flatten\u_reg.\u_pwm_param_2_blink_en_2.$verific$q_reg[0]$prim_subreg.sv:72$9408 ($adff) from module pwm (removing D path).
Handling D = Q on $flatten\u_reg.\u_pwm_param_1_phase_delay_1.$verific$q_reg$prim_subreg.sv:72$9448 ($adff) from module pwm (removing D path).
Handling D = Q on $flatten\u_reg.\u_pwm_param_1_htbt_en_1.$verific$q_reg[0]$prim_subreg.sv:72$9408 ($adff) from module pwm (removing D path).
Handling D = Q on $flatten\u_reg.\u_pwm_param_1_blink_en_1.$verific$q_reg[0]$prim_subreg.sv:72$9408 ($adff) from module pwm (removing D path).
Handling D = Q on $flatten\u_reg.\u_pwm_param_0_phase_delay_0.$verific$q_reg$prim_subreg.sv:72$9448 ($adff) from module pwm (removing D path).
Handling D = Q on $flatten\u_reg.\u_pwm_param_0_htbt_en_0.$verific$q_reg[0]$prim_subreg.sv:72$9408 ($adff) from module pwm (removing D path).
Handling D = Q on $flatten\u_reg.\u_pwm_param_0_blink_en_0.$verific$q_reg[0]$prim_subreg.sv:72$9408 ($adff) from module pwm (removing D path).
Handling D = Q on $flatten\u_reg.\u_pwm_en_en_5.$verific$q_reg[0]$prim_subreg.sv:72$9408 ($adff) from module pwm (removing D path).
Handling D = Q on $flatten\u_reg.\u_pwm_en_en_4.$verific$q_reg[0]$prim_subreg.sv:72$9408 ($adff) from module pwm (removing D path).
Handling D = Q on $flatten\u_reg.\u_pwm_en_en_3.$verific$q_reg[0]$prim_subreg.sv:72$9408 ($adff) from module pwm (removing D path).
Handling D = Q on $flatten\u_reg.\u_pwm_en_en_2.$verific$q_reg[0]$prim_subreg.sv:72$9408 ($adff) from module pwm (removing D path).
Handling D = Q on $flatten\u_reg.\u_pwm_en_en_1.$verific$q_reg[0]$prim_subreg.sv:72$9408 ($adff) from module pwm (removing D path).
Handling D = Q on $flatten\u_reg.\u_pwm_en_en_0.$verific$q_reg[0]$prim_subreg.sv:72$9408 ($adff) from module pwm (removing D path).
Handling D = Q on $flatten\u_reg.\u_invert_invert_5.$verific$q_reg[0]$prim_subreg.sv:72$9408 ($adff) from module pwm (removing D path).
Handling D = Q on $flatten\u_reg.\u_invert_invert_4.$verific$q_reg[0]$prim_subreg.sv:72$9408 ($adff) from module pwm (removing D path).
Handling D = Q on $flatten\u_reg.\u_invert_invert_3.$verific$q_reg[0]$prim_subreg.sv:72$9408 ($adff) from module pwm (removing D path).
Handling D = Q on $flatten\u_reg.\u_invert_invert_2.$verific$q_reg[0]$prim_subreg.sv:72$9408 ($adff) from module pwm (removing D path).
Handling D = Q on $flatten\u_reg.\u_invert_invert_1.$verific$q_reg[0]$prim_subreg.sv:72$9408 ($adff) from module pwm (removing D path).
Handling D = Q on $flatten\u_reg.\u_invert_invert_0.$verific$q_reg[0]$prim_subreg.sv:72$9408 ($adff) from module pwm (removing D path).
Handling D = Q on $flatten\u_reg.\u_duty_cycle_5_b_5.$verific$q_reg$prim_subreg.sv:72$9469 ($adff) from module pwm (removing D path).
Handling D = Q on $flatten\u_reg.\u_duty_cycle_5_a_5.$verific$q_reg$prim_subreg.sv:72$9469 ($adff) from module pwm (removing D path).
Handling D = Q on $flatten\u_reg.\u_duty_cycle_4_b_4.$verific$q_reg$prim_subreg.sv:72$9469 ($adff) from module pwm (removing D path).
Handling D = Q on $flatten\u_reg.\u_duty_cycle_4_a_4.$verific$q_reg$prim_subreg.sv:72$9469 ($adff) from module pwm (removing D path).
Handling D = Q on $flatten\u_reg.\u_duty_cycle_3_b_3.$verific$q_reg$prim_subreg.sv:72$9469 ($adff) from module pwm (removing D path).
Handling D = Q on $flatten\u_reg.\u_duty_cycle_3_a_3.$verific$q_reg$prim_subreg.sv:72$9469 ($adff) from module pwm (removing D path).
Handling D = Q on $flatten\u_reg.\u_duty_cycle_2_b_2.$verific$q_reg$prim_subreg.sv:72$9469 ($adff) from module pwm (removing D path).
Handling D = Q on $flatten\u_reg.\u_duty_cycle_2_a_2.$verific$q_reg$prim_subreg.sv:72$9469 ($adff) from module pwm (removing D path).
Handling D = Q on $flatten\u_reg.\u_duty_cycle_1_b_1.$verific$q_reg$prim_subreg.sv:72$9469 ($adff) from module pwm (removing D path).
Handling D = Q on $flatten\u_reg.\u_duty_cycle_1_a_1.$verific$q_reg$prim_subreg.sv:72$9469 ($adff) from module pwm (removing D path).
Handling D = Q on $flatten\u_reg.\u_duty_cycle_0_b_0.$verific$q_reg$prim_subreg.sv:72$9469 ($adff) from module pwm (removing D path).
Handling D = Q on $flatten\u_reg.\u_duty_cycle_0_a_0.$verific$q_reg$prim_subreg.sv:72$9469 ($adff) from module pwm (removing D path).
Handling D = Q on $flatten\u_reg.\u_cfg_dc_resn.$verific$q_reg$prim_subreg.sv:72$9511 ($adff) from module pwm (removing D path).
Handling D = Q on $flatten\u_reg.\u_cfg_cntr_en.$verific$q_reg[0]$prim_subreg.sv:72$9408 ($adff) from module pwm (removing D path).
Handling D = Q on $flatten\u_reg.\u_cfg_clk_div.$verific$q_reg$prim_subreg.sv:72$9490 ($adff) from module pwm (removing D path).
Handling D = Q on $flatten\u_reg.\u_blink_param_5_y_5.$verific$q_reg$prim_subreg.sv:72$9448 ($adff) from module pwm (removing D path).
Handling D = Q on $flatten\u_reg.\u_blink_param_5_x_5.$verific$q_reg$prim_subreg.sv:72$9448 ($adff) from module pwm (removing D path).
Handling D = Q on $flatten\u_reg.\u_blink_param_4_y_4.$verific$q_reg$prim_subreg.sv:72$9448 ($adff) from module pwm (removing D path).
Handling D = Q on $flatten\u_reg.\u_blink_param_4_x_4.$verific$q_reg$prim_subreg.sv:72$9448 ($adff) from module pwm (removing D path).
Handling D = Q on $flatten\u_reg.\u_blink_param_3_y_3.$verific$q_reg$prim_subreg.sv:72$9448 ($adff) from module pwm (removing D path).
Handling D = Q on $flatten\u_reg.\u_blink_param_3_x_3.$verific$q_reg$prim_subreg.sv:72$9448 ($adff) from module pwm (removing D path).
Handling D = Q on $flatten\u_reg.\u_blink_param_2_y_2.$verific$q_reg$prim_subreg.sv:72$9448 ($adff) from module pwm (removing D path).
Handling D = Q on $flatten\u_reg.\u_blink_param_2_x_2.$verific$q_reg$prim_subreg.sv:72$9448 ($adff) from module pwm (removing D path).
Handling D = Q on $flatten\u_reg.\u_blink_param_1_y_1.$verific$q_reg$prim_subreg.sv:72$9448 ($adff) from module pwm (removing D path).
Handling D = Q on $flatten\u_reg.\u_blink_param_1_x_1.$verific$q_reg$prim_subreg.sv:72$9448 ($adff) from module pwm (removing D path).
Handling D = Q on $flatten\u_reg.\u_blink_param_0_y_0.$verific$q_reg$prim_subreg.sv:72$9448 ($adff) from module pwm (removing D path).
Handling D = Q on $flatten\u_reg.\u_blink_param_0_x_0.$verific$q_reg$prim_subreg.sv:72$9448 ($adff) from module pwm (removing D path).
Setting constant 0-bit at position 0 on $flatten\u_reg.\u_blink_param_0_x_0.$verific$q_reg$prim_subreg.sv:72$9448 ($dlatch) from module pwm.
Setting constant 0-bit at position 1 on $flatten\u_reg.\u_blink_param_0_x_0.$verific$q_reg$prim_subreg.sv:72$9448 ($dlatch) from module pwm.
Setting constant 0-bit at position 2 on $flatten\u_reg.\u_blink_param_0_x_0.$verific$q_reg$prim_subreg.sv:72$9448 ($dlatch) from module pwm.
Setting constant 0-bit at position 3 on $flatten\u_reg.\u_blink_param_0_x_0.$verific$q_reg$prim_subreg.sv:72$9448 ($dlatch) from module pwm.
Setting constant 0-bit at position 4 on $flatten\u_reg.\u_blink_param_0_x_0.$verific$q_reg$prim_subreg.sv:72$9448 ($dlatch) from module pwm.
Setting constant 0-bit at position 5 on $flatten\u_reg.\u_blink_param_0_x_0.$verific$q_reg$prim_subreg.sv:72$9448 ($dlatch) from module pwm.
Setting constant 0-bit at position 6 on $flatten\u_reg.\u_blink_param_0_x_0.$verific$q_reg$prim_subreg.sv:72$9448 ($dlatch) from module pwm.
Setting constant 0-bit at position 7 on $flatten\u_reg.\u_blink_param_0_x_0.$verific$q_reg$prim_subreg.sv:72$9448 ($dlatch) from module pwm.
Setting constant 0-bit at position 8 on $flatten\u_reg.\u_blink_param_0_x_0.$verific$q_reg$prim_subreg.sv:72$9448 ($dlatch) from module pwm.
Setting constant 0-bit at position 9 on $flatten\u_reg.\u_blink_param_0_x_0.$verific$q_reg$prim_subreg.sv:72$9448 ($dlatch) from module pwm.
Setting constant 0-bit at position 10 on $flatten\u_reg.\u_blink_param_0_x_0.$verific$q_reg$prim_subreg.sv:72$9448 ($dlatch) from module pwm.
Setting constant 0-bit at position 11 on $flatten\u_reg.\u_blink_param_0_x_0.$verific$q_reg$prim_subreg.sv:72$9448 ($dlatch) from module pwm.
Setting constant 0-bit at position 12 on $flatten\u_reg.\u_blink_param_0_x_0.$verific$q_reg$prim_subreg.sv:72$9448 ($dlatch) from module pwm.
Setting constant 0-bit at position 13 on $flatten\u_reg.\u_blink_param_0_x_0.$verific$q_reg$prim_subreg.sv:72$9448 ($dlatch) from module pwm.
Setting constant 0-bit at position 14 on $flatten\u_reg.\u_blink_param_0_x_0.$verific$q_reg$prim_subreg.sv:72$9448 ($dlatch) from module pwm.
Setting constant 0-bit at position 15 on $flatten\u_reg.\u_blink_param_0_x_0.$verific$q_reg$prim_subreg.sv:72$9448 ($dlatch) from module pwm.
Setting constant 0-bit at position 0 on $flatten\u_reg.\u_blink_param_0_y_0.$verific$q_reg$prim_subreg.sv:72$9448 ($dlatch) from module pwm.
Setting constant 0-bit at position 1 on $flatten\u_reg.\u_blink_param_0_y_0.$verific$q_reg$prim_subreg.sv:72$9448 ($dlatch) from module pwm.
Setting constant 0-bit at position 2 on $flatten\u_reg.\u_blink_param_0_y_0.$verific$q_reg$prim_subreg.sv:72$9448 ($dlatch) from module pwm.
Setting constant 0-bit at position 3 on $flatten\u_reg.\u_blink_param_0_y_0.$verific$q_reg$prim_subreg.sv:72$9448 ($dlatch) from module pwm.
Setting constant 0-bit at position 4 on $flatten\u_reg.\u_blink_param_0_y_0.$verific$q_reg$prim_subreg.sv:72$9448 ($dlatch) from module pwm.
Setting constant 0-bit at position 5 on $flatten\u_reg.\u_blink_param_0_y_0.$verific$q_reg$prim_subreg.sv:72$9448 ($dlatch) from module pwm.
Setting constant 0-bit at position 6 on $flatten\u_reg.\u_blink_param_0_y_0.$verific$q_reg$prim_subreg.sv:72$9448 ($dlatch) from module pwm.
Setting constant 0-bit at position 7 on $flatten\u_reg.\u_blink_param_0_y_0.$verific$q_reg$prim_subreg.sv:72$9448 ($dlatch) from module pwm.
Setting constant 0-bit at position 8 on $flatten\u_reg.\u_blink_param_0_y_0.$verific$q_reg$prim_subreg.sv:72$9448 ($dlatch) from module pwm.
Setting constant 0-bit at position 9 on $flatten\u_reg.\u_blink_param_0_y_0.$verific$q_reg$prim_subreg.sv:72$9448 ($dlatch) from module pwm.
Setting constant 0-bit at position 10 on $flatten\u_reg.\u_blink_param_0_y_0.$verific$q_reg$prim_subreg.sv:72$9448 ($dlatch) from module pwm.
Setting constant 0-bit at position 11 on $flatten\u_reg.\u_blink_param_0_y_0.$verific$q_reg$prim_subreg.sv:72$9448 ($dlatch) from module pwm.
Setting constant 0-bit at position 12 on $flatten\u_reg.\u_blink_param_0_y_0.$verific$q_reg$prim_subreg.sv:72$9448 ($dlatch) from module pwm.
Setting constant 0-bit at position 13 on $flatten\u_reg.\u_blink_param_0_y_0.$verific$q_reg$prim_subreg.sv:72$9448 ($dlatch) from module pwm.
Setting constant 0-bit at position 14 on $flatten\u_reg.\u_blink_param_0_y_0.$verific$q_reg$prim_subreg.sv:72$9448 ($dlatch) from module pwm.
Setting constant 0-bit at position 15 on $flatten\u_reg.\u_blink_param_0_y_0.$verific$q_reg$prim_subreg.sv:72$9448 ($dlatch) from module pwm.
Setting constant 0-bit at position 0 on $flatten\u_reg.\u_blink_param_1_x_1.$verific$q_reg$prim_subreg.sv:72$9448 ($dlatch) from module pwm.
Setting constant 0-bit at position 1 on $flatten\u_reg.\u_blink_param_1_x_1.$verific$q_reg$prim_subreg.sv:72$9448 ($dlatch) from module pwm.
Setting constant 0-bit at position 2 on $flatten\u_reg.\u_blink_param_1_x_1.$verific$q_reg$prim_subreg.sv:72$9448 ($dlatch) from module pwm.
Setting constant 0-bit at position 3 on $flatten\u_reg.\u_blink_param_1_x_1.$verific$q_reg$prim_subreg.sv:72$9448 ($dlatch) from module pwm.
Setting constant 0-bit at position 4 on $flatten\u_reg.\u_blink_param_1_x_1.$verific$q_reg$prim_subreg.sv:72$9448 ($dlatch) from module pwm.
Setting constant 0-bit at position 5 on $flatten\u_reg.\u_blink_param_1_x_1.$verific$q_reg$prim_subreg.sv:72$9448 ($dlatch) from module pwm.
Setting constant 0-bit at position 6 on $flatten\u_reg.\u_blink_param_1_x_1.$verific$q_reg$prim_subreg.sv:72$9448 ($dlatch) from module pwm.
Setting constant 0-bit at position 7 on $flatten\u_reg.\u_blink_param_1_x_1.$verific$q_reg$prim_subreg.sv:72$9448 ($dlatch) from module pwm.
Setting constant 0-bit at position 8 on $flatten\u_reg.\u_blink_param_1_x_1.$verific$q_reg$prim_subreg.sv:72$9448 ($dlatch) from module pwm.
Setting constant 0-bit at position 9 on $flatten\u_reg.\u_blink_param_1_x_1.$verific$q_reg$prim_subreg.sv:72$9448 ($dlatch) from module pwm.
Setting constant 0-bit at position 10 on $flatten\u_reg.\u_blink_param_1_x_1.$verific$q_reg$prim_subreg.sv:72$9448 ($dlatch) from module pwm.
Setting constant 0-bit at position 11 on $flatten\u_reg.\u_blink_param_1_x_1.$verific$q_reg$prim_subreg.sv:72$9448 ($dlatch) from module pwm.
Setting constant 0-bit at position 12 on $flatten\u_reg.\u_blink_param_1_x_1.$verific$q_reg$prim_subreg.sv:72$9448 ($dlatch) from module pwm.
Setting constant 0-bit at position 13 on $flatten\u_reg.\u_blink_param_1_x_1.$verific$q_reg$prim_subreg.sv:72$9448 ($dlatch) from module pwm.
Setting constant 0-bit at position 14 on $flatten\u_reg.\u_blink_param_1_x_1.$verific$q_reg$prim_subreg.sv:72$9448 ($dlatch) from module pwm.
Setting constant 0-bit at position 15 on $flatten\u_reg.\u_blink_param_1_x_1.$verific$q_reg$prim_subreg.sv:72$9448 ($dlatch) from module pwm.
Setting constant 0-bit at position 0 on $flatten\u_reg.\u_blink_param_1_y_1.$verific$q_reg$prim_subreg.sv:72$9448 ($dlatch) from module pwm.
Setting constant 0-bit at position 1 on $flatten\u_reg.\u_blink_param_1_y_1.$verific$q_reg$prim_subreg.sv:72$9448 ($dlatch) from module pwm.
Setting constant 0-bit at position 2 on $flatten\u_reg.\u_blink_param_1_y_1.$verific$q_reg$prim_subreg.sv:72$9448 ($dlatch) from module pwm.
Setting constant 0-bit at position 3 on $flatten\u_reg.\u_blink_param_1_y_1.$verific$q_reg$prim_subreg.sv:72$9448 ($dlatch) from module pwm.
Setting constant 0-bit at position 4 on $flatten\u_reg.\u_blink_param_1_y_1.$verific$q_reg$prim_subreg.sv:72$9448 ($dlatch) from module pwm.
Setting constant 0-bit at position 5 on $flatten\u_reg.\u_blink_param_1_y_1.$verific$q_reg$prim_subreg.sv:72$9448 ($dlatch) from module pwm.
Setting constant 0-bit at position 6 on $flatten\u_reg.\u_blink_param_1_y_1.$verific$q_reg$prim_subreg.sv:72$9448 ($dlatch) from module pwm.
Setting constant 0-bit at position 7 on $flatten\u_reg.\u_blink_param_1_y_1.$verific$q_reg$prim_subreg.sv:72$9448 ($dlatch) from module pwm.
Setting constant 0-bit at position 8 on $flatten\u_reg.\u_blink_param_1_y_1.$verific$q_reg$prim_subreg.sv:72$9448 ($dlatch) from module pwm.
Setting constant 0-bit at position 9 on $flatten\u_reg.\u_blink_param_1_y_1.$verific$q_reg$prim_subreg.sv:72$9448 ($dlatch) from module pwm.
Setting constant 0-bit at position 10 on $flatten\u_reg.\u_blink_param_1_y_1.$verific$q_reg$prim_subreg.sv:72$9448 ($dlatch) from module pwm.
Setting constant 0-bit at position 11 on $flatten\u_reg.\u_blink_param_1_y_1.$verific$q_reg$prim_subreg.sv:72$9448 ($dlatch) from module pwm.
Setting constant 0-bit at position 12 on $flatten\u_reg.\u_blink_param_1_y_1.$verific$q_reg$prim_subreg.sv:72$9448 ($dlatch) from module pwm.
Setting constant 0-bit at position 13 on $flatten\u_reg.\u_blink_param_1_y_1.$verific$q_reg$prim_subreg.sv:72$9448 ($dlatch) from module pwm.
Setting constant 0-bit at position 14 on $flatten\u_reg.\u_blink_param_1_y_1.$verific$q_reg$prim_subreg.sv:72$9448 ($dlatch) from module pwm.
Setting constant 0-bit at position 15 on $flatten\u_reg.\u_blink_param_1_y_1.$verific$q_reg$prim_subreg.sv:72$9448 ($dlatch) from module pwm.
Setting constant 0-bit at position 0 on $flatten\u_reg.\u_blink_param_2_x_2.$verific$q_reg$prim_subreg.sv:72$9448 ($dlatch) from module pwm.
Setting constant 0-bit at position 1 on $flatten\u_reg.\u_blink_param_2_x_2.$verific$q_reg$prim_subreg.sv:72$9448 ($dlatch) from module pwm.
Setting constant 0-bit at position 2 on $flatten\u_reg.\u_blink_param_2_x_2.$verific$q_reg$prim_subreg.sv:72$9448 ($dlatch) from module pwm.
Setting constant 0-bit at position 3 on $flatten\u_reg.\u_blink_param_2_x_2.$verific$q_reg$prim_subreg.sv:72$9448 ($dlatch) from module pwm.
Setting constant 0-bit at position 4 on $flatten\u_reg.\u_blink_param_2_x_2.$verific$q_reg$prim_subreg.sv:72$9448 ($dlatch) from module pwm.
Setting constant 0-bit at position 5 on $flatten\u_reg.\u_blink_param_2_x_2.$verific$q_reg$prim_subreg.sv:72$9448 ($dlatch) from module pwm.
Setting constant 0-bit at position 6 on $flatten\u_reg.\u_blink_param_2_x_2.$verific$q_reg$prim_subreg.sv:72$9448 ($dlatch) from module pwm.
Setting constant 0-bit at position 7 on $flatten\u_reg.\u_blink_param_2_x_2.$verific$q_reg$prim_subreg.sv:72$9448 ($dlatch) from module pwm.
Setting constant 0-bit at position 8 on $flatten\u_reg.\u_blink_param_2_x_2.$verific$q_reg$prim_subreg.sv:72$9448 ($dlatch) from module pwm.
Setting constant 0-bit at position 9 on $flatten\u_reg.\u_blink_param_2_x_2.$verific$q_reg$prim_subreg.sv:72$9448 ($dlatch) from module pwm.
Setting constant 0-bit at position 10 on $flatten\u_reg.\u_blink_param_2_x_2.$verific$q_reg$prim_subreg.sv:72$9448 ($dlatch) from module pwm.
Setting constant 0-bit at position 11 on $flatten\u_reg.\u_blink_param_2_x_2.$verific$q_reg$prim_subreg.sv:72$9448 ($dlatch) from module pwm.
Setting constant 0-bit at position 12 on $flatten\u_reg.\u_blink_param_2_x_2.$verific$q_reg$prim_subreg.sv:72$9448 ($dlatch) from module pwm.
Setting constant 0-bit at position 13 on $flatten\u_reg.\u_blink_param_2_x_2.$verific$q_reg$prim_subreg.sv:72$9448 ($dlatch) from module pwm.
Setting constant 0-bit at position 14 on $flatten\u_reg.\u_blink_param_2_x_2.$verific$q_reg$prim_subreg.sv:72$9448 ($dlatch) from module pwm.
Setting constant 0-bit at position 15 on $flatten\u_reg.\u_blink_param_2_x_2.$verific$q_reg$prim_subreg.sv:72$9448 ($dlatch) from module pwm.
Setting constant 0-bit at position 0 on $flatten\u_reg.\u_blink_param_2_y_2.$verific$q_reg$prim_subreg.sv:72$9448 ($dlatch) from module pwm.
Setting constant 0-bit at position 1 on $flatten\u_reg.\u_blink_param_2_y_2.$verific$q_reg$prim_subreg.sv:72$9448 ($dlatch) from module pwm.
Setting constant 0-bit at position 2 on $flatten\u_reg.\u_blink_param_2_y_2.$verific$q_reg$prim_subreg.sv:72$9448 ($dlatch) from module pwm.
Setting constant 0-bit at position 3 on $flatten\u_reg.\u_blink_param_2_y_2.$verific$q_reg$prim_subreg.sv:72$9448 ($dlatch) from module pwm.
Setting constant 0-bit at position 4 on $flatten\u_reg.\u_blink_param_2_y_2.$verific$q_reg$prim_subreg.sv:72$9448 ($dlatch) from module pwm.
Setting constant 0-bit at position 5 on $flatten\u_reg.\u_blink_param_2_y_2.$verific$q_reg$prim_subreg.sv:72$9448 ($dlatch) from module pwm.
Setting constant 0-bit at position 6 on $flatten\u_reg.\u_blink_param_2_y_2.$verific$q_reg$prim_subreg.sv:72$9448 ($dlatch) from module pwm.
Setting constant 0-bit at position 7 on $flatten\u_reg.\u_blink_param_2_y_2.$verific$q_reg$prim_subreg.sv:72$9448 ($dlatch) from module pwm.
Setting constant 0-bit at position 8 on $flatten\u_reg.\u_blink_param_2_y_2.$verific$q_reg$prim_subreg.sv:72$9448 ($dlatch) from module pwm.
Setting constant 0-bit at position 9 on $flatten\u_reg.\u_blink_param_2_y_2.$verific$q_reg$prim_subreg.sv:72$9448 ($dlatch) from module pwm.
Setting constant 0-bit at position 10 on $flatten\u_reg.\u_blink_param_2_y_2.$verific$q_reg$prim_subreg.sv:72$9448 ($dlatch) from module pwm.
Setting constant 0-bit at position 11 on $flatten\u_reg.\u_blink_param_2_y_2.$verific$q_reg$prim_subreg.sv:72$9448 ($dlatch) from module pwm.
Setting constant 0-bit at position 12 on $flatten\u_reg.\u_blink_param_2_y_2.$verific$q_reg$prim_subreg.sv:72$9448 ($dlatch) from module pwm.
Setting constant 0-bit at position 13 on $flatten\u_reg.\u_blink_param_2_y_2.$verific$q_reg$prim_subreg.sv:72$9448 ($dlatch) from module pwm.
Setting constant 0-bit at position 14 on $flatten\u_reg.\u_blink_param_2_y_2.$verific$q_reg$prim_subreg.sv:72$9448 ($dlatch) from module pwm.
Setting constant 0-bit at position 15 on $flatten\u_reg.\u_blink_param_2_y_2.$verific$q_reg$prim_subreg.sv:72$9448 ($dlatch) from module pwm.
Setting constant 0-bit at position 0 on $flatten\u_reg.\u_blink_param_3_x_3.$verific$q_reg$prim_subreg.sv:72$9448 ($dlatch) from module pwm.
Setting constant 0-bit at position 1 on $flatten\u_reg.\u_blink_param_3_x_3.$verific$q_reg$prim_subreg.sv:72$9448 ($dlatch) from module pwm.
Setting constant 0-bit at position 2 on $flatten\u_reg.\u_blink_param_3_x_3.$verific$q_reg$prim_subreg.sv:72$9448 ($dlatch) from module pwm.
Setting constant 0-bit at position 3 on $flatten\u_reg.\u_blink_param_3_x_3.$verific$q_reg$prim_subreg.sv:72$9448 ($dlatch) from module pwm.
Setting constant 0-bit at position 4 on $flatten\u_reg.\u_blink_param_3_x_3.$verific$q_reg$prim_subreg.sv:72$9448 ($dlatch) from module pwm.
Setting constant 0-bit at position 5 on $flatten\u_reg.\u_blink_param_3_x_3.$verific$q_reg$prim_subreg.sv:72$9448 ($dlatch) from module pwm.
Setting constant 0-bit at position 6 on $flatten\u_reg.\u_blink_param_3_x_3.$verific$q_reg$prim_subreg.sv:72$9448 ($dlatch) from module pwm.
Setting constant 0-bit at position 7 on $flatten\u_reg.\u_blink_param_3_x_3.$verific$q_reg$prim_subreg.sv:72$9448 ($dlatch) from module pwm.
Setting constant 0-bit at position 8 on $flatten\u_reg.\u_blink_param_3_x_3.$verific$q_reg$prim_subreg.sv:72$9448 ($dlatch) from module pwm.
Setting constant 0-bit at position 9 on $flatten\u_reg.\u_blink_param_3_x_3.$verific$q_reg$prim_subreg.sv:72$9448 ($dlatch) from module pwm.
Setting constant 0-bit at position 10 on $flatten\u_reg.\u_blink_param_3_x_3.$verific$q_reg$prim_subreg.sv:72$9448 ($dlatch) from module pwm.
Setting constant 0-bit at position 11 on $flatten\u_reg.\u_blink_param_3_x_3.$verific$q_reg$prim_subreg.sv:72$9448 ($dlatch) from module pwm.
Setting constant 0-bit at position 12 on $flatten\u_reg.\u_blink_param_3_x_3.$verific$q_reg$prim_subreg.sv:72$9448 ($dlatch) from module pwm.
Setting constant 0-bit at position 13 on $flatten\u_reg.\u_blink_param_3_x_3.$verific$q_reg$prim_subreg.sv:72$9448 ($dlatch) from module pwm.
Setting constant 0-bit at position 14 on $flatten\u_reg.\u_blink_param_3_x_3.$verific$q_reg$prim_subreg.sv:72$9448 ($dlatch) from module pwm.
Setting constant 0-bit at position 15 on $flatten\u_reg.\u_blink_param_3_x_3.$verific$q_reg$prim_subreg.sv:72$9448 ($dlatch) from module pwm.
Setting constant 0-bit at position 0 on $flatten\u_reg.\u_blink_param_3_y_3.$verific$q_reg$prim_subreg.sv:72$9448 ($dlatch) from module pwm.
Setting constant 0-bit at position 1 on $flatten\u_reg.\u_blink_param_3_y_3.$verific$q_reg$prim_subreg.sv:72$9448 ($dlatch) from module pwm.
Setting constant 0-bit at position 2 on $flatten\u_reg.\u_blink_param_3_y_3.$verific$q_reg$prim_subreg.sv:72$9448 ($dlatch) from module pwm.
Setting constant 0-bit at position 3 on $flatten\u_reg.\u_blink_param_3_y_3.$verific$q_reg$prim_subreg.sv:72$9448 ($dlatch) from module pwm.
Setting constant 0-bit at position 4 on $flatten\u_reg.\u_blink_param_3_y_3.$verific$q_reg$prim_subreg.sv:72$9448 ($dlatch) from module pwm.
Setting constant 0-bit at position 5 on $flatten\u_reg.\u_blink_param_3_y_3.$verific$q_reg$prim_subreg.sv:72$9448 ($dlatch) from module pwm.
Setting constant 0-bit at position 6 on $flatten\u_reg.\u_blink_param_3_y_3.$verific$q_reg$prim_subreg.sv:72$9448 ($dlatch) from module pwm.
Setting constant 0-bit at position 7 on $flatten\u_reg.\u_blink_param_3_y_3.$verific$q_reg$prim_subreg.sv:72$9448 ($dlatch) from module pwm.
Setting constant 0-bit at position 8 on $flatten\u_reg.\u_blink_param_3_y_3.$verific$q_reg$prim_subreg.sv:72$9448 ($dlatch) from module pwm.
Setting constant 0-bit at position 9 on $flatten\u_reg.\u_blink_param_3_y_3.$verific$q_reg$prim_subreg.sv:72$9448 ($dlatch) from module pwm.
Setting constant 0-bit at position 10 on $flatten\u_reg.\u_blink_param_3_y_3.$verific$q_reg$prim_subreg.sv:72$9448 ($dlatch) from module pwm.
Setting constant 0-bit at position 11 on $flatten\u_reg.\u_blink_param_3_y_3.$verific$q_reg$prim_subreg.sv:72$9448 ($dlatch) from module pwm.
Setting constant 0-bit at position 12 on $flatten\u_reg.\u_blink_param_3_y_3.$verific$q_reg$prim_subreg.sv:72$9448 ($dlatch) from module pwm.
Setting constant 0-bit at position 13 on $flatten\u_reg.\u_blink_param_3_y_3.$verific$q_reg$prim_subreg.sv:72$9448 ($dlatch) from module pwm.
Setting constant 0-bit at position 14 on $flatten\u_reg.\u_blink_param_3_y_3.$verific$q_reg$prim_subreg.sv:72$9448 ($dlatch) from module pwm.
Setting constant 0-bit at position 15 on $flatten\u_reg.\u_blink_param_3_y_3.$verific$q_reg$prim_subreg.sv:72$9448 ($dlatch) from module pwm.
Setting constant 0-bit at position 0 on $flatten\u_reg.\u_blink_param_4_x_4.$verific$q_reg$prim_subreg.sv:72$9448 ($dlatch) from module pwm.
Setting constant 0-bit at position 1 on $flatten\u_reg.\u_blink_param_4_x_4.$verific$q_reg$prim_subreg.sv:72$9448 ($dlatch) from module pwm.
Setting constant 0-bit at position 2 on $flatten\u_reg.\u_blink_param_4_x_4.$verific$q_reg$prim_subreg.sv:72$9448 ($dlatch) from module pwm.
Setting constant 0-bit at position 3 on $flatten\u_reg.\u_blink_param_4_x_4.$verific$q_reg$prim_subreg.sv:72$9448 ($dlatch) from module pwm.
Setting constant 0-bit at position 4 on $flatten\u_reg.\u_blink_param_4_x_4.$verific$q_reg$prim_subreg.sv:72$9448 ($dlatch) from module pwm.
Setting constant 0-bit at position 5 on $flatten\u_reg.\u_blink_param_4_x_4.$verific$q_reg$prim_subreg.sv:72$9448 ($dlatch) from module pwm.
Setting constant 0-bit at position 6 on $flatten\u_reg.\u_blink_param_4_x_4.$verific$q_reg$prim_subreg.sv:72$9448 ($dlatch) from module pwm.
Setting constant 0-bit at position 7 on $flatten\u_reg.\u_blink_param_4_x_4.$verific$q_reg$prim_subreg.sv:72$9448 ($dlatch) from module pwm.
Setting constant 0-bit at position 8 on $flatten\u_reg.\u_blink_param_4_x_4.$verific$q_reg$prim_subreg.sv:72$9448 ($dlatch) from module pwm.
Setting constant 0-bit at position 9 on $flatten\u_reg.\u_blink_param_4_x_4.$verific$q_reg$prim_subreg.sv:72$9448 ($dlatch) from module pwm.
Setting constant 0-bit at position 10 on $flatten\u_reg.\u_blink_param_4_x_4.$verific$q_reg$prim_subreg.sv:72$9448 ($dlatch) from module pwm.
Setting constant 0-bit at position 11 on $flatten\u_reg.\u_blink_param_4_x_4.$verific$q_reg$prim_subreg.sv:72$9448 ($dlatch) from module pwm.
Setting constant 0-bit at position 12 on $flatten\u_reg.\u_blink_param_4_x_4.$verific$q_reg$prim_subreg.sv:72$9448 ($dlatch) from module pwm.
Setting constant 0-bit at position 13 on $flatten\u_reg.\u_blink_param_4_x_4.$verific$q_reg$prim_subreg.sv:72$9448 ($dlatch) from module pwm.
Setting constant 0-bit at position 14 on $flatten\u_reg.\u_blink_param_4_x_4.$verific$q_reg$prim_subreg.sv:72$9448 ($dlatch) from module pwm.
Setting constant 0-bit at position 15 on $flatten\u_reg.\u_blink_param_4_x_4.$verific$q_reg$prim_subreg.sv:72$9448 ($dlatch) from module pwm.
Setting constant 0-bit at position 0 on $flatten\u_reg.\u_blink_param_4_y_4.$verific$q_reg$prim_subreg.sv:72$9448 ($dlatch) from module pwm.
Setting constant 0-bit at position 1 on $flatten\u_reg.\u_blink_param_4_y_4.$verific$q_reg$prim_subreg.sv:72$9448 ($dlatch) from module pwm.
Setting constant 0-bit at position 2 on $flatten\u_reg.\u_blink_param_4_y_4.$verific$q_reg$prim_subreg.sv:72$9448 ($dlatch) from module pwm.
Setting constant 0-bit at position 3 on $flatten\u_reg.\u_blink_param_4_y_4.$verific$q_reg$prim_subreg.sv:72$9448 ($dlatch) from module pwm.
Setting constant 0-bit at position 4 on $flatten\u_reg.\u_blink_param_4_y_4.$verific$q_reg$prim_subreg.sv:72$9448 ($dlatch) from module pwm.
Setting constant 0-bit at position 5 on $flatten\u_reg.\u_blink_param_4_y_4.$verific$q_reg$prim_subreg.sv:72$9448 ($dlatch) from module pwm.
Setting constant 0-bit at position 6 on $flatten\u_reg.\u_blink_param_4_y_4.$verific$q_reg$prim_subreg.sv:72$9448 ($dlatch) from module pwm.
Setting constant 0-bit at position 7 on $flatten\u_reg.\u_blink_param_4_y_4.$verific$q_reg$prim_subreg.sv:72$9448 ($dlatch) from module pwm.
Setting constant 0-bit at position 8 on $flatten\u_reg.\u_blink_param_4_y_4.$verific$q_reg$prim_subreg.sv:72$9448 ($dlatch) from module pwm.
Setting constant 0-bit at position 9 on $flatten\u_reg.\u_blink_param_4_y_4.$verific$q_reg$prim_subreg.sv:72$9448 ($dlatch) from module pwm.
Setting constant 0-bit at position 10 on $flatten\u_reg.\u_blink_param_4_y_4.$verific$q_reg$prim_subreg.sv:72$9448 ($dlatch) from module pwm.
Setting constant 0-bit at position 11 on $flatten\u_reg.\u_blink_param_4_y_4.$verific$q_reg$prim_subreg.sv:72$9448 ($dlatch) from module pwm.
Setting constant 0-bit at position 12 on $flatten\u_reg.\u_blink_param_4_y_4.$verific$q_reg$prim_subreg.sv:72$9448 ($dlatch) from module pwm.
Setting constant 0-bit at position 13 on $flatten\u_reg.\u_blink_param_4_y_4.$verific$q_reg$prim_subreg.sv:72$9448 ($dlatch) from module pwm.
Setting constant 0-bit at position 14 on $flatten\u_reg.\u_blink_param_4_y_4.$verific$q_reg$prim_subreg.sv:72$9448 ($dlatch) from module pwm.
Setting constant 0-bit at position 15 on $flatten\u_reg.\u_blink_param_4_y_4.$verific$q_reg$prim_subreg.sv:72$9448 ($dlatch) from module pwm.
Setting constant 0-bit at position 0 on $flatten\u_reg.\u_blink_param_5_x_5.$verific$q_reg$prim_subreg.sv:72$9448 ($dlatch) from module pwm.
Setting constant 0-bit at position 1 on $flatten\u_reg.\u_blink_param_5_x_5.$verific$q_reg$prim_subreg.sv:72$9448 ($dlatch) from module pwm.
Setting constant 0-bit at position 2 on $flatten\u_reg.\u_blink_param_5_x_5.$verific$q_reg$prim_subreg.sv:72$9448 ($dlatch) from module pwm.
Setting constant 0-bit at position 3 on $flatten\u_reg.\u_blink_param_5_x_5.$verific$q_reg$prim_subreg.sv:72$9448 ($dlatch) from module pwm.
Setting constant 0-bit at position 4 on $flatten\u_reg.\u_blink_param_5_x_5.$verific$q_reg$prim_subreg.sv:72$9448 ($dlatch) from module pwm.
Setting constant 0-bit at position 5 on $flatten\u_reg.\u_blink_param_5_x_5.$verific$q_reg$prim_subreg.sv:72$9448 ($dlatch) from module pwm.
Setting constant 0-bit at position 6 on $flatten\u_reg.\u_blink_param_5_x_5.$verific$q_reg$prim_subreg.sv:72$9448 ($dlatch) from module pwm.
Setting constant 0-bit at position 7 on $flatten\u_reg.\u_blink_param_5_x_5.$verific$q_reg$prim_subreg.sv:72$9448 ($dlatch) from module pwm.
Setting constant 0-bit at position 8 on $flatten\u_reg.\u_blink_param_5_x_5.$verific$q_reg$prim_subreg.sv:72$9448 ($dlatch) from module pwm.
Setting constant 0-bit at position 9 on $flatten\u_reg.\u_blink_param_5_x_5.$verific$q_reg$prim_subreg.sv:72$9448 ($dlatch) from module pwm.
Setting constant 0-bit at position 10 on $flatten\u_reg.\u_blink_param_5_x_5.$verific$q_reg$prim_subreg.sv:72$9448 ($dlatch) from module pwm.
Setting constant 0-bit at position 11 on $flatten\u_reg.\u_blink_param_5_x_5.$verific$q_reg$prim_subreg.sv:72$9448 ($dlatch) from module pwm.
Setting constant 0-bit at position 12 on $flatten\u_reg.\u_blink_param_5_x_5.$verific$q_reg$prim_subreg.sv:72$9448 ($dlatch) from module pwm.
Setting constant 0-bit at position 13 on $flatten\u_reg.\u_blink_param_5_x_5.$verific$q_reg$prim_subreg.sv:72$9448 ($dlatch) from module pwm.
Setting constant 0-bit at position 14 on $flatten\u_reg.\u_blink_param_5_x_5.$verific$q_reg$prim_subreg.sv:72$9448 ($dlatch) from module pwm.
Setting constant 0-bit at position 15 on $flatten\u_reg.\u_blink_param_5_x_5.$verific$q_reg$prim_subreg.sv:72$9448 ($dlatch) from module pwm.
Setting constant 0-bit at position 0 on $flatten\u_reg.\u_blink_param_5_y_5.$verific$q_reg$prim_subreg.sv:72$9448 ($dlatch) from module pwm.
Setting constant 0-bit at position 1 on $flatten\u_reg.\u_blink_param_5_y_5.$verific$q_reg$prim_subreg.sv:72$9448 ($dlatch) from module pwm.
Setting constant 0-bit at position 2 on $flatten\u_reg.\u_blink_param_5_y_5.$verific$q_reg$prim_subreg.sv:72$9448 ($dlatch) from module pwm.
Setting constant 0-bit at position 3 on $flatten\u_reg.\u_blink_param_5_y_5.$verific$q_reg$prim_subreg.sv:72$9448 ($dlatch) from module pwm.
Setting constant 0-bit at position 4 on $flatten\u_reg.\u_blink_param_5_y_5.$verific$q_reg$prim_subreg.sv:72$9448 ($dlatch) from module pwm.
Setting constant 0-bit at position 5 on $flatten\u_reg.\u_blink_param_5_y_5.$verific$q_reg$prim_subreg.sv:72$9448 ($dlatch) from module pwm.
Setting constant 0-bit at position 6 on $flatten\u_reg.\u_blink_param_5_y_5.$verific$q_reg$prim_subreg.sv:72$9448 ($dlatch) from module pwm.
Setting constant 0-bit at position 7 on $flatten\u_reg.\u_blink_param_5_y_5.$verific$q_reg$prim_subreg.sv:72$9448 ($dlatch) from module pwm.
Setting constant 0-bit at position 8 on $flatten\u_reg.\u_blink_param_5_y_5.$verific$q_reg$prim_subreg.sv:72$9448 ($dlatch) from module pwm.
Setting constant 0-bit at position 9 on $flatten\u_reg.\u_blink_param_5_y_5.$verific$q_reg$prim_subreg.sv:72$9448 ($dlatch) from module pwm.
Setting constant 0-bit at position 10 on $flatten\u_reg.\u_blink_param_5_y_5.$verific$q_reg$prim_subreg.sv:72$9448 ($dlatch) from module pwm.
Setting constant 0-bit at position 11 on $flatten\u_reg.\u_blink_param_5_y_5.$verific$q_reg$prim_subreg.sv:72$9448 ($dlatch) from module pwm.
Setting constant 0-bit at position 12 on $flatten\u_reg.\u_blink_param_5_y_5.$verific$q_reg$prim_subreg.sv:72$9448 ($dlatch) from module pwm.
Setting constant 0-bit at position 13 on $flatten\u_reg.\u_blink_param_5_y_5.$verific$q_reg$prim_subreg.sv:72$9448 ($dlatch) from module pwm.
Setting constant 0-bit at position 14 on $flatten\u_reg.\u_blink_param_5_y_5.$verific$q_reg$prim_subreg.sv:72$9448 ($dlatch) from module pwm.
Setting constant 0-bit at position 15 on $flatten\u_reg.\u_blink_param_5_y_5.$verific$q_reg$prim_subreg.sv:72$9448 ($dlatch) from module pwm.
Setting constant 0-bit at position 0 on $flatten\u_reg.\u_cfg_clk_div.$verific$q_reg$prim_subreg.sv:72$9490 ($dlatch) from module pwm.
Setting constant 0-bit at position 1 on $flatten\u_reg.\u_cfg_clk_div.$verific$q_reg$prim_subreg.sv:72$9490 ($dlatch) from module pwm.
Setting constant 0-bit at position 2 on $flatten\u_reg.\u_cfg_clk_div.$verific$q_reg$prim_subreg.sv:72$9490 ($dlatch) from module pwm.
Setting constant 0-bit at position 3 on $flatten\u_reg.\u_cfg_clk_div.$verific$q_reg$prim_subreg.sv:72$9490 ($dlatch) from module pwm.
Setting constant 0-bit at position 4 on $flatten\u_reg.\u_cfg_clk_div.$verific$q_reg$prim_subreg.sv:72$9490 ($dlatch) from module pwm.
Setting constant 0-bit at position 5 on $flatten\u_reg.\u_cfg_clk_div.$verific$q_reg$prim_subreg.sv:72$9490 ($dlatch) from module pwm.
Setting constant 0-bit at position 6 on $flatten\u_reg.\u_cfg_clk_div.$verific$q_reg$prim_subreg.sv:72$9490 ($dlatch) from module pwm.
Setting constant 0-bit at position 7 on $flatten\u_reg.\u_cfg_clk_div.$verific$q_reg$prim_subreg.sv:72$9490 ($dlatch) from module pwm.
Setting constant 0-bit at position 8 on $flatten\u_reg.\u_cfg_clk_div.$verific$q_reg$prim_subreg.sv:72$9490 ($dlatch) from module pwm.
Setting constant 0-bit at position 9 on $flatten\u_reg.\u_cfg_clk_div.$verific$q_reg$prim_subreg.sv:72$9490 ($dlatch) from module pwm.
Setting constant 0-bit at position 10 on $flatten\u_reg.\u_cfg_clk_div.$verific$q_reg$prim_subreg.sv:72$9490 ($dlatch) from module pwm.
Setting constant 0-bit at position 11 on $flatten\u_reg.\u_cfg_clk_div.$verific$q_reg$prim_subreg.sv:72$9490 ($dlatch) from module pwm.
Setting constant 0-bit at position 12 on $flatten\u_reg.\u_cfg_clk_div.$verific$q_reg$prim_subreg.sv:72$9490 ($dlatch) from module pwm.
Setting constant 0-bit at position 13 on $flatten\u_reg.\u_cfg_clk_div.$verific$q_reg$prim_subreg.sv:72$9490 ($dlatch) from module pwm.
Setting constant 0-bit at position 14 on $flatten\u_reg.\u_cfg_clk_div.$verific$q_reg$prim_subreg.sv:72$9490 ($dlatch) from module pwm.
Setting constant 1-bit at position 15 on $flatten\u_reg.\u_cfg_clk_div.$verific$q_reg$prim_subreg.sv:72$9490 ($dlatch) from module pwm.
Setting constant 0-bit at position 16 on $flatten\u_reg.\u_cfg_clk_div.$verific$q_reg$prim_subreg.sv:72$9490 ($dlatch) from module pwm.
Setting constant 0-bit at position 17 on $flatten\u_reg.\u_cfg_clk_div.$verific$q_reg$prim_subreg.sv:72$9490 ($dlatch) from module pwm.
Setting constant 0-bit at position 18 on $flatten\u_reg.\u_cfg_clk_div.$verific$q_reg$prim_subreg.sv:72$9490 ($dlatch) from module pwm.
Setting constant 0-bit at position 19 on $flatten\u_reg.\u_cfg_clk_div.$verific$q_reg$prim_subreg.sv:72$9490 ($dlatch) from module pwm.
Setting constant 0-bit at position 20 on $flatten\u_reg.\u_cfg_clk_div.$verific$q_reg$prim_subreg.sv:72$9490 ($dlatch) from module pwm.
Setting constant 0-bit at position 21 on $flatten\u_reg.\u_cfg_clk_div.$verific$q_reg$prim_subreg.sv:72$9490 ($dlatch) from module pwm.
Setting constant 0-bit at position 22 on $flatten\u_reg.\u_cfg_clk_div.$verific$q_reg$prim_subreg.sv:72$9490 ($dlatch) from module pwm.
Setting constant 0-bit at position 23 on $flatten\u_reg.\u_cfg_clk_div.$verific$q_reg$prim_subreg.sv:72$9490 ($dlatch) from module pwm.
Setting constant 0-bit at position 24 on $flatten\u_reg.\u_cfg_clk_div.$verific$q_reg$prim_subreg.sv:72$9490 ($dlatch) from module pwm.
Setting constant 0-bit at position 25 on $flatten\u_reg.\u_cfg_clk_div.$verific$q_reg$prim_subreg.sv:72$9490 ($dlatch) from module pwm.
Setting constant 0-bit at position 26 on $flatten\u_reg.\u_cfg_clk_div.$verific$q_reg$prim_subreg.sv:72$9490 ($dlatch) from module pwm.
Setting constant 0-bit at position 0 on $flatten\u_reg.\u_cfg_cntr_en.$verific$q_reg[0]$prim_subreg.sv:72$9408 ($dlatch) from module pwm.
Setting constant 1-bit at position 0 on $flatten\u_reg.\u_cfg_dc_resn.$verific$q_reg$prim_subreg.sv:72$9511 ($dlatch) from module pwm.
Setting constant 1-bit at position 1 on $flatten\u_reg.\u_cfg_dc_resn.$verific$q_reg$prim_subreg.sv:72$9511 ($dlatch) from module pwm.
Setting constant 1-bit at position 2 on $flatten\u_reg.\u_cfg_dc_resn.$verific$q_reg$prim_subreg.sv:72$9511 ($dlatch) from module pwm.
Setting constant 0-bit at position 3 on $flatten\u_reg.\u_cfg_dc_resn.$verific$q_reg$prim_subreg.sv:72$9511 ($dlatch) from module pwm.
Setting constant 1-bit at position 0 on $flatten\u_reg.\u_duty_cycle_0_a_0.$verific$q_reg$prim_subreg.sv:72$9469 ($dlatch) from module pwm.
Setting constant 1-bit at position 1 on $flatten\u_reg.\u_duty_cycle_0_a_0.$verific$q_reg$prim_subreg.sv:72$9469 ($dlatch) from module pwm.
Setting constant 1-bit at position 2 on $flatten\u_reg.\u_duty_cycle_0_a_0.$verific$q_reg$prim_subreg.sv:72$9469 ($dlatch) from module pwm.
Setting constant 1-bit at position 3 on $flatten\u_reg.\u_duty_cycle_0_a_0.$verific$q_reg$prim_subreg.sv:72$9469 ($dlatch) from module pwm.
Setting constant 1-bit at position 4 on $flatten\u_reg.\u_duty_cycle_0_a_0.$verific$q_reg$prim_subreg.sv:72$9469 ($dlatch) from module pwm.
Setting constant 1-bit at position 5 on $flatten\u_reg.\u_duty_cycle_0_a_0.$verific$q_reg$prim_subreg.sv:72$9469 ($dlatch) from module pwm.
Setting constant 1-bit at position 6 on $flatten\u_reg.\u_duty_cycle_0_a_0.$verific$q_reg$prim_subreg.sv:72$9469 ($dlatch) from module pwm.
Setting constant 1-bit at position 7 on $flatten\u_reg.\u_duty_cycle_0_a_0.$verific$q_reg$prim_subreg.sv:72$9469 ($dlatch) from module pwm.
Setting constant 1-bit at position 8 on $flatten\u_reg.\u_duty_cycle_0_a_0.$verific$q_reg$prim_subreg.sv:72$9469 ($dlatch) from module pwm.
Setting constant 1-bit at position 9 on $flatten\u_reg.\u_duty_cycle_0_a_0.$verific$q_reg$prim_subreg.sv:72$9469 ($dlatch) from module pwm.
Setting constant 1-bit at position 10 on $flatten\u_reg.\u_duty_cycle_0_a_0.$verific$q_reg$prim_subreg.sv:72$9469 ($dlatch) from module pwm.
Setting constant 1-bit at position 11 on $flatten\u_reg.\u_duty_cycle_0_a_0.$verific$q_reg$prim_subreg.sv:72$9469 ($dlatch) from module pwm.
Setting constant 1-bit at position 12 on $flatten\u_reg.\u_duty_cycle_0_a_0.$verific$q_reg$prim_subreg.sv:72$9469 ($dlatch) from module pwm.
Setting constant 1-bit at position 13 on $flatten\u_reg.\u_duty_cycle_0_a_0.$verific$q_reg$prim_subreg.sv:72$9469 ($dlatch) from module pwm.
Setting constant 1-bit at position 14 on $flatten\u_reg.\u_duty_cycle_0_a_0.$verific$q_reg$prim_subreg.sv:72$9469 ($dlatch) from module pwm.
Setting constant 0-bit at position 15 on $flatten\u_reg.\u_duty_cycle_0_a_0.$verific$q_reg$prim_subreg.sv:72$9469 ($dlatch) from module pwm.
Setting constant 1-bit at position 0 on $flatten\u_reg.\u_duty_cycle_0_b_0.$verific$q_reg$prim_subreg.sv:72$9469 ($dlatch) from module pwm.
Setting constant 1-bit at position 1 on $flatten\u_reg.\u_duty_cycle_0_b_0.$verific$q_reg$prim_subreg.sv:72$9469 ($dlatch) from module pwm.
Setting constant 1-bit at position 2 on $flatten\u_reg.\u_duty_cycle_0_b_0.$verific$q_reg$prim_subreg.sv:72$9469 ($dlatch) from module pwm.
Setting constant 1-bit at position 3 on $flatten\u_reg.\u_duty_cycle_0_b_0.$verific$q_reg$prim_subreg.sv:72$9469 ($dlatch) from module pwm.
Setting constant 1-bit at position 4 on $flatten\u_reg.\u_duty_cycle_0_b_0.$verific$q_reg$prim_subreg.sv:72$9469 ($dlatch) from module pwm.
Setting constant 1-bit at position 5 on $flatten\u_reg.\u_duty_cycle_0_b_0.$verific$q_reg$prim_subreg.sv:72$9469 ($dlatch) from module pwm.
Setting constant 1-bit at position 6 on $flatten\u_reg.\u_duty_cycle_0_b_0.$verific$q_reg$prim_subreg.sv:72$9469 ($dlatch) from module pwm.
Setting constant 1-bit at position 7 on $flatten\u_reg.\u_duty_cycle_0_b_0.$verific$q_reg$prim_subreg.sv:72$9469 ($dlatch) from module pwm.
Setting constant 1-bit at position 8 on $flatten\u_reg.\u_duty_cycle_0_b_0.$verific$q_reg$prim_subreg.sv:72$9469 ($dlatch) from module pwm.
Setting constant 1-bit at position 9 on $flatten\u_reg.\u_duty_cycle_0_b_0.$verific$q_reg$prim_subreg.sv:72$9469 ($dlatch) from module pwm.
Setting constant 1-bit at position 10 on $flatten\u_reg.\u_duty_cycle_0_b_0.$verific$q_reg$prim_subreg.sv:72$9469 ($dlatch) from module pwm.
Setting constant 1-bit at position 11 on $flatten\u_reg.\u_duty_cycle_0_b_0.$verific$q_reg$prim_subreg.sv:72$9469 ($dlatch) from module pwm.
Setting constant 1-bit at position 12 on $flatten\u_reg.\u_duty_cycle_0_b_0.$verific$q_reg$prim_subreg.sv:72$9469 ($dlatch) from module pwm.
Setting constant 1-bit at position 13 on $flatten\u_reg.\u_duty_cycle_0_b_0.$verific$q_reg$prim_subreg.sv:72$9469 ($dlatch) from module pwm.
Setting constant 1-bit at position 14 on $flatten\u_reg.\u_duty_cycle_0_b_0.$verific$q_reg$prim_subreg.sv:72$9469 ($dlatch) from module pwm.
Setting constant 0-bit at position 15 on $flatten\u_reg.\u_duty_cycle_0_b_0.$verific$q_reg$prim_subreg.sv:72$9469 ($dlatch) from module pwm.
Setting constant 1-bit at position 0 on $flatten\u_reg.\u_duty_cycle_1_a_1.$verific$q_reg$prim_subreg.sv:72$9469 ($dlatch) from module pwm.
Setting constant 1-bit at position 1 on $flatten\u_reg.\u_duty_cycle_1_a_1.$verific$q_reg$prim_subreg.sv:72$9469 ($dlatch) from module pwm.
Setting constant 1-bit at position 2 on $flatten\u_reg.\u_duty_cycle_1_a_1.$verific$q_reg$prim_subreg.sv:72$9469 ($dlatch) from module pwm.
Setting constant 1-bit at position 3 on $flatten\u_reg.\u_duty_cycle_1_a_1.$verific$q_reg$prim_subreg.sv:72$9469 ($dlatch) from module pwm.
Setting constant 1-bit at position 4 on $flatten\u_reg.\u_duty_cycle_1_a_1.$verific$q_reg$prim_subreg.sv:72$9469 ($dlatch) from module pwm.
Setting constant 1-bit at position 5 on $flatten\u_reg.\u_duty_cycle_1_a_1.$verific$q_reg$prim_subreg.sv:72$9469 ($dlatch) from module pwm.
Setting constant 1-bit at position 6 on $flatten\u_reg.\u_duty_cycle_1_a_1.$verific$q_reg$prim_subreg.sv:72$9469 ($dlatch) from module pwm.
Setting constant 1-bit at position 7 on $flatten\u_reg.\u_duty_cycle_1_a_1.$verific$q_reg$prim_subreg.sv:72$9469 ($dlatch) from module pwm.
Setting constant 1-bit at position 8 on $flatten\u_reg.\u_duty_cycle_1_a_1.$verific$q_reg$prim_subreg.sv:72$9469 ($dlatch) from module pwm.
Setting constant 1-bit at position 9 on $flatten\u_reg.\u_duty_cycle_1_a_1.$verific$q_reg$prim_subreg.sv:72$9469 ($dlatch) from module pwm.
Setting constant 1-bit at position 10 on $flatten\u_reg.\u_duty_cycle_1_a_1.$verific$q_reg$prim_subreg.sv:72$9469 ($dlatch) from module pwm.
Setting constant 1-bit at position 11 on $flatten\u_reg.\u_duty_cycle_1_a_1.$verific$q_reg$prim_subreg.sv:72$9469 ($dlatch) from module pwm.
Setting constant 1-bit at position 12 on $flatten\u_reg.\u_duty_cycle_1_a_1.$verific$q_reg$prim_subreg.sv:72$9469 ($dlatch) from module pwm.
Setting constant 1-bit at position 13 on $flatten\u_reg.\u_duty_cycle_1_a_1.$verific$q_reg$prim_subreg.sv:72$9469 ($dlatch) from module pwm.
Setting constant 1-bit at position 14 on $flatten\u_reg.\u_duty_cycle_1_a_1.$verific$q_reg$prim_subreg.sv:72$9469 ($dlatch) from module pwm.
Setting constant 0-bit at position 15 on $flatten\u_reg.\u_duty_cycle_1_a_1.$verific$q_reg$prim_subreg.sv:72$9469 ($dlatch) from module pwm.
Setting constant 1-bit at position 0 on $flatten\u_reg.\u_duty_cycle_1_b_1.$verific$q_reg$prim_subreg.sv:72$9469 ($dlatch) from module pwm.
Setting constant 1-bit at position 1 on $flatten\u_reg.\u_duty_cycle_1_b_1.$verific$q_reg$prim_subreg.sv:72$9469 ($dlatch) from module pwm.
Setting constant 1-bit at position 2 on $flatten\u_reg.\u_duty_cycle_1_b_1.$verific$q_reg$prim_subreg.sv:72$9469 ($dlatch) from module pwm.
Setting constant 1-bit at position 3 on $flatten\u_reg.\u_duty_cycle_1_b_1.$verific$q_reg$prim_subreg.sv:72$9469 ($dlatch) from module pwm.
Setting constant 1-bit at position 4 on $flatten\u_reg.\u_duty_cycle_1_b_1.$verific$q_reg$prim_subreg.sv:72$9469 ($dlatch) from module pwm.
Setting constant 1-bit at position 5 on $flatten\u_reg.\u_duty_cycle_1_b_1.$verific$q_reg$prim_subreg.sv:72$9469 ($dlatch) from module pwm.
Setting constant 1-bit at position 6 on $flatten\u_reg.\u_duty_cycle_1_b_1.$verific$q_reg$prim_subreg.sv:72$9469 ($dlatch) from module pwm.
Setting constant 1-bit at position 7 on $flatten\u_reg.\u_duty_cycle_1_b_1.$verific$q_reg$prim_subreg.sv:72$9469 ($dlatch) from module pwm.
Setting constant 1-bit at position 8 on $flatten\u_reg.\u_duty_cycle_1_b_1.$verific$q_reg$prim_subreg.sv:72$9469 ($dlatch) from module pwm.
Setting constant 1-bit at position 9 on $flatten\u_reg.\u_duty_cycle_1_b_1.$verific$q_reg$prim_subreg.sv:72$9469 ($dlatch) from module pwm.
Setting constant 1-bit at position 10 on $flatten\u_reg.\u_duty_cycle_1_b_1.$verific$q_reg$prim_subreg.sv:72$9469 ($dlatch) from module pwm.
Setting constant 1-bit at position 11 on $flatten\u_reg.\u_duty_cycle_1_b_1.$verific$q_reg$prim_subreg.sv:72$9469 ($dlatch) from module pwm.
Setting constant 1-bit at position 12 on $flatten\u_reg.\u_duty_cycle_1_b_1.$verific$q_reg$prim_subreg.sv:72$9469 ($dlatch) from module pwm.
Setting constant 1-bit at position 13 on $flatten\u_reg.\u_duty_cycle_1_b_1.$verific$q_reg$prim_subreg.sv:72$9469 ($dlatch) from module pwm.
Setting constant 1-bit at position 14 on $flatten\u_reg.\u_duty_cycle_1_b_1.$verific$q_reg$prim_subreg.sv:72$9469 ($dlatch) from module pwm.
Setting constant 0-bit at position 15 on $flatten\u_reg.\u_duty_cycle_1_b_1.$verific$q_reg$prim_subreg.sv:72$9469 ($dlatch) from module pwm.
Setting constant 1-bit at position 0 on $flatten\u_reg.\u_duty_cycle_2_a_2.$verific$q_reg$prim_subreg.sv:72$9469 ($dlatch) from module pwm.
Setting constant 1-bit at position 1 on $flatten\u_reg.\u_duty_cycle_2_a_2.$verific$q_reg$prim_subreg.sv:72$9469 ($dlatch) from module pwm.
Setting constant 1-bit at position 2 on $flatten\u_reg.\u_duty_cycle_2_a_2.$verific$q_reg$prim_subreg.sv:72$9469 ($dlatch) from module pwm.
Setting constant 1-bit at position 3 on $flatten\u_reg.\u_duty_cycle_2_a_2.$verific$q_reg$prim_subreg.sv:72$9469 ($dlatch) from module pwm.
Setting constant 1-bit at position 4 on $flatten\u_reg.\u_duty_cycle_2_a_2.$verific$q_reg$prim_subreg.sv:72$9469 ($dlatch) from module pwm.
Setting constant 1-bit at position 5 on $flatten\u_reg.\u_duty_cycle_2_a_2.$verific$q_reg$prim_subreg.sv:72$9469 ($dlatch) from module pwm.
Setting constant 1-bit at position 6 on $flatten\u_reg.\u_duty_cycle_2_a_2.$verific$q_reg$prim_subreg.sv:72$9469 ($dlatch) from module pwm.
Setting constant 1-bit at position 7 on $flatten\u_reg.\u_duty_cycle_2_a_2.$verific$q_reg$prim_subreg.sv:72$9469 ($dlatch) from module pwm.
Setting constant 1-bit at position 8 on $flatten\u_reg.\u_duty_cycle_2_a_2.$verific$q_reg$prim_subreg.sv:72$9469 ($dlatch) from module pwm.
Setting constant 1-bit at position 9 on $flatten\u_reg.\u_duty_cycle_2_a_2.$verific$q_reg$prim_subreg.sv:72$9469 ($dlatch) from module pwm.
Setting constant 1-bit at position 10 on $flatten\u_reg.\u_duty_cycle_2_a_2.$verific$q_reg$prim_subreg.sv:72$9469 ($dlatch) from module pwm.
Setting constant 1-bit at position 11 on $flatten\u_reg.\u_duty_cycle_2_a_2.$verific$q_reg$prim_subreg.sv:72$9469 ($dlatch) from module pwm.
Setting constant 1-bit at position 12 on $flatten\u_reg.\u_duty_cycle_2_a_2.$verific$q_reg$prim_subreg.sv:72$9469 ($dlatch) from module pwm.
Setting constant 1-bit at position 13 on $flatten\u_reg.\u_duty_cycle_2_a_2.$verific$q_reg$prim_subreg.sv:72$9469 ($dlatch) from module pwm.
Setting constant 1-bit at position 14 on $flatten\u_reg.\u_duty_cycle_2_a_2.$verific$q_reg$prim_subreg.sv:72$9469 ($dlatch) from module pwm.
Setting constant 0-bit at position 15 on $flatten\u_reg.\u_duty_cycle_2_a_2.$verific$q_reg$prim_subreg.sv:72$9469 ($dlatch) from module pwm.
Setting constant 1-bit at position 0 on $flatten\u_reg.\u_duty_cycle_2_b_2.$verific$q_reg$prim_subreg.sv:72$9469 ($dlatch) from module pwm.
Setting constant 1-bit at position 1 on $flatten\u_reg.\u_duty_cycle_2_b_2.$verific$q_reg$prim_subreg.sv:72$9469 ($dlatch) from module pwm.
Setting constant 1-bit at position 2 on $flatten\u_reg.\u_duty_cycle_2_b_2.$verific$q_reg$prim_subreg.sv:72$9469 ($dlatch) from module pwm.
Setting constant 1-bit at position 3 on $flatten\u_reg.\u_duty_cycle_2_b_2.$verific$q_reg$prim_subreg.sv:72$9469 ($dlatch) from module pwm.
Setting constant 1-bit at position 4 on $flatten\u_reg.\u_duty_cycle_2_b_2.$verific$q_reg$prim_subreg.sv:72$9469 ($dlatch) from module pwm.
Setting constant 1-bit at position 5 on $flatten\u_reg.\u_duty_cycle_2_b_2.$verific$q_reg$prim_subreg.sv:72$9469 ($dlatch) from module pwm.
Setting constant 1-bit at position 6 on $flatten\u_reg.\u_duty_cycle_2_b_2.$verific$q_reg$prim_subreg.sv:72$9469 ($dlatch) from module pwm.
Setting constant 1-bit at position 7 on $flatten\u_reg.\u_duty_cycle_2_b_2.$verific$q_reg$prim_subreg.sv:72$9469 ($dlatch) from module pwm.
Setting constant 1-bit at position 8 on $flatten\u_reg.\u_duty_cycle_2_b_2.$verific$q_reg$prim_subreg.sv:72$9469 ($dlatch) from module pwm.
Setting constant 1-bit at position 9 on $flatten\u_reg.\u_duty_cycle_2_b_2.$verific$q_reg$prim_subreg.sv:72$9469 ($dlatch) from module pwm.
Setting constant 1-bit at position 10 on $flatten\u_reg.\u_duty_cycle_2_b_2.$verific$q_reg$prim_subreg.sv:72$9469 ($dlatch) from module pwm.
Setting constant 1-bit at position 11 on $flatten\u_reg.\u_duty_cycle_2_b_2.$verific$q_reg$prim_subreg.sv:72$9469 ($dlatch) from module pwm.
Setting constant 1-bit at position 12 on $flatten\u_reg.\u_duty_cycle_2_b_2.$verific$q_reg$prim_subreg.sv:72$9469 ($dlatch) from module pwm.
Setting constant 1-bit at position 13 on $flatten\u_reg.\u_duty_cycle_2_b_2.$verific$q_reg$prim_subreg.sv:72$9469 ($dlatch) from module pwm.
Setting constant 1-bit at position 14 on $flatten\u_reg.\u_duty_cycle_2_b_2.$verific$q_reg$prim_subreg.sv:72$9469 ($dlatch) from module pwm.
Setting constant 0-bit at position 15 on $flatten\u_reg.\u_duty_cycle_2_b_2.$verific$q_reg$prim_subreg.sv:72$9469 ($dlatch) from module pwm.
Setting constant 1-bit at position 0 on $flatten\u_reg.\u_duty_cycle_3_a_3.$verific$q_reg$prim_subreg.sv:72$9469 ($dlatch) from module pwm.
Setting constant 1-bit at position 1 on $flatten\u_reg.\u_duty_cycle_3_a_3.$verific$q_reg$prim_subreg.sv:72$9469 ($dlatch) from module pwm.
Setting constant 1-bit at position 2 on $flatten\u_reg.\u_duty_cycle_3_a_3.$verific$q_reg$prim_subreg.sv:72$9469 ($dlatch) from module pwm.
Setting constant 1-bit at position 3 on $flatten\u_reg.\u_duty_cycle_3_a_3.$verific$q_reg$prim_subreg.sv:72$9469 ($dlatch) from module pwm.
Setting constant 1-bit at position 4 on $flatten\u_reg.\u_duty_cycle_3_a_3.$verific$q_reg$prim_subreg.sv:72$9469 ($dlatch) from module pwm.
Setting constant 1-bit at position 5 on $flatten\u_reg.\u_duty_cycle_3_a_3.$verific$q_reg$prim_subreg.sv:72$9469 ($dlatch) from module pwm.
Setting constant 1-bit at position 6 on $flatten\u_reg.\u_duty_cycle_3_a_3.$verific$q_reg$prim_subreg.sv:72$9469 ($dlatch) from module pwm.
Setting constant 1-bit at position 7 on $flatten\u_reg.\u_duty_cycle_3_a_3.$verific$q_reg$prim_subreg.sv:72$9469 ($dlatch) from module pwm.
Setting constant 1-bit at position 8 on $flatten\u_reg.\u_duty_cycle_3_a_3.$verific$q_reg$prim_subreg.sv:72$9469 ($dlatch) from module pwm.
Setting constant 1-bit at position 9 on $flatten\u_reg.\u_duty_cycle_3_a_3.$verific$q_reg$prim_subreg.sv:72$9469 ($dlatch) from module pwm.
Setting constant 1-bit at position 10 on $flatten\u_reg.\u_duty_cycle_3_a_3.$verific$q_reg$prim_subreg.sv:72$9469 ($dlatch) from module pwm.
Setting constant 1-bit at position 11 on $flatten\u_reg.\u_duty_cycle_3_a_3.$verific$q_reg$prim_subreg.sv:72$9469 ($dlatch) from module pwm.
Setting constant 1-bit at position 12 on $flatten\u_reg.\u_duty_cycle_3_a_3.$verific$q_reg$prim_subreg.sv:72$9469 ($dlatch) from module pwm.
Setting constant 1-bit at position 13 on $flatten\u_reg.\u_duty_cycle_3_a_3.$verific$q_reg$prim_subreg.sv:72$9469 ($dlatch) from module pwm.
Setting constant 1-bit at position 14 on $flatten\u_reg.\u_duty_cycle_3_a_3.$verific$q_reg$prim_subreg.sv:72$9469 ($dlatch) from module pwm.
Setting constant 0-bit at position 15 on $flatten\u_reg.\u_duty_cycle_3_a_3.$verific$q_reg$prim_subreg.sv:72$9469 ($dlatch) from module pwm.
Setting constant 1-bit at position 0 on $flatten\u_reg.\u_duty_cycle_3_b_3.$verific$q_reg$prim_subreg.sv:72$9469 ($dlatch) from module pwm.
Setting constant 1-bit at position 1 on $flatten\u_reg.\u_duty_cycle_3_b_3.$verific$q_reg$prim_subreg.sv:72$9469 ($dlatch) from module pwm.
Setting constant 1-bit at position 2 on $flatten\u_reg.\u_duty_cycle_3_b_3.$verific$q_reg$prim_subreg.sv:72$9469 ($dlatch) from module pwm.
Setting constant 1-bit at position 3 on $flatten\u_reg.\u_duty_cycle_3_b_3.$verific$q_reg$prim_subreg.sv:72$9469 ($dlatch) from module pwm.
Setting constant 1-bit at position 4 on $flatten\u_reg.\u_duty_cycle_3_b_3.$verific$q_reg$prim_subreg.sv:72$9469 ($dlatch) from module pwm.
Setting constant 1-bit at position 5 on $flatten\u_reg.\u_duty_cycle_3_b_3.$verific$q_reg$prim_subreg.sv:72$9469 ($dlatch) from module pwm.
Setting constant 1-bit at position 6 on $flatten\u_reg.\u_duty_cycle_3_b_3.$verific$q_reg$prim_subreg.sv:72$9469 ($dlatch) from module pwm.
Setting constant 1-bit at position 7 on $flatten\u_reg.\u_duty_cycle_3_b_3.$verific$q_reg$prim_subreg.sv:72$9469 ($dlatch) from module pwm.
Setting constant 1-bit at position 8 on $flatten\u_reg.\u_duty_cycle_3_b_3.$verific$q_reg$prim_subreg.sv:72$9469 ($dlatch) from module pwm.
Setting constant 1-bit at position 9 on $flatten\u_reg.\u_duty_cycle_3_b_3.$verific$q_reg$prim_subreg.sv:72$9469 ($dlatch) from module pwm.
Setting constant 1-bit at position 10 on $flatten\u_reg.\u_duty_cycle_3_b_3.$verific$q_reg$prim_subreg.sv:72$9469 ($dlatch) from module pwm.
Setting constant 1-bit at position 11 on $flatten\u_reg.\u_duty_cycle_3_b_3.$verific$q_reg$prim_subreg.sv:72$9469 ($dlatch) from module pwm.
Setting constant 1-bit at position 12 on $flatten\u_reg.\u_duty_cycle_3_b_3.$verific$q_reg$prim_subreg.sv:72$9469 ($dlatch) from module pwm.
Setting constant 1-bit at position 13 on $flatten\u_reg.\u_duty_cycle_3_b_3.$verific$q_reg$prim_subreg.sv:72$9469 ($dlatch) from module pwm.
Setting constant 1-bit at position 14 on $flatten\u_reg.\u_duty_cycle_3_b_3.$verific$q_reg$prim_subreg.sv:72$9469 ($dlatch) from module pwm.
Setting constant 0-bit at position 15 on $flatten\u_reg.\u_duty_cycle_3_b_3.$verific$q_reg$prim_subreg.sv:72$9469 ($dlatch) from module pwm.
Setting constant 1-bit at position 0 on $flatten\u_reg.\u_duty_cycle_4_a_4.$verific$q_reg$prim_subreg.sv:72$9469 ($dlatch) from module pwm.
Setting constant 1-bit at position 1 on $flatten\u_reg.\u_duty_cycle_4_a_4.$verific$q_reg$prim_subreg.sv:72$9469 ($dlatch) from module pwm.
Setting constant 1-bit at position 2 on $flatten\u_reg.\u_duty_cycle_4_a_4.$verific$q_reg$prim_subreg.sv:72$9469 ($dlatch) from module pwm.
Setting constant 1-bit at position 3 on $flatten\u_reg.\u_duty_cycle_4_a_4.$verific$q_reg$prim_subreg.sv:72$9469 ($dlatch) from module pwm.
Setting constant 1-bit at position 4 on $flatten\u_reg.\u_duty_cycle_4_a_4.$verific$q_reg$prim_subreg.sv:72$9469 ($dlatch) from module pwm.
Setting constant 1-bit at position 5 on $flatten\u_reg.\u_duty_cycle_4_a_4.$verific$q_reg$prim_subreg.sv:72$9469 ($dlatch) from module pwm.
Setting constant 1-bit at position 6 on $flatten\u_reg.\u_duty_cycle_4_a_4.$verific$q_reg$prim_subreg.sv:72$9469 ($dlatch) from module pwm.
Setting constant 1-bit at position 7 on $flatten\u_reg.\u_duty_cycle_4_a_4.$verific$q_reg$prim_subreg.sv:72$9469 ($dlatch) from module pwm.
Setting constant 1-bit at position 8 on $flatten\u_reg.\u_duty_cycle_4_a_4.$verific$q_reg$prim_subreg.sv:72$9469 ($dlatch) from module pwm.
Setting constant 1-bit at position 9 on $flatten\u_reg.\u_duty_cycle_4_a_4.$verific$q_reg$prim_subreg.sv:72$9469 ($dlatch) from module pwm.
Setting constant 1-bit at position 10 on $flatten\u_reg.\u_duty_cycle_4_a_4.$verific$q_reg$prim_subreg.sv:72$9469 ($dlatch) from module pwm.
Setting constant 1-bit at position 11 on $flatten\u_reg.\u_duty_cycle_4_a_4.$verific$q_reg$prim_subreg.sv:72$9469 ($dlatch) from module pwm.
Setting constant 1-bit at position 12 on $flatten\u_reg.\u_duty_cycle_4_a_4.$verific$q_reg$prim_subreg.sv:72$9469 ($dlatch) from module pwm.
Setting constant 1-bit at position 13 on $flatten\u_reg.\u_duty_cycle_4_a_4.$verific$q_reg$prim_subreg.sv:72$9469 ($dlatch) from module pwm.
Setting constant 1-bit at position 14 on $flatten\u_reg.\u_duty_cycle_4_a_4.$verific$q_reg$prim_subreg.sv:72$9469 ($dlatch) from module pwm.
Setting constant 0-bit at position 15 on $flatten\u_reg.\u_duty_cycle_4_a_4.$verific$q_reg$prim_subreg.sv:72$9469 ($dlatch) from module pwm.
Setting constant 1-bit at position 0 on $flatten\u_reg.\u_duty_cycle_4_b_4.$verific$q_reg$prim_subreg.sv:72$9469 ($dlatch) from module pwm.
Setting constant 1-bit at position 1 on $flatten\u_reg.\u_duty_cycle_4_b_4.$verific$q_reg$prim_subreg.sv:72$9469 ($dlatch) from module pwm.
Setting constant 1-bit at position 2 on $flatten\u_reg.\u_duty_cycle_4_b_4.$verific$q_reg$prim_subreg.sv:72$9469 ($dlatch) from module pwm.
Setting constant 1-bit at position 3 on $flatten\u_reg.\u_duty_cycle_4_b_4.$verific$q_reg$prim_subreg.sv:72$9469 ($dlatch) from module pwm.
Setting constant 1-bit at position 4 on $flatten\u_reg.\u_duty_cycle_4_b_4.$verific$q_reg$prim_subreg.sv:72$9469 ($dlatch) from module pwm.
Setting constant 1-bit at position 5 on $flatten\u_reg.\u_duty_cycle_4_b_4.$verific$q_reg$prim_subreg.sv:72$9469 ($dlatch) from module pwm.
Setting constant 1-bit at position 6 on $flatten\u_reg.\u_duty_cycle_4_b_4.$verific$q_reg$prim_subreg.sv:72$9469 ($dlatch) from module pwm.
Setting constant 1-bit at position 7 on $flatten\u_reg.\u_duty_cycle_4_b_4.$verific$q_reg$prim_subreg.sv:72$9469 ($dlatch) from module pwm.
Setting constant 1-bit at position 8 on $flatten\u_reg.\u_duty_cycle_4_b_4.$verific$q_reg$prim_subreg.sv:72$9469 ($dlatch) from module pwm.
Setting constant 1-bit at position 9 on $flatten\u_reg.\u_duty_cycle_4_b_4.$verific$q_reg$prim_subreg.sv:72$9469 ($dlatch) from module pwm.
Setting constant 1-bit at position 10 on $flatten\u_reg.\u_duty_cycle_4_b_4.$verific$q_reg$prim_subreg.sv:72$9469 ($dlatch) from module pwm.
Setting constant 1-bit at position 11 on $flatten\u_reg.\u_duty_cycle_4_b_4.$verific$q_reg$prim_subreg.sv:72$9469 ($dlatch) from module pwm.
Setting constant 1-bit at position 12 on $flatten\u_reg.\u_duty_cycle_4_b_4.$verific$q_reg$prim_subreg.sv:72$9469 ($dlatch) from module pwm.
Setting constant 1-bit at position 13 on $flatten\u_reg.\u_duty_cycle_4_b_4.$verific$q_reg$prim_subreg.sv:72$9469 ($dlatch) from module pwm.
Setting constant 1-bit at position 14 on $flatten\u_reg.\u_duty_cycle_4_b_4.$verific$q_reg$prim_subreg.sv:72$9469 ($dlatch) from module pwm.
Setting constant 0-bit at position 15 on $flatten\u_reg.\u_duty_cycle_4_b_4.$verific$q_reg$prim_subreg.sv:72$9469 ($dlatch) from module pwm.
Setting constant 1-bit at position 0 on $flatten\u_reg.\u_duty_cycle_5_a_5.$verific$q_reg$prim_subreg.sv:72$9469 ($dlatch) from module pwm.
Setting constant 1-bit at position 1 on $flatten\u_reg.\u_duty_cycle_5_a_5.$verific$q_reg$prim_subreg.sv:72$9469 ($dlatch) from module pwm.
Setting constant 1-bit at position 2 on $flatten\u_reg.\u_duty_cycle_5_a_5.$verific$q_reg$prim_subreg.sv:72$9469 ($dlatch) from module pwm.
Setting constant 1-bit at position 3 on $flatten\u_reg.\u_duty_cycle_5_a_5.$verific$q_reg$prim_subreg.sv:72$9469 ($dlatch) from module pwm.
Setting constant 1-bit at position 4 on $flatten\u_reg.\u_duty_cycle_5_a_5.$verific$q_reg$prim_subreg.sv:72$9469 ($dlatch) from module pwm.
Setting constant 1-bit at position 5 on $flatten\u_reg.\u_duty_cycle_5_a_5.$verific$q_reg$prim_subreg.sv:72$9469 ($dlatch) from module pwm.
Setting constant 1-bit at position 6 on $flatten\u_reg.\u_duty_cycle_5_a_5.$verific$q_reg$prim_subreg.sv:72$9469 ($dlatch) from module pwm.
Setting constant 1-bit at position 7 on $flatten\u_reg.\u_duty_cycle_5_a_5.$verific$q_reg$prim_subreg.sv:72$9469 ($dlatch) from module pwm.
Setting constant 1-bit at position 8 on $flatten\u_reg.\u_duty_cycle_5_a_5.$verific$q_reg$prim_subreg.sv:72$9469 ($dlatch) from module pwm.
Setting constant 1-bit at position 9 on $flatten\u_reg.\u_duty_cycle_5_a_5.$verific$q_reg$prim_subreg.sv:72$9469 ($dlatch) from module pwm.
Setting constant 1-bit at position 10 on $flatten\u_reg.\u_duty_cycle_5_a_5.$verific$q_reg$prim_subreg.sv:72$9469 ($dlatch) from module pwm.
Setting constant 1-bit at position 11 on $flatten\u_reg.\u_duty_cycle_5_a_5.$verific$q_reg$prim_subreg.sv:72$9469 ($dlatch) from module pwm.
Setting constant 1-bit at position 12 on $flatten\u_reg.\u_duty_cycle_5_a_5.$verific$q_reg$prim_subreg.sv:72$9469 ($dlatch) from module pwm.
Setting constant 1-bit at position 13 on $flatten\u_reg.\u_duty_cycle_5_a_5.$verific$q_reg$prim_subreg.sv:72$9469 ($dlatch) from module pwm.
Setting constant 1-bit at position 14 on $flatten\u_reg.\u_duty_cycle_5_a_5.$verific$q_reg$prim_subreg.sv:72$9469 ($dlatch) from module pwm.
Setting constant 0-bit at position 15 on $flatten\u_reg.\u_duty_cycle_5_a_5.$verific$q_reg$prim_subreg.sv:72$9469 ($dlatch) from module pwm.
Setting constant 1-bit at position 0 on $flatten\u_reg.\u_duty_cycle_5_b_5.$verific$q_reg$prim_subreg.sv:72$9469 ($dlatch) from module pwm.
Setting constant 1-bit at position 1 on $flatten\u_reg.\u_duty_cycle_5_b_5.$verific$q_reg$prim_subreg.sv:72$9469 ($dlatch) from module pwm.
Setting constant 1-bit at position 2 on $flatten\u_reg.\u_duty_cycle_5_b_5.$verific$q_reg$prim_subreg.sv:72$9469 ($dlatch) from module pwm.
Setting constant 1-bit at position 3 on $flatten\u_reg.\u_duty_cycle_5_b_5.$verific$q_reg$prim_subreg.sv:72$9469 ($dlatch) from module pwm.
Setting constant 1-bit at position 4 on $flatten\u_reg.\u_duty_cycle_5_b_5.$verific$q_reg$prim_subreg.sv:72$9469 ($dlatch) from module pwm.
Setting constant 1-bit at position 5 on $flatten\u_reg.\u_duty_cycle_5_b_5.$verific$q_reg$prim_subreg.sv:72$9469 ($dlatch) from module pwm.
Setting constant 1-bit at position 6 on $flatten\u_reg.\u_duty_cycle_5_b_5.$verific$q_reg$prim_subreg.sv:72$9469 ($dlatch) from module pwm.
Setting constant 1-bit at position 7 on $flatten\u_reg.\u_duty_cycle_5_b_5.$verific$q_reg$prim_subreg.sv:72$9469 ($dlatch) from module pwm.
Setting constant 1-bit at position 8 on $flatten\u_reg.\u_duty_cycle_5_b_5.$verific$q_reg$prim_subreg.sv:72$9469 ($dlatch) from module pwm.
Setting constant 1-bit at position 9 on $flatten\u_reg.\u_duty_cycle_5_b_5.$verific$q_reg$prim_subreg.sv:72$9469 ($dlatch) from module pwm.
Setting constant 1-bit at position 10 on $flatten\u_reg.\u_duty_cycle_5_b_5.$verific$q_reg$prim_subreg.sv:72$9469 ($dlatch) from module pwm.
Setting constant 1-bit at position 11 on $flatten\u_reg.\u_duty_cycle_5_b_5.$verific$q_reg$prim_subreg.sv:72$9469 ($dlatch) from module pwm.
Setting constant 1-bit at position 12 on $flatten\u_reg.\u_duty_cycle_5_b_5.$verific$q_reg$prim_subreg.sv:72$9469 ($dlatch) from module pwm.
Setting constant 1-bit at position 13 on $flatten\u_reg.\u_duty_cycle_5_b_5.$verific$q_reg$prim_subreg.sv:72$9469 ($dlatch) from module pwm.
Setting constant 1-bit at position 14 on $flatten\u_reg.\u_duty_cycle_5_b_5.$verific$q_reg$prim_subreg.sv:72$9469 ($dlatch) from module pwm.
Setting constant 0-bit at position 15 on $flatten\u_reg.\u_duty_cycle_5_b_5.$verific$q_reg$prim_subreg.sv:72$9469 ($dlatch) from module pwm.
Setting constant 0-bit at position 0 on $flatten\u_reg.\u_invert_invert_0.$verific$q_reg[0]$prim_subreg.sv:72$9408 ($dlatch) from module pwm.
Setting constant 0-bit at position 0 on $flatten\u_reg.\u_invert_invert_1.$verific$q_reg[0]$prim_subreg.sv:72$9408 ($dlatch) from module pwm.
Setting constant 0-bit at position 0 on $flatten\u_reg.\u_invert_invert_2.$verific$q_reg[0]$prim_subreg.sv:72$9408 ($dlatch) from module pwm.
Setting constant 0-bit at position 0 on $flatten\u_reg.\u_invert_invert_3.$verific$q_reg[0]$prim_subreg.sv:72$9408 ($dlatch) from module pwm.
Setting constant 0-bit at position 0 on $flatten\u_reg.\u_invert_invert_4.$verific$q_reg[0]$prim_subreg.sv:72$9408 ($dlatch) from module pwm.
Setting constant 0-bit at position 0 on $flatten\u_reg.\u_invert_invert_5.$verific$q_reg[0]$prim_subreg.sv:72$9408 ($dlatch) from module pwm.
Setting constant 0-bit at position 0 on $flatten\u_reg.\u_pwm_en_en_0.$verific$q_reg[0]$prim_subreg.sv:72$9408 ($dlatch) from module pwm.
Setting constant 0-bit at position 0 on $flatten\u_reg.\u_pwm_en_en_1.$verific$q_reg[0]$prim_subreg.sv:72$9408 ($dlatch) from module pwm.
Setting constant 0-bit at position 0 on $flatten\u_reg.\u_pwm_en_en_2.$verific$q_reg[0]$prim_subreg.sv:72$9408 ($dlatch) from module pwm.
Setting constant 0-bit at position 0 on $flatten\u_reg.\u_pwm_en_en_3.$verific$q_reg[0]$prim_subreg.sv:72$9408 ($dlatch) from module pwm.
Setting constant 0-bit at position 0 on $flatten\u_reg.\u_pwm_en_en_4.$verific$q_reg[0]$prim_subreg.sv:72$9408 ($dlatch) from module pwm.
Setting constant 0-bit at position 0 on $flatten\u_reg.\u_pwm_en_en_5.$verific$q_reg[0]$prim_subreg.sv:72$9408 ($dlatch) from module pwm.
Setting constant 0-bit at position 0 on $flatten\u_reg.\u_pwm_param_0_blink_en_0.$verific$q_reg[0]$prim_subreg.sv:72$9408 ($dlatch) from module pwm.
Setting constant 0-bit at position 0 on $flatten\u_reg.\u_pwm_param_0_htbt_en_0.$verific$q_reg[0]$prim_subreg.sv:72$9408 ($dlatch) from module pwm.
Setting constant 0-bit at position 0 on $flatten\u_reg.\u_pwm_param_0_phase_delay_0.$verific$q_reg$prim_subreg.sv:72$9448 ($dlatch) from module pwm.
Setting constant 0-bit at position 1 on $flatten\u_reg.\u_pwm_param_0_phase_delay_0.$verific$q_reg$prim_subreg.sv:72$9448 ($dlatch) from module pwm.
Setting constant 0-bit at position 2 on $flatten\u_reg.\u_pwm_param_0_phase_delay_0.$verific$q_reg$prim_subreg.sv:72$9448 ($dlatch) from module pwm.
Setting constant 0-bit at position 3 on $flatten\u_reg.\u_pwm_param_0_phase_delay_0.$verific$q_reg$prim_subreg.sv:72$9448 ($dlatch) from module pwm.
Setting constant 0-bit at position 4 on $flatten\u_reg.\u_pwm_param_0_phase_delay_0.$verific$q_reg$prim_subreg.sv:72$9448 ($dlatch) from module pwm.
Setting constant 0-bit at position 5 on $flatten\u_reg.\u_pwm_param_0_phase_delay_0.$verific$q_reg$prim_subreg.sv:72$9448 ($dlatch) from module pwm.
Setting constant 0-bit at position 6 on $flatten\u_reg.\u_pwm_param_0_phase_delay_0.$verific$q_reg$prim_subreg.sv:72$9448 ($dlatch) from module pwm.
Setting constant 0-bit at position 7 on $flatten\u_reg.\u_pwm_param_0_phase_delay_0.$verific$q_reg$prim_subreg.sv:72$9448 ($dlatch) from module pwm.
Setting constant 0-bit at position 8 on $flatten\u_reg.\u_pwm_param_0_phase_delay_0.$verific$q_reg$prim_subreg.sv:72$9448 ($dlatch) from module pwm.
Setting constant 0-bit at position 9 on $flatten\u_reg.\u_pwm_param_0_phase_delay_0.$verific$q_reg$prim_subreg.sv:72$9448 ($dlatch) from module pwm.
Setting constant 0-bit at position 10 on $flatten\u_reg.\u_pwm_param_0_phase_delay_0.$verific$q_reg$prim_subreg.sv:72$9448 ($dlatch) from module pwm.
Setting constant 0-bit at position 11 on $flatten\u_reg.\u_pwm_param_0_phase_delay_0.$verific$q_reg$prim_subreg.sv:72$9448 ($dlatch) from module pwm.
Setting constant 0-bit at position 12 on $flatten\u_reg.\u_pwm_param_0_phase_delay_0.$verific$q_reg$prim_subreg.sv:72$9448 ($dlatch) from module pwm.
Setting constant 0-bit at position 13 on $flatten\u_reg.\u_pwm_param_0_phase_delay_0.$verific$q_reg$prim_subreg.sv:72$9448 ($dlatch) from module pwm.
Setting constant 0-bit at position 14 on $flatten\u_reg.\u_pwm_param_0_phase_delay_0.$verific$q_reg$prim_subreg.sv:72$9448 ($dlatch) from module pwm.
Setting constant 0-bit at position 15 on $flatten\u_reg.\u_pwm_param_0_phase_delay_0.$verific$q_reg$prim_subreg.sv:72$9448 ($dlatch) from module pwm.
Setting constant 0-bit at position 0 on $flatten\u_reg.\u_pwm_param_1_blink_en_1.$verific$q_reg[0]$prim_subreg.sv:72$9408 ($dlatch) from module pwm.
Setting constant 0-bit at position 0 on $flatten\u_reg.\u_pwm_param_1_htbt_en_1.$verific$q_reg[0]$prim_subreg.sv:72$9408 ($dlatch) from module pwm.
Setting constant 0-bit at position 0 on $flatten\u_reg.\u_pwm_param_1_phase_delay_1.$verific$q_reg$prim_subreg.sv:72$9448 ($dlatch) from module pwm.
Setting constant 0-bit at position 1 on $flatten\u_reg.\u_pwm_param_1_phase_delay_1.$verific$q_reg$prim_subreg.sv:72$9448 ($dlatch) from module pwm.
Setting constant 0-bit at position 2 on $flatten\u_reg.\u_pwm_param_1_phase_delay_1.$verific$q_reg$prim_subreg.sv:72$9448 ($dlatch) from module pwm.
Setting constant 0-bit at position 3 on $flatten\u_reg.\u_pwm_param_1_phase_delay_1.$verific$q_reg$prim_subreg.sv:72$9448 ($dlatch) from module pwm.
Setting constant 0-bit at position 4 on $flatten\u_reg.\u_pwm_param_1_phase_delay_1.$verific$q_reg$prim_subreg.sv:72$9448 ($dlatch) from module pwm.
Setting constant 0-bit at position 5 on $flatten\u_reg.\u_pwm_param_1_phase_delay_1.$verific$q_reg$prim_subreg.sv:72$9448 ($dlatch) from module pwm.
Setting constant 0-bit at position 6 on $flatten\u_reg.\u_pwm_param_1_phase_delay_1.$verific$q_reg$prim_subreg.sv:72$9448 ($dlatch) from module pwm.
Setting constant 0-bit at position 7 on $flatten\u_reg.\u_pwm_param_1_phase_delay_1.$verific$q_reg$prim_subreg.sv:72$9448 ($dlatch) from module pwm.
Setting constant 0-bit at position 8 on $flatten\u_reg.\u_pwm_param_1_phase_delay_1.$verific$q_reg$prim_subreg.sv:72$9448 ($dlatch) from module pwm.
Setting constant 0-bit at position 9 on $flatten\u_reg.\u_pwm_param_1_phase_delay_1.$verific$q_reg$prim_subreg.sv:72$9448 ($dlatch) from module pwm.
Setting constant 0-bit at position 10 on $flatten\u_reg.\u_pwm_param_1_phase_delay_1.$verific$q_reg$prim_subreg.sv:72$9448 ($dlatch) from module pwm.
Setting constant 0-bit at position 11 on $flatten\u_reg.\u_pwm_param_1_phase_delay_1.$verific$q_reg$prim_subreg.sv:72$9448 ($dlatch) from module pwm.
Setting constant 0-bit at position 12 on $flatten\u_reg.\u_pwm_param_1_phase_delay_1.$verific$q_reg$prim_subreg.sv:72$9448 ($dlatch) from module pwm.
Setting constant 0-bit at position 13 on $flatten\u_reg.\u_pwm_param_1_phase_delay_1.$verific$q_reg$prim_subreg.sv:72$9448 ($dlatch) from module pwm.
Setting constant 0-bit at position 14 on $flatten\u_reg.\u_pwm_param_1_phase_delay_1.$verific$q_reg$prim_subreg.sv:72$9448 ($dlatch) from module pwm.
Setting constant 0-bit at position 15 on $flatten\u_reg.\u_pwm_param_1_phase_delay_1.$verific$q_reg$prim_subreg.sv:72$9448 ($dlatch) from module pwm.
Setting constant 0-bit at position 0 on $flatten\u_reg.\u_pwm_param_2_blink_en_2.$verific$q_reg[0]$prim_subreg.sv:72$9408 ($dlatch) from module pwm.
Setting constant 0-bit at position 0 on $flatten\u_reg.\u_pwm_param_2_htbt_en_2.$verific$q_reg[0]$prim_subreg.sv:72$9408 ($dlatch) from module pwm.
Setting constant 0-bit at position 0 on $flatten\u_reg.\u_pwm_param_2_phase_delay_2.$verific$q_reg$prim_subreg.sv:72$9448 ($dlatch) from module pwm.
Setting constant 0-bit at position 1 on $flatten\u_reg.\u_pwm_param_2_phase_delay_2.$verific$q_reg$prim_subreg.sv:72$9448 ($dlatch) from module pwm.
Setting constant 0-bit at position 2 on $flatten\u_reg.\u_pwm_param_2_phase_delay_2.$verific$q_reg$prim_subreg.sv:72$9448 ($dlatch) from module pwm.
Setting constant 0-bit at position 3 on $flatten\u_reg.\u_pwm_param_2_phase_delay_2.$verific$q_reg$prim_subreg.sv:72$9448 ($dlatch) from module pwm.
Setting constant 0-bit at position 4 on $flatten\u_reg.\u_pwm_param_2_phase_delay_2.$verific$q_reg$prim_subreg.sv:72$9448 ($dlatch) from module pwm.
Setting constant 0-bit at position 5 on $flatten\u_reg.\u_pwm_param_2_phase_delay_2.$verific$q_reg$prim_subreg.sv:72$9448 ($dlatch) from module pwm.
Setting constant 0-bit at position 6 on $flatten\u_reg.\u_pwm_param_2_phase_delay_2.$verific$q_reg$prim_subreg.sv:72$9448 ($dlatch) from module pwm.
Setting constant 0-bit at position 7 on $flatten\u_reg.\u_pwm_param_2_phase_delay_2.$verific$q_reg$prim_subreg.sv:72$9448 ($dlatch) from module pwm.
Setting constant 0-bit at position 8 on $flatten\u_reg.\u_pwm_param_2_phase_delay_2.$verific$q_reg$prim_subreg.sv:72$9448 ($dlatch) from module pwm.
Setting constant 0-bit at position 9 on $flatten\u_reg.\u_pwm_param_2_phase_delay_2.$verific$q_reg$prim_subreg.sv:72$9448 ($dlatch) from module pwm.
Setting constant 0-bit at position 10 on $flatten\u_reg.\u_pwm_param_2_phase_delay_2.$verific$q_reg$prim_subreg.sv:72$9448 ($dlatch) from module pwm.
Setting constant 0-bit at position 11 on $flatten\u_reg.\u_pwm_param_2_phase_delay_2.$verific$q_reg$prim_subreg.sv:72$9448 ($dlatch) from module pwm.
Setting constant 0-bit at position 12 on $flatten\u_reg.\u_pwm_param_2_phase_delay_2.$verific$q_reg$prim_subreg.sv:72$9448 ($dlatch) from module pwm.
Setting constant 0-bit at position 13 on $flatten\u_reg.\u_pwm_param_2_phase_delay_2.$verific$q_reg$prim_subreg.sv:72$9448 ($dlatch) from module pwm.
Setting constant 0-bit at position 14 on $flatten\u_reg.\u_pwm_param_2_phase_delay_2.$verific$q_reg$prim_subreg.sv:72$9448 ($dlatch) from module pwm.
Setting constant 0-bit at position 15 on $flatten\u_reg.\u_pwm_param_2_phase_delay_2.$verific$q_reg$prim_subreg.sv:72$9448 ($dlatch) from module pwm.
Setting constant 0-bit at position 0 on $flatten\u_reg.\u_pwm_param_3_blink_en_3.$verific$q_reg[0]$prim_subreg.sv:72$9408 ($dlatch) from module pwm.
Setting constant 0-bit at position 0 on $flatten\u_reg.\u_pwm_param_3_htbt_en_3.$verific$q_reg[0]$prim_subreg.sv:72$9408 ($dlatch) from module pwm.
Setting constant 0-bit at position 0 on $flatten\u_reg.\u_pwm_param_3_phase_delay_3.$verific$q_reg$prim_subreg.sv:72$9448 ($dlatch) from module pwm.
Setting constant 0-bit at position 1 on $flatten\u_reg.\u_pwm_param_3_phase_delay_3.$verific$q_reg$prim_subreg.sv:72$9448 ($dlatch) from module pwm.
Setting constant 0-bit at position 2 on $flatten\u_reg.\u_pwm_param_3_phase_delay_3.$verific$q_reg$prim_subreg.sv:72$9448 ($dlatch) from module pwm.
Setting constant 0-bit at position 3 on $flatten\u_reg.\u_pwm_param_3_phase_delay_3.$verific$q_reg$prim_subreg.sv:72$9448 ($dlatch) from module pwm.
Setting constant 0-bit at position 4 on $flatten\u_reg.\u_pwm_param_3_phase_delay_3.$verific$q_reg$prim_subreg.sv:72$9448 ($dlatch) from module pwm.
Setting constant 0-bit at position 5 on $flatten\u_reg.\u_pwm_param_3_phase_delay_3.$verific$q_reg$prim_subreg.sv:72$9448 ($dlatch) from module pwm.
Setting constant 0-bit at position 6 on $flatten\u_reg.\u_pwm_param_3_phase_delay_3.$verific$q_reg$prim_subreg.sv:72$9448 ($dlatch) from module pwm.
Setting constant 0-bit at position 7 on $flatten\u_reg.\u_pwm_param_3_phase_delay_3.$verific$q_reg$prim_subreg.sv:72$9448 ($dlatch) from module pwm.
Setting constant 0-bit at position 8 on $flatten\u_reg.\u_pwm_param_3_phase_delay_3.$verific$q_reg$prim_subreg.sv:72$9448 ($dlatch) from module pwm.
Setting constant 0-bit at position 9 on $flatten\u_reg.\u_pwm_param_3_phase_delay_3.$verific$q_reg$prim_subreg.sv:72$9448 ($dlatch) from module pwm.
Setting constant 0-bit at position 10 on $flatten\u_reg.\u_pwm_param_3_phase_delay_3.$verific$q_reg$prim_subreg.sv:72$9448 ($dlatch) from module pwm.
Setting constant 0-bit at position 11 on $flatten\u_reg.\u_pwm_param_3_phase_delay_3.$verific$q_reg$prim_subreg.sv:72$9448 ($dlatch) from module pwm.
Setting constant 0-bit at position 12 on $flatten\u_reg.\u_pwm_param_3_phase_delay_3.$verific$q_reg$prim_subreg.sv:72$9448 ($dlatch) from module pwm.
Setting constant 0-bit at position 13 on $flatten\u_reg.\u_pwm_param_3_phase_delay_3.$verific$q_reg$prim_subreg.sv:72$9448 ($dlatch) from module pwm.
Setting constant 0-bit at position 14 on $flatten\u_reg.\u_pwm_param_3_phase_delay_3.$verific$q_reg$prim_subreg.sv:72$9448 ($dlatch) from module pwm.
Setting constant 0-bit at position 15 on $flatten\u_reg.\u_pwm_param_3_phase_delay_3.$verific$q_reg$prim_subreg.sv:72$9448 ($dlatch) from module pwm.
Setting constant 0-bit at position 0 on $flatten\u_reg.\u_pwm_param_4_blink_en_4.$verific$q_reg[0]$prim_subreg.sv:72$9408 ($dlatch) from module pwm.
Setting constant 0-bit at position 0 on $flatten\u_reg.\u_pwm_param_4_htbt_en_4.$verific$q_reg[0]$prim_subreg.sv:72$9408 ($dlatch) from module pwm.
Setting constant 0-bit at position 0 on $flatten\u_reg.\u_pwm_param_4_phase_delay_4.$verific$q_reg$prim_subreg.sv:72$9448 ($dlatch) from module pwm.
Setting constant 0-bit at position 1 on $flatten\u_reg.\u_pwm_param_4_phase_delay_4.$verific$q_reg$prim_subreg.sv:72$9448 ($dlatch) from module pwm.
Setting constant 0-bit at position 2 on $flatten\u_reg.\u_pwm_param_4_phase_delay_4.$verific$q_reg$prim_subreg.sv:72$9448 ($dlatch) from module pwm.
Setting constant 0-bit at position 3 on $flatten\u_reg.\u_pwm_param_4_phase_delay_4.$verific$q_reg$prim_subreg.sv:72$9448 ($dlatch) from module pwm.
Setting constant 0-bit at position 4 on $flatten\u_reg.\u_pwm_param_4_phase_delay_4.$verific$q_reg$prim_subreg.sv:72$9448 ($dlatch) from module pwm.
Setting constant 0-bit at position 5 on $flatten\u_reg.\u_pwm_param_4_phase_delay_4.$verific$q_reg$prim_subreg.sv:72$9448 ($dlatch) from module pwm.
Setting constant 0-bit at position 6 on $flatten\u_reg.\u_pwm_param_4_phase_delay_4.$verific$q_reg$prim_subreg.sv:72$9448 ($dlatch) from module pwm.
Setting constant 0-bit at position 7 on $flatten\u_reg.\u_pwm_param_4_phase_delay_4.$verific$q_reg$prim_subreg.sv:72$9448 ($dlatch) from module pwm.
Setting constant 0-bit at position 8 on $flatten\u_reg.\u_pwm_param_4_phase_delay_4.$verific$q_reg$prim_subreg.sv:72$9448 ($dlatch) from module pwm.
Setting constant 0-bit at position 9 on $flatten\u_reg.\u_pwm_param_4_phase_delay_4.$verific$q_reg$prim_subreg.sv:72$9448 ($dlatch) from module pwm.
Setting constant 0-bit at position 10 on $flatten\u_reg.\u_pwm_param_4_phase_delay_4.$verific$q_reg$prim_subreg.sv:72$9448 ($dlatch) from module pwm.
Setting constant 0-bit at position 11 on $flatten\u_reg.\u_pwm_param_4_phase_delay_4.$verific$q_reg$prim_subreg.sv:72$9448 ($dlatch) from module pwm.
Setting constant 0-bit at position 12 on $flatten\u_reg.\u_pwm_param_4_phase_delay_4.$verific$q_reg$prim_subreg.sv:72$9448 ($dlatch) from module pwm.
Setting constant 0-bit at position 13 on $flatten\u_reg.\u_pwm_param_4_phase_delay_4.$verific$q_reg$prim_subreg.sv:72$9448 ($dlatch) from module pwm.
Setting constant 0-bit at position 14 on $flatten\u_reg.\u_pwm_param_4_phase_delay_4.$verific$q_reg$prim_subreg.sv:72$9448 ($dlatch) from module pwm.
Setting constant 0-bit at position 15 on $flatten\u_reg.\u_pwm_param_4_phase_delay_4.$verific$q_reg$prim_subreg.sv:72$9448 ($dlatch) from module pwm.
Setting constant 0-bit at position 0 on $flatten\u_reg.\u_pwm_param_5_blink_en_5.$verific$q_reg[0]$prim_subreg.sv:72$9408 ($dlatch) from module pwm.
Setting constant 0-bit at position 0 on $flatten\u_reg.\u_pwm_param_5_htbt_en_5.$verific$q_reg[0]$prim_subreg.sv:72$9408 ($dlatch) from module pwm.
Setting constant 0-bit at position 0 on $flatten\u_reg.\u_pwm_param_5_phase_delay_5.$verific$q_reg$prim_subreg.sv:72$9448 ($dlatch) from module pwm.
Setting constant 0-bit at position 1 on $flatten\u_reg.\u_pwm_param_5_phase_delay_5.$verific$q_reg$prim_subreg.sv:72$9448 ($dlatch) from module pwm.
Setting constant 0-bit at position 2 on $flatten\u_reg.\u_pwm_param_5_phase_delay_5.$verific$q_reg$prim_subreg.sv:72$9448 ($dlatch) from module pwm.
Setting constant 0-bit at position 3 on $flatten\u_reg.\u_pwm_param_5_phase_delay_5.$verific$q_reg$prim_subreg.sv:72$9448 ($dlatch) from module pwm.
Setting constant 0-bit at position 4 on $flatten\u_reg.\u_pwm_param_5_phase_delay_5.$verific$q_reg$prim_subreg.sv:72$9448 ($dlatch) from module pwm.
Setting constant 0-bit at position 5 on $flatten\u_reg.\u_pwm_param_5_phase_delay_5.$verific$q_reg$prim_subreg.sv:72$9448 ($dlatch) from module pwm.
Setting constant 0-bit at position 6 on $flatten\u_reg.\u_pwm_param_5_phase_delay_5.$verific$q_reg$prim_subreg.sv:72$9448 ($dlatch) from module pwm.
Setting constant 0-bit at position 7 on $flatten\u_reg.\u_pwm_param_5_phase_delay_5.$verific$q_reg$prim_subreg.sv:72$9448 ($dlatch) from module pwm.
Setting constant 0-bit at position 8 on $flatten\u_reg.\u_pwm_param_5_phase_delay_5.$verific$q_reg$prim_subreg.sv:72$9448 ($dlatch) from module pwm.
Setting constant 0-bit at position 9 on $flatten\u_reg.\u_pwm_param_5_phase_delay_5.$verific$q_reg$prim_subreg.sv:72$9448 ($dlatch) from module pwm.
Setting constant 0-bit at position 10 on $flatten\u_reg.\u_pwm_param_5_phase_delay_5.$verific$q_reg$prim_subreg.sv:72$9448 ($dlatch) from module pwm.
Setting constant 0-bit at position 11 on $flatten\u_reg.\u_pwm_param_5_phase_delay_5.$verific$q_reg$prim_subreg.sv:72$9448 ($dlatch) from module pwm.
Setting constant 0-bit at position 12 on $flatten\u_reg.\u_pwm_param_5_phase_delay_5.$verific$q_reg$prim_subreg.sv:72$9448 ($dlatch) from module pwm.
Setting constant 0-bit at position 13 on $flatten\u_reg.\u_pwm_param_5_phase_delay_5.$verific$q_reg$prim_subreg.sv:72$9448 ($dlatch) from module pwm.
Setting constant 0-bit at position 14 on $flatten\u_reg.\u_pwm_param_5_phase_delay_5.$verific$q_reg$prim_subreg.sv:72$9448 ($dlatch) from module pwm.
Setting constant 0-bit at position 15 on $flatten\u_reg.\u_pwm_param_5_phase_delay_5.$verific$q_reg$prim_subreg.sv:72$9448 ($dlatch) from module pwm.
Setting constant 1-bit at position 0 on $flatten\u_reg.\u_regwen.$verific$q_reg[0]$prim_subreg.sv:72$9429 ($dlatch) from module pwm.

yosys> opt_clean

3.30. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \pwm..
Removed 0 unused cells and 2 unused wires.
<suppressed ~1 debug messages>

yosys> opt_expr

3.31. Executing OPT_EXPR pass (perform const folding).
Optimizing module pwm.
<suppressed ~329 debug messages>

yosys> opt_muxtree

3.32. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \pwm..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
    dead port 1/2 on $mux $flatten\u_pwm_core.$verific$mux_65$pwm_core.sv:70$1684.
    dead port 2/2 on $mux $flatten\u_pwm_core.$verific$mux_65$pwm_core.sv:70$1684.
    dead port 2/2 on $mux $flatten\u_pwm_core.$verific$mux_66$pwm_core.sv:70$1685.
    dead port 1/2 on $mux $flatten\u_pwm_core.\gen_chan_insts[2].u_chan.$verific$mux_13$pwm_chan.sv:45$2489.
    dead port 2/2 on $mux $flatten\u_pwm_core.\gen_chan_insts[2].u_chan.$verific$mux_13$pwm_chan.sv:45$2489.
    dead port 1/2 on $mux $flatten\u_pwm_core.\gen_chan_insts[2].u_chan.$verific$mux_14$pwm_chan.sv:45$2490.
    dead port 2/2 on $mux $flatten\u_pwm_core.\gen_chan_insts[2].u_chan.$verific$mux_14$pwm_chan.sv:45$2490.
    dead port 1/2 on $mux $flatten\u_pwm_core.\gen_chan_insts[2].u_chan.$verific$mux_40$pwm_chan.sv:72$2509.
    dead port 2/2 on $mux $flatten\u_pwm_core.\gen_chan_insts[2].u_chan.$verific$mux_40$pwm_chan.sv:72$2509.
    dead port 1/2 on $mux $flatten\u_pwm_core.\gen_chan_insts[2].u_chan.$verific$mux_41$pwm_chan.sv:72$2510.
    dead port 2/2 on $mux $flatten\u_pwm_core.\gen_chan_insts[2].u_chan.$verific$mux_41$pwm_chan.sv:72$2510.
    dead port 1/2 on $mux $flatten\u_pwm_core.\gen_chan_insts[1].u_chan.$verific$mux_13$pwm_chan.sv:45$2489.
    dead port 2/2 on $mux $flatten\u_pwm_core.\gen_chan_insts[1].u_chan.$verific$mux_13$pwm_chan.sv:45$2489.
    dead port 1/2 on $mux $flatten\u_pwm_core.\gen_chan_insts[1].u_chan.$verific$mux_14$pwm_chan.sv:45$2490.
    dead port 2/2 on $mux $flatten\u_pwm_core.\gen_chan_insts[1].u_chan.$verific$mux_14$pwm_chan.sv:45$2490.
    dead port 1/2 on $mux $flatten\u_pwm_core.\gen_chan_insts[3].u_chan.$verific$mux_13$pwm_chan.sv:45$2489.
    dead port 2/2 on $mux $flatten\u_pwm_core.\gen_chan_insts[3].u_chan.$verific$mux_13$pwm_chan.sv:45$2489.
    dead port 1/2 on $mux $flatten\u_pwm_core.\gen_chan_insts[3].u_chan.$verific$mux_14$pwm_chan.sv:45$2490.
    dead port 2/2 on $mux $flatten\u_pwm_core.\gen_chan_insts[3].u_chan.$verific$mux_14$pwm_chan.sv:45$2490.
    dead port 1/2 on $mux $flatten\u_pwm_core.\gen_chan_insts[3].u_chan.$verific$mux_40$pwm_chan.sv:72$2509.
    dead port 2/2 on $mux $flatten\u_pwm_core.\gen_chan_insts[3].u_chan.$verific$mux_40$pwm_chan.sv:72$2509.
    dead port 1/2 on $mux $flatten\u_pwm_core.\gen_chan_insts[3].u_chan.$verific$mux_41$pwm_chan.sv:72$2510.
    dead port 2/2 on $mux $flatten\u_pwm_core.\gen_chan_insts[3].u_chan.$verific$mux_41$pwm_chan.sv:72$2510.
    dead port 1/2 on $mux $flatten\u_pwm_core.\gen_chan_insts[1].u_chan.$verific$mux_40$pwm_chan.sv:72$2509.
    dead port 2/2 on $mux $flatten\u_pwm_core.\gen_chan_insts[1].u_chan.$verific$mux_40$pwm_chan.sv:72$2509.
    dead port 1/2 on $mux $flatten\u_pwm_core.\gen_chan_insts[1].u_chan.$verific$mux_41$pwm_chan.sv:72$2510.
    dead port 2/2 on $mux $flatten\u_pwm_core.\gen_chan_insts[1].u_chan.$verific$mux_41$pwm_chan.sv:72$2510.
    dead port 1/2 on $mux $flatten\u_pwm_core.\gen_chan_insts[0].u_chan.$verific$mux_40$pwm_chan.sv:72$2509.
    dead port 2/2 on $mux $flatten\u_pwm_core.\gen_chan_insts[0].u_chan.$verific$mux_40$pwm_chan.sv:72$2509.
    dead port 1/2 on $mux $flatten\u_pwm_core.\gen_chan_insts[0].u_chan.$verific$mux_14$pwm_chan.sv:45$2490.
    dead port 2/2 on $mux $flatten\u_pwm_core.\gen_chan_insts[0].u_chan.$verific$mux_14$pwm_chan.sv:45$2490.
    dead port 1/2 on $mux $flatten\u_pwm_core.\gen_chan_insts[0].u_chan.$verific$mux_41$pwm_chan.sv:72$2510.
    dead port 2/2 on $mux $flatten\u_pwm_core.\gen_chan_insts[0].u_chan.$verific$mux_41$pwm_chan.sv:72$2510.
    dead port 1/2 on $mux $flatten\u_pwm_core.\gen_chan_insts[4].u_chan.$verific$mux_13$pwm_chan.sv:45$2489.
    dead port 2/2 on $mux $flatten\u_pwm_core.\gen_chan_insts[4].u_chan.$verific$mux_13$pwm_chan.sv:45$2489.
    dead port 1/2 on $mux $flatten\u_pwm_core.\gen_chan_insts[4].u_chan.$verific$mux_14$pwm_chan.sv:45$2490.
    dead port 2/2 on $mux $flatten\u_pwm_core.\gen_chan_insts[4].u_chan.$verific$mux_14$pwm_chan.sv:45$2490.
    dead port 1/2 on $mux $flatten\u_pwm_core.\gen_chan_insts[0].u_chan.$verific$mux_13$pwm_chan.sv:45$2489.
    dead port 2/2 on $mux $flatten\u_pwm_core.\gen_chan_insts[0].u_chan.$verific$mux_13$pwm_chan.sv:45$2489.
    dead port 1/2 on $mux $flatten\u_pwm_core.\gen_chan_insts[4].u_chan.$verific$mux_40$pwm_chan.sv:72$2509.
    dead port 2/2 on $mux $flatten\u_pwm_core.\gen_chan_insts[4].u_chan.$verific$mux_40$pwm_chan.sv:72$2509.
    dead port 1/2 on $mux $flatten\u_pwm_core.\gen_chan_insts[4].u_chan.$verific$mux_41$pwm_chan.sv:72$2510.
    dead port 2/2 on $mux $flatten\u_pwm_core.\gen_chan_insts[4].u_chan.$verific$mux_41$pwm_chan.sv:72$2510.
    dead port 1/2 on $mux $flatten\u_pwm_core.\gen_chan_insts[5].u_chan.$verific$mux_13$pwm_chan.sv:45$2489.
    dead port 2/2 on $mux $flatten\u_pwm_core.\gen_chan_insts[5].u_chan.$verific$mux_13$pwm_chan.sv:45$2489.
    dead port 1/2 on $mux $flatten\u_pwm_core.\gen_chan_insts[5].u_chan.$verific$mux_14$pwm_chan.sv:45$2490.
    dead port 2/2 on $mux $flatten\u_pwm_core.\gen_chan_insts[5].u_chan.$verific$mux_14$pwm_chan.sv:45$2490.
    dead port 1/2 on $mux $flatten\u_pwm_core.\gen_chan_insts[5].u_chan.$verific$mux_40$pwm_chan.sv:72$2509.
    dead port 2/2 on $mux $flatten\u_pwm_core.\gen_chan_insts[5].u_chan.$verific$mux_40$pwm_chan.sv:72$2509.
    dead port 1/2 on $mux $flatten\u_pwm_core.\gen_chan_insts[5].u_chan.$verific$mux_41$pwm_chan.sv:72$2510.
    dead port 2/2 on $mux $flatten\u_pwm_core.\gen_chan_insts[5].u_chan.$verific$mux_41$pwm_chan.sv:72$2510.
Removed 51 multiplexer ports.
<suppressed ~251 debug messages>

yosys> opt_reduce

3.33. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \pwm.
Performed a total of 0 changes.

yosys> opt_merge

3.34. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\pwm'.
<suppressed ~75 debug messages>
Removed a total of 25 cells.

yosys> opt_share

3.35. Executing OPT_SHARE pass.

yosys> opt_dff -nosdff -nodffe

3.36. Executing OPT_DFF pass (perform DFF optimizations).

yosys> opt_clean

3.37. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \pwm..
Removed 317 unused cells and 739 unused wires.
<suppressed ~600 debug messages>

yosys> opt_expr

3.38. Executing OPT_EXPR pass (perform const folding).
Optimizing module pwm.

yosys> opt_muxtree

3.39. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \pwm..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Removed 0 multiplexer ports.
<suppressed ~204 debug messages>

yosys> opt_reduce

3.40. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \pwm.
Performed a total of 0 changes.

yosys> opt_merge

3.41. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\pwm'.
Removed a total of 0 cells.

yosys> opt_share

3.42. Executing OPT_SHARE pass.

yosys> opt_dff -nosdff -nodffe

3.43. Executing OPT_DFF pass (perform DFF optimizations).

yosys> opt_clean

3.44. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \pwm..

yosys> opt_expr

3.45. Executing OPT_EXPR pass (perform const folding).
Optimizing module pwm.
MAX OPT ITERATION = 4

yosys> fsm -encoding binary

3.46. Executing FSM pass (extract and optimize FSM).

yosys> fsm_detect

3.46.1. Executing FSM_DETECT pass (finding FSMs in design).

yosys> fsm_extract

3.46.2. Executing FSM_EXTRACT pass (extracting FSM from design).

yosys> fsm_opt

3.46.3. Executing FSM_OPT pass (simple optimizations of FSMs).

yosys> opt_clean

3.46.4. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \pwm..

yosys> fsm_opt

3.46.5. Executing FSM_OPT pass (simple optimizations of FSMs).

yosys> fsm_recode -encoding binary

3.46.6. Executing FSM_RECODE pass (re-assigning FSM state encoding).

yosys> fsm_info

3.46.7. Executing FSM_INFO pass (dumping all available information on FSM cells).

yosys> fsm_map

3.46.8. Executing FSM_MAP pass (mapping FSMs to basic logic).

yosys> opt_expr

3.47. Executing OPT_EXPR pass (perform const folding).
Optimizing module pwm.

yosys> opt_merge -nomux

3.48. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\pwm'.
Removed a total of 0 cells.

yosys> opt_muxtree

3.49. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \pwm..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Removed 0 multiplexer ports.
<suppressed ~204 debug messages>

yosys> opt_reduce

3.50. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \pwm.
Performed a total of 0 changes.

yosys> opt_merge

3.51. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\pwm'.
Removed a total of 0 cells.

yosys> opt_share

3.52. Executing OPT_SHARE pass.

yosys> opt_dff -nosdff -sat

3.53. Executing OPT_DFF pass (perform DFF optimizations).
Adding EN signal on $flatten\u_reg.\u_reg_if.$verific$rspop_reg$tlul_adapter_reg.sv:80$9661 ($adff) from module pwm (D = { 2'00 \u_reg.u_reg_if.rd_req }, Q = \u_reg.u_reg_if.rspop).
Adding EN signal on $flatten\u_reg.\u_reg_if.$verific$reqsz_reg$tlul_adapter_reg.sv:80$9660 ($adff) from module pwm (D = \tl_i.a_size, Q = \u_reg.u_reg_if.reqsz).
Adding EN signal on $flatten\u_reg.\u_reg_if.$verific$reqid_reg$tlul_adapter_reg.sv:80$9659 ($adff) from module pwm (D = \tl_i.a_source, Q = \u_reg.u_reg_if.reqid).
Adding EN signal on $flatten\u_reg.\u_reg_if.$verific$rdata_reg$tlul_adapter_reg.sv:90$9669 ($adff) from module pwm (D = $flatten\u_reg.\u_reg_if.$verific$n182$9619, Q = \u_reg.u_reg_if.rdata).
Adding EN signal on $flatten\u_reg.\u_reg_if.$verific$outstanding_reg$tlul_adapter_reg.sv:67$9649 ($adff) from module pwm (D = $flatten\u_reg.\u_reg_if.$verific$n75$9599, Q = \u_reg.u_reg_if.outstanding).
Adding EN signal on $flatten\u_reg.\u_reg_if.$verific$error_reg$tlul_adapter_reg.sv:90$9670 ($adff) from module pwm (D = $flatten\u_reg.\u_reg_if.$verific$n248$9601, Q = \u_reg.u_reg_if.error).
Adding EN signal on $flatten\u_reg.\u_pwm_param_5_cdc.$verific$src_q_reg$prim_reg_cdc.sv:98$9160 ($adff) from module pwm (D = $flatten\u_reg.\u_pwm_param_5_cdc.$verific$n177$9129, Q = \u_reg.u_pwm_param_5_cdc.src_q).
Adding EN signal on $flatten\u_reg.\u_pwm_param_5_cdc.$verific$src_busy_q_reg$prim_reg_cdc.sv:55$9142 ($adff) from module pwm (D = $flatten\u_reg.\u_pwm_param_5_cdc.$verific$n14$9112, Q = \u_reg.u_pwm_param_5_cdc.src_busy_q).
Adding EN signal on $flatten\u_reg.\u_pwm_param_4_cdc.$verific$src_q_reg$prim_reg_cdc.sv:98$9160 ($adff) from module pwm (D = $flatten\u_reg.\u_pwm_param_4_cdc.$verific$n177$9129, Q = \u_reg.u_pwm_param_4_cdc.src_q).
Adding EN signal on $flatten\u_reg.\u_pwm_param_4_cdc.$verific$src_busy_q_reg$prim_reg_cdc.sv:55$9142 ($adff) from module pwm (D = $flatten\u_reg.\u_pwm_param_4_cdc.$verific$n14$9112, Q = \u_reg.u_pwm_param_4_cdc.src_busy_q).
Adding EN signal on $flatten\u_reg.\u_pwm_param_3_cdc.$verific$src_q_reg$prim_reg_cdc.sv:98$9160 ($adff) from module pwm (D = $flatten\u_reg.\u_pwm_param_3_cdc.$verific$n177$9129, Q = \u_reg.u_pwm_param_3_cdc.src_q).
Adding EN signal on $flatten\u_reg.\u_pwm_param_3_cdc.$verific$src_busy_q_reg$prim_reg_cdc.sv:55$9142 ($adff) from module pwm (D = $flatten\u_reg.\u_pwm_param_3_cdc.$verific$n14$9112, Q = \u_reg.u_pwm_param_3_cdc.src_busy_q).
Adding EN signal on $flatten\u_reg.\u_pwm_param_2_cdc.$verific$src_q_reg$prim_reg_cdc.sv:98$9160 ($adff) from module pwm (D = $flatten\u_reg.\u_pwm_param_2_cdc.$verific$n177$9129, Q = \u_reg.u_pwm_param_2_cdc.src_q).
Adding EN signal on $flatten\u_reg.\u_pwm_param_2_cdc.$verific$src_busy_q_reg$prim_reg_cdc.sv:55$9142 ($adff) from module pwm (D = $flatten\u_reg.\u_pwm_param_2_cdc.$verific$n14$9112, Q = \u_reg.u_pwm_param_2_cdc.src_busy_q).
Adding EN signal on $flatten\u_reg.\u_pwm_param_1_cdc.$verific$src_q_reg$prim_reg_cdc.sv:98$9160 ($adff) from module pwm (D = $flatten\u_reg.\u_pwm_param_1_cdc.$verific$n177$9129, Q = \u_reg.u_pwm_param_1_cdc.src_q).
Adding EN signal on $flatten\u_reg.\u_pwm_param_1_cdc.$verific$src_busy_q_reg$prim_reg_cdc.sv:55$9142 ($adff) from module pwm (D = $flatten\u_reg.\u_pwm_param_1_cdc.$verific$n14$9112, Q = \u_reg.u_pwm_param_1_cdc.src_busy_q).
Adding EN signal on $flatten\u_reg.\u_pwm_param_0_cdc.$verific$src_q_reg$prim_reg_cdc.sv:98$9160 ($adff) from module pwm (D = $flatten\u_reg.\u_pwm_param_0_cdc.$verific$n177$9129, Q = \u_reg.u_pwm_param_0_cdc.src_q).
Adding EN signal on $flatten\u_reg.\u_pwm_param_0_cdc.$verific$src_busy_q_reg$prim_reg_cdc.sv:55$9142 ($adff) from module pwm (D = $flatten\u_reg.\u_pwm_param_0_cdc.$verific$n14$9112, Q = \u_reg.u_pwm_param_0_cdc.src_busy_q).
Adding EN signal on $flatten\u_reg.\u_pwm_en_cdc.$verific$src_q_reg$prim_reg_cdc.sv:98$9232 ($adff) from module pwm (D = $flatten\u_reg.\u_pwm_en_cdc.$verific$n73$9201, Q = \u_reg.u_pwm_en_cdc.src_q).
Adding EN signal on $flatten\u_reg.\u_pwm_en_cdc.$verific$src_busy_q_reg$prim_reg_cdc.sv:55$9214 ($adff) from module pwm (D = $flatten\u_reg.\u_pwm_en_cdc.$verific$n14$9184, Q = \u_reg.u_pwm_en_cdc.src_busy_q).
Adding EN signal on $flatten\u_reg.\u_invert_cdc.$verific$src_q_reg$prim_reg_cdc.sv:98$9232 ($adff) from module pwm (D = $flatten\u_reg.\u_invert_cdc.$verific$n73$9201, Q = \u_reg.u_invert_cdc.src_q).
Adding EN signal on $flatten\u_reg.\u_invert_cdc.$verific$src_busy_q_reg$prim_reg_cdc.sv:55$9214 ($adff) from module pwm (D = $flatten\u_reg.\u_invert_cdc.$verific$n14$9184, Q = \u_reg.u_invert_cdc.src_busy_q).
Adding EN signal on $flatten\u_reg.\u_duty_cycle_5_cdc.$verific$src_q_reg$prim_reg_cdc.sv:98$9376 ($adff) from module pwm (D = $flatten\u_reg.\u_duty_cycle_5_cdc.$verific$n177$9345, Q = \u_reg.u_duty_cycle_5_cdc.src_q).
Adding EN signal on $flatten\u_reg.\u_duty_cycle_5_cdc.$verific$src_busy_q_reg$prim_reg_cdc.sv:55$9358 ($adff) from module pwm (D = $flatten\u_reg.\u_duty_cycle_5_cdc.$verific$n14$9328, Q = \u_reg.u_duty_cycle_5_cdc.src_busy_q).
Adding EN signal on $flatten\u_reg.\u_duty_cycle_4_cdc.$verific$src_q_reg$prim_reg_cdc.sv:98$9376 ($adff) from module pwm (D = $flatten\u_reg.\u_duty_cycle_4_cdc.$verific$n177$9345, Q = \u_reg.u_duty_cycle_4_cdc.src_q).
Adding EN signal on $flatten\u_reg.\u_duty_cycle_4_cdc.$verific$src_busy_q_reg$prim_reg_cdc.sv:55$9358 ($adff) from module pwm (D = $flatten\u_reg.\u_duty_cycle_4_cdc.$verific$n14$9328, Q = \u_reg.u_duty_cycle_4_cdc.src_busy_q).
Adding EN signal on $flatten\u_reg.\u_duty_cycle_3_cdc.$verific$src_q_reg$prim_reg_cdc.sv:98$9376 ($adff) from module pwm (D = $flatten\u_reg.\u_duty_cycle_3_cdc.$verific$n177$9345, Q = \u_reg.u_duty_cycle_3_cdc.src_q).
Adding EN signal on $flatten\u_reg.\u_duty_cycle_3_cdc.$verific$src_busy_q_reg$prim_reg_cdc.sv:55$9358 ($adff) from module pwm (D = $flatten\u_reg.\u_duty_cycle_3_cdc.$verific$n14$9328, Q = \u_reg.u_duty_cycle_3_cdc.src_busy_q).
Adding EN signal on $flatten\u_reg.\u_duty_cycle_2_cdc.$verific$src_q_reg$prim_reg_cdc.sv:98$9376 ($adff) from module pwm (D = $flatten\u_reg.\u_duty_cycle_2_cdc.$verific$n177$9345, Q = \u_reg.u_duty_cycle_2_cdc.src_q).
Adding EN signal on $flatten\u_reg.\u_duty_cycle_2_cdc.$verific$src_busy_q_reg$prim_reg_cdc.sv:55$9358 ($adff) from module pwm (D = $flatten\u_reg.\u_duty_cycle_2_cdc.$verific$n14$9328, Q = \u_reg.u_duty_cycle_2_cdc.src_busy_q).
Adding EN signal on $flatten\u_reg.\u_duty_cycle_1_cdc.$verific$src_q_reg$prim_reg_cdc.sv:98$9376 ($adff) from module pwm (D = $flatten\u_reg.\u_duty_cycle_1_cdc.$verific$n177$9345, Q = \u_reg.u_duty_cycle_1_cdc.src_q).
Adding EN signal on $flatten\u_reg.\u_duty_cycle_1_cdc.$verific$src_busy_q_reg$prim_reg_cdc.sv:55$9358 ($adff) from module pwm (D = $flatten\u_reg.\u_duty_cycle_1_cdc.$verific$n14$9328, Q = \u_reg.u_duty_cycle_1_cdc.src_busy_q).
Adding EN signal on $flatten\u_reg.\u_duty_cycle_0_cdc.$verific$src_q_reg$prim_reg_cdc.sv:98$9376 ($adff) from module pwm (D = $flatten\u_reg.\u_duty_cycle_0_cdc.$verific$n177$9345, Q = \u_reg.u_duty_cycle_0_cdc.src_q).
Adding EN signal on $flatten\u_reg.\u_duty_cycle_0_cdc.$verific$src_busy_q_reg$prim_reg_cdc.sv:55$9358 ($adff) from module pwm (D = $flatten\u_reg.\u_duty_cycle_0_cdc.$verific$n14$9328, Q = \u_reg.u_duty_cycle_0_cdc.src_busy_q).
Adding EN signal on $flatten\u_reg.\u_cfg_cdc.$verific$src_q_reg$prim_reg_cdc.sv:98$9304 ($adff) from module pwm (D = $flatten\u_reg.\u_cfg_cdc.$verific$n177$9273, Q = \u_reg.u_cfg_cdc.src_q).
Adding EN signal on $flatten\u_reg.\u_cfg_cdc.$verific$src_busy_q_reg$prim_reg_cdc.sv:55$9286 ($adff) from module pwm (D = $flatten\u_reg.\u_cfg_cdc.$verific$n14$9256, Q = \u_reg.u_cfg_cdc.src_busy_q).
Adding EN signal on $flatten\u_reg.\u_blink_param_5_cdc.$verific$src_q_reg$prim_reg_cdc.sv:98$9088 ($adff) from module pwm (D = $flatten\u_reg.\u_blink_param_5_cdc.$verific$n177$9057, Q = \u_reg.u_blink_param_5_cdc.src_q).
Adding EN signal on $flatten\u_reg.\u_blink_param_5_cdc.$verific$src_busy_q_reg$prim_reg_cdc.sv:55$9070 ($adff) from module pwm (D = $flatten\u_reg.\u_blink_param_5_cdc.$verific$n14$9040, Q = \u_reg.u_blink_param_5_cdc.src_busy_q).
Adding EN signal on $flatten\u_reg.\u_blink_param_4_cdc.$verific$src_q_reg$prim_reg_cdc.sv:98$9088 ($adff) from module pwm (D = $flatten\u_reg.\u_blink_param_4_cdc.$verific$n177$9057, Q = \u_reg.u_blink_param_4_cdc.src_q).
Adding EN signal on $flatten\u_reg.\u_blink_param_4_cdc.$verific$src_busy_q_reg$prim_reg_cdc.sv:55$9070 ($adff) from module pwm (D = $flatten\u_reg.\u_blink_param_4_cdc.$verific$n14$9040, Q = \u_reg.u_blink_param_4_cdc.src_busy_q).
Adding EN signal on $flatten\u_reg.\u_blink_param_3_cdc.$verific$src_q_reg$prim_reg_cdc.sv:98$9088 ($adff) from module pwm (D = $flatten\u_reg.\u_blink_param_3_cdc.$verific$n177$9057, Q = \u_reg.u_blink_param_3_cdc.src_q).
Adding EN signal on $flatten\u_reg.\u_blink_param_3_cdc.$verific$src_busy_q_reg$prim_reg_cdc.sv:55$9070 ($adff) from module pwm (D = $flatten\u_reg.\u_blink_param_3_cdc.$verific$n14$9040, Q = \u_reg.u_blink_param_3_cdc.src_busy_q).
Adding EN signal on $flatten\u_reg.\u_blink_param_2_cdc.$verific$src_q_reg$prim_reg_cdc.sv:98$9088 ($adff) from module pwm (D = $flatten\u_reg.\u_blink_param_2_cdc.$verific$n177$9057, Q = \u_reg.u_blink_param_2_cdc.src_q).
Adding EN signal on $flatten\u_reg.\u_blink_param_2_cdc.$verific$src_busy_q_reg$prim_reg_cdc.sv:55$9070 ($adff) from module pwm (D = $flatten\u_reg.\u_blink_param_2_cdc.$verific$n14$9040, Q = \u_reg.u_blink_param_2_cdc.src_busy_q).
Adding EN signal on $flatten\u_reg.\u_blink_param_1_cdc.$verific$src_q_reg$prim_reg_cdc.sv:98$9088 ($adff) from module pwm (D = $flatten\u_reg.\u_blink_param_1_cdc.$verific$n177$9057, Q = \u_reg.u_blink_param_1_cdc.src_q).
Adding EN signal on $flatten\u_reg.\u_blink_param_1_cdc.$verific$src_busy_q_reg$prim_reg_cdc.sv:55$9070 ($adff) from module pwm (D = $flatten\u_reg.\u_blink_param_1_cdc.$verific$n14$9040, Q = \u_reg.u_blink_param_1_cdc.src_busy_q).
Adding EN signal on $flatten\u_reg.\u_blink_param_0_cdc.$verific$src_q_reg$prim_reg_cdc.sv:98$9088 ($adff) from module pwm (D = $flatten\u_reg.\u_blink_param_0_cdc.$verific$n177$9057, Q = \u_reg.u_blink_param_0_cdc.src_q).
Adding EN signal on $flatten\u_reg.\u_blink_param_0_cdc.$verific$src_busy_q_reg$prim_reg_cdc.sv:55$9070 ($adff) from module pwm (D = $flatten\u_reg.\u_blink_param_0_cdc.$verific$n14$9040, Q = \u_reg.u_blink_param_0_cdc.src_busy_q).
Adding EN signal on $flatten\u_reg.$verific$intg_err_q_reg$pwm_reg_top.sv:62$3081 ($adff) from module pwm (D = 1'1, Q = \u_reg.intg_err_q).
Adding EN signal on $flatten\gen_alert_tx[0].u_prim_alert_sender.\i_decode_ping.$verific$gen_async.state_q_reg$prim_diff_decode.sv:172$1586 ($adff) from module pwm (D = \gen_alert_tx[0].u_prim_alert_sender.i_decode_ping.gen_async.state_d, Q = \gen_alert_tx[0].u_prim_alert_sender.i_decode_ping.gen_async.state_q).
Adding EN signal on $flatten\gen_alert_tx[0].u_prim_alert_sender.\i_decode_ack.$verific$gen_async.state_q_reg$prim_diff_decode.sv:172$1586 ($adff) from module pwm (D = \gen_alert_tx[0].u_prim_alert_sender.i_decode_ack.gen_async.state_d, Q = \gen_alert_tx[0].u_prim_alert_sender.i_decode_ack.gen_async.state_q).
Adding EN signal on $flatten\gen_alert_tx[0].u_prim_alert_sender.$verific$state_q_reg$prim_alert_sender.sv:235$1496 ($adff) from module pwm (D = \gen_alert_tx[0].u_prim_alert_sender.state_d, Q = \gen_alert_tx[0].u_prim_alert_sender.state_q).
Setting constant 0-bit at position 16 on $auto$ff.cc:262:slice$10770 ($adffe) from module pwm.
Setting constant 0-bit at position 17 on $auto$ff.cc:262:slice$10770 ($adffe) from module pwm.
Setting constant 0-bit at position 18 on $auto$ff.cc:262:slice$10770 ($adffe) from module pwm.
Setting constant 0-bit at position 19 on $auto$ff.cc:262:slice$10770 ($adffe) from module pwm.
Setting constant 0-bit at position 20 on $auto$ff.cc:262:slice$10770 ($adffe) from module pwm.
Setting constant 0-bit at position 21 on $auto$ff.cc:262:slice$10770 ($adffe) from module pwm.
Setting constant 0-bit at position 22 on $auto$ff.cc:262:slice$10770 ($adffe) from module pwm.
Setting constant 0-bit at position 23 on $auto$ff.cc:262:slice$10770 ($adffe) from module pwm.
Setting constant 0-bit at position 24 on $auto$ff.cc:262:slice$10770 ($adffe) from module pwm.
Setting constant 0-bit at position 25 on $auto$ff.cc:262:slice$10770 ($adffe) from module pwm.
Setting constant 0-bit at position 26 on $auto$ff.cc:262:slice$10770 ($adffe) from module pwm.
Setting constant 0-bit at position 27 on $auto$ff.cc:262:slice$10770 ($adffe) from module pwm.
Setting constant 0-bit at position 28 on $auto$ff.cc:262:slice$10770 ($adffe) from module pwm.
Setting constant 0-bit at position 29 on $auto$ff.cc:262:slice$10770 ($adffe) from module pwm.
Setting constant 0-bit at position 16 on $auto$ff.cc:262:slice$10764 ($adffe) from module pwm.
Setting constant 0-bit at position 17 on $auto$ff.cc:262:slice$10764 ($adffe) from module pwm.
Setting constant 0-bit at position 18 on $auto$ff.cc:262:slice$10764 ($adffe) from module pwm.
Setting constant 0-bit at position 19 on $auto$ff.cc:262:slice$10764 ($adffe) from module pwm.
Setting constant 0-bit at position 20 on $auto$ff.cc:262:slice$10764 ($adffe) from module pwm.
Setting constant 0-bit at position 21 on $auto$ff.cc:262:slice$10764 ($adffe) from module pwm.
Setting constant 0-bit at position 22 on $auto$ff.cc:262:slice$10764 ($adffe) from module pwm.
Setting constant 0-bit at position 23 on $auto$ff.cc:262:slice$10764 ($adffe) from module pwm.
Setting constant 0-bit at position 24 on $auto$ff.cc:262:slice$10764 ($adffe) from module pwm.
Setting constant 0-bit at position 25 on $auto$ff.cc:262:slice$10764 ($adffe) from module pwm.
Setting constant 0-bit at position 26 on $auto$ff.cc:262:slice$10764 ($adffe) from module pwm.
Setting constant 0-bit at position 27 on $auto$ff.cc:262:slice$10764 ($adffe) from module pwm.
Setting constant 0-bit at position 28 on $auto$ff.cc:262:slice$10764 ($adffe) from module pwm.
Setting constant 0-bit at position 29 on $auto$ff.cc:262:slice$10764 ($adffe) from module pwm.
Setting constant 0-bit at position 16 on $auto$ff.cc:262:slice$10758 ($adffe) from module pwm.
Setting constant 0-bit at position 17 on $auto$ff.cc:262:slice$10758 ($adffe) from module pwm.
Setting constant 0-bit at position 18 on $auto$ff.cc:262:slice$10758 ($adffe) from module pwm.
Setting constant 0-bit at position 19 on $auto$ff.cc:262:slice$10758 ($adffe) from module pwm.
Setting constant 0-bit at position 20 on $auto$ff.cc:262:slice$10758 ($adffe) from module pwm.
Setting constant 0-bit at position 21 on $auto$ff.cc:262:slice$10758 ($adffe) from module pwm.
Setting constant 0-bit at position 22 on $auto$ff.cc:262:slice$10758 ($adffe) from module pwm.
Setting constant 0-bit at position 23 on $auto$ff.cc:262:slice$10758 ($adffe) from module pwm.
Setting constant 0-bit at position 24 on $auto$ff.cc:262:slice$10758 ($adffe) from module pwm.
Setting constant 0-bit at position 25 on $auto$ff.cc:262:slice$10758 ($adffe) from module pwm.
Setting constant 0-bit at position 26 on $auto$ff.cc:262:slice$10758 ($adffe) from module pwm.
Setting constant 0-bit at position 27 on $auto$ff.cc:262:slice$10758 ($adffe) from module pwm.
Setting constant 0-bit at position 28 on $auto$ff.cc:262:slice$10758 ($adffe) from module pwm.
Setting constant 0-bit at position 29 on $auto$ff.cc:262:slice$10758 ($adffe) from module pwm.
Setting constant 0-bit at position 16 on $auto$ff.cc:262:slice$10752 ($adffe) from module pwm.
Setting constant 0-bit at position 17 on $auto$ff.cc:262:slice$10752 ($adffe) from module pwm.
Setting constant 0-bit at position 18 on $auto$ff.cc:262:slice$10752 ($adffe) from module pwm.
Setting constant 0-bit at position 19 on $auto$ff.cc:262:slice$10752 ($adffe) from module pwm.
Setting constant 0-bit at position 20 on $auto$ff.cc:262:slice$10752 ($adffe) from module pwm.
Setting constant 0-bit at position 21 on $auto$ff.cc:262:slice$10752 ($adffe) from module pwm.
Setting constant 0-bit at position 22 on $auto$ff.cc:262:slice$10752 ($adffe) from module pwm.
Setting constant 0-bit at position 23 on $auto$ff.cc:262:slice$10752 ($adffe) from module pwm.
Setting constant 0-bit at position 24 on $auto$ff.cc:262:slice$10752 ($adffe) from module pwm.
Setting constant 0-bit at position 25 on $auto$ff.cc:262:slice$10752 ($adffe) from module pwm.
Setting constant 0-bit at position 26 on $auto$ff.cc:262:slice$10752 ($adffe) from module pwm.
Setting constant 0-bit at position 27 on $auto$ff.cc:262:slice$10752 ($adffe) from module pwm.
Setting constant 0-bit at position 28 on $auto$ff.cc:262:slice$10752 ($adffe) from module pwm.
Setting constant 0-bit at position 29 on $auto$ff.cc:262:slice$10752 ($adffe) from module pwm.
Setting constant 0-bit at position 16 on $auto$ff.cc:262:slice$10746 ($adffe) from module pwm.
Setting constant 0-bit at position 17 on $auto$ff.cc:262:slice$10746 ($adffe) from module pwm.
Setting constant 0-bit at position 18 on $auto$ff.cc:262:slice$10746 ($adffe) from module pwm.
Setting constant 0-bit at position 19 on $auto$ff.cc:262:slice$10746 ($adffe) from module pwm.
Setting constant 0-bit at position 20 on $auto$ff.cc:262:slice$10746 ($adffe) from module pwm.
Setting constant 0-bit at position 21 on $auto$ff.cc:262:slice$10746 ($adffe) from module pwm.
Setting constant 0-bit at position 22 on $auto$ff.cc:262:slice$10746 ($adffe) from module pwm.
Setting constant 0-bit at position 23 on $auto$ff.cc:262:slice$10746 ($adffe) from module pwm.
Setting constant 0-bit at position 24 on $auto$ff.cc:262:slice$10746 ($adffe) from module pwm.
Setting constant 0-bit at position 25 on $auto$ff.cc:262:slice$10746 ($adffe) from module pwm.
Setting constant 0-bit at position 26 on $auto$ff.cc:262:slice$10746 ($adffe) from module pwm.
Setting constant 0-bit at position 27 on $auto$ff.cc:262:slice$10746 ($adffe) from module pwm.
Setting constant 0-bit at position 28 on $auto$ff.cc:262:slice$10746 ($adffe) from module pwm.
Setting constant 0-bit at position 29 on $auto$ff.cc:262:slice$10746 ($adffe) from module pwm.
Setting constant 0-bit at position 16 on $auto$ff.cc:262:slice$10740 ($adffe) from module pwm.
Setting constant 0-bit at position 17 on $auto$ff.cc:262:slice$10740 ($adffe) from module pwm.
Setting constant 0-bit at position 18 on $auto$ff.cc:262:slice$10740 ($adffe) from module pwm.
Setting constant 0-bit at position 19 on $auto$ff.cc:262:slice$10740 ($adffe) from module pwm.
Setting constant 0-bit at position 20 on $auto$ff.cc:262:slice$10740 ($adffe) from module pwm.
Setting constant 0-bit at position 21 on $auto$ff.cc:262:slice$10740 ($adffe) from module pwm.
Setting constant 0-bit at position 22 on $auto$ff.cc:262:slice$10740 ($adffe) from module pwm.
Setting constant 0-bit at position 23 on $auto$ff.cc:262:slice$10740 ($adffe) from module pwm.
Setting constant 0-bit at position 24 on $auto$ff.cc:262:slice$10740 ($adffe) from module pwm.
Setting constant 0-bit at position 25 on $auto$ff.cc:262:slice$10740 ($adffe) from module pwm.
Setting constant 0-bit at position 26 on $auto$ff.cc:262:slice$10740 ($adffe) from module pwm.
Setting constant 0-bit at position 27 on $auto$ff.cc:262:slice$10740 ($adffe) from module pwm.
Setting constant 0-bit at position 28 on $auto$ff.cc:262:slice$10740 ($adffe) from module pwm.
Setting constant 0-bit at position 29 on $auto$ff.cc:262:slice$10740 ($adffe) from module pwm.
Setting constant 0-bit at position 1 on $auto$ff.cc:262:slice$10732 ($adffe) from module pwm.
Setting constant 0-bit at position 2 on $auto$ff.cc:262:slice$10732 ($adffe) from module pwm.

yosys> opt_clean

3.54. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \pwm..
Removed 6 unused cells and 6 unused wires.
<suppressed ~7 debug messages>

yosys> opt_expr

3.55. Executing OPT_EXPR pass (perform const folding).
Optimizing module pwm.
<suppressed ~44 debug messages>

yosys> opt_muxtree

3.56. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \pwm..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Removed 0 multiplexer ports.
<suppressed ~199 debug messages>

yosys> opt_reduce

3.57. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \pwm.
Performed a total of 0 changes.

yosys> opt_merge

3.58. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\pwm'.
<suppressed ~3 debug messages>
Removed a total of 1 cells.

yosys> opt_share

3.59. Executing OPT_SHARE pass.

yosys> opt_dff -nosdff -sat

3.60. Executing OPT_DFF pass (perform DFF optimizations).

yosys> opt_clean

3.61. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \pwm..
Removed 0 unused cells and 1 unused wires.
<suppressed ~1 debug messages>

yosys> opt_expr

3.62. Executing OPT_EXPR pass (perform const folding).
Optimizing module pwm.

yosys> opt_muxtree

3.63. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \pwm..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Removed 0 multiplexer ports.
<suppressed ~199 debug messages>

yosys> opt_reduce

3.64. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \pwm.
Performed a total of 0 changes.

yosys> opt_merge

3.65. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\pwm'.
Removed a total of 0 cells.

yosys> opt_share

3.66. Executing OPT_SHARE pass.

yosys> opt_dff -nosdff -sat

3.67. Executing OPT_DFF pass (perform DFF optimizations).

yosys> opt_clean

3.68. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \pwm..

yosys> opt_expr

3.69. Executing OPT_EXPR pass (perform const folding).
Optimizing module pwm.
MAX OPT ITERATION = 3

yosys> wreduce -keepdc

3.70. Executing WREDUCE pass (reducing word size of cells).
Removed top 1 bits (of 3) from port B of cell pwm.$auto$opt_dff.cc:195:make_patterns_logic$10871 ($ne).
Removed top 2 bits (of 3) from port B of cell pwm.$auto$opt_dff.cc:195:make_patterns_logic$10878 ($ne).
Removed top 2 bits (of 5) from port B of cell pwm.$auto$opt_dff.cc:195:make_patterns_logic$10883 ($ne).
Removed top 1 bits (of 5) from port B of cell pwm.$auto$opt_dff.cc:195:make_patterns_logic$10885 ($ne).
Removed top 2 bits (of 3) from port B of cell pwm.$flatten\u_reg.\u_reg_if.$verific$equal_8$tlul_adapter_reg.sv:55$9629 ($eq).
Removed top 4 bits (of 5) from port B of cell pwm.$flatten\u_reg.$verific$equal_261$pwm_reg_top.sv:2554$8723 ($eq).
Removed top 3 bits (of 5) from port B of cell pwm.$flatten\u_reg.$verific$equal_263$pwm_reg_top.sv:2555$8724 ($eq).
Removed top 3 bits (of 5) from port B of cell pwm.$flatten\u_reg.$verific$equal_265$pwm_reg_top.sv:2556$8725 ($eq).
Removed top 2 bits (of 5) from port B of cell pwm.$flatten\u_reg.$verific$equal_267$pwm_reg_top.sv:2557$8726 ($eq).
Removed top 2 bits (of 5) from port B of cell pwm.$flatten\u_reg.$verific$equal_269$pwm_reg_top.sv:2558$8727 ($eq).
Removed top 2 bits (of 5) from port B of cell pwm.$flatten\u_reg.$verific$equal_271$pwm_reg_top.sv:2559$8728 ($eq).
Removed top 2 bits (of 5) from port B of cell pwm.$flatten\u_reg.$verific$equal_273$pwm_reg_top.sv:2560$8729 ($eq).
Removed top 1 bits (of 5) from port B of cell pwm.$flatten\u_reg.$verific$equal_275$pwm_reg_top.sv:2561$8730 ($eq).
Removed top 1 bits (of 5) from port B of cell pwm.$flatten\u_reg.$verific$equal_277$pwm_reg_top.sv:2562$8731 ($eq).
Removed top 1 bits (of 5) from port B of cell pwm.$flatten\u_reg.$verific$equal_279$pwm_reg_top.sv:2563$8732 ($eq).
Removed top 1 bits (of 5) from port B of cell pwm.$flatten\u_reg.$verific$equal_281$pwm_reg_top.sv:2564$8733 ($eq).
Removed top 1 bits (of 5) from port B of cell pwm.$flatten\u_reg.$verific$equal_283$pwm_reg_top.sv:2565$8734 ($eq).
Removed top 1 bits (of 5) from port B of cell pwm.$flatten\u_reg.$verific$equal_285$pwm_reg_top.sv:2566$8735 ($eq).
Removed top 1 bits (of 5) from port B of cell pwm.$flatten\u_reg.$verific$equal_287$pwm_reg_top.sv:2567$8736 ($eq).
Removed top 1 bits (of 5) from port B of cell pwm.$flatten\u_reg.$verific$equal_289$pwm_reg_top.sv:2568$8737 ($eq).
Removed top 31 bits (of 32) from port A of cell pwm.$flatten\u_reg.\u_reg_if.\u_err.$verific$shift_left_18$tlul_err.sv:44$10278 ($shl).
Removed top 28 bits (of 32) from port Y of cell pwm.$flatten\u_reg.\u_reg_if.\u_err.$verific$shift_left_18$tlul_err.sv:44$10278 ($shl).
Removed top 1 bits (of 3) from mux cell pwm.$flatten\gen_alert_tx[0].u_prim_alert_sender.$verific$mux_22$prim_alert_sender.sv:142$1461 ($mux).
Removed top 2 bits (of 4) from wire pwm.$flatten\gen_alert_tx[0].u_prim_alert_sender.$auto$bmuxmap.cc:58:execute$10682.
Removed top 1 bits (of 2) from wire pwm.$flatten\gen_alert_tx[0].u_prim_alert_sender.$auto$bmuxmap.cc:58:execute$10687.
Removed top 1 bits (of 4) from wire pwm.$flatten\gen_alert_tx[0].u_prim_alert_sender.$auto$bmuxmap.cc:58:execute$10702.
Removed top 1 bits (of 4) from wire pwm.$flatten\gen_alert_tx[0].u_prim_alert_sender.$auto$bmuxmap.cc:58:execute$10712.
Removed top 1 bits (of 3) from wire pwm.$flatten\gen_alert_tx[0].u_prim_alert_sender.$verific$n38$1425.
Removed top 1 bits (of 2) from wire pwm.$flatten\gen_alert_tx[0].u_prim_alert_sender.\i_decode_ping.$auto$bmuxmap.cc:58:execute$10657.
Removed top 1 bits (of 2) from wire pwm.$flatten\gen_alert_tx[0].u_prim_alert_sender.\i_decode_ping.$auto$bmuxmap.cc:58:execute$10662.
Removed top 3 bits (of 4) from wire pwm.$flatten\u_reg.$verific$n3674$2944.

yosys> peepopt

3.71. Executing PEEPOPT pass (run peephole optimizers).

yosys> opt_clean

3.72. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \pwm..
Removed 0 unused cells and 9 unused wires.
<suppressed ~1 debug messages>

yosys> bmuxmap

3.73. Executing BMUXMAP pass.

yosys> demuxmap

3.74. Executing DEMUXMAP pass.

yosys> clean_zerowidth

yosys> alumacc

3.75. Executing ALUMACC pass (create $alu and $macc cells).
Extracting $alu and $macc cells in module pwm:
  created 0 $alu and 0 $macc cells.

yosys> opt_expr

3.76. Executing OPT_EXPR pass (perform const folding).
Optimizing module pwm.

yosys> opt_merge -nomux

3.77. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\pwm'.
Removed a total of 0 cells.

yosys> opt_muxtree

3.78. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \pwm..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Removed 0 multiplexer ports.
<suppressed ~199 debug messages>

yosys> opt_reduce

3.79. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \pwm.
Performed a total of 0 changes.

yosys> opt_merge

3.80. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\pwm'.
Removed a total of 0 cells.

yosys> opt_share

3.81. Executing OPT_SHARE pass.

yosys> opt_dff -nosdff -nodffe

3.82. Executing OPT_DFF pass (perform DFF optimizations).

yosys> opt_clean

3.83. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \pwm..

yosys> opt_expr

3.84. Executing OPT_EXPR pass (perform const folding).
Optimizing module pwm.
MAX OPT ITERATION = 1

yosys> stat

3.85. Printing statistics.

=== pwm ===

   Number of wires:               3904
   Number of wire bits:          17908
   Number of public wires:        3240
   Number of public wire bits:   15938
   Number of memories:               0
   Number of memory bits:            0
   Number of processes:              0
   Number of cells:               1217
     $adff                         193
     $adffe                         52
     $and                          231
     $eq                            24
     $logic_not                      2
     $mux                          406
     $ne                             7
     $not                          101
     $or                           105
     $pmux                           1
     $reduce_and                     6
     $reduce_bool                   43
     $reduce_or                     11
     $reduce_xor                    28
     $shl                            1
     $xor                            6


yosys> memory -nomap

3.86. Executing MEMORY pass.

yosys> opt_mem

3.86.1. Executing OPT_MEM pass (optimize memories).
Performed a total of 0 transformations.

yosys> opt_mem_priority

3.86.2. Executing OPT_MEM_PRIORITY pass (removing unnecessary memory write priority relations).
Performed a total of 0 transformations.

yosys> opt_mem_feedback

3.86.3. Executing OPT_MEM_FEEDBACK pass (finding memory read-to-write feedback paths).

yosys> memory_bmux2rom

3.86.4. Executing MEMORY_BMUX2ROM pass (converting muxes to ROMs).

yosys> memory_dff

3.86.5. Executing MEMORY_DFF pass (merging $dff cells to $memrd).

yosys> opt_clean

3.86.6. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \pwm..

yosys> memory_share

3.86.7. Executing MEMORY_SHARE pass (consolidating $memrd/$memwr cells).

yosys> opt_mem_widen

3.86.8. Executing OPT_MEM_WIDEN pass (optimize memories where all ports are wide).
Performed a total of 0 transformations.

yosys> opt_clean

3.86.9. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \pwm..

yosys> memory_collect

3.86.10. Executing MEMORY_COLLECT pass (generating $mem cells).

yosys> stat

3.87. Printing statistics.

=== pwm ===

   Number of wires:               3904
   Number of wire bits:          17908
   Number of public wires:        3240
   Number of public wire bits:   15938
   Number of memories:               0
   Number of memory bits:            0
   Number of processes:              0
   Number of cells:               1217
     $adff                         193
     $adffe                         52
     $and                          231
     $eq                            24
     $logic_not                      2
     $mux                          406
     $ne                             7
     $not                          101
     $or                           105
     $pmux                           1
     $reduce_and                     6
     $reduce_bool                   43
     $reduce_or                     11
     $reduce_xor                    28
     $shl                            1
     $xor                            6


yosys> muxpack

3.88. Executing MUXPACK pass ($mux cell cascades to $pmux).
Converted 0 (p)mux cells into 0 pmux cells.
<suppressed ~273 debug messages>

yosys> opt_clean

3.89. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \pwm..

yosys> pmuxtree

3.90. Executing PMUXTREE pass.

yosys> muxpack

3.91. Executing MUXPACK pass ($mux cell cascades to $pmux).
Converted 0 (p)mux cells into 0 pmux cells.
<suppressed ~295 debug messages>

yosys> memory_map

3.92. Executing MEMORY_MAP pass (converting memories to logic and flip-flops).

yosys> stat

3.93. Printing statistics.

=== pwm ===

   Number of wires:               3936
   Number of wire bits:          18653
   Number of public wires:        3240
   Number of public wire bits:   15938
   Number of memories:               0
   Number of memory bits:            0
   Number of processes:              0
   Number of cells:               1248
     $adff                         193
     $adffe                         52
     $and                          231
     $eq                            24
     $logic_not                      2
     $mux                          429
     $ne                             7
     $not                          102
     $or                           105
     $reduce_and                     6
     $reduce_bool                   43
     $reduce_or                     19
     $reduce_xor                    28
     $shl                            1
     $xor                            6


yosys> techmap -map +/techmap.v -map +/rapidsilicon/genesis/arith_map.v

3.94. Executing TECHMAP pass (map to technology primitives).

3.94.1. Executing Verilog-2005 frontend: /nfs_scratch/scratch/Vorak/aram/Workspace/Raptor/yosys_verific_rs/yosys/install/bin/../share/yosys/techmap.v
Parsing Verilog input from `/nfs_scratch/scratch/Vorak/aram/Workspace/Raptor/yosys_verific_rs/yosys/install/bin/../share/yosys/techmap.v' to AST representation.
Generating RTLIL representation for module `\_90_simplemap_bool_ops'.
Generating RTLIL representation for module `\_90_simplemap_reduce_ops'.
Generating RTLIL representation for module `\_90_simplemap_logic_ops'.
Generating RTLIL representation for module `\_90_simplemap_compare_ops'.
Generating RTLIL representation for module `\_90_simplemap_various'.
Generating RTLIL representation for module `\_90_simplemap_registers'.
Generating RTLIL representation for module `\_90_shift_ops_shr_shl_sshl_sshr'.
Generating RTLIL representation for module `\_90_shift_shiftx'.
Generating RTLIL representation for module `\_90_fa'.
Generating RTLIL representation for module `\_90_lcu'.
Generating RTLIL representation for module `\_90_alu'.
Generating RTLIL representation for module `\_90_macc'.
Generating RTLIL representation for module `\_90_alumacc'.
Generating RTLIL representation for module `\$__div_mod_u'.
Generating RTLIL representation for module `\$__div_mod_trunc'.
Generating RTLIL representation for module `\_90_div'.
Generating RTLIL representation for module `\_90_mod'.
Generating RTLIL representation for module `\$__div_mod_floor'.
Generating RTLIL representation for module `\_90_divfloor'.
Generating RTLIL representation for module `\_90_modfloor'.
Generating RTLIL representation for module `\_90_pow'.
Generating RTLIL representation for module `\_90_pmux'.
Generating RTLIL representation for module `\_90_demux'.
Generating RTLIL representation for module `\_90_lut'.
Successfully finished Verilog frontend.

3.94.2. Executing Verilog-2005 frontend: /nfs_scratch/scratch/Vorak/aram/Workspace/Raptor/yosys_verific_rs/yosys/install/bin/../share/yosys/rapidsilicon/genesis/arith_map.v
Parsing Verilog input from `/nfs_scratch/scratch/Vorak/aram/Workspace/Raptor/yosys_verific_rs/yosys/install/bin/../share/yosys/rapidsilicon/genesis/arith_map.v' to AST representation.
Generating RTLIL representation for module `\_80_rs_alu'.
Successfully finished Verilog frontend.

3.94.3. Continuing TECHMAP pass.
Using extmapper simplemap for cells of type $reduce_bool.
Using extmapper simplemap for cells of type $ne.
Using extmapper simplemap for cells of type $reduce_and.
Using extmapper simplemap for cells of type $mux.
Using extmapper simplemap for cells of type $reduce_or.
Using extmapper simplemap for cells of type $adffe.
Using extmapper simplemap for cells of type $or.
Using extmapper simplemap for cells of type $and.
Using extmapper simplemap for cells of type $not.
Using extmapper simplemap for cells of type $adff.
Using extmapper simplemap for cells of type $reduce_xor.
Using extmapper simplemap for cells of type $eq.
Using extmapper simplemap for cells of type $logic_not.
Using template $paramod$constmap:66d421c313e4e958be776b99540ac2de3b59fdbc$paramod$77562a466236eb4a6d905351a0995599b75075cb\_90_shift_ops_shr_shl_sshl_sshr for cells of type $shl.
Using extmapper simplemap for cells of type $xor.
No more expansions possible.
<suppressed ~1502 debug messages>

yosys> stat

3.95. Printing statistics.

=== pwm ===

   Number of wires:               4302
   Number of wire bits:          21698
   Number of public wires:        3240
   Number of public wire bits:   15938
   Number of memories:               0
   Number of memory bits:            0
   Number of processes:              0
   Number of cells:               4663
     $_AND_                        245
     $_DFFE_PN0P_                  426
     $_DFFE_PN1P_                  184
     $_DFF_PN0_                    186
     $_DFF_PN1_                      7
     $_MUX_                       2415
     $_NOT_                        135
     $_OR_                         354
     $_XOR_                        711


yosys> opt_expr

3.96. Executing OPT_EXPR pass (perform const folding).
Optimizing module pwm.
<suppressed ~599 debug messages>

yosys> opt_merge -nomux

3.97. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\pwm'.
<suppressed ~2439 debug messages>
Removed a total of 813 cells.

yosys> opt_muxtree

3.98. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \pwm..
  Creating internal representation of mux trees.
  No muxes found in this module.
Removed 0 multiplexer ports.

yosys> opt_reduce

3.99. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \pwm.
Performed a total of 0 changes.

yosys> opt_merge

3.100. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\pwm'.
Removed a total of 0 cells.

yosys> opt_share

3.101. Executing OPT_SHARE pass.

yosys> opt_dff -nosdff -nodffe

3.102. Executing OPT_DFF pass (perform DFF optimizations).

yosys> opt_clean

3.103. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \pwm..
Removed 26 unused cells and 361 unused wires.
<suppressed ~27 debug messages>

yosys> opt_expr

3.104. Executing OPT_EXPR pass (perform const folding).
Optimizing module pwm.

yosys> opt_muxtree

3.105. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \pwm..
  Creating internal representation of mux trees.
  No muxes found in this module.
Removed 0 multiplexer ports.

yosys> opt_reduce

3.106. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \pwm.
Performed a total of 0 changes.

yosys> opt_merge

3.107. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\pwm'.
Removed a total of 0 cells.

yosys> opt_share

3.108. Executing OPT_SHARE pass.

yosys> opt_dff -nosdff -nodffe

3.109. Executing OPT_DFF pass (perform DFF optimizations).

yosys> opt_clean

3.110. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \pwm..

yosys> opt_expr

3.111. Executing OPT_EXPR pass (perform const folding).
Optimizing module pwm.
MAX OPT ITERATION = 2

yosys> opt_expr -full

3.112. Executing OPT_EXPR pass (perform const folding).
Optimizing module pwm.
<suppressed ~253 debug messages>

yosys> techmap -map +/techmap.v

3.113. Executing TECHMAP pass (map to technology primitives).

3.113.1. Executing Verilog-2005 frontend: /nfs_scratch/scratch/Vorak/aram/Workspace/Raptor/yosys_verific_rs/yosys/install/bin/../share/yosys/techmap.v
Parsing Verilog input from `/nfs_scratch/scratch/Vorak/aram/Workspace/Raptor/yosys_verific_rs/yosys/install/bin/../share/yosys/techmap.v' to AST representation.
Generating RTLIL representation for module `\_90_simplemap_bool_ops'.
Generating RTLIL representation for module `\_90_simplemap_reduce_ops'.
Generating RTLIL representation for module `\_90_simplemap_logic_ops'.
Generating RTLIL representation for module `\_90_simplemap_compare_ops'.
Generating RTLIL representation for module `\_90_simplemap_various'.
Generating RTLIL representation for module `\_90_simplemap_registers'.
Generating RTLIL representation for module `\_90_shift_ops_shr_shl_sshl_sshr'.
Generating RTLIL representation for module `\_90_shift_shiftx'.
Generating RTLIL representation for module `\_90_fa'.
Generating RTLIL representation for module `\_90_lcu'.
Generating RTLIL representation for module `\_90_alu'.
Generating RTLIL representation for module `\_90_macc'.
Generating RTLIL representation for module `\_90_alumacc'.
Generating RTLIL representation for module `\$__div_mod_u'.
Generating RTLIL representation for module `\$__div_mod_trunc'.
Generating RTLIL representation for module `\_90_div'.
Generating RTLIL representation for module `\_90_mod'.
Generating RTLIL representation for module `\$__div_mod_floor'.
Generating RTLIL representation for module `\_90_divfloor'.
Generating RTLIL representation for module `\_90_modfloor'.
Generating RTLIL representation for module `\_90_pow'.
Generating RTLIL representation for module `\_90_pmux'.
Generating RTLIL representation for module `\_90_demux'.
Generating RTLIL representation for module `\_90_lut'.
Successfully finished Verilog frontend.

3.113.2. Continuing TECHMAP pass.
No more expansions possible.
<suppressed ~71 debug messages>

yosys> opt_expr

3.114. Executing OPT_EXPR pass (perform const folding).
Optimizing module pwm.

yosys> opt_merge -nomux

3.115. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\pwm'.
<suppressed ~3 debug messages>
Removed a total of 1 cells.

yosys> opt_muxtree

3.116. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \pwm..
  Creating internal representation of mux trees.
  No muxes found in this module.
Removed 0 multiplexer ports.

yosys> opt_reduce

3.117. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \pwm.
Performed a total of 0 changes.

yosys> opt_merge

3.118. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\pwm'.
Removed a total of 0 cells.

yosys> opt_dff -nosdff -nodffe -sat

3.119. Executing OPT_DFF pass (perform DFF optimizations).

yosys> opt_clean

3.120. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \pwm..
Removed 0 unused cells and 70 unused wires.
<suppressed ~1 debug messages>

yosys> opt_expr

3.121. Executing OPT_EXPR pass (perform const folding).
Optimizing module pwm.
MAX OPT ITERATION = 1

yosys> abc -dff

3.122. Executing ABC pass (technology mapping using ABC).

3.122.1. Summary of detected clock domains:
  65 cells in clk=\clk_i, en=$auto$opt_dff.cc:194:make_patterns_logic$10771, arst=!\rst_ni, srst={ }
  20 cells in clk=\clk_i, en=$auto$opt_dff.cc:219:make_patterns_logic$10879, arst=!\rst_ni, srst={ }
  62 cells in clk=\clk_i, en=$auto$opt_dff.cc:219:make_patterns_logic$10886, arst=!\rst_ni, srst={ }
  27 cells in clk=\clk_i, en=$auto$opt_dff.cc:219:make_patterns_logic$10872, arst=!\rst_ni, srst={ }
  4 cells in clk=\clk_i, en=$auto$opt_dff.cc:194:make_patterns_logic$10737, arst=!\rst_ni, srst={ }
  603 cells in clk=\clk_i, en=\u_reg.u_reg_if.a_ack, arst=!\rst_ni, srst={ }
  66 cells in clk=\clk_i, en=$auto$opt_dff.cc:194:make_patterns_logic$10741, arst=!\rst_ni, srst={ }
  18 cells in clk=\clk_i, en=$auto$opt_dff.cc:194:make_patterns_logic$10744, arst=!\rst_ni, srst={ }
  41 cells in clk=\clk_i, en=$auto$opt_dff.cc:194:make_patterns_logic$10747, arst=!\rst_ni, srst={ }
  11 cells in clk=\clk_i, en=$auto$opt_dff.cc:194:make_patterns_logic$10750, arst=!\rst_ni, srst={ }
  65 cells in clk=\clk_i, en=$auto$opt_dff.cc:194:make_patterns_logic$10753, arst=!\rst_ni, srst={ }
  8 cells in clk=\clk_i, en=$auto$opt_dff.cc:194:make_patterns_logic$10756, arst=!\rst_ni, srst={ }
  66 cells in clk=\clk_i, en=$auto$opt_dff.cc:194:make_patterns_logic$10759, arst=!\rst_ni, srst={ }
  8 cells in clk=\clk_i, en=$auto$opt_dff.cc:194:make_patterns_logic$10762, arst=!\rst_ni, srst={ }
  41 cells in clk=\clk_i, en=$auto$opt_dff.cc:194:make_patterns_logic$10765, arst=!\rst_ni, srst={ }
  11 cells in clk=\clk_i, en=$auto$opt_dff.cc:194:make_patterns_logic$10768, arst=!\rst_ni, srst={ }
  32 cells in clk=\clk_i, en=$auto$opt_dff.cc:194:make_patterns_logic$10777, arst=!\rst_ni, srst={ }
  8 cells in clk=\clk_i, en=$auto$opt_dff.cc:194:make_patterns_logic$10774, arst=!\rst_ni, srst={ }
  17 cells in clk=\clk_i, en=$auto$opt_dff.cc:194:make_patterns_logic$10783, arst=!\rst_ni, srst={ }
  11 cells in clk=\clk_i, en=$auto$opt_dff.cc:194:make_patterns_logic$10780, arst=!\rst_ni, srst={ }
  109 cells in clk=\clk_i, en=$auto$opt_dff.cc:194:make_patterns_logic$10789, arst=!\rst_ni, srst={ }
  8 cells in clk=\clk_i, en=$auto$opt_dff.cc:194:make_patterns_logic$10786, arst=!\rst_ni, srst={ }
  69 cells in clk=\clk_i, en=$auto$opt_dff.cc:194:make_patterns_logic$10795, arst=!\rst_ni, srst={ }
  8 cells in clk=\clk_i, en=$auto$opt_dff.cc:194:make_patterns_logic$10792, arst=!\rst_ni, srst={ }
  107 cells in clk=\clk_i, en=$auto$opt_dff.cc:194:make_patterns_logic$10801, arst=!\rst_ni, srst={ }
  11 cells in clk=\clk_i, en=$auto$opt_dff.cc:194:make_patterns_logic$10798, arst=!\rst_ni, srst={ }
  108 cells in clk=\clk_i, en=$auto$opt_dff.cc:194:make_patterns_logic$10807, arst=!\rst_ni, srst={ }
  8 cells in clk=\clk_i, en=$auto$opt_dff.cc:194:make_patterns_logic$10804, arst=!\rst_ni, srst={ }
  69 cells in clk=\clk_i, en=$auto$opt_dff.cc:194:make_patterns_logic$10813, arst=!\rst_ni, srst={ }
  8 cells in clk=\clk_i, en=$auto$opt_dff.cc:194:make_patterns_logic$10810, arst=!\rst_ni, srst={ }
  112 cells in clk=\clk_i, en=$auto$opt_dff.cc:194:make_patterns_logic$10819, arst=!\rst_ni, srst={ }
  12 cells in clk=\clk_i, en=$auto$opt_dff.cc:194:make_patterns_logic$10816, arst=!\rst_ni, srst={ }
  118 cells in clk=\clk_i, en=$auto$opt_dff.cc:194:make_patterns_logic$10825, arst=!\rst_ni, srst={ }
  8 cells in clk=\clk_i, en=$auto$opt_dff.cc:194:make_patterns_logic$10822, arst=!\rst_ni, srst={ }
  107 cells in clk=\clk_i, en=$auto$opt_dff.cc:194:make_patterns_logic$10831, arst=!\rst_ni, srst={ }
  8 cells in clk=\clk_i, en=$auto$opt_dff.cc:194:make_patterns_logic$10828, arst=!\rst_ni, srst={ }
  69 cells in clk=\clk_i, en=$auto$opt_dff.cc:194:make_patterns_logic$10837, arst=!\rst_ni, srst={ }
  8 cells in clk=\clk_i, en=$auto$opt_dff.cc:194:make_patterns_logic$10834, arst=!\rst_ni, srst={ }
  106 cells in clk=\clk_i, en=$auto$opt_dff.cc:194:make_patterns_logic$10843, arst=!\rst_ni, srst={ }
  10 cells in clk=\clk_i, en=$auto$opt_dff.cc:194:make_patterns_logic$10840, arst=!\rst_ni, srst={ }
  107 cells in clk=\clk_i, en=$auto$opt_dff.cc:194:make_patterns_logic$10849, arst=!\rst_ni, srst={ }
  8 cells in clk=\clk_i, en=$auto$opt_dff.cc:194:make_patterns_logic$10846, arst=!\rst_ni, srst={ }
  69 cells in clk=\clk_i, en=$auto$opt_dff.cc:194:make_patterns_logic$10855, arst=!\rst_ni, srst={ }
  8 cells in clk=\clk_i, en=$auto$opt_dff.cc:194:make_patterns_logic$10852, arst=!\rst_ni, srst={ }
  106 cells in clk=\clk_i, en=$auto$opt_dff.cc:194:make_patterns_logic$10861, arst=!\rst_ni, srst={ }
  10 cells in clk=\clk_i, en=$auto$opt_dff.cc:194:make_patterns_logic$10858, arst=!\rst_ni, srst={ }
  174 cells in clk=\clk_core_i, en={ }, arst=!\rst_core_ni, srst={ }
  237 cells in clk=\clk_i, en={ }, arst=!\rst_ni, srst={ }
  257 cells in clk=\clk_i, en=\u_reg.intg_err, arst=!\rst_ni, srst={ }
  9 cells in clk=\clk_i, en=$auto$opt_dff.cc:194:make_patterns_logic$10864, arst=!\rst_ni, srst={ }

3.122.2. Extracting gate netlist of module `\pwm' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_i, enabled by $auto$opt_dff.cc:194:make_patterns_logic$10771, asynchronously reset by !\rst_ni
Extracted 65 gates and 99 wires to a netlist network with 33 inputs and 23 outputs.

3.122.2.1. Executing ABC.

3.122.3. Extracting gate netlist of module `\pwm' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_i, enabled by $auto$opt_dff.cc:219:make_patterns_logic$10879, asynchronously reset by !\rst_ni
Extracted 20 gates and 26 wires to a netlist network with 5 inputs and 3 outputs.

3.122.3.1. Executing ABC.

3.122.4. Extracting gate netlist of module `\pwm' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_i, enabled by $auto$opt_dff.cc:219:make_patterns_logic$10886, asynchronously reset by !\rst_ni
Extracted 62 gates and 70 wires to a netlist network with 6 inputs and 6 outputs.

3.122.4.1. Executing ABC.

3.122.5. Extracting gate netlist of module `\pwm' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_i, enabled by $auto$opt_dff.cc:219:make_patterns_logic$10872, asynchronously reset by !\rst_ni
Extracted 27 gates and 35 wires to a netlist network with 7 inputs and 4 outputs.

3.122.5.1. Executing ABC.

3.122.6. Extracting gate netlist of module `\pwm' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_i, enabled by $auto$opt_dff.cc:194:make_patterns_logic$10737, asynchronously reset by !\rst_ni
Extracted 4 gates and 6 wires to a netlist network with 2 inputs and 3 outputs.

3.122.6.1. Executing ABC.

3.122.7. Extracting gate netlist of module `\pwm' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_i, enabled by \u_reg.u_reg_if.a_ack, asynchronously reset by !\rst_ni
Extracted 603 gates and 905 wires to a netlist network with 300 inputs and 59 outputs.

3.122.7.1. Executing ABC.

3.122.8. Extracting gate netlist of module `\pwm' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_i, enabled by $auto$opt_dff.cc:194:make_patterns_logic$10741, asynchronously reset by !\rst_ni
Extracted 66 gates and 113 wires to a netlist network with 46 inputs and 23 outputs.

3.122.8.1. Executing ABC.

3.122.9. Extracting gate netlist of module `\pwm' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_i, enabled by $auto$opt_dff.cc:194:make_patterns_logic$10744, asynchronously reset by !\rst_ni
Extracted 18 gates and 27 wires to a netlist network with 9 inputs and 10 outputs.

3.122.9.1. Executing ABC.

3.122.10. Extracting gate netlist of module `\pwm' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_i, enabled by $auto$opt_dff.cc:194:make_patterns_logic$10747, asynchronously reset by !\rst_ni
Extracted 41 gates and 64 wires to a netlist network with 22 inputs and 19 outputs.

3.122.10.1. Executing ABC.

3.122.11. Extracting gate netlist of module `\pwm' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_i, enabled by $auto$opt_dff.cc:194:make_patterns_logic$10750, asynchronously reset by !\rst_ni
Extracted 11 gates and 17 wires to a netlist network with 6 inputs and 6 outputs.

3.122.11.1. Executing ABC.

3.122.12. Extracting gate netlist of module `\pwm' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_i, enabled by $auto$opt_dff.cc:194:make_patterns_logic$10753, asynchronously reset by !\rst_ni
Extracted 65 gates and 111 wires to a netlist network with 45 inputs and 22 outputs.

3.122.12.1. Executing ABC.

3.122.13. Extracting gate netlist of module `\pwm' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_i, enabled by $auto$opt_dff.cc:194:make_patterns_logic$10756, asynchronously reset by !\rst_ni
Extracted 8 gates and 12 wires to a netlist network with 4 inputs and 5 outputs.

3.122.13.1. Executing ABC.

3.122.14. Extracting gate netlist of module `\pwm' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_i, enabled by $auto$opt_dff.cc:194:make_patterns_logic$10759, asynchronously reset by !\rst_ni
Extracted 66 gates and 113 wires to a netlist network with 46 inputs and 23 outputs.

3.122.14.1. Executing ABC.

3.122.15. Extracting gate netlist of module `\pwm' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_i, enabled by $auto$opt_dff.cc:194:make_patterns_logic$10762, asynchronously reset by !\rst_ni
Extracted 8 gates and 12 wires to a netlist network with 4 inputs and 5 outputs.

3.122.15.1. Executing ABC.

3.122.16. Extracting gate netlist of module `\pwm' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_i, enabled by $auto$opt_dff.cc:194:make_patterns_logic$10765, asynchronously reset by !\rst_ni
Extracted 41 gates and 64 wires to a netlist network with 22 inputs and 19 outputs.

3.122.16.1. Executing ABC.

3.122.17. Extracting gate netlist of module `\pwm' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_i, enabled by $auto$opt_dff.cc:194:make_patterns_logic$10768, asynchronously reset by !\rst_ni
Extracted 11 gates and 17 wires to a netlist network with 6 inputs and 7 outputs.

3.122.17.1. Executing ABC.

3.122.18. Extracting gate netlist of module `\pwm' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_i, enabled by $auto$opt_dff.cc:194:make_patterns_logic$10777, asynchronously reset by !\rst_ni
Extracted 32 gates and 56 wires to a netlist network with 23 inputs and 14 outputs.

3.122.18.1. Executing ABC.

3.122.19. Extracting gate netlist of module `\pwm' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_i, enabled by $auto$opt_dff.cc:194:make_patterns_logic$10774, asynchronously reset by !\rst_ni
Extracted 8 gates and 12 wires to a netlist network with 4 inputs and 5 outputs.

3.122.19.1. Executing ABC.

3.122.20. Extracting gate netlist of module `\pwm' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_i, enabled by $auto$opt_dff.cc:194:make_patterns_logic$10783, asynchronously reset by !\rst_ni
Extracted 17 gates and 28 wires to a netlist network with 10 inputs and 7 outputs.

3.122.20.1. Executing ABC.

3.122.21. Extracting gate netlist of module `\pwm' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_i, enabled by $auto$opt_dff.cc:194:make_patterns_logic$10780, asynchronously reset by !\rst_ni
Extracted 11 gates and 17 wires to a netlist network with 6 inputs and 7 outputs.

3.122.21.1. Executing ABC.

3.122.22. Extracting gate netlist of module `\pwm' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_i, enabled by $auto$opt_dff.cc:194:make_patterns_logic$10789, asynchronously reset by !\rst_ni
Extracted 109 gates and 185 wires to a netlist network with 74 inputs and 38 outputs.

3.122.22.1. Executing ABC.

3.122.23. Extracting gate netlist of module `\pwm' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_i, enabled by $auto$opt_dff.cc:194:make_patterns_logic$10786, asynchronously reset by !\rst_ni
Extracted 8 gates and 12 wires to a netlist network with 4 inputs and 5 outputs.

3.122.23.1. Executing ABC.

3.122.24. Extracting gate netlist of module `\pwm' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_i, enabled by $auto$opt_dff.cc:194:make_patterns_logic$10795, asynchronously reset by !\rst_ni
Extracted 69 gates and 107 wires to a netlist network with 36 inputs and 33 outputs.

3.122.24.1. Executing ABC.

3.122.25. Extracting gate netlist of module `\pwm' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_i, enabled by $auto$opt_dff.cc:194:make_patterns_logic$10792, asynchronously reset by !\rst_ni
Extracted 8 gates and 12 wires to a netlist network with 4 inputs and 5 outputs.

3.122.25.1. Executing ABC.

3.122.26. Extracting gate netlist of module `\pwm' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_i, enabled by $auto$opt_dff.cc:194:make_patterns_logic$10801, asynchronously reset by !\rst_ni
Extracted 107 gates and 182 wires to a netlist network with 73 inputs and 36 outputs.

3.122.26.1. Executing ABC.

3.122.27. Extracting gate netlist of module `\pwm' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_i, enabled by $auto$opt_dff.cc:194:make_patterns_logic$10798, asynchronously reset by !\rst_ni
Extracted 11 gates and 17 wires to a netlist network with 6 inputs and 6 outputs.

3.122.27.1. Executing ABC.

3.122.28. Extracting gate netlist of module `\pwm' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_i, enabled by $auto$opt_dff.cc:194:make_patterns_logic$10807, asynchronously reset by !\rst_ni
Extracted 108 gates and 184 wires to a netlist network with 74 inputs and 37 outputs.

3.122.28.1. Executing ABC.

3.122.29. Extracting gate netlist of module `\pwm' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_i, enabled by $auto$opt_dff.cc:194:make_patterns_logic$10804, asynchronously reset by !\rst_ni
Extracted 8 gates and 12 wires to a netlist network with 4 inputs and 5 outputs.

3.122.29.1. Executing ABC.

3.122.30. Extracting gate netlist of module `\pwm' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_i, enabled by $auto$opt_dff.cc:194:make_patterns_logic$10813, asynchronously reset by !\rst_ni
Extracted 69 gates and 107 wires to a netlist network with 36 inputs and 33 outputs.

3.122.30.1. Executing ABC.

3.122.31. Extracting gate netlist of module `\pwm' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_i, enabled by $auto$opt_dff.cc:194:make_patterns_logic$10810, asynchronously reset by !\rst_ni
Extracted 8 gates and 12 wires to a netlist network with 4 inputs and 5 outputs.

3.122.31.1. Executing ABC.

3.122.32. Extracting gate netlist of module `\pwm' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_i, enabled by $auto$opt_dff.cc:194:make_patterns_logic$10819, asynchronously reset by !\rst_ni
Extracted 112 gates and 175 wires to a netlist network with 61 inputs and 41 outputs.

3.122.32.1. Executing ABC.

3.122.33. Extracting gate netlist of module `\pwm' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_i, enabled by $auto$opt_dff.cc:194:make_patterns_logic$10816, asynchronously reset by !\rst_ni
Extracted 12 gates and 19 wires to a netlist network with 7 inputs and 7 outputs.

3.122.33.1. Executing ABC.

3.122.34. Extracting gate netlist of module `\pwm' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_i, enabled by $auto$opt_dff.cc:194:make_patterns_logic$10825, asynchronously reset by !\rst_ni
Extracted 118 gates and 163 wires to a netlist network with 43 inputs and 43 outputs.

3.122.34.1. Executing ABC.

3.122.35. Extracting gate netlist of module `\pwm' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_i, enabled by $auto$opt_dff.cc:194:make_patterns_logic$10822, asynchronously reset by !\rst_ni
Extracted 8 gates and 12 wires to a netlist network with 4 inputs and 5 outputs.

3.122.35.1. Executing ABC.

3.122.36. Extracting gate netlist of module `\pwm' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_i, enabled by $auto$opt_dff.cc:194:make_patterns_logic$10831, asynchronously reset by !\rst_ni
Extracted 107 gates and 181 wires to a netlist network with 73 inputs and 37 outputs.

3.122.36.1. Executing ABC.

3.122.37. Extracting gate netlist of module `\pwm' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_i, enabled by $auto$opt_dff.cc:194:make_patterns_logic$10828, asynchronously reset by !\rst_ni
Extracted 8 gates and 12 wires to a netlist network with 4 inputs and 5 outputs.

3.122.37.1. Executing ABC.

3.122.38. Extracting gate netlist of module `\pwm' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_i, enabled by $auto$opt_dff.cc:194:make_patterns_logic$10837, asynchronously reset by !\rst_ni
Extracted 69 gates and 106 wires to a netlist network with 36 inputs and 33 outputs.

3.122.38.1. Executing ABC.

3.122.39. Extracting gate netlist of module `\pwm' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_i, enabled by $auto$opt_dff.cc:194:make_patterns_logic$10834, asynchronously reset by !\rst_ni
Extracted 8 gates and 12 wires to a netlist network with 4 inputs and 5 outputs.

3.122.39.1. Executing ABC.

3.122.40. Extracting gate netlist of module `\pwm' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_i, enabled by $auto$opt_dff.cc:194:make_patterns_logic$10843, asynchronously reset by !\rst_ni
Extracted 106 gates and 179 wires to a netlist network with 72 inputs and 36 outputs.

3.122.40.1. Executing ABC.

3.122.41. Extracting gate netlist of module `\pwm' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_i, enabled by $auto$opt_dff.cc:194:make_patterns_logic$10840, asynchronously reset by !\rst_ni
Extracted 10 gates and 15 wires to a netlist network with 5 inputs and 6 outputs.

3.122.41.1. Executing ABC.

3.122.42. Extracting gate netlist of module `\pwm' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_i, enabled by $auto$opt_dff.cc:194:make_patterns_logic$10849, asynchronously reset by !\rst_ni
Extracted 107 gates and 181 wires to a netlist network with 73 inputs and 37 outputs.

3.122.42.1. Executing ABC.

3.122.43. Extracting gate netlist of module `\pwm' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_i, enabled by $auto$opt_dff.cc:194:make_patterns_logic$10846, asynchronously reset by !\rst_ni
Extracted 8 gates and 12 wires to a netlist network with 4 inputs and 5 outputs.

3.122.43.1. Executing ABC.

3.122.44. Extracting gate netlist of module `\pwm' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_i, enabled by $auto$opt_dff.cc:194:make_patterns_logic$10855, asynchronously reset by !\rst_ni
Extracted 69 gates and 106 wires to a netlist network with 36 inputs and 33 outputs.

3.122.44.1. Executing ABC.

3.122.45. Extracting gate netlist of module `\pwm' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_i, enabled by $auto$opt_dff.cc:194:make_patterns_logic$10852, asynchronously reset by !\rst_ni
Extracted 8 gates and 12 wires to a netlist network with 4 inputs and 5 outputs.

3.122.45.1. Executing ABC.

3.122.46. Extracting gate netlist of module `\pwm' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_i, enabled by $auto$opt_dff.cc:194:make_patterns_logic$10861, asynchronously reset by !\rst_ni
Extracted 106 gates and 179 wires to a netlist network with 72 inputs and 36 outputs.

3.122.46.1. Executing ABC.

3.122.47. Extracting gate netlist of module `\pwm' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_i, enabled by $auto$opt_dff.cc:194:make_patterns_logic$10858, asynchronously reset by !\rst_ni
Extracted 10 gates and 15 wires to a netlist network with 5 inputs and 6 outputs.

3.122.47.1. Executing ABC.

3.122.48. Extracting gate netlist of module `\pwm' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_core_i, asynchronously reset by !\rst_core_ni
Extracted 174 gates and 197 wires to a netlist network with 22 inputs and 22 outputs.

3.122.48.1. Executing ABC.

3.122.49. Extracting gate netlist of module `\pwm' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_i, asynchronously reset by !\rst_ni
Extracted 237 gates and 294 wires to a netlist network with 56 inputs and 61 outputs.

3.122.49.1. Executing ABC.

3.122.50. Extracting gate netlist of module `\pwm' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_i, enabled by \u_reg.intg_err, asynchronously reset by !\rst_ni
Extracted 257 gates and 348 wires to a netlist network with 90 inputs and 2 outputs.

3.122.50.1. Executing ABC.

3.122.51. Extracting gate netlist of module `\pwm' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_i, enabled by $auto$opt_dff.cc:194:make_patterns_logic$10864, asynchronously reset by !\rst_ni
Extracted 9 gates and 13 wires to a netlist network with 4 inputs and 6 outputs.

3.122.51.1. Executing ABC.

yosys> abc -dff

3.123. Executing ABC pass (technology mapping using ABC).

3.123.1. Summary of detected clock domains:
  10 cells in clk=\clk_i, en=$abc$17724$auto$opt_dff.cc:194:make_patterns_logic$10786, arst=!\rst_ni, srst={ }
  10 cells in clk=\clk_i, en=$abc$17501$auto$opt_dff.cc:194:make_patterns_logic$10768, arst=!\rst_ni, srst={ }
  10 cells in clk=\clk_i, en=$abc$17360$auto$opt_dff.cc:194:make_patterns_logic$10756, arst=!\rst_ni, srst={ }
  9 cells in clk=\clk_i, en=$abc$17544$auto$opt_dff.cc:194:make_patterns_logic$10774, arst=!\rst_ni, srst={ }
  10 cells in clk=\clk_i, en=$abc$17433$auto$opt_dff.cc:194:make_patterns_logic$10762, arst=!\rst_ni, srst={ }
  10 cells in clk=\clk_i, en=$abc$17834$auto$opt_dff.cc:194:make_patterns_logic$10792, arst=!\rst_ni, srst={ }
  14 cells in clk=\clk_i, en=$abc$18370$auto$opt_dff.cc:194:make_patterns_logic$10816, arst=!\rst_ni, srst={ }
  9 cells in clk=\clk_i, en=$abc$18615$auto$opt_dff.cc:194:make_patterns_logic$10828, arst=!\rst_ni, srst={ }
  10 cells in clk=\clk_i, en=$abc$18501$auto$opt_dff.cc:194:make_patterns_logic$10822, arst=!\rst_ni, srst={ }
  10 cells in clk=\clk_i, en=$abc$18953$auto$opt_dff.cc:194:make_patterns_logic$10846, arst=!\rst_ni, srst={ }
  10 cells in clk=\clk_i, en=$abc$17978$auto$opt_dff.cc:194:make_patterns_logic$10798, arst=!\rst_ni, srst={ }
  8 cells in clk=\clk_i, en=$abc$18125$auto$opt_dff.cc:194:make_patterns_logic$10804, arst=!\rst_ni, srst={ }
  8 cells in clk=\clk_i, en=$abc$18235$auto$opt_dff.cc:194:make_patterns_logic$10810, arst=!\rst_ni, srst={ }
  57 cells in clk=\clk_i, en=$abc$17369$auto$opt_dff.cc:194:make_patterns_logic$10759, arst=!\rst_ni, srst={ }
  12 cells in clk=\clk_i, en=$abc$17576$auto$opt_dff.cc:194:make_patterns_logic$10780, arst=!\rst_ni, srst={ }
  44 cells in clk=\clk_i, en=$abc$17442$auto$opt_dff.cc:194:make_patterns_logic$10765, arst=!\rst_ni, srst={ }
  11 cells in clk=\clk_i, en=$abc$17286$auto$opt_dff.cc:194:make_patterns_logic$10750, arst=!\rst_ni, srst={ }
  9 cells in clk=\clk_i, en=$abc$18725$auto$opt_dff.cc:194:make_patterns_logic$10834, arst=!\rst_ni, srst={ }
  60 cells in clk=\clk_i, en=$abc$17297$auto$opt_dff.cc:194:make_patterns_logic$10753, arst=!\rst_ni, srst={ }
  15 cells in clk=\clk_i, en=$abc$18838$auto$opt_dff.cc:194:make_patterns_logic$10840, arst=!\rst_ni, srst={ }
  21 cells in clk=\clk_i, en=$abc$17553$auto$opt_dff.cc:194:make_patterns_logic$10783, arst=!\rst_ni, srst={ }
  20 cells in clk=\clk_i, en=$abc$17512$auto$opt_dff.cc:194:make_patterns_logic$10777, arst=!\rst_ni, srst={ }
  93 cells in clk=\clk_i, en=$abc$18962$auto$opt_dff.cc:194:make_patterns_logic$10855, arst=!\rst_ni, srst={ }
  102 cells in clk=\clk_i, en=$abc$18734$auto$opt_dff.cc:194:make_patterns_logic$10843, arst=!\rst_ni, srst={ }
  83 cells in clk=\clk_i, en=$abc$18624$auto$opt_dff.cc:194:make_patterns_logic$10837, arst=!\rst_ni, srst={ }
  88 cells in clk=\clk_i, en=$abc$18510$auto$opt_dff.cc:194:make_patterns_logic$10831, arst=!\rst_ni, srst={ }
  105 cells in clk=\clk_i, en=$abc$18382$auto$opt_dff.cc:194:make_patterns_logic$10825, arst=!\rst_ni, srst={ }
  102 cells in clk=\clk_i, en=$abc$18244$auto$opt_dff.cc:194:make_patterns_logic$10819, arst=!\rst_ni, srst={ }
  98 cells in clk=\clk_i, en=$abc$18134$auto$opt_dff.cc:194:make_patterns_logic$10813, arst=!\rst_ni, srst={ }
  105 cells in clk=\clk_i, en=$abc$17989$auto$opt_dff.cc:194:make_patterns_logic$10807, arst=!\rst_ni, srst={ }
  102 cells in clk=\clk_i, en=$abc$17733$auto$opt_dff.cc:194:make_patterns_logic$10795, arst=!\rst_ni, srst={ }
  99 cells in clk=\clk_i, en=$abc$17587$auto$opt_dff.cc:194:make_patterns_logic$10789, arst=!\rst_ni, srst={ }
  104 cells in clk=\clk_i, en=$abc$17843$auto$opt_dff.cc:194:make_patterns_logic$10801, arst=!\rst_ni, srst={ }
  8 cells in clk=\clk_i, en=$abc$19063$auto$opt_dff.cc:194:make_patterns_logic$10852, arst=!\rst_ni, srst={ }
  134 cells in clk=\clk_i, en=$abc$19072$auto$opt_dff.cc:194:make_patterns_logic$10861, arst=!\rst_ni, srst={ }
  13 cells in clk=\clk_i, en=$abc$19176$auto$opt_dff.cc:194:make_patterns_logic$10858, arst=!\rst_ni, srst={ }
  253 cells in clk=\clk_i, en={ }, arst=!\rst_ni, srst={ }
  225 cells in clk=\clk_i, en=$abc$19707$u_reg.intg_err, arst=!\rst_ni, srst={ }
  61 cells in clk=\clk_i, en=$abc$16381$auto$opt_dff.cc:194:make_patterns_logic$10771, arst=!\rst_ni, srst={ }
  11 cells in clk=\clk_i, en=$abc$16444$auto$opt_dff.cc:219:make_patterns_logic$10879, arst=!\rst_ni, srst={ }
  35 cells in clk=\clk_i, en=$abc$16459$auto$opt_dff.cc:219:make_patterns_logic$10886, arst=!\rst_ni, srst={ }
  16 cells in clk=\clk_i, en=$abc$16498$auto$opt_dff.cc:219:make_patterns_logic$10872, arst=!\rst_ni, srst={ }
  79 cells in clk=\clk_i, en=$abc$18848$auto$opt_dff.cc:194:make_patterns_logic$10849, arst=!\rst_ni, srst={ }
  4 cells in clk=\clk_i, en=$abc$16521$auto$opt_dff.cc:194:make_patterns_logic$10737, arst=!\rst_ni, srst={ }
  645 cells in clk=\clk_i, en=$abc$16528$u_reg.u_reg_if.a_ack, arst=!\rst_ni, srst={ }
  59 cells in clk=\clk_i, en=$abc$17147$auto$opt_dff.cc:194:make_patterns_logic$10741, arst=!\rst_ni, srst={ }
  8 cells in clk=\clk_i, en=$abc$17211$auto$opt_dff.cc:194:make_patterns_logic$10744, arst=!\rst_ni, srst={ }
  44 cells in clk=\clk_i, en=$abc$17227$auto$opt_dff.cc:194:make_patterns_logic$10747, arst=!\rst_ni, srst={ }
  110 cells in clk=\clk_core_i, en={ }, arst=!\rst_core_ni, srst={ }
  15 cells in clk=\clk_i, en=$abc$19934$auto$opt_dff.cc:194:make_patterns_logic$10864, arst=!\rst_ni, srst={ }

3.123.2. Extracting gate netlist of module `\pwm' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_i, enabled by $abc$17724$auto$opt_dff.cc:194:make_patterns_logic$10786, asynchronously reset by !\rst_ni
Extracted 10 gates and 15 wires to a netlist network with 5 inputs and 7 outputs.

3.123.2.1. Executing ABC.

3.123.3. Extracting gate netlist of module `\pwm' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_i, enabled by $abc$17501$auto$opt_dff.cc:194:make_patterns_logic$10768, asynchronously reset by !\rst_ni
Extracted 10 gates and 16 wires to a netlist network with 6 inputs and 7 outputs.

3.123.3.1. Executing ABC.

3.123.4. Extracting gate netlist of module `\pwm' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_i, enabled by $abc$17360$auto$opt_dff.cc:194:make_patterns_logic$10756, asynchronously reset by !\rst_ni
Extracted 10 gates and 16 wires to a netlist network with 6 inputs and 6 outputs.

3.123.4.1. Executing ABC.

3.123.5. Extracting gate netlist of module `\pwm' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_i, enabled by $abc$17544$auto$opt_dff.cc:194:make_patterns_logic$10774, asynchronously reset by !\rst_ni
Extracted 9 gates and 14 wires to a netlist network with 5 inputs and 6 outputs.

3.123.5.1. Executing ABC.

3.123.6. Extracting gate netlist of module `\pwm' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_i, enabled by $abc$17433$auto$opt_dff.cc:194:make_patterns_logic$10762, asynchronously reset by !\rst_ni
Extracted 10 gates and 16 wires to a netlist network with 6 inputs and 6 outputs.

3.123.6.1. Executing ABC.

3.123.7. Extracting gate netlist of module `\pwm' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_i, enabled by $abc$17834$auto$opt_dff.cc:194:make_patterns_logic$10792, asynchronously reset by !\rst_ni
Extracted 10 gates and 16 wires to a netlist network with 6 inputs and 6 outputs.

3.123.7.1. Executing ABC.

3.123.8. Extracting gate netlist of module `\pwm' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_i, enabled by $abc$18370$auto$opt_dff.cc:194:make_patterns_logic$10816, asynchronously reset by !\rst_ni
Extracted 14 gates and 22 wires to a netlist network with 8 inputs and 8 outputs.

3.123.8.1. Executing ABC.

3.123.9. Extracting gate netlist of module `\pwm' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_i, enabled by $abc$18615$auto$opt_dff.cc:194:make_patterns_logic$10828, asynchronously reset by !\rst_ni
Extracted 9 gates and 14 wires to a netlist network with 5 inputs and 6 outputs.

3.123.9.1. Executing ABC.

3.123.10. Extracting gate netlist of module `\pwm' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_i, enabled by $abc$18501$auto$opt_dff.cc:194:make_patterns_logic$10822, asynchronously reset by !\rst_ni
Extracted 10 gates and 16 wires to a netlist network with 6 inputs and 6 outputs.

3.123.10.1. Executing ABC.

3.123.11. Extracting gate netlist of module `\pwm' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_i, enabled by $abc$18953$auto$opt_dff.cc:194:make_patterns_logic$10846, asynchronously reset by !\rst_ni
Extracted 10 gates and 16 wires to a netlist network with 6 inputs and 7 outputs.

3.123.11.1. Executing ABC.

3.123.12. Extracting gate netlist of module `\pwm' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_i, enabled by $abc$17978$auto$opt_dff.cc:194:make_patterns_logic$10798, asynchronously reset by !\rst_ni
Extracted 10 gates and 16 wires to a netlist network with 6 inputs and 6 outputs.

3.123.12.1. Executing ABC.

3.123.13. Extracting gate netlist of module `\pwm' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_i, enabled by $abc$18125$auto$opt_dff.cc:194:make_patterns_logic$10804, asynchronously reset by !\rst_ni
Extracted 8 gates and 12 wires to a netlist network with 4 inputs and 5 outputs.

3.123.13.1. Executing ABC.

3.123.14. Extracting gate netlist of module `\pwm' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_i, enabled by $abc$18235$auto$opt_dff.cc:194:make_patterns_logic$10810, asynchronously reset by !\rst_ni
Extracted 8 gates and 12 wires to a netlist network with 4 inputs and 5 outputs.

3.123.14.1. Executing ABC.

3.123.15. Extracting gate netlist of module `\pwm' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_i, enabled by $abc$17369$auto$opt_dff.cc:194:make_patterns_logic$10759, asynchronously reset by !\rst_ni
Extracted 57 gates and 97 wires to a netlist network with 40 inputs and 19 outputs.

3.123.15.1. Executing ABC.

3.123.16. Extracting gate netlist of module `\pwm' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_i, enabled by $abc$17576$auto$opt_dff.cc:194:make_patterns_logic$10780, asynchronously reset by !\rst_ni
Extracted 12 gates and 19 wires to a netlist network with 7 inputs and 9 outputs.

3.123.16.1. Executing ABC.

3.123.17. Extracting gate netlist of module `\pwm' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_i, enabled by $abc$17442$auto$opt_dff.cc:194:make_patterns_logic$10765, asynchronously reset by !\rst_ni
Extracted 44 gates and 71 wires to a netlist network with 27 inputs and 22 outputs.

3.123.17.1. Executing ABC.

3.123.18. Extracting gate netlist of module `\pwm' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_i, enabled by $abc$17286$auto$opt_dff.cc:194:make_patterns_logic$10750, asynchronously reset by !\rst_ni
Extracted 11 gates and 18 wires to a netlist network with 7 inputs and 7 outputs.

3.123.18.1. Executing ABC.

3.123.19. Extracting gate netlist of module `\pwm' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_i, enabled by $abc$18725$auto$opt_dff.cc:194:make_patterns_logic$10834, asynchronously reset by !\rst_ni
Extracted 9 gates and 14 wires to a netlist network with 5 inputs and 6 outputs.

3.123.19.1. Executing ABC.

3.123.20. Extracting gate netlist of module `\pwm' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_i, enabled by $abc$17297$auto$opt_dff.cc:194:make_patterns_logic$10753, asynchronously reset by !\rst_ni
Extracted 60 gates and 103 wires to a netlist network with 43 inputs and 21 outputs.

3.123.20.1. Executing ABC.

3.123.21. Extracting gate netlist of module `\pwm' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_i, enabled by $abc$18838$auto$opt_dff.cc:194:make_patterns_logic$10840, asynchronously reset by !\rst_ni
Extracted 15 gates and 23 wires to a netlist network with 8 inputs and 11 outputs.

3.123.21.1. Executing ABC.

3.123.22. Extracting gate netlist of module `\pwm' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_i, enabled by $abc$17553$auto$opt_dff.cc:194:make_patterns_logic$10783, asynchronously reset by !\rst_ni
Extracted 21 gates and 37 wires to a netlist network with 16 inputs and 10 outputs.

3.123.22.1. Executing ABC.

3.123.23. Extracting gate netlist of module `\pwm' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_i, enabled by $abc$17512$auto$opt_dff.cc:194:make_patterns_logic$10777, asynchronously reset by !\rst_ni
Extracted 20 gates and 35 wires to a netlist network with 15 inputs and 7 outputs.

3.123.23.1. Executing ABC.

3.123.24. Extracting gate netlist of module `\pwm' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_i, enabled by $abc$18962$auto$opt_dff.cc:194:make_patterns_logic$10855, asynchronously reset by !\rst_ni
Extracted 93 gates and 155 wires to a netlist network with 62 inputs and 37 outputs.

3.123.24.1. Executing ABC.

3.123.25. Extracting gate netlist of module `\pwm' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_i, enabled by $abc$18734$auto$opt_dff.cc:194:make_patterns_logic$10843, asynchronously reset by !\rst_ni
Extracted 102 gates and 173 wires to a netlist network with 71 inputs and 35 outputs.

3.123.25.1. Executing ABC.

3.123.26. Extracting gate netlist of module `\pwm' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_i, enabled by $abc$18624$auto$opt_dff.cc:194:make_patterns_logic$10837, asynchronously reset by !\rst_ni
Extracted 83 gates and 135 wires to a netlist network with 52 inputs and 36 outputs.

3.123.26.1. Executing ABC.

3.123.27. Extracting gate netlist of module `\pwm' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_i, enabled by $abc$18510$auto$opt_dff.cc:194:make_patterns_logic$10831, asynchronously reset by !\rst_ni
Extracted 88 gates and 145 wires to a netlist network with 57 inputs and 33 outputs.

3.123.27.1. Executing ABC.

3.123.28. Extracting gate netlist of module `\pwm' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_i, enabled by $abc$18382$auto$opt_dff.cc:194:make_patterns_logic$10825, asynchronously reset by !\rst_ni
Extracted 105 gates and 146 wires to a netlist network with 41 inputs and 36 outputs.

3.123.28.1. Executing ABC.

3.123.29. Extracting gate netlist of module `\pwm' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_i, enabled by $abc$18244$auto$opt_dff.cc:194:make_patterns_logic$10819, asynchronously reset by !\rst_ni
Extracted 102 gates and 143 wires to a netlist network with 41 inputs and 35 outputs.

3.123.29.1. Executing ABC.

3.123.30. Extracting gate netlist of module `\pwm' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_i, enabled by $abc$18134$auto$opt_dff.cc:194:make_patterns_logic$10813, asynchronously reset by !\rst_ni
Extracted 98 gates and 134 wires to a netlist network with 36 inputs and 33 outputs.

3.123.30.1. Executing ABC.

3.123.31. Extracting gate netlist of module `\pwm' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_i, enabled by $abc$17989$auto$opt_dff.cc:194:make_patterns_logic$10807, asynchronously reset by !\rst_ni
Extracted 105 gates and 149 wires to a netlist network with 44 inputs and 37 outputs.

3.123.31.1. Executing ABC.

3.123.32. Extracting gate netlist of module `\pwm' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_i, enabled by $abc$17733$auto$opt_dff.cc:194:make_patterns_logic$10795, asynchronously reset by !\rst_ni
Extracted 102 gates and 143 wires to a netlist network with 41 inputs and 36 outputs.

3.123.32.1. Executing ABC.

3.123.33. Extracting gate netlist of module `\pwm' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_i, enabled by $abc$17587$auto$opt_dff.cc:194:make_patterns_logic$10789, asynchronously reset by !\rst_ni
Extracted 99 gates and 137 wires to a netlist network with 38 inputs and 33 outputs.

3.123.33.1. Executing ABC.

3.123.34. Extracting gate netlist of module `\pwm' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_i, enabled by $abc$17843$auto$opt_dff.cc:194:make_patterns_logic$10801, asynchronously reset by !\rst_ni
Extracted 104 gates and 147 wires to a netlist network with 43 inputs and 36 outputs.

3.123.34.1. Executing ABC.

3.123.35. Extracting gate netlist of module `\pwm' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_i, enabled by $abc$19063$auto$opt_dff.cc:194:make_patterns_logic$10852, asynchronously reset by !\rst_ni
Extracted 8 gates and 12 wires to a netlist network with 4 inputs and 5 outputs.

3.123.35.1. Executing ABC.

3.123.36. Extracting gate netlist of module `\pwm' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_i, enabled by $abc$19072$auto$opt_dff.cc:194:make_patterns_logic$10861, asynchronously reset by !\rst_ni
Extracted 134 gates and 238 wires to a netlist network with 104 inputs and 37 outputs.

3.123.36.1. Executing ABC.

3.123.37. Extracting gate netlist of module `\pwm' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_i, enabled by $abc$19176$auto$opt_dff.cc:194:make_patterns_logic$10858, asynchronously reset by !\rst_ni
Extracted 13 gates and 21 wires to a netlist network with 8 inputs and 9 outputs.

3.123.37.1. Executing ABC.

3.123.38. Extracting gate netlist of module `\pwm' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_i, asynchronously reset by !\rst_ni
Extracted 253 gates and 315 wires to a netlist network with 62 inputs and 56 outputs.

3.123.38.1. Executing ABC.

3.123.39. Extracting gate netlist of module `\pwm' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_i, enabled by $abc$19707$u_reg.intg_err, asynchronously reset by !\rst_ni
Extracted 225 gates and 316 wires to a netlist network with 90 inputs and 2 outputs.

3.123.39.1. Executing ABC.

3.123.40. Extracting gate netlist of module `\pwm' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_i, enabled by $abc$16381$auto$opt_dff.cc:194:make_patterns_logic$10771, asynchronously reset by !\rst_ni
Extracted 61 gates and 92 wires to a netlist network with 31 inputs and 21 outputs.

3.123.40.1. Executing ABC.

3.123.41. Extracting gate netlist of module `\pwm' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_i, enabled by $abc$16444$auto$opt_dff.cc:219:make_patterns_logic$10879, asynchronously reset by !\rst_ni
Extracted 11 gates and 14 wires to a netlist network with 3 inputs and 4 outputs.

3.123.41.1. Executing ABC.

3.123.42. Extracting gate netlist of module `\pwm' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_i, enabled by $abc$16459$auto$opt_dff.cc:219:make_patterns_logic$10886, asynchronously reset by !\rst_ni
Extracted 35 gates and 43 wires to a netlist network with 7 inputs and 9 outputs.

3.123.42.1. Executing ABC.

3.123.43. Extracting gate netlist of module `\pwm' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_i, enabled by $abc$16498$auto$opt_dff.cc:219:make_patterns_logic$10872, asynchronously reset by !\rst_ni
Extracted 16 gates and 20 wires to a netlist network with 4 inputs and 7 outputs.

3.123.43.1. Executing ABC.

3.123.44. Extracting gate netlist of module `\pwm' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_i, enabled by $abc$18848$auto$opt_dff.cc:194:make_patterns_logic$10849, asynchronously reset by !\rst_ni
Extracted 79 gates and 127 wires to a netlist network with 48 inputs and 33 outputs.

3.123.44.1. Executing ABC.

3.123.45. Extracting gate netlist of module `\pwm' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_i, enabled by $abc$16521$auto$opt_dff.cc:194:make_patterns_logic$10737, asynchronously reset by !\rst_ni
Extracted 4 gates and 6 wires to a netlist network with 2 inputs and 3 outputs.

3.123.45.1. Executing ABC.

3.123.46. Extracting gate netlist of module `\pwm' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_i, enabled by $abc$16528$u_reg.u_reg_if.a_ack, asynchronously reset by !\rst_ni
Extracted 645 gates and 1022 wires to a netlist network with 377 inputs and 59 outputs.

3.123.46.1. Executing ABC.

3.123.47. Extracting gate netlist of module `\pwm' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_i, enabled by $abc$17147$auto$opt_dff.cc:194:make_patterns_logic$10741, asynchronously reset by !\rst_ni
Extracted 59 gates and 101 wires to a netlist network with 42 inputs and 23 outputs.

3.123.47.1. Executing ABC.

3.123.48. Extracting gate netlist of module `\pwm' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_i, enabled by $abc$17211$auto$opt_dff.cc:194:make_patterns_logic$10744, asynchronously reset by !\rst_ni
Extracted 8 gates and 12 wires to a netlist network with 4 inputs and 5 outputs.

3.123.48.1. Executing ABC.

3.123.49. Extracting gate netlist of module `\pwm' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_i, enabled by $abc$17227$auto$opt_dff.cc:194:make_patterns_logic$10747, asynchronously reset by !\rst_ni
Extracted 44 gates and 71 wires to a netlist network with 27 inputs and 19 outputs.

3.123.49.1. Executing ABC.

3.123.50. Extracting gate netlist of module `\pwm' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_core_i, asynchronously reset by !\rst_core_ni
Extracted 110 gates and 132 wires to a netlist network with 22 inputs and 22 outputs.

3.123.50.1. Executing ABC.

3.123.51. Extracting gate netlist of module `\pwm' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_i, enabled by $abc$19934$auto$opt_dff.cc:194:make_patterns_logic$10864, asynchronously reset by !\rst_ni
Extracted 15 gates and 24 wires to a netlist network with 9 inputs and 10 outputs.

3.123.51.1. Executing ABC.

yosys> abc -dff

3.124. Executing ABC pass (technology mapping using ABC).

3.124.1. Summary of detected clock domains:
  5 cells in clk=\clk_i, en=$abc$22459$abc$16521$auto$opt_dff.cc:194:make_patterns_logic$10737, arst=!\rst_ni, srst={ }
  10 cells in clk=\clk_i, en=$abc$19944$abc$17724$auto$opt_dff.cc:194:make_patterns_logic$10786, arst=!\rst_ni, srst={ }
  11 cells in clk=\clk_i, en=$abc$19955$abc$17501$auto$opt_dff.cc:194:make_patterns_logic$10768, arst=!\rst_ni, srst={ }
  11 cells in clk=\clk_i, en=$abc$23387$abc$17211$auto$opt_dff.cc:194:make_patterns_logic$10744, arst=!\rst_ni, srst={ }
  11 cells in clk=\clk_i, en=$abc$19966$abc$17360$auto$opt_dff.cc:194:make_patterns_logic$10756, arst=!\rst_ni, srst={ }
  11 cells in clk=\clk_i, en=$abc$19977$abc$17544$auto$opt_dff.cc:194:make_patterns_logic$10774, arst=!\rst_ni, srst={ }
  12 cells in clk=\clk_i, en=$abc$19987$abc$17433$auto$opt_dff.cc:194:make_patterns_logic$10762, arst=!\rst_ni, srst={ }
  10 cells in clk=\clk_i, en=$abc$19998$abc$17834$auto$opt_dff.cc:194:make_patterns_logic$10792, arst=!\rst_ni, srst={ }
  11 cells in clk=\clk_i, en=$abc$20009$abc$18370$auto$opt_dff.cc:194:make_patterns_logic$10816, arst=!\rst_ni, srst={ }
  11 cells in clk=\clk_i, en=$abc$20022$abc$18615$auto$opt_dff.cc:194:make_patterns_logic$10828, arst=!\rst_ni, srst={ }
  11 cells in clk=\clk_i, en=$abc$20032$abc$18501$auto$opt_dff.cc:194:make_patterns_logic$10822, arst=!\rst_ni, srst={ }
  10 cells in clk=\clk_i, en=$abc$20043$abc$18953$auto$opt_dff.cc:194:make_patterns_logic$10846, arst=!\rst_ni, srst={ }
  10 cells in clk=\clk_i, en=$abc$20054$abc$17978$auto$opt_dff.cc:194:make_patterns_logic$10798, arst=!\rst_ni, srst={ }
  10 cells in clk=\clk_i, en=$abc$20065$abc$18125$auto$opt_dff.cc:194:make_patterns_logic$10804, arst=!\rst_ni, srst={ }
  12 cells in clk=\clk_i, en=$abc$20074$abc$18235$auto$opt_dff.cc:194:make_patterns_logic$10810, arst=!\rst_ni, srst={ }
  55 cells in clk=\clk_i, en=$abc$20083$abc$17369$auto$opt_dff.cc:194:make_patterns_logic$10759, arst=!\rst_ni, srst={ }
  11 cells in clk=\clk_i, en=$abc$20142$abc$17576$auto$opt_dff.cc:194:make_patterns_logic$10780, arst=!\rst_ni, srst={ }
  10 cells in clk=\clk_i, en=$abc$20218$abc$17286$auto$opt_dff.cc:194:make_patterns_logic$10750, arst=!\rst_ni, srst={ }
  46 cells in clk=\clk_i, en=$abc$20155$abc$17442$auto$opt_dff.cc:194:make_patterns_logic$10765, arst=!\rst_ni, srst={ }
  9 cells in clk=\clk_i, en=$abc$20230$abc$18725$auto$opt_dff.cc:194:make_patterns_logic$10834, arst=!\rst_ni, srst={ }
  9 cells in clk=\clk_i, en=$abc$20301$abc$18838$auto$opt_dff.cc:194:make_patterns_logic$10840, arst=!\rst_ni, srst={ }
  25 cells in clk=\clk_i, en=$abc$20317$abc$17553$auto$opt_dff.cc:194:make_patterns_logic$10783, arst=!\rst_ni, srst={ }
  17 cells in clk=\clk_i, en=$abc$20344$abc$17512$auto$opt_dff.cc:194:make_patterns_logic$10777, arst=!\rst_ni, srst={ }
  90 cells in clk=\clk_i, en=$abc$20367$abc$18962$auto$opt_dff.cc:194:make_patterns_logic$10855, arst=!\rst_ni, srst={ }
  103 cells in clk=\clk_i, en=$abc$20474$abc$18734$auto$opt_dff.cc:194:make_patterns_logic$10843, arst=!\rst_ni, srst={ }
  87 cells in clk=\clk_i, en=$abc$20577$abc$18624$auto$opt_dff.cc:194:make_patterns_logic$10837, arst=!\rst_ni, srst={ }
  85 cells in clk=\clk_i, en=$abc$20683$abc$18510$auto$opt_dff.cc:194:make_patterns_logic$10831, arst=!\rst_ni, srst={ }
  105 cells in clk=\clk_i, en=$abc$20784$abc$18382$auto$opt_dff.cc:194:make_patterns_logic$10825, arst=!\rst_ni, srst={ }
  102 cells in clk=\clk_i, en=$abc$20890$abc$18244$auto$opt_dff.cc:194:make_patterns_logic$10819, arst=!\rst_ni, srst={ }
  98 cells in clk=\clk_i, en=$abc$20993$abc$18134$auto$opt_dff.cc:194:make_patterns_logic$10813, arst=!\rst_ni, srst={ }
  61 cells in clk=\clk_i, en=$abc$20240$abc$17297$auto$opt_dff.cc:194:make_patterns_logic$10753, arst=!\rst_ni, srst={ }
  103 cells in clk=\clk_i, en=$abc$21094$abc$17989$auto$opt_dff.cc:194:make_patterns_logic$10807, arst=!\rst_ni, srst={ }
  99 cells in clk=\clk_i, en=$abc$21200$abc$17733$auto$opt_dff.cc:194:make_patterns_logic$10795, arst=!\rst_ni, srst={ }
  102 cells in clk=\clk_i, en=$abc$21305$abc$17587$auto$opt_dff.cc:194:make_patterns_logic$10789, arst=!\rst_ni, srst={ }
  803 cells in clk=\clk_i, en=$abc$22466$abc$16528$u_reg.u_reg_if.a_ack, arst=!\rst_ni, srst={ }
  54 cells in clk=\clk_i, en=$abc$23323$abc$17147$auto$opt_dff.cc:194:make_patterns_logic$10741, arst=!\rst_ni, srst={ }
  102 cells in clk=\clk_i, en=$abc$21406$abc$17843$auto$opt_dff.cc:194:make_patterns_logic$10801, arst=!\rst_ni, srst={ }
  9 cells in clk=\clk_i, en=$abc$21511$abc$19063$auto$opt_dff.cc:194:make_patterns_logic$10852, arst=!\rst_ni, srst={ }
  135 cells in clk=\clk_i, en=$abc$21520$abc$19072$auto$opt_dff.cc:194:make_patterns_logic$10861, arst=!\rst_ni, srst={ }
  9 cells in clk=\clk_i, en=$abc$21657$abc$19176$auto$opt_dff.cc:194:make_patterns_logic$10858, arst=!\rst_ni, srst={ }
  252 cells in clk=\clk_i, en={ }, arst=!\rst_ni, srst={ }
  224 cells in clk=\clk_i, en=$abc$22002$abc$19707$u_reg.intg_err, arst=!\rst_ni, srst={ }
  14 cells in clk=\clk_i, en=$abc$22289$abc$16444$auto$opt_dff.cc:219:make_patterns_logic$10879, arst=!\rst_ni, srst={ }
  14 cells in clk=\clk_i, en=$abc$22340$abc$16498$auto$opt_dff.cc:219:make_patterns_logic$10872, arst=!\rst_ni, srst={ }
  60 cells in clk=\clk_i, en=$abc$22228$abc$16381$auto$opt_dff.cc:194:make_patterns_logic$10771, arst=!\rst_ni, srst={ }
  37 cells in clk=\clk_i, en=$abc$22303$abc$16459$auto$opt_dff.cc:219:make_patterns_logic$10886, arst=!\rst_ni, srst={ }
  83 cells in clk=\clk_i, en=$abc$22358$abc$18848$auto$opt_dff.cc:194:make_patterns_logic$10849, arst=!\rst_ni, srst={ }
  47 cells in clk=\clk_i, en=$abc$23396$abc$17227$auto$opt_dff.cc:194:make_patterns_logic$10747, arst=!\rst_ni, srst={ }
  110 cells in clk=\clk_core_i, en={ }, arst=!\rst_core_ni, srst={ }
  15 cells in clk=\clk_i, en=$abc$23654$abc$19934$auto$opt_dff.cc:194:make_patterns_logic$10864, arst=!\rst_ni, srst={ }

3.124.2. Extracting gate netlist of module `\pwm' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_i, enabled by $abc$22459$abc$16521$auto$opt_dff.cc:194:make_patterns_logic$10737, asynchronously reset by !\rst_ni
Extracted 5 gates and 7 wires to a netlist network with 2 inputs and 4 outputs.

3.124.2.1. Executing ABC.

3.124.3. Extracting gate netlist of module `\pwm' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_i, enabled by $abc$19944$abc$17724$auto$opt_dff.cc:194:make_patterns_logic$10786, asynchronously reset by !\rst_ni
Extracted 10 gates and 16 wires to a netlist network with 6 inputs and 7 outputs.

3.124.3.1. Executing ABC.

3.124.4. Extracting gate netlist of module `\pwm' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_i, enabled by $abc$19955$abc$17501$auto$opt_dff.cc:194:make_patterns_logic$10768, asynchronously reset by !\rst_ni
Extracted 11 gates and 17 wires to a netlist network with 6 inputs and 8 outputs.

3.124.4.1. Executing ABC.

3.124.5. Extracting gate netlist of module `\pwm' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_i, enabled by $abc$23387$abc$17211$auto$opt_dff.cc:194:make_patterns_logic$10744, asynchronously reset by !\rst_ni
Extracted 11 gates and 18 wires to a netlist network with 7 inputs and 7 outputs.

3.124.5.1. Executing ABC.

3.124.6. Extracting gate netlist of module `\pwm' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_i, enabled by $abc$19966$abc$17360$auto$opt_dff.cc:194:make_patterns_logic$10756, asynchronously reset by !\rst_ni
Extracted 11 gates and 18 wires to a netlist network with 7 inputs and 7 outputs.

3.124.6.1. Executing ABC.

3.124.7. Extracting gate netlist of module `\pwm' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_i, enabled by $abc$19977$abc$17544$auto$opt_dff.cc:194:make_patterns_logic$10774, asynchronously reset by !\rst_ni
Extracted 11 gates and 18 wires to a netlist network with 7 inputs and 8 outputs.

3.124.7.1. Executing ABC.

3.124.8. Extracting gate netlist of module `\pwm' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_i, enabled by $abc$19987$abc$17433$auto$opt_dff.cc:194:make_patterns_logic$10762, asynchronously reset by !\rst_ni
Extracted 12 gates and 19 wires to a netlist network with 7 inputs and 8 outputs.

3.124.8.1. Executing ABC.

3.124.9. Extracting gate netlist of module `\pwm' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_i, enabled by $abc$19998$abc$17834$auto$opt_dff.cc:194:make_patterns_logic$10792, asynchronously reset by !\rst_ni
Extracted 10 gates and 16 wires to a netlist network with 6 inputs and 6 outputs.

3.124.9.1. Executing ABC.

3.124.10. Extracting gate netlist of module `\pwm' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_i, enabled by $abc$20009$abc$18370$auto$opt_dff.cc:194:make_patterns_logic$10816, asynchronously reset by !\rst_ni
Extracted 11 gates and 18 wires to a netlist network with 7 inputs and 7 outputs.

3.124.10.1. Executing ABC.

3.124.11. Extracting gate netlist of module `\pwm' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_i, enabled by $abc$20022$abc$18615$auto$opt_dff.cc:194:make_patterns_logic$10828, asynchronously reset by !\rst_ni
Extracted 11 gates and 18 wires to a netlist network with 7 inputs and 8 outputs.

3.124.11.1. Executing ABC.

3.124.12. Extracting gate netlist of module `\pwm' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_i, enabled by $abc$20032$abc$18501$auto$opt_dff.cc:194:make_patterns_logic$10822, asynchronously reset by !\rst_ni
Extracted 11 gates and 18 wires to a netlist network with 7 inputs and 7 outputs.

3.124.12.1. Executing ABC.

3.124.13. Extracting gate netlist of module `\pwm' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_i, enabled by $abc$20043$abc$18953$auto$opt_dff.cc:194:make_patterns_logic$10846, asynchronously reset by !\rst_ni
Extracted 10 gates and 15 wires to a netlist network with 5 inputs and 7 outputs.

3.124.13.1. Executing ABC.

3.124.14. Extracting gate netlist of module `\pwm' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_i, enabled by $abc$20054$abc$17978$auto$opt_dff.cc:194:make_patterns_logic$10798, asynchronously reset by !\rst_ni
Extracted 10 gates and 16 wires to a netlist network with 6 inputs and 6 outputs.

3.124.14.1. Executing ABC.

3.124.15. Extracting gate netlist of module `\pwm' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_i, enabled by $abc$20065$abc$18125$auto$opt_dff.cc:194:make_patterns_logic$10804, asynchronously reset by !\rst_ni
Extracted 10 gates and 16 wires to a netlist network with 6 inputs and 6 outputs.

3.124.15.1. Executing ABC.

3.124.16. Extracting gate netlist of module `\pwm' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_i, enabled by $abc$20074$abc$18235$auto$opt_dff.cc:194:make_patterns_logic$10810, asynchronously reset by !\rst_ni
Extracted 12 gates and 19 wires to a netlist network with 7 inputs and 8 outputs.

3.124.16.1. Executing ABC.

3.124.17. Extracting gate netlist of module `\pwm' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_i, enabled by $abc$20083$abc$17369$auto$opt_dff.cc:194:make_patterns_logic$10759, asynchronously reset by !\rst_ni
Extracted 55 gates and 93 wires to a netlist network with 38 inputs and 22 outputs.

3.124.17.1. Executing ABC.

3.124.18. Extracting gate netlist of module `\pwm' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_i, enabled by $abc$20142$abc$17576$auto$opt_dff.cc:194:make_patterns_logic$10780, asynchronously reset by !\rst_ni
Extracted 11 gates and 17 wires to a netlist network with 6 inputs and 8 outputs.

3.124.18.1. Executing ABC.

3.124.19. Extracting gate netlist of module `\pwm' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_i, enabled by $abc$20218$abc$17286$auto$opt_dff.cc:194:make_patterns_logic$10750, asynchronously reset by !\rst_ni
Extracted 10 gates and 16 wires to a netlist network with 6 inputs and 6 outputs.

3.124.19.1. Executing ABC.

3.124.20. Extracting gate netlist of module `\pwm' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_i, enabled by $abc$20155$abc$17442$auto$opt_dff.cc:194:make_patterns_logic$10765, asynchronously reset by !\rst_ni
Extracted 46 gates and 75 wires to a netlist network with 29 inputs and 19 outputs.

3.124.20.1. Executing ABC.

3.124.21. Extracting gate netlist of module `\pwm' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_i, enabled by $abc$20230$abc$18725$auto$opt_dff.cc:194:make_patterns_logic$10834, asynchronously reset by !\rst_ni
Extracted 9 gates and 14 wires to a netlist network with 5 inputs and 6 outputs.

3.124.21.1. Executing ABC.

3.124.22. Extracting gate netlist of module `\pwm' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_i, enabled by $abc$20301$abc$18838$auto$opt_dff.cc:194:make_patterns_logic$10840, asynchronously reset by !\rst_ni
Extracted 9 gates and 14 wires to a netlist network with 5 inputs and 6 outputs.

3.124.22.1. Executing ABC.

3.124.23. Extracting gate netlist of module `\pwm' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_i, enabled by $abc$20317$abc$17553$auto$opt_dff.cc:194:make_patterns_logic$10783, asynchronously reset by !\rst_ni
Extracted 25 gates and 44 wires to a netlist network with 19 inputs and 11 outputs.

3.124.23.1. Executing ABC.

3.124.24. Extracting gate netlist of module `\pwm' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_i, enabled by $abc$20344$abc$17512$auto$opt_dff.cc:194:make_patterns_logic$10777, asynchronously reset by !\rst_ni
Extracted 17 gates and 29 wires to a netlist network with 12 inputs and 7 outputs.

3.124.24.1. Executing ABC.

3.124.25. Extracting gate netlist of module `\pwm' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_i, enabled by $abc$20367$abc$18962$auto$opt_dff.cc:194:make_patterns_logic$10855, asynchronously reset by !\rst_ni
Extracted 90 gates and 149 wires to a netlist network with 59 inputs and 36 outputs.

3.124.25.1. Executing ABC.

3.124.26. Extracting gate netlist of module `\pwm' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_i, enabled by $abc$20474$abc$18734$auto$opt_dff.cc:194:make_patterns_logic$10843, asynchronously reset by !\rst_ni
Extracted 103 gates and 174 wires to a netlist network with 71 inputs and 35 outputs.

3.124.26.1. Executing ABC.

3.124.27. Extracting gate netlist of module `\pwm' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_i, enabled by $abc$20577$abc$18624$auto$opt_dff.cc:194:make_patterns_logic$10837, asynchronously reset by !\rst_ni
Extracted 87 gates and 144 wires to a netlist network with 57 inputs and 36 outputs.

3.124.27.1. Executing ABC.

3.124.28. Extracting gate netlist of module `\pwm' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_i, enabled by $abc$20683$abc$18510$auto$opt_dff.cc:194:make_patterns_logic$10831, asynchronously reset by !\rst_ni
Extracted 85 gates and 138 wires to a netlist network with 53 inputs and 34 outputs.

3.124.28.1. Executing ABC.

3.124.29. Extracting gate netlist of module `\pwm' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_i, enabled by $abc$20784$abc$18382$auto$opt_dff.cc:194:make_patterns_logic$10825, asynchronously reset by !\rst_ni
Extracted 105 gates and 146 wires to a netlist network with 41 inputs and 36 outputs.

3.124.29.1. Executing ABC.

3.124.30. Extracting gate netlist of module `\pwm' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_i, enabled by $abc$20890$abc$18244$auto$opt_dff.cc:194:make_patterns_logic$10819, asynchronously reset by !\rst_ni
Extracted 102 gates and 143 wires to a netlist network with 41 inputs and 35 outputs.

3.124.30.1. Executing ABC.

3.124.31. Extracting gate netlist of module `\pwm' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_i, enabled by $abc$20993$abc$18134$auto$opt_dff.cc:194:make_patterns_logic$10813, asynchronously reset by !\rst_ni
Extracted 98 gates and 134 wires to a netlist network with 36 inputs and 33 outputs.

3.124.31.1. Executing ABC.

3.124.32. Extracting gate netlist of module `\pwm' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_i, enabled by $abc$20240$abc$17297$auto$opt_dff.cc:194:make_patterns_logic$10753, asynchronously reset by !\rst_ni
Extracted 61 gates and 104 wires to a netlist network with 43 inputs and 21 outputs.

3.124.32.1. Executing ABC.

3.124.33. Extracting gate netlist of module `\pwm' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_i, enabled by $abc$21094$abc$17989$auto$opt_dff.cc:194:make_patterns_logic$10807, asynchronously reset by !\rst_ni
Extracted 103 gates and 145 wires to a netlist network with 42 inputs and 36 outputs.

3.124.33.1. Executing ABC.

3.124.34. Extracting gate netlist of module `\pwm' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_i, enabled by $abc$21200$abc$17733$auto$opt_dff.cc:194:make_patterns_logic$10795, asynchronously reset by !\rst_ni
Extracted 99 gates and 137 wires to a netlist network with 38 inputs and 33 outputs.

3.124.34.1. Executing ABC.

3.124.35. Extracting gate netlist of module `\pwm' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_i, enabled by $abc$21305$abc$17587$auto$opt_dff.cc:194:make_patterns_logic$10789, asynchronously reset by !\rst_ni
Extracted 102 gates and 143 wires to a netlist network with 41 inputs and 36 outputs.

3.124.35.1. Executing ABC.

3.124.36. Extracting gate netlist of module `\pwm' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_i, enabled by $abc$23670$abc$22466$abc$16528$u_reg.u_reg_if.a_ack, asynchronously reset by !\rst_ni
Extracted 803 gates and 1180 wires to a netlist network with 377 inputs and 58 outputs.

3.124.36.1. Executing ABC.

3.124.37. Extracting gate netlist of module `\pwm' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_i, enabled by $abc$23323$abc$17147$auto$opt_dff.cc:194:make_patterns_logic$10741, asynchronously reset by !\rst_ni
Extracted 54 gates and 91 wires to a netlist network with 37 inputs and 19 outputs.

3.124.37.1. Executing ABC.

3.124.38. Extracting gate netlist of module `\pwm' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_i, enabled by $abc$21406$abc$17843$auto$opt_dff.cc:194:make_patterns_logic$10801, asynchronously reset by !\rst_ni
Extracted 102 gates and 143 wires to a netlist network with 41 inputs and 35 outputs.

3.124.38.1. Executing ABC.

3.124.39. Extracting gate netlist of module `\pwm' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_i, enabled by $abc$21511$abc$19063$auto$opt_dff.cc:194:make_patterns_logic$10852, asynchronously reset by !\rst_ni
Extracted 9 gates and 14 wires to a netlist network with 5 inputs and 6 outputs.

3.124.39.1. Executing ABC.

3.124.40. Extracting gate netlist of module `\pwm' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_i, enabled by $abc$21520$abc$19072$auto$opt_dff.cc:194:make_patterns_logic$10861, asynchronously reset by !\rst_ni
Extracted 135 gates and 239 wires to a netlist network with 104 inputs and 37 outputs.

3.124.40.1. Executing ABC.

3.124.41. Extracting gate netlist of module `\pwm' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_i, enabled by $abc$21657$abc$19176$auto$opt_dff.cc:194:make_patterns_logic$10858, asynchronously reset by !\rst_ni
Extracted 9 gates and 14 wires to a netlist network with 5 inputs and 6 outputs.

3.124.41.1. Executing ABC.

3.124.42. Extracting gate netlist of module `\pwm' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_i, asynchronously reset by !\rst_ni
Extracted 252 gates and 315 wires to a netlist network with 63 inputs and 58 outputs.

3.124.42.1. Executing ABC.

3.124.43. Extracting gate netlist of module `\pwm' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_i, enabled by $abc$22002$abc$19707$u_reg.intg_err, asynchronously reset by !\rst_ni
Extracted 224 gates and 315 wires to a netlist network with 90 inputs and 2 outputs.

3.124.43.1. Executing ABC.

3.124.44. Extracting gate netlist of module `\pwm' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_i, enabled by $abc$22289$abc$16444$auto$opt_dff.cc:219:make_patterns_logic$10879, asynchronously reset by !\rst_ni
Extracted 14 gates and 18 wires to a netlist network with 4 inputs and 5 outputs.

3.124.44.1. Executing ABC.

3.124.45. Extracting gate netlist of module `\pwm' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_i, enabled by $abc$22340$abc$16498$auto$opt_dff.cc:219:make_patterns_logic$10872, asynchronously reset by !\rst_ni
Extracted 14 gates and 18 wires to a netlist network with 4 inputs and 7 outputs.

3.124.45.1. Executing ABC.

3.124.46. Extracting gate netlist of module `\pwm' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_i, enabled by $abc$22228$abc$16381$auto$opt_dff.cc:194:make_patterns_logic$10771, asynchronously reset by !\rst_ni
Extracted 60 gates and 91 wires to a netlist network with 31 inputs and 21 outputs.

3.124.46.1. Executing ABC.

3.124.47. Extracting gate netlist of module `\pwm' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_i, enabled by $abc$22303$abc$16459$auto$opt_dff.cc:219:make_patterns_logic$10886, asynchronously reset by !\rst_ni
Extracted 37 gates and 47 wires to a netlist network with 10 inputs and 10 outputs.

3.124.47.1. Executing ABC.

3.124.48. Extracting gate netlist of module `\pwm' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_i, enabled by $abc$22358$abc$18848$auto$opt_dff.cc:194:make_patterns_logic$10849, asynchronously reset by !\rst_ni
Extracted 83 gates and 134 wires to a netlist network with 51 inputs and 34 outputs.

3.124.48.1. Executing ABC.

3.124.49. Extracting gate netlist of module `\pwm' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_i, enabled by $abc$23396$abc$17227$auto$opt_dff.cc:194:make_patterns_logic$10747, asynchronously reset by !\rst_ni
Extracted 47 gates and 77 wires to a netlist network with 30 inputs and 22 outputs.

3.124.49.1. Executing ABC.

3.124.50. Extracting gate netlist of module `\pwm' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_core_i, asynchronously reset by !\rst_core_ni
Extracted 110 gates and 132 wires to a netlist network with 22 inputs and 22 outputs.

3.124.50.1. Executing ABC.

3.124.51. Extracting gate netlist of module `\pwm' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_i, enabled by $abc$23654$abc$19934$auto$opt_dff.cc:194:make_patterns_logic$10864, asynchronously reset by !\rst_ni
Extracted 15 gates and 24 wires to a netlist network with 9 inputs and 10 outputs.

3.124.51.1. Executing ABC.

yosys> abc -dff

3.125. Executing ABC pass (technology mapping using ABC).

3.125.1. Summary of detected clock domains:
  4 cells in clk=\clk_i, en=$abc$23670$abc$22459$abc$16521$auto$opt_dff.cc:194:make_patterns_logic$10737, arst=!\rst_ni, srst={ }
  10 cells in clk=\clk_i, en=$abc$23677$abc$19944$abc$17724$auto$opt_dff.cc:194:make_patterns_logic$10786, arst=!\rst_ni, srst={ }
  11 cells in clk=\clk_i, en=$abc$23688$abc$19955$abc$17501$auto$opt_dff.cc:194:make_patterns_logic$10768, arst=!\rst_ni, srst={ }
  12 cells in clk=\clk_i, en=$abc$23700$abc$23387$abc$17211$auto$opt_dff.cc:194:make_patterns_logic$10744, arst=!\rst_ni, srst={ }
  11 cells in clk=\clk_i, en=$abc$23712$abc$19966$abc$17360$auto$opt_dff.cc:194:make_patterns_logic$10756, arst=!\rst_ni, srst={ }
  10 cells in clk=\clk_i, en=$abc$23724$abc$19977$abc$17544$auto$opt_dff.cc:194:make_patterns_logic$10774, arst=!\rst_ni, srst={ }
  12 cells in clk=\clk_i, en=$abc$23736$abc$19987$abc$17433$auto$opt_dff.cc:194:make_patterns_logic$10762, arst=!\rst_ni, srst={ }
  11 cells in clk=\clk_i, en=$abc$23749$abc$19998$abc$17834$auto$opt_dff.cc:194:make_patterns_logic$10792, arst=!\rst_ni, srst={ }
  11 cells in clk=\clk_i, en=$abc$23760$abc$20009$abc$18370$auto$opt_dff.cc:194:make_patterns_logic$10816, arst=!\rst_ni, srst={ }
  10 cells in clk=\clk_i, en=$abc$23772$abc$20022$abc$18615$auto$opt_dff.cc:194:make_patterns_logic$10828, arst=!\rst_ni, srst={ }
  11 cells in clk=\clk_i, en=$abc$23784$abc$20032$abc$18501$auto$opt_dff.cc:194:make_patterns_logic$10822, arst=!\rst_ni, srst={ }
  9 cells in clk=\clk_i, en=$abc$23796$abc$20043$abc$18953$auto$opt_dff.cc:194:make_patterns_logic$10846, arst=!\rst_ni, srst={ }
  10 cells in clk=\clk_i, en=$abc$23807$abc$20054$abc$17978$auto$opt_dff.cc:194:make_patterns_logic$10798, arst=!\rst_ni, srst={ }
  10 cells in clk=\clk_i, en=$abc$23818$abc$20065$abc$18125$auto$opt_dff.cc:194:make_patterns_logic$10804, arst=!\rst_ni, srst={ }
  11 cells in clk=\clk_i, en=$abc$23829$abc$20074$abc$18235$auto$opt_dff.cc:194:make_patterns_logic$10810, arst=!\rst_ni, srst={ }
  57 cells in clk=\clk_i, en=$abc$23842$abc$20083$abc$17369$auto$opt_dff.cc:194:make_patterns_logic$10759, arst=!\rst_ni, srst={ }
  11 cells in clk=\clk_i, en=$abc$23904$abc$20142$abc$17576$auto$opt_dff.cc:194:make_patterns_logic$10780, arst=!\rst_ni, srst={ }
  11 cells in clk=\clk_i, en=$abc$23916$abc$20218$abc$17286$auto$opt_dff.cc:194:make_patterns_logic$10750, arst=!\rst_ni, srst={ }
  10 cells in clk=\clk_i, en=$abc$23986$abc$20230$abc$18725$auto$opt_dff.cc:194:make_patterns_logic$10834, arst=!\rst_ni, srst={ }
  9 cells in clk=\clk_i, en=$abc$23996$abc$20301$abc$18838$auto$opt_dff.cc:194:make_patterns_logic$10840, arst=!\rst_ni, srst={ }
  44 cells in clk=\clk_i, en=$abc$23927$abc$20155$abc$17442$auto$opt_dff.cc:194:make_patterns_logic$10765, arst=!\rst_ni, srst={ }
  25 cells in clk=\clk_i, en=$abc$24006$abc$20317$abc$17553$auto$opt_dff.cc:194:make_patterns_logic$10783, arst=!\rst_ni, srst={ }
  16 cells in clk=\clk_i, en=$abc$24033$abc$20344$abc$17512$auto$opt_dff.cc:194:make_patterns_logic$10777, arst=!\rst_ni, srst={ }
  90 cells in clk=\clk_i, en=$abc$24056$abc$20367$abc$18962$auto$opt_dff.cc:194:make_patterns_logic$10855, arst=!\rst_ni, srst={ }
  102 cells in clk=\clk_i, en=$abc$24160$abc$20474$abc$18734$auto$opt_dff.cc:194:make_patterns_logic$10843, arst=!\rst_ni, srst={ }
  94 cells in clk=\clk_i, en=$abc$24263$abc$20577$abc$18624$auto$opt_dff.cc:194:make_patterns_logic$10837, arst=!\rst_ni, srst={ }
  78 cells in clk=\clk_i, en=$abc$24367$abc$20683$abc$18510$auto$opt_dff.cc:194:make_patterns_logic$10831, arst=!\rst_ni, srst={ }
  105 cells in clk=\clk_i, en=$abc$24469$abc$20784$abc$18382$auto$opt_dff.cc:194:make_patterns_logic$10825, arst=!\rst_ni, srst={ }
  103 cells in clk=\clk_i, en=$abc$24575$abc$20890$abc$18244$auto$opt_dff.cc:194:make_patterns_logic$10819, arst=!\rst_ni, srst={ }
  99 cells in clk=\clk_i, en=$abc$24678$abc$20993$abc$18134$auto$opt_dff.cc:194:make_patterns_logic$10813, arst=!\rst_ni, srst={ }
  60 cells in clk=\clk_i, en=$abc$24779$abc$20240$abc$17297$auto$opt_dff.cc:194:make_patterns_logic$10753, arst=!\rst_ni, srst={ }
  58 cells in clk=\clk_i, en=$abc$27136$abc$23396$abc$17227$auto$opt_dff.cc:194:make_patterns_logic$10747, arst=!\rst_ni, srst={ }
  102 cells in clk=\clk_i, en=$abc$24840$abc$21094$abc$17989$auto$opt_dff.cc:194:make_patterns_logic$10807, arst=!\rst_ni, srst={ }
  99 cells in clk=\clk_i, en=$abc$24944$abc$21200$abc$17733$auto$opt_dff.cc:194:make_patterns_logic$10795, arst=!\rst_ni, srst={ }
  102 cells in clk=\clk_i, en=$abc$25045$abc$21305$abc$17587$auto$opt_dff.cc:194:make_patterns_logic$10789, arst=!\rst_ni, srst={ }
  822 cells in clk=\clk_i, en=$abc$23670$abc$22466$abc$16528$u_reg.u_reg_if.a_ack, arst=!\rst_ni, srst={ }
  44 cells in clk=\clk_i, en=$abc$26024$abc$23323$abc$17147$auto$opt_dff.cc:194:make_patterns_logic$10741, arst=!\rst_ni, srst={ }
  102 cells in clk=\clk_i, en=$abc$26083$abc$21406$abc$17843$auto$opt_dff.cc:194:make_patterns_logic$10801, arst=!\rst_ni, srst={ }
  9 cells in clk=\clk_i, en=$abc$26186$abc$21511$abc$19063$auto$opt_dff.cc:194:make_patterns_logic$10852, arst=!\rst_ni, srst={ }
  134 cells in clk=\clk_i, en=$abc$26196$abc$21520$abc$19072$auto$opt_dff.cc:194:make_patterns_logic$10861, arst=!\rst_ni, srst={ }
  9 cells in clk=\clk_i, en=$abc$26331$abc$21657$abc$19176$auto$opt_dff.cc:194:make_patterns_logic$10858, arst=!\rst_ni, srst={ }
  36 cells in clk=\clk_i, en=$abc$26996$abc$22303$abc$16459$auto$opt_dff.cc:219:make_patterns_logic$10886, arst=!\rst_ni, srst={ }
  82 cells in clk=\clk_i, en=$abc$27034$abc$22358$abc$18848$auto$opt_dff.cc:194:make_patterns_logic$10849, arst=!\rst_ni, srst={ }
  228 cells in clk=\clk_i, en=$abc$26675$abc$22002$abc$19707$u_reg.intg_err, arst=!\rst_ni, srst={ }
  14 cells in clk=\clk_i, en=$abc$26905$abc$22289$abc$16444$auto$opt_dff.cc:219:make_patterns_logic$10879, arst=!\rst_ni, srst={ }
  15 cells in clk=\clk_i, en=$abc$26920$abc$22340$abc$16498$auto$opt_dff.cc:219:make_patterns_logic$10872, arst=!\rst_ni, srst={ }
  255 cells in clk=\clk_i, en={ }, arst=!\rst_ni, srst={ }
  60 cells in clk=\clk_i, en=$abc$26935$abc$22228$abc$16381$auto$opt_dff.cc:194:make_patterns_logic$10771, arst=!\rst_ni, srst={ }
  110 cells in clk=\clk_core_i, en={ }, arst=!\rst_core_ni, srst={ }
  15 cells in clk=\clk_i, en=$abc$27399$abc$23654$abc$19934$auto$opt_dff.cc:194:make_patterns_logic$10864, arst=!\rst_ni, srst={ }

3.125.2. Extracting gate netlist of module `\pwm' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_i, enabled by $abc$23670$abc$22459$abc$16521$auto$opt_dff.cc:194:make_patterns_logic$10737, asynchronously reset by !\rst_ni
Extracted 4 gates and 6 wires to a netlist network with 2 inputs and 3 outputs.

3.125.2.1. Executing ABC.

3.125.3. Extracting gate netlist of module `\pwm' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_i, enabled by $abc$23677$abc$19944$abc$17724$auto$opt_dff.cc:194:make_patterns_logic$10786, asynchronously reset by !\rst_ni
Extracted 10 gates and 16 wires to a netlist network with 6 inputs and 7 outputs.

3.125.3.1. Executing ABC.

3.125.4. Extracting gate netlist of module `\pwm' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_i, enabled by $abc$23688$abc$19955$abc$17501$auto$opt_dff.cc:194:make_patterns_logic$10768, asynchronously reset by !\rst_ni
Extracted 11 gates and 17 wires to a netlist network with 6 inputs and 8 outputs.

3.125.4.1. Executing ABC.

3.125.5. Extracting gate netlist of module `\pwm' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_i, enabled by $abc$23700$abc$23387$abc$17211$auto$opt_dff.cc:194:make_patterns_logic$10744, asynchronously reset by !\rst_ni
Extracted 12 gates and 19 wires to a netlist network with 7 inputs and 8 outputs.

3.125.5.1. Executing ABC.

3.125.6. Extracting gate netlist of module `\pwm' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_i, enabled by $abc$23712$abc$19966$abc$17360$auto$opt_dff.cc:194:make_patterns_logic$10756, asynchronously reset by !\rst_ni
Extracted 11 gates and 18 wires to a netlist network with 7 inputs and 7 outputs.

3.125.6.1. Executing ABC.

3.125.7. Extracting gate netlist of module `\pwm' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_i, enabled by $abc$23724$abc$19977$abc$17544$auto$opt_dff.cc:194:make_patterns_logic$10774, asynchronously reset by !\rst_ni
Extracted 10 gates and 16 wires to a netlist network with 6 inputs and 7 outputs.

3.125.7.1. Executing ABC.

3.125.8. Extracting gate netlist of module `\pwm' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_i, enabled by $abc$23736$abc$19987$abc$17433$auto$opt_dff.cc:194:make_patterns_logic$10762, asynchronously reset by !\rst_ni
Extracted 12 gates and 20 wires to a netlist network with 8 inputs and 8 outputs.

3.125.8.1. Executing ABC.

3.125.9. Extracting gate netlist of module `\pwm' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_i, enabled by $abc$23749$abc$19998$abc$17834$auto$opt_dff.cc:194:make_patterns_logic$10792, asynchronously reset by !\rst_ni
Extracted 11 gates and 17 wires to a netlist network with 6 inputs and 6 outputs.

3.125.9.1. Executing ABC.

3.125.10. Extracting gate netlist of module `\pwm' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_i, enabled by $abc$23760$abc$20009$abc$18370$auto$opt_dff.cc:194:make_patterns_logic$10816, asynchronously reset by !\rst_ni
Extracted 11 gates and 18 wires to a netlist network with 7 inputs and 7 outputs.

3.125.10.1. Executing ABC.

3.125.11. Extracting gate netlist of module `\pwm' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_i, enabled by $abc$23772$abc$20022$abc$18615$auto$opt_dff.cc:194:make_patterns_logic$10828, asynchronously reset by !\rst_ni
Extracted 10 gates and 16 wires to a netlist network with 6 inputs and 7 outputs.

3.125.11.1. Executing ABC.

3.125.12. Extracting gate netlist of module `\pwm' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_i, enabled by $abc$23784$abc$20032$abc$18501$auto$opt_dff.cc:194:make_patterns_logic$10822, asynchronously reset by !\rst_ni
Extracted 11 gates and 18 wires to a netlist network with 7 inputs and 7 outputs.

3.125.12.1. Executing ABC.

3.125.13. Extracting gate netlist of module `\pwm' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_i, enabled by $abc$23796$abc$20043$abc$18953$auto$opt_dff.cc:194:make_patterns_logic$10846, asynchronously reset by !\rst_ni
Extracted 9 gates and 14 wires to a netlist network with 5 inputs and 6 outputs.

3.125.13.1. Executing ABC.

3.125.14. Extracting gate netlist of module `\pwm' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_i, enabled by $abc$23807$abc$20054$abc$17978$auto$opt_dff.cc:194:make_patterns_logic$10798, asynchronously reset by !\rst_ni
Extracted 10 gates and 16 wires to a netlist network with 6 inputs and 6 outputs.

3.125.14.1. Executing ABC.

3.125.15. Extracting gate netlist of module `\pwm' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_i, enabled by $abc$23818$abc$20065$abc$18125$auto$opt_dff.cc:194:make_patterns_logic$10804, asynchronously reset by !\rst_ni
Extracted 10 gates and 16 wires to a netlist network with 6 inputs and 6 outputs.

3.125.15.1. Executing ABC.

3.125.16. Extracting gate netlist of module `\pwm' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_i, enabled by $abc$23829$abc$20074$abc$18235$auto$opt_dff.cc:194:make_patterns_logic$10810, asynchronously reset by !\rst_ni
Extracted 11 gates and 18 wires to a netlist network with 7 inputs and 7 outputs.

3.125.16.1. Executing ABC.

3.125.17. Extracting gate netlist of module `\pwm' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_i, enabled by $abc$23842$abc$20083$abc$17369$auto$opt_dff.cc:194:make_patterns_logic$10759, asynchronously reset by !\rst_ni
Extracted 57 gates and 97 wires to a netlist network with 40 inputs and 22 outputs.

3.125.17.1. Executing ABC.

3.125.18. Extracting gate netlist of module `\pwm' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_i, enabled by $abc$23904$abc$20142$abc$17576$auto$opt_dff.cc:194:make_patterns_logic$10780, asynchronously reset by !\rst_ni
Extracted 11 gates and 18 wires to a netlist network with 7 inputs and 8 outputs.

3.125.18.1. Executing ABC.

3.125.19. Extracting gate netlist of module `\pwm' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_i, enabled by $abc$23916$abc$20218$abc$17286$auto$opt_dff.cc:194:make_patterns_logic$10750, asynchronously reset by !\rst_ni
Extracted 11 gates and 17 wires to a netlist network with 6 inputs and 6 outputs.

3.125.19.1. Executing ABC.

3.125.20. Extracting gate netlist of module `\pwm' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_i, enabled by $abc$23986$abc$20230$abc$18725$auto$opt_dff.cc:194:make_patterns_logic$10834, asynchronously reset by !\rst_ni
Extracted 10 gates and 15 wires to a netlist network with 5 inputs and 7 outputs.

3.125.20.1. Executing ABC.

3.125.21. Extracting gate netlist of module `\pwm' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_i, enabled by $abc$23996$abc$20301$abc$18838$auto$opt_dff.cc:194:make_patterns_logic$10840, asynchronously reset by !\rst_ni
Extracted 9 gates and 14 wires to a netlist network with 5 inputs and 6 outputs.

3.125.21.1. Executing ABC.

3.125.22. Extracting gate netlist of module `\pwm' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_i, enabled by $abc$23927$abc$20155$abc$17442$auto$opt_dff.cc:194:make_patterns_logic$10765, asynchronously reset by !\rst_ni
Extracted 44 gates and 71 wires to a netlist network with 27 inputs and 19 outputs.

3.125.22.1. Executing ABC.

3.125.23. Extracting gate netlist of module `\pwm' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_i, enabled by $abc$24006$abc$20317$abc$17553$auto$opt_dff.cc:194:make_patterns_logic$10783, asynchronously reset by !\rst_ni
Extracted 25 gates and 45 wires to a netlist network with 20 inputs and 10 outputs.

3.125.23.1. Executing ABC.

3.125.24. Extracting gate netlist of module `\pwm' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_i, enabled by $abc$24033$abc$20344$abc$17512$auto$opt_dff.cc:194:make_patterns_logic$10777, asynchronously reset by !\rst_ni
Extracted 16 gates and 26 wires to a netlist network with 10 inputs and 7 outputs.

3.125.24.1. Executing ABC.

3.125.25. Extracting gate netlist of module `\pwm' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_i, enabled by $abc$24056$abc$20367$abc$18962$auto$opt_dff.cc:194:make_patterns_logic$10855, asynchronously reset by !\rst_ni
Extracted 90 gates and 148 wires to a netlist network with 58 inputs and 34 outputs.

3.125.25.1. Executing ABC.

3.125.26. Extracting gate netlist of module `\pwm' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_i, enabled by $abc$24160$abc$20474$abc$18734$auto$opt_dff.cc:194:make_patterns_logic$10843, asynchronously reset by !\rst_ni
Extracted 102 gates and 173 wires to a netlist network with 71 inputs and 35 outputs.

3.125.26.1. Executing ABC.

3.125.27. Extracting gate netlist of module `\pwm' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_i, enabled by $abc$24263$abc$20577$abc$18624$auto$opt_dff.cc:194:make_patterns_logic$10837, asynchronously reset by !\rst_ni
Extracted 94 gates and 156 wires to a netlist network with 62 inputs and 37 outputs.

3.125.27.1. Executing ABC.

3.125.28. Extracting gate netlist of module `\pwm' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_i, enabled by $abc$24367$abc$20683$abc$18510$auto$opt_dff.cc:194:make_patterns_logic$10831, asynchronously reset by !\rst_ni
Extracted 78 gates and 126 wires to a netlist network with 48 inputs and 33 outputs.

3.125.28.1. Executing ABC.

3.125.29. Extracting gate netlist of module `\pwm' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_i, enabled by $abc$24469$abc$20784$abc$18382$auto$opt_dff.cc:194:make_patterns_logic$10825, asynchronously reset by !\rst_ni
Extracted 105 gates and 146 wires to a netlist network with 41 inputs and 36 outputs.

3.125.29.1. Executing ABC.

3.125.30. Extracting gate netlist of module `\pwm' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_i, enabled by $abc$24575$abc$20890$abc$18244$auto$opt_dff.cc:194:make_patterns_logic$10819, asynchronously reset by !\rst_ni
Extracted 103 gates and 144 wires to a netlist network with 41 inputs and 35 outputs.

3.125.30.1. Executing ABC.

3.125.31. Extracting gate netlist of module `\pwm' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_i, enabled by $abc$24678$abc$20993$abc$18134$auto$opt_dff.cc:194:make_patterns_logic$10813, asynchronously reset by !\rst_ni
Extracted 99 gates and 137 wires to a netlist network with 38 inputs and 33 outputs.

3.125.31.1. Executing ABC.

3.125.32. Extracting gate netlist of module `\pwm' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_i, enabled by $abc$24779$abc$20240$abc$17297$auto$opt_dff.cc:194:make_patterns_logic$10753, asynchronously reset by !\rst_ni
Extracted 60 gates and 103 wires to a netlist network with 43 inputs and 21 outputs.

3.125.32.1. Executing ABC.

3.125.33. Extracting gate netlist of module `\pwm' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_i, enabled by $abc$27136$abc$23396$abc$17227$auto$opt_dff.cc:194:make_patterns_logic$10747, asynchronously reset by !\rst_ni
Extracted 58 gates and 98 wires to a netlist network with 40 inputs and 22 outputs.

3.125.33.1. Executing ABC.

3.125.34. Extracting gate netlist of module `\pwm' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_i, enabled by $abc$24840$abc$21094$abc$17989$auto$opt_dff.cc:194:make_patterns_logic$10807, asynchronously reset by !\rst_ni
Extracted 102 gates and 143 wires to a netlist network with 41 inputs and 36 outputs.

3.125.34.1. Executing ABC.

3.125.35. Extracting gate netlist of module `\pwm' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_i, enabled by $abc$24944$abc$21200$abc$17733$auto$opt_dff.cc:194:make_patterns_logic$10795, asynchronously reset by !\rst_ni
Extracted 99 gates and 137 wires to a netlist network with 38 inputs and 33 outputs.

3.125.35.1. Executing ABC.

3.125.36. Extracting gate netlist of module `\pwm' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_i, enabled by $abc$25045$abc$21305$abc$17587$auto$opt_dff.cc:194:make_patterns_logic$10789, asynchronously reset by !\rst_ni
Extracted 102 gates and 143 wires to a netlist network with 41 inputs and 36 outputs.

3.125.36.1. Executing ABC.

3.125.37. Extracting gate netlist of module `\pwm' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_i, enabled by $abc$23670$abc$22466$abc$16528$u_reg.u_reg_if.a_ack, asynchronously reset by !\rst_ni
Extracted 822 gates and 1199 wires to a netlist network with 377 inputs and 59 outputs.

3.125.37.1. Executing ABC.

3.125.38. Extracting gate netlist of module `\pwm' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_i, enabled by $abc$26024$abc$23323$abc$17147$auto$opt_dff.cc:194:make_patterns_logic$10741, asynchronously reset by !\rst_ni
Extracted 44 gates and 71 wires to a netlist network with 27 inputs and 19 outputs.

3.125.38.1. Executing ABC.

3.125.39. Extracting gate netlist of module `\pwm' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_i, enabled by $abc$26083$abc$21406$abc$17843$auto$opt_dff.cc:194:make_patterns_logic$10801, asynchronously reset by !\rst_ni
Extracted 102 gates and 143 wires to a netlist network with 41 inputs and 35 outputs.

3.125.39.1. Executing ABC.

3.125.40. Extracting gate netlist of module `\pwm' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_i, enabled by $abc$26186$abc$21511$abc$19063$auto$opt_dff.cc:194:make_patterns_logic$10852, asynchronously reset by !\rst_ni
Extracted 9 gates and 14 wires to a netlist network with 5 inputs and 6 outputs.

3.125.40.1. Executing ABC.

3.125.41. Extracting gate netlist of module `\pwm' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_i, enabled by $abc$26196$abc$21520$abc$19072$auto$opt_dff.cc:194:make_patterns_logic$10861, asynchronously reset by !\rst_ni
Extracted 134 gates and 238 wires to a netlist network with 104 inputs and 37 outputs.

3.125.41.1. Executing ABC.

3.125.42. Extracting gate netlist of module `\pwm' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_i, enabled by $abc$26331$abc$21657$abc$19176$auto$opt_dff.cc:194:make_patterns_logic$10858, asynchronously reset by !\rst_ni
Extracted 9 gates and 14 wires to a netlist network with 5 inputs and 6 outputs.

3.125.42.1. Executing ABC.

3.125.43. Extracting gate netlist of module `\pwm' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_i, enabled by $abc$26996$abc$22303$abc$16459$auto$opt_dff.cc:219:make_patterns_logic$10886, asynchronously reset by !\rst_ni
Extracted 36 gates and 46 wires to a netlist network with 10 inputs and 9 outputs.

3.125.43.1. Executing ABC.

3.125.44. Extracting gate netlist of module `\pwm' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_i, enabled by $abc$27034$abc$22358$abc$18848$auto$opt_dff.cc:194:make_patterns_logic$10849, asynchronously reset by !\rst_ni
Extracted 82 gates and 134 wires to a netlist network with 52 inputs and 36 outputs.

3.125.44.1. Executing ABC.

3.125.45. Extracting gate netlist of module `\pwm' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_i, enabled by $abc$26675$abc$22002$abc$19707$u_reg.intg_err, asynchronously reset by !\rst_ni
Extracted 228 gates and 319 wires to a netlist network with 90 inputs and 2 outputs.

3.125.45.1. Executing ABC.

3.125.46. Extracting gate netlist of module `\pwm' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_i, enabled by $abc$26905$abc$22289$abc$16444$auto$opt_dff.cc:219:make_patterns_logic$10879, asynchronously reset by !\rst_ni
Extracted 14 gates and 18 wires to a netlist network with 4 inputs and 5 outputs.

3.125.46.1. Executing ABC.

3.125.47. Extracting gate netlist of module `\pwm' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_i, enabled by $abc$26920$abc$22340$abc$16498$auto$opt_dff.cc:219:make_patterns_logic$10872, asynchronously reset by !\rst_ni
Extracted 15 gates and 20 wires to a netlist network with 5 inputs and 7 outputs.

3.125.47.1. Executing ABC.

3.125.48. Extracting gate netlist of module `\pwm' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_i, asynchronously reset by !\rst_ni
Extracted 255 gates and 317 wires to a netlist network with 62 inputs and 59 outputs.

3.125.48.1. Executing ABC.

3.125.49. Extracting gate netlist of module `\pwm' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_i, enabled by $abc$26935$abc$22228$abc$16381$auto$opt_dff.cc:194:make_patterns_logic$10771, asynchronously reset by !\rst_ni
Extracted 60 gates and 91 wires to a netlist network with 31 inputs and 21 outputs.

3.125.49.1. Executing ABC.

3.125.50. Extracting gate netlist of module `\pwm' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_core_i, asynchronously reset by !\rst_core_ni
Extracted 110 gates and 132 wires to a netlist network with 22 inputs and 22 outputs.

3.125.50.1. Executing ABC.

3.125.51. Extracting gate netlist of module `\pwm' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_i, enabled by $abc$27399$abc$23654$abc$19934$auto$opt_dff.cc:194:make_patterns_logic$10864, asynchronously reset by !\rst_ni
Extracted 15 gates and 24 wires to a netlist network with 9 inputs and 10 outputs.

3.125.51.1. Executing ABC.

yosys> opt_ffinv

3.126. Executing OPT_FFINV pass (push inverters through FFs).
Discovering LUTs.
Pushed 0 inverters.

yosys> opt_expr

3.127. Executing OPT_EXPR pass (perform const folding).
Optimizing module pwm.
<suppressed ~29 debug messages>

yosys> opt_merge -nomux

3.128. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\pwm'.
<suppressed ~129 debug messages>
Removed a total of 43 cells.

yosys> opt_muxtree

3.129. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \pwm..
  Creating internal representation of mux trees.
  No muxes found in this module.
Removed 0 multiplexer ports.

yosys> opt_reduce

3.130. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \pwm.
Performed a total of 0 changes.

yosys> opt_merge

3.131. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\pwm'.
Removed a total of 0 cells.

yosys> opt_share

3.132. Executing OPT_SHARE pass.

yosys> opt_dff -nosdff -sat

3.133. Executing OPT_DFF pass (perform DFF optimizations).

yosys> opt_clean

3.134. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \pwm..
Removed 1 unused cells and 19450 unused wires.
<suppressed ~751 debug messages>

yosys> opt_expr

3.135. Executing OPT_EXPR pass (perform const folding).
Optimizing module pwm.

yosys> opt_muxtree

3.136. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \pwm..
  Creating internal representation of mux trees.
  No muxes found in this module.
Removed 0 multiplexer ports.

yosys> opt_reduce

3.137. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \pwm.
Performed a total of 0 changes.

yosys> opt_merge

3.138. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\pwm'.
Removed a total of 0 cells.

yosys> opt_share

3.139. Executing OPT_SHARE pass.

yosys> opt_dff -nosdff -sat

3.140. Executing OPT_DFF pass (perform DFF optimizations).

yosys> opt_clean

3.141. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \pwm..

yosys> opt_expr

3.142. Executing OPT_EXPR pass (perform const folding).
Optimizing module pwm.
MAX OPT ITERATION = 2

yosys> bmuxmap

3.143. Executing BMUXMAP pass.

yosys> demuxmap

3.144. Executing DEMUXMAP pass.

yosys> clean_zerowidth

yosys> abc -script /tmp/yosys_Fp7kat/abc_tmp_1.scr

3.145. Executing ABC pass (technology mapping using ABC).

3.145.1. Extracting gate netlist of module `\pwm' to `<abc-temp-dir>/input.blif'..
Extracted 2501 gates and 3299 wires to a netlist network with 798 inputs and 731 outputs.

3.145.1.1. Executing ABC.
DE:   #PIs = 798  #Luts =  1147  Max Lvl =   6  Avg Lvl =   5.56  [   0.15 sec. at Pass 0]{firstMap}
DE:   #PIs = 798  #Luts =  1066  Max Lvl =  12  Avg Lvl =  10.69  [   8.67 sec. at Pass 1]{initMapFlow}
DE:   #PIs = 798  #Luts =  1064  Max Lvl =  10  Avg Lvl =   8.96  [   2.76 sec. at Pass 2]{map}
DE:   #PIs = 798  #Luts =  1060  Max Lvl =  11  Avg Lvl =   9.84  [   7.02 sec. at Pass 3]{postMap}
DE:   #PIs = 798  #Luts =  1059  Max Lvl =  10  Avg Lvl =   8.96  [   5.51 sec. at Pass 4]{map}
DE:   #PIs = 798  #Luts =  1059  Max Lvl =  10  Avg Lvl =   8.96  [   7.05 sec. at Pass 5]{postMap}
DE:   #PIs = 798  #Luts =  1057  Max Lvl =  10  Avg Lvl =   8.94  [   4.90 sec. at Pass 6]{map}
DE:   #PIs = 798  #Luts =  1057  Max Lvl =  10  Avg Lvl =   8.94  [   8.82 sec. at Pass 7]{postMap}
DE:   #PIs = 798  #Luts =  1055  Max Lvl =  10  Avg Lvl =   8.97  [   5.43 sec. at Pass 8]{map}
DE:   #PIs = 798  #Luts =  1055  Max Lvl =  10  Avg Lvl =   8.97  [   7.09 sec. at Pass 9]{postMap}
DE:   #PIs = 798  #Luts =  1055  Max Lvl =  10  Avg Lvl =   8.97  [   5.87 sec. at Pass 10]{map}
DE:   #PIs = 798  #Luts =  1055  Max Lvl =  10  Avg Lvl =   8.97  [   6.53 sec. at Pass 11]{postMap}
DE:   #PIs = 798  #Luts =  1055  Max Lvl =  10  Avg Lvl =   8.97  [   1.53 sec. at Pass 12]{finalMap}

yosys> opt_expr

3.146. Executing OPT_EXPR pass (perform const folding).
Optimizing module pwm.

yosys> opt_merge -nomux

3.147. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\pwm'.
Removed a total of 0 cells.

yosys> opt_muxtree

3.148. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \pwm..
  Creating internal representation of mux trees.
  No muxes found in this module.
Removed 0 multiplexer ports.

yosys> opt_reduce

3.149. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \pwm.
Performed a total of 0 changes.

yosys> opt_merge

3.150. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\pwm'.
Removed a total of 0 cells.

yosys> opt_share

3.151. Executing OPT_SHARE pass.

yosys> opt_dff -nosdff -nodffe

3.152. Executing OPT_DFF pass (perform DFF optimizations).

yosys> opt_clean

3.153. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \pwm..
Removed 0 unused cells and 3264 unused wires.
<suppressed ~122 debug messages>

yosys> opt_expr

3.154. Executing OPT_EXPR pass (perform const folding).
Optimizing module pwm.
MAX OPT ITERATION = 1

yosys> opt_ffinv

3.155. Executing OPT_FFINV pass (push inverters through FFs).
Discovering LUTs.
Pushed 1 inverters.

yosys> stat

3.156. Printing statistics.

=== pwm ===

   Number of wires:               4078
   Number of wire bits:          14920
   Number of public wires:        2370
   Number of public wire bits:   13212
   Number of memories:               0
   Number of memory bits:            0
   Number of processes:              0
   Number of cells:               1857
     $_DFFE_PN0P_                  610
     $_DFF_PN0_                    192
     $_DFF_PN1_                      1
     $lut                         1054


yosys> shregmap -minlen 8 -maxlen 20

3.157. Executing SHREGMAP pass (map shift registers).
Converted 0 dff cells into 0 shift registers.

yosys> dfflegalize -cell $_DFF_?_ 0 -cell $_DFF_???_ 0 -cell $_DFFE_????_ 0 -cell $_DFFSR_???_ 0 -cell $_DFFSRE_????_ 0 -cell $_DLATCHSR_PPP_ 0

3.158. Executing DFFLEGALIZE pass (convert FFs to types supported by the target).

yosys> stat

3.159. Printing statistics.

=== pwm ===

   Number of wires:               4078
   Number of wire bits:          14920
   Number of public wires:        2370
   Number of public wire bits:   13212
   Number of memories:               0
   Number of memory bits:            0
   Number of processes:              0
   Number of cells:               1857
     $_DFFE_PN0P_                  610
     $_DFF_PN0_                    192
     $_DFF_PN1_                      1
     $lut                         1054


yosys> techmap -map +/techmap.v -map +/rapidsilicon/genesis/ffs_map.v

3.160. Executing TECHMAP pass (map to technology primitives).

3.160.1. Executing Verilog-2005 frontend: /nfs_scratch/scratch/Vorak/aram/Workspace/Raptor/yosys_verific_rs/yosys/install/bin/../share/yosys/techmap.v
Parsing Verilog input from `/nfs_scratch/scratch/Vorak/aram/Workspace/Raptor/yosys_verific_rs/yosys/install/bin/../share/yosys/techmap.v' to AST representation.
Generating RTLIL representation for module `\_90_simplemap_bool_ops'.
Generating RTLIL representation for module `\_90_simplemap_reduce_ops'.
Generating RTLIL representation for module `\_90_simplemap_logic_ops'.
Generating RTLIL representation for module `\_90_simplemap_compare_ops'.
Generating RTLIL representation for module `\_90_simplemap_various'.
Generating RTLIL representation for module `\_90_simplemap_registers'.
Generating RTLIL representation for module `\_90_shift_ops_shr_shl_sshl_sshr'.
Generating RTLIL representation for module `\_90_shift_shiftx'.
Generating RTLIL representation for module `\_90_fa'.
Generating RTLIL representation for module `\_90_lcu'.
Generating RTLIL representation for module `\_90_alu'.
Generating RTLIL representation for module `\_90_macc'.
Generating RTLIL representation for module `\_90_alumacc'.
Generating RTLIL representation for module `\$__div_mod_u'.
Generating RTLIL representation for module `\$__div_mod_trunc'.
Generating RTLIL representation for module `\_90_div'.
Generating RTLIL representation for module `\_90_mod'.
Generating RTLIL representation for module `\$__div_mod_floor'.
Generating RTLIL representation for module `\_90_divfloor'.
Generating RTLIL representation for module `\_90_modfloor'.
Generating RTLIL representation for module `\_90_pow'.
Generating RTLIL representation for module `\_90_pmux'.
Generating RTLIL representation for module `\_90_demux'.
Generating RTLIL representation for module `\_90_lut'.
Successfully finished Verilog frontend.

3.160.2. Executing Verilog-2005 frontend: /nfs_scratch/scratch/Vorak/aram/Workspace/Raptor/yosys_verific_rs/yosys/install/bin/../share/yosys/rapidsilicon/genesis/ffs_map.v
Parsing Verilog input from `/nfs_scratch/scratch/Vorak/aram/Workspace/Raptor/yosys_verific_rs/yosys/install/bin/../share/yosys/rapidsilicon/genesis/ffs_map.v' to AST representation.
Generating RTLIL representation for module `\$_DFF_P_'.
Generating RTLIL representation for module `\$_DFF_PP0_'.
Generating RTLIL representation for module `\$_DFF_PN0_'.
Generating RTLIL representation for module `\$_DFF_PP1_'.
Generating RTLIL representation for module `\$_DFF_PN1_'.
Generating RTLIL representation for module `\$_DFFE_PP_'.
Generating RTLIL representation for module `\$_DFFE_PN_'.
Generating RTLIL representation for module `\$_DFFE_PP0P_'.
Generating RTLIL representation for module `\$_DFFE_PP0N_'.
Generating RTLIL representation for module `\$_DFFE_PN0P_'.
Generating RTLIL representation for module `\$_DFFE_PN0N_'.
Generating RTLIL representation for module `\$_DFFE_PP1P_'.
Generating RTLIL representation for module `\$_DFFE_PP1N_'.
Generating RTLIL representation for module `\$_DFFE_PN1P_'.
Generating RTLIL representation for module `\$_DFFE_PN1N_'.
Generating RTLIL representation for module `\$_DFFSR_PPP_'.
Generating RTLIL representation for module `\$_DFFSR_PNP_'.
Generating RTLIL representation for module `\$_DFFSR_PNN_'.
Generating RTLIL representation for module `\$_DFFSR_PPN_'.
Generating RTLIL representation for module `\$_DFFSR_NPP_'.
Generating RTLIL representation for module `\$_DFFSR_NNP_'.
Generating RTLIL representation for module `\$_DFFSR_NNN_'.
Generating RTLIL representation for module `\$_DFFSR_NPN_'.
Generating RTLIL representation for module `\$_DFFSRE_PPPP_'.
Generating RTLIL representation for module `\$_DFFSRE_PNPP_'.
Generating RTLIL representation for module `\$_DFFSRE_PPNP_'.
Generating RTLIL representation for module `\$_DFFSRE_PNNP_'.
Generating RTLIL representation for module `\$_DFFSRE_PPPN_'.
Generating RTLIL representation for module `\$_DFFSRE_PNPN_'.
Generating RTLIL representation for module `\$_DFFSRE_PPNN_'.
Generating RTLIL representation for module `\$_DFFSRE_PNNN_'.
Generating RTLIL representation for module `\$_DLATCHSR_PPP_'.
Generating RTLIL representation for module `\$_DLATCHSR_NPP_'.
Generating RTLIL representation for module `\$_DFF_N_'.
Generating RTLIL representation for module `\$_DFF_NP0_'.
Generating RTLIL representation for module `\$_DFF_NN0_'.
Generating RTLIL representation for module `\$_DFF_NP1_'.
Generating RTLIL representation for module `\$_DFF_NN1_'.
Generating RTLIL representation for module `\$_DFFE_NP_'.
Generating RTLIL representation for module `\$_DFFE_NN_'.
Generating RTLIL representation for module `\$_DFFE_NP0P_'.
Generating RTLIL representation for module `\$_DFFE_NP0N_'.
Generating RTLIL representation for module `\$_DFFE_NN0P_'.
Generating RTLIL representation for module `\$_DFFE_NN0N_'.
Generating RTLIL representation for module `\$_DFFE_NP1P_'.
Generating RTLIL representation for module `\$_DFFE_NP1N_'.
Generating RTLIL representation for module `\$_DFFE_NN1P_'.
Generating RTLIL representation for module `\$_DFFE_NN1N_'.
Generating RTLIL representation for module `\$_DFFSRE_NPPP_'.
Generating RTLIL representation for module `\$_DFFSRE_NNPP_'.
Generating RTLIL representation for module `\$_DFFSRE_NPNP_'.
Generating RTLIL representation for module `\$_DFFSRE_NNNP_'.
Generating RTLIL representation for module `\$_DFFSRE_NPPN_'.
Generating RTLIL representation for module `\$_DFFSRE_NNPN_'.
Generating RTLIL representation for module `\$_DFFSRE_NPNN_'.
Generating RTLIL representation for module `\$_DFFSRE_NNNN_'.
Generating RTLIL representation for module `\$__SHREG_DFF_P_'.
Generating RTLIL representation for module `\$_SDFF_PP0_'.
Generating RTLIL representation for module `\$_SDFF_PN0_'.
Generating RTLIL representation for module `\$_SDFF_NP0_'.
Generating RTLIL representation for module `\$_SDFF_NN0_'.
Generating RTLIL representation for module `\$_SDFF_PP1_'.
Generating RTLIL representation for module `\$_SDFF_PN1_'.
Generating RTLIL representation for module `\$_SDFF_NP1_'.
Generating RTLIL representation for module `\$_SDFF_NN1_'.
Successfully finished Verilog frontend.

3.160.3. Continuing TECHMAP pass.
Using extmapper simplemap for cells of type $lut.
Using template \$_DFFE_PN0P_ for cells of type $_DFFE_PN0P_.
Using template \$_DFF_PN0_ for cells of type $_DFF_PN0_.
Using template \$_DFF_PN1_ for cells of type $_DFF_PN1_.
No more expansions possible.
<suppressed ~1993 debug messages>

yosys> opt_expr -mux_undef

3.161. Executing OPT_EXPR pass (perform const folding).
Optimizing module pwm.
<suppressed ~15908 debug messages>

yosys> simplemap

3.162. Executing SIMPLEMAP pass (map simple cells to gate primitives).

yosys> opt_expr

3.163. Executing OPT_EXPR pass (perform const folding).
Optimizing module pwm.

yosys> opt_merge

3.164. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\pwm'.
<suppressed ~9594 debug messages>
Removed a total of 3198 cells.

yosys> opt_dff -nodffe -nosdff

3.165. Executing OPT_DFF pass (perform DFF optimizations).

yosys> opt_clean

3.166. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \pwm..
Removed 0 unused cells and 5854 unused wires.
<suppressed ~1 debug messages>

yosys> opt_expr

3.167. Executing OPT_EXPR pass (perform const folding).
Optimizing module pwm.
<suppressed ~470 debug messages>

yosys> opt_merge -nomux

3.168. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\pwm'.
<suppressed ~6 debug messages>
Removed a total of 2 cells.

yosys> opt_muxtree

3.169. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \pwm..
  Creating internal representation of mux trees.
  No muxes found in this module.
Removed 0 multiplexer ports.

yosys> opt_reduce

3.170. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \pwm.
Performed a total of 0 changes.

yosys> opt_merge

3.171. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\pwm'.
Removed a total of 0 cells.

yosys> opt_share

3.172. Executing OPT_SHARE pass.

yosys> opt_dff -nosdff -nodffe

3.173. Executing OPT_DFF pass (perform DFF optimizations).

yosys> opt_clean

3.174. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \pwm..
Removed 0 unused cells and 58 unused wires.
<suppressed ~1 debug messages>

yosys> opt_expr

3.175. Executing OPT_EXPR pass (perform const folding).
Optimizing module pwm.
MAX OPT ITERATION = 1

yosys> abc -script /tmp/yosys_Fp7kat/abc_tmp_2.scr

3.176. Executing ABC pass (technology mapping using ABC).

3.176.1. Extracting gate netlist of module `\pwm' to `<abc-temp-dir>/input.blif'..
Extracted 3096 gates and 3895 wires to a netlist network with 797 inputs and 730 outputs.

3.176.1.1. Executing ABC.
DE:   #PIs = 797  #Luts =  1047  Max Lvl =   8  Avg Lvl =   6.88  [   0.24 sec. at Pass 0]{firstMap}
DE:   #PIs = 797  #Luts =  1033  Max Lvl =   8  Avg Lvl =   7.37  [  15.66 sec. at Pass 1]{initMapFlow}
DE:   #PIs = 797  #Luts =  1033  Max Lvl =   8  Avg Lvl =   7.37  [   2.42 sec. at Pass 2]{map}
DE:   #PIs = 797  #Luts =  1033  Max Lvl =   8  Avg Lvl =   7.37  [   7.47 sec. at Pass 3]{postMap}
DE:   #PIs = 797  #Luts =  1033  Max Lvl =   8  Avg Lvl =   7.37  [   6.17 sec. at Pass 4]{map}
DE:   #PIs = 797  #Luts =  1033  Max Lvl =   8  Avg Lvl =   7.37  [   7.04 sec. at Pass 5]{postMap}
DE:   #PIs = 797  #Luts =  1033  Max Lvl =   8  Avg Lvl =   7.37  [   1.90 sec. at Pass 6]{finalMap}

yosys> opt_expr

3.177. Executing OPT_EXPR pass (perform const folding).
Optimizing module pwm.

yosys> opt_merge -nomux

3.178. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\pwm'.
Removed a total of 0 cells.

yosys> opt_muxtree

3.179. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \pwm..
  Creating internal representation of mux trees.
  No muxes found in this module.
Removed 0 multiplexer ports.

yosys> opt_reduce

3.180. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \pwm.
Performed a total of 0 changes.

yosys> opt_merge

3.181. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\pwm'.
Removed a total of 0 cells.

yosys> opt_share

3.182. Executing OPT_SHARE pass.

yosys> opt_dff -nosdff -nodffe

3.183. Executing OPT_DFF pass (perform DFF optimizations).

yosys> opt_clean

3.184. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \pwm..
Removed 0 unused cells and 3417 unused wires.
<suppressed ~1 debug messages>

yosys> opt_expr

3.185. Executing OPT_EXPR pass (perform const folding).
Optimizing module pwm.
MAX OPT ITERATION = 1

yosys> hierarchy -check

3.186. Executing HIERARCHY pass (managing design hierarchy).

3.186.1. Analyzing design hierarchy..
Top module:  \pwm

3.186.2. Analyzing design hierarchy..
Top module:  \pwm
Removed 0 unused modules.

yosys> stat

3.187. Printing statistics.

=== pwm ===

   Number of wires:               4056
   Number of wire bits:          14898
   Number of public wires:        2370
   Number of public wire bits:   13212
   Number of memories:               0
   Number of memory bits:            0
   Number of processes:              0
   Number of cells:               1836
     $lut                         1033
     dffsre                        803


yosys> opt_clean -purge

3.188. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \pwm..
Removed 0 unused cells and 2259 unused wires.
<suppressed ~2259 debug messages>

yosys> write_verilog -noattr -nohex synthesized.v

3.189. Executing Verilog backend.
Dumping module `\pwm'.

Warnings: 85 unique messages, 85 total
End of script. Logfile hash: d433b368a3, CPU: user 22.37s system 0.16s, MEM: 96.69 MB peak
Yosys 0.18+10 (git sha1 7361c89db, gcc 9.4.0-1ubuntu1~20.04.1 -fPIC -Os)
Time spent: 93% 6x abc (282 sec), 1% 17x opt_dff (4 sec), ...
real 213.92
user 285.20
sys 15.17
