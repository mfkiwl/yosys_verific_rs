
 /----------------------------------------------------------------------------\
 |                                                                            |
 |  yosys -- Yosys Open SYnthesis Suite                                       |
 |                                                                            |
 |  Copyright (C) 2012 - 2020  Claire Xenia Wolf <claire@yosyshq.com>         |
 |                                                                            |
 |  Permission to use, copy, modify, and/or distribute this software for any  |
 |  purpose with or without fee is hereby granted, provided that the above    |
 |  copyright notice and this permission notice appear in all copies.         |
 |                                                                            |
 |  THE SOFTWARE IS PROVIDED "AS IS" AND THE AUTHOR DISCLAIMS ALL WARRANTIES  |
 |  WITH REGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF          |
 |  MERCHANTABILITY AND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR   |
 |  ANY SPECIAL, DIRECT, INDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES    |
 |  WHATSOEVER RESULTING FROM LOSS OF USE, DATA OR PROFITS, WHETHER IN AN     |
 |  ACTION OF CONTRACT, NEGLIGENCE OR OTHER TORTIOUS ACTION, ARISING OUT OF   |
 |  OR IN CONNECTION WITH THE USE OR PERFORMANCE OF THIS SOFTWARE.            |
 |                                                                            |
 \----------------------------------------------------------------------------/

 Yosys-Verific 0.0.92
 Yosys 0.18+10 (git sha1 7361c89db, gcc 9.4.0-1ubuntu1~20.04.1 -fPIC -Os)


-- Executing script file `yosys.ys' --
echo on

yosys> plugin -i synth-rs

yosys> read -verific

yosys> read -incdir .

yosys> verific -vlog-incdir .

1. Executing VERIFIC (loading SystemVerilog and VHDL designs using Verific).
Built with Verific May22_SW_Release, released at Wed Jun  1 05:39:28 2022.

yosys> verilog_defaults -add -I.

yosys> read -vhdl b15.vhd

yosys> verific -vhdl b15.vhd

2. Executing VERIFIC (loading SystemVerilog and VHDL designs using Verific).
Built with Verific May22_SW_Release, released at Wed Jun  1 05:39:28 2022.
VERIFIC-INFO [VHDL-1504] default VHDL library search path is now "/nfs_scratch/scratch/Vorak/aram/Workspace/Raptor/yosys_verific_rs/yosys/install/share/yosys/verific/vhdl_vdbs_2008"
VERIFIC-COMMENT [VHDL-1481] Analyzing VHDL file 'b15.vhd'
VERIFIC-COMMENT [VHDL-1493] Restoring VHDL unit 'std.standard' from file '/nfs_scratch/scratch/Vorak/aram/Workspace/Raptor/yosys_verific_rs/yosys/install/share/yosys/verific/vhdl_vdbs_2008/std/standard.vdb'
VERIFIC-INFO [VHDL-1012] b15.vhd:1: analyzing entity 'b15'
VERIFIC-INFO [VHDL-1010] b15.vhd:17: analyzing architecture 'behav'

yosys> synth_rs -top b15 -tech genesis -goal area -de -no_dsp -no_bram -verilog synthesized.v

3. Executing synth_rs pass: v0.4.79

yosys> read_verilog -lib -specify -nomem2reg +/rapidsilicon/common/cells_sim.v +/rapidsilicon/genesis/cells_sim.v +/rapidsilicon/genesis/dsp_sim.v

3.1. Executing Verilog-2005 frontend: /nfs_scratch/scratch/Vorak/aram/Workspace/Raptor/yosys_verific_rs/yosys/install/bin/../share/yosys/rapidsilicon/common/cells_sim.v
Parsing Verilog input from `/nfs_scratch/scratch/Vorak/aram/Workspace/Raptor/yosys_verific_rs/yosys/install/bin/../share/yosys/rapidsilicon/common/cells_sim.v' to AST representation.
Generating RTLIL representation for module `\inv'.
Generating RTLIL representation for module `\buff'.
Generating RTLIL representation for module `\logic_0'.
Generating RTLIL representation for module `\logic_1'.
Generating RTLIL representation for module `\gclkbuff'.
Successfully finished Verilog frontend.

3.2. Executing Verilog-2005 frontend: /nfs_scratch/scratch/Vorak/aram/Workspace/Raptor/yosys_verific_rs/yosys/install/bin/../share/yosys/rapidsilicon/genesis/cells_sim.v
Parsing Verilog input from `/nfs_scratch/scratch/Vorak/aram/Workspace/Raptor/yosys_verific_rs/yosys/install/bin/../share/yosys/rapidsilicon/genesis/cells_sim.v' to AST representation.
Generating RTLIL representation for module `\dffsre'.
Generating RTLIL representation for module `\dffnsre'.
Generating RTLIL representation for module `\latchsre'.
Generating RTLIL representation for module `\latchnsre'.
Generating RTLIL representation for module `\io_scff'.
Generating RTLIL representation for module `\scff'.
Generating RTLIL representation for module `\sh_dff'.
Generating RTLIL representation for module `\adder_carry'.
Generating RTLIL representation for module `\sdffr'.
Generating RTLIL representation for module `\sdffs'.
Generating RTLIL representation for module `\TDP_BRAM18'.
Generating RTLIL representation for module `\TDP36K'.
Generating RTLIL representation for module `\BRAM2x18_TDP'.
Generating RTLIL representation for module `\BRAM2x18_SDP'.
Generating RTLIL representation for module `\_$_mem_v2_asymmetric'.
Successfully finished Verilog frontend.

3.3. Executing Verilog-2005 frontend: /nfs_scratch/scratch/Vorak/aram/Workspace/Raptor/yosys_verific_rs/yosys/install/bin/../share/yosys/rapidsilicon/genesis/dsp_sim.v
Parsing Verilog input from `/nfs_scratch/scratch/Vorak/aram/Workspace/Raptor/yosys_verific_rs/yosys/install/bin/../share/yosys/rapidsilicon/genesis/dsp_sim.v' to AST representation.
Generating RTLIL representation for module `\RS_DSP1'.
Generating RTLIL representation for module `\RS_DSP2'.
Generating RTLIL representation for module `\RS_DSP2_MULT'.
Generating RTLIL representation for module `\RS_DSP2_MULT_REGIN'.
Generating RTLIL representation for module `\RS_DSP2_MULT_REGOUT'.
Generating RTLIL representation for module `\RS_DSP2_MULT_REGIN_REGOUT'.
Generating RTLIL representation for module `\RS_DSP2_MULTADD'.
Generating RTLIL representation for module `\RS_DSP2_MULTADD_REGIN'.
Generating RTLIL representation for module `\RS_DSP2_MULTADD_REGOUT'.
Generating RTLIL representation for module `\RS_DSP2_MULTADD_REGIN_REGOUT'.
Generating RTLIL representation for module `\RS_DSP2_MULTACC'.
Generating RTLIL representation for module `\RS_DSP2_MULTACC_REGIN'.
Generating RTLIL representation for module `\RS_DSP2_MULTACC_REGOUT'.
Generating RTLIL representation for module `\RS_DSP2_MULTACC_REGIN_REGOUT'.
Generating RTLIL representation for module `\dsp_t1_20x18x64_cfg_ports'.
Generating RTLIL representation for module `\dsp_t1_10x9x32_cfg_ports'.
Generating RTLIL representation for module `\dsp_t1_sim_cfg_ports'.
Generating RTLIL representation for module `\RS_DSP3'.
Generating RTLIL representation for module `\RS_DSP3_MULT'.
Generating RTLIL representation for module `\RS_DSP3_MULT_REGIN'.
Generating RTLIL representation for module `\RS_DSP3_MULT_REGOUT'.
Generating RTLIL representation for module `\RS_DSP3_MULT_REGIN_REGOUT'.
Generating RTLIL representation for module `\RS_DSP3_MULTADD'.
Generating RTLIL representation for module `\RS_DSP3_MULTADD_REGIN'.
Generating RTLIL representation for module `\RS_DSP3_MULTADD_REGOUT'.
Generating RTLIL representation for module `\RS_DSP3_MULTADD_REGIN_REGOUT'.
Generating RTLIL representation for module `\RS_DSP3_MULTACC'.
Generating RTLIL representation for module `\RS_DSP3_MULTACC_REGIN'.
Generating RTLIL representation for module `\RS_DSP3_MULTACC_REGOUT'.
Generating RTLIL representation for module `\RS_DSP3_MULTACC_REGIN_REGOUT'.
Generating RTLIL representation for module `\dsp_t1_20x18x64_cfg_params'.
Generating RTLIL representation for module `\dsp_t1_10x9x32_cfg_params'.
Generating RTLIL representation for module `\dsp_t1_sim_cfg_params'.
Successfully finished Verilog frontend.

yosys> hierarchy -check -top b15

3.4. Executing HIERARCHY pass (managing design hierarchy).
VERIFIC-INFO [VHDL-1067] b15.vhd:1: processing 'b15(BEHAV)'
Importing module b15.

3.4.1. Analyzing design hierarchy..
Top module:  \b15

3.4.2. Analyzing design hierarchy..
Top module:  \b15
Removed 0 unused modules.

yosys> proc

3.5. Executing PROC pass (convert processes to netlists).

yosys> proc_clean

3.5.1. Executing PROC_CLEAN pass (remove empty switches from decision trees).
Cleaned up 0 empty switches.

yosys> proc_rmdead

3.5.2. Executing PROC_RMDEAD pass (remove dead branches from decision trees).
Removed a total of 0 dead cases.

yosys> proc_prune

3.5.3. Executing PROC_PRUNE pass (remove redundant assignments in processes).
Removed 0 redundant assignments.
Promoted 0 assignments to connections.

yosys> proc_init

3.5.4. Executing PROC_INIT pass (extract init attributes).

yosys> proc_arst

3.5.5. Executing PROC_ARST pass (detect async resets in processes).

yosys> proc_rom

3.5.6. Executing PROC_ROM pass (convert switches to ROMs).
Converted 0 switches.

yosys> proc_mux

3.5.7. Executing PROC_MUX pass (convert decision trees to multiplexers).

yosys> proc_dlatch

3.5.8. Executing PROC_DLATCH pass (convert process syncs to latches).

yosys> proc_dff

3.5.9. Executing PROC_DFF pass (convert process syncs to FFs).

yosys> proc_memwr

3.5.10. Executing PROC_MEMWR pass (convert process memory writes to cells).

yosys> proc_clean

3.5.11. Executing PROC_CLEAN pass (remove empty switches from decision trees).
Cleaned up 0 empty switches.

yosys> opt_expr -keepdc

3.5.12. Executing OPT_EXPR pass (perform const folding).
Optimizing module b15.
<suppressed ~17 debug messages>

yosys> bmuxmap

3.6. Executing BMUXMAP pass.

yosys> demuxmap

3.7. Executing DEMUXMAP pass.

yosys> clean_zerowidth

yosys> flatten

3.8. Executing FLATTEN pass (flatten design).

yosys> bmuxmap

3.9. Executing BMUXMAP pass.

yosys> demuxmap

3.10. Executing DEMUXMAP pass.

yosys> clean_zerowidth

yosys> tribuf -logic -formal

3.11. Executing TRIBUF pass.

yosys> deminout

3.12. Executing DEMINOUT pass (demote inout ports to input or output).

yosys> opt_expr

3.13. Executing OPT_EXPR pass (perform const folding).
Optimizing module b15.
<suppressed ~229 debug messages>

yosys> opt_clean

3.14. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \b15..
Removed 14 unused cells and 198 unused wires.
<suppressed ~70 debug messages>

yosys> check

3.15. Executing CHECK pass (checking for obvious problems).
Checking module b15...
Found and reported 0 problems.

yosys> opt_expr

3.16. Executing OPT_EXPR pass (perform const folding).
Optimizing module b15.
<suppressed ~1 debug messages>

yosys> opt_merge -nomux

3.17. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\b15'.
Removed a total of 0 cells.

yosys> opt_muxtree

3.18. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \b15..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
      Replacing known input bits on port A of cell $verific$mux_741$b15.vhd:574$916: \P1.State2 -> 4'0110
      Replacing known input bits on port B of cell $verific$select_728$b15.vhd:564$905: { \P1.State2 \P1.State2 \P1.State2 \P1.State2 \P1.State2 \P1.State2 \P1.State2 \P1.State2 \P1.State2 $verific$n6348$388 \P1.State2 \P1.State2 \P1.State2 \P1.State2 \P1.State2 \P1.State2 \P1.State2 \P1.State2 \P1.State2 } -> { 36'010101010101010101010101010101010101 $verific$n6348$388 36'010101010101010101010101010101010101 }
      Replacing known input bits on port A of cell $verific$mux_571$b15.vhd:485$852: \P1.State2 -> 4'0101
      Replacing known input bits on port A of cell $verific$mux_558$b15.vhd:481$844: \P1.State2 -> 4'0101
      Replacing known input bits on port A of cell $verific$mux_547$b15.vhd:480$840: \P1.State2 -> 4'0101
      Replacing known input bits on port A of cell $verific$mux_536$b15.vhd:475$837: \P1.State2 -> 4'0101
      Replacing known input bits on port B of cell $verific$mux_70$b15.vhd:158$573: \State -> 3'011
  Analyzing evaluation results.
Removed 0 multiplexer ports.
<suppressed ~77 debug messages>

yosys> opt_reduce

3.19. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \b15.
    New ctrl vector for $pmux cell $verific$Select_710$b15.vhd:564$890: { $verific$n7780$86 $verific$n7781$87 $auto$opt_reduce.cc:134:opt_pmux$1880 $auto$opt_reduce.cc:134:opt_pmux$1878 }
    New ctrl vector for $pmux cell $verific$Select_712$b15.vhd:564$892: { $verific$n7780$86 $auto$opt_reduce.cc:134:opt_pmux$1886 $auto$opt_reduce.cc:134:opt_pmux$1884 $auto$opt_reduce.cc:134:opt_pmux$1882 }
    New ctrl vector for $pmux cell $verific$Select_718$b15.vhd:564$898: { $verific$n7970$107 $verific$n7787$93 $auto$opt_reduce.cc:134:opt_pmux$1888 $verific$n7789$95 }
    New ctrl vector for $pmux cell $verific$Select_720$b15.vhd:564$899: { $verific$n7970$107 $auto$opt_reduce.cc:134:opt_pmux$1892 $auto$opt_reduce.cc:134:opt_pmux$1890 }
    New ctrl vector for $pmux cell $verific$Select_722$b15.vhd:564$900: { $verific$n7970$107 $auto$opt_reduce.cc:134:opt_pmux$1896 $auto$opt_reduce.cc:134:opt_pmux$1894 }
    New ctrl vector for $pmux cell $verific$Select_724$b15.vhd:564$901: { $verific$n7970$107 $auto$opt_reduce.cc:134:opt_pmux$1898 }
    New ctrl vector for $pmux cell $verific$select_707$b15.vhd:564$887: { $verific$n7780$86 $verific$n7781$87 $auto$opt_reduce.cc:134:opt_pmux$1908 $auto$opt_reduce.cc:134:opt_pmux$1906 $auto$opt_reduce.cc:134:opt_pmux$1904 $auto$opt_reduce.cc:134:opt_pmux$1902 $auto$opt_reduce.cc:134:opt_pmux$1900 }
    New ctrl vector for $pmux cell $verific$select_708$b15.vhd:564$888: { $auto$opt_reduce.cc:134:opt_pmux$1918 $auto$opt_reduce.cc:134:opt_pmux$1916 $verific$n7786$92 $verific$n7788$94 $auto$opt_reduce.cc:134:opt_pmux$1914 $auto$opt_reduce.cc:134:opt_pmux$1912 $auto$opt_reduce.cc:134:opt_pmux$1910 }
    New ctrl vector for $pmux cell $verific$select_713$b15.vhd:564$893: { $verific$n7780$86 $verific$n7781$87 $auto$opt_reduce.cc:134:opt_pmux$1920 }
    New ctrl vector for $pmux cell $verific$select_714$b15.vhd:564$894: { $verific$n7784$90 $verific$n7786$92 $verific$n7788$94 $verific$n7794$100 $auto$opt_reduce.cc:134:opt_pmux$1922 }
    New ctrl vector for $pmux cell $verific$select_715$b15.vhd:564$895: { $verific$n7785$91 $verific$n7795$101 $auto$opt_reduce.cc:134:opt_pmux$1924 }
    New ctrl vector for $pmux cell $verific$select_716$b15.vhd:564$896: { $verific$n7786$92 $verific$n7787$93 $auto$opt_reduce.cc:134:opt_pmux$1928 $auto$opt_reduce.cc:134:opt_pmux$1926 }
    New ctrl vector for $pmux cell $verific$select_725$b15.vhd:564$902: { $verific$n7786$92 $verific$n7787$93 $auto$opt_reduce.cc:134:opt_pmux$1930 }
    New ctrl vector for $pmux cell $verific$select_726$b15.vhd:564$903: { $verific$n7786$92 $verific$n7787$93 $auto$opt_reduce.cc:134:opt_pmux$1932 }
    New ctrl vector for $pmux cell $verific$select_727$b15.vhd:564$904: { $verific$n7787$93 $verific$n7789$95 $auto$opt_reduce.cc:134:opt_pmux$1934 }
    New ctrl vector for $pmux cell $verific$select_728$b15.vhd:564$905: { $verific$n7787$93 $auto$opt_reduce.cc:134:opt_pmux$1936 }
  Optimizing cells in module \b15.
Performed a total of 16 changes.

yosys> opt_merge

3.20. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\b15'.
<suppressed ~129 debug messages>
Removed a total of 43 cells.

yosys> opt_share

3.21. Executing OPT_SHARE pass.

yosys> opt_dff -nosdff -nodffe

3.22. Executing OPT_DFF pass (perform DFF optimizations).
Changing const-value async load to async reset on $verific$rEIP_reg$b15.vhd:614$1033 ($aldff) from module b15.
Changing const-value async load to async reset on $verific$W_R_n_reg$b15.vhd:233$621 ($aldff) from module b15.
Changing const-value async load to async reset on $verific$State_reg$b15.vhd:233$625 ($aldff) from module b15.
Changing const-value async load to async reset on $verific$StateBS16_reg$b15.vhd:233$627 ($aldff) from module b15.
Changing const-value async load to async reset on $verific$RequestPending_reg$b15.vhd:614$1037 ($aldff) from module b15.
Changing const-value async load to async reset on $verific$ReadRequest_reg$b15.vhd:614$1035 ($aldff) from module b15.
Changing const-value async load to async reset on $verific$P1.uWord_reg$b15.vhd:614$1027 ($aldff) from module b15.
Changing const-value async load to async reset on $verific$P1.lWord_reg$b15.vhd:614$1026 ($aldff) from module b15.
Changing const-value async load to async reset on $verific$P1.State2_reg$b15.vhd:614$1003 ($aldff) from module b15.
Changing const-value async load to async reset on $verific$P1.PhyAddrPointer_reg$b15.vhd:614$1023 ($aldff) from module b15.
Changing const-value async load to async reset on $verific$P1.More_reg$b15.vhd:614$1024 ($aldff) from module b15.
Changing const-value async load to async reset on $verific$P1.InstQueue_reg_9$b15.vhd:614$1011 ($aldff) from module b15.
Changing const-value async load to async reset on $verific$P1.InstQueue_reg_8$b15.vhd:614$1010 ($aldff) from module b15.
Changing const-value async load to async reset on $verific$P1.InstQueue_reg_7$b15.vhd:614$1009 ($aldff) from module b15.
Changing const-value async load to async reset on $verific$P1.InstQueue_reg_6$b15.vhd:614$1008 ($aldff) from module b15.
Changing const-value async load to async reset on $verific$P1.InstQueue_reg_5$b15.vhd:614$1007 ($aldff) from module b15.
Changing const-value async load to async reset on $verific$P1.InstQueue_reg_4$b15.vhd:614$1006 ($aldff) from module b15.
Changing const-value async load to async reset on $verific$P1.InstQueue_reg_3$b15.vhd:614$1005 ($aldff) from module b15.
Changing const-value async load to async reset on $verific$P1.InstQueue_reg_2$b15.vhd:614$1004 ($aldff) from module b15.
Changing const-value async load to async reset on $verific$P1.InstQueue_reg_16$b15.vhd:614$1018 ($aldff) from module b15.
Changing const-value async load to async reset on $verific$P1.InstQueue_reg_15$b15.vhd:614$1017 ($aldff) from module b15.
Changing const-value async load to async reset on $verific$P1.InstQueue_reg_14$b15.vhd:614$1016 ($aldff) from module b15.
Changing const-value async load to async reset on $verific$P1.InstQueue_reg_13$b15.vhd:614$1015 ($aldff) from module b15.
Changing const-value async load to async reset on $verific$P1.InstQueue_reg_12$b15.vhd:614$1014 ($aldff) from module b15.
Changing const-value async load to async reset on $verific$P1.InstQueue_reg_11$b15.vhd:614$1013 ($aldff) from module b15.
Changing const-value async load to async reset on $verific$P1.InstQueue_reg_10$b15.vhd:614$1012 ($aldff) from module b15.
Changing const-value async load to async reset on $verific$P1.InstQueue_reg$b15.vhd:614$1019 ($aldff) from module b15.
Changing const-value async load to async reset on $verific$P1.InstQueueWr_Addr_reg$b15.vhd:614$1021 ($aldff) from module b15.
Changing const-value async load to async reset on $verific$P1.InstQueueRd_Addr_reg$b15.vhd:614$1020 ($aldff) from module b15.
Changing const-value async load to async reset on $verific$P1.InstAddrPointer_reg$b15.vhd:614$1022 ($aldff) from module b15.
Changing const-value async load to async reset on $verific$P1.Flush_reg$b15.vhd:614$1025 ($aldff) from module b15.
Changing const-value async load to async reset on $verific$MemoryFetch_reg$b15.vhd:614$1036 ($aldff) from module b15.
Changing const-value async load to async reset on $verific$M_IO_n_reg$b15.vhd:233$623 ($aldff) from module b15.
Changing const-value async load to async reset on $verific$EBX_reg$b15.vhd:614$1032 ($aldff) from module b15.
Changing const-value async load to async reset on $verific$EAX_reg$b15.vhd:614$1031 ($aldff) from module b15.
Changing const-value async load to async reset on $verific$Datao_reg$b15.vhd:614$1029 ($aldff) from module b15.
Changing const-value async load to async reset on $verific$DataWidth_reg$b15.vhd:233$628 ($aldff) from module b15.
Changing const-value async load to async reset on $verific$D_C_n_reg$b15.vhd:233$622 ($aldff) from module b15.
Changing const-value async load to async reset on $verific$CodeFetch_reg$b15.vhd:614$1028 ($aldff) from module b15.
Changing const-value async load to async reset on $verific$ByteEnable_reg$b15.vhd:670$1055 ($aldff) from module b15.
Changing const-value async load to async reset on $verific$BE_n_reg$b15.vhd:233$619 ($aldff) from module b15.
Changing const-value async load to async reset on $verific$Address_reg$b15.vhd:233$620 ($aldff) from module b15.
Changing const-value async load to async reset on $verific$ADS_n_reg$b15.vhd:233$624 ($aldff) from module b15.

yosys> opt_clean

3.23. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \b15..
Removed 2 unused cells and 21 unused wires.
<suppressed ~3 debug messages>

yosys> opt_expr

3.24. Executing OPT_EXPR pass (perform const folding).
Optimizing module b15.
<suppressed ~3 debug messages>

yosys> opt_muxtree

3.25. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \b15..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Removed 0 multiplexer ports.
<suppressed ~90 debug messages>

yosys> opt_reduce

3.26. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \b15.
Performed a total of 0 changes.

yosys> opt_merge

3.27. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\b15'.
Removed a total of 0 cells.

yosys> opt_share

3.28. Executing OPT_SHARE pass.

yosys> opt_dff -nosdff -nodffe

3.29. Executing OPT_DFF pass (perform DFF optimizations).

yosys> opt_clean

3.30. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \b15..
Removed 0 unused cells and 3 unused wires.
<suppressed ~1 debug messages>

yosys> opt_expr

3.31. Executing OPT_EXPR pass (perform const folding).
Optimizing module b15.
MAX OPT ITERATION = 2

yosys> fsm -encoding binary

3.32. Executing FSM pass (extract and optimize FSM).

yosys> fsm_detect

3.32.1. Executing FSM_DETECT pass (finding FSMs in design).
Not marking b15.ByteEnable as FSM state register:
    Users of register don't seem to benefit from recoding.
Not marking b15.State as FSM state register:
    Users of register don't seem to benefit from recoding.

yosys> fsm_extract

3.32.2. Executing FSM_EXTRACT pass (extracting FSM from design).

yosys> fsm_opt

3.32.3. Executing FSM_OPT pass (simple optimizations of FSMs).

yosys> opt_clean

3.32.4. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \b15..

yosys> fsm_opt

3.32.5. Executing FSM_OPT pass (simple optimizations of FSMs).

yosys> fsm_recode -encoding binary

3.32.6. Executing FSM_RECODE pass (re-assigning FSM state encoding).

yosys> fsm_info

3.32.7. Executing FSM_INFO pass (dumping all available information on FSM cells).

yosys> fsm_map

3.32.8. Executing FSM_MAP pass (mapping FSMs to basic logic).

yosys> opt_expr

3.33. Executing OPT_EXPR pass (perform const folding).
Optimizing module b15.

yosys> opt_merge -nomux

3.34. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\b15'.
Removed a total of 0 cells.

yosys> opt_muxtree

3.35. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \b15..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Removed 0 multiplexer ports.
<suppressed ~90 debug messages>

yosys> opt_reduce

3.36. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \b15.
Performed a total of 0 changes.

yosys> opt_merge

3.37. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\b15'.
Removed a total of 0 cells.

yosys> opt_share

3.38. Executing OPT_SHARE pass.

yosys> opt_dff -nosdff -sat

3.39. Executing OPT_DFF pass (perform DFF optimizations).
Adding EN signal on $verific$rEIP_reg$b15.vhd:614$1033 ($adff) from module b15 (D = $auto$bmuxmap.cc:58:execute$1613 [0], Q = \rEIP [0]).
Adding EN signal on $verific$rEIP_reg$b15.vhd:614$1033 ($adff) from module b15 (D = $auto$bmuxmap.cc:58:execute$1613 [30:1], Q = \rEIP [30:1]).
Adding EN signal on $verific$rEIP_reg$b15.vhd:614$1033 ($adff) from module b15 (D = $auto$bmuxmap.cc:58:execute$1613 [31], Q = \rEIP [31]).
Adding EN signal on $verific$W_R_n_reg$b15.vhd:233$621 ($adff) from module b15 (D = $verific$n398$9, Q = \W_R_n).
Adding EN signal on $verific$StateBS16_reg$b15.vhd:233$627 ($adff) from module b15 (D = $auto$bmuxmap.cc:58:execute$1830, Q = \StateBS16).
Adding EN signal on $verific$RequestPending_reg$b15.vhd:614$1037 ($adff) from module b15 (D = $auto$bmuxmap.cc:58:execute$1556, Q = \RequestPending).
Adding EN signal on $verific$ReadRequest_reg$b15.vhd:614$1035 ($adff) from module b15 (D = $auto$bmuxmap.cc:58:execute$1594, Q = \ReadRequest).
Adding EN signal on $verific$P1.uWord_reg$b15.vhd:614$1027 ($adff) from module b15 (D = $auto$bmuxmap.cc:58:execute$1118, Q = \P1.uWord).
Adding EN signal on $verific$P1.lWord_reg$b15.vhd:614$1026 ($adff) from module b15 (D = $auto$bmuxmap.cc:58:execute$1099, Q = \P1.lWord).
Adding EN signal on $verific$P1.PhyAddrPointer_reg$b15.vhd:614$1023 ($adff) from module b15 (D = $auto$bmuxmap.cc:58:execute$1670 [0], Q = \P1.PhyAddrPointer [0]).
Adding EN signal on $verific$P1.PhyAddrPointer_reg$b15.vhd:614$1023 ($adff) from module b15 (D = $auto$bmuxmap.cc:58:execute$1670 [1], Q = \P1.PhyAddrPointer [1]).
Adding EN signal on $verific$P1.PhyAddrPointer_reg$b15.vhd:614$1023 ($adff) from module b15 (D = $auto$bmuxmap.cc:58:execute$1670 [31:2], Q = \P1.PhyAddrPointer [31:2]).
Adding EN signal on $verific$P1.More_reg$b15.vhd:614$1024 ($adff) from module b15 (D = $verific$n7839$106, Q = \P1.More).
Adding EN signal on $verific$P1.InstQueue_reg_9$b15.vhd:614$1011 ($adff) from module b15 (D = $auto$bmuxmap.cc:58:execute$1385, Q = \P1.InstQueue[8]).
Adding EN signal on $verific$P1.InstQueue_reg_8$b15.vhd:614$1010 ($adff) from module b15 (D = $auto$bmuxmap.cc:58:execute$1404, Q = \P1.InstQueue[9]).
Adding EN signal on $verific$P1.InstQueue_reg_7$b15.vhd:614$1009 ($adff) from module b15 (D = $auto$bmuxmap.cc:58:execute$1423, Q = \P1.InstQueue[10]).
Adding EN signal on $verific$P1.InstQueue_reg_6$b15.vhd:614$1008 ($adff) from module b15 (D = $auto$bmuxmap.cc:58:execute$1442, Q = \P1.InstQueue[11]).
Adding EN signal on $verific$P1.InstQueue_reg_5$b15.vhd:614$1007 ($adff) from module b15 (D = $auto$bmuxmap.cc:58:execute$1461, Q = \P1.InstQueue[12]).
Adding EN signal on $verific$P1.InstQueue_reg_4$b15.vhd:614$1006 ($adff) from module b15 (D = $auto$bmuxmap.cc:58:execute$1480, Q = \P1.InstQueue[13]).
Adding EN signal on $verific$P1.InstQueue_reg_3$b15.vhd:614$1005 ($adff) from module b15 (D = $auto$bmuxmap.cc:58:execute$1499, Q = \P1.InstQueue[14]).
Adding EN signal on $verific$P1.InstQueue_reg_2$b15.vhd:614$1004 ($adff) from module b15 (D = $auto$bmuxmap.cc:58:execute$1518, Q = \P1.InstQueue[15]).
Adding EN signal on $verific$P1.InstQueue_reg_16$b15.vhd:614$1018 ($adff) from module b15 (D = $auto$bmuxmap.cc:58:execute$1252, Q = \P1.InstQueue[1]).
Adding EN signal on $verific$P1.InstQueue_reg_15$b15.vhd:614$1017 ($adff) from module b15 (D = $auto$bmuxmap.cc:58:execute$1271, Q = \P1.InstQueue[2]).
Adding EN signal on $verific$P1.InstQueue_reg_14$b15.vhd:614$1016 ($adff) from module b15 (D = $auto$bmuxmap.cc:58:execute$1290, Q = \P1.InstQueue[3]).
Adding EN signal on $verific$P1.InstQueue_reg_13$b15.vhd:614$1015 ($adff) from module b15 (D = $auto$bmuxmap.cc:58:execute$1309, Q = \P1.InstQueue[4]).
Adding EN signal on $verific$P1.InstQueue_reg_12$b15.vhd:614$1014 ($adff) from module b15 (D = $auto$bmuxmap.cc:58:execute$1328, Q = \P1.InstQueue[5]).
Adding EN signal on $verific$P1.InstQueue_reg_11$b15.vhd:614$1013 ($adff) from module b15 (D = $auto$bmuxmap.cc:58:execute$1347, Q = \P1.InstQueue[6]).
Adding EN signal on $verific$P1.InstQueue_reg_10$b15.vhd:614$1012 ($adff) from module b15 (D = $auto$bmuxmap.cc:58:execute$1366, Q = \P1.InstQueue[7]).
Adding EN signal on $verific$P1.InstQueue_reg$b15.vhd:614$1019 ($adff) from module b15 (D = $auto$bmuxmap.cc:58:execute$1233, Q = \P1.InstQueue[0]).
Adding EN signal on $verific$P1.InstQueueWr_Addr_reg$b15.vhd:614$1021 ($adff) from module b15 (D = $auto$bmuxmap.cc:58:execute$1214, Q = \P1.InstQueueWr_Addr).
Adding EN signal on $verific$P1.InstQueueRd_Addr_reg$b15.vhd:614$1020 ($adff) from module b15 (D = $auto$bmuxmap.cc:58:execute$1195, Q = \P1.InstQueueRd_Addr).
Adding EN signal on $verific$P1.InstAddrPointer_reg$b15.vhd:614$1022 ($adff) from module b15 (D = $auto$bmuxmap.cc:58:execute$1651 [0], Q = \P1.InstAddrPointer [0]).
Adding EN signal on $verific$P1.InstAddrPointer_reg$b15.vhd:614$1022 ($adff) from module b15 (D = $auto$bmuxmap.cc:58:execute$1651 [31:1], Q = \P1.InstAddrPointer [31:1]).
Adding EN signal on $verific$P1.Flush_reg$b15.vhd:614$1025 ($adff) from module b15 (D = $verific$n7837$104, Q = \P1.Flush).
Adding EN signal on $verific$MemoryFetch_reg$b15.vhd:614$1036 ($adff) from module b15 (D = $auto$bmuxmap.cc:58:execute$1575, Q = \MemoryFetch).
Adding EN signal on $verific$M_IO_n_reg$b15.vhd:233$623 ($adff) from module b15 (D = \MemoryFetch, Q = \M_IO_n).
Adding EN signal on $verific$EBX_reg$b15.vhd:614$1032 ($adff) from module b15 (D = $auto$bmuxmap.cc:58:execute$1137, Q = \EBX).
Adding EN signal on $verific$EAX_reg$b15.vhd:614$1031 ($adff) from module b15 (D = $auto$bmuxmap.cc:58:execute$1156, Q = \EAX).
Adding EN signal on $verific$Datao_reg$b15.vhd:614$1029 ($adff) from module b15 (D = $auto$bmuxmap.cc:58:execute$1080 [30:0], Q = \Datao [30:0]).
Adding EN signal on $verific$Datao_reg$b15.vhd:614$1029 ($adff) from module b15 (D = $auto$bmuxmap.cc:58:execute$1080 [31], Q = \Datao [31]).
Adding EN signal on $verific$DataWidth_reg$b15.vhd:233$628 ($adff) from module b15 (D = $auto$bmuxmap.cc:58:execute$1820 [31:0], Q = \DataWidth).
Adding EN signal on $verific$D_C_n_reg$b15.vhd:233$622 ($adff) from module b15 (D = $auto$bmuxmap.cc:58:execute$1870, Q = \D_C_n).
Adding EN signal on $verific$CodeFetch_reg$b15.vhd:614$1028 ($adff) from module b15 (D = $auto$bmuxmap.cc:58:execute$1537, Q = \CodeFetch).
Adding EN signal on $verific$ByteEnable_reg$b15.vhd:670$1055 ($adff) from module b15 (D = $verific$n9573$528, Q = \ByteEnable).
Adding EN signal on $verific$BE_n_reg$b15.vhd:233$619 ($adff) from module b15 (D = \ByteEnable, Q = \BE_n).
Adding EN signal on $verific$Address_reg$b15.vhd:233$620 ($adff) from module b15 (D = $auto$bmuxmap.cc:58:execute$1810, Q = \Address).
Adding EN signal on $verific$ADS_n_reg$b15.vhd:233$624 ($adff) from module b15 (D = $auto$bmuxmap.cc:58:execute$1860, Q = \ADS_n).
Setting constant 0-bit at position 2 on $auto$ff.cc:262:slice$2603 ($adffe) from module b15.
Setting constant 0-bit at position 3 on $auto$ff.cc:262:slice$2603 ($adffe) from module b15.
Setting constant 0-bit at position 4 on $auto$ff.cc:262:slice$2603 ($adffe) from module b15.
Setting constant 0-bit at position 5 on $auto$ff.cc:262:slice$2603 ($adffe) from module b15.
Setting constant 0-bit at position 6 on $auto$ff.cc:262:slice$2603 ($adffe) from module b15.
Setting constant 0-bit at position 7 on $auto$ff.cc:262:slice$2603 ($adffe) from module b15.
Setting constant 0-bit at position 8 on $auto$ff.cc:262:slice$2603 ($adffe) from module b15.
Setting constant 0-bit at position 9 on $auto$ff.cc:262:slice$2603 ($adffe) from module b15.
Setting constant 0-bit at position 10 on $auto$ff.cc:262:slice$2603 ($adffe) from module b15.
Setting constant 0-bit at position 11 on $auto$ff.cc:262:slice$2603 ($adffe) from module b15.
Setting constant 0-bit at position 12 on $auto$ff.cc:262:slice$2603 ($adffe) from module b15.
Setting constant 0-bit at position 13 on $auto$ff.cc:262:slice$2603 ($adffe) from module b15.
Setting constant 0-bit at position 14 on $auto$ff.cc:262:slice$2603 ($adffe) from module b15.
Setting constant 0-bit at position 15 on $auto$ff.cc:262:slice$2603 ($adffe) from module b15.
Setting constant 0-bit at position 16 on $auto$ff.cc:262:slice$2603 ($adffe) from module b15.
Setting constant 0-bit at position 17 on $auto$ff.cc:262:slice$2603 ($adffe) from module b15.
Setting constant 0-bit at position 18 on $auto$ff.cc:262:slice$2603 ($adffe) from module b15.
Setting constant 0-bit at position 19 on $auto$ff.cc:262:slice$2603 ($adffe) from module b15.
Setting constant 0-bit at position 20 on $auto$ff.cc:262:slice$2603 ($adffe) from module b15.
Setting constant 0-bit at position 21 on $auto$ff.cc:262:slice$2603 ($adffe) from module b15.
Setting constant 0-bit at position 22 on $auto$ff.cc:262:slice$2603 ($adffe) from module b15.
Setting constant 0-bit at position 23 on $auto$ff.cc:262:slice$2603 ($adffe) from module b15.
Setting constant 0-bit at position 24 on $auto$ff.cc:262:slice$2603 ($adffe) from module b15.
Setting constant 0-bit at position 25 on $auto$ff.cc:262:slice$2603 ($adffe) from module b15.
Setting constant 0-bit at position 26 on $auto$ff.cc:262:slice$2603 ($adffe) from module b15.
Setting constant 0-bit at position 27 on $auto$ff.cc:262:slice$2603 ($adffe) from module b15.
Setting constant 0-bit at position 28 on $auto$ff.cc:262:slice$2603 ($adffe) from module b15.
Setting constant 0-bit at position 29 on $auto$ff.cc:262:slice$2603 ($adffe) from module b15.
Setting constant 0-bit at position 30 on $auto$ff.cc:262:slice$2603 ($adffe) from module b15.
Setting constant 0-bit at position 31 on $auto$ff.cc:262:slice$2603 ($adffe) from module b15.
Setting constant 0-bit at position 0 on $auto$ff.cc:262:slice$2591 ($adffe) from module b15.
Setting constant 0-bit at position 4 on $auto$ff.cc:262:slice$2425 ($adffe) from module b15.

yosys> opt_clean

3.40. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \b15..
Removed 20 unused cells and 20 unused wires.
<suppressed ~21 debug messages>

yosys> opt_expr

3.41. Executing OPT_EXPR pass (perform const folding).
Optimizing module b15.
<suppressed ~49 debug messages>

yosys> opt_muxtree

3.42. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \b15..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Removed 0 multiplexer ports.
<suppressed ~86 debug messages>

yosys> opt_reduce

3.43. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \b15.
Performed a total of 0 changes.

yosys> opt_merge

3.44. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\b15'.
<suppressed ~678 debug messages>
Removed a total of 226 cells.

yosys> opt_share

3.45. Executing OPT_SHARE pass.

yosys> opt_dff -nosdff -sat

3.46. Executing OPT_DFF pass (perform DFF optimizations).
Setting constant 0-bit at position 4 on $auto$ff.cc:262:slice$2442 ($adffe) from module b15.

yosys> opt_clean

3.47. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \b15..
Removed 0 unused cells and 224 unused wires.
<suppressed ~1 debug messages>

yosys> opt_expr

3.48. Executing OPT_EXPR pass (perform const folding).
Optimizing module b15.

yosys> opt_muxtree

3.49. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \b15..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Removed 0 multiplexer ports.
<suppressed ~91 debug messages>

yosys> opt_reduce

3.50. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \b15.
Performed a total of 0 changes.

yosys> opt_merge

3.51. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\b15'.
Removed a total of 0 cells.

yosys> opt_share

3.52. Executing OPT_SHARE pass.

yosys> opt_dff -nosdff -sat

3.53. Executing OPT_DFF pass (perform DFF optimizations).

yosys> opt_clean

3.54. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \b15..

yosys> opt_expr

3.55. Executing OPT_EXPR pass (perform const folding).
Optimizing module b15.
MAX OPT ITERATION = 3

yosys> wreduce -keepdc

3.56. Executing WREDUCE pass (reducing word size of cells).
Removed top 1 bits (of 6) from port B of cell b15.$auto$opt_dff.cc:195:make_patterns_logic$2021 ($ne).
Removed top 1 bits (of 9) from port B of cell b15.$auto$opt_dff.cc:195:make_patterns_logic$1949 ($ne).
Removed top 1 bits (of 3) from port B of cell b15.$auto$opt_dff.cc:195:make_patterns_logic$1961 ($ne).
Removed top 2 bits (of 5) from port B of cell b15.$auto$opt_dff.cc:195:make_patterns_logic$1943 ($ne).
Removed top 1 bits (of 7) from port B of cell b15.$auto$opt_dff.cc:195:make_patterns_logic$2057 ($ne).
Removed top 1 bits (of 3) from port B of cell b15.$auto$opt_dff.cc:195:make_patterns_logic$2008 ($ne).
Removed top 1 bits (of 6) from port B of cell b15.$auto$opt_dff.cc:195:make_patterns_logic$1947 ($ne).
Removed top 1 bits (of 6) from port B of cell b15.$auto$opt_dff.cc:195:make_patterns_logic$1945 ($ne).
Removed top 2 bits (of 3) from port B of cell b15.$auto$opt_dff.cc:195:make_patterns_logic$2010 ($ne).
Removed top 1 bits (of 5) from port B of cell b15.$auto$opt_dff.cc:195:make_patterns_logic$2025 ($ne).
Removed top 2 bits (of 4) from port B of cell b15.$auto$opt_dff.cc:195:make_patterns_logic$1959 ($ne).
Removed top 1 bits (of 4) from port B of cell b15.$auto$opt_dff.cc:195:make_patterns_logic$2029 ($ne).
Removed top 2 bits (of 3) from port B of cell b15.$auto$opt_dff.cc:195:make_patterns_logic$2046 ($ne).
Removed top 2 bits (of 5) from port B of cell b15.$auto$opt_dff.cc:195:make_patterns_logic$2091 ($ne).
Removed top 1 bits (of 6) from port B of cell b15.$auto$opt_dff.cc:195:make_patterns_logic$2095 ($ne).
Removed top 1 bits (of 6) from port B of cell b15.$auto$opt_dff.cc:195:make_patterns_logic$2097 ($ne).
Removed top 1 bits (of 6) from port B of cell b15.$auto$opt_dff.cc:195:make_patterns_logic$2174 ($ne).
Removed top 1 bits (of 4) from port B of cell b15.$auto$opt_dff.cc:195:make_patterns_logic$1953 ($ne).
Removed top 30 bits (of 32) from mux cell b15.$verific$mux_98$b15.vhd:183$588 ($mux).
Removed top 1 bits (of 31) from port Y of cell b15.$verific$add_113$b15.vhd:199$592 ($add).
Removed top 1 bits (of 31) from port A of cell b15.$verific$add_113$b15.vhd:199$592 ($add).
Removed top 1 bits (of 6) from port B of cell b15.$auto$opt_dff.cc:195:make_patterns_logic$2225 ($ne).
Removed top 1 bits (of 3) from mux cell b15.$verific$mux_127$b15.vhd:217$598 ($mux).
Removed top 15 bits (of 16) from port A of cell b15.$verific$Decoder_193$b15.vhd:307$633 ($shl).
Removed top 1 bits (of 5) from port A of cell b15.$verific$add_210$b15.vhd:308$650 ($add).
Removed top 4 bits (of 5) from port B of cell b15.$verific$add_210$b15.vhd:308$650 ($add).
Removed top 1 bits (of 5) from port Y of cell b15.$verific$add_210$b15.vhd:308$650 ($add).
Removed top 15 bits (of 16) from port A of cell b15.$verific$Decoder_213$b15.vhd:310$653 ($shl).
Removed top 3 bits (of 4) from port B of cell b15.$verific$add_230$b15.vhd:311$670 ($add).
Removed top 8 bits (of 16) from port Y of cell b15.$verific$add_235$b15.vhd:313$674 ($add).
Removed top 8 bits (of 16) from port A of cell b15.$verific$add_235$b15.vhd:313$674 ($add).
Removed top 15 bits (of 16) from port A of cell b15.$verific$Decoder_237$b15.vhd:313$679 ($shl).
Removed top 3 bits (of 4) from port B of cell b15.$verific$add_254$b15.vhd:314$696 ($add).
Removed top 15 bits (of 16) from port A of cell b15.$verific$Decoder_261$b15.vhd:315$704 ($shl).
Removed top 3 bits (of 4) from port B of cell b15.$verific$add_278$b15.vhd:316$721 ($add).
Removed top 29 bits (of 30) from port B of cell b15.$verific$add_281$b15.vhd:317$722 ($add).
Removed top 30 bits (of 31) from port B of cell b15.$verific$add_284$b15.vhd:320$724 ($add).
Removed top 1 bits (of 32) from port A of cell b15.$verific$LessThan_286$b15.vhd:321$726 ($lt).
Removed top 1 bits (of 33) from port Y of cell b15.$verific$unary_minus_287$b15.vhd:322$727 ($neg).
Removed top 1 bits (of 33) from port A of cell b15.$verific$unary_minus_287$b15.vhd:322$727 ($neg).
Removed top 31 bits (of 32) from port B of cell b15.$verific$add_360$b15.vhd:346$752 ($add).
Removed top 1 bits (of 5) from port A of cell b15.$verific$add_362$b15.vhd:347$754 ($add).
Removed top 4 bits (of 5) from port B of cell b15.$verific$add_362$b15.vhd:347$754 ($add).
Removed top 1 bits (of 6) from port Y of cell b15.$verific$add_362$b15.vhd:347$754 ($add).
Removed top 2 bits (of 6) from port A of cell b15.$verific$sub_369$b15.vhd:357$756 ($sub).
Removed top 2 bits (of 6) from port B of cell b15.$verific$sub_369$b15.vhd:357$756 ($sub).
Removed top 1 bits (of 6) from port Y of cell b15.$verific$sub_369$b15.vhd:357$756 ($sub).
Removed top 1 bits (of 6) from port B of cell b15.$verific$LessThan_370$b15.vhd:357$757 ($le).
Removed top 1 bits (of 8) from port A of cell b15.$verific$LessThan_373$b15.vhd:358$759 ($lt).
Removed top 1 bits (of 9) from port A of cell b15.$verific$sub_378$b15.vhd:359$760 ($sub).
Removed top 1 bits (of 9) from port B of cell b15.$verific$sub_378$b15.vhd:359$760 ($sub).
Removed top 1 bits (of 33) from port Y of cell b15.$verific$sub_379$b15.vhd:359$761 ($sub).
Removed top 1 bits (of 33) from port A of cell b15.$verific$sub_379$b15.vhd:359$761 ($sub).
Removed top 1 bits (of 33) from port B of cell b15.$verific$sub_379$b15.vhd:359$761 ($sub).
Removed top 30 bits (of 31) from port B of cell b15.$verific$add_383$b15.vhd:362$763 ($add).
Removed top 24 bits (of 32) from port B of cell b15.$verific$add_387$b15.vhd:362$764 ($add).
Removed top 1 bits (of 6) from port B of cell b15.$verific$LessThan_397$b15.vhd:372$771 ($le).
Removed top 29 bits (of 32) from port B of cell b15.$verific$add_399$b15.vhd:373$772 ($add).
Removed top 24 bits (of 32) from port B of cell b15.$verific$add_403$b15.vhd:373$773 ($add).
Removed top 1 bits (of 3) from port A of cell b15.$verific$add_422$b15.vhd:393$778 ($add).
Removed top 2 bits (of 3) from port B of cell b15.$verific$add_422$b15.vhd:393$778 ($add).
Removed top 1 bits (of 3) from port Y of cell b15.$verific$add_422$b15.vhd:393$778 ($add).
Removed top 1 bits (of 5) from port A of cell b15.$verific$add_424$b15.vhd:393$781 ($add).
Removed top 3 bits (of 5) from port B of cell b15.$verific$add_424$b15.vhd:393$781 ($add).
Removed top 1 bits (of 5) from port Y of cell b15.$verific$add_424$b15.vhd:393$781 ($add).
Removed top 7 bits (of 8) from port B of cell b15.$verific$add_426$b15.vhd:393$784 ($add).
Removed top 1 bits (of 9) from port Y of cell b15.$verific$add_426$b15.vhd:393$784 ($add).
Removed top 1 bits (of 4) from port A of cell b15.$verific$add_427$b15.vhd:393$785 ($add).
Removed top 3 bits (of 4) from port B of cell b15.$verific$add_427$b15.vhd:393$785 ($add).
Removed top 1 bits (of 5) from port A of cell b15.$verific$add_435$b15.vhd:397$789 ($add).
Removed top 2 bits (of 5) from port B of cell b15.$verific$add_435$b15.vhd:397$789 ($add).
Removed top 1 bits (of 5) from port Y of cell b15.$verific$add_435$b15.vhd:397$789 ($add).
Removed top 1 bits (of 6) from port B of cell b15.$auto$opt_dff.cc:195:make_patterns_logic$2208 ($ne).
Removed top 1 bits (of 5) from mux cell b15.$verific$mux_440$b15.vhd:401$794 ($mux).
Removed top 1 bits (of 6) from port B of cell b15.$verific$LessThan_462$b15.vhd:414$798 ($le).
Removed top 30 bits (of 31) from port B of cell b15.$verific$add_473$b15.vhd:432$801 ($add).
Removed top 1 bits (of 10) from mux cell b15.$verific$mux_943$b15.vhd:446$829 ($mux).
Removed top 1 bits (of 3) from port A of cell b15.$verific$equal_517$b15.vhd:464$831 ($eq).
Removed top 2 bits (of 4) from mux cell b15.$verific$mux_536$b15.vhd:475$837 ($mux).
Removed top 2 bits (of 4) from mux cell b15.$verific$mux_547$b15.vhd:480$840 ($mux).
Removed top 2 bits (of 4) from mux cell b15.$verific$mux_558$b15.vhd:481$844 ($mux).
Removed top 1 bits (of 5) from mux cell b15.$verific$mux_562$b15.vhd:481$848 ($mux).
Removed top 1 bits (of 64) from mux cell b15.$verific$mux_935$b15.vhd:481$851 ($mux).
Removed top 2 bits (of 4) from mux cell b15.$verific$mux_571$b15.vhd:485$852 ($mux).
Removed top 1 bits (of 64) from mux cell b15.$verific$mux_934$b15.vhd:485$859 ($mux).
Removed top 30 bits (of 31) from port B of cell b15.$verific$add_669$b15.vhd:548$860 ($add).
Removed top 1 bits (of 32) from port Y of cell b15.$verific$add_669$b15.vhd:548$860 ($add).
Removed top 30 bits (of 31) from port B of cell b15.$verific$add_676$b15.vhd:554$863 ($add).
Removed top 1 bits (of 32) from port Y of cell b15.$verific$add_676$b15.vhd:554$863 ($add).
Removed top 1 bits (of 8) from port A of cell b15.$verific$equal_689$b15.vhd:350$867 ($eq).
Removed top 5 bits (of 8) from port A of cell b15.$verific$equal_700$b15.vhd:527$878 ($eq).
Removed top 5 bits (of 8) from port A of cell b15.$verific$equal_701$b15.vhd:532$879 ($eq).
Removed top 1 bits (of 8) from port A of cell b15.$verific$equal_704$b15.vhd:547$882 ($eq).
Removed top 1 bits (of 8) from port A of cell b15.$verific$equal_705$b15.vhd:553$883 ($eq).
Removed top 1 bits (of 4) from mux cell b15.$verific$select_728$b15.vhd:564$905 ($pmux).
Removed top 1 bits (of 5) from port B of cell b15.$verific$LessThan_729$b15.vhd:565$906 ($lt).
Removed top 2 bits (of 6) from port A of cell b15.$verific$sub_731$b15.vhd:565$908 ($sub).
Removed top 1 bits (of 6) from port B of cell b15.$verific$sub_731$b15.vhd:565$908 ($sub).
Removed top 1 bits (of 6) from port A of cell b15.$verific$LessThan_732$b15.vhd:565$909 ($lt).
Removed top 1 bits (of 4) from mux cell b15.$verific$mux_736$b15.vhd:567$913 ($mux).
Removed top 2 bits (of 4) from mux cell b15.$verific$mux_741$b15.vhd:574$916 ($mux).
Removed top 1 bits (of 32) from port A of cell b15.$verific$LessThan_742$b15.vhd:581$917 ($lt).
Removed top 1 bits (of 33) from port Y of cell b15.$verific$unary_minus_743$b15.vhd:582$918 ($neg).
Removed top 1 bits (of 33) from port A of cell b15.$verific$unary_minus_743$b15.vhd:582$918 ($neg).
Removed top 30 bits (of 32) from mux cell b15.$verific$mux_746$b15.vhd:587$922 ($mux).
Removed top 1 bits (of 2) from port A of cell b15.$verific$add_747$b15.vhd:588$924 ($add).
Removed top 1 bits (of 4) from mux cell b15.$verific$mux_751$b15.vhd:589$926 ($mux).
Removed top 1 bits (of 5) from mux cell b15.$verific$mux_752$b15.vhd:590$927 ($mux).
Removed top 2 bits (of 6) from port A of cell b15.$verific$sub_754$b15.vhd:591$929 ($sub).
Removed top 2 bits (of 6) from port B of cell b15.$verific$sub_754$b15.vhd:591$929 ($sub).
Removed top 1 bits (of 6) from port Y of cell b15.$verific$sub_754$b15.vhd:591$929 ($sub).
Removed top 1 bits (of 6) from port A of cell b15.$verific$LessThan_755$b15.vhd:591$930 ($lt).
Removed top 1 bits (of 5) from port A of cell b15.$verific$LessThan_758$b15.vhd:599$932 ($le).
Removed top 1 bits (of 5) from port B of cell b15.$verific$LessThan_758$b15.vhd:599$932 ($le).
Removed top 1 bits (of 6) from port B of cell b15.$auto$opt_dff.cc:195:make_patterns_logic$2191 ($ne).
Removed top 1 bits (of 33) from mux cell b15.$auto$bmuxmap.cc:60:execute$1067 ($mux).
Removed top 1 bits (of 2) from port A of cell b15.$verific$equal_896$b15.vhd:636$1047 ($eq).
Removed top 1 bits (of 6) from port B of cell b15.$auto$opt_dff.cc:195:make_patterns_logic$2455 ($ne).
Removed top 2 bits (of 33) from mux cell b15.$auto$bmuxmap.cc:60:execute$1081 ($mux).
Removed top 1 bits (of 4) from port B of cell b15.$auto$opt_dff.cc:195:make_patterns_logic$2431 ($ne).
Removed top 1 bits (of 6) from port B of cell b15.$auto$opt_dff.cc:195:make_patterns_logic$2427 ($ne).
Removed top 1 bits (of 6) from port B of cell b15.$auto$opt_dff.cc:195:make_patterns_logic$2412 ($ne).
Removed top 1 bits (of 5) from mux cell b15.$auto$bmuxmap.cc:60:execute$1196 ($mux).
Removed top 1 bits (of 6) from port B of cell b15.$auto$opt_dff.cc:195:make_patterns_logic$2395 ($ne).
Removed top 1 bits (of 5) from mux cell b15.$auto$bmuxmap.cc:60:execute$1215 ($mux).
Removed top 1 bits (of 6) from port B of cell b15.$auto$opt_dff.cc:195:make_patterns_logic$2378 ($ne).
Removed top 1 bits (of 6) from port B of cell b15.$auto$opt_dff.cc:195:make_patterns_logic$2361 ($ne).
Removed top 1 bits (of 6) from port B of cell b15.$auto$opt_dff.cc:195:make_patterns_logic$2344 ($ne).
Removed top 1 bits (of 6) from port B of cell b15.$auto$opt_dff.cc:195:make_patterns_logic$2327 ($ne).
Removed top 1 bits (of 6) from port B of cell b15.$auto$opt_dff.cc:195:make_patterns_logic$2310 ($ne).
Removed top 1 bits (of 6) from port B of cell b15.$auto$opt_dff.cc:195:make_patterns_logic$2293 ($ne).
Removed top 1 bits (of 6) from port B of cell b15.$auto$opt_dff.cc:195:make_patterns_logic$2276 ($ne).
Removed top 1 bits (of 6) from port B of cell b15.$auto$opt_dff.cc:195:make_patterns_logic$2259 ($ne).
Removed top 1 bits (of 33) from mux cell b15.$auto$bmuxmap.cc:60:execute$1614 ($mux).
Removed top 2 bits (of 4) from mux cell b15.$auto$bmuxmap.cc:60:execute$1616 ($mux).
Removed top 1 bits (of 4) from mux cell b15.$auto$bmuxmap.cc:60:execute$1617 ($mux).
Removed top 1 bits (of 4) from mux cell b15.$auto$bmuxmap.cc:60:execute$1618 ($mux).
Removed top 1 bits (of 4) from mux cell b15.$auto$bmuxmap.cc:60:execute$1625 ($mux).
Removed top 1 bits (of 6) from port B of cell b15.$auto$opt_dff.cc:195:make_patterns_logic$2242 ($ne).
Removed top 2 bits (of 12) from mux cell b15.$auto$bmuxmap.cc:60:execute$1673 ($mux).
Removed top 1 bits (of 8) from port B of cell b15.$auto$opt_dff.cc:195:make_patterns_logic$1941 ($ne).
Removed top 1 bits (of 6) from port B of cell b15.$auto$opt_dff.cc:195:make_patterns_logic$1939 ($ne).
Removed top 1 bits (of 33) from mux cell b15.$auto$bmuxmap.cc:60:execute$1813 ($mux).
Removed top 1 bits (of 33) from mux cell b15.$auto$bmuxmap.cc:60:execute$1814 ($mux).
Removed top 1 bits (of 33) from mux cell b15.$auto$bmuxmap.cc:60:execute$1815 ($mux).
Removed top 1 bits (of 33) from mux cell b15.$auto$bmuxmap.cc:60:execute$1818 ($mux).
Removed top 1 bits (of 33) from mux cell b15.$auto$bmuxmap.cc:60:execute$1819 ($mux).
Removed top 31 bits (of 33) from mux cell b15.$auto$bmuxmap.cc:60:execute$1821 ($mux).
Removed top 1 bits (of 4) from port B of cell b15.$auto$opt_dff.cc:195:make_patterns_logic$2161 ($ne).
Removed top 3 bits (of 4) from port B of cell b15.$auto$opt_dff.cc:195:make_patterns_logic$1955 ($ne).
Removed top 1 bits (of 6) from port B of cell b15.$auto$opt_dff.cc:195:make_patterns_logic$2157 ($ne).
Removed top 1 bits (of 5) from port B of cell b15.$auto$opt_dff.cc:195:make_patterns_logic$2467 ($ne).
Removed top 1 bits (of 6) from port B of cell b15.$auto$opt_dff.cc:195:make_patterns_logic$2514 ($ne).
Removed top 1 bits (of 6) from port B of cell b15.$auto$opt_dff.cc:195:make_patterns_logic$2534 ($ne).
Removed top 1 bits (of 6) from port B of cell b15.$auto$opt_dff.cc:195:make_patterns_logic$2549 ($ne).
Removed top 1 bits (of 6) from port B of cell b15.$auto$opt_dff.cc:195:make_patterns_logic$2553 ($ne).
Removed top 1 bits (of 7) from port B of cell b15.$auto$opt_dff.cc:195:make_patterns_logic$2557 ($ne).
Removed top 1 bits (of 5) from port B of cell b15.$auto$opt_dff.cc:195:make_patterns_logic$2572 ($ne).
Removed top 1 bits (of 7) from port B of cell b15.$auto$opt_dff.cc:195:make_patterns_logic$2578 ($ne).
Removed top 1 bits (of 7) from port B of cell b15.$auto$opt_dff.cc:195:make_patterns_logic$2580 ($ne).
Removed top 1 bits (of 6) from port B of cell b15.$auto$opt_dff.cc:195:make_patterns_logic$2624 ($ne).
Removed top 1 bits (of 3) from port B of cell b15.$auto$opt_dff.cc:195:make_patterns_logic$2649 ($ne).
Removed top 30 bits (of 32) from port Y of cell b15.$verific$unary_minus_743$b15.vhd:582$918 ($neg).
Removed top 30 bits (of 32) from port A of cell b15.$verific$unary_minus_743$b15.vhd:582$918 ($neg).
Removed top 2 bits (of 33) from mux cell b15.$auto$bmuxmap.cc:60:execute$1078 ($mux).
Removed top 2 bits (of 33) from mux cell b15.$auto$bmuxmap.cc:60:execute$1079 ($mux).
Removed top 1 bits (of 5) from mux cell b15.$auto$bmuxmap.cc:60:execute$1193 ($mux).
Removed top 1 bits (of 5) from mux cell b15.$auto$bmuxmap.cc:60:execute$1194 ($mux).
Removed top 1 bits (of 5) from mux cell b15.$auto$bmuxmap.cc:60:execute$1212 ($mux).
Removed top 1 bits (of 5) from mux cell b15.$auto$bmuxmap.cc:60:execute$1213 ($mux).
Removed top 1 bits (of 33) from mux cell b15.$auto$bmuxmap.cc:60:execute$1611 ($mux).
Removed top 1 bits (of 33) from mux cell b15.$auto$bmuxmap.cc:60:execute$1612 ($mux).
Removed top 30 bits (of 32) from mux cell b15.$auto$bmuxmap.cc:60:execute$1818 ($mux).
Removed top 30 bits (of 32) from mux cell b15.$auto$bmuxmap.cc:60:execute$1819 ($mux).
Removed top 2 bits (of 33) from mux cell b15.$auto$bmuxmap.cc:60:execute$1074 ($mux).
Removed cell b15.$auto$bmuxmap.cc:60:execute$1075 ($mux).
Removed top 1 bits (of 5) from mux cell b15.$auto$bmuxmap.cc:60:execute$1189 ($mux).
Removed top 1 bits (of 5) from mux cell b15.$auto$bmuxmap.cc:60:execute$1190 ($mux).
Removed top 1 bits (of 5) from mux cell b15.$auto$bmuxmap.cc:60:execute$1207 ($mux).
Removed top 1 bits (of 5) from mux cell b15.$auto$bmuxmap.cc:60:execute$1208 ($mux).
Removed top 1 bits (of 5) from mux cell b15.$auto$bmuxmap.cc:60:execute$1209 ($mux).
Removed top 1 bits (of 33) from mux cell b15.$auto$bmuxmap.cc:60:execute$1606 ($mux).
Removed top 1 bits (of 33) from mux cell b15.$auto$bmuxmap.cc:60:execute$1607 ($mux).
Removed top 1 bits (of 33) from mux cell b15.$auto$bmuxmap.cc:60:execute$1608 ($mux).
Removed top 30 bits (of 32) from mux cell b15.$auto$bmuxmap.cc:60:execute$1813 ($mux).
Removed top 30 bits (of 32) from mux cell b15.$auto$bmuxmap.cc:60:execute$1814 ($mux).
Removed top 30 bits (of 32) from mux cell b15.$auto$bmuxmap.cc:60:execute$1815 ($mux).
Removed top 2 bits (of 33) from mux cell b15.$auto$bmuxmap.cc:60:execute$1066 ($mux).
Removed top 1 bits (of 32) from mux cell b15.$auto$bmuxmap.cc:60:execute$1067 ($mux).
Removed top 1 bits (of 5) from mux cell b15.$auto$bmuxmap.cc:60:execute$1181 ($mux).
Removed top 1 bits (of 5) from mux cell b15.$auto$bmuxmap.cc:60:execute$1182 ($mux).
Removed top 1 bits (of 5) from mux cell b15.$auto$bmuxmap.cc:60:execute$1183 ($mux).
Removed top 1 bits (of 5) from mux cell b15.$auto$bmuxmap.cc:60:execute$1199 ($mux).
Removed top 1 bits (of 5) from mux cell b15.$auto$bmuxmap.cc:60:execute$1200 ($mux).
Removed top 1 bits (of 5) from mux cell b15.$auto$bmuxmap.cc:60:execute$1201 ($mux).
Removed top 1 bits (of 5) from mux cell b15.$auto$bmuxmap.cc:60:execute$1202 ($mux).
Removed top 1 bits (of 33) from mux cell b15.$auto$bmuxmap.cc:60:execute$1597 ($mux).
Removed top 1 bits (of 33) from mux cell b15.$auto$bmuxmap.cc:60:execute$1598 ($mux).
Removed top 1 bits (of 33) from mux cell b15.$auto$bmuxmap.cc:60:execute$1599 ($mux).
Removed top 1 bits (of 33) from mux cell b15.$auto$bmuxmap.cc:60:execute$1601 ($mux).
Removed top 1 bits (of 32) from mux cell b15.$verific$select_727$b15.vhd:564$904 ($pmux).
Removed top 1 bits (of 5) from mux cell b15.$verific$mux_757$b15.vhd:596$931 ($mux).
Removed top 1 bits (of 5) from mux cell b15.$verific$mux_799$b15.vhd:607$968 ($mux).
Removed top 1 bits (of 5) from mux cell b15.$verific$mux_753$b15.vhd:590$928 ($mux).
Removed top 101 bits (of 264) from wire b15.$auto$bmuxmap.cc:58:execute$1063.
Removed top 68 bits (of 132) from wire b15.$auto$bmuxmap.cc:58:execute$1072.
Removed top 2 bits (of 66) from wire b15.$auto$bmuxmap.cc:58:execute$1077.
Removed top 2 bits (of 33) from wire b15.$auto$bmuxmap.cc:58:execute$1080.
Removed top 48 bits (of 128) from wire b15.$auto$bmuxmap.cc:58:execute$1082.
Removed top 32 bits (of 64) from wire b15.$auto$bmuxmap.cc:58:execute$1091.
Removed top 16 bits (of 32) from wire b15.$auto$bmuxmap.cc:58:execute$1096.
Removed top 45 bits (of 120) from wire b15.$auto$bmuxmap.cc:58:execute$1101.
Removed top 30 bits (of 60) from wire b15.$auto$bmuxmap.cc:58:execute$1110.
Removed top 15 bits (of 30) from wire b15.$auto$bmuxmap.cc:58:execute$1115.
Removed top 93 bits (of 248) from wire b15.$auto$bmuxmap.cc:58:execute$1120.
Removed top 31 bits (of 62) from wire b15.$auto$bmuxmap.cc:58:execute$1134.
Removed top 93 bits (of 248) from wire b15.$auto$bmuxmap.cc:58:execute$1139.
Removed top 62 bits (of 124) from wire b15.$auto$bmuxmap.cc:58:execute$1148.
Removed top 16 bits (of 40) from wire b15.$auto$bmuxmap.cc:58:execute$1178.
Removed top 16 bits (of 20) from wire b15.$auto$bmuxmap.cc:58:execute$1187.
Removed top 16 bits (of 40) from wire b15.$auto$bmuxmap.cc:58:execute$1197.
Removed top 24 bits (of 64) from wire b15.$auto$bmuxmap.cc:58:execute$1216.
Removed top 24 bits (of 64) from wire b15.$auto$bmuxmap.cc:58:execute$1235.
Removed top 24 bits (of 64) from wire b15.$auto$bmuxmap.cc:58:execute$1254.
Removed top 24 bits (of 64) from wire b15.$auto$bmuxmap.cc:58:execute$1273.
Removed top 24 bits (of 64) from wire b15.$auto$bmuxmap.cc:58:execute$1292.
Removed top 24 bits (of 64) from wire b15.$auto$bmuxmap.cc:58:execute$1311.
Removed top 24 bits (of 64) from wire b15.$auto$bmuxmap.cc:58:execute$1330.
Removed top 24 bits (of 64) from wire b15.$auto$bmuxmap.cc:58:execute$1349.
Removed top 24 bits (of 64) from wire b15.$auto$bmuxmap.cc:58:execute$1368.
Removed top 24 bits (of 64) from wire b15.$auto$bmuxmap.cc:58:execute$1387.
Removed top 24 bits (of 64) from wire b15.$auto$bmuxmap.cc:58:execute$1406.
Removed top 24 bits (of 64) from wire b15.$auto$bmuxmap.cc:58:execute$1425.
Removed top 24 bits (of 64) from wire b15.$auto$bmuxmap.cc:58:execute$1444.
Removed top 24 bits (of 64) from wire b15.$auto$bmuxmap.cc:58:execute$1463.
Removed top 24 bits (of 64) from wire b15.$auto$bmuxmap.cc:58:execute$1482.
Removed top 24 bits (of 64) from wire b15.$auto$bmuxmap.cc:58:execute$1501.
Removed top 3 bits (of 8) from wire b15.$auto$bmuxmap.cc:58:execute$1520.
Removed top 3 bits (of 8) from wire b15.$auto$bmuxmap.cc:58:execute$1539.
Removed top 3 bits (of 8) from wire b15.$auto$bmuxmap.cc:58:execute$1558.
Removed top 3 bits (of 8) from wire b15.$auto$bmuxmap.cc:58:execute$1577.
Removed top 100 bits (of 264) from wire b15.$auto$bmuxmap.cc:58:execute$1596.
Removed top 23 bits (of 32) from wire b15.$auto$bmuxmap.cc:58:execute$1615.
Removed top 96 bits (of 256) from wire b15.$auto$bmuxmap.cc:58:execute$1634.
Removed top 96 bits (of 256) from wire b15.$auto$bmuxmap.cc:58:execute$1653.
Removed top 8 bits (of 24) from wire b15.$auto$bmuxmap.cc:58:execute$1672.
Removed top 31 bits (of 132) from wire b15.$auto$bmuxmap.cc:58:execute$1812.
Removed top 31 bits (of 66) from wire b15.$auto$bmuxmap.cc:58:execute$1817.
Removed top 31 bits (of 33) from wire b15.$auto$bmuxmap.cc:58:execute$1820.
Removed top 30 bits (of 32) from wire b15.$verific$n1001$168.
Removed top 1 bits (of 31) from wire b15.$verific$n1151$173.
Removed top 1 bits (of 3) from wire b15.$verific$n1294$178.
Removed top 1 bits (of 5) from wire b15.$verific$n2071$211.
Removed top 8 bits (of 16) from wire b15.$verific$n2267$232.
Removed top 1 bits (of 33) from wire b15.$verific$n2793$278.
Removed top 1 bits (of 5) from wire b15.$verific$n3660$305.
Removed top 1 bits (of 33) from wire b15.$verific$n3837$312.
Removed top 1 bits (of 3) from wire b15.$verific$n4619$333.
Removed top 1 bits (of 5) from wire b15.$verific$n4633$335.
Removed top 1 bits (of 4) from wire b15.$verific$n4659$338.
Removed top 1 bits (of 5) from wire b15.$verific$n5590$365.
Removed top 2 bits (of 4) from wire b15.$verific$n5963$376.
Removed top 2 bits (of 4) from wire b15.$verific$n6083$378.
Removed top 1 bits (of 32) from wire b15.$verific$n6129$379.
Removed top 2 bits (of 4) from wire b15.$verific$n6199$381.
Removed top 1 bits (of 5) from wire b15.$verific$n6239$383.
Removed top 1 bits (of 32) from wire b15.$verific$n6315$387.
Removed top 1 bits (of 32) from wire b15.$verific$n8011$431.
Removed top 1 bits (of 4) from wire b15.$verific$n8044$432.
Removed top 1 bits (of 5) from wire b15.$verific$n8254$443.
Removed top 30 bits (of 32) from wire b15.DataWidth.
Removed top 1 bits (of 5) from wire b15.P1.InstQueueRd_Addr.
Removed top 1 bits (of 5) from wire b15.P1.InstQueueWr_Addr.

yosys> peepopt

3.57. Executing PEEPOPT pass (run peephole optimizers).

yosys> opt_clean

3.58. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \b15..
Removed 0 unused cells and 81 unused wires.
<suppressed ~1 debug messages>

yosys> bmuxmap

3.59. Executing BMUXMAP pass.

yosys> demuxmap

3.60. Executing DEMUXMAP pass.

yosys> clean_zerowidth

yosys> alumacc

3.61. Executing ALUMACC pass (create $alu and $macc cells).
Extracting $alu and $macc cells in module b15:
  creating $macc model for $verific$add_113$b15.vhd:199$592 ($add).
  creating $macc model for $verific$add_210$b15.vhd:308$650 ($add).
  creating $macc model for $verific$add_230$b15.vhd:311$670 ($add).
  creating $macc model for $verific$add_235$b15.vhd:313$674 ($add).
  creating $macc model for $verific$add_254$b15.vhd:314$696 ($add).
  creating $macc model for $verific$add_259$b15.vhd:315$700 ($add).
  creating $macc model for $verific$add_278$b15.vhd:316$721 ($add).
  creating $macc model for $verific$add_28$b15.vhd:127$542 ($add).
  creating $macc model for $verific$add_281$b15.vhd:317$722 ($add).
  creating $macc model for $verific$add_284$b15.vhd:320$724 ($add).
  creating $macc model for $verific$add_360$b15.vhd:346$752 ($add).
  creating $macc model for $verific$add_362$b15.vhd:347$754 ($add).
  creating $macc model for $verific$add_383$b15.vhd:362$763 ($add).
  creating $macc model for $verific$add_387$b15.vhd:362$764 ($add).
  creating $macc model for $verific$add_399$b15.vhd:373$772 ($add).
  creating $macc model for $verific$add_403$b15.vhd:373$773 ($add).
  creating $macc model for $verific$add_422$b15.vhd:393$778 ($add).
  creating $macc model for $verific$add_424$b15.vhd:393$781 ($add).
  creating $macc model for $verific$add_426$b15.vhd:393$784 ($add).
  creating $macc model for $verific$add_427$b15.vhd:393$785 ($add).
  creating $macc model for $verific$add_435$b15.vhd:397$789 ($add).
  creating $macc model for $verific$add_473$b15.vhd:432$801 ($add).
  creating $macc model for $verific$add_669$b15.vhd:548$860 ($add).
  creating $macc model for $verific$add_676$b15.vhd:554$863 ($add).
  creating $macc model for $verific$add_747$b15.vhd:588$924 ($add).
  creating $macc model for $verific$sub_369$b15.vhd:357$756 ($sub).
  creating $macc model for $verific$sub_378$b15.vhd:359$760 ($sub).
  creating $macc model for $verific$sub_379$b15.vhd:359$761 ($sub).
  creating $macc model for $verific$sub_731$b15.vhd:565$908 ($sub).
  creating $macc model for $verific$sub_754$b15.vhd:591$929 ($sub).
  creating $macc model for $verific$unary_minus_287$b15.vhd:322$727 ($neg).
  creating $macc model for $verific$unary_minus_743$b15.vhd:582$918 ($neg).
  creating $alu model for $macc $verific$unary_minus_743$b15.vhd:582$918.
  creating $alu model for $macc $verific$unary_minus_287$b15.vhd:322$727.
  creating $alu model for $macc $verific$sub_754$b15.vhd:591$929.
  creating $alu model for $macc $verific$sub_731$b15.vhd:565$908.
  creating $alu model for $macc $verific$sub_379$b15.vhd:359$761.
  creating $alu model for $macc $verific$sub_378$b15.vhd:359$760.
  creating $alu model for $macc $verific$sub_369$b15.vhd:357$756.
  creating $alu model for $macc $verific$add_747$b15.vhd:588$924.
  creating $alu model for $macc $verific$add_676$b15.vhd:554$863.
  creating $alu model for $macc $verific$add_669$b15.vhd:548$860.
  creating $alu model for $macc $verific$add_473$b15.vhd:432$801.
  creating $alu model for $macc $verific$add_435$b15.vhd:397$789.
  creating $alu model for $macc $verific$add_427$b15.vhd:393$785.
  creating $alu model for $macc $verific$add_426$b15.vhd:393$784.
  creating $alu model for $macc $verific$add_424$b15.vhd:393$781.
  creating $alu model for $macc $verific$add_422$b15.vhd:393$778.
  creating $alu model for $macc $verific$add_403$b15.vhd:373$773.
  creating $alu model for $macc $verific$add_399$b15.vhd:373$772.
  creating $alu model for $macc $verific$add_387$b15.vhd:362$764.
  creating $alu model for $macc $verific$add_383$b15.vhd:362$763.
  creating $alu model for $macc $verific$add_362$b15.vhd:347$754.
  creating $alu model for $macc $verific$add_360$b15.vhd:346$752.
  creating $alu model for $macc $verific$add_284$b15.vhd:320$724.
  creating $alu model for $macc $verific$add_281$b15.vhd:317$722.
  creating $alu model for $macc $verific$add_28$b15.vhd:127$542.
  creating $alu model for $macc $verific$add_278$b15.vhd:316$721.
  creating $alu model for $macc $verific$add_259$b15.vhd:315$700.
  creating $alu model for $macc $verific$add_254$b15.vhd:314$696.
  creating $alu model for $macc $verific$add_235$b15.vhd:313$674.
  creating $alu model for $macc $verific$add_230$b15.vhd:311$670.
  creating $alu model for $macc $verific$add_210$b15.vhd:308$650.
  creating $alu model for $macc $verific$add_113$b15.vhd:199$592.
  creating $alu model for $verific$LessThan_286$b15.vhd:321$726 ($lt): new $alu
  creating $alu model for $verific$LessThan_370$b15.vhd:357$757 ($le): new $alu
  creating $alu model for $verific$LessThan_373$b15.vhd:358$759 ($lt): new $alu
  creating $alu model for $verific$LessThan_397$b15.vhd:372$771 ($le): new $alu
  creating $alu model for $verific$LessThan_462$b15.vhd:414$798 ($le): new $alu
  creating $alu model for $verific$LessThan_729$b15.vhd:565$906 ($lt): new $alu
  creating $alu model for $verific$LessThan_732$b15.vhd:565$909 ($lt): new $alu
  creating $alu model for $verific$LessThan_742$b15.vhd:581$917 ($lt): new $alu
  creating $alu model for $verific$LessThan_755$b15.vhd:591$930 ($lt): new $alu
  creating $alu model for $verific$LessThan_758$b15.vhd:599$932 ($le): new $alu
  creating $alu cell for $verific$LessThan_758$b15.vhd:599$932: $auto$alumacc.cc:485:replace_alu$2743
  creating $alu cell for $verific$LessThan_755$b15.vhd:591$930: $auto$alumacc.cc:485:replace_alu$2752
  creating $alu cell for $verific$LessThan_742$b15.vhd:581$917: $auto$alumacc.cc:485:replace_alu$2757
  creating $alu cell for $verific$LessThan_732$b15.vhd:565$909: $auto$alumacc.cc:485:replace_alu$2762
  creating $alu cell for $verific$LessThan_729$b15.vhd:565$906: $auto$alumacc.cc:485:replace_alu$2767
  creating $alu cell for $verific$LessThan_462$b15.vhd:414$798: $auto$alumacc.cc:485:replace_alu$2778
  creating $alu cell for $verific$LessThan_397$b15.vhd:372$771: $auto$alumacc.cc:485:replace_alu$2791
  creating $alu cell for $verific$LessThan_373$b15.vhd:358$759: $auto$alumacc.cc:485:replace_alu$2804
  creating $alu cell for $verific$LessThan_370$b15.vhd:357$757: $auto$alumacc.cc:485:replace_alu$2809
  creating $alu cell for $verific$LessThan_286$b15.vhd:321$726: $auto$alumacc.cc:485:replace_alu$2822
  creating $alu cell for $verific$add_113$b15.vhd:199$592: $auto$alumacc.cc:485:replace_alu$2827
  creating $alu cell for $verific$add_210$b15.vhd:308$650: $auto$alumacc.cc:485:replace_alu$2830
  creating $alu cell for $verific$add_230$b15.vhd:311$670: $auto$alumacc.cc:485:replace_alu$2833
  creating $alu cell for $verific$add_235$b15.vhd:313$674: $auto$alumacc.cc:485:replace_alu$2836
  creating $alu cell for $verific$add_254$b15.vhd:314$696: $auto$alumacc.cc:485:replace_alu$2839
  creating $alu cell for $verific$add_259$b15.vhd:315$700: $auto$alumacc.cc:485:replace_alu$2842
  creating $alu cell for $verific$add_278$b15.vhd:316$721: $auto$alumacc.cc:485:replace_alu$2845
  creating $alu cell for $verific$add_28$b15.vhd:127$542: $auto$alumacc.cc:485:replace_alu$2848
  creating $alu cell for $verific$add_281$b15.vhd:317$722: $auto$alumacc.cc:485:replace_alu$2851
  creating $alu cell for $verific$add_284$b15.vhd:320$724: $auto$alumacc.cc:485:replace_alu$2854
  creating $alu cell for $verific$add_360$b15.vhd:346$752: $auto$alumacc.cc:485:replace_alu$2857
  creating $alu cell for $verific$add_362$b15.vhd:347$754: $auto$alumacc.cc:485:replace_alu$2860
  creating $alu cell for $verific$add_383$b15.vhd:362$763: $auto$alumacc.cc:485:replace_alu$2863
  creating $alu cell for $verific$add_387$b15.vhd:362$764: $auto$alumacc.cc:485:replace_alu$2866
  creating $alu cell for $verific$add_399$b15.vhd:373$772: $auto$alumacc.cc:485:replace_alu$2869
  creating $alu cell for $verific$add_403$b15.vhd:373$773: $auto$alumacc.cc:485:replace_alu$2872
  creating $alu cell for $verific$add_422$b15.vhd:393$778: $auto$alumacc.cc:485:replace_alu$2875
  creating $alu cell for $verific$add_424$b15.vhd:393$781: $auto$alumacc.cc:485:replace_alu$2878
  creating $alu cell for $verific$add_426$b15.vhd:393$784: $auto$alumacc.cc:485:replace_alu$2881
  creating $alu cell for $verific$add_427$b15.vhd:393$785: $auto$alumacc.cc:485:replace_alu$2884
  creating $alu cell for $verific$add_435$b15.vhd:397$789: $auto$alumacc.cc:485:replace_alu$2887
  creating $alu cell for $verific$add_473$b15.vhd:432$801: $auto$alumacc.cc:485:replace_alu$2890
  creating $alu cell for $verific$add_669$b15.vhd:548$860: $auto$alumacc.cc:485:replace_alu$2893
  creating $alu cell for $verific$add_676$b15.vhd:554$863: $auto$alumacc.cc:485:replace_alu$2896
  creating $alu cell for $verific$add_747$b15.vhd:588$924: $auto$alumacc.cc:485:replace_alu$2899
  creating $alu cell for $verific$sub_369$b15.vhd:357$756: $auto$alumacc.cc:485:replace_alu$2902
  creating $alu cell for $verific$sub_378$b15.vhd:359$760: $auto$alumacc.cc:485:replace_alu$2905
  creating $alu cell for $verific$sub_379$b15.vhd:359$761: $auto$alumacc.cc:485:replace_alu$2908
  creating $alu cell for $verific$sub_731$b15.vhd:565$908: $auto$alumacc.cc:485:replace_alu$2911
  creating $alu cell for $verific$sub_754$b15.vhd:591$929: $auto$alumacc.cc:485:replace_alu$2914
  creating $alu cell for $verific$unary_minus_287$b15.vhd:322$727: $auto$alumacc.cc:485:replace_alu$2917
  creating $alu cell for $verific$unary_minus_743$b15.vhd:582$918: $auto$alumacc.cc:485:replace_alu$2920
  created 42 $alu and 0 $macc cells.

yosys> opt_expr

3.62. Executing OPT_EXPR pass (perform const folding).
Optimizing module b15.
<suppressed ~6 debug messages>

yosys> opt_merge -nomux

3.63. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\b15'.
Removed a total of 0 cells.

yosys> opt_muxtree

3.64. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \b15..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Removed 0 multiplexer ports.
<suppressed ~91 debug messages>

yosys> opt_reduce

3.65. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \b15.
Performed a total of 0 changes.

yosys> opt_merge

3.66. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\b15'.
Removed a total of 0 cells.

yosys> opt_share

3.67. Executing OPT_SHARE pass.

yosys> opt_dff -nosdff -nodffe

3.68. Executing OPT_DFF pass (perform DFF optimizations).

yosys> opt_clean

3.69. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \b15..
Removed 4 unused cells and 15 unused wires.
<suppressed ~5 debug messages>

yosys> opt_expr

3.70. Executing OPT_EXPR pass (perform const folding).
Optimizing module b15.

yosys> opt_muxtree

3.71. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \b15..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Removed 0 multiplexer ports.
<suppressed ~91 debug messages>

yosys> opt_reduce

3.72. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \b15.
Performed a total of 0 changes.

yosys> opt_merge

3.73. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\b15'.
Removed a total of 0 cells.

yosys> opt_share

3.74. Executing OPT_SHARE pass.

yosys> opt_dff -nosdff -nodffe

3.75. Executing OPT_DFF pass (perform DFF optimizations).

yosys> opt_clean

3.76. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \b15..

yosys> opt_expr

3.77. Executing OPT_EXPR pass (perform const folding).
Optimizing module b15.
MAX OPT ITERATION = 2

yosys> stat

3.78. Printing statistics.

=== b15 ===

   Number of wires:                791
   Number of wire bits:          10191
   Number of public wires:          50
   Number of public wire bits:     453
   Number of memories:               0
   Number of memory bits:            0
   Number of processes:              0
   Number of cells:                853
     $adff                           2
     $adffe                         46
     $alu                           42
     $and                           22
     $eq                            22
     $logic_not                      1
     $mux                          526
     $ne                            67
     $not                           20
     $or                            10
     $pmux                          17
     $reduce_and                    44
     $reduce_bool                    4
     $reduce_or                     26
     $shl                            4


yosys> memory -nomap

3.79. Executing MEMORY pass.

yosys> opt_mem

3.79.1. Executing OPT_MEM pass (optimize memories).
Performed a total of 0 transformations.

yosys> opt_mem_priority

3.79.2. Executing OPT_MEM_PRIORITY pass (removing unnecessary memory write priority relations).
Performed a total of 0 transformations.

yosys> opt_mem_feedback

3.79.3. Executing OPT_MEM_FEEDBACK pass (finding memory read-to-write feedback paths).

yosys> memory_bmux2rom

3.79.4. Executing MEMORY_BMUX2ROM pass (converting muxes to ROMs).

yosys> memory_dff

3.79.5. Executing MEMORY_DFF pass (merging $dff cells to $memrd).

yosys> opt_clean

3.79.6. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \b15..

yosys> memory_share

3.79.7. Executing MEMORY_SHARE pass (consolidating $memrd/$memwr cells).

yosys> opt_mem_widen

3.79.8. Executing OPT_MEM_WIDEN pass (optimize memories where all ports are wide).
Performed a total of 0 transformations.

yosys> opt_clean

3.79.9. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \b15..

yosys> memory_collect

3.79.10. Executing MEMORY_COLLECT pass (generating $mem cells).

yosys> stat

3.80. Printing statistics.

=== b15 ===

   Number of wires:                791
   Number of wire bits:          10191
   Number of public wires:          50
   Number of public wire bits:     453
   Number of memories:               0
   Number of memory bits:            0
   Number of processes:              0
   Number of cells:                853
     $adff                           2
     $adffe                         46
     $alu                           42
     $and                           22
     $eq                            22
     $logic_not                      1
     $mux                          526
     $ne                            67
     $not                           20
     $or                            10
     $pmux                          17
     $reduce_and                    44
     $reduce_bool                    4
     $reduce_or                     26
     $shl                            4


yosys> muxpack

3.81. Executing MUXPACK pass ($mux cell cascades to $pmux).
Converted 0 (p)mux cells into 0 pmux cells.
<suppressed ~440 debug messages>

yosys> opt_clean

3.82. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \b15..

yosys> pmuxtree

3.83. Executing PMUXTREE pass.

yosys> muxpack

3.84. Executing MUXPACK pass ($mux cell cascades to $pmux).
Converting b15.$auto$pmuxtree.cc:65:recursive_mux_generator$3091 ... b15.$auto$pmuxtree.cc:65:recursive_mux_generator$3093 to a pmux with 2 cases.
Converting b15.$auto$pmuxtree.cc:65:recursive_mux_generator$3065 ... b15.$auto$pmuxtree.cc:65:recursive_mux_generator$3067 to a pmux with 2 cases.
Converting b15.$auto$pmuxtree.cc:65:recursive_mux_generator$2943 ... b15.$auto$pmuxtree.cc:65:recursive_mux_generator$2945 to a pmux with 2 cases.
Converting b15.$auto$pmuxtree.cc:65:recursive_mux_generator$2929 ... b15.$auto$pmuxtree.cc:65:recursive_mux_generator$2931 to a pmux with 2 cases.
Converted 8 (p)mux cells into 4 pmux cells.
<suppressed ~492 debug messages>

yosys> memory_map

3.85. Executing MEMORY_MAP pass (converting memories to logic and flip-flops).

yosys> stat

3.86. Printing statistics.

=== b15 ===

   Number of wires:                908
   Number of wire bits:          11203
   Number of public wires:          50
   Number of public wire bits:     453
   Number of memories:               0
   Number of memory bits:            0
   Number of processes:              0
   Number of cells:                949
     $adff                           2
     $adffe                         46
     $alu                           42
     $and                           22
     $eq                            22
     $logic_not                      1
     $mux                          582
     $ne                            67
     $not                           37
     $or                            26
     $pmux                           4
     $reduce_and                    44
     $reduce_bool                    4
     $reduce_or                     46
     $shl                            4


yosys> techmap -map +/techmap.v -map +/rapidsilicon/genesis/arith_map.v

3.87. Executing TECHMAP pass (map to technology primitives).

3.87.1. Executing Verilog-2005 frontend: /nfs_scratch/scratch/Vorak/aram/Workspace/Raptor/yosys_verific_rs/yosys/install/bin/../share/yosys/techmap.v
Parsing Verilog input from `/nfs_scratch/scratch/Vorak/aram/Workspace/Raptor/yosys_verific_rs/yosys/install/bin/../share/yosys/techmap.v' to AST representation.
Generating RTLIL representation for module `\_90_simplemap_bool_ops'.
Generating RTLIL representation for module `\_90_simplemap_reduce_ops'.
Generating RTLIL representation for module `\_90_simplemap_logic_ops'.
Generating RTLIL representation for module `\_90_simplemap_compare_ops'.
Generating RTLIL representation for module `\_90_simplemap_various'.
Generating RTLIL representation for module `\_90_simplemap_registers'.
Generating RTLIL representation for module `\_90_shift_ops_shr_shl_sshl_sshr'.
Generating RTLIL representation for module `\_90_shift_shiftx'.
Generating RTLIL representation for module `\_90_fa'.
Generating RTLIL representation for module `\_90_lcu'.
Generating RTLIL representation for module `\_90_alu'.
Generating RTLIL representation for module `\_90_macc'.
Generating RTLIL representation for module `\_90_alumacc'.
Generating RTLIL representation for module `\$__div_mod_u'.
Generating RTLIL representation for module `\$__div_mod_trunc'.
Generating RTLIL representation for module `\_90_div'.
Generating RTLIL representation for module `\_90_mod'.
Generating RTLIL representation for module `\$__div_mod_floor'.
Generating RTLIL representation for module `\_90_divfloor'.
Generating RTLIL representation for module `\_90_modfloor'.
Generating RTLIL representation for module `\_90_pow'.
Generating RTLIL representation for module `\_90_pmux'.
Generating RTLIL representation for module `\_90_demux'.
Generating RTLIL representation for module `\_90_lut'.
Successfully finished Verilog frontend.

3.87.2. Executing Verilog-2005 frontend: /nfs_scratch/scratch/Vorak/aram/Workspace/Raptor/yosys_verific_rs/yosys/install/bin/../share/yosys/rapidsilicon/genesis/arith_map.v
Parsing Verilog input from `/nfs_scratch/scratch/Vorak/aram/Workspace/Raptor/yosys_verific_rs/yosys/install/bin/../share/yosys/rapidsilicon/genesis/arith_map.v' to AST representation.
Generating RTLIL representation for module `\_80_rs_alu'.
Successfully finished Verilog frontend.

3.87.3. Continuing TECHMAP pass.
Using extmapper simplemap for cells of type $reduce_or.
Using extmapper simplemap for cells of type $reduce_and.
Using extmapper simplemap for cells of type $ne.
Using extmapper simplemap for cells of type $mux.
Using template $paramod$c5c783b17ab1d780abfad8cfe6563a0a7b47a3b0\_90_pmux for cells of type $pmux.
Using extmapper simplemap for cells of type $or.
Using extmapper simplemap for cells of type $not.
Using extmapper simplemap for cells of type $reduce_bool.
Using template $paramod$740b056ede97228d3eae64ea2fdc81f0a33e0fe7\_90_alu for cells of type $alu.
Using extmapper simplemap for cells of type $adffe.
Using extmapper simplemap for cells of type $and.
Using template $paramod$44a13d10af618e7fbe7b9aad2f6151ffcee1e2fa\_90_alu for cells of type $alu.
Using template $paramod$32a7b7b86c07519b7537abc18e96f0331f97914d\_90_alu for cells of type $alu.
Using extmapper simplemap for cells of type $adff.
Using template $paramod$constmap:0c58e37f7f9ab9c08bb604a660a738f4cdfdf6a8$paramod$0c53878c2ab6a84f047b5c15f705bf752551700e\_90_shift_ops_shr_shl_sshl_sshr for cells of type $shl.
Using template $paramod$c3cd1564c35d873179656addd6052d7ea8b6d991\_90_alu for cells of type $alu.
Using template $paramod$354e377aaa263356a1a43d04ca847f8b92483a2a\_80_rs_alu for cells of type $alu.
Using template $paramod$788c3d57e5abb3a3f89aea6d4acd665be37f4e9b\_90_alu for cells of type $alu.
Using template $paramod$6a42b6fefed750f8a1c58eab59479d960557103c\_90_alu for cells of type $alu.
Using template $paramod$d1615bf4e5e328245ffd1550e5fe105901cda77b\_90_alu for cells of type $alu.
Using template $paramod$943564b9366bbc392bf4bbc801aa0a2d7742a4e0\_90_alu for cells of type $alu.
Using template $paramod$4ccbe221165818e15f326ddee3d1183c7924e12f\_90_alu for cells of type $alu.
Using template $paramod$e891e6b399cf52748460a311fafe476815d24bd7\_90_alu for cells of type $alu.
Using template $paramod$b85fbb3374a1d9ba7ee4f4d6323c30f939df3ada\_90_alu for cells of type $alu.
Using template $paramod$e04283ca12514baf3d204c6994bec8f178dd89f8\_90_alu for cells of type $alu.
Using template $paramod$79fc87901d7fd8aaad689b5406671422f5fa25b9\_80_rs_alu for cells of type $alu.
Using template $paramod$653d0dc5a667330298513325d0bd1def0e6c1128\_90_alu for cells of type $alu.
Using template $paramod$2c4d537db249d5ee7774cabca037a7502075cb7a\_80_rs_alu for cells of type $alu.
Using template $paramod$076c9a7a3f037230073fe14dd4865d470cb48917\_90_alu for cells of type $alu.
Using template $paramod$dfca81329cbbac01700318224209a5f2318c7128\_90_alu for cells of type $alu.
Using template $paramod$175e67c02b86e96b1288b9dc100122520d7240d8\_90_alu for cells of type $alu.
Using template $paramod$f85408ed1aa3d09e465edae8a7bf590332ae9f7b\_90_alu for cells of type $alu.
Using template $paramod$bfceb922395790c0ce92e9f9b5b428d4fc72cc30\_90_alu for cells of type $alu.
Using template $paramod$1a3a0c35c4a4896fbfd612699525c057298e72d2\_90_alu for cells of type $alu.
Using extmapper simplemap for cells of type $eq.
Using template $paramod$b3c20b05d9b1fc2c940ef2f6c917486aead042e8\_90_alu for cells of type $alu.
Using template $paramod$83dd457849c736323edf2edb15923eb27f99c683\_90_alu for cells of type $alu.
Using template $paramod$63a3f1ffa662be02d3403b533885c56d18ebe02a\_80_rs_alu for cells of type $alu.
Using extmapper simplemap for cells of type $logic_not.
Using template $paramod$8fabc56b80a569262acfc42757a02ca0b8e91278\_90_pmux for cells of type $pmux.
Using template $paramod$f08cf4b531f7b2bd95251b79857dfb970a6679fc\_90_pmux for cells of type $pmux.
Using extmapper simplemap for cells of type $xor.
Using template $paramod\_90_lcu\WIDTH=32'00000000000000000000000000000100 for cells of type $lcu.
Using extmapper simplemap for cells of type $pos.
Using template $paramod\_90_lcu\WIDTH=32'00000000000000000000000000011110 for cells of type $lcu.
Using template $paramod\_90_lcu\WIDTH=32'00000000000000000000000000001000 for cells of type $lcu.
Using template $paramod\_90_lcu\WIDTH=32'00000000000000000000000000011111 for cells of type $lcu.
Using template $paramod\_90_lcu\WIDTH=32'00000000000000000000000000100000 for cells of type $lcu.
Using template $paramod\_90_lcu\WIDTH=32'00000000000000000000000000000010 for cells of type $lcu.
Using template $paramod\_90_lcu\WIDTH=32'00000000000000000000000000000101 for cells of type $lcu.
Using template $paramod\_90_lcu\WIDTH=32'00000000000000000000000000001001 for cells of type $lcu.
Using template $paramod\_90_lcu\WIDTH=32'00000000000000000000000000000110 for cells of type $lcu.
Using template $paramod\_90_lcu\WIDTH=32'00000000000000000000000000000011 for cells of type $lcu.
No more expansions possible.
<suppressed ~6672 debug messages>

yosys> stat

3.88. Printing statistics.

=== b15 ===

   Number of wires:               4104
   Number of wire bits:          73455
   Number of public wires:          50
   Number of public wire bits:     453
   Number of memories:               0
   Number of memory bits:            0
   Number of processes:              0
   Number of cells:              13273
     $_AND_                       1867
     $_DFFE_PP0P_                  407
     $_DFF_PP0_                      7
     $_MUX_                       6935
     $_NOT_                        704
     $_OR_                        1524
     $_XOR_                       1641
     adder_carry                   188


yosys> opt_expr

3.89. Executing OPT_EXPR pass (perform const folding).
Optimizing module b15.
<suppressed ~4038 debug messages>

yosys> opt_merge -nomux

3.90. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\b15'.
<suppressed ~4644 debug messages>
Removed a total of 1548 cells.

yosys> opt_muxtree

3.91. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \b15..
  Creating internal representation of mux trees.
  No muxes found in this module.
Removed 0 multiplexer ports.

yosys> opt_reduce

3.92. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \b15.
Performed a total of 0 changes.

yosys> opt_merge

3.93. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\b15'.
Removed a total of 0 cells.

yosys> opt_share

3.94. Executing OPT_SHARE pass.

yosys> opt_dff -nosdff -nodffe

3.95. Executing OPT_DFF pass (perform DFF optimizations).

yosys> opt_clean

3.96. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \b15..
Removed 498 unused cells and 3041 unused wires.
<suppressed ~499 debug messages>

yosys> opt_expr

3.97. Executing OPT_EXPR pass (perform const folding).
Optimizing module b15.
<suppressed ~147 debug messages>

yosys> opt_muxtree

3.98. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \b15..
  Creating internal representation of mux trees.
  No muxes found in this module.
Removed 0 multiplexer ports.

yosys> opt_reduce

3.99. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \b15.
Performed a total of 0 changes.

yosys> opt_merge

3.100. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\b15'.
Removed a total of 0 cells.

yosys> opt_share

3.101. Executing OPT_SHARE pass.

yosys> opt_dff -nosdff -nodffe

3.102. Executing OPT_DFF pass (perform DFF optimizations).

yosys> opt_clean

3.103. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \b15..
Removed 1 unused cells and 24 unused wires.
<suppressed ~2 debug messages>

yosys> opt_expr

3.104. Executing OPT_EXPR pass (perform const folding).
Optimizing module b15.

yosys> opt_muxtree

3.105. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \b15..
  Creating internal representation of mux trees.
  No muxes found in this module.
Removed 0 multiplexer ports.

yosys> opt_reduce

3.106. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \b15.
Performed a total of 0 changes.

yosys> opt_merge

3.107. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\b15'.
Removed a total of 0 cells.

yosys> opt_share

3.108. Executing OPT_SHARE pass.

yosys> opt_dff -nosdff -nodffe

3.109. Executing OPT_DFF pass (perform DFF optimizations).

yosys> opt_clean

3.110. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \b15..

yosys> opt_expr

3.111. Executing OPT_EXPR pass (perform const folding).
Optimizing module b15.
MAX OPT ITERATION = 3

yosys> opt_expr -full

3.112. Executing OPT_EXPR pass (perform const folding).
Optimizing module b15.
<suppressed ~3032 debug messages>

yosys> techmap -map +/techmap.v

3.113. Executing TECHMAP pass (map to technology primitives).

3.113.1. Executing Verilog-2005 frontend: /nfs_scratch/scratch/Vorak/aram/Workspace/Raptor/yosys_verific_rs/yosys/install/bin/../share/yosys/techmap.v
Parsing Verilog input from `/nfs_scratch/scratch/Vorak/aram/Workspace/Raptor/yosys_verific_rs/yosys/install/bin/../share/yosys/techmap.v' to AST representation.
Generating RTLIL representation for module `\_90_simplemap_bool_ops'.
Generating RTLIL representation for module `\_90_simplemap_reduce_ops'.
Generating RTLIL representation for module `\_90_simplemap_logic_ops'.
Generating RTLIL representation for module `\_90_simplemap_compare_ops'.
Generating RTLIL representation for module `\_90_simplemap_various'.
Generating RTLIL representation for module `\_90_simplemap_registers'.
Generating RTLIL representation for module `\_90_shift_ops_shr_shl_sshl_sshr'.
Generating RTLIL representation for module `\_90_shift_shiftx'.
Generating RTLIL representation for module `\_90_fa'.
Generating RTLIL representation for module `\_90_lcu'.
Generating RTLIL representation for module `\_90_alu'.
Generating RTLIL representation for module `\_90_macc'.
Generating RTLIL representation for module `\_90_alumacc'.
Generating RTLIL representation for module `\$__div_mod_u'.
Generating RTLIL representation for module `\$__div_mod_trunc'.
Generating RTLIL representation for module `\_90_div'.
Generating RTLIL representation for module `\_90_mod'.
Generating RTLIL representation for module `\$__div_mod_floor'.
Generating RTLIL representation for module `\_90_divfloor'.
Generating RTLIL representation for module `\_90_modfloor'.
Generating RTLIL representation for module `\_90_pow'.
Generating RTLIL representation for module `\_90_pmux'.
Generating RTLIL representation for module `\_90_demux'.
Generating RTLIL representation for module `\_90_lut'.
Successfully finished Verilog frontend.

3.113.2. Continuing TECHMAP pass.
No more expansions possible.
<suppressed ~71 debug messages>

yosys> opt_expr

3.114. Executing OPT_EXPR pass (perform const folding).
Optimizing module b15.

yosys> opt_merge -nomux

3.115. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\b15'.
<suppressed ~36 debug messages>
Removed a total of 12 cells.

yosys> opt_muxtree

3.116. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \b15..
  Creating internal representation of mux trees.
  No muxes found in this module.
Removed 0 multiplexer ports.

yosys> opt_reduce

3.117. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \b15.
Performed a total of 0 changes.

yosys> opt_merge

3.118. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\b15'.
Removed a total of 0 cells.

yosys> opt_dff -nosdff -nodffe -sat

3.119. Executing OPT_DFF pass (perform DFF optimizations).

yosys> opt_clean

3.120. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \b15..
Removed 0 unused cells and 149 unused wires.
<suppressed ~1 debug messages>

yosys> opt_expr

3.121. Executing OPT_EXPR pass (perform const folding).
Optimizing module b15.
MAX OPT ITERATION = 1

yosys> abc -dff

3.122. Executing ABC pass (technology mapping using ABC).

3.122.1. Summary of detected clock domains:
  14 cells in clk=\CLOCK, en=$auto$opt_dff.cc:219:make_patterns_logic$2049, arst=\RESET, srst={ }
  7 cells in clk=\CLOCK, en=$auto$opt_dff.cc:219:make_patterns_logic$2004, arst=\RESET, srst={ }
  425 cells in clk=\CLOCK, en=$auto$opt_dff.cc:219:make_patterns_logic$2568, arst=\RESET, srst={ }
  59 cells in clk=\CLOCK, en=$auto$opt_dff.cc:219:make_patterns_logic$2589, arst=\RESET, srst={ }
  21 cells in clk=\CLOCK, en=$auto$opt_dff.cc:194:make_patterns_logic$2640, arst=\RESET, srst={ }
  90 cells in clk=\CLOCK, en=$auto$opt_dff.cc:219:make_patterns_logic$2068, arst=\RESET, srst={ }
  128 cells in clk=\CLOCK, en=$auto$opt_dff.cc:219:make_patterns_logic$2110, arst=\RESET, srst={ }
  12 cells in clk=\CLOCK, en=$auto$opt_dff.cc:219:make_patterns_logic$2525, arst=\RESET, srst={ }
  45 cells in clk=\CLOCK, en=$auto$opt_dff.cc:219:make_patterns_logic$2168, arst=\RESET, srst={ }
  50 cells in clk=\CLOCK, en=$auto$opt_dff.cc:219:make_patterns_logic$2151, arst=\RESET, srst={ }
  32 cells in clk=\CLOCK, en=$auto$opt_dff.cc:219:make_patterns_logic$2478, arst=\RESET, srst={ }
  45 cells in clk=\CLOCK, en=$auto$opt_dff.cc:219:make_patterns_logic$2321, arst=\RESET, srst={ }
  29 cells in clk=\CLOCK, en=$auto$opt_dff.cc:219:make_patterns_logic$2338, arst=\RESET, srst={ }
  45 cells in clk=\CLOCK, en=$auto$opt_dff.cc:219:make_patterns_logic$2355, arst=\RESET, srst={ }
  29 cells in clk=\CLOCK, en=$auto$opt_dff.cc:219:make_patterns_logic$2372, arst=\RESET, srst={ }
  45 cells in clk=\CLOCK, en=$auto$opt_dff.cc:219:make_patterns_logic$2389, arst=\RESET, srst={ }
  29 cells in clk=\CLOCK, en=$auto$opt_dff.cc:219:make_patterns_logic$2406, arst=\RESET, srst={ }
  65 cells in clk=\CLOCK, en=$auto$opt_dff.cc:219:make_patterns_logic$2423, arst=\RESET, srst={ }
  29 cells in clk=\CLOCK, en=$auto$opt_dff.cc:219:make_patterns_logic$2185, arst=\RESET, srst={ }
  45 cells in clk=\CLOCK, en=$auto$opt_dff.cc:219:make_patterns_logic$2202, arst=\RESET, srst={ }
  29 cells in clk=\CLOCK, en=$auto$opt_dff.cc:219:make_patterns_logic$2219, arst=\RESET, srst={ }
  45 cells in clk=\CLOCK, en=$auto$opt_dff.cc:219:make_patterns_logic$2236, arst=\RESET, srst={ }
  29 cells in clk=\CLOCK, en=$auto$opt_dff.cc:219:make_patterns_logic$2253, arst=\RESET, srst={ }
  45 cells in clk=\CLOCK, en=$auto$opt_dff.cc:219:make_patterns_logic$2270, arst=\RESET, srst={ }
  29 cells in clk=\CLOCK, en=$auto$opt_dff.cc:219:make_patterns_logic$2287, arst=\RESET, srst={ }
  29 cells in clk=\CLOCK, en=$auto$opt_dff.cc:219:make_patterns_logic$2304, arst=\RESET, srst={ }
  192 cells in clk=\CLOCK, en=$auto$opt_dff.cc:219:make_patterns_logic$1985, arst=\RESET, srst={ }
  221 cells in clk=\CLOCK, en=$auto$opt_dff.cc:219:make_patterns_logic$2451, arst=\RESET, srst={ }
  4 cells in clk=\CLOCK, en=$auto$opt_dff.cc:219:make_patterns_logic$2620, arst=\RESET, srst={ }
  30 cells in clk=\CLOCK, en=$auto$opt_dff.cc:219:make_patterns_logic$2032, arst=\RESET, srst={ }
  1389 cells in clk=\CLOCK, en={ }, arst=\RESET, srst={ }
  391 cells in clk=\CLOCK, en=$auto$opt_dff.cc:219:make_patterns_logic$2545, arst=\RESET, srst={ }
  13 cells in clk=\CLOCK, en=$auto$opt_dff.cc:219:make_patterns_logic$2637, arst=\RESET, srst={ }
  712 cells in clk=\CLOCK, en=$auto$opt_dff.cc:219:make_patterns_logic$2015, arst=\RESET, srst={ }
  3 cells in clk=\CLOCK, en=$auto$opt_dff.cc:194:make_patterns_logic$2650, arst=\RESET, srst={ }
  33 cells in clk=\CLOCK, en=$auto$opt_dff.cc:219:make_patterns_logic$2656, arst=\RESET, srst={ }
  196 cells in clk=\CLOCK, en=$auto$opt_dff.cc:219:make_patterns_logic$2146, arst=\RESET, srst={ }
  14 cells in clk=\CLOCK, en=$auto$opt_dff.cc:219:make_patterns_logic$2129, arst=\RESET, srst={ }
  72 cells in clk=\CLOCK, en=$auto$opt_dff.cc:219:make_patterns_logic$2440, arst=\RESET, srst={ }
  414 cells in clk=\CLOCK, en=$auto$opt_dff.cc:219:make_patterns_logic$2503, arst=\RESET, srst={ }
  15 cells in clk=\CLOCK, en=$auto$opt_dff.cc:219:make_patterns_logic$1962, arst=\RESET, srst={ }
  51 cells in clk=\CLOCK, en=$auto$opt_dff.cc:219:make_patterns_logic$1998, arst=\RESET, srst={ }

3.122.2. Extracting gate netlist of module `\b15' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \CLOCK, enabled by $auto$opt_dff.cc:219:make_patterns_logic$2049, asynchronously reset by \RESET
Extracted 14 gates and 30 wires to a netlist network with 14 inputs and 6 outputs.

3.122.2.1. Executing ABC.

3.122.3. Extracting gate netlist of module `\b15' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \CLOCK, enabled by $auto$opt_dff.cc:219:make_patterns_logic$2004, asynchronously reset by \RESET
Extracted 7 gates and 15 wires to a netlist network with 8 inputs and 7 outputs.

3.122.3.1. Executing ABC.

3.122.4. Extracting gate netlist of module `\b15' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \CLOCK, enabled by $auto$opt_dff.cc:219:make_patterns_logic$2568, asynchronously reset by \RESET
Extracted 425 gates and 534 wires to a netlist network with 108 inputs and 102 outputs.

3.122.4.1. Executing ABC.

3.122.5. Extracting gate netlist of module `\b15' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \CLOCK, enabled by $auto$opt_dff.cc:219:make_patterns_logic$2589, asynchronously reset by \RESET
Extracted 59 gates and 118 wires to a netlist network with 59 inputs and 33 outputs.

3.122.5.1. Executing ABC.

3.122.6. Extracting gate netlist of module `\b15' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \CLOCK, enabled by $auto$opt_dff.cc:194:make_patterns_logic$2640, asynchronously reset by \RESET
Extracted 21 gates and 33 wires to a netlist network with 11 inputs and 5 outputs.

3.122.6.1. Executing ABC.

3.122.7. Extracting gate netlist of module `\b15' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \CLOCK, enabled by $auto$opt_dff.cc:219:make_patterns_logic$2068, asynchronously reset by \RESET
Extracted 90 gates and 168 wires to a netlist network with 77 inputs and 35 outputs.

3.122.7.1. Executing ABC.

3.122.8. Extracting gate netlist of module `\b15' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \CLOCK, enabled by $auto$opt_dff.cc:219:make_patterns_logic$2110, asynchronously reset by \RESET
Extracted 122 gates and 212 wires to a netlist network with 89 inputs and 16 outputs.

3.122.8.1. Executing ABC.

3.122.9. Extracting gate netlist of module `\b15' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \CLOCK, enabled by $auto$opt_dff.cc:219:make_patterns_logic$2525, asynchronously reset by \RESET
Extracted 12 gates and 23 wires to a netlist network with 9 inputs and 4 outputs.

3.122.9.1. Executing ABC.

3.122.10. Extracting gate netlist of module `\b15' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \CLOCK, enabled by $auto$opt_dff.cc:219:make_patterns_logic$2168, asynchronously reset by \RESET
Extracted 45 gates and 85 wires to a netlist network with 40 inputs and 25 outputs.

3.122.10.1. Executing ABC.

3.122.11. Extracting gate netlist of module `\b15' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \CLOCK, enabled by $auto$opt_dff.cc:219:make_patterns_logic$2151, asynchronously reset by \RESET
Extracted 50 gates and 82 wires to a netlist network with 30 inputs and 16 outputs.

3.122.11.1. Executing ABC.

3.122.12. Extracting gate netlist of module `\b15' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \CLOCK, enabled by $auto$opt_dff.cc:219:make_patterns_logic$2478, asynchronously reset by \RESET
Extracted 32 gates and 62 wires to a netlist network with 29 inputs and 12 outputs.

3.122.12.1. Executing ABC.

3.122.13. Extracting gate netlist of module `\b15' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \CLOCK, enabled by $auto$opt_dff.cc:219:make_patterns_logic$2321, asynchronously reset by \RESET
Extracted 45 gates and 85 wires to a netlist network with 40 inputs and 25 outputs.

3.122.13.1. Executing ABC.

3.122.14. Extracting gate netlist of module `\b15' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \CLOCK, enabled by $auto$opt_dff.cc:219:make_patterns_logic$2338, asynchronously reset by \RESET
Extracted 29 gates and 60 wires to a netlist network with 31 inputs and 17 outputs.

3.122.14.1. Executing ABC.

3.122.15. Extracting gate netlist of module `\b15' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \CLOCK, enabled by $auto$opt_dff.cc:219:make_patterns_logic$2355, asynchronously reset by \RESET
Extracted 45 gates and 85 wires to a netlist network with 40 inputs and 25 outputs.

3.122.15.1. Executing ABC.

3.122.16. Extracting gate netlist of module `\b15' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \CLOCK, enabled by $auto$opt_dff.cc:219:make_patterns_logic$2372, asynchronously reset by \RESET
Extracted 29 gates and 60 wires to a netlist network with 31 inputs and 17 outputs.

3.122.16.1. Executing ABC.

3.122.17. Extracting gate netlist of module `\b15' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \CLOCK, enabled by $auto$opt_dff.cc:219:make_patterns_logic$2389, asynchronously reset by \RESET
Extracted 45 gates and 85 wires to a netlist network with 40 inputs and 25 outputs.

3.122.17.1. Executing ABC.

3.122.18. Extracting gate netlist of module `\b15' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \CLOCK, enabled by $auto$opt_dff.cc:219:make_patterns_logic$2406, asynchronously reset by \RESET
Extracted 29 gates and 60 wires to a netlist network with 31 inputs and 17 outputs.

3.122.18.1. Executing ABC.

3.122.19. Extracting gate netlist of module `\b15' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \CLOCK, enabled by $auto$opt_dff.cc:219:make_patterns_logic$2423, asynchronously reset by \RESET
Extracted 65 gates and 107 wires to a netlist network with 41 inputs and 43 outputs.

3.122.19.1. Executing ABC.

3.122.20. Extracting gate netlist of module `\b15' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \CLOCK, enabled by $auto$opt_dff.cc:219:make_patterns_logic$2185, asynchronously reset by \RESET
Extracted 29 gates and 60 wires to a netlist network with 31 inputs and 17 outputs.

3.122.20.1. Executing ABC.

3.122.21. Extracting gate netlist of module `\b15' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \CLOCK, enabled by $auto$opt_dff.cc:219:make_patterns_logic$2202, asynchronously reset by \RESET
Extracted 45 gates and 85 wires to a netlist network with 40 inputs and 25 outputs.

3.122.21.1. Executing ABC.

3.122.22. Extracting gate netlist of module `\b15' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \CLOCK, enabled by $auto$opt_dff.cc:219:make_patterns_logic$2219, asynchronously reset by \RESET
Extracted 29 gates and 60 wires to a netlist network with 31 inputs and 17 outputs.

3.122.22.1. Executing ABC.

3.122.23. Extracting gate netlist of module `\b15' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \CLOCK, enabled by $auto$opt_dff.cc:219:make_patterns_logic$2236, asynchronously reset by \RESET
Extracted 45 gates and 85 wires to a netlist network with 40 inputs and 25 outputs.

3.122.23.1. Executing ABC.

3.122.24. Extracting gate netlist of module `\b15' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \CLOCK, enabled by $auto$opt_dff.cc:219:make_patterns_logic$2253, asynchronously reset by \RESET
Extracted 29 gates and 60 wires to a netlist network with 31 inputs and 17 outputs.

3.122.24.1. Executing ABC.

3.122.25. Extracting gate netlist of module `\b15' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \CLOCK, enabled by $auto$opt_dff.cc:219:make_patterns_logic$2270, asynchronously reset by \RESET
Extracted 45 gates and 85 wires to a netlist network with 40 inputs and 25 outputs.

3.122.25.1. Executing ABC.

3.122.26. Extracting gate netlist of module `\b15' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \CLOCK, enabled by $auto$opt_dff.cc:219:make_patterns_logic$2287, asynchronously reset by \RESET
Extracted 29 gates and 60 wires to a netlist network with 31 inputs and 17 outputs.

3.122.26.1. Executing ABC.

3.122.27. Extracting gate netlist of module `\b15' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \CLOCK, enabled by $auto$opt_dff.cc:219:make_patterns_logic$2304, asynchronously reset by \RESET
Extracted 29 gates and 60 wires to a netlist network with 31 inputs and 17 outputs.

3.122.27.1. Executing ABC.

3.122.28. Extracting gate netlist of module `\b15' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \CLOCK, enabled by $auto$opt_dff.cc:219:make_patterns_logic$1985, asynchronously reset by \RESET
Extracted 136 gates and 188 wires to a netlist network with 50 inputs and 76 outputs.

3.122.28.1. Executing ABC.

3.122.29. Extracting gate netlist of module `\b15' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \CLOCK, enabled by $auto$opt_dff.cc:219:make_patterns_logic$2451, asynchronously reset by \RESET
Extracted 221 gates and 328 wires to a netlist network with 107 inputs and 118 outputs.

3.122.29.1. Executing ABC.

3.122.30. Extracting gate netlist of module `\b15' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \CLOCK, enabled by $auto$opt_dff.cc:219:make_patterns_logic$2620, asynchronously reset by \RESET
Extracted 4 gates and 10 wires to a netlist network with 6 inputs and 3 outputs.

3.122.30.1. Executing ABC.

3.122.31. Extracting gate netlist of module `\b15' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \CLOCK, enabled by $auto$opt_dff.cc:219:make_patterns_logic$2032, asynchronously reset by \RESET
Extracted 30 gates and 50 wires to a netlist network with 19 inputs and 18 outputs.

3.122.31.1. Executing ABC.

3.122.32. Extracting gate netlist of module `\b15' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \CLOCK, asynchronously reset by \RESET
Extracted 1266 gates and 2188 wires to a netlist network with 920 inputs and 404 outputs.

3.122.32.1. Executing ABC.

3.122.33. Extracting gate netlist of module `\b15' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \CLOCK, enabled by $auto$opt_dff.cc:219:make_patterns_logic$2545, asynchronously reset by \RESET
Extracted 391 gates and 574 wires to a netlist network with 182 inputs and 91 outputs.

3.122.33.1. Executing ABC.

3.122.34. Extracting gate netlist of module `\b15' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \CLOCK, enabled by $auto$opt_dff.cc:219:make_patterns_logic$2637, asynchronously reset by \RESET
Extracted 13 gates and 25 wires to a netlist network with 12 inputs and 4 outputs.

3.122.34.1. Executing ABC.

3.122.35. Extracting gate netlist of module `\b15' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \CLOCK, enabled by $auto$opt_dff.cc:219:make_patterns_logic$2015, asynchronously reset by \RESET
Extracted 712 gates and 959 wires to a netlist network with 246 inputs and 304 outputs.

3.122.35.1. Executing ABC.

3.122.36. Extracting gate netlist of module `\b15' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \CLOCK, enabled by $auto$opt_dff.cc:194:make_patterns_logic$2650, asynchronously reset by \RESET
Extracted 3 gates and 7 wires to a netlist network with 4 inputs and 3 outputs.

3.122.36.1. Executing ABC.

3.122.37. Extracting gate netlist of module `\b15' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \CLOCK, enabled by $auto$opt_dff.cc:219:make_patterns_logic$2656, asynchronously reset by \RESET
Extracted 33 gates and 67 wires to a netlist network with 34 inputs and 31 outputs.

3.122.37.1. Executing ABC.

3.122.38. Extracting gate netlist of module `\b15' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \CLOCK, enabled by $auto$opt_dff.cc:219:make_patterns_logic$2146, asynchronously reset by \RESET
Extracted 196 gates and 234 wires to a netlist network with 38 inputs and 93 outputs.

3.122.38.1. Executing ABC.

3.122.39. Extracting gate netlist of module `\b15' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \CLOCK, enabled by $auto$opt_dff.cc:219:make_patterns_logic$2129, asynchronously reset by \RESET
Extracted 11 gates and 21 wires to a netlist network with 10 inputs and 5 outputs.

3.122.39.1. Executing ABC.

3.122.40. Extracting gate netlist of module `\b15' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \CLOCK, enabled by $auto$opt_dff.cc:219:make_patterns_logic$2440, asynchronously reset by \RESET
Extracted 72 gates and 93 wires to a netlist network with 20 inputs and 50 outputs.

3.122.40.1. Executing ABC.

3.122.41. Extracting gate netlist of module `\b15' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \CLOCK, enabled by $auto$opt_dff.cc:219:make_patterns_logic$2503, asynchronously reset by \RESET
Extracted 414 gates and 461 wires to a netlist network with 47 inputs and 126 outputs.

3.122.41.1. Executing ABC.

3.122.42. Extracting gate netlist of module `\b15' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \CLOCK, enabled by $auto$opt_dff.cc:219:make_patterns_logic$1962, asynchronously reset by \RESET
Extracted 15 gates and 30 wires to a netlist network with 15 inputs and 5 outputs.

3.122.42.1. Executing ABC.

3.122.43. Extracting gate netlist of module `\b15' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \CLOCK, enabled by $auto$opt_dff.cc:219:make_patterns_logic$1998, asynchronously reset by \RESET
Extracted 51 gates and 85 wires to a netlist network with 33 inputs and 24 outputs.

3.122.43.1. Executing ABC.

yosys> abc -dff

3.123. Executing ABC pass (technology mapping using ABC).

3.123.1. Summary of detected clock domains:
  31 cells in clk=\CLOCK, en=$abc$20613$auto$opt_dff.cc:219:make_patterns_logic$2253, arst=\RESET, srst={ }
  37 cells in clk=\CLOCK, en=$abc$20651$auto$opt_dff.cc:219:make_patterns_logic$2270, arst=\RESET, srst={ }
  21 cells in clk=\CLOCK, en=$abc$20697$auto$opt_dff.cc:219:make_patterns_logic$2287, arst=\RESET, srst={ }
  50 cells in clk=\CLOCK, en=$abc$25152$auto$opt_dff.cc:219:make_patterns_logic$1962, arst=\RESET, srst={ }
  13 cells in clk=\CLOCK, en=$abc$19127$auto$opt_dff.cc:219:make_patterns_logic$2049, arst=\RESET, srst={ }
  5 cells in clk=\CLOCK, en=$abc$24432$auto$opt_dff.cc:194:make_patterns_logic$2650, arst=\RESET, srst={ }
  12 cells in clk=\CLOCK, en=$abc$23331$auto$opt_dff.cc:219:make_patterns_logic$2637, arst=\RESET, srst={ }
  7 cells in clk=\CLOCK, en=$abc$19142$auto$opt_dff.cc:219:make_patterns_logic$2004, arst=\RESET, srst={ }
  468 cells in clk=\CLOCK, en=$abc$19162$auto$opt_dff.cc:219:make_patterns_logic$2568, arst=\RESET, srst={ }
  8 cells in clk=\CLOCK, en=$abc$19988$auto$opt_dff.cc:219:make_patterns_logic$2525, arst=\RESET, srst={ }
  38 cells in clk=\CLOCK, en=$abc$24755$auto$opt_dff.cc:219:make_patterns_logic$2129, arst=\RESET, srst={ }
  38 cells in clk=\CLOCK, en=$abc$20047$auto$opt_dff.cc:219:make_patterns_logic$2151, arst=\RESET, srst={ }
  31 cells in clk=\CLOCK, en=$abc$20001$auto$opt_dff.cc:219:make_patterns_logic$2168, arst=\RESET, srst={ }
  816 cells in clk=\CLOCK, en=$abc$23345$auto$opt_dff.cc:219:make_patterns_logic$2015, arst=\RESET, srst={ }
  41 cells in clk=\CLOCK, en=$abc$20377$auto$opt_dff.cc:219:make_patterns_logic$2423, arst=\RESET, srst={ }
  526 cells in clk=\CLOCK, en=$abc$24532$auto$opt_dff.cc:219:make_patterns_logic$2146, arst=\RESET, srst={ }
  374 cells in clk=\CLOCK, en=$abc$22972$auto$opt_dff.cc:219:make_patterns_logic$2545, arst=\RESET, srst={ }
  27 cells in clk=\CLOCK, en=$abc$20445$auto$opt_dff.cc:219:make_patterns_logic$2185, arst=\RESET, srst={ }
  39 cells in clk=\CLOCK, en=$abc$24438$auto$opt_dff.cc:219:make_patterns_logic$2656, arst=\RESET, srst={ }
  109 cells in clk=\CLOCK, en=$abc$24768$auto$opt_dff.cc:219:make_patterns_logic$2440, arst=\RESET, srst={ }
  222 cells in clk=\CLOCK, en=$abc$20950$auto$opt_dff.cc:219:make_patterns_logic$2451, arst=\RESET, srst={ }
  25 cells in clk=\CLOCK, en=$abc$20125$auto$opt_dff.cc:219:make_patterns_logic$2321, arst=\RESET, srst={ }
  25 cells in clk=\CLOCK, en=$abc$20339$auto$opt_dff.cc:219:make_patterns_logic$2406, arst=\RESET, srst={ }
  31 cells in clk=\CLOCK, en=$abc$20091$auto$opt_dff.cc:219:make_patterns_logic$2478, arst=\RESET, srst={ }
  92 cells in clk=\CLOCK, en=$abc$19881$auto$opt_dff.cc:219:make_patterns_logic$2110, arst=\RESET, srst={ }
  16 cells in clk=\CLOCK, en=$abc$19720$auto$opt_dff.cc:194:make_patterns_logic$2640, arst=\RESET, srst={ }
  21 cells in clk=\CLOCK, en=$abc$20293$auto$opt_dff.cc:219:make_patterns_logic$2389, arst=\RESET, srst={ }
  21 cells in clk=\CLOCK, en=$abc$20255$auto$opt_dff.cc:219:make_patterns_logic$2372, arst=\RESET, srst={ }
  21 cells in clk=\CLOCK, en=$abc$20209$auto$opt_dff.cc:219:make_patterns_logic$2355, arst=\RESET, srst={ }
  22 cells in clk=\CLOCK, en=$abc$20171$auto$opt_dff.cc:219:make_patterns_logic$2338, arst=\RESET, srst={ }
  2 cells in clk=\CLOCK, en=$abc$21202$auto$opt_dff.cc:219:make_patterns_logic$2620, arst=\RESET, srst={ }
  35 cells in clk=\CLOCK, en=$abc$21208$auto$opt_dff.cc:219:make_patterns_logic$2032, arst=\RESET, srst={ }
  31 cells in clk=\CLOCK, en=$abc$20483$auto$opt_dff.cc:219:make_patterns_logic$2202, arst=\RESET, srst={ }
  1203 cells in clk=\CLOCK, en={ }, arst=\RESET, srst={ }
  23 cells in clk=\CLOCK, en=$abc$20529$auto$opt_dff.cc:219:make_patterns_logic$2219, arst=\RESET, srst={ }
  27 cells in clk=\CLOCK, en=$abc$20567$auto$opt_dff.cc:219:make_patterns_logic$2236, arst=\RESET, srst={ }
  27 cells in clk=\CLOCK, en=$abc$20735$auto$opt_dff.cc:219:make_patterns_logic$2304, arst=\RESET, srst={ }
  669 cells in clk=\CLOCK, en=$abc$20773$auto$opt_dff.cc:219:make_patterns_logic$1985, arst=\RESET, srst={ }
  74 cells in clk=\CLOCK, en=$abc$19616$auto$opt_dff.cc:219:make_patterns_logic$2589, arst=\RESET, srst={ }
  428 cells in clk=\CLOCK, en=$abc$24842$auto$opt_dff.cc:219:make_patterns_logic$2503, arst=\RESET, srst={ }
  70 cells in clk=\CLOCK, en=$abc$19743$auto$opt_dff.cc:219:make_patterns_logic$2068, arst=\RESET, srst={ }
  36 cells in clk=\CLOCK, en=$abc$25170$auto$opt_dff.cc:219:make_patterns_logic$1998, arst=\RESET, srst={ }

3.123.2. Extracting gate netlist of module `\b15' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \CLOCK, enabled by $abc$20613$auto$opt_dff.cc:219:make_patterns_logic$2253, asynchronously reset by \RESET
Extracted 31 gates and 59 wires to a netlist network with 28 inputs and 22 outputs.

3.123.2.1. Executing ABC.

3.123.3. Extracting gate netlist of module `\b15' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \CLOCK, enabled by $abc$20651$auto$opt_dff.cc:219:make_patterns_logic$2270, asynchronously reset by \RESET
Extracted 37 gates and 68 wires to a netlist network with 31 inputs and 25 outputs.

3.123.3.1. Executing ABC.

3.123.4. Extracting gate netlist of module `\b15' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \CLOCK, enabled by $abc$20697$auto$opt_dff.cc:219:make_patterns_logic$2287, asynchronously reset by \RESET
Extracted 21 gates and 43 wires to a netlist network with 22 inputs and 17 outputs.

3.123.4.1. Executing ABC.

3.123.5. Extracting gate netlist of module `\b15' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \CLOCK, enabled by $abc$25152$auto$opt_dff.cc:219:make_patterns_logic$1962, asynchronously reset by \RESET
Extracted 44 gates and 81 wires to a netlist network with 37 inputs and 20 outputs.

3.123.5.1. Executing ABC.

3.123.6. Extracting gate netlist of module `\b15' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \CLOCK, enabled by $abc$19127$auto$opt_dff.cc:219:make_patterns_logic$2049, asynchronously reset by \RESET
Extracted 13 gates and 24 wires to a netlist network with 11 inputs and 6 outputs.

3.123.6.1. Executing ABC.

3.123.7. Extracting gate netlist of module `\b15' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \CLOCK, enabled by $abc$24432$auto$opt_dff.cc:194:make_patterns_logic$2650, asynchronously reset by \RESET
Extracted 5 gates and 10 wires to a netlist network with 5 inputs and 3 outputs.

3.123.7.1. Executing ABC.

3.123.8. Extracting gate netlist of module `\b15' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \CLOCK, enabled by $abc$23331$auto$opt_dff.cc:219:make_patterns_logic$2637, asynchronously reset by \RESET
Extracted 12 gates and 24 wires to a netlist network with 12 inputs and 4 outputs.

3.123.8.1. Executing ABC.

3.123.9. Extracting gate netlist of module `\b15' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \CLOCK, enabled by $abc$19142$auto$opt_dff.cc:219:make_patterns_logic$2004, asynchronously reset by \RESET
Extracted 7 gates and 15 wires to a netlist network with 8 inputs and 7 outputs.

3.123.9.1. Executing ABC.

3.123.10. Extracting gate netlist of module `\b15' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \CLOCK, enabled by $abc$19162$auto$opt_dff.cc:219:make_patterns_logic$2568, asynchronously reset by \RESET
Extracted 468 gates and 627 wires to a netlist network with 159 inputs and 100 outputs.

3.123.10.1. Executing ABC.

3.123.11. Extracting gate netlist of module `\b15' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \CLOCK, enabled by $abc$19988$auto$opt_dff.cc:219:make_patterns_logic$2525, asynchronously reset by \RESET
Extracted 8 gates and 16 wires to a netlist network with 8 inputs and 3 outputs.

3.123.11.1. Executing ABC.

3.123.12. Extracting gate netlist of module `\b15' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \CLOCK, enabled by $abc$24755$auto$opt_dff.cc:219:make_patterns_logic$2129, asynchronously reset by \RESET
Extracted 34 gates and 73 wires to a netlist network with 39 inputs and 20 outputs.

3.123.12.1. Executing ABC.

3.123.13. Extracting gate netlist of module `\b15' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \CLOCK, enabled by $abc$20047$auto$opt_dff.cc:219:make_patterns_logic$2151, asynchronously reset by \RESET
Extracted 38 gates and 65 wires to a netlist network with 27 inputs and 12 outputs.

3.123.13.1. Executing ABC.

3.123.14. Extracting gate netlist of module `\b15' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \CLOCK, enabled by $abc$20001$auto$opt_dff.cc:219:make_patterns_logic$2168, asynchronously reset by \RESET
Extracted 31 gates and 59 wires to a netlist network with 28 inputs and 22 outputs.

3.123.14.1. Executing ABC.

3.123.15. Extracting gate netlist of module `\b15' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \CLOCK, enabled by $abc$23345$auto$opt_dff.cc:219:make_patterns_logic$2015, asynchronously reset by \RESET
Extracted 816 gates and 1027 wires to a netlist network with 211 inputs and 313 outputs.

3.123.15.1. Executing ABC.

3.123.16. Extracting gate netlist of module `\b15' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \CLOCK, enabled by $abc$20377$auto$opt_dff.cc:219:make_patterns_logic$2423, asynchronously reset by \RESET
Extracted 41 gates and 74 wires to a netlist network with 33 inputs and 33 outputs.

3.123.16.1. Executing ABC.

3.123.17. Extracting gate netlist of module `\b15' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \CLOCK, enabled by $abc$24532$auto$opt_dff.cc:219:make_patterns_logic$2146, asynchronously reset by \RESET
Extracted 466 gates and 700 wires to a netlist network with 234 inputs and 145 outputs.

3.123.17.1. Executing ABC.

3.123.18. Extracting gate netlist of module `\b15' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \CLOCK, enabled by $abc$22972$auto$opt_dff.cc:219:make_patterns_logic$2545, asynchronously reset by \RESET
Extracted 374 gates and 566 wires to a netlist network with 192 inputs and 95 outputs.

3.123.18.1. Executing ABC.

3.123.19. Extracting gate netlist of module `\b15' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \CLOCK, enabled by $abc$20445$auto$opt_dff.cc:219:make_patterns_logic$2185, asynchronously reset by \RESET
Extracted 27 gates and 53 wires to a netlist network with 26 inputs and 20 outputs.

3.123.19.1. Executing ABC.

3.123.20. Extracting gate netlist of module `\b15' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \CLOCK, enabled by $abc$24438$auto$opt_dff.cc:219:make_patterns_logic$2656, asynchronously reset by \RESET
Extracted 39 gates and 79 wires to a netlist network with 40 inputs and 31 outputs.

3.123.20.1. Executing ABC.

3.123.21. Extracting gate netlist of module `\b15' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \CLOCK, enabled by $abc$24768$auto$opt_dff.cc:219:make_patterns_logic$2440, asynchronously reset by \RESET
Extracted 109 gates and 164 wires to a netlist network with 55 inputs and 51 outputs.

3.123.21.1. Executing ABC.

3.123.22. Extracting gate netlist of module `\b15' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \CLOCK, enabled by $abc$20950$auto$opt_dff.cc:219:make_patterns_logic$2451, asynchronously reset by \RESET
Extracted 222 gates and 359 wires to a netlist network with 137 inputs and 157 outputs.

3.123.22.1. Executing ABC.

3.123.23. Extracting gate netlist of module `\b15' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \CLOCK, enabled by $abc$20125$auto$opt_dff.cc:219:make_patterns_logic$2321, asynchronously reset by \RESET
Extracted 25 gates and 50 wires to a netlist network with 25 inputs and 19 outputs.

3.123.23.1. Executing ABC.

3.123.24. Extracting gate netlist of module `\b15' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \CLOCK, enabled by $abc$20339$auto$opt_dff.cc:219:make_patterns_logic$2406, asynchronously reset by \RESET
Extracted 25 gates and 50 wires to a netlist network with 25 inputs and 19 outputs.

3.123.24.1. Executing ABC.

3.123.25. Extracting gate netlist of module `\b15' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \CLOCK, enabled by $abc$20091$auto$opt_dff.cc:219:make_patterns_logic$2478, asynchronously reset by \RESET
Extracted 31 gates and 55 wires to a netlist network with 24 inputs and 15 outputs.

3.123.25.1. Executing ABC.

3.123.26. Extracting gate netlist of module `\b15' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \CLOCK, enabled by $abc$19881$auto$opt_dff.cc:219:make_patterns_logic$2110, asynchronously reset by \RESET
Extracted 90 gates and 156 wires to a netlist network with 66 inputs and 8 outputs.

3.123.26.1. Executing ABC.

3.123.27. Extracting gate netlist of module `\b15' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \CLOCK, enabled by $abc$19720$auto$opt_dff.cc:194:make_patterns_logic$2640, asynchronously reset by \RESET
Extracted 16 gates and 26 wires to a netlist network with 10 inputs and 6 outputs.

3.123.27.1. Executing ABC.

3.123.28. Extracting gate netlist of module `\b15' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \CLOCK, enabled by $abc$20293$auto$opt_dff.cc:219:make_patterns_logic$2389, asynchronously reset by \RESET
Extracted 21 gates and 43 wires to a netlist network with 22 inputs and 17 outputs.

3.123.28.1. Executing ABC.

3.123.29. Extracting gate netlist of module `\b15' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \CLOCK, enabled by $abc$20255$auto$opt_dff.cc:219:make_patterns_logic$2372, asynchronously reset by \RESET
Extracted 21 gates and 43 wires to a netlist network with 22 inputs and 17 outputs.

3.123.29.1. Executing ABC.

3.123.30. Extracting gate netlist of module `\b15' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \CLOCK, enabled by $abc$20209$auto$opt_dff.cc:219:make_patterns_logic$2355, asynchronously reset by \RESET
Extracted 21 gates and 43 wires to a netlist network with 22 inputs and 17 outputs.

3.123.30.1. Executing ABC.

3.123.31. Extracting gate netlist of module `\b15' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \CLOCK, enabled by $abc$20171$auto$opt_dff.cc:219:make_patterns_logic$2338, asynchronously reset by \RESET
Extracted 22 gates and 45 wires to a netlist network with 23 inputs and 18 outputs.

3.123.31.1. Executing ABC.

3.123.32. Extracting gate netlist of module `\b15' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \CLOCK, enabled by $abc$21202$auto$opt_dff.cc:219:make_patterns_logic$2620, asynchronously reset by \RESET
Extracted 2 gates and 5 wires to a netlist network with 3 inputs and 2 outputs.

3.123.32.1. Executing ABC.

3.123.33. Extracting gate netlist of module `\b15' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \CLOCK, enabled by $abc$21208$auto$opt_dff.cc:219:make_patterns_logic$2032, asynchronously reset by \RESET
Extracted 35 gates and 57 wires to a netlist network with 22 inputs and 15 outputs.

3.123.33.1. Executing ABC.

3.123.34. Extracting gate netlist of module `\b15' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \CLOCK, enabled by $abc$20483$auto$opt_dff.cc:219:make_patterns_logic$2202, asynchronously reset by \RESET
Extracted 31 gates and 59 wires to a netlist network with 28 inputs and 22 outputs.

3.123.34.1. Executing ABC.

3.123.35. Extracting gate netlist of module `\b15' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \CLOCK, asynchronously reset by \RESET
Extracted 1190 gates and 1863 wires to a netlist network with 673 inputs and 381 outputs.

3.123.35.1. Executing ABC.

3.123.36. Extracting gate netlist of module `\b15' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \CLOCK, enabled by $abc$20529$auto$opt_dff.cc:219:make_patterns_logic$2219, asynchronously reset by \RESET
Extracted 23 gates and 47 wires to a netlist network with 24 inputs and 18 outputs.

3.123.36.1. Executing ABC.

3.123.37. Extracting gate netlist of module `\b15' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \CLOCK, enabled by $abc$20567$auto$opt_dff.cc:219:make_patterns_logic$2236, asynchronously reset by \RESET
Extracted 27 gates and 53 wires to a netlist network with 26 inputs and 20 outputs.

3.123.37.1. Executing ABC.

3.123.38. Extracting gate netlist of module `\b15' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \CLOCK, enabled by $abc$20735$auto$opt_dff.cc:219:make_patterns_logic$2304, asynchronously reset by \RESET
Extracted 27 gates and 53 wires to a netlist network with 26 inputs and 20 outputs.

3.123.38.1. Executing ABC.

3.123.39. Extracting gate netlist of module `\b15' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \CLOCK, enabled by $abc$20773$auto$opt_dff.cc:219:make_patterns_logic$1985, asynchronously reset by \RESET
Extracted 576 gates and 841 wires to a netlist network with 265 inputs and 135 outputs.

3.123.39.1. Executing ABC.

3.123.40. Extracting gate netlist of module `\b15' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \CLOCK, enabled by $abc$19616$auto$opt_dff.cc:219:make_patterns_logic$2589, asynchronously reset by \RESET
Extracted 74 gates and 133 wires to a netlist network with 59 inputs and 35 outputs.

3.123.40.1. Executing ABC.

3.123.41. Extracting gate netlist of module `\b15' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \CLOCK, enabled by $abc$24842$auto$opt_dff.cc:219:make_patterns_logic$2503, asynchronously reset by \RESET
Extracted 418 gates and 506 wires to a netlist network with 88 inputs and 135 outputs.

3.123.41.1. Executing ABC.

3.123.42. Extracting gate netlist of module `\b15' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \CLOCK, enabled by $abc$19743$auto$opt_dff.cc:219:make_patterns_logic$2068, asynchronously reset by \RESET
Extracted 70 gates and 130 wires to a netlist network with 60 inputs and 35 outputs.

3.123.42.1. Executing ABC.

3.123.43. Extracting gate netlist of module `\b15' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \CLOCK, enabled by $abc$25170$auto$opt_dff.cc:219:make_patterns_logic$1998, asynchronously reset by \RESET
Extracted 36 gates and 66 wires to a netlist network with 30 inputs and 24 outputs.

3.123.43.1. Executing ABC.

yosys> abc -dff

3.124. Executing ABC pass (technology mapping using ABC).

3.124.1. Summary of detected clock domains:
  79 cells in clk=\CLOCK, en=$abc$25214$abc$20613$auto$opt_dff.cc:219:make_patterns_logic$2253, arst=\RESET, srst={ }
  75 cells in clk=\CLOCK, en=$abc$25257$abc$20651$auto$opt_dff.cc:219:make_patterns_logic$2270, arst=\RESET, srst={ }
  23 cells in clk=\CLOCK, en=$abc$25341$abc$25152$auto$opt_dff.cc:219:make_patterns_logic$1962, arst=\RESET, srst={ }
  13 cells in clk=\CLOCK, en=$abc$25388$abc$19127$auto$opt_dff.cc:219:make_patterns_logic$2049, arst=\RESET, srst={ }
  4 cells in clk=\CLOCK, en=$abc$25402$abc$24432$auto$opt_dff.cc:194:make_patterns_logic$2650, arst=\RESET, srst={ }
  13 cells in clk=\CLOCK, en=$abc$25409$abc$23331$auto$opt_dff.cc:219:make_patterns_logic$2637, arst=\RESET, srst={ }
  7 cells in clk=\CLOCK, en=$abc$25423$abc$19142$auto$opt_dff.cc:219:make_patterns_logic$2004, arst=\RESET, srst={ }
  8 cells in clk=\CLOCK, en=$abc$25926$abc$19988$auto$opt_dff.cc:219:make_patterns_logic$2525, arst=\RESET, srst={ }
  35 cells in clk=\CLOCK, en=$abc$25937$abc$24755$auto$opt_dff.cc:219:make_patterns_logic$2129, arst=\RESET, srst={ }
  38 cells in clk=\CLOCK, en=$abc$25973$abc$20047$auto$opt_dff.cc:219:make_patterns_logic$2151, arst=\RESET, srst={ }
  751 cells in clk=\CLOCK, en=$abc$26053$abc$23345$auto$opt_dff.cc:219:make_patterns_logic$2015, arst=\RESET, srst={ }
  91 cells in clk=\CLOCK, en=$abc$26954$abc$20377$auto$opt_dff.cc:219:make_patterns_logic$2423, arst=\RESET, srst={ }
  573 cells in clk=\CLOCK, en=$abc$27009$abc$24532$auto$opt_dff.cc:219:make_patterns_logic$2146, arst=\RESET, srst={ }
  67 cells in clk=\CLOCK, en=$abc$27896$abc$20445$auto$opt_dff.cc:219:make_patterns_logic$2185, arst=\RESET, srst={ }
  57 cells in clk=\CLOCK, en=$abc$27937$abc$24438$auto$opt_dff.cc:219:make_patterns_logic$2656, arst=\RESET, srst={ }
  121 cells in clk=\CLOCK, en=$abc$28031$abc$24768$auto$opt_dff.cc:219:make_patterns_logic$2440, arst=\RESET, srst={ }
  218 cells in clk=\CLOCK, en=$abc$28152$abc$20950$auto$opt_dff.cc:219:make_patterns_logic$2451, arst=\RESET, srst={ }
  83 cells in clk=\CLOCK, en=$abc$28376$abc$20125$auto$opt_dff.cc:219:make_patterns_logic$2321, arst=\RESET, srst={ }
  46 cells in clk=\CLOCK, en=$abc$28456$abc$20091$auto$opt_dff.cc:219:make_patterns_logic$2478, arst=\RESET, srst={ }
  96 cells in clk=\CLOCK, en=$abc$28488$abc$19881$auto$opt_dff.cc:219:make_patterns_logic$2110, arst=\RESET, srst={ }
  22 cells in clk=\CLOCK, en=$abc$28577$abc$19720$auto$opt_dff.cc:194:make_patterns_logic$2640, arst=\RESET, srst={ }
  77 cells in clk=\CLOCK, en=$abc$28600$abc$20293$auto$opt_dff.cc:219:make_patterns_logic$2389, arst=\RESET, srst={ }
  65 cells in clk=\CLOCK, en=$abc$28638$abc$20255$auto$opt_dff.cc:219:make_patterns_logic$2372, arst=\RESET, srst={ }
  73 cells in clk=\CLOCK, en=$abc$28676$abc$20209$auto$opt_dff.cc:219:make_patterns_logic$2355, arst=\RESET, srst={ }
  3 cells in clk=\CLOCK, en=$abc$28753$abc$21202$auto$opt_dff.cc:219:make_patterns_logic$2620, arst=\RESET, srst={ }
  32 cells in clk=\CLOCK, en=$abc$28758$abc$21208$auto$opt_dff.cc:219:make_patterns_logic$2032, arst=\RESET, srst={ }
  497 cells in clk=\CLOCK, en={ }, arst=\RESET, srst={ }
  73 cells in clk=\CLOCK, en=$abc$30185$abc$20529$auto$opt_dff.cc:219:make_patterns_logic$2219, arst=\RESET, srst={ }
  77 cells in clk=\CLOCK, en=$abc$30224$abc$20567$auto$opt_dff.cc:219:make_patterns_logic$2236, arst=\RESET, srst={ }
  84 cells in clk=\CLOCK, en=$abc$30265$abc$20735$auto$opt_dff.cc:219:make_patterns_logic$2304, arst=\RESET, srst={ }
  683 cells in clk=\CLOCK, en=$abc$30306$abc$20773$auto$opt_dff.cc:219:make_patterns_logic$1985, arst=\RESET, srst={ }
  81 cells in clk=\CLOCK, en=$abc$25303$abc$20697$auto$opt_dff.cc:219:make_patterns_logic$2287, arst=\RESET, srst={ }
  384 cells in clk=\CLOCK, en=$abc$27525$abc$22972$auto$opt_dff.cc:219:make_patterns_logic$2545, arst=\RESET, srst={ }
  79 cells in clk=\CLOCK, en=$abc$28416$abc$20339$auto$opt_dff.cc:219:make_patterns_logic$2406, arst=\RESET, srst={ }
  83 cells in clk=\CLOCK, en=$abc$30908$abc$19616$auto$opt_dff.cc:219:make_patterns_logic$2589, arst=\RESET, srst={ }
  95 cells in clk=\CLOCK, en=$abc$31461$abc$19743$auto$opt_dff.cc:219:make_patterns_logic$2068, arst=\RESET, srst={ }
  483 cells in clk=\CLOCK, en=$abc$31030$abc$24842$auto$opt_dff.cc:219:make_patterns_logic$2503, arst=\RESET, srst={ }
  83 cells in clk=\CLOCK, en=$abc$28793$abc$20483$auto$opt_dff.cc:219:make_patterns_logic$2202, arst=\RESET, srst={ }
  93 cells in clk=\CLOCK, en=$abc$26010$abc$20001$auto$opt_dff.cc:219:make_patterns_logic$2168, arst=\RESET, srst={ }
  89 cells in clk=\CLOCK, en=$abc$28714$abc$20171$auto$opt_dff.cc:219:make_patterns_logic$2338, arst=\RESET, srst={ }
  471 cells in clk=\CLOCK, en=$abc$25443$abc$19162$auto$opt_dff.cc:219:make_patterns_logic$2568, arst=\RESET, srst={ }
  29 cells in clk=\CLOCK, en=$abc$31574$abc$25170$auto$opt_dff.cc:219:make_patterns_logic$1998, arst=\RESET, srst={ }

3.124.2. Extracting gate netlist of module `\b15' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \CLOCK, enabled by $abc$25214$abc$20613$auto$opt_dff.cc:219:make_patterns_logic$2253, asynchronously reset by \RESET
Extracted 79 gates and 136 wires to a netlist network with 57 inputs and 21 outputs.

3.124.2.1. Executing ABC.

3.124.3. Extracting gate netlist of module `\b15' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \CLOCK, enabled by $abc$25257$abc$20651$auto$opt_dff.cc:219:make_patterns_logic$2270, asynchronously reset by \RESET
Extracted 75 gates and 129 wires to a netlist network with 54 inputs and 22 outputs.

3.124.3.1. Executing ABC.

3.124.4. Extracting gate netlist of module `\b15' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \CLOCK, enabled by $abc$25341$abc$25152$auto$opt_dff.cc:219:make_patterns_logic$1962, asynchronously reset by \RESET
Extracted 23 gates and 45 wires to a netlist network with 22 inputs and 6 outputs.

3.124.4.1. Executing ABC.

3.124.5. Extracting gate netlist of module `\b15' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \CLOCK, enabled by $abc$25388$abc$19127$auto$opt_dff.cc:219:make_patterns_logic$2049, asynchronously reset by \RESET
Extracted 13 gates and 26 wires to a netlist network with 13 inputs and 5 outputs.

3.124.5.1. Executing ABC.

3.124.6. Extracting gate netlist of module `\b15' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \CLOCK, enabled by $abc$25402$abc$24432$auto$opt_dff.cc:194:make_patterns_logic$2650, asynchronously reset by \RESET
Extracted 4 gates and 8 wires to a netlist network with 4 inputs and 2 outputs.

3.124.6.1. Executing ABC.

3.124.7. Extracting gate netlist of module `\b15' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \CLOCK, enabled by $abc$25409$abc$23331$auto$opt_dff.cc:219:make_patterns_logic$2637, asynchronously reset by \RESET
Extracted 13 gates and 25 wires to a netlist network with 12 inputs and 5 outputs.

3.124.7.1. Executing ABC.

3.124.8. Extracting gate netlist of module `\b15' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \CLOCK, enabled by $abc$25423$abc$19142$auto$opt_dff.cc:219:make_patterns_logic$2004, asynchronously reset by \RESET
Extracted 7 gates and 15 wires to a netlist network with 8 inputs and 7 outputs.

3.124.8.1. Executing ABC.

3.124.9. Extracting gate netlist of module `\b15' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \CLOCK, enabled by $abc$25926$abc$19988$auto$opt_dff.cc:219:make_patterns_logic$2525, asynchronously reset by \RESET
Extracted 8 gates and 16 wires to a netlist network with 8 inputs and 3 outputs.

3.124.9.1. Executing ABC.

3.124.10. Extracting gate netlist of module `\b15' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \CLOCK, enabled by $abc$25937$abc$24755$auto$opt_dff.cc:219:make_patterns_logic$2129, asynchronously reset by \RESET
Extracted 31 gates and 63 wires to a netlist network with 32 inputs and 22 outputs.

3.124.10.1. Executing ABC.

3.124.11. Extracting gate netlist of module `\b15' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \CLOCK, enabled by $abc$25973$abc$20047$auto$opt_dff.cc:219:make_patterns_logic$2151, asynchronously reset by \RESET
Extracted 38 gates and 65 wires to a netlist network with 27 inputs and 14 outputs.

3.124.11.1. Executing ABC.

3.124.12. Extracting gate netlist of module `\b15' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \CLOCK, enabled by $abc$26053$abc$23345$auto$opt_dff.cc:219:make_patterns_logic$2015, asynchronously reset by \RESET
Extracted 751 gates and 951 wires to a netlist network with 200 inputs and 343 outputs.

3.124.12.1. Executing ABC.

3.124.13. Extracting gate netlist of module `\b15' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \CLOCK, enabled by $abc$26954$abc$20377$auto$opt_dff.cc:219:make_patterns_logic$2423, asynchronously reset by \RESET
Extracted 91 gates and 150 wires to a netlist network with 59 inputs and 27 outputs.

3.124.13.1. Executing ABC.

3.124.14. Extracting gate netlist of module `\b15' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \CLOCK, enabled by $abc$27009$abc$24532$auto$opt_dff.cc:219:make_patterns_logic$2146, asynchronously reset by \RESET
Extracted 507 gates and 748 wires to a netlist network with 241 inputs and 155 outputs.

3.124.14.1. Executing ABC.

3.124.15. Extracting gate netlist of module `\b15' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \CLOCK, enabled by $abc$27896$abc$20445$auto$opt_dff.cc:219:make_patterns_logic$2185, asynchronously reset by \RESET
Extracted 67 gates and 118 wires to a netlist network with 51 inputs and 16 outputs.

3.124.15.1. Executing ABC.

3.124.16. Extracting gate netlist of module `\b15' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \CLOCK, enabled by $abc$27937$abc$24438$auto$opt_dff.cc:219:make_patterns_logic$2656, asynchronously reset by \RESET
Extracted 53 gates and 108 wires to a netlist network with 55 inputs and 31 outputs.

3.124.16.1. Executing ABC.

3.124.17. Extracting gate netlist of module `\b15' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \CLOCK, enabled by $abc$28031$abc$24768$auto$opt_dff.cc:219:make_patterns_logic$2440, asynchronously reset by \RESET
Extracted 121 gates and 176 wires to a netlist network with 55 inputs and 51 outputs.

3.124.17.1. Executing ABC.

3.124.18. Extracting gate netlist of module `\b15' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \CLOCK, enabled by $abc$28152$abc$20950$auto$opt_dff.cc:219:make_patterns_logic$2451, asynchronously reset by \RESET
Extracted 218 gates and 361 wires to a netlist network with 143 inputs and 166 outputs.

3.124.18.1. Executing ABC.

3.124.19. Extracting gate netlist of module `\b15' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \CLOCK, enabled by $abc$28376$abc$20125$auto$opt_dff.cc:219:make_patterns_logic$2321, asynchronously reset by \RESET
Extracted 83 gates and 140 wires to a netlist network with 57 inputs and 16 outputs.

3.124.19.1. Executing ABC.

3.124.20. Extracting gate netlist of module `\b15' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \CLOCK, enabled by $abc$28456$abc$20091$auto$opt_dff.cc:219:make_patterns_logic$2478, asynchronously reset by \RESET
Extracted 46 gates and 88 wires to a netlist network with 42 inputs and 35 outputs.

3.124.20.1. Executing ABC.

3.124.21. Extracting gate netlist of module `\b15' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \CLOCK, enabled by $abc$28488$abc$19881$auto$opt_dff.cc:219:make_patterns_logic$2110, asynchronously reset by \RESET
Extracted 92 gates and 162 wires to a netlist network with 70 inputs and 10 outputs.

3.124.21.1. Executing ABC.

3.124.22. Extracting gate netlist of module `\b15' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \CLOCK, enabled by $abc$28577$abc$19720$auto$opt_dff.cc:194:make_patterns_logic$2640, asynchronously reset by \RESET
Extracted 22 gates and 31 wires to a netlist network with 9 inputs and 5 outputs.

3.124.22.1. Executing ABC.

3.124.23. Extracting gate netlist of module `\b15' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \CLOCK, enabled by $abc$28600$abc$20293$auto$opt_dff.cc:219:make_patterns_logic$2389, asynchronously reset by \RESET
Extracted 77 gates and 130 wires to a netlist network with 53 inputs and 14 outputs.

3.124.23.1. Executing ABC.

3.124.24. Extracting gate netlist of module `\b15' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \CLOCK, enabled by $abc$28638$abc$20255$auto$opt_dff.cc:219:make_patterns_logic$2372, asynchronously reset by \RESET
Extracted 65 gates and 108 wires to a netlist network with 43 inputs and 13 outputs.

3.124.24.1. Executing ABC.

3.124.25. Extracting gate netlist of module `\b15' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \CLOCK, enabled by $abc$28676$abc$20209$auto$opt_dff.cc:219:make_patterns_logic$2355, asynchronously reset by \RESET
Extracted 73 gates and 124 wires to a netlist network with 51 inputs and 14 outputs.

3.124.25.1. Executing ABC.

3.124.26. Extracting gate netlist of module `\b15' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \CLOCK, enabled by $abc$28753$abc$21202$auto$opt_dff.cc:219:make_patterns_logic$2620, asynchronously reset by \RESET
Extracted 3 gates and 7 wires to a netlist network with 4 inputs and 2 outputs.

3.124.26.1. Executing ABC.

3.124.27. Extracting gate netlist of module `\b15' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \CLOCK, enabled by $abc$28758$abc$21208$auto$opt_dff.cc:219:make_patterns_logic$2032, asynchronously reset by \RESET
Extracted 32 gates and 54 wires to a netlist network with 22 inputs and 12 outputs.

3.124.27.1. Executing ABC.

3.124.28. Extracting gate netlist of module `\b15' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \CLOCK, asynchronously reset by \RESET
Extracted 480 gates and 727 wires to a netlist network with 247 inputs and 216 outputs.

3.124.28.1. Executing ABC.

3.124.29. Extracting gate netlist of module `\b15' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \CLOCK, enabled by $abc$30185$abc$20529$auto$opt_dff.cc:219:make_patterns_logic$2219, asynchronously reset by \RESET
Extracted 73 gates and 128 wires to a netlist network with 55 inputs and 18 outputs.

3.124.29.1. Executing ABC.

3.124.30. Extracting gate netlist of module `\b15' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \CLOCK, enabled by $abc$30224$abc$20567$auto$opt_dff.cc:219:make_patterns_logic$2236, asynchronously reset by \RESET
Extracted 77 gates and 132 wires to a netlist network with 55 inputs and 16 outputs.

3.124.30.1. Executing ABC.

3.124.31. Extracting gate netlist of module `\b15' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \CLOCK, enabled by $abc$30265$abc$20735$auto$opt_dff.cc:219:make_patterns_logic$2304, asynchronously reset by \RESET
Extracted 84 gates and 143 wires to a netlist network with 59 inputs and 20 outputs.

3.124.31.1. Executing ABC.

3.124.32. Extracting gate netlist of module `\b15' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \CLOCK, enabled by $abc$30306$abc$20773$auto$opt_dff.cc:219:make_patterns_logic$1985, asynchronously reset by \RESET
Extracted 600 gates and 874 wires to a netlist network with 274 inputs and 142 outputs.

3.124.32.1. Executing ABC.

3.124.33. Extracting gate netlist of module `\b15' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \CLOCK, enabled by $abc$25303$abc$20697$auto$opt_dff.cc:219:make_patterns_logic$2287, asynchronously reset by \RESET
Extracted 81 gates and 135 wires to a netlist network with 54 inputs and 15 outputs.

3.124.33.1. Executing ABC.

3.124.34. Extracting gate netlist of module `\b15' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \CLOCK, enabled by $abc$27525$abc$22972$auto$opt_dff.cc:219:make_patterns_logic$2545, asynchronously reset by \RESET
Extracted 384 gates and 593 wires to a netlist network with 209 inputs and 94 outputs.

3.124.34.1. Executing ABC.

3.124.35. Extracting gate netlist of module `\b15' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \CLOCK, enabled by $abc$28416$abc$20339$auto$opt_dff.cc:219:make_patterns_logic$2406, asynchronously reset by \RESET
Extracted 79 gates and 135 wires to a netlist network with 56 inputs and 16 outputs.

3.124.35.1. Executing ABC.

3.124.36. Extracting gate netlist of module `\b15' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \CLOCK, enabled by $abc$30908$abc$19616$auto$opt_dff.cc:219:make_patterns_logic$2589, asynchronously reset by \RESET
Extracted 83 gates and 153 wires to a netlist network with 70 inputs and 33 outputs.

3.124.36.1. Executing ABC.

3.124.37. Extracting gate netlist of module `\b15' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \CLOCK, enabled by $abc$31461$abc$19743$auto$opt_dff.cc:219:make_patterns_logic$2068, asynchronously reset by \RESET
Extracted 95 gates and 162 wires to a netlist network with 67 inputs and 44 outputs.

3.124.37.1. Executing ABC.

3.124.38. Extracting gate netlist of module `\b15' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \CLOCK, enabled by $abc$31030$abc$24842$auto$opt_dff.cc:219:make_patterns_logic$2503, asynchronously reset by \RESET
Extracted 473 gates and 605 wires to a netlist network with 132 inputs and 155 outputs.

3.124.38.1. Executing ABC.

3.124.39. Extracting gate netlist of module `\b15' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \CLOCK, enabled by $abc$28793$abc$20483$auto$opt_dff.cc:219:make_patterns_logic$2202, asynchronously reset by \RESET
Extracted 83 gates and 139 wires to a netlist network with 56 inputs and 19 outputs.

3.124.39.1. Executing ABC.

3.124.40. Extracting gate netlist of module `\b15' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \CLOCK, enabled by $abc$26010$abc$20001$auto$opt_dff.cc:219:make_patterns_logic$2168, asynchronously reset by \RESET
Extracted 93 gates and 160 wires to a netlist network with 67 inputs and 22 outputs.

3.124.40.1. Executing ABC.

3.124.41. Extracting gate netlist of module `\b15' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \CLOCK, enabled by $abc$28714$abc$20171$auto$opt_dff.cc:219:make_patterns_logic$2338, asynchronously reset by \RESET
Extracted 89 gates and 145 wires to a netlist network with 56 inputs and 17 outputs.

3.124.41.1. Executing ABC.

3.124.42. Extracting gate netlist of module `\b15' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \CLOCK, enabled by $abc$25443$abc$19162$auto$opt_dff.cc:219:make_patterns_logic$2568, asynchronously reset by \RESET
Extracted 471 gates and 636 wires to a netlist network with 165 inputs and 95 outputs.

3.124.42.1. Executing ABC.

3.124.43. Extracting gate netlist of module `\b15' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \CLOCK, enabled by $abc$31574$abc$25170$auto$opt_dff.cc:219:make_patterns_logic$1998, asynchronously reset by \RESET
Extracted 29 gates and 57 wires to a netlist network with 28 inputs and 19 outputs.

3.124.43.1. Executing ABC.

yosys> abc -dff

3.125. Executing ABC pass (technology mapping using ABC).

3.125.1. Summary of detected clock domains:
  99 cells in clk=\CLOCK, en=$abc$31612$abc$25214$abc$20613$auto$opt_dff.cc:219:make_patterns_logic$2253, arst=\RESET, srst={ }
  23 cells in clk=\CLOCK, en=$abc$31788$abc$25341$abc$25152$auto$opt_dff.cc:219:make_patterns_logic$1962, arst=\RESET, srst={ }
  13 cells in clk=\CLOCK, en=$abc$31813$abc$25388$abc$19127$auto$opt_dff.cc:219:make_patterns_logic$2049, arst=\RESET, srst={ }
  5 cells in clk=\CLOCK, en=$abc$31827$abc$25402$abc$24432$auto$opt_dff.cc:194:make_patterns_logic$2650, arst=\RESET, srst={ }
  13 cells in clk=\CLOCK, en=$abc$31833$abc$25409$abc$23331$auto$opt_dff.cc:219:make_patterns_logic$2637, arst=\RESET, srst={ }
  7 cells in clk=\CLOCK, en=$abc$31868$abc$25926$abc$19988$auto$opt_dff.cc:219:make_patterns_logic$2525, arst=\RESET, srst={ }
  36 cells in clk=\CLOCK, en=$abc$31879$abc$25937$abc$24755$auto$opt_dff.cc:219:make_patterns_logic$2129, arst=\RESET, srst={ }
  34 cells in clk=\CLOCK, en=$abc$31915$abc$25973$abc$20047$auto$opt_dff.cc:219:make_patterns_logic$2151, arst=\RESET, srst={ }
  7 cells in clk=\CLOCK, en=$abc$31848$abc$25423$abc$19142$auto$opt_dff.cc:219:make_patterns_logic$2004, arst=\RESET, srst={ }
  632 cells in clk=\CLOCK, en=$abc$31954$abc$26053$abc$23345$auto$opt_dff.cc:219:make_patterns_logic$2015, arst=\RESET, srst={ }
  106 cells in clk=\CLOCK, en=$abc$32737$abc$26954$abc$20377$auto$opt_dff.cc:219:make_patterns_logic$2423, arst=\RESET, srst={ }
  82 cells in clk=\CLOCK, en=$abc$31707$abc$25257$abc$20651$auto$opt_dff.cc:219:make_patterns_logic$2270, arst=\RESET, srst={ }
  82 cells in clk=\CLOCK, en=$abc$33365$abc$27896$abc$20445$auto$opt_dff.cc:219:make_patterns_logic$2185, arst=\RESET, srst={ }
  123 cells in clk=\CLOCK, en=$abc$33542$abc$28031$abc$24768$auto$opt_dff.cc:219:make_patterns_logic$2440, arst=\RESET, srst={ }
  166 cells in clk=\CLOCK, en=$abc$33664$abc$28152$abc$20950$auto$opt_dff.cc:219:make_patterns_logic$2451, arst=\RESET, srst={ }
  45 cells in clk=\CLOCK, en=$abc$33973$abc$28456$abc$20091$auto$opt_dff.cc:219:make_patterns_logic$2478, arst=\RESET, srst={ }
  93 cells in clk=\CLOCK, en=$abc$34020$abc$28488$abc$19881$auto$opt_dff.cc:219:make_patterns_logic$2110, arst=\RESET, srst={ }
  22 cells in clk=\CLOCK, en=$abc$34112$abc$28577$abc$19720$auto$opt_dff.cc:194:make_patterns_logic$2640, arst=\RESET, srst={ }
  77 cells in clk=\CLOCK, en=$abc$34140$abc$28600$abc$20293$auto$opt_dff.cc:219:make_patterns_logic$2389, arst=\RESET, srst={ }
  74 cells in clk=\CLOCK, en=$abc$34230$abc$28638$abc$20255$auto$opt_dff.cc:219:make_patterns_logic$2372, arst=\RESET, srst={ }
  3 cells in clk=\CLOCK, en=$abc$34386$abc$28753$abc$21202$auto$opt_dff.cc:219:make_patterns_logic$2620, arst=\RESET, srst={ }
  29 cells in clk=\CLOCK, en=$abc$34391$abc$28758$abc$21208$auto$opt_dff.cc:219:make_patterns_logic$2032, arst=\RESET, srst={ }
  808 cells in clk=\CLOCK, en={ }, arst=\RESET, srst={ }
  88 cells in clk=\CLOCK, en=$abc$34899$abc$30185$abc$20529$auto$opt_dff.cc:219:make_patterns_logic$2219, arst=\RESET, srst={ }
  89 cells in clk=\CLOCK, en=$abc$34985$abc$30224$abc$20567$auto$opt_dff.cc:219:make_patterns_logic$2236, arst=\RESET, srst={ }
  78 cells in clk=\CLOCK, en=$abc$35078$abc$30265$abc$20735$auto$opt_dff.cc:219:make_patterns_logic$2304, arst=\RESET, srst={ }
  87 cells in clk=\CLOCK, en=$abc$33885$abc$28376$abc$20125$auto$opt_dff.cc:219:make_patterns_logic$2321, arst=\RESET, srst={ }
  84 cells in clk=\CLOCK, en=$abc$35800$abc$25303$abc$20697$auto$opt_dff.cc:219:make_patterns_logic$2287, arst=\RESET, srst={ }
  60 cells in clk=\CLOCK, en=$abc$33448$abc$27937$abc$24438$auto$opt_dff.cc:219:make_patterns_logic$2656, arst=\RESET, srst={ }
  71 cells in clk=\CLOCK, en=$abc$36274$abc$28416$abc$20339$auto$opt_dff.cc:219:make_patterns_logic$2406, arst=\RESET, srst={ }
  73 cells in clk=\CLOCK, en=$abc$36359$abc$30908$abc$19616$auto$opt_dff.cc:219:make_patterns_logic$2589, arst=\RESET, srst={ }
  85 cells in clk=\CLOCK, en=$abc$36480$abc$31461$abc$19743$auto$opt_dff.cc:219:make_patterns_logic$2068, arst=\RESET, srst={ }
  84 cells in clk=\CLOCK, en=$abc$37141$abc$28793$abc$20483$auto$opt_dff.cc:219:make_patterns_logic$2202, arst=\RESET, srst={ }
  102 cells in clk=\CLOCK, en=$abc$37226$abc$26010$abc$20001$auto$opt_dff.cc:219:make_patterns_logic$2168, arst=\RESET, srst={ }
  511 cells in clk=\CLOCK, en=$abc$35177$abc$30306$abc$20773$auto$opt_dff.cc:219:make_patterns_logic$1985, arst=\RESET, srst={ }
  81 cells in clk=\CLOCK, en=$abc$37317$abc$28714$abc$20171$auto$opt_dff.cc:219:make_patterns_logic$2338, arst=\RESET, srst={ }
  88 cells in clk=\CLOCK, en=$abc$34301$abc$28676$abc$20209$auto$opt_dff.cc:219:make_patterns_logic$2355, arst=\RESET, srst={ }
  389 cells in clk=\CLOCK, en=$abc$35890$abc$27525$abc$22972$auto$opt_dff.cc:219:make_patterns_logic$2545, arst=\RESET, srst={ }
  601 cells in clk=\CLOCK, en=$abc$32833$abc$27009$abc$24532$auto$opt_dff.cc:219:make_patterns_logic$2146, arst=\RESET, srst={ }
  512 cells in clk=\CLOCK, en=$abc$36603$abc$31030$abc$24842$auto$opt_dff.cc:219:make_patterns_logic$2503, arst=\RESET, srst={ }
  455 cells in clk=\CLOCK, en=$abc$37412$abc$25443$abc$19162$auto$opt_dff.cc:219:make_patterns_logic$2568, arst=\RESET, srst={ }
  42 cells in clk=\CLOCK, en=$abc$37900$abc$31574$abc$25170$auto$opt_dff.cc:219:make_patterns_logic$1998, arst=\RESET, srst={ }

3.125.2. Extracting gate netlist of module `\b15' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \CLOCK, enabled by $abc$31612$abc$25214$abc$20613$auto$opt_dff.cc:219:make_patterns_logic$2253, asynchronously reset by \RESET
Extracted 99 gates and 161 wires to a netlist network with 62 inputs and 22 outputs.

3.125.2.1. Executing ABC.

3.125.3. Extracting gate netlist of module `\b15' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \CLOCK, enabled by $abc$31788$abc$25341$abc$25152$auto$opt_dff.cc:219:make_patterns_logic$1962, asynchronously reset by \RESET
Extracted 23 gates and 44 wires to a netlist network with 21 inputs and 5 outputs.

3.125.3.1. Executing ABC.

3.125.4. Extracting gate netlist of module `\b15' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \CLOCK, enabled by $abc$31813$abc$25388$abc$19127$auto$opt_dff.cc:219:make_patterns_logic$2049, asynchronously reset by \RESET
Extracted 13 gates and 25 wires to a netlist network with 12 inputs and 6 outputs.

3.125.4.1. Executing ABC.

3.125.5. Extracting gate netlist of module `\b15' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \CLOCK, enabled by $abc$31827$abc$25402$abc$24432$auto$opt_dff.cc:194:make_patterns_logic$2650, asynchronously reset by \RESET
Extracted 5 gates and 9 wires to a netlist network with 4 inputs and 2 outputs.

3.125.5.1. Executing ABC.

3.125.6. Extracting gate netlist of module `\b15' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \CLOCK, enabled by $abc$31833$abc$25409$abc$23331$auto$opt_dff.cc:219:make_patterns_logic$2637, asynchronously reset by \RESET
Extracted 13 gates and 25 wires to a netlist network with 12 inputs and 5 outputs.

3.125.6.1. Executing ABC.

3.125.7. Extracting gate netlist of module `\b15' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \CLOCK, enabled by $abc$31868$abc$25926$abc$19988$auto$opt_dff.cc:219:make_patterns_logic$2525, asynchronously reset by \RESET
Extracted 7 gates and 15 wires to a netlist network with 8 inputs and 2 outputs.

3.125.7.1. Executing ABC.

3.125.8. Extracting gate netlist of module `\b15' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \CLOCK, enabled by $abc$31879$abc$25937$abc$24755$auto$opt_dff.cc:219:make_patterns_logic$2129, asynchronously reset by \RESET
Extracted 32 gates and 63 wires to a netlist network with 31 inputs and 20 outputs.

3.125.8.1. Executing ABC.

3.125.9. Extracting gate netlist of module `\b15' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \CLOCK, enabled by $abc$31915$abc$25973$abc$20047$auto$opt_dff.cc:219:make_patterns_logic$2151, asynchronously reset by \RESET
Extracted 34 gates and 59 wires to a netlist network with 25 inputs and 10 outputs.

3.125.9.1. Executing ABC.

3.125.10. Extracting gate netlist of module `\b15' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \CLOCK, enabled by $abc$31848$abc$25423$abc$19142$auto$opt_dff.cc:219:make_patterns_logic$2004, asynchronously reset by \RESET
Extracted 7 gates and 15 wires to a netlist network with 8 inputs and 7 outputs.

3.125.10.1. Executing ABC.

3.125.11. Extracting gate netlist of module `\b15' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \CLOCK, enabled by $abc$31954$abc$26053$abc$23345$auto$opt_dff.cc:219:make_patterns_logic$2015, asynchronously reset by \RESET
Extracted 632 gates and 838 wires to a netlist network with 206 inputs and 315 outputs.

3.125.11.1. Executing ABC.

3.125.12. Extracting gate netlist of module `\b15' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \CLOCK, enabled by $abc$32737$abc$26954$abc$20377$auto$opt_dff.cc:219:make_patterns_logic$2423, asynchronously reset by \RESET
Extracted 106 gates and 172 wires to a netlist network with 66 inputs and 35 outputs.

3.125.12.1. Executing ABC.

3.125.13. Extracting gate netlist of module `\b15' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \CLOCK, enabled by $abc$31707$abc$25257$abc$20651$auto$opt_dff.cc:219:make_patterns_logic$2270, asynchronously reset by \RESET
Extracted 82 gates and 144 wires to a netlist network with 62 inputs and 23 outputs.

3.125.13.1. Executing ABC.

3.125.14. Extracting gate netlist of module `\b15' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \CLOCK, enabled by $abc$33365$abc$27896$abc$20445$auto$opt_dff.cc:219:make_patterns_logic$2185, asynchronously reset by \RESET
Extracted 82 gates and 139 wires to a netlist network with 57 inputs and 21 outputs.

3.125.14.1. Executing ABC.

3.125.15. Extracting gate netlist of module `\b15' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \CLOCK, enabled by $abc$33542$abc$28031$abc$24768$auto$opt_dff.cc:219:make_patterns_logic$2440, asynchronously reset by \RESET
Extracted 123 gates and 178 wires to a netlist network with 55 inputs and 53 outputs.

3.125.15.1. Executing ABC.

3.125.16. Extracting gate netlist of module `\b15' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \CLOCK, enabled by $abc$33664$abc$28152$abc$20950$auto$opt_dff.cc:219:make_patterns_logic$2451, asynchronously reset by \RESET
Extracted 166 gates and 290 wires to a netlist network with 124 inputs and 128 outputs.

3.125.16.1. Executing ABC.

3.125.17. Extracting gate netlist of module `\b15' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \CLOCK, enabled by $abc$33973$abc$28456$abc$20091$auto$opt_dff.cc:219:make_patterns_logic$2478, asynchronously reset by \RESET
Extracted 45 gates and 87 wires to a netlist network with 42 inputs and 35 outputs.

3.125.17.1. Executing ABC.

3.125.18. Extracting gate netlist of module `\b15' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \CLOCK, enabled by $abc$34020$abc$28488$abc$19881$auto$opt_dff.cc:219:make_patterns_logic$2110, asynchronously reset by \RESET
Extracted 89 gates and 158 wires to a netlist network with 69 inputs and 9 outputs.

3.125.18.1. Executing ABC.

3.125.19. Extracting gate netlist of module `\b15' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \CLOCK, enabled by $abc$34112$abc$28577$abc$19720$auto$opt_dff.cc:194:make_patterns_logic$2640, asynchronously reset by \RESET
Extracted 22 gates and 31 wires to a netlist network with 9 inputs and 5 outputs.

3.125.19.1. Executing ABC.

3.125.20. Extracting gate netlist of module `\b15' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \CLOCK, enabled by $abc$34140$abc$28600$abc$20293$auto$opt_dff.cc:219:make_patterns_logic$2389, asynchronously reset by \RESET
Extracted 77 gates and 129 wires to a netlist network with 52 inputs and 14 outputs.

3.125.20.1. Executing ABC.

3.125.21. Extracting gate netlist of module `\b15' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \CLOCK, enabled by $abc$34230$abc$28638$abc$20255$auto$opt_dff.cc:219:make_patterns_logic$2372, asynchronously reset by \RESET
Extracted 74 gates and 132 wires to a netlist network with 58 inputs and 14 outputs.

3.125.21.1. Executing ABC.

3.125.22. Extracting gate netlist of module `\b15' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \CLOCK, enabled by $abc$34386$abc$28753$abc$21202$auto$opt_dff.cc:219:make_patterns_logic$2620, asynchronously reset by \RESET
Extracted 3 gates and 7 wires to a netlist network with 4 inputs and 2 outputs.

3.125.22.1. Executing ABC.

3.125.23. Extracting gate netlist of module `\b15' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \CLOCK, enabled by $abc$34391$abc$28758$abc$21208$auto$opt_dff.cc:219:make_patterns_logic$2032, asynchronously reset by \RESET
Extracted 29 gates and 49 wires to a netlist network with 20 inputs and 11 outputs.

3.125.23.1. Executing ABC.

3.125.24. Extracting gate netlist of module `\b15' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \CLOCK, asynchronously reset by \RESET
Extracted 787 gates and 1216 wires to a netlist network with 429 inputs and 369 outputs.

3.125.24.1. Executing ABC.

3.125.25. Extracting gate netlist of module `\b15' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \CLOCK, enabled by $abc$34899$abc$30185$abc$20529$auto$opt_dff.cc:219:make_patterns_logic$2219, asynchronously reset by \RESET
Extracted 88 gates and 149 wires to a netlist network with 61 inputs and 17 outputs.

3.125.25.1. Executing ABC.

3.125.26. Extracting gate netlist of module `\b15' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \CLOCK, enabled by $abc$34985$abc$30224$abc$20567$auto$opt_dff.cc:219:make_patterns_logic$2236, asynchronously reset by \RESET
Extracted 89 gates and 149 wires to a netlist network with 60 inputs and 16 outputs.

3.125.26.1. Executing ABC.

3.125.27. Extracting gate netlist of module `\b15' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \CLOCK, enabled by $abc$35078$abc$30265$abc$20735$auto$opt_dff.cc:219:make_patterns_logic$2304, asynchronously reset by \RESET
Extracted 78 gates and 136 wires to a netlist network with 58 inputs and 17 outputs.

3.125.27.1. Executing ABC.

3.125.28. Extracting gate netlist of module `\b15' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \CLOCK, enabled by $abc$33885$abc$28376$abc$20125$auto$opt_dff.cc:219:make_patterns_logic$2321, asynchronously reset by \RESET
Extracted 87 gates and 151 wires to a netlist network with 64 inputs and 20 outputs.

3.125.28.1. Executing ABC.

3.125.29. Extracting gate netlist of module `\b15' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \CLOCK, enabled by $abc$35800$abc$25303$abc$20697$auto$opt_dff.cc:219:make_patterns_logic$2287, asynchronously reset by \RESET
Extracted 84 gates and 140 wires to a netlist network with 56 inputs and 16 outputs.

3.125.29.1. Executing ABC.

3.125.30. Extracting gate netlist of module `\b15' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \CLOCK, enabled by $abc$33448$abc$27937$abc$24438$auto$opt_dff.cc:219:make_patterns_logic$2656, asynchronously reset by \RESET
Extracted 60 gates and 122 wires to a netlist network with 62 inputs and 31 outputs.

3.125.30.1. Executing ABC.

3.125.31. Extracting gate netlist of module `\b15' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \CLOCK, enabled by $abc$36274$abc$28416$abc$20339$auto$opt_dff.cc:219:make_patterns_logic$2406, asynchronously reset by \RESET
Extracted 71 gates and 123 wires to a netlist network with 52 inputs and 18 outputs.

3.125.31.1. Executing ABC.

3.125.32. Extracting gate netlist of module `\b15' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \CLOCK, enabled by $abc$36359$abc$30908$abc$19616$auto$opt_dff.cc:219:make_patterns_logic$2589, asynchronously reset by \RESET
Extracted 73 gates and 133 wires to a netlist network with 60 inputs and 33 outputs.

3.125.32.1. Executing ABC.

3.125.33. Extracting gate netlist of module `\b15' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \CLOCK, enabled by $abc$36480$abc$31461$abc$19743$auto$opt_dff.cc:219:make_patterns_logic$2068, asynchronously reset by \RESET
Extracted 85 gates and 154 wires to a netlist network with 69 inputs and 39 outputs.

3.125.33.1. Executing ABC.

3.125.34. Extracting gate netlist of module `\b15' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \CLOCK, enabled by $abc$37141$abc$28793$abc$20483$auto$opt_dff.cc:219:make_patterns_logic$2202, asynchronously reset by \RESET
Extracted 84 gates and 149 wires to a netlist network with 65 inputs and 22 outputs.

3.125.34.1. Executing ABC.

3.125.35. Extracting gate netlist of module `\b15' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \CLOCK, enabled by $abc$37226$abc$26010$abc$20001$auto$opt_dff.cc:219:make_patterns_logic$2168, asynchronously reset by \RESET
Extracted 102 gates and 176 wires to a netlist network with 74 inputs and 27 outputs.

3.125.35.1. Executing ABC.

3.125.36. Extracting gate netlist of module `\b15' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \CLOCK, enabled by $abc$35177$abc$30306$abc$20773$auto$opt_dff.cc:219:make_patterns_logic$1985, asynchronously reset by \RESET
Extracted 431 gates and 633 wires to a netlist network with 202 inputs and 114 outputs.

3.125.36.1. Executing ABC.

3.125.37. Extracting gate netlist of module `\b15' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \CLOCK, enabled by $abc$37317$abc$28714$abc$20171$auto$opt_dff.cc:219:make_patterns_logic$2338, asynchronously reset by \RESET
Extracted 81 gates and 134 wires to a netlist network with 53 inputs and 15 outputs.

3.125.37.1. Executing ABC.

3.125.38. Extracting gate netlist of module `\b15' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \CLOCK, enabled by $abc$34301$abc$28676$abc$20209$auto$opt_dff.cc:219:make_patterns_logic$2355, asynchronously reset by \RESET
Extracted 88 gates and 147 wires to a netlist network with 59 inputs and 19 outputs.

3.125.38.1. Executing ABC.

3.125.39. Extracting gate netlist of module `\b15' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \CLOCK, enabled by $abc$35890$abc$27525$abc$22972$auto$opt_dff.cc:219:make_patterns_logic$2545, asynchronously reset by \RESET
Extracted 389 gates and 602 wires to a netlist network with 213 inputs and 95 outputs.

3.125.39.1. Executing ABC.

3.125.40. Extracting gate netlist of module `\b15' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \CLOCK, enabled by $abc$32833$abc$27009$abc$24532$auto$opt_dff.cc:219:make_patterns_logic$2146, asynchronously reset by \RESET
Extracted 526 gates and 780 wires to a netlist network with 253 inputs and 173 outputs.

3.125.40.1. Executing ABC.

3.125.41. Extracting gate netlist of module `\b15' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \CLOCK, enabled by $abc$36603$abc$31030$abc$24842$auto$opt_dff.cc:219:make_patterns_logic$2503, asynchronously reset by \RESET
Extracted 508 gates and 651 wires to a netlist network with 142 inputs and 146 outputs.

3.125.41.1. Executing ABC.

3.125.42. Extracting gate netlist of module `\b15' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \CLOCK, enabled by $abc$37412$abc$25443$abc$19162$auto$opt_dff.cc:219:make_patterns_logic$2568, asynchronously reset by \RESET
Extracted 455 gates and 604 wires to a netlist network with 149 inputs and 93 outputs.

3.125.42.1. Executing ABC.

3.125.43. Extracting gate netlist of module `\b15' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \CLOCK, enabled by $abc$37900$abc$31574$abc$25170$auto$opt_dff.cc:219:make_patterns_logic$1998, asynchronously reset by \RESET
Extracted 42 gates and 81 wires to a netlist network with 39 inputs and 17 outputs.

3.125.43.1. Executing ABC.

yosys> opt_ffinv

3.126. Executing OPT_FFINV pass (push inverters through FFs).
Discovering LUTs.
Pushed 0 inverters.

yosys> opt_expr

3.127. Executing OPT_EXPR pass (perform const folding).
Optimizing module b15.
<suppressed ~127 debug messages>

yosys> opt_merge -nomux

3.128. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\b15'.
<suppressed ~222 debug messages>
Removed a total of 74 cells.

yosys> opt_muxtree

3.129. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \b15..
  Creating internal representation of mux trees.
  No muxes found in this module.
Removed 0 multiplexer ports.

yosys> opt_reduce

3.130. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \b15.
Performed a total of 0 changes.

yosys> opt_merge

3.131. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\b15'.
Removed a total of 0 cells.

yosys> opt_share

3.132. Executing OPT_SHARE pass.

yosys> opt_dff -nosdff -sat

3.133. Executing OPT_DFF pass (perform DFF optimizations).
Adding EN signal on $abc$39777$auto$blifparse.cc:362:parse_blif$39784 ($_DFF_PP0_) from module b15 (D = $abc$39777$abc$34421$abc$28836$abc$21237$new_n1409_, Q = $abc$39777$lo6).
Adding EN signal on $abc$40651$auto$blifparse.cc:362:parse_blif$40657 ($_DFFE_PP0P_) from module b15 (D = $abc$40651$li5_li5, Q = $abc$40651$lo5).
Adding EN signal on $abc$40651$auto$blifparse.cc:362:parse_blif$40656 ($_DFFE_PP0P_) from module b15 (D = $abc$40651$li4_li4, Q = $abc$40651$lo4).
Adding EN signal on $abc$39115$auto$blifparse.cc:362:parse_blif$39118 ($_DFFE_PP0P_) from module b15 (D = $abc$39115$li2_li2, Q = $abc$39115$lo2).
Adding EN signal on $abc$41507$auto$blifparse.cc:362:parse_blif$41511 ($_DFFE_PP0P_) from module b15 (D = $abc$41507$li3_li3, Q = $abc$41507$lo3).
Adding EN signal on $abc$41507$auto$blifparse.cc:362:parse_blif$41509 ($_DFFE_PP0P_) from module b15 (D = $abc$41507$li1_li1, Q = $abc$41507$lo1).

yosys> opt_clean

3.134. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \b15..
Removed 3 unused cells and 32759 unused wires.
<suppressed ~20 debug messages>

yosys> opt_expr

3.135. Executing OPT_EXPR pass (perform const folding).
Optimizing module b15.
<suppressed ~14 debug messages>

yosys> opt_muxtree

3.136. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \b15..
  Creating internal representation of mux trees.
  No muxes found in this module.
Removed 0 multiplexer ports.

yosys> opt_reduce

3.137. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \b15.
Performed a total of 0 changes.

yosys> opt_merge

3.138. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\b15'.
<suppressed ~27 debug messages>
Removed a total of 9 cells.

yosys> opt_share

3.139. Executing OPT_SHARE pass.

yosys> opt_dff -nosdff -sat

3.140. Executing OPT_DFF pass (perform DFF optimizations).
Adding EN signal on $abc$43196$auto$blifparse.cc:362:parse_blif$43201 ($_DFFE_PP0P_) from module b15 (D = $abc$21237$auto$bmuxmap.cc:58:execute$1648[20], Q = $abc$43196$lo04).
Adding EN signal on $abc$43196$auto$blifparse.cc:362:parse_blif$43198 ($_DFFE_PP0P_) from module b15 (D = $abc$21237$auto$bmuxmap.cc:58:execute$1648[4], Q = $abc$43196$lo01).

yosys> opt_clean

3.141. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \b15..
Removed 0 unused cells and 18 unused wires.
<suppressed ~1 debug messages>

yosys> opt_expr

3.142. Executing OPT_EXPR pass (perform const folding).
Optimizing module b15.
<suppressed ~8 debug messages>

yosys> opt_muxtree

3.143. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \b15..
  Creating internal representation of mux trees.
  No muxes found in this module.
Removed 0 multiplexer ports.

yosys> opt_reduce

3.144. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \b15.
Performed a total of 0 changes.

yosys> opt_merge

3.145. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\b15'.
<suppressed ~30 debug messages>
Removed a total of 10 cells.

yosys> opt_share

3.146. Executing OPT_SHARE pass.

yosys> opt_dff -nosdff -sat

3.147. Executing OPT_DFF pass (perform DFF optimizations).

yosys> opt_clean

3.148. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \b15..
Removed 0 unused cells and 11 unused wires.
<suppressed ~1 debug messages>

yosys> opt_expr

3.149. Executing OPT_EXPR pass (perform const folding).
Optimizing module b15.

yosys> opt_muxtree

3.150. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \b15..
  Creating internal representation of mux trees.
  No muxes found in this module.
Removed 0 multiplexer ports.

yosys> opt_reduce

3.151. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \b15.
Performed a total of 0 changes.

yosys> opt_merge

3.152. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\b15'.
Removed a total of 0 cells.

yosys> opt_share

3.153. Executing OPT_SHARE pass.

yosys> opt_dff -nosdff -sat

3.154. Executing OPT_DFF pass (perform DFF optimizations).

yosys> opt_clean

3.155. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \b15..

yosys> opt_expr

3.156. Executing OPT_EXPR pass (perform const folding).
Optimizing module b15.
MAX OPT ITERATION = 4

yosys> bmuxmap

3.157. Executing BMUXMAP pass.

yosys> demuxmap

3.158. Executing DEMUXMAP pass.

yosys> clean_zerowidth

yosys> abc -script /tmp/yosys_OrHbxq/abc_tmp_1.scr

3.159. Executing ABC pass (technology mapping using ABC).

3.159.1. Extracting gate netlist of module `\b15' to `<abc-temp-dir>/input.blif'..
Extracted 5499 gates and 6060 wires to a netlist network with 559 inputs and 612 outputs.

3.159.1.1. Executing ABC.
DE:   #PIs = 559  #Luts =  1763  Max Lvl =  11  Avg Lvl =   5.49  [   0.32 sec. at Pass 0]{firstMap}
DE:   #PIs = 559  #Luts =  1520  Max Lvl =  14  Avg Lvl =   6.69  [  10.70 sec. at Pass 1]{initMapFlow}
DE:   #PIs = 559  #Luts =  1489  Max Lvl =  14  Avg Lvl =   5.76  [   2.09 sec. at Pass 2]{map}
DE:   #PIs = 559  #Luts =  1484  Max Lvl =  14  Avg Lvl =   5.81  [   5.02 sec. at Pass 3]{postMap}
DE:   #PIs = 559  #Luts =  1481  Max Lvl =  14  Avg Lvl =   6.19  [   4.32 sec. at Pass 4]{map}
DE:   #PIs = 559  #Luts =  1479  Max Lvl =  12  Avg Lvl =   5.84  [   7.01 sec. at Pass 5]{postMap}
DE:   #PIs = 559  #Luts =  1471  Max Lvl =  12  Avg Lvl =   6.12  [   4.25 sec. at Pass 6]{map}
DE:   #PIs = 559  #Luts =  1465  Max Lvl =  12  Avg Lvl =   6.03  [   5.84 sec. at Pass 7]{postMap}
DE:   #PIs = 559  #Luts =  1459  Max Lvl =  12  Avg Lvl =   5.93  [   4.38 sec. at Pass 8]{map}
DE:   #PIs = 559  #Luts =  1451  Max Lvl =  13  Avg Lvl =   6.07  [   5.60 sec. at Pass 9]{postMap}
DE:   #PIs = 559  #Luts =  1445  Max Lvl =  14  Avg Lvl =   6.29  [   4.54 sec. at Pass 10]{map}
DE:   #PIs = 559  #Luts =  1433  Max Lvl =  14  Avg Lvl =   6.12  [   6.15 sec. at Pass 11]{postMap}
DE:   #PIs = 559  #Luts =  1433  Max Lvl =  14  Avg Lvl =   6.12  [   3.87 sec. at Pass 12]{map}
DE:   #PIs = 559  #Luts =  1430  Max Lvl =  12  Avg Lvl =   6.13  [   6.79 sec. at Pass 13]{postMap}
DE:   #PIs = 559  #Luts =  1430  Max Lvl =  12  Avg Lvl =   6.13  [   5.10 sec. at Pass 14]{map}
DE:   #PIs = 559  #Luts =  1426  Max Lvl =  12  Avg Lvl =   6.17  [   8.25 sec. at Pass 15]{postMap}
DE:   #PIs = 559  #Luts =  1426  Max Lvl =  12  Avg Lvl =   6.17  [   4.15 sec. at Pass 16]{map}
DE:   #PIs = 559  #Luts =  1426  Max Lvl =  12  Avg Lvl =   6.17  [   6.91 sec. at Pass 17]{postMap}
DE:   #PIs = 559  #Luts =  1426  Max Lvl =  12  Avg Lvl =   6.17  [   2.82 sec. at Pass 18]{map}
DE:   #PIs = 559  #Luts =  1424  Max Lvl =  13  Avg Lvl =   6.05  [   0.90 sec. at Pass 19]{finalMap}

yosys> opt_expr

3.160. Executing OPT_EXPR pass (perform const folding).
Optimizing module b15.

yosys> opt_merge -nomux

3.161. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\b15'.
Removed a total of 0 cells.

yosys> opt_muxtree

3.162. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \b15..
  Creating internal representation of mux trees.
  No muxes found in this module.
Removed 0 multiplexer ports.

yosys> opt_reduce

3.163. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \b15.
Performed a total of 0 changes.

yosys> opt_merge

3.164. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\b15'.
Removed a total of 0 cells.

yosys> opt_share

3.165. Executing OPT_SHARE pass.

yosys> opt_dff -nosdff -nodffe

3.166. Executing OPT_DFF pass (perform DFF optimizations).
Removing always-active EN on $abc$39544$auto$blifparse.cc:362:parse_blif$39548 ($_DFFE_PP0P_) from module b15.
Removing always-active EN on $abc$39544$auto$blifparse.cc:362:parse_blif$39547 ($_DFFE_PP0P_) from module b15.
Removing always-active EN on $abc$39544$auto$blifparse.cc:362:parse_blif$39546 ($_DFFE_PP0P_) from module b15.
Removing always-active EN on $abc$39544$auto$blifparse.cc:362:parse_blif$39545 ($_DFFE_PP0P_) from module b15.

yosys> opt_clean

3.167. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \b15..
Removed 0 unused cells and 5837 unused wires.
<suppressed ~3 debug messages>

yosys> opt_expr

3.168. Executing OPT_EXPR pass (perform const folding).
Optimizing module b15.
MAX OPT ITERATION = 1

yosys> opt_ffinv

3.169. Executing OPT_FFINV pass (push inverters through FFs).
Discovering LUTs.
Pushed 3 inverters.

yosys> stat

3.170. Printing statistics.

=== b15 ===

   Number of wires:               1569
   Number of wire bits:           2513
   Number of public wires:          32
   Number of public wire bits:     294
   Number of memories:               0
   Number of memory bits:            0
   Number of processes:              0
   Number of cells:               2022
     $_DFFE_PP0P_                  400
     $_DFFE_PP1P_                    3
     $_DFF_PP0_                     10
     $lut                         1421
     adder_carry                   188


yosys> shregmap -minlen 8 -maxlen 20

3.171. Executing SHREGMAP pass (map shift registers).
Converted 0 dff cells into 0 shift registers.

yosys> dfflegalize -cell $_DFF_?_ 0 -cell $_DFF_???_ 0 -cell $_DFFE_????_ 0 -cell $_DFFSR_???_ 0 -cell $_DFFSRE_????_ 0 -cell $_DLATCHSR_PPP_ 0

3.172. Executing DFFLEGALIZE pass (convert FFs to types supported by the target).

yosys> stat

3.173. Printing statistics.

=== b15 ===

   Number of wires:               1569
   Number of wire bits:           2513
   Number of public wires:          32
   Number of public wire bits:     294
   Number of memories:               0
   Number of memory bits:            0
   Number of processes:              0
   Number of cells:               2022
     $_DFFE_PP0P_                  400
     $_DFFE_PP1P_                    3
     $_DFF_PP0_                     10
     $lut                         1421
     adder_carry                   188


yosys> techmap -map +/techmap.v -map +/rapidsilicon/genesis/ffs_map.v

3.174. Executing TECHMAP pass (map to technology primitives).

3.174.1. Executing Verilog-2005 frontend: /nfs_scratch/scratch/Vorak/aram/Workspace/Raptor/yosys_verific_rs/yosys/install/bin/../share/yosys/techmap.v
Parsing Verilog input from `/nfs_scratch/scratch/Vorak/aram/Workspace/Raptor/yosys_verific_rs/yosys/install/bin/../share/yosys/techmap.v' to AST representation.
Generating RTLIL representation for module `\_90_simplemap_bool_ops'.
Generating RTLIL representation for module `\_90_simplemap_reduce_ops'.
Generating RTLIL representation for module `\_90_simplemap_logic_ops'.
Generating RTLIL representation for module `\_90_simplemap_compare_ops'.
Generating RTLIL representation for module `\_90_simplemap_various'.
Generating RTLIL representation for module `\_90_simplemap_registers'.
Generating RTLIL representation for module `\_90_shift_ops_shr_shl_sshl_sshr'.
Generating RTLIL representation for module `\_90_shift_shiftx'.
Generating RTLIL representation for module `\_90_fa'.
Generating RTLIL representation for module `\_90_lcu'.
Generating RTLIL representation for module `\_90_alu'.
Generating RTLIL representation for module `\_90_macc'.
Generating RTLIL representation for module `\_90_alumacc'.
Generating RTLIL representation for module `\$__div_mod_u'.
Generating RTLIL representation for module `\$__div_mod_trunc'.
Generating RTLIL representation for module `\_90_div'.
Generating RTLIL representation for module `\_90_mod'.
Generating RTLIL representation for module `\$__div_mod_floor'.
Generating RTLIL representation for module `\_90_divfloor'.
Generating RTLIL representation for module `\_90_modfloor'.
Generating RTLIL representation for module `\_90_pow'.
Generating RTLIL representation for module `\_90_pmux'.
Generating RTLIL representation for module `\_90_demux'.
Generating RTLIL representation for module `\_90_lut'.
Successfully finished Verilog frontend.

3.174.2. Executing Verilog-2005 frontend: /nfs_scratch/scratch/Vorak/aram/Workspace/Raptor/yosys_verific_rs/yosys/install/bin/../share/yosys/rapidsilicon/genesis/ffs_map.v
Parsing Verilog input from `/nfs_scratch/scratch/Vorak/aram/Workspace/Raptor/yosys_verific_rs/yosys/install/bin/../share/yosys/rapidsilicon/genesis/ffs_map.v' to AST representation.
Generating RTLIL representation for module `\$_DFF_P_'.
Generating RTLIL representation for module `\$_DFF_PP0_'.
Generating RTLIL representation for module `\$_DFF_PN0_'.
Generating RTLIL representation for module `\$_DFF_PP1_'.
Generating RTLIL representation for module `\$_DFF_PN1_'.
Generating RTLIL representation for module `\$_DFFE_PP_'.
Generating RTLIL representation for module `\$_DFFE_PN_'.
Generating RTLIL representation for module `\$_DFFE_PP0P_'.
Generating RTLIL representation for module `\$_DFFE_PP0N_'.
Generating RTLIL representation for module `\$_DFFE_PN0P_'.
Generating RTLIL representation for module `\$_DFFE_PN0N_'.
Generating RTLIL representation for module `\$_DFFE_PP1P_'.
Generating RTLIL representation for module `\$_DFFE_PP1N_'.
Generating RTLIL representation for module `\$_DFFE_PN1P_'.
Generating RTLIL representation for module `\$_DFFE_PN1N_'.
Generating RTLIL representation for module `\$_DFFSR_PPP_'.
Generating RTLIL representation for module `\$_DFFSR_PNP_'.
Generating RTLIL representation for module `\$_DFFSR_PNN_'.
Generating RTLIL representation for module `\$_DFFSR_PPN_'.
Generating RTLIL representation for module `\$_DFFSR_NPP_'.
Generating RTLIL representation for module `\$_DFFSR_NNP_'.
Generating RTLIL representation for module `\$_DFFSR_NNN_'.
Generating RTLIL representation for module `\$_DFFSR_NPN_'.
Generating RTLIL representation for module `\$_DFFSRE_PPPP_'.
Generating RTLIL representation for module `\$_DFFSRE_PNPP_'.
Generating RTLIL representation for module `\$_DFFSRE_PPNP_'.
Generating RTLIL representation for module `\$_DFFSRE_PNNP_'.
Generating RTLIL representation for module `\$_DFFSRE_PPPN_'.
Generating RTLIL representation for module `\$_DFFSRE_PNPN_'.
Generating RTLIL representation for module `\$_DFFSRE_PPNN_'.
Generating RTLIL representation for module `\$_DFFSRE_PNNN_'.
Generating RTLIL representation for module `\$_DLATCHSR_PPP_'.
Generating RTLIL representation for module `\$_DLATCHSR_NPP_'.
Generating RTLIL representation for module `\$_DFF_N_'.
Generating RTLIL representation for module `\$_DFF_NP0_'.
Generating RTLIL representation for module `\$_DFF_NN0_'.
Generating RTLIL representation for module `\$_DFF_NP1_'.
Generating RTLIL representation for module `\$_DFF_NN1_'.
Generating RTLIL representation for module `\$_DFFE_NP_'.
Generating RTLIL representation for module `\$_DFFE_NN_'.
Generating RTLIL representation for module `\$_DFFE_NP0P_'.
Generating RTLIL representation for module `\$_DFFE_NP0N_'.
Generating RTLIL representation for module `\$_DFFE_NN0P_'.
Generating RTLIL representation for module `\$_DFFE_NN0N_'.
Generating RTLIL representation for module `\$_DFFE_NP1P_'.
Generating RTLIL representation for module `\$_DFFE_NP1N_'.
Generating RTLIL representation for module `\$_DFFE_NN1P_'.
Generating RTLIL representation for module `\$_DFFE_NN1N_'.
Generating RTLIL representation for module `\$_DFFSRE_NPPP_'.
Generating RTLIL representation for module `\$_DFFSRE_NNPP_'.
Generating RTLIL representation for module `\$_DFFSRE_NPNP_'.
Generating RTLIL representation for module `\$_DFFSRE_NNNP_'.
Generating RTLIL representation for module `\$_DFFSRE_NPPN_'.
Generating RTLIL representation for module `\$_DFFSRE_NNPN_'.
Generating RTLIL representation for module `\$_DFFSRE_NPNN_'.
Generating RTLIL representation for module `\$_DFFSRE_NNNN_'.
Generating RTLIL representation for module `\$__SHREG_DFF_P_'.
Generating RTLIL representation for module `\$_SDFF_PP0_'.
Generating RTLIL representation for module `\$_SDFF_PN0_'.
Generating RTLIL representation for module `\$_SDFF_NP0_'.
Generating RTLIL representation for module `\$_SDFF_NN0_'.
Generating RTLIL representation for module `\$_SDFF_PP1_'.
Generating RTLIL representation for module `\$_SDFF_PN1_'.
Generating RTLIL representation for module `\$_SDFF_NP1_'.
Generating RTLIL representation for module `\$_SDFF_NN1_'.
Successfully finished Verilog frontend.

3.174.3. Continuing TECHMAP pass.
Using extmapper simplemap for cells of type $lut.
Using template \$_DFFE_PP0P_ for cells of type $_DFFE_PP0P_.
Using template \$_DFF_PP0_ for cells of type $_DFF_PP0_.
Using template \$_DFFE_PP1P_ for cells of type $_DFFE_PP1P_.
Using extmapper simplemap for cells of type $logic_not.
No more expansions possible.
<suppressed ~2383 debug messages>

yosys> opt_expr -mux_undef

3.175. Executing OPT_EXPR pass (perform const folding).
Optimizing module b15.
<suppressed ~34516 debug messages>

yosys> simplemap

3.176. Executing SIMPLEMAP pass (map simple cells to gate primitives).

yosys> opt_expr

3.177. Executing OPT_EXPR pass (perform const folding).
Optimizing module b15.

yosys> opt_merge

3.178. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\b15'.
<suppressed ~14481 debug messages>
Removed a total of 4827 cells.

yosys> opt_dff -nodffe -nosdff

3.179. Executing OPT_DFF pass (perform DFF optimizations).

yosys> opt_clean

3.180. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \b15..
Removed 1 unused cells and 5636 unused wires.
<suppressed ~2 debug messages>

yosys> opt_expr

3.181. Executing OPT_EXPR pass (perform const folding).
Optimizing module b15.
<suppressed ~1160 debug messages>

yosys> opt_merge -nomux

3.182. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\b15'.
<suppressed ~33 debug messages>
Removed a total of 11 cells.

yosys> opt_muxtree

3.183. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \b15..
  Creating internal representation of mux trees.
  No muxes found in this module.
Removed 0 multiplexer ports.

yosys> opt_reduce

3.184. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \b15.
Performed a total of 0 changes.

yosys> opt_merge

3.185. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\b15'.
Removed a total of 0 cells.

yosys> opt_share

3.186. Executing OPT_SHARE pass.

yosys> opt_dff -nosdff -nodffe

3.187. Executing OPT_DFF pass (perform DFF optimizations).

yosys> opt_clean

3.188. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \b15..
Removed 0 unused cells and 261 unused wires.
<suppressed ~1 debug messages>

yosys> opt_expr

3.189. Executing OPT_EXPR pass (perform const folding).
Optimizing module b15.
MAX OPT ITERATION = 1

yosys> abc -script /tmp/yosys_OrHbxq/abc_tmp_2.scr

3.190. Executing ABC pass (technology mapping using ABC).

3.190.1. Extracting gate netlist of module `\b15' to `<abc-temp-dir>/input.blif'..
Extracted 5345 gates and 5906 wires to a netlist network with 559 inputs and 608 outputs.

3.190.1.1. Executing ABC.
DE:   #PIs = 559  #Luts =  1429  Max Lvl =   9  Avg Lvl =   4.68  [   0.46 sec. at Pass 0]{firstMap}
DE:   #PIs = 559  #Luts =  1429  Max Lvl =   9  Avg Lvl =   4.68  [  12.18 sec. at Pass 1]{initMapFlow}
DE:   #PIs = 559  #Luts =  1427  Max Lvl =  13  Avg Lvl =   6.24  [   1.87 sec. at Pass 2]{map}
DE:   #PIs = 559  #Luts =  1427  Max Lvl =  13  Avg Lvl =   6.24  [   5.70 sec. at Pass 3]{postMap}
DE:   #PIs = 559  #Luts =  1418  Max Lvl =  14  Avg Lvl =   6.16  [   3.40 sec. at Pass 4]{map}
DE:   #PIs = 559  #Luts =  1418  Max Lvl =  13  Avg Lvl =   6.55  [  11.07 sec. at Pass 5]{postMap}
DE:   #PIs = 559  #Luts =  1414  Max Lvl =  13  Avg Lvl =   6.57  [   5.51 sec. at Pass 6]{map}
DE:   #PIs = 559  #Luts =  1407  Max Lvl =  14  Avg Lvl =   6.35  [   7.82 sec. at Pass 7]{postMap}
DE:   #PIs = 559  #Luts =  1397  Max Lvl =  14  Avg Lvl =   6.43  [   2.56 sec. at Pass 8]{map}
DE:   #PIs = 559  #Luts =  1397  Max Lvl =  14  Avg Lvl =   6.43  [   6.20 sec. at Pass 9]{postMap}
DE:   #PIs = 559  #Luts =  1396  Max Lvl =  13  Avg Lvl =   6.67  [   3.47 sec. at Pass 10]{map}
DE:   #PIs = 559  #Luts =  1391  Max Lvl =  13  Avg Lvl =   6.47  [   4.97 sec. at Pass 11]{postMap}
DE:   #PIs = 559  #Luts =  1391  Max Lvl =  13  Avg Lvl =   6.47  [   3.73 sec. at Pass 12]{map}
DE:   #PIs = 559  #Luts =  1382  Max Lvl =  13  Avg Lvl =   6.78  [   9.03 sec. at Pass 13]{postMap}
DE:   #PIs = 559  #Luts =  1382  Max Lvl =  13  Avg Lvl =   6.78  [   4.28 sec. at Pass 14]{map}
DE:   #PIs = 559  #Luts =  1382  Max Lvl =  13  Avg Lvl =   6.78  [   7.83 sec. at Pass 15]{postMap}
DE:   #PIs = 559  #Luts =  1378  Max Lvl =  13  Avg Lvl =   6.25  [   4.95 sec. at Pass 16]{map}
DE:   #PIs = 559  #Luts =  1378  Max Lvl =  13  Avg Lvl =   6.25  [   6.40 sec. at Pass 17]{postMap}
DE:   #PIs = 559  #Luts =  1376  Max Lvl =  13  Avg Lvl =   6.23  [   6.25 sec. at Pass 18]{map}
DE:   #PIs = 559  #Luts =  1376  Max Lvl =  13  Avg Lvl =   6.23  [   9.04 sec. at Pass 19]{postMap}
DE:   #PIs = 559  #Luts =  1373  Max Lvl =  13  Avg Lvl =   6.56  [   4.69 sec. at Pass 20]{map}
DE:   #PIs = 559  #Luts =  1371  Max Lvl =  13  Avg Lvl =   6.49  [   5.48 sec. at Pass 21]{postMap}
DE:   #PIs = 559  #Luts =  1371  Max Lvl =  12  Avg Lvl =   6.21  [   3.90 sec. at Pass 22]{map}
DE:   #PIs = 559  #Luts =  1367  Max Lvl =  13  Avg Lvl =   6.65  [   5.38 sec. at Pass 23]{postMap}
DE:   #PIs = 559  #Luts =  1365  Max Lvl =  13  Avg Lvl =   6.58  [   3.08 sec. at Pass 24]{map}
DE:   #PIs = 559  #Luts =  1360  Max Lvl =  13  Avg Lvl =   6.24  [   5.65 sec. at Pass 25]{postMap}
DE:   #PIs = 559  #Luts =  1360  Max Lvl =  13  Avg Lvl =   6.24  [   2.68 sec. at Pass 26]{map}
DE:   #PIs = 559  #Luts =  1360  Max Lvl =  13  Avg Lvl =   6.24  [   3.90 sec. at Pass 27]{postMap}
DE:   #PIs = 559  #Luts =  1357  Max Lvl =  14  Avg Lvl =   6.64  [   2.97 sec. at Pass 28]{map}
DE:   #PIs = 559  #Luts =  1356  Max Lvl =  14  Avg Lvl =   6.43  [   6.49 sec. at Pass 29]{postMap}
DE:   #PIs = 559  #Luts =  1355  Max Lvl =  14  Avg Lvl =   6.57  [   3.73 sec. at Pass 30]{map}
DE:   #PIs = 559  #Luts =  1355  Max Lvl =  14  Avg Lvl =   6.57  [   5.32 sec. at Pass 31]{postMap}
DE:   #PIs = 559  #Luts =  1352  Max Lvl =  13  Avg Lvl =   6.14  [   4.19 sec. at Pass 32]{map}
DE:   #PIs = 559  #Luts =  1352  Max Lvl =  13  Avg Lvl =   6.14  [   7.06 sec. at Pass 33]{postMap}
DE:   #PIs = 559  #Luts =  1351  Max Lvl =  13  Avg Lvl =   6.62  [   4.08 sec. at Pass 34]{map}
DE:   #PIs = 559  #Luts =  1351  Max Lvl =  13  Avg Lvl =   6.62  [   5.61 sec. at Pass 35]{postMap}
DE:   #PIs = 559  #Luts =  1351  Max Lvl =  13  Avg Lvl =   6.62  [   3.43 sec. at Pass 36]{map}
DE:   #PIs = 559  #Luts =  1348  Max Lvl =  13  Avg Lvl =   6.18  [   4.52 sec. at Pass 37]{postMap}
DE:   #PIs = 559  #Luts =  1348  Max Lvl =  13  Avg Lvl =   6.18  [   4.48 sec. at Pass 38]{map}
DE:   #PIs = 559  #Luts =  1343  Max Lvl =  13  Avg Lvl =   6.46  [   5.90 sec. at Pass 39]{postMap}
DE:   #PIs = 559  #Luts =  1343  Max Lvl =  13  Avg Lvl =   6.46  [   3.49 sec. at Pass 40]{map}
DE:   #PIs = 559  #Luts =  1343  Max Lvl =  13  Avg Lvl =   6.46  [   5.43 sec. at Pass 41]{postMap}
DE:   #PIs = 559  #Luts =  1341  Max Lvl =  13  Avg Lvl =   6.33  [   3.26 sec. at Pass 42]{map}
DE:   #PIs = 559  #Luts =  1336  Max Lvl =  13  Avg Lvl =   6.25  [   4.62 sec. at Pass 43]{postMap}
DE:   #PIs = 559  #Luts =  1336  Max Lvl =  13  Avg Lvl =   6.25  [   3.52 sec. at Pass 44]{map}
DE:   #PIs = 559  #Luts =  1336  Max Lvl =  13  Avg Lvl =   6.25  [   5.25 sec. at Pass 45]{postMap}
DE:   #PIs = 559  #Luts =  1336  Max Lvl =  13  Avg Lvl =   6.25  [   3.09 sec. at Pass 46]{map}
DE:   #PIs = 559  #Luts =  1332  Max Lvl =  13  Avg Lvl =   6.22  [   0.73 sec. at Pass 47]{finalMap}

yosys> opt_expr

3.191. Executing OPT_EXPR pass (perform const folding).
Optimizing module b15.

yosys> opt_merge -nomux

3.192. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\b15'.
Removed a total of 0 cells.

yosys> opt_muxtree

3.193. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \b15..
  Creating internal representation of mux trees.
  No muxes found in this module.
Removed 0 multiplexer ports.

yosys> opt_reduce

3.194. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \b15.
Performed a total of 0 changes.

yosys> opt_merge

3.195. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\b15'.
Removed a total of 0 cells.

yosys> opt_share

3.196. Executing OPT_SHARE pass.

yosys> opt_dff -nosdff -nodffe

3.197. Executing OPT_DFF pass (perform DFF optimizations).

yosys> opt_clean

3.198. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \b15..
Removed 0 unused cells and 4911 unused wires.
<suppressed ~1 debug messages>

yosys> opt_expr

3.199. Executing OPT_EXPR pass (perform const folding).
Optimizing module b15.
MAX OPT ITERATION = 1

yosys> hierarchy -check

3.200. Executing HIERARCHY pass (managing design hierarchy).

3.200.1. Analyzing design hierarchy..
Top module:  \b15

3.200.2. Analyzing design hierarchy..
Top module:  \b15
Removed 0 unused modules.

yosys> stat

3.201. Printing statistics.

=== b15 ===

   Number of wires:               1479
   Number of wire bits:           2423
   Number of public wires:          32
   Number of public wire bits:     294
   Number of memories:               0
   Number of memory bits:            0
   Number of processes:              0
   Number of cells:               1933
     $lut                         1332
     adder_carry                   188
     dffsre                        413


yosys> opt_clean -purge

3.202. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \b15..
Removed 0 unused cells and 2 unused wires.
<suppressed ~2 debug messages>

yosys> write_verilog -noattr -nohex synthesized.v

3.203. Executing Verilog backend.
Dumping module `\b15'.

End of script. Logfile hash: f861d642a2, CPU: user 34.36s system 0.30s, MEM: 129.52 MB peak
Yosys 0.18+10 (git sha1 7361c89db, gcc 9.4.0-1ubuntu1~20.04.1 -fPIC -Os)
Time spent: 98% 6x abc (1918 sec), 0% 29x opt_dff (9 sec), ...
real 412.23
user 1827.74
sys 119.57
